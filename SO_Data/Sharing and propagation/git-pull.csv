Post Link,User Link,CreationDate,Score,ViewCount,Tags,Title,Body,CommentCount,OwnerUserId,AnswerCount,FavoriteCount
"292357","6068","2008-11-15 09:51:09","13636","3379961","<git><version-control><git-pull><git-fetch>","What is the difference between 'git pull' and 'git fetch'?","<p>What are the differences between <a href=""https://git-scm.com/docs/git-pull"" rel=""noreferrer""><code>git pull</code></a> and <a href=""https://git-scm.com/docs/git-fetch"" rel=""noreferrer""><code>git fetch</code></a>?</p>
","7","6068","0","0"
"57655911","5078576","2019-08-26 10:13:58","1","127","<git><version-control><git-pull><git-reset>","Undo git pull, how to bring repos to old state (once again)","<p><strong>Please note</strong>, before indicating the question as a duplicate, that I have read the answer <a href=""https://stackoverflow.com/questions/1223354/undo-git-pull-how-to-bring-repos-to-old-state"">here</a> but, with the solution proposed, I will delete all the uncommitted changes. </p>

<p><strong>Problem</strong>:</p>

<p>I have developed new features using a dedicated branch. In the meanwhile, the master branch continued to be developed by others. I decided to do a <code>git pull</code> in order to rebase my code to the new one. However, there were conflicts: somebody has improved the code on the remote repo.</p>

<p><strong>Question</strong>:</p>

<ol>
<li>I have some uncommitted changes on my local repo. How can I bring the repo to the old state with the old uncommitted changes?</li>
<li>Did I already lose forever all the uncommitted changes?</li>
</ol>
","7","5078576","",""
"38574661","6027000","2016-07-25 18:08:19","0","36","<github><git-branch><git-push><git-pull><git-fork>","github forked repository: How to pull the changes from forkedrepo/branch to orignalrepo/<Create-new-branch>","<p>UserA Original Repository Creator:  No branches. Master only. <br>
UserB Forks the repository and makes some changes and creates a new branch and puts the changes into github.com/<strong>userB</strong>/repo-name/newbranch-name</p>

<p>How can userA ,</p>

<ol>
<li>pull the changes from github.com/<strong>userB</strong>/repo-name/newbranch-name
and   </li>
<li>put into a new branch with the same name as of userB ....that
    is, github.com/<strong>userA</strong>/repo-name/newbranch-name</li>
</ol>

<p><strong>Some info on current scenario</strong> <br>
UserB(forked user) is not available to push those changes - the question is not ""how can I get  to do something"" but ""how can I do something myself"" without requesting userB to push the changes to UserA (Original repo creator)
<br> In addition, UserA  doesnt want to merge this to MASTER. 
<br> UserA prefers to put these changes in a new branch. <strong><em>i.e.</em></strong> <strong>github.com/UserA/repo-name/{create-new-branch}</strong></p>
","0","6027000","",""
"66130157","12788169","2021-02-10 02:35:34","0","146","<git><branch><git-pull><pull><merge-conflict-resolution>","How to ""git pull"" leaving unfinished branch","<p>I created &quot;branch A&quot; and was working on it. I sent a pull request to the main branch, however, my pull request was not able to merge into the main as my code has to be modified a bit more. It's left as a draft, waiting for fixes/ commit.</p>
<p>Now, I wanted to switch to the main branch and work on different issues and come back to &quot;branch A&quot; later. I switched to the main then</p>
<pre><code>git pull
</code></pre>
<p>However, I received</p>
<pre><code>error: Pulling is not possible because you have unmerged files.
hint: Fix them up in the work tree, and then use 'git add/rm &lt;file&gt;'
hint: as appropriate to mark resolution and make a commit.
</code></pre>
<p>Is there any way that I can just leave my current work on &quot;branch A&quot;, and work on the main and go back to &quot;branch A&quot; later? Do I set &quot;branch A&quot; as remote?</p>
","0","12788169","",""
"15333742","1541018","2013-03-11 08:04:39","0","2059","<git><github><git-pull>","git pull already up to date but head is not detached","<p>Reading the title I know you would be pretty shocked as in why I am sure about head not being detached. I am not very used to GIT. There has been a change in the original repo I have made my clone from named upstream. I am trying to pull those changes by git pull, which says, Already up to date.
I did,</p>

<pre><code>git branch -r

origin/HEAD -&gt; origin/master
origin/master
upstream/branchName
upstream/master
</code></pre>

<p>So my head is at origin master, which I think is fine.
And doing,</p>

<pre><code>cat .git/HEAD
</code></pre>

<p>gives</p>

<pre><code>ref: refs/heads/master
</code></pre>

<p>All over Stack I see people referring it to a detached head problem. But I think that's not the case with me.<br/>
I had done a git fetch upstream yesterday which showed me compressing files and everything. But when I opened the repo in my editor I dont see any new changes fetched.</p>
","7","1541018","",""
"37446550","5209224","2016-05-25 20:00:48","2","963","<git><github><git-pull><pull-request><git-fork>","Can I make a pull request after a git clone?","<p>Do I have to fork a repo in order to make a pull request? Below is my current understanding of the repo sharing and updating process:</p>

<ol>
<li>I fork a shared repo on GitHub which makes my own repo on GitHub</li>
<li>I clone from my own repo on GitHub, which gives me a local repo</li>
<li>I make a new branch ""test"" on local repo (which I believe will make a test branch on my remote repo on GitHub too?)</li>
<li>I make changes to working directory, add, commit, and push to remote</li>
<li>I go back onto GitHub to my repo and then make a pull request through the GUI on GitHub.</li>
</ol>

<p>Instead of the above, is there anyway I can just clone from the shared repo and make a pull request straight from the terminal? Or do I have to go through forking and going through GitHub's GUI?</p>
","0","5209224","",""
"76229616","5317332","2023-05-11 16:08:28","0","40","<git><github><cicd><git-pull>","How to force overwrite changes on a specific file every git pull?","<p>On GitHub I have an action that creates, automatically at every commit, a file with the latest news.</p>
<p>It happens that the editor to visualize the file can change it with some metadata, formatting tabs and so on.</p>
<p>This cause that frequently when I pull code, I have this error:</p>
<pre><code>$ git pull
remote: Enumerating objects: 23, done.
remote: Counting objects: 100% (23/23), done.
remote: Compressing objects: 100% (11/11), done.
remote: Total 23 (delta 12), reused 23 (delta 12), pack-reused 0
Unpacking objects: 100% (23/23), 3.87 KiB | 3.00 KiB/s, done.
From github.com:&lt;org&gt;/&lt;repo&gt;
   7584f6c..9c9eefa  main       -&gt; origin/main
error: Your local changes to the following files would be overwritten by merge:
        news.md
Please commit your changes or stash them before you merge.
Aborting
Updating 10873f9..9c9eefa
</code></pre>
<p>and I need to stash first:</p>
<pre><code>git stash
git pull
git stash apply
</code></pre>
<p>but this is very annoying because it may happen frequently (every time I need to pull).</p>
<p>I cannot find a solution that help me on that. Is it possible to overwrite changes during the pull automaticaly for the specific file?</p>
","2","5317332","",""
"76244023","818112","2023-05-13 17:15:48","0","36","<git><git-push><git-pull>","How do I configure git so I can just push a branch?","<p>Here's what I want:</p>
<pre><code>git checkout -b mybranch
&lt;make changes&gt;
git commit -m'changes'
git push
</code></pre>
<p>The branch I just created with the changes I made to exist on the remote origin. Furthermore, when I later pull, it should pull the same branch.</p>
<p>My current settings:</p>
<pre><code>[push]
    default = current
[branch]
    autoSetupMerge = always
</code></pre>
<p>What do I need to do to force git to behave the way I want it to? It <em>used</em> to work with my current settings, now it just says &quot;everything up to date&quot;, which clearly it is <em><strong>not</strong></em> because this branch does not exist on the remote.</p>
<hr />
<p>Edit: Apparently <code>pull.default</code> isn't a valid setting, fine. So I removed it, but that's not causing the incorrect behavior anyway.</p>
<p>Setting <code>push.default=upstream</code> is <em><strong>DANGEROUS</strong></em> since now <code>git checkout -b &lt;newbranch&gt;</code> for some reason sets up where you branched from as the tracking branch. So if you're on <code>main</code> and create a new branch, <code>main</code> is the tracking branch. And <code>push.default=upstream</code> will merge changes to <code>main</code>. This is <em><strong>terrible</strong></em> behavior and bewilderingly <em>more</em> wrong than <code>push.default=current</code>.</p>
","2","818112","",""
"76428963","840488","2023-06-08 05:56:07","0","31","<git><git-pull><git-merge-conflict>","How can a git pull on a branch with no changes result in conflicts?","<p>So the scenario is quite basic: I did a checkout of a git repo, on branch X. Made some changes, performed a commit and pushed them, all good so far. No other changes made for 2-3 days. Afterwards I came back, ran a git status to make sure I have no changes, did a git pull origin X and I got conflicts on several files.</p>
<p>How is that possible? To be honest I have no clue what the other colleagues did on that branch in these 2-3 days (perhaps some rebase, force push, etc) but still, as long as my local clone has no changes, how can a pull result in conflicts? Can anyone explain it, perhaps with an example?</p>
","5","840488","",""
"76526148","4632019","2023-06-21 18:25:16","0","16","<git><git-pull>","Is there an option to change output format for `git pull --rebase --verbose`?","<p>When I do <code>git pull --rebase --verbose</code> I see the line in an output:</p>
<pre><code>...
Changes from 4baabb8df936e34958ae4076dccdab6634e4d33b to d404ec36565ad5dd2f476ec7a11f9428e377925d
...
</code></pre>
<p>Is there an option to show changes in <code>4baabb8d..d404ec365</code> format?</p>
","0","4632019","",""
"19441027","263268","2013-10-18 03:19:52","2","323","<git><git-merge><git-pull>","Can git merge/pull detect when ""local changes"" are the same as an incoming merge conflict?","<p>I run into this sometimes:</p>

<ol>
<li>On server, <code>git clone myrepo</code></li>
<li>Change <code>foo.sh</code> on machine 1 to solve some problem.</li>
<li>It works, so replicate the change on my development machine.</li>
<li>On dev machine, <code>git add foo.sh</code>, <code>git commit</code>, <code>git push</code></li>
<li><p>On server, <code>git pull</code></p>

<pre><code>remote: Counting objects: 1, done.
remote: Compressing objects: 100% (1/1), done.
remote: Total 5 (delta 4), reused 5 (delta 4)
Unpacking objects: 100% (5/5), done.
From ...
   c78..e4d  master     -&gt; origin/master
Updating c78..e4d
error: Your local changes to the following files would be overwritten by merge:
    foo.sh

Please, commit your changes or stash them before you can merge.
Aborting
</code></pre></li>
</ol>

<p>Is there a way that Git could be a bit smarter, and notice that the ""local changes"" are identical to the merge changes? Obviously I could simply <code>git reset --hard</code>', but I'd like to double check that the changes I've made remotely really are the same.</p>
","0","263268","0","0"
"2665045","91","2010-04-19 03:24:34","28","22247","<git><git-pull>","Can I tell git pull to overwrite instead of merge?","<p>As far as I see, <code>git pull someRemote master</code> tries to merge the remote branch into mine.</p>

<p>Is there a way to say ""Completely discard my stuff, just make me another clone of the remote"" using git pull? I still want to keep my own repository and keep it's history, but I want to have a 1:1 copy of someRemote's master branch after that command.</p>

<p>To clarify, imagine there are 2 repositories, RM and MY. Numbers are commits, and this assumes only one branch (master).</p>

<pre>
RM1 --- RM2 --- RM3 --- RM4 --- RM5 --- RM6 ...
|                        |
+-> MY1 --- MY2 --- MY3 -+-> MY4 --- MY5 --- MY6 ...
</pre>

<p>So I start my own repository as a clone of RM1. Then I develop happily and RM develops happily, but we never share our work. After MY3 I realize that my branch isn't that great but that RM4 is pretty good. So I want to <code>git pull</code> RM4 into MY. However, I don't want my changes in MY1-3 to persist, I want MY4 be a 1:1 copy of RM4.</p>

<p>However, I want to keep my history, ideally I would like to have a change set between MY3 and RM4 or between MY3 and RM2-4.</p>

<p>It should still stay my repository.</p>

<p>Is that possible?</p>

<p>(This is for GitHub projects where I may fork a project, experiment a bit, leave it alone for a few weeks but then want to update it without keeping my changes. At the moment I delete my fork and re-fork, which isn't the best approach.)</p>
","0","91","0","0"
"40602721","1175080","2016-11-15 05:34:39","1","1102","<git><git-merge><git-pull><git-fork><git-fetch>","Syncing fork with upstream: git fetch + git checkout + git merge vs. git checkout + git pull","<p>The documentation at <a href=""https://help.github.com/articles/syncing-a-fork/"" rel=""nofollow noreferrer"">Github-Help: Syncing a Fork</a> shows three commands to keep my GitHub fork in sync with the upstream repo.</p>

<pre><code>git fetch upstream
git checkout master
git merge upstream/master
</code></pre>

<p>Can I use the following two commands instead of the above three?</p>

<pre><code>git checkout master
git pull upstream/master
</code></pre>

<p>Are the two sets of commands equivalent, or are there differences between them?</p>
","4","1175080","",""
"59414497","7629560","2019-12-19 17:38:19","0","80","<git><git-pull><git-fetch>","What is the reason of the existence of ""git pull --all""?","<p>Before anything, <em>I know the difference between <code>git pull</code> and <code>git fetch</code></em>.</p>

<p>However, I'd like to pull every branch at a time, and I learned that a command <code>git pull --all</code> exists, but it did not accomplish that purpose, as it fetches all branches but only merges the one I am working in with its remote (and other stackoverflow posts like <a href=""https://stackoverflow.com/a/4318198/7629560"">this</a> assured me that).</p>

<p>The documentation on <code>man git-pull</code> references the <code>git fetch</code> command and in the <code>--all</code> section says </p>

<pre><code>   Options related to fetching
   --all
       Fetch all remotes.
</code></pre>

<p>My question is, then, <strong>therotical</strong>. </p>

<p>Does it make sense to exist a <code>git pull --all</code> since its name is misleading? </p>

<p>And does it make sense to reference <code>man git-fetch</code> in a way that also misleads, since <code>git pull --all</code> is not the same as <code>git fetch --all</code> ?</p>

<p>(<em>I know this question may sound like primarily opinion based question, however maybe I can get from you an understanding of these git commands that I do not have now. And others may not have it as well.</em>)</p>
","0","7629560","",""
"3056335","","2010-06-16 19:01:49","4","12605","<git><git-pull>","Using git pull to track a remote branch without merging","<p>I am using git to track content which is changed by some people and shared ""read-only"" with others.  The ""readers"" may from time to time need to make a change, but mostly they will not.</p>

<p>I want to allow for the git ""writers"" to rebase pushed branches** if need be, and ensure that the ""readers"" never accidentally get a merge.  That's normally easy enough.</p>

<pre><code>git pull origin +master
</code></pre>

<p>There's one case that seems to cause problems.  If a reader makes a local change, the command above will <em>merge</em>.  I want pull to be fully automatic if the reader has not made local changes, while if they have made local changes, it should stop and ask for input.  I want to track any upstream changes while being careful about merging downstream changes.</p>

<p>In a way, I don't really want to pull. I want to track the master branch exactly.</p>

<hr>

<p>** (I know this is not a best practice, but it seems necessary in our case: we have one main branch that contains most of the work and some topic branches for specific customers with minor changes that need to be isolated.  It seems easiest to frequently rebase to keep the topics up to date.)</p>
","2","","0","0"
"3071667","370488","2010-06-18 17:02:54","13","5747","<git><cygwin><git-pull><git-push><git-daemon>","Unable to push to git Repository. It hangs after ""Writing Objects: 100%""","<p>I am running git daemon with the following command.</p>

<pre><code>c:\cygwin\bin\git daemon --reuseaddr --base-path=/cygdrive/S --export-all --verbose --enable=receive-pack
</code></pre>

<p>I am able to clone and pull updates but when I try to push I get </p>

<pre><code>$ git push origin master

Counting objects: 6, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (6/6)
</code></pre>

<p>, then it hangs</p>

<p>I am currently using git version 1.7.0.4</p>
","4","370488","0","0"
"59698406","1501191","2020-01-11 20:31:53","3","129","<git><git-clone><git-pull>","What is the difference between git clone --mirror and pull","<p>There really is no difference between clone and pull is my understanding. Or in other words <code>git clone -- bare</code> and <code>git pull</code> does the same. But since <code>git clone --mirror</code> updates the local references would it be different from pull ? </p>

<hr>

<p>EDIT: I mistakenly assumed git clone default is --bare. But --bare will be setup without working directory.</p>
","0","1501191","0","0"
"3357122","286802","2010-07-28 20:16:04","333","180647","<git><git-rebase><git-pull><git-fetch>","What is the difference between git pull and git fetch + git rebase?","<p><a href=""https://stackoverflow.com/questions/292357/whats-the-difference-between-git-pull-and-git-fetch"">Another question</a> says that <code>git pull</code> is like a <code>git fetch</code> + <code>git merge</code>.</p>
<p>But what is the difference between <code>git pull</code> and <code>git fetch</code> + <code>git rebase</code>?</p>
","3","286802","0","0"
"22073593","2697793","2014-02-27 15:53:27","2","1514","<git><sqlite><gitignore><git-pull>","Git pull problems with gitignore","<p>I've added my files to the gitignore:</p>

<pre><code>db/development.sqlite3
log/development.log
</code></pre>

<p>And I've removed them from tracking on both my local computer and server:</p>

<pre><code>git rm --cached db/development.sqlite3
git rm --cached log/development.log
</code></pre>

<p>Then I push from my local computer to the repo, and pull to the server using </p>

<pre><code>git pull origin master
</code></pre>

<p>and I still get this error:</p>

<pre><code>error: The following untracked working tree files would be removed by merge:
        db/development.sqlite3
        log/development.log
Please move or remove them before you can merge.
</code></pre>

<p>I do not want these files overwritten or deleted, I just want git to pull everything and ignore the existing files that store my database information.  How do I get past this?</p>
","0","2697793","0","0"
"22363400","1027004","2014-03-12 20:44:25","0","330","<git><git-push><git-pull><git-fetch>","Are git pull and push repository wide operations or branch specific?","<p>Trying to get a real handle on git : ) Is git pull a repository wide operation? Meaning, does it update your local branches (which are tracking remote branches) across the repository, or does it only fetch and merge for the currently checkedout branch?</p>

<p>Is the same true for push? What does --all do for push and pull?</p>

<p>Any help would rock!</p>

<p>Also, what does fetch do? Does it grab the info (files inside of the .git folder) for a specific branch? Or is the .git folder consistent across the whole repo? If I do fetch instead of clone, I can't really do anything after that, what do I do after fetching?</p>
","1","1027004","",""
"22491988","1780018","2014-03-18 22:03:43","2","2844","<git><bash><shell><git-pull>","Why does git-pull fail with signal 13?","<h1>Setup</h1>

<p>I've written a small script to do automatic pull/commit/push for some personal data. This script works great on my laptop (version 1.8.3.2-1) but on my server, the <code>git pull</code> command is failing with signal 13. I was running version 1.7.9.5-1 (these are both ubuntu, but the server is 12.04.4 LTS vs 13.10 on the laptop), I used the ppa:git-core repo to update git to 1.9.0-1~ppa0~precise1. This still gives the same problem with my script. The complication perhaps, is that the laptop pulls from a bare repo on the server over ssh while the server pulls from the same bare repo (to a working copy elsewhere) but doesn't use ssh, it just has the local path.</p>

<h1>The problem</h1>

<p>I can reproduce the problem in the terminal with the following command:</p>

<pre><code>&gt; git pull origin master | read msg; echo ${msg}
First, rewinding head to replay your work on top of it...
error: git-pull died of signal 13
</code></pre>

<p>This seems to fetch the commit and check it out, but does not update the master branch and leaves the repo off branch:</p>

<pre><code>&gt; git status
# Not currently on any branch.
nothing to commit (working directory clean)
</code></pre>

<p>Switching back to master gives a warning:</p>

<pre><code>&gt; git checkout master
Warning: you are leaving 1 commit behind, not connected to
any of your branches:

  7220b8f Commit message

If you want to keep them by creating a new branch, this may be a good time
to do so with:

 git branch new_branch_name 7220b8f5e2648ae49d3e3095e8bf942dfc41421c

Switched to branch 'master'
</code></pre>

<h1>My attempts to fix</h1>

<p>Thinking the problem was due to stdout being a pipe but stderr being a tty, I tried:</p>

<pre><code>&gt; git pull origin master 2&gt;&amp;1 | read msg; echo ${msg}
</code></pre>

<p>But this does nothing at all and leaves <code>${msg}</code> empty.</p>

<p>What does work is:</p>

<pre><code>&gt; git pull --quiet origin master 2&gt;&amp;1 | read msg; echo ${msg}

&gt; git pull --quiet origin master

&gt; git pull origin master
</code></pre>

<p>All of which do fetch the commit and update master. I'd like to capture output from git-pull in some cases so while I can fix up the repo, I'd like to know why this is happening.</p>

<p>So why can't I capture the output of git-pull, and why does it crash out leaving the repo in such a state?</p>
","0","1780018","",""
"60200676","12450444","2020-02-13 04:51:25","1","31","<git><github><repository><git-bash><git-pull>","recover files from git repository","<pre><code>git status
</code></pre>

<p>shows some files are deleted</p>

<pre><code>deleted:    uploads/cus/zixk19hldk1.jpg
deleted:    uploads/cus/zixk19hldk1.jpg
</code></pre>

<p>Is there a way to recover those files</p>

<p>I tried <code>git checkout .</code>
but thats not working</p>
","1","12450444","0","0"
"22635323","2144057","2014-03-25 12:56:27","2","5319","<scripting><passwords><git-pull>","Pass username and password for git pull","<p>is there any way to provide username and password for git pull as command line arguments? in svn there was something like:</p>

<pre><code>svn up --no-auth-cache --username $SVN_USER --password $SVN_PASSWORD
</code></pre>

<p>Is there any equivalent of this in git? I can't store the credentials on the filesystem.</p>

<p>Basically, I have a script running build for multiple correlated projects. Because the script is on a shared server and is to be run by different users, I can't store the credentials on the server. I don't want to prompt the user, because the script fetches data from multiple SVN/GIT repositories with single username/pass so I want to read the credentials once via the script and then pass them to git pull or svn up commands </p>
","0","2144057","0","0"
"41605470","249316","2017-01-12 05:04:50","1","12293","<git><github><git-pull>","How do I reliably undo the last git pull command?","<p>On a rare occasion a git pull will cause an issue on our site and I need to quickly rewind the clock so the developer can fix the issue. I've tried <code>git reset HEAD@{1}</code> but that doesn't do the trick as some of the files are still changed. As though it only rolls back some files.</p>

<p>Is there a single command I can call to reliably revert files back before the most recent <code>git pull</code> command?</p>
","1","249316","0","0"
"60324526","4903205","2020-02-20 16:28:58","2","1593","<intellij-idea><git-push><git-clone><git-pull>","Intellij keeps prompting for credentials with git under Windows","<p>I have intellij setup in Windows. My SCM is git. I am using git bash as my git client. Problem is I am not able to persist my password. </p>

<p>I have already tried the solution provided by Intellij. But doesn't fix my issue.</p>

<p><a href=""https://intellij-support.jetbrains.com/hc/en-us/community/posts/115000047544-GIT-unable-to-remember-my-password"" rel=""nofollow noreferrer"">https://intellij-support.jetbrains.com/hc/en-us/community/posts/115000047544-GIT-unable-to-remember-my-password</a></p>
","0","4903205","",""
"19738927","123594","2013-11-02 04:22:52","2","80","<git><git-push><git-pull>","git push with one username, pull with another","<p>I'm using Git to deploy code onto a server with multiple branches for live and staging setups. I'd like to build a simple web interface for pulling without password, but for security reasons, I'd like to push only from command line with a password secured private key. I have set up two usernames, one of them read-only.</p>

<p>Is there a way to configure the clones repository on the server this way? I've seen the <code>pushurl</code> and <code>remote.url</code> entries in the configuration file, but can't see how I would specify a user for them.</p>
","0","123594","0","0"
"19787897","2691818","2013-11-05 11:25:55","-1","656","<git><pull><git-pull>","Issues while trying to execute git commands in server machine","<p>I created a <code>git</code> environment locally.One system behaves like the <code>server</code> and I created another system as <code>gituser(client)</code>.My server repository is a bare repository.I used this <code>$ git clone --bare . ../../remote_repository.git</code> for creating this bare repository.Client made changes and <code>PUSH</code> updated file to  remote_repository.But the Server need to view and make update.Thats why I am trying to <code>PULL</code> the file.But I am receiving the below response.Other commands like <code>git status</code> etc are also giving the same response.Since I am a newbie I am very much confused.</p>

<p><strong>Received Response</strong></p>

<pre><code>fatal: Not a git repository (or any of the parent directories): .git
</code></pre>

<p>I tried with the below  command.I am using <code>ubuntu</code>.</p>

<pre><code>administrator@pramod-desktop:/$ git pull ../../remote_repository.git
</code></pre>

<p><strong>Command Explanation</strong></p>

<p>My bare repository path in server is <code>/home/user153/remote_repository.git</code></p>

<pre><code>../../remote_repository.git:`Path` to my remote_repository.git(git folder)
</code></pre>

<p>Anyone please help.</p>
","3","2691818","",""
"32147716","2605112","2015-08-21 19:08:33","7","3089","<git><github><version-control><git-merge><git-pull>","Using colon in `git pull origin <remote-branch> : <local-branch>` does not pull to correct branch?","<p>Let's say I am on a <em>different</em>  branch than <code>&lt;local-branch&gt;</code>, called <code>&lt;different-branch&gt;</code>.  </p>

<p>When I try to pull from a remote branch to a local branch, I do the following:</p>

<pre><code>git pull origin &lt;remote-branch&gt;:&lt;local-branch&gt;
</code></pre>

<p>And, from my understanding this should  pull into my <code>&lt;local-branch&gt;</code>, and <em>not</em> pull into <code>&lt;different-branch&gt;</code>.   </p>

<p>But, then when I check <code>git log</code> while I'm on <code>&lt;different-branch&gt;</code>, I see that those commits are from <code>&lt;remote-branch&gt;</code>?  </p>

<p>How do I pull from a remote branch, into a local branch, when the local branch is different from the one that I cam currently on?    Thank you.  </p>
","1","2605112","0","0"
"68199674","14098258","2021-06-30 18:07:17","0","958","<git><gitlab><pull-request><git-push><git-pull>","forgot to git pull before git push","<p>I just pushed an update branch with some changes to my GitLab origin repo (which I have forked from another repo on GitLab) and created a merge request (to merge the pushed branch into the upstream repo, where I have forked my origin from). It showed me a merge conflict.</p>
<p><strong>Problem:</strong><br />
at the time I have forked off the update branch from the master branch, my master wasn't up to date anymore (there were already some changes on the upstream master)</p>
<p><strong>Question</strong>:<br />
how can I fix this (I want my commits on top of those commits of the upstream master)? Is it possible to kind of sync my local master with the upstream master and then to incorporate these additional commits in my update branch, push that &quot;updated&quot; update branch to my origin and finally make a new pull request?</p>
<p><strong>Edit</strong>:</p>
<p>That is the current situation:</p>
<p><a href=""https://i.stack.imgur.com/GHLeM.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/GHLeM.jpg"" alt=""enter image description here"" /></a></p>
<p>The orange commits (3 and 4) were introduced on upstream after I have forked the repo. So they are not present in my origin and subsequently not in my local repo. So when I push the update branch (commits 5 and 6) to my origin and create a merge request, then I get the error &quot;merge conflict&quot; because these commits are missing in my pushed update branch and subsecently in the merge request (at least that is what I think, why the merge conflict occurs - or could this also have another cause?).</p>
<p>So the solution would be, to somehow get those newly introduced commits (3 and 4) in my origin and from there into my local repo. And then I could create an &quot;updated&quot; update branch containing everything, which I could then push to my origin and create a new merge request. Like so:</p>
<p><a href=""https://i.stack.imgur.com/XimMX.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/XimMX.jpg"" alt=""enter image description here"" /></a></p>
<p>Is this possible to achieve?</p>
","5","14098258","",""
"32162997","4289417","2015-08-23 03:55:10","0","608","<git><git-pull><bitbucket-server>","git pull over SSH performance issue with Atlassian Stash (stuck for 7 seconds on git-upload-pack)","<p>I have a small Git repository, using Atlassian Stash. The repo has bout 250 files, not much history, and the files are all small - total repo size is about 10MB.</p>

<p>Git pull (returning just ""Already up-to-date"") in many cases over 8 seconds.</p>

<p>With GIT_TRACE set, the following is shown:</p>

<pre><code>23:35:25.109710 git.c:555               trace: exec: 'git-pull'
23:35:25.109745 run-command.c:351       trace: run_command: 'git-pull'
23:35:25.122176 git.c:346               trace: built-in: git 'rev-parse' '--git-dir'
23:35:25.131460 git.c:346               trace: built-in: git 'rev-parse' '--is-bare-repository'
23:35:25.132926 git.c:346               trace: built-in: git 'rev-parse' '--show-toplevel'
23:35:25.134679 git.c:346               trace: built-in: git 'ls-files' '-u'
23:35:25.136349 git.c:346               trace: built-in: git 'symbolic-ref' '-q' 'HEAD'
23:35:25.139419 git.c:346               trace: built-in: git 'config' 'branch.master.rebase'
23:35:25.142520 git.c:346               trace: built-in: git 'config' 'pull.rebase'
23:35:25.144089 git.c:346               trace: built-in: git 'config' 'pull.ff'
23:35:25.145995 git.c:346               trace: built-in: git 'rev-parse' '-q' '--verify' 'HEAD'
23:35:25.147660 git.c:346               trace: built-in: git 'fetch' '--update-head-ok'
23:35:25.148347 run-command.c:351       trace: run_command: 'ssh' '-p' '7999' 'git@smsvcs' 'git-upload-pack '\''/srm/srm.git'\'''
23:35:31.758436 run-command.c:351       trace: run_command: 'rev-list' '--objects' '--stdin' '--not' '--all' '--quiet'
23:35:31.761165 run-command.c:351       trace: run_command: 'rev-list' '--objects' '--stdin' '--not' '--all'
23:35:31.761307 exec_cmd.c:129          trace: exec: 'git' 'rev-list' '--objects' '--stdin' '--not' '--all'
23:35:31.762459 git.c:346               trace: built-in: git 'rev-list' '--objects' '--stdin' '--not' '--all'
23:35:33.806938 run-command.c:351       trace: run_command: 'gc' '--auto'
23:35:33.807048 exec_cmd.c:129          trace: exec: 'git' 'gc' '--auto'
23:35:33.808245 git.c:346               trace: built-in: git 'gc' '--auto'
23:35:33.809709 git.c:346               trace: built-in: git 'rev-parse' '-q' '--verify' 'HEAD'
23:35:33.813711 git.c:346               trace: built-in: git 'fmt-merge-msg'
23:35:33.818468 git.c:346               trace: built-in: git 'merge' 'Merge branch '\''master'\'' of ssh://smsvcs:7999/srm/srm' 'HEAD' 'f77e569b202ef7674dc30d219e71b2587e87f708'
Already up-to-date.
</code></pre>

<p>The biggest delay seems to happen at 23:35:25.148347, while it's running git-upload-pack over SSH (it takes over 6.5 seconds).</p>

<p>SSH connection is pretty fast:</p>

<pre><code>=-&gt;time ssh xyz@smsvcs 'echo test'
test

real    0m0.136s
user    0m0.009s
sys     0m0.001s
</code></pre>

<p>Second biggest delay is at 23:35:33.806938, and it's 2 seconds - running rev-list.</p>

<p>This is on Red Hat Enterprise Linux Server release 5.11 (Tikanga), 
git version 2.3.2</p>

<p>Any ideas what could be causing these performance issues, or what to do to troubleshoot it further?</p>
","7","4289417","0","0"
"68223889","9203699","2021-07-02 10:49:38","0","500","<git><gitlab><git-pull>","GitLab: How to pull only required folders from git remote repository","<p>I want to pull some components of my project from GitLab remote repository. Is it possible with some remote or local git setting?</p>
<p>Note: Can I do it as a single developer not affecting our developers of the project.</p>
","7","9203699","",""
"68264162","11183751","2021-07-06 03:26:48","2","232","<git><git-pull>","How to ignore file in git","<p>I need to work on <code>file.txt</code> locally.</p>
<p>I clone a project is in github and i modify this <code>file.txt</code> locally.</p>
<p>When i do</p>
<pre><code>git checkout .
git pull --no-edit
</code></pre>
<p><code>file.txt</code> is changed because remote change it.</p>
<p>How i can ignore <code>file.txt</code> is not update locally.</p>
<p>File is in this directory, <code>a/file.txt</code>. I tried to add this in <code>.gitignore</code> or <code>.git/info/exclude</code> but always remote updates this files overwrite my file locally.</p>
<p>How i can ignore files not being modified locally, remote always updates <code>.gitignore</code> and <code>a/file.txt</code></p>
","4","11183751","0","0"
"50006450","1391026","2018-04-24 16:15:51","0","384","<git><git-push><git-pull><git-fetch><git-notes>","git overrides refs/notes when fetching?","<p>I'm keeping my changelog in <code>git-notes --ref changelog</code> when developing. I'm always putting a note on the merge-to-master commit and push it out to three remotes (<code>git push &lt;remote&gt; refs/notes/changelog</code>) - but every time I forget to push to one remote and <code>fetch</code> from it, the ref gets overridden with some old version:</p>

<p>(Sorry for german locale)</p>

<pre><code>$ git fetch github -p
Von github.com:&lt;user&gt;/&lt;repo&gt;
 + ca36d98d...1f3b9041 refs/notes/changelog -&gt; refs/notes/changelog  (Aktualisierung erzwungen)
</code></pre>

<p>How to prevent that? Is it somehow related to my <code>.git/config</code>?</p>

<p>(excerpt from <code>.git/config</code>):</p>

<pre><code>[remote ""github""]
    url = git@github.com:&lt;user&gt;/&lt;repo&gt;.git
    fetch = +refs/heads/*:refs/remotes/github/*
    fetch = +refs/pull/*/head:refs/remotes/github/pr/*
    push = +refs/notes/changelog:refs/notes/changelog
    fetch = +refs/notes/changelog:refs/notes/changelog
[notes ""rewrite""]
    rebase = true
    amend = true
[notes]
    rewriteRef = refs/notes/changelog
</code></pre>
","1","1391026","",""
"68287492","15779535","2021-07-07 13:59:26","1","80","<ssl><ssl-certificate><clone><git-pull><jgit>","Not able to git Pull from CMD after using JGIT to clone repo..getting SSL certificate problem: self signed certificate in certificate chain","<p>I used JGIT to clone a repo from bitbucket using HTTPS method which worked fine.
But I am trying to do is do a git pull from command Line from the cloned repo. When this is done i am getting <em>fatal: unable to access 'https://cedt-icg-bitbucket.</em>********<em>.git/': SSL certificate problem: self signed certificate in certificate chain</em></p>
<p>I don't want to use the suggested <em>git -c http.sslVerify=false</em> to solve as its not safe as its a private repo.
Any suggestions? please</p>
","0","15779535","",""
"15371262","1971506","2013-03-12 20:16:57","8","9695","<git><github><merge><git-pull>","How come ""git pull origin master"" doesn't actually change the files in my computer's directory?","<p>I'm still quite new to GitHub, though I'm in a position where I have to actively use it.</p>

<p>Anyway, I used ""git pull upstream master"" to pull and merge the latest code for the project I'm working on. I thought this command would update the actual files on my computer (the ones that appear in the directory, etc.), but instead, nothing happens.</p>

<p>Sure the console mentions many changes, but none of them seemed to have happened. As an experiment, I even deleted everything from one of the files and re-pulled to see if this would change, but I get ""already up-do-date"".</p>

<p>If it helps, I typed in <code>git branch -v</code> and got the following:</p>

<pre><code>* master a2e10a4 [ahead 29] git workflow experiment
</code></pre>

<p>Also, <code>git status</code> gives the following:</p>

<pre><code># On branch master
# Your branch is ahead of 'origin/master' by 29 commits.
#
nothing to commit (working directory clean)
</code></pre>

<p>As a final note, my only branch is master.</p>

<p>What is going on and how do I get ""pulled"" changes to show up on my directory/computer?</p>
","0","1971506","0","0"
"15374545","614702","2013-03-12 23:56:47","4","74","<git><git-merge><git-pull>","git: How can I merge my working file with the latest one","<p>I'm new to git, and still having a lot of trouble.</p>

<p>Say that I'm working on <code>a.cpp</code>. I modified some code in <code>a.cpp</code>. And, that change is not ready to commit or push.</p>

<p>Then, other people also made a change in <code>a.cpp</code>.</p>

<p>In SVN/CVS, checking out do either a merge or conflict.</p>

<p>I thought that <code>git pull</code> does the same thing.</p>

<p>But, it seems that <code>git pull</code> doesn't merge/conflict. Is this correct behavior?</p>

<p>Also, <code>git checkout</code> just simply rewrites <code>a.cpp</code>, losing all my changes.</p>

<p>Is there any easy way to pull the latest version and perform merge/conflict?</p>
","0","614702","",""
"15439527","614702","2013-03-15 18:21:12","39","44527","<git><git-push><git-pull><git-commit>","git: Why ""Merge branch 'master' of ... ""? when pull and push","<p>I'm still git newbie. I modified some source files and committed. Then, I did <code>git push</code>. But, I got this error.</p>

<pre><code>To /foo/bar/  ! [rejected]        master -&gt; master (non-fast-forward)
error: failed to push some refs to '/foo/bar/' To prevent you from
losing history, non-fast-forward updates were rejected Merge the
remote changes before pushing again.  See the 'Note about
fast-forwards' section of 'git push --help' for details.
</code></pre>

<p>This reject seems that I didn't <code>git pull</code> before <code>push</code>. So, I did <code>git pull</code>. Okay, there were two modified files by others.</p>

<p>Then, I was able to  <code>git push</code> successfully.</p>

<p><strong>Question:</strong> In this case, I'm seeing one more log like following with my original commit message:</p>

<pre><code>commit 59e04ce13b8afa...
Merge: 64240ba 76008a5
Author: Jone Doe &lt;jone@doe.com&gt;
Date:   Fri Mar 15 11:08:55 2013 -0700

    Merge branch 'master' of /foo/bar/
</code></pre>

<p>And this is my original commit message.</p>

<pre><code>commit 64240bafb07705c...
Author: Jone Doe &lt;jone@doe.com&gt;
Date:   Fri Mar 15 11:06:18 2013 -0700

    Fixed bugs and updated!
</code></pre>

<p>I'd like to understand why ""merge branch master of location"" is added.</p>
","1","614702","0","0"
"38673450","310370","2016-07-30 11:29:58","3","3672","<git><github><git-submodules><git-pull><git-fetch>","How to fetch submodules in github","<p>I have used the following commands but submodules are not fetched :(</p>

<pre><code>git remote add upstream https://github.com/NecronomiconCoding/NecroBot

git fetch upstream

git merge upstream/master

git submodule foreach git pull upstream master
</code></pre>

<p>However the submodule <code>FeroxRev @ 33654cd</code> is not fetched into my local repository :(</p>

<p>So how can I fetch the latest submodule?</p>

<p>Here my project  : <a href=""https://github.com/MonsterMMORPG/aaddd/"" rel=""nofollow"">https://github.com/MonsterMMORPG/aaddd/</a></p>

<p>When I click submodule name it goes into remote repository</p>
","0","310370","0","0"
"12139812","1542339","2012-08-27 09:57:52","12","23972","<git><github><git-pull><merge-conflict-resolution><git-stash>","why git stash cannot abandon the changes made just now?","<p>i forked a project from github, and the origin point to my own github repo, remote point to its original repo, since i want to get update from remote, </p>

<p>i use git pull remote branch_name, then my local repo is in conflict mode, 
now i want to cancel the effect of git pull, so i use git stash, but was surprised to find i failed to do this?  what's wrong?</p>

<p>the detailed info is as follows:</p>

<pre><code>[mirror@home weechat]$ git status
# On branch master
# Unmerged paths:
#   (use ""git add/rm &lt;file&gt;..."" as appropriate to mark resolution)
#
#       both modified:      CMakeLists.txt
#       both modified:      ChangeLog
#       both modified:      NEWS
#       both modified:      configure.in
#       both modified:      po/cs.po
#       both modified:      po/de.po
#       both modified:      po/es.po
#       both modified:      po/fr.po
#       both modified:      po/hu.po
#       both modified:      po/ru.po
#       both modified:      po/weechat.pot
#       deleted by us:      src/irc/irc-server.c
#       both modified:      weechat.spec
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
[mirror@home weechat]$ git stash
CMakeLists.txt: needs merge
ChangeLog: needs merge
NEWS: needs merge
configure.in: needs merge
po/cs.po: needs merge
po/de.po: needs merge
po/es.po: needs merge
po/fr.po: needs merge
po/hu.po: needs merge
po/ru.po: needs merge
po/weechat.pot: needs merge
src/irc/irc-server.c: needs merge
weechat.spec: needs merge
CMakeLists.txt: needs merge
ChangeLog: needs merge
NEWS: needs merge
configure.in: needs merge
po/cs.po: needs merge
po/de.po: needs merge
po/es.po: needs merge
po/fr.po: needs merge
po/hu.po: needs merge
po/ru.po: needs merge
po/weechat.pot: needs merge
src/irc/irc-server.c: needs merge
weechat.spec: needs merge
CMakeLists.txt: unmerged (118d776a202cfc6688290e96fca20ac4f8631f5e)
CMakeLists.txt: unmerged (d05c9a9711a965dcad0aefa03b79ae7a4f5cb8fb)
CMakeLists.txt: unmerged (dd2b14cb188e1927e098705d77e922ad530e232b)
ChangeLog: unmerged (764711936b54aa75812828e1ab15e1632aa3eb9d)
ChangeLog: unmerged (e00d4bf654c3d199e24bf4910b066f1659fea4b6)
ChangeLog: unmerged (dbec2315ffc1f15feede248abe3ed85beaa82ed7)
NEWS: unmerged (457d5443548e6130b50e42a9c87a6f2e8ba4c596)
NEWS: unmerged (706cee4b8853013f20129ccb2fa9057b7500fceb)
NEWS: unmerged (33afffbac62399faa32e2560a9accd95dd9a050e)
configure.in: unmerged (8e1058e5e00a5e671459cee8300420b0488560d9)
...
fatal: git-write-tree: error building trees
Cannot save the current index state
</code></pre>

<p>so how to cannel the effect of git pull? should i delete repo, and download it again? </p>
","0","1542339","",""
"12176307","429400","2012-08-29 10:53:25","3","11313","<git><git-pull>","git pull one file from remote","<p>I've cloned a repository ""Rep"" and created my own local branch ""Li"".
I've committed a file called ""task.js"" to the local ""Li"" branch and pushed it to the remote ""Li"" branch.
Now I want to revert this action by:</p>

<ol>
<li>pulling the original ""task.js"" from the remote ""master"" branch to
the local ""Li"" branch</li>
<li>push the reverted ""task.js"" from the local ""Li"" branch to the remote ""Li"" branch.</li>
</ol>

<p>I tried to read several ""pull"" tutorials but can't figure out a way to do this (maybe because I don't really understand the basics yet...)</p>

<p>Thanks,
Li</p>
","4","429400","0","0"
"16493055","38055","2013-05-11 02:03:32","5","7644","<git><github><git-pull>","git doesn't seem to pull all updates - HEAD and origin/HEAD in different positions","<p>I have ended up with a git repository in a state I don't know how to handle, and I need some help with understanding a) what's going on, how and why the repository is in this state, and b) how I should react to it. Basically, when pulling from the remote, I end up ahead of the remote, even if I reset all changes and try again.</p>

<p>This is what I've done:</p>

<p>I have forked a git repository, cloned the upstream version (which I don't have write access to) and then added my own fork to the list of remotes, so that <code>git remote -v</code> shows the following:</p>

<pre><code>$ git remote -v
mine    git@github.com:tlycken/julia.git (fetch)
mine    git@github.com:tlycken/julia.git (push)
origin  git://github.com/JuliaLang/julia.git (fetch)
origin  git://github.com/JuliaLang/julia.git (push)
</code></pre>

<p>I now want to make sure that my local version is up to date with everything in the upstream repo, so I run</p>

<pre><code>$ git pull origin master
From git://github.com/JuliaLang/julia
 * branch            master     -&gt; FETCH_HEAD
Already up-to-date.
tlycken$ git status
# On branch master
# Your branch is ahead of 'origin/master' by 4 commits.
#   (use ""git push"" to publish your local commits)
#
nothing to commit, working directory clean
</code></pre>

<p>This confuses me. Why is my branch ahead of origin master? I haven't changed anything.</p>

<p>To see if I could do something about it, I ran <code>git lg</code> (an alias for <code>git log --graph</code> with some prettyprint). The top of the output looks like this:</p>

<pre><code>*   6912a42 - (HEAD, mine/master, master) Merge pull request #3052 from daviddelaat/linalgnumber (2013-05-10 11:23:09 -0700) &lt;Viral B. Shah&gt;
|\  
| * 8116d51 - Use Number instead of Integer in some linalg operations (2013-05-10 19:12:45 +0200) &lt;David de Laat&gt;
* | 6cc1532 - Update .travis.yml configuration in the manual. (2013-05-10 21:41:59 +0530) &lt;Viral B. Shah&gt;
* | fa1e3fe - Update logdet. Close #3070. (2013-05-10 19:35:37 +0530) &lt;Viral B. Shah&gt;
* |   a182f7f - (origin/master, origin/HEAD, mine/contrib-base) Merge branch 'master' of github.com:JuliaLang/julia (2013-05-10 03:10:38 -0400) &lt;Jeff Bezanson&gt;
</code></pre>

<p>Apparently, the HEAD's are in different positions. To make sure that I get the correct code in my local repository before I start branching out, I did <code>git reset --hard origin/HEAD</code> to remove anything I was ahead, and then <code>git pull origin master</code> to make sure I was up to date (i.e. didn't reset too far or something):</p>

<pre><code>$ git pull origin master
From git://github.com/JuliaLang/julia
 * branch            master     -&gt; FETCH_HEAD
Updating a182f7f..6912a42
Fast-forward
 base/linalg/dense.jl         |  2 +-
 base/linalg/factorization.jl | 44 ++++++++++++++++++++++----------------------
 doc/manual/packages.rst      |  3 +--
 3 files changed, 24 insertions(+), 25 deletions(-)
$ git status
# On branch master
# Your branch is ahead of 'origin/master' by 4 commits.
#   (use ""git push"" to publish your local commits)
#
nothing to commit, working directory clean
</code></pre>

<p>and I'm back where I started.</p>

<p>What is going on here? What should I do to get to a state where my local master has the latest updates from upstream?</p>
","0","38055","0","0"
"33179144","1792095","2015-10-16 20:35:28","0","129","<git><atlassian-sourcetree><git-pull><msys><msys2>","Why does MSYS2 git try to create ORIG_HEAD.lock in a nonsensical directory?","<p>I'm using SourceTree which delegates to MSYS2 git to do a pull. The full output shows the following:</p>

<pre><code>git -c diff.mnemonicprefix=false -c core.quotepath=false fetch upstream

git -c diff.mnemonicprefix=false -c core.quotepath=false pull --rebase upstream master
From https://github.com/metaeducation/ren-c
 * branch            master     -&gt; FETCH_HEAD


First, rewinding head to replay your work on top of it...

fatal: Unable to create 'D:/dev/projects-open-source/ren-c_asampal/D:/dev/projects-open-source/ren-c_asampal/.git/ORIG_HEAD.lock': No such file or directory

Fast-forwarded HEAD to eb5e8acb29f315453d1ec58514acd8c25e1633eb.


git -c diff.mnemonicprefix=false -c core.quotepath=false submodule update --init --recursive
Completed successfully.
</code></pre>

<p>Where should I be looking to find the reason for the bogus concatenation when creating the lock file?</p>

<p>I'm using MSYS2/MinGW-w64 under Windows 10 64 bit.</p>
","2","1792095","0","0"
"33193121","4162708","2015-10-18 00:35:09","1","278","<git><git-branch><git-pull><git-fetch>","git branch -r shows different remote shared repo in different local working directory","<p>I created a shared repo and then clone it into two folders (A and B). All in the same PC.</p>

<p>Now there are two branches, <code>master</code> and <code>v0</code>. Folder A and B are now in branch <code>v0</code>. On A I deleted the <code>v0</code> branch on remote repo.</p>

<pre><code>$ git push origin --delete v0
To file:///home/nanger/github/shared1.git
 - [deleted]         v0
</code></pre>

<p>and then I tried to pull the remote repo on both A and B (in branch <code>v0</code>):</p>

<p>Now, I see that</p>

<p>on A:</p>

<pre><code>$ git pull
Already up-to-date.

$ git branch -r
origin/master

$ git branch
* master
v0
</code></pre>

<p>on B:</p>

<pre><code>$ git pull
Already up-to-date

$ git branch -r
origin/HEAD -&gt; origin/master
origin/master
origin/v0

$ git branch
* master
v0
</code></pre>

<p>Why do A and B have different views of the remote repo?</p>
","2","4162708","",""
"50723056","245549","2018-06-06 14:34:46","2","905","<git><git-pull>","How to leave the temporal branch created by ""git pull --rebase""?","<p>While being in a branch I have executed</p>

<pre><code>git pull --rebase origin master
</code></pre>

<p>This have been resulted in some merge conflicts. By opening the files and selecting the needed parts of the code I have resolved the conflicts. Then I have executed <code>git add</code> and <code>git commit</code>.</p>

<p>Now, when I execute, <code>git branch</code>, I see that I am not in the original branch but in a branch named:</p>

<pre><code>(no branch, rebasing my_branch_name)
</code></pre>

<p>The <code>git status</code> tells:</p>

<pre><code>rebase in progress; onto 5ae1f3d58
You are currently rebasing branch 'my_branch_name' on '7af1d3d38'.
  (all conflicts fixed: run ""git rebase --continue"")

nothing to commit, working tree clean
</code></pre>

<p>However, when I execute <code>git rebase --continue</code>, as suggested, nothing changes. I stills stay in this strange temporal branch. So, how can I go back to my branch and keep changes introduced by the <code>git pull --rebase</code> and the manual merge?</p>
","2","245549","",""
"17374871","1023812","2013-06-28 22:59:32","0","330","<git><git-push><git-pull><git-checkout><git-reset>","How badly did I hose my git repo?","<p>My project has a bare repo setup on the server. I'm currently on branch <code>0.9/develop</code>. I merged <code>0.9/develop</code> with a branch that another developer was working on. It turns out that it would be <strong>way</strong> more work to fix his code than to obliterate his changes entirely. Unfortunately, I already ran a <code>git push origin 0.9/develop</code> after having committed the merge AND I pulled those changes to my development AND staging servers (yes, I'm stupid).</p>

<p>I've been going through a bunch of somewhat similar questions on SO, but none of them quite seem to cover my exact case. This one was particularly useful: <a href=""https://stackoverflow.com/questions/4114095/git-revert-to-previous-commit-how"">How to revert Git repository to a previous commit?</a></p>

<p>Using info from that question, I was able to successfully obliterate the last commit off of the project. Specifically, I did a <code>git reset --hard f6c84a0</code>, which successfully reset my local repository to the commit right before I merged the other developer's n00bery into my poetry.</p>

<p>Okay, great. Now I just need to get the bare repo fixed up. So I tried <code>git push --force origin 0.9/develop</code>. Unfortunately I lost the specific message that the server sent back, but it was something along the lines of ""success"", and it showed that the remote repo had been updated to commit f6c84a0.</p>

<p>When I tried to ssh into the server and then go to my staging environment and run a <code>git pull</code>, the response was:</p>

<pre><code>From /home/ben/web/example
 + 77d54e4...f6c84a0 0.9/develop -&gt; origin/0.9/develop  (forced update)
Already up-to-date.
</code></pre>

<p>However, when I ran a <code>git log</code> from the staging server, all of the commits from the merge are still on the <code>0.9/develop</code> branch. I tried a couple of things, like <code>git pull --force</code>, but I couldn't get the bad commits to go away.</p>

<p>Okay, fine. There's more than one way to skin a cat. I wiped the staging server clean and did a fresh <code>git clone --recursive --no-hardlinks example.git stage.example.com</code> and ran the necessary setup script that does a few little server maintenance things.</p>

<p>Now I can't get back to my <code>0.9/develop branch</code>. In the past, I have simply run <code>git checkout 0.9/develop</code>, but if I try that now, I get this:</p>

<pre><code>Branch 0.9/develop set up to track remote branch 0.9/develop from origin.
Switched to a new branch '0.9/develop'
</code></pre>

<p>Wait...what? <code>0.9/develop</code> is not a new branch. Working with info from this question: <a href=""https://stackoverflow.com/questions/67699/how-do-i-clone-all-remote-branches-with-git"">How to clone all remote branches in Git?</a> I did a <code>git branch -a</code> and got the following:</p>

<pre><code>* 0.9/develop
  master
  remotes/origin/0.8/develop
  remotes/origin/0.8/master
  remotes/origin/0.9/develop
  remotes/origin/HEAD -&gt; origin/master
  remotes/origin/category-address
  remotes/origin/jaminimaj
  remotes/origin/master
  remotes/origin/permissions
  remotes/origin/ticket-duration
  remotes/origin/timzone-support
</code></pre>

<p>I then tried <code>git checkout origin/0.9/develop</code>, but I got the following message:</p>

<pre><code>Note: checking out 'origin/0.9/develop'.

You are in 'detached HEAD' state. You can look around, make experimental
changes and commit them, and you can discard any commits you make in this
state without impacting any branches by performing another checkout.

If you want to create a new branch to retain commits you create, you may
do so (now or later) by using -b with the checkout command again. Example:

  git checkout -b new_branch_name

HEAD is now at f6c84a0... bugfix: revert email helper
</code></pre>

<p>Well, the good news is the staging server now has the proper code base, but I'm in a detached HEAD state. I realize that I'm probably missing something very minor here, but it certainly is messing with my Friday evening. How can I get my staging server HEAD pointing back to the HEAD of <code>0.9/develop</code>? Also, I want to do the same thing on my development environment, but I'd rather do it in the proper <code>git</code> fashion than erasing the whole server and starting over again. Can I do that, or will I just have to brute-force it by rebuilding the server from the repo? Thanks for the help everybody!</p>
","5","1023812","",""
"50733022","1343","2018-06-07 04:34:54","1","533","<git><git-pull>","Prevent git pull from modifying file if there is a conflict?","<p>When I run <code>git pull</code> and there is a conflict, <code>git</code> inserts ""conflict markers"" into my file and set the file state to some sort of pending-merge or some sutch. Personally I find this <strong>really</strong> annoying as I have access to <em>much</em> better ways to resolve conflicts than trying to decode what it thought the merge was from a flat text file.</p>

<p>Is there any way to prevent git from ever generating those markers? Specifically I want for all commands, including a bare <code>git pull</code>, to do nothing if there would be a conflict, no matter what state things start in.</p>

<p>By implication what I'm looking for is a change to the git configuration. A change to my workflow (e.g. ""always commit before pull"") is not what I'm looking for.</p>

<p>Ideally, I'd like it to do absolutely nothing to my local files if it can't do a perfectly clean merge but instead just print an error and tell me to fix it on my own.</p>
","13","1343","",""
"17441279","846910","2013-07-03 06:39:24","3","3393","<git><gitignore><git-pull><git-remote><git-checkout>","git: ignore a file on pull from remote1, but push local version to remote2","<p>I have 3 git repositories:</p>

<ul>
<li><code>local</code>: my development repo on my local machine;</li>
<li><code>remote1</code> used for collaboration with other developers;</li>
<li><p><code>remote2</code> which is a Production server.</p>

<ol>
<li><p>I would like to <code>pull</code> regularly from <code>remote1</code> to my <code>local</code> repo and keep some local tracked files intact (i.e. fetch and merge from <code>remote1</code>, but exclude some local tracked files from being merged).</p></li>
<li><p>On the other side, I would like to regularly <code>push</code> to <code>remote2</code> and I would like local tracked files to be pushed as well.</p></li>
</ol></li>
</ul>

<p>In other words, I would like to have the following versions of <code>file1</code>:</p>

<ul>
<li><code>local</code>: file1 <em>v.1</em></li>
<li><code>remote1</code>: file1, <em>v.2</em></li>
<li><code>remote2</code>: file1, <em>v.1</em></li>
</ul>

<p>Note: <code>file1</code> can be anything (.css, .html, even .png)</p>

<p>I have tried the following approaches:</p>

<ul>
<li><code>.gitignore</code> a file (does not work, the file becomes being tracked again after pull from <code>remote1</code>)</li>
<li><code>git pull --no-ff --no-commit remote1 master</code>, then <code>git checkout --ours file1</code> according to <a href=""https://stackoverflow.com/questions/2073841/how-can-i-discard-remote-changes-and-mark-a-file-as-resolved"">this</a> (does not work, file1 becomes v.2)</li>
<li><code>.git/info/exclude</code> as described <a href=""https://stackoverflow.com/questions/1753070/git-ignore-files-only-locally/1753078#1753078"">here</a> (does not work, nothing is ignored and even if it is ignored, <code>file1</code> will not be pushed to <code>remote2</code> then) </li>
</ul>
","0","846910","0","0"
"34055020","5419599","2015-12-02 23:21:50","2","2371","<git><git-rebase><git-pull><git-tag>","git pull --rebase origin tagname?","<p>I'm digging through some production scripts that use git, and trying to make sense of this command:</p>

<pre><code>git pull --rebase origin ""${tag_or_commit}""
</code></pre>

<p>From what I'm finding in the documentation for <code>git pull</code> and <code>git rebase</code>, it looks like the only thing that should <strong>ever</strong> be in that <code>tag_or_commit</code> bash variable, would have to be a branch name for the command to work at all.</p>

<p>Is there documented behavior for what this command will do given a tag or commit instead of a branch?  Where can I find it?</p>
","0","5419599","",""
"50764051","47633","2018-06-08 15:36:47","3","1936","<git><git-push><git-pull><git-remote><git-stash>","git: best way to ""stash"" changes to continue work from a remote repo","<p>As far as I understand stashes are local, and are not meant to be pushed to remote repos.</p>

<p>Sometimes I have ongoing work that is not ready to be committed, but that I have to somehow share with other workers or with myself accessing from a different workstation.</p>

<p>What would be the best way to emulate some kind of ""remote stash"" with git or to use git for a workflow like I've just described?</p>
","3","47633","0","0"
"34120950","3015190","2015-12-06 18:21:21","5","18209","<git><github><git-pull>","GitHub git pull fatal error cygwin DLL","<p>I am trying to perform a git pull command from my github cmd using the GitHub desktop client.</p>

<p>For some reason my git pull no longer works, and it spits out the following errors:</p>

<pre><code>D:\AndroidStudioProjects\Tangle&gt;git pull
      1 [main] sh (6932) C:\Users\dbale\AppData\Local\GitHub\PortableGit_c7e0cbde92ba565cb218a521411d0e854079a28c\usr\bin\sh.exe: *** fatal error - cygheap base mismatch detected - 0xC77400/0xDD7400.
This problem is probably due to using incompatible versions of the cygwin DLL.
Search for cygwin1.dll using the Windows Start-&gt;Find/Search facility
and delete all but the most recent version.  The most recent version *should*
reside in x:\cygwin\bin, where 'x' is the drive on which you have
installed the cygwin distribution.  Rebooting is also suggested if you
are unable to find another cygwin DLL.
      1 [main] sh 15144 fork: child -1 - forked process 6932 died unexpectedly, retry 0, exit code 0xC0000142, errno 11
/mingw32/libexec/git-core/git-sh-setup: fork: retry: No child processes
      4 [main] sh (16184) C:\Users\dbale\AppData\Local\GitHub\PortableGit_c7e0cbde92ba565cb218a521411d0e854079a28c\usr\bin\sh.exe: *** fatal error - cygheap base mismatch detected - 0xC77400/0xEE7400.
This problem is probably due to using incompatible versions of the cygwin DLL.
Search for cygwin1.dll using the Windows Start-&gt;Find/Search facility
and delete all but the most recent version.  The most recent version *should*
reside in x:\cygwin\bin, where 'x' is the drive on which you have
installed the cygwin distribution.  Rebooting is also suggested if you
are unable to find another cygwin DLL.
1067828 [main] sh 15144 fork: child -1 - forked process 16184 died unexpectedly, retry 0, exit code 0xC0000142, errno 11
/mingw32/libexec/git-core/git-sh-setup: fork: retry: No child processes
      3 [main] sh (6452) C:\Users\dbale\AppData\Local\GitHub\PortableGit_c7e0cbde92ba565cb218a521411d0e854079a28c\usr\bin\sh.exe: *** fatal error - cygheap base mismatch detected - 0xC77400/0x1107400.
This problem is probably due to using incompatible versions of the cygwin DLL.
Search for cygwin1.dll using the Windows Start-&gt;Find/Search facility
and delete all but the most recent version.  The most recent version *should*
reside in x:\cygwin\bin, where 'x' is the drive on which you have
installed the cygwin distribution.  Rebooting is also suggested if you
are unable to find another cygwin DLL.
3137324 [main] sh 15144 fork: child -1 - forked process 6452 died unexpectedly, retry 0, exit code 0xC0000142, errno 11
/mingw32/libexec/git-core/git-sh-setup: fork: retry: No child processes
      3 [main] sh (10188) C:\Users\dbale\AppData\Local\GitHub\PortableGit_c7e0cbde92ba565cb218a521411d0e854079a28c\usr\bin\sh.exe: *** fatal error - cygheap base mismatch detected - 0xC77400/0xED7400.
This problem is probably due to using incompatible versions of the cygwin DLL.
Search for cygwin1.dll using the Windows Start-&gt;Find/Search facility
and delete all but the most recent version.  The most recent version *should*
reside in x:\cygwin\bin, where 'x' is the drive on which you have
installed the cygwin distribution.  Rebooting is also suggested if you
are unable to find another cygwin DLL.
7211236 [main] sh 15144 fork: child -1 - forked process 10188 died unexpectedly, retry 0, exit code 0xC0000142, errno 11
/mingw32/libexec/git-core/git-sh-setup: fork: retry: No child processes
</code></pre>

<p>My cygwin1.dll is located in: C:\cygwin64\bin\</p>

<p>I use github often and I have never experienced this problem before... Can anyone please help me with this...</p>

<p>Thanks!</p>
","2","3015190","0","0"
"17596503","1761364","2013-07-11 14:45:37","2","409","<git><git-push><git-pull>","How to keep 2 git repositories in sync automatically","<p>Having 2 servers which should be in sync with eachothers at all times.</p>

<p>As someone pushes something to the repository of server A, the repository on server B should be updated automatically, depending what server is the master/slave.</p>

<p>Both servers are not on the same machine.</p>

<p>Is this possible without having to run additional manual commands every update? (git fetch etc.) Or do you advise a different mechanism?</p>
","3","1761364","",""
"17721073","1793941","2013-07-18 10:33:29","3","5169","<git><pull><git-pull>","git pull "" fatal: Uh oh. Your system reports no Git commands at all.""","<p>since few days ago I'm working on a new server (moved from old to new with chroot user) 
from old server I've copied folder .git to a new server.</p>

<p>The problem is that when I type ""git pull"" then I have error:</p>

<blockquote>
  <p>fatal: Uh oh. Your system reports no Git commands at all.</p>
</blockquote>

<p>any other commands like git fetch or git merge works fine.</p>

<p>What reason is that I can't use git pull command?</p>
","0","1793941","",""
"17741552","1362184","2013-07-19 08:34:32","2","12808","<git><git-push><git-pull>","github issue - error: failed to push some refs","<p>I'm trying to push my master branch to my production branch.</p>

<p>Normally when I do changes on my Ubuntu computer I push to master by:</p>

<pre><code>git add .
git commit -m ""message""
git push
</code></pre>

<p>And everything works fine. Then I simply do:</p>

<pre><code>git push origin master:production
</code></pre>

<p>And everything works fine. But now for some reason when I do the 'git push origin master:production' in Terminal I get the message:</p>

<pre><code>To git@github.com:Username1/myapp.git
 ! [rejected]        master -&gt; production (non-fast-forward)
error: failed to push some refs to 'git@github.com:Username1/myapp.git'
To prevent you from losing history, non-fast-forward updates were rejected
Merge the remote changes (e.g. 'git pull') before pushing again.  See the
'Note about fast-forwards' section of 'git push --help' for details.
mypc@ubuntu:~/myapp$ 
</code></pre>

<p>How can I fix this irritating problem that has mysteriously arisen? I tried 'git pull origin master', as suggested in the message and elsewhere in my research, but all I get in Terminal is 'everything up to date' and the problem reoccurs when I try it again. Thanks.</p>
","4","1362184","0","0"
"38652605","1779743","2016-07-29 07:11:15","8","4042","<git><git-push><git-pull>","Pull from git while having unpushed commits","<p>I have several commits that aren't pushed yet. But there're several new commits in the repository. I want to pull the new commits and push my commits, but I'm not sure what's the correct way to do this.
If I do a pull as is I think it tries to merge and I'm not sure what becomes of my commits, please suggest what's the solution for such situation.</p>
","0","1779743","0","0"
"19592791","695318","2013-10-25 14:38:00","3","2675","<git><git-merge><git-rebase><git-pull>","git pull with clean local repo causes merge commit","<p><strong>Update</strong>: This turned out to be a bug in the version of SmartGit I'm using (version 3.0.11) - an application which is similar to gitk.  The ""Pushable Commits"" list is modified after doing a ""git pull"" and some local commits not yet pushed are accidentally removed from this UI list.  This caused the confusion described in this post where it appeared the only commit which was not pushed was the ""Merge commit"".</p>

<hr>

<p>I pushed changes to a remote (on GitHub).  Two other devs pushed a few commits after me.  I had absolutely no local changes or commits and did a ""git pull"".</p>

<p>Immediately, after it pulled down the changes, it forced me to do a merge commit (allowing me to type the optional message).  I've been using Git for ~2 years and I have yet to encounter this situation where pulling down changes into a clean local repo would force a merge commit.  The two times this occurred over the past week, I wasn't sure what to do so I pushed this merge commit immediately both times with no issues (!?).</p>

<p>On our team, we have a mix of some devs who prefer rebasing and others who use git pull. I'm wondering if it's possibly related (even though we've had this setup for over a year and I have not encountered this prior to a week ago).  I use git pull.</p>

<p>The image below shows the history.  </p>

<p><img src=""https://i.stack.imgur.com/489FY.png"" alt=""Merge commit""></p>

<p>My original commit pushed is the bottom dot on the purple line.  Two other devs pushed after me and upon pulling their changes it created the top ""Merge Branch"" commit in my local repo (on the same purple line).</p>
","9","695318","",""
"19854332","1420937","2013-11-08 08:12:30","4","7257","<git><github><git-push><git-pull>","git pull says ""Already up to date"" after undoing a git pull","<p>I've just installed a new extension in magento, committed and pushed. It's on a staging branch of github. I've pulled it on my staging server using </p>

<pre><code>git pull origin staging
</code></pre>

<p>and it just broke my website. I need to revert it back. I did </p>

<pre><code>git push -f origin HEAD^:staging
git reset --hard HEAD^
git push origin staging
</code></pre>

<p>this removed the extension from my branch. But now when I pull this branch on server using</p>

<pre><code>git pull origin staging
</code></pre>

<p>It says ""<strong>Already up to date</strong>"". </p>

<p>How to remove this extension from the server now ??</p>
","5","1420937","0","0"
"38993559","4942704","2016-08-17 10:04:08","1","95","<git><git-pull><git-reset><git-fetch>","Git update local ignoring few files (is not .gitignore)","<pre><code>Scenario:
 Bitbucket:
  file1 
  file2 
  file3  

 Local:
  file1 - person1 is working on it
  file2 - person2 is working on it
  file3 - common with personal hardcoded configuration
  untracked files
</code></pre>

<p>person1 commits and pushes his changes on file1.
How person2 can update file1 in his local without resetting file2, file3 and untracked files?
It's a while that I'm trying to do it but I still don't find an easy way!
Thanks.</p>
","1","4942704","",""
"65332299","4403387","2020-12-16 22:54:11","0","57","<python><git><subprocess><git-pull>","Trying to remove authentication from git pull creating strange merge conflicts and changes that shouldn't exist","<p>I have a script that I wrote to help automate large pull requests to master in git. I'm trying to get rid of the user need to log in when doing things like pull to update the branch, so I've been trying to figure out how to do this. So, I ended up creating a personal token in Bitbucket Server to see if I could get it to work for myself, and it does work. A personal token wouldn't work for everyone, but I was hoping to work out the right syntax to test it.</p>
<p>The command I came up with is this:</p>
<pre><code>subprocess.check_call(['git', 'pull']+[f'https://{username}:{MYTOKEN}@{repo_url}'], cwd=repo_path)
</code></pre>
<p>But I get really weird behavior from it where it pulls in a bunch of files from the script I made, and then a bunch that I didn't touch. In both cases, I never pushed anything to the remote branch, or committed the local branch. There's nothing in the staged area either.</p>
<p>So, I tried this to see what would happen, and I get correct behavior where it says my repo is up-to-date and there's nothing to pull. This matches the manual git pull that I had been doing since I didn't actually touch any files. But it requires the user to enter credentials which is what I was trying to get rid of.</p>
<pre><code>subprocess.check_call('git pull',cwd=repo_path)
</code></pre>
<p>Any idea what would cause something like this?</p>
","0","4403387","",""
"35544725","999452","2016-02-22 02:09:49","0","37","<git><githooks><git-pull>","Aside from git hook is there an internal GIT command to watch files for commits","<p>As for as my knowledge with git hooks, almost everything can be done from hooking every commit to a build checker, code ruling (i.e., checkstyle, etc.). and many more. However, things can be a little bit different especially if you don't have any authority on the repository host.</p>

<p>I'm looking for solutions for watch certain files on my remote and/or local repository (i.e., files that I've modified and keep track of the changes from my last previous push). Maybe like this scenario, given a list of files, when I invoke <em>git pull</em> it will check files that have been updated and show me the log of each files (more like <em>git diff</em>).</p>

<p>Is there a way to make this possible? Let me know if you have other options or concerns regarding the content.</p>
","0","999452","",""
"19231790","","2013-10-07 18:16:30","0","223","<git><push><git-pull>","Why isn't my remote git repository picking up the changes that I'm pushing to it?","<p>Here's what I've done:</p>

<p><strong>1 - (Remote server)</strong></p>

<ul>
<li><code>git init</code></li>
<li><code>git add .</code></li>
<li><code>git commit -a -m ""Initial Commit""</code></li>
</ul>

<p><strong>2 - (Local computer)</strong></p>

<ul>
<li><p><code>git clone root@URL:/path/to/repository</code> <img src=""https://puu.sh/4K6xo.png"" alt=""pic1""></p></li>
<li><p>Now I type: <code>git log</code> and successfully see the commit history on my local machine: <img src=""https://puu.sh/4K6jE.png"" alt=""pic2""></p></li>
<li><p>Great, all is well so far. Now to change a file locally... I change <code>resource/templates/default_site/_includes.group/header.html</code> and hit Save</p></li>
<li><p>I now hit <code>git status</code> just to triple check that it sees that I changed a file, and it works: <img src=""https://puu.sh/4K6B4.png"" alt=""pic3""></p></li>
<li><p>I now hit <code>git commit -a -m ""Test commit""</code> - success once again: <img src=""https://puu.sh/4K6Dp.png"" alt=""pic4""></p></li>
<li><p>All is well so far, time to push my changes to the remote server with <code>git push origin master</code>: <img src=""https://puu.sh/4K75j.png"" alt=""pic5""></p></li>
<li><p>So it seems to think that it pushed the changes to the remote branch successfully. Let me make sure by going back to the remote server...</p></li>
</ul>

<p><strong>3 - (Back on remote server)</strong></p>

<ul>
<li><p>I check if it has the latest commit from my local repository with <code>git log</code> -- and I can very clearly see my test commit from a second before. So it successfully commited from my local repo -> the remote repo...</p>

<p><img src=""https://puu.sh/4K7hG.png"" alt=""pic6""></p></li>
<li><p>But if I open up <code>resource/templates/default_site/_includes.group/header.html</code> on the remote server, my change ISN'T in there!</p></li>
</ul>

<p>What am I doing wrong here? Your help is appreciated!</p>
","0","","",""
"19343728","604044","2013-10-13 09:33:55","1","323","<git><shell><emacs><ssh><git-pull>","Call git pull from emacs hang emacs","<p>Evaluate <code>(shell-command-to-string ""git pull -q"")</code> in emacs *scratch* buffer hangs emacs.   </p>

<p>From <code>htop</code> in bash,I noticed that after the <code>git pull</code> process which is forked from emacs ended,there always leave a ssh process <strong>ssh: git@myrepo.org:22</strong> whose parameter is my remote git repository URL.
And once there is the <em>ssh</em> process,<code>(shell-command-to-string ""git pull -q"")</code> normally exit.</p>

<p>Besides <code>git pull -q</code> works normally under bash.</p>

<p>Additional system info <code>uname -a</code>:
Linux Edge 3.8.0-31-generic #46~precise1-Ubuntu SMP Wed Sep 11 17:49:16 UTC 2013 i686 i686 i386 GNU/Linux</p>

<p>Any guy has any idea?</p>
","1","604044","0","0"
"69496573","17013278","2021-10-08 13:23:22","1","965","<git><branch><rebase><git-push><git-pull>","How to solve git push error while pushing to temp_branch on remote repository?","<p>I am working on the team project on GitHub.
I am facing the error :</p>
<blockquote>
<p>Updates were rejected because a pushed branch tip is behind its remote
counterpart. Check out this branch and integrate the remote changes
(e.g. 'git pull ...') before pushing again.</p>
</blockquote>
<p>Here is the situation :
I pulled the main branch code from GitHub and started working on it locally and later I pushed the changes to temp_branch using this command.</p>
<pre><code>git push origin main:temp_branch
</code></pre>
<p>Meanwhile, some other changes has been added to the main branch on GitHub (my changes on <code>temp_branch</code> are not yet merged) and I was told to make some additional changes.</p>
<p>Now, I have made the changes and trying to push to the same temp_branch using these two commands</p>
<pre><code>git pull --rebase origin main
git push origin main:temp_branch
</code></pre>
<p>On doing this, I am getting the mentioned error. I was referring to this link but it does not exactly answers my problem and it suggests to use <code>-f</code> force push to override the content which I don't want to.</p>
<p><a href=""https://stackoverflow.com/questions/39399804/updates-were-rejected-because-the-tip-of-your-current-branch-is-behind-its-remot"">Updates were rejected because the tip of your current branch is behind its remote counterpart</a></p>
<p>I want to know what exactly is happening here and how do I resolve this?</p>
","3","17013278","",""
"19374975","1624277","2013-10-15 06:55:19","1","554","<git><bitbucket><git-pull>","How to make my local git copy always at its latest version automatically?","<p>My system has few git repositories with some c++ code in them. Users which send a request to my system are getting a binary executable compiled from all the git repositories together. A basic feature of this system is to send binary built from the latest version of the source. In order to do so, each time the system gets a request it runs <code>git pull --all</code>, this command takes a lot of time. I want to avoid running the pull command when a request arrives and instead to make the system run the pull command automatically when the a new version is committed. How to do it automatically?</p>

<p>The only way I can think of is somehow to query the git server periodically every second or so and run the pull command every time there is a new commit in the remote repository but I think that polling is the last solution I'm looking for. Even so, how to implement this naive polling scheme and what alternatives do I got?</p>
","0","1624277","0","0"
"19390283","1624277","2013-10-15 20:19:51","8","8991","<git><bitbucket><git-pull>","Can I issue git rev-parse on remote repository without a local copy?","<p>My local git repository is inside encrypted volume. I would like to be able to run <code>git pull --all</code> only when the remote has new commits. However, I'm unable to use post-receive hook like <a href=""https://stackoverflow.com/questions/5769568/how-to-set-up-a-git-hook-so-that-after-pushing-to-ssh-peterfoo-com-bar-com/5769715#5769715"">here</a> since I don't have the password to the encrypted volume. This means that even if the hook will be triggered I still don't know the password to mount the volume and to pull the new changes. So I'm looking for some other alternatives, one possible way I was thinking of was to ask the remote for the latest version SHA and compare it with the latest version SHA that the local copy knows, if they match I don't need to run pull command and if they don't match then I need to run the git pull command.</p>

<p>Is there a way I can run <code>git rev-parse master</code> on the remote repository?</p>

<p>You can get more background about my problem <a href=""https://stackoverflow.com/questions/19374975/how-to-make-my-local-git-copy-always-at-its-latest-version-automatically"">here</a></p>
","0","1624277","0","0"
"51162223","8908459","2018-07-03 20:12:43","1","478","<git><bitbucket><git-pull><git-remote>","Process for syncing branches between git remotes","<p>I am working on my own copy of a git repo called buildroot. I created a copy of the repo on the free bitbucket server. I am trying to periodically sync my private repo from the mainline buildroot repo.</p>

<p>I pulled down the local copy to my PC using</p>

<pre><code>git clone https://my_user@bitbucket.org/my_user/buildroot.git
</code></pre>

<p>Then I added the mainline buildroot repo as a remote</p>

<pre><code>git remote add mainline https://git.buildroot.net/buildroot
</code></pre>

<p><code>git remote -v</code> now looks like this</p>

<pre><code>mainline    https://git.buildroot.net/buildroot (fetch)
mainline    https://git.buildroot.net/buildroot (push)
origin      https://my_user@bitbucket.org/my_user/buildroot.git (fetch)
origin      https://my_user@bitbucket.org/my_user/buildroot.git (push)
</code></pre>

<p>I can pull the changes from as single branch (such as master) on the <code>mainline</code> remote and these changes show up in my <code>origin</code> repo after a <code>git push</code></p>

<pre><code>get pull mainline master
git push
</code></pre>

<p>However, new branches never show up on my <code>origin</code> repo. Do I have to explicitly checkout each one of these from <code>mainline</code> and then push to <code>origin</code> or is there a better way to do this?</p>

<p>As seen below, my private repo is missing branches 2018.02.x and 2018.05.x</p>

<pre><code>git branch -a

* master
remotes/mainline/2017.02.x
remotes/mainline/2017.05.x
remotes/mainline/2017.08.x
remotes/mainline/2017.11.x
remotes/mainline/2018.02.x
remotes/mainline/2018.05.x
remotes/mainline/master
remotes/mainline/next
remotes/origin/2017.02.x
remotes/origin/2017.05.x
remotes/origin/2017.08.x
</code></pre>
","0","8908459","0","0"
"63170071","9212101","2020-07-30 09:21:39","0","174","<git><github><git-bash><git-pull><git-stash>","how to automate the “stash-and-pull” process? (git)","<p>I create a shell script for run project in a local environment. When running the script I need include if git update also updates my local code with git code before run project.</p>
<pre><code>cd /var/www/html/project &amp;&amp; \
    git stash &amp;&amp; \
    git pull &amp;&amp; \
    git stash apply
</code></pre>
<p>There is my try. But problem their when conflict happens no way to change conflict. I need when git stash apply if conflict happen stop a script make way to resolve conflict.</p>
","3","9212101","",""
"69543510","16448466","2021-10-12 15:49:38","0","601","<git><visual-studio><github><git-pull>","How to undo the changes in github after deleting a file?","<p>Today I raised a PR (from my IDE): inside that, 3 files have been touch, in the commit I pushed.</p>
<p>Now what I did: I deleted one file's in GitHub and created a new commit (file changed is 2 now) .</p>
<p>Can you please help me to revert/undo the deletion of the file?</p>
<p>(I am very new to Git versioning system &amp; GitHub.com)</p>
","2","16448466","",""
"51243393","6381081","2018-07-09 10:29:28","0","247","<git><git-pull>","How can I git pull on the server optimally?","<p>It's two days I'm trying to pull my project (which is on git) on my server. My server has 1GB ram and uses Ubuntu OS. <em>(usually 200mb of RAM is used by other processes)</em>.</p>
<p>When I run <code>git pull origin master</code> on the server, It throws this:</p>
<blockquote>
<p>fatal: Out of memory, malloc failed (tried to allocate 533517295 bytes)</p>
<p>fatal: index-pack failed</p>
</blockquote>
<p><a href=""https://i.stack.imgur.com/PJKwd.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/PJKwd.png"" alt=""enter image description here"" /></a></p>
<p>Also here is the result of <code>nano .git/config</code>:</p>
<pre><code>[core]
    repositoryformatversion = 0
    filemode = true
    bare = false
    logallrefupdates = true
    packedGitLimit = 512m
    packedGitWindowSize = 512m

[remote &quot;origin&quot;]
    url = https://***@bitbucket.org/***/***.g$
    fetch = +refs/heads/*:refs/remotes/origin/*

[pack]
  threads = 1
  deltaCacheSize = 512m
  packSizeLimit = 512m
  windowMemory = 512m
</code></pre>
<p>Honestly I cannot get more RAM for my server. Any idea how can I pull my project on the server?</p>
<p>Noted that in reality there are real names instead of <code>***</code>.</p>
","6","6381081","",""
"52669792","2160682","2018-10-05 16:24:40","4","1729","<git><git-pull>","How to undo git pull and retaining uncommitted changes","<p>I think this is the stupid thing a developer can do, but I did it accidentally.
I had made changes to local master and did not commit it. And suddenly I made <code>git pull</code>, and then the local master got updated with my changes and remote repo changes. Now I can merge the changes by resolving conflicts if any. But I want to undo this pull and preserve the changes I have done which are not committed. Is this possible? Correct me if I am wrong. Please help me.</p>
","4","2160682","",""
"27482569","4013940","2014-12-15 11:01:41","0","451","<git><github><ssh><ssh-keys><git-pull>","git pull request failed with ""Permission denied (publickey)"" error","<p>I have tried to pull my official repository to my local machine using</p>

<pre><code>git pull git@github.com:x/x_project_management_app.git master
</code></pre>

<p>but it failed with error</p>

<pre><code>Permission denied (publickey).
fatal: The remote end hung up unexpectedly
</code></pre>

<p>I have regenerated and added my system ssh-public key to my  github account and tried again, but I'm still facing same error. How can I fix it?</p>
","6","4013940","",""
"28164604","4013940","2015-01-27 06:37:46","2","4067","<git><github><ssh-keys><git-pull>","git pull request failed with “Permission denied (publickey)” error","<p>I have tried to pull my official repository to my local machine using</p>

<pre><code>git pull git@github.com:x/x_project_management_app.git master
</code></pre>

<p>but it failed with error</p>

<pre><code>    Permission denied (publickey).
fatal: The remote end hung up unexpectedly
</code></pre>

<p>I have regenerated and added my system ssh-public key to my github account,I tried with different  system also,but I'm still facing same error. How can I fix it?</p>
","0","4013940","0","0"
"54577032","8137208","2019-02-07 15:43:25","2","888","<git><git-pull><git-clone><multiple-users>","How can you set up a git repository on a server, and allow multiple users to do a git pull, instead of it being owned by one user?","<p>As a team of developers, we build our projects locally (using git) &amp; and push the code to a private repository specific to that project. For web applications, we connect to the production server via SSH and pull the code in. Our issue is that only one person has permission to do a git pull when an update needs to be pulled to a server.</p>

<p>When a project is added to a server we would generally run the following command:</p>

<pre><code>git clone https://username@bitbucket.org/team-name/test-repository.git
</code></pre>

<p>Then when you want to do a  <code>git pull</code> to that repository, you get prompted for your password: </p>

<pre><code>Password for 'username@bitbucket.org':
</code></pre>

<p>However, if a different user tries to do a <code>git pull</code>, they will also be asked for the original users password.
What we would like to do, is authorize our team, or at least some other sort of authorization where we could all do a <code>git pull</code> without having to ask someone else to log in and do it for each other.</p>

<p>I've tried cloning a git repo without the username:</p>

<pre><code>git clone bitbucket.org:team-name/test-repository.git .
</code></pre>

<p>But instead of that working, got this result:</p>

<pre><code>Cloning into '.'...
Warning: Permanently added the RSA host key for IP address '0.0.0.0' to the 
list of known hosts.
Permission denied (publickey).
fatal: The remote end hung up unexpectedly   
</code></pre>

<p>We've also found another approach.  If I was to log in to do a <code>git pull</code>, you could use this command:</p>

<pre><code>git remote set-url origin https://username@bitbucket.org/team-name/test-repository.git
</code></pre>

<p>This would then allow you to point the repository to your latest commit, and do a git pull from there using your own password, but I still think there must be a better way.</p>

<p>There must be some way where you can simply login and use:</p>

<pre><code>git pull
Password for 'username@bitbucket.org':
</code></pre>

<p>Even if someone else has cloned down the repository in the first place?</p>
","0","8137208","",""
"56895679","11247758","2019-07-05 01:57:33","1","60","<github><git-pull><git-remote>","Can I download contents remotely by ""git pull staff master"" for as many times as I want?","<p>I downloaded a bunch of files into a local folder by ""git pull staff master"" a few days ago. But I deleted the entire folder by mistake. Then I tried to download those files again by ""git pull staff master"" again. Although I got </p>

<pre><code>From ...(URL)
* branch      master    -&gt; FETCH_HEAD
Already up to date
</code></pre>

<p>I didn't have files in fact downloaded in the folder. During those days, I didn't make any changes. The URL of the remote repo remained the same.</p>

<p>How can I download those files again? Is there a setting like ""can only git pull once"" that prevents me from downloading those files for more than once?</p>
","0","11247758","",""
"56904020","11744143","2019-07-05 13:28:07","1","81","<git><github><git-pull>","How do I manage conflicts between local git and github","<p>first time question. I'm doing a tutorial on git and covering the instance where the code on the server has been updated and the local code has been independently updated so there is a conflict. </p>

<p>In the video, the lecturer does a git pull and this tries to get the files. The dialog gets details then says</p>

<pre><code>Auto-merging hello.html
</code></pre>

<p>but mine, at that stage, says</p>

<pre><code>error: Your local changes to the following files would be overwritten by merge:
        hello.html
</code></pre>

<p>I ended up not being able to push or pull changes until I resolved the conflict. I ended up having to do  </p>

<pre><code>git stash
git pull
git stash apply --index
</code></pre>

<p>Is there a configuration I need to apply to my local git to get it to try the auto-merge? </p>

<p>for clarity I get</p>

<pre><code>$ git pull
error: Your local changes to the following files would be overwritten by merge:
        hello.html
Please commit your changes or stash them before you merge.
Aborting
Updating 7ed9dbb..0525225

Erik@DESKTOP-TI7OP0E MINGW64 /e/gitrepo/webcourse (master)
$ git commit -m ""save""
On branch master
Your branch is behind 'origin/master' by 1 commit, and can be fast-forwarded.
  (use ""git pull"" to update your local branch)

Changes not staged for commit:
        modified:   hello.html

no changes added to commit
</code></pre>
","3","11744143","",""
"74284763","11430911","2022-11-02 05:37:57","0","28","<git><git-rebase><git-pull>","What is the difference between git pull origin [another_branch] vs git rebase [another_branch]?","<p>I know git pull creates a new commit and rebase goes commit by commit and make it on top of another. Other than the extra merge commit is there any other difference or danger involved?</p>
","1","11430911","",""
"56932790","6197439","2019-07-08 10:15:36","2","163","<git><git-pull>","Why is git pull needed to update a (different) branch (moving branch to latest commit without git pull)?","<p>I would gladly have written a more precise topic for this question, but I cannot express it better at the moment.</p>

<p>Basically, let's say you have a repo where you have several branches, say ""master"" and ""mybranch"".</p>

<p>So, let's say you're on master:</p>

<pre><code>$ git status
On branch master
Your branch is up to date with 'origin/master'.

nothing to commit, working tree clean
</code></pre>

<p>Then you do <code>git pull</code> here; new commits are retrieved both for <code>master</code> branch, and the <code>mybranch</code>. Since you are already in branch <code>master</code>, <code>master</code> has its HEAD automatically updated by <code>git</code> to the latest received commit.</p>

<p>Now, let's say you change branch using checkout:</p>

<pre><code>$ git checkout mybranch
Switched to branch 'mybranch'
Your branch is behind 'origin/mybranch' by 2 commits, and can be fast-forwarded.
  (use ""git pull"" to update your local branch)
</code></pre>

<p>Now this is what puzzles me - in the previous pull, (apparently) all of the latest commits - including those in <code>mybranch</code> - had been retrieved; otherwise my local git would not ""know"" that my local branch ""is behind ... by 2 commits"".</p>

<p>So my question is: why would I need to do ""git pull"" again, having a needless roundtrip to the server - when we already have those new commits for <code>mybranch</code> downloaded? Isn't there a ""git update-head"" or some command, which would do it locally, without a round-trip to the server?</p>
","0","6197439","",""
"56957496","2420520","2019-07-09 17:05:39","1","598","<git><git-merge><git-pull>","Preferred strategy for git pull with permanent local changes","<p>I cloned a remote repository and changed one file. Now I want to update the repository from remote time-to-time, but keep the changes in that file. I could find several strategies all over the internet:</p>

<ul>
<li>commit the file to master and rebase on every git pull (i.e. git fetch &amp;&amp; git merge --ff-only)</li>
<li>commit the file to a different branch and cherry-pick on every git pull</li>
<li>commit the file to a fork and update the remote fork from the original remote</li>
<li>stash file before and stash pop after every git pull</li>
<li>create patch file and patch the file on every git pull</li>
<li>maintain external older copy, remove the conflicting file before git pull and merge changes using external merge tool after git pull</li>
<li>--assume-unchanged &amp; --skip-worktree (it seems these don't work the way I want, but are recommended all over the stackoverflow)</li>
<li>modifying .git directory (does it worth the effort to poke around in .git folder and possibly break something, even though this is only a local clone of a remote?)</li>
</ul>

<p>There could be posssibly some other approaches.</p>

<p>What is the preferred strategy for git pull with permanent local changes? Are there any limitations with any of these? What is the most safe approach in terms of preserving most of the remote and local changes and avoiding merge conflicts?</p>
","7","2420520","0","0"
"73936598","11382791","2022-10-03 14:02:05","0","569","<git><github><ubuntu-20.04><git-push><git-pull>","git push and pull remote only work with sudo mode","<p>When i use <code>git pull</code> it shows error :</p>
<pre><code>fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
</code></pre>
<p>but when i use <code> sudo git pull</code> it show success :</p>
<pre><code>Already up to date.
</code></pre>
<p>This problem only happens in private repo, when i change the visibility to public, i can pull with <code>git pull</code> well.
How to make git work with git pull and not need to add sudo.</p>
<p>/home/username/.ssh
<a href=""https://i.stack.imgur.com/WOMyO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/WOMyO.png"" alt=""git pull "" /></a></p>
<p>/root/.ssh</p>
<p><a href=""https://i.stack.imgur.com/Z1XKr.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Z1XKr.png"" alt=""enter image description here"" /></a></p>
<p>git remote -v
<a href=""https://i.stack.imgur.com/bTMY7.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bTMY7.png"" alt=""enter image description here"" /></a></p>
<p>i copy id_rsa.pub to github</p>
","9","11382791","",""
"57156664","301513","2019-07-23 04:22:04","12","4025","<git><git-pull>","How to let git pull from branch not from tag?","<p>Our repo happens to have a tag that has the same name as the branch name. So when I try to pull from that branch, git confused and pulled from tag, like this. I have to delete that tag first to make my git pull work.</p>

<p>So how do I tell git pull from branch not from tag ?</p>

<pre><code>cc-backend ➤ git pull origin 0.9.0-rc6-patch1                                       
From 10.0.0.28:webcc/cc-backend
 * tag                 0.9.0-rc6-patch1 -&gt; FETCH_HEAD
Already up to date.

/* I have to delete that tag and git pull again to get the result I want */

cc-backend ➤ git pull origin 0.9.0-rc6-patch1                                       
From 10.0.0.28:webcc/cc-backend
 * branch              0.9.0-rc6-patch1 -&gt; FETCH_HEAD
Updating 9d7e9dc3..2bf3f96a
Fast-forward
 app/Services/GroupSeat/Seat.php | 5 ++---
 1 file changed, 2 insertions(+), 3 deletions(-)
</code></pre>
","0","301513","0","0"
"73971090","17507207","2022-10-06 08:56:40","0","212","<jenkins><jenkins-pipeline><bitbucket><git-pull>","how to create a jenkins pipeline for git pull","<p>I am trying to create a jenkins pipeline to do a git pull job, but while i am doing it is throwing the error
<code>fatal: could not read Password: No such device or address</code></p>
","1","17507207","",""
"57229595","1245120","2019-07-27 06:03:07","3","5083","<git><gitlab><git-push><git-pull><git-lfs>","batch response: dial tcp: lookup gitlab.com: no such host","<p>If I'm going to push a small private repository, every thing's OK</p>

<pre><code>Sepideh@DESKTOP-M232FOC MINGW64 /e/Test_gitlab (master)
$ git push -u origin --all
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Writing objects: 100% (3/3), 236 bytes | 78.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0)
To gitlab.com:abadpours/test.git
 * [new branch]      master -&gt; master
Branch 'master' set up to track remote branch 'master' from 'origin'.

Sepideh@DESKTOP-M232FOC MINGW64 /e/Test_gitlab (master)
$ git push -u origin --tags
Everything up-to-date  
</code></pre>

<p>But for a big (1.94 GB), LFS-enabled private repository, I'll have the following:  </p>

<pre><code>Sepideh@DESKTOP-M232FOC MINGW64 /e/MSc_Thesis (master)
$ git config lfs.https://gitlab.com/abadpours/msc_thesis.git/info/lfs.locksverify true

Sepideh@DESKTOP-M232FOC MINGW64 /e/MSc_Thesis (master)
$ git push -u origin --all
Connection to gitlab.com closed by remote host.
Uploading LFS objects:   0% (0/4), 62 MB | 109 KB/s, done
batch response: Post https://gitlab.com/abadpours/msc_thesis.git/info/lfs/objects/batch: dial tcp: lookup gitlab.com: no such host
error: failed to push some refs to 'git@gitlab.com:abadpours/msc_thesis.git'  
</code></pre>

<p>The result is the same since yesterday. Are there any way to solve the problem?</p>
","1","1245120","0","0"
"74103518","20258540","2022-10-17 21:37:43","0","18","<git><github><git-pull>","How to pull from your remote git repository to your local repository without merge?","<p>I'm currently trying to pull from my remote repository into my local rep however, I don't want it to merge with my local changes.</p>
<p>My problem is that I've made changes to my local repository that I'm not happy with and would like to go back to the previous version of my code.</p>
<p>So my question is how can I pull from my current remote repository into my local machine essentially getting back the previous version?</p>
","1","20258540","",""
"74130766","524587","2022-10-19 19:18:45","-1","359","<git><powershell><git-clone><git-pull>","PowerShell, git pull if present, or git clone if not","<p>I saw this construct on a question about bash</p>
<pre><code>git -C 'repo-path' pull || git clone https://server/repo-name 'repo-path'
</code></pre>
<p>So, if the <code>git pull</code> fails, then do the <code>git clone</code>, which seems quite a clean approach.</p>
<p>What would be an equivalent syntax for this in PowerShell?</p>
","0","524587","",""
"74160782","10561037","2022-10-22 02:59:51","0","30","<git><bitbucket><git-commit><git-push><git-pull>","Lost Changes after rolling back the last push on git","<p>I rolled back my last push from git using the following commands:</p>
<pre><code>git reset --hard HEAD@{1}
git push -f
git reset --hard HEAD@{1}
</code></pre>
<p>The push was successfully deleted but I lost all the changes from file and the rest of the files from visual studio.
How can I get those changes back?</p>
","5","10561037","",""
"74392439","18631280","2022-11-10 16:38:38","-1","33","<reactjs><json><git><github><git-pull>","why do i not have the same data when pull github","<p>i am triying to pull a branch in my local but i didn't have the same data like in github repository, in the terminal, says: <code>Already up to date</code>.</p>
<p>For examples in my github repository, i have a file named <code>data.json</code>, the content of this this is not the same as the <code>data.json</code> i have in my local repository.</p>
<p>Here is the github link : <a href=""https://github.com/Meriemu/TestCaseLvmh/blob/feature/slider/public/data.json"" rel=""nofollow noreferrer"">https://github.com/Meriemu/TestCaseLvmh/blob/feature/slider/public/data.json</a></p>
<p>And here is a screnshot of my local data :
<a href=""https://i.stack.imgur.com/dgRN3.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/dgRN3.png"" alt=""enter image description here"" /></a></p>
","2","18631280","",""
"74444570","19086184","2022-11-15 11:06:03","-1","350","<git><gitlab><access-token><git-pull>","How can I pull changes from a git repository using a project access token?","<p>I created a project access token with sufficient rights (read_repository, write_repository, read_registry, write_registry). Now I searched for a way to pull new changes to my already created repo using that token.</p>
<p>I found two ways to use a project access token: 1. for pulling git registry docker images: <code>docker login -u &lt;access-token-name&gt; -p &lt;access-token&gt; gitlab...</code> and 2. for cloning repos: <code>git clone &quot;https://my-project:$PROJECT_TOKEN@my.gitlab.host...</code>, but nothing to git pull (code, not images) with an already existing/cloned repository.</p>
<p>Another user but me originally cloned the repo and I don't want to use their account nor my personal account to login.</p>
","0","19086184","",""
"74543596","3768495","2022-11-23 08:15:06","0","51","<git><version-control><git-push><git-pull><git-lfs>","How to re-use a git lfs tracked file in another repo?","<p>I have been searching on SO for a while and found some related topics like <a href=""https://stackoverflow.com/questions/35011366/move-git-lfs-tracked-files-under-regular-git"">this</a> and <a href=""https://stackoverflow.com/questions/34181356/where-are-git-lfs-files-stored"">this</a>, but I still can't solve the problem I am having:</p>
<p>So in repo A, I used 'git lfs&quot; and everything worked fine - a 2GB text file was tracked and pushed, and the text file now looks like this:</p>
<pre><code>version https://git-lfs.github.com/spec/v1
oid sha256:4bd049d85f06029d28bd94eae6da2b6eb69c0b2d25bac8c30ac1b156672c4082
size 3771098624
</code></pre>
<p>Then I realized that I need to use this large text file, <strong>full_file_list.txt</strong>, in another repo, so I first copied this now 3-line file over to a different directory, and ran <code>git init</code> then wrote a few scripts then <code>git add .</code> then <code>git commit -m &quot;init&quot;</code>. With this repo B set up, I also ran <code>git lfs install</code> then <code>git lfs migrate import --everything</code> and then <code>git lfs pull</code>. This is what I got:</p>
<pre><code>batch request: missing protocol: &quot;&quot;, 0 B | 0 B/s
error: failed to fetch some objects from ''
</code></pre>
<p>I don't understand why it is a <code>batch request</code> since I have only ONE large file. Also, when I ran <code>git lfs ls-files</code>, this is what I got:</p>
<pre><code>a2daa75053 * main.py
4146614001 * utils/__pycache__/utils.cpython-37.pyc
50008faf1f - utils/full_file_list.txt
f2b404dbf3 * utils/utils.py
</code></pre>
<p>Does this mean in the new repo, the <code>git lfs</code> tracked all the four files? If that's the case, how do I let it only track the <code>utils/full_file_list.txt</code>?</p>
<p>Overall, I need to access the content of the 2GB text file but don't know how to. Please kindly help. Thanks!</p>
","0","3768495","",""
"74551735","79125","2022-11-23 18:51:51","0","31","<git><git-pull><fast-forward>","Does git have a built-in command to ffwd all tracking branches?","<p>I work with multiple branches, but I'm only modifying one of them (I'll call it <code>working</code>). I'd like to be able to get the latest for <code>working</code> but also get the latest for all of my tracking branches. Since the other tracking branches are rarely modified, they can usually fast forward.</p>
<p>I'd hoped git-pull could do it, but this doesn't achieve my desired result:</p>
<pre><code>git checkout working
git pull --ff-only --all
</code></pre>
<p>My local <code>main</code> branch wasn't modified: it is still behind the remote branch <code>mine/main</code>.</p>
<p>I can force the update to main:</p>
<pre><code>git br -f main mine/main
</code></pre>
<p>But I'd rather something automatic and something safer so it only modifies the branch if it can be safely fast forwarded. However, I don't actually want to check out the branch since I'm not actively working on it and don't intend to merge.</p>
<p>There are a bunch of scripts on <a href=""https://stackoverflow.com/q/4318161/79125"">Can &quot;git pull --all&quot; update all my local branches?</a>, but this question is about a solution <strong>built into git</strong>.</p>
<p><em>Related but unhelpful: <a href=""https://stackoverflow.com/a/33403086/79125"">Does a git pull update all tracked branches?</a></em></p>
","0","79125","",""
"74628429","18462665","2022-11-30 13:16:17","0","53","<git><merge><branch><commit><git-pull>","Best way to push a new commit to already existing branch with new changes from master branch in git","<p>I am new to Git and wanted to understand the best way to push things.
I have 2 branches. One is master and other is my feature branch.</p>
<p>I worked on master branch and followed the below commands to push to master branch:</p>
<pre><code>Had few changes on master branch.

On master:
git stash save -u &quot;some-msg&quot;
git pull
git stash pop (no conflicts)
git checkout -b feature

On feature feature:
git push --set-upstream origin feature
git push
</code></pre>
<p>Few commits are added to master branch and also feature branch by others. Now I made some more changes in feature branch and I wanted to have my feature branch in sync with master. I wanted to know what is the best way to do it without diverging from origin/feature.</p>
<pre><code>On feature branch:

option1: (have new changes in feature branch)
git stash save -u &quot;new commit&quot;
git pull (to get new commits from feature branch)
git pull origin master (to get commits from master)
git stash pop
git push

option 2: (have new changes in feature branch)
git pull --rebase
git pull origin master
git push
</code></pre>
<p>Any other good ways are highly appreciated!</p>
","2","18462665","",""
"74890408","1974272","2022-12-22 15:09:47","-4","52","<git><git-merge><git-pull>","Keep git repository updated","<p>I'm still confused with all Git options :-(<br />
I have a local repository and I want to update it on a daily basis with latest on a branch.<br />
There are no changes in it so I just ran this every day</p>
<pre><code>git pull origin develop 
</code></pre>
<p>but for some reason I get this error so I guess pull is a bad option, I also don't want to delete and clone it every day</p>
<pre><code>error: Pulling is not possible because you have unmerged files.
hint: Fix them up in the work tree, and then use 'git add/rm &lt;file&gt;'
hint: as appropriate to mark resolution and make a commit.
fatal: Exiting because of an unresolved conflict.
</code></pre>
<p>Which command I should use ?</p>
","0","1974272","",""
"74981803","7357046","2023-01-02 11:23:17","1","61","<git><github><git-branch><git-pull>","I have two branches in Github: main and production. for one server I want to make git pull default to production although it is not the default branch","<p>I have <code>main</code> and <code>production</code> branches in my GitHub repo.</p>
<p>I have 2 servers: one for production and the other for testing.</p>
<p>I want branches to match as follows:</p>
<pre><code>main branch =&gt; testing server
production branch =&gt; production server
</code></pre>
<p>I have set up my ssh for both servers. I just want when I write: <code>git pull</code> in the production server to pull changes for the production branch, and when I write <code>git pull</code> in the testing server to pull changes from the main branch.</p>
<p>how can I do that?</p>
<p>I know I can pull the branch specifically but I want to make it automatic to prevent pulling testing changes to production by mistake.</p>
","2","7357046","",""
"75018709","16975118","2023-01-05 12:53:16","0","37","<git><github><backend><git-push><git-pull>","Unable to access 'https://github.com/user-name/repo-name.git/': The requested URL returned error: 403","<p>Whenever I try to:</p>
<ol>
<li><code>push</code>,</li>
<li><code>pull</code>,</li>
<li><code>clone</code></li>
</ol>
<p>it gives me this <em>error</em>:</p>
<pre><code>permission denied :unable to access 'https://github.com/Sherif-nasser/mqtttest.git/': The requested URL returned error: 403
</code></pre>
<p>Things I have tried to solve the issue:</p>
<p>1 - change and make sure the remote is right<br />
2 - using personal access token from developer settings when asking for password<br />
3 - trying to enter the password at password level<br />
4 - updated the git on my ubuntu to the newer version <code>2.39</code></p>
<p>nothing of the above methods worked and till now still getting the same error <code>403</code>.</p>
<p>I would be glad if there is an engineer could help be with that.</p>
","0","16975118","",""
"75097772","2049545","2023-01-12 14:23:16","2","867","<r><git><github><rstudio><git-pull>","How to solve error bad object refs/heads/main (1) after running git pull","<p>How can I solve this error when I run <code>git pull</code> in Terminal on a Mac?</p>
<pre><code>remote: Enumerating objects: 115, done.
remote: Counting objects: 100% (115/115), done.
remote: Compressing objects: 100% (66/66), done.
remote: Total 104 (delta 71), reused 63 (delta 30), pack-reused 0
Receiving objects: 100% (104/104), 3.92 MiB | 3.16 MiB/s, done.
Resolving deltas: 100% (71/71), completed with 9 local objects.
fatal: bad object refs/heads/main (1)
error: https://github.com/[...domain name...]/website.git did not send all necessary objects
</code></pre>
<p>The background is that I have a website that usually works with no problem. I created it in RStudio and sync it with github. Netlify goes from there. Here is what the setup is based on: <a href=""https://www.apreshill.com/blog/2020-12-new-year-new-blogdown/"" rel=""nofollow noreferrer"">https://www.apreshill.com/blog/2020-12-new-year-new-blogdown/</a>.</p>
<p>After I make changes in RStudio, from within RStudio, I can usually just commit and then push the changes. But this time, it says this:</p>
<pre><code> ! [rejected]        HEAD -&gt; main (non-fast-forward)
error: failed to push some refs to 'https://github.com/[domain name]/website.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Integrate the remote changes (e.g.
hint: 'git pull ...') before pushing again
</code></pre>
<p>So I go to Terminal and change the working directory to where the files are stored and run <code>git pull</code>. I then get the <code>fatal: bad object refs/heads/main (1)</code> error mentioned above. Based on <a href=""https://stackoverflow.com/questions/37145151/how-to-handle-git-gc-fatal-bad-object-refs-remotes-origin-head-error"">How to handle git gc fatal: bad object refs/remotes/origin/HEAD error?</a>, I tried <code>git gc</code> and get this error:</p>
<pre><code>error: bad ref for .git/logs/HEAD (1)
error: bad ref for .git/logs/refs/heads/main (1)
fatal: bad object refs/heads/main (1)
fatal: failed to run repack
</code></pre>
<p>I also tried <code>git remote set-head origin --auto</code> and then <code>git gc</code> and get the same error as directly above.</p>
<p>If I run <code>cat .git/refs/remotes/origin/HEAD</code>, it says: <code>refs/remotes/origin/main</code>.</p>
<p>Finally, I tried <code>git reset --hard</code> before <code>git pull</code> and this gives me the original error.</p>
<p>I am not sure what to do at this point. I am totally fine to get everything from the remote server and redo my local changes.</p>
","4","2049545","",""
"75116983","17376457","2023-01-14 09:31:40","0","122","<git><git-push><git-pull><merge-conflict-resolution>","Is git able to resolve any conflict on the remote?","<p>In some situations while using git you are not able to push your commits due to commits on the remote branch, which you do not have on your local branch. You pull first and sometimes the conflicts are auto-resolved. So, after git pull, you are able to git push.</p>
<p>Why is git not able to resolve this conflict on the remote?</p>
","3","17376457","",""
"75336650","14880491","2023-02-03 13:51:53","1","63","<git><pdf><git-pull>",".pdf files not updating when I use git pull on server although they are updated on github repo","<p>So I am trying to update a .pdf file that I am using on my website (termsandconditions).</p>
<p>What I have done and tried is replacing the .pdf file in the repo which has worked because if I go to the repo and click to display the .pdf file it is the updated one, then when I do git pull on my server it says that there has been a positive 'bit' change so it has recognised that there has been a difference but then when I go to the website and press the button which opens the .pdf directory it shows the outdated file.</p>
<p>I've been trying all sort of changes and none have worked. When I delete the file out of the repo and git pull on the server it still somehow displays the file although it is no longer in the repo.</p>
<p>I am new to git so this is probably a common mistake but I just can't find an answer to this anywhere.</p>
","0","14880491","",""
"75864832","20012776","2023-03-28 10:02:32","0","71","<git><pull-request><git-pull><pull>","How to resolve ""fatal: bad object refs/stash 2 error: https://github.com/example.git did not send all necessary objects"" git error","<pre><code>% git pull
remote: Enumerating objects: 5, done.
remote: Counting objects: 100% (5/5), done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 5 (delta 3), reused 5 (delta 3), pack-reused 0
Unpacking objects: 100% (5/5), 654 bytes | 654.00 KiB/s, done.
fatal: bad object refs/stash 2
error: https://github.com/example.git did not send all necessary objects
</code></pre>
<p>I expected that the pull request just would pull my repo without any errors.</p>
","1","20012776","",""
"75917611","21206020","2023-04-03 08:50:18","1","38","<git><bitbucket><git-submodules><git-push><git-pull>","Unable to git push a submodule, but being able to pull it","<p>I am not very skilled in git. I have a git repo, say <code>mainrepo</code>, with a remote one on Bitbucket. <code>mainrepo</code> has a submodule in <code>mainrepo/modules/mymodule</code>.</p>
<p>I do not understand exactly what a submodules is, but, as I see, this sets the <code>.git</code> repo of the submodule inside <code>mainrepo/.git/modules/mymodule</code>.</p>
<p>In any case, I have two branches for <code>mainrepo</code> and <code>mymodule</code>, having the same names:</p>
<ol>
<li><code>develop</code>, which is present on remote</li>
<li><code>feature</code>, which is <strong>not</strong> present on remote</li>
</ol>
<p>For both <code>mainrepo</code> and <code>mymodule</code>, I have committed a modification on <code>feature</code>, fetched the latest modifications from <code>origin/develop</code> into <code>develop</code>, and merged those modifications in the <code>feature</code> branch.</p>
<p>I did it for both <code>mainrepo</code> and the submodule <code>mymodule</code> with no problem.</p>
<p>Now, I need to push those branches on remote, I am using Bitbucket. Note that on Bitbucket <code>mainrepo</code> and the <code>mymodule</code> are contained in two separated repositories. To do that I made</p>
<pre><code>git push --set-upstream origin feature
</code></pre>
<p>This command works fine for <code>mainrepo</code>, but does not work for the submodule <code>mymodule</code>, I get the following error message</p>
<pre><code>The requested repository either does not exist or you do not have access. If you believe this repository exists and you have access, make sure you're authenticated.
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
</code></pre>
<p>I tried to re-authenticate with SSH key, but nothing changed. I checked that the remote submodule repository exists, and it does. What it is confusing is that I can git pull, but not push.</p>
","3","21206020","",""
"75997854","12475594","2023-04-12 16:33:38","0","46","<git><github><git-push><git-pull>","Issue with pulling/pushing code to github","<p>While trying to pull code from Github, it throws this error</p>
<pre><code>SSL certificate problem: unable to get local issuer certificate
</code></pre>
<p>Background - Running on windows, corporate laptop but accessing git doesn't require a firewall or specific certificates.</p>
<p>Tested solutions are in this link, but so far nothing has worked. -
<a href=""https://stackoverflow.com/questions/23885449/unable-to-resolve-unable-to-get-local-issuer-certificate-using-git-on-windows"">Unable to resolve &quot;unable to get local issuer certificate&quot; using git on Windows with self-signed certificate</a></p>
<p>After changing <code>sslBackend</code> from <code>openssl</code> to <code>schannel</code>, I was getting a different error</p>
<pre><code>schannel: next InitializeSecurityContext failed: Unknown error (0x80092012) - The revocation function was unable to check revocation for the certificate.
</code></pre>
<p>Tried setting</p>
<pre><code>git config --global http.schannelCheckRevoke false;
git config --global http.sslVerify false
</code></pre>
<p>but the error code hasn't been resolved or changed.</p>
<p>Here is my <code>.gitconfig</code> for reference.</p>
<pre><code>[diff &quot;astextplain&quot;]    
    textconv = astextplain 
[filter &quot;lfs&quot;]  
    clean = git-lfs clean -- %f     
    smudge = git-lfs smudge -- %f   
    process = git-lfs filter-process    
    required = true 
[http]  
    sslBackend = openssl    
    sslCAInfo = C:/Users/%userprofile%/AppData/Local/Programs/Git/mingw64/etc/ssl/certs/ca-bundle.crt 
[core]  
    autocrlf = true     
    fscache = true  
    symlinks = false 
[pull]  
    rebase = false 
[credential]    
    helper = manager 
[credential &quot;https://dev.azure.com&quot;]    
    useHttpPath = true 
[init]  
    defaultBranch = master 
</code></pre>
","1","12475594","",""
"76068962","21585636","2023-04-20 23:54:01","-1","66","<git><git-pull>","Git remote branch is ahead of the local branch. Then, when using `git pull`, I'm told that the local repository is ""Already up to date.""","<p>There is one additional file in my remote repository branch &quot;v2&quot;. On my local repository branch &quot;v2&quot;, <code>git status</code> states:</p>
<p>&quot;Your branch is ahead of 'origin/main' by 1 commit.&quot;</p>
<p>However, because I pushed this additional file (i.e. pushed the commit) from a different account on a different machine, the remote repository branch &quot;v2&quot; is ahead of origin/main by 2 commits. All I want to do is bring my local branch &quot;v2&quot; up-to-date so that it too is 2 commits ahead of origin/main, but, when I try to <code>git pull</code>, I'm told that it is &quot;Already up to date.&quot;</p>
<p>I've tried <code>git fetch --all</code>, to another <code>git pull</code>, which didn't work. Then I tried <code>git reset --hard</code> to another <code>git pull</code>, which also didn't work.</p>
<p>Does anyone have any insight here?</p>
","2","21585636","",""
"7365415","39381","2011-09-09 17:43:12","17","10058","<git><branch><git-push><git-pull><git-fetch>","pull-only repo's 'git status' saying the branch is ahead of origin/master. Why?","<p>So here's the situation:</p>
<blockquote>
<p>$ git status<br />
# On branch master<br />
# Your branch is ahead of 'origin/master' by [x] commits.<br />
#</p>
</blockquote>
<p>There are several questions about this on SO already, but none seem to specifically address the type of scenario I have. <a href=""https://stackoverflow.com/questions/2432579/git-your-branch-is-ahead-by-x-commits/3323933#3323933"">This answer</a> to one of the questions comes closest, but doesn't go into detail.</p>
<p>I'll just quote it verbatim:</p>
<blockquote>
<p>If you get this message after doing a &quot;git pull remote branch&quot;, try following it up with a &quot;git fetch&quot;.</p>
<p>Fetch seems to update the local representation of the remote branch, which doesn't necessarily happen when you do a &quot;git pull remote branch&quot;.</p>
</blockquote>
<p>That tip does indeed work. But &quot;doesn't necessarily happen?&quot; Why not? I need to understand this. What is pull not doing?</p>
<p>I don't want to take over that question, so here's my scenario in detail:</p>
<p>Three computers involved. The Mac on which I develop, my home server where the git repo (i.e. origin/master) lives and a Webfaction account that pulls from that server.</p>
<p>I do commits and <code>git push origin master</code> only on the Mac. The only command that ever gets run on Webfaction as part of the normal workflow is <code>git pull origin master</code> (as part of a Fabric deployment script). I don't modify code there. I'm a lone developer, so neither does anyone else.</p>
<p>Every now and then I log in to Webfaction and check on things, including a <code>git status</code>. Inevitably, I always get the &quot;Your branch is ahead...&quot; message. Running <code>git fetch</code> makes the message go away.</p>
<p>I'm about to add <code>git fetch</code> to the Fabric script to be done with this issue, but I want to know why that needs to be done, especially on a pull-only clone of origin/master. I'm not deeply versed in Git though I use the basic functionality daily, so a newbie-friendly explanation would be appreciated.</p>
<p><strong>Update</strong> as requested, the relevant bits from <code>config</code>:</p>
<pre><code>[remote &quot;origin&quot;]
    fetch = +refs/heads/*:refs/remotes/origin/*
    url = git@[server_address]:[path/to/repo.git]
[branch &quot;master&quot;]
    remote = origin
    merge = refs/heads/master
</code></pre>
","3","39381","0","0"
"7410477","472858","2011-09-14 01:59:38","0","306","<linux><git><git-pull>","can git pull support continue download?","<p>I am using git to update the nios2 for linux archive packages, but network is really very much slow, I am boring with that when the connection broken unexpectedly,I had to restart the work, it cost too much time, so I wondered that can git pull continue download source tree from last break point?  </p>

<p>regards</p>
","0","472858","",""
"63093604","10179731","2020-07-25 21:10:55","0","749","<django><git><git-pull><pythonanywhere>","How do I get my pythonanywhere to make changes on my web page after doing git pull?","<p>I have a problem with updating my code from <em>GitHub</em> to <em>Python Anywhere</em>. I am following <em>Django Girls Tutorial</em>. I've updated some code on my local files and have pushed to GitHub with new commit. I could see the change in my Github repository. Then I tried <code>git pull</code> at <em>Python Anywhere</em> and I saw this message:</p>
<pre><code>Updating ebefb9b..75b3566 error: Your local changes to the following files would be overwritten by merge: blog/templates/blog/base.html blog/templates/blog/post_detail.html blog/views.py mysite/settings.py mysite/urls.py Please, commit your changes or stash them before you can merge. error: The following untracked working tree files would be overwritten by merge: blog/templates/registration/login.html Please move or remove them before you can merge. Aborting.
</code></pre>
<p>So I tried everything but still it didn’t work until I saw a post here on stackoverflow that suggested, <code>git reset --hard</code> before <code>git pull</code> and I applied it and it solved the problem but I couldn’t see changes on my web page. I can only see the Django installation success web page. I have done reload, refresh everything but still can’t get any help.</p>
","0","10179731","",""
"8301258","200567","2011-11-28 19:33:44","1","608","<ruby-on-rails><git><git-push><git-pull>","How can I setup a non-bare git repo on my server?","<p>I'm trying to setup a decent development pattern with my friend.  The plan is that we do independent development on our own computers, then push to the dev server for testing, and then we push from the dev server to the productive server (Heroku).</p>

<p>The problem is, I can't make git behave.  Perhaps I just don't know enough to fundamentally understand what's happening.  I've setup the repo on the dev server, but when I clone it to my personal computer, I can't ""push"" it back because it complains about pushing to a non-bare repo.  So then I tried branching the repos, and pushing branches, but now I get a lot of fast-forward statements, and I don't think I want those either.</p>

<p>So my question is this.  How do I setup the server so it all just ""works""?  The server cannot be a bare repo, it needs to have the code in it so we can test the app.  We want to be able to push and pull from the repo to our own dev computers smoothly.  And the server needs to be able to push to Heroku (it can do this already).  This is on my own server, so I have complete access to whatever I need to get this working. (Ubuntu Server Edition 11.04).</p>

<p>Thanks!</p>
","0","200567","",""
"26171623","2223138","2014-10-03 00:26:23","0","119","<git><git-commit><git-pull><git-init>","Can I revert to git init if I didn't do an initial commit","<p>I'm new to git and I did not do an initial commit.  I had a folder on my machine and ran git init, then git pull from the remote respository, and then committed the changes I had made locally.  Is it possible to revert changes wrought by the initial pull?  Does git init establish anything I can go back to?  I want to revert all files to how they were when I ran git init.</p>
","0","2223138","",""
"26210628","699559","2014-10-06 05:48:52","12","4568","<git><github><bitbucket><pull><git-pull>","How pull changes from github to bitbucket after initial import?","<p>When I first created my new repository at bitbucket I used the option of importing source from github (Import existing code). However that git repo has now updated and I would like to pull those changes and update my repo at bitbucket too. How can I do that?  </p>
","0","699559","0","0"
"26223074","3597730","2014-10-06 19:06:33","0","1052","<git><git-pull>","git doesn't auto commit when I pull","<p>for some reason whenever I pull from master, git will not auto commit the changes to my local branch.  I get the following error:</p>

<pre><code>/usr/bin/mate -w: /usr/bin/mate: No such file or directory
error: There was a problem with the editor '/usr/bin/mate -w'.
Not committing merge; use 'git commit' to complete the merge.
</code></pre>

<p>and I have to manually do the commit after pulling.  This only started since I set up my new machine and never happened on my old one.  Any help is appreciated.  </p>
","7","3597730","",""
"44833675","6641026","2017-06-29 19:41:33","0","36","<git><github><git-push><account><git-pull>","github switching accounts 'remote: Repository does not exist'","<p>I have a private github remote repo for my organization.</p>

<p>I had full access to it under the github account <code>aaaa</code> and had been using it.</p>

<p>Recently, I had to switch my github account so I removed <code>aaaa</code> from the list of users on the remote repo and added my new account <code>bbbb</code>.</p>

<p>Now when I locally try to <code>git pull</code> or anything else with the remote, I get the error</p>

<p><code>remote: Repository not found.</code><br>
<code>fatal: repository xxxxurl not found</code></p>

<p>I looked at github documentation and I think it is happening because locally I'm still identified as <code>aaaa</code> when I try to connect to the remote repo. Is there any way to make the remote repo think that I am <code>bbbb</code>, my new account, whenever I try to push/pull to the remote from local?</p>

<p>FYI I registered by ssh public key for the account but it still doesn't work.</p>
","0","6641026","",""
"9540345","221111","2012-03-02 21:04:16","1","2377","<git><git-pull><git-extensions><git-remote>","Bad git pull creates invalid remote tracking branch","<p>In my workplace, we just moved to Git for revision control after more than 10 years of using Source Safe (yay!). I now have to support our engineers in their learning of the new tool. It is important to note that we are all using the GitExtensions UI under Windows.</p>
<p>A couple of colleagues did the following (from the UI):</p>
<ul>
<li>clone the central repository (<strong>origin</strong>)</li>
<li>create a new local branch (<strong>A</strong>) based on the main <strong>develop</strong> branch</li>
<li>create commits on the <strong>A</strong> branch</li>
<li>while having that <strong>A</strong> branch still checked out, they (mistakenly) did a pull of the main <strong>develop</strong> branch into their <strong>A</strong> branch</li>
</ul>
<p>Here is what the UI of GitExtensions looks like when we do a pull (I sadly cannot post screen grabs from work):</p>
<blockquote>
<p>Pull from: <strong>origin</strong></p>
<p>Local branch: <strong>A</strong></p>
<p>Remote branch: <strong>develop</strong></p>
<p>Merge option: <strong>Merge remote branch into current branch</strong></p>
<p>(Pull button is then pressed)</p>
</blockquote>
<p>Here is what the command log of GitExtensions reveals it did for the pull:</p>
<pre><code>git pull --progress &quot;origin&quot; +refs/heads/develop:refs/remotes/origin/A
</code></pre>
<p>After that command, the users saw a new <strong>origin/A</strong> remote tracking branch appear in their history, while we confirmed no branch <strong>A</strong> is present on origin.</p>
<p>I looked at the git pull manual to try and understand what happened, but I still cannot understand if what we are seeing is a GitExtensions bug or an misunderstanding on our part of what git pull should do.</p>
<p>Anyone can help me figure out what is happening here?</p>
<p>Thanks in advance</p>
<h3>Edit</h3>
<p>I know that pulling the remote <strong>develop</strong> branch into the local <strong>A</strong> branch does not make sense and I know how to resolve the situation by deleting the remote tracking branch. What I really want is to understand the logic behind the <strong>origin/A</strong> remote tracking branch being created in the first place, since no <strong>A</strong> branch was ever present on origin.</p>
<p>Thanks</p>
","0","221111","",""
"9554562","1208870","2012-03-04 11:39:15","0","441","<git><github><git-pull>","git pull gives me this error: ""may be you are offiline or behind a proxy check your internet connection and proxy configuration""","<p>I am trying to pull the project from git hub. one of my project gives me the following error.</p>

<blockquote>
  <p>""may be you are offiline or behind a proxy check your internet connection and proxy configuration""  Download cancelled.</p>
</blockquote>

<p>I have tried from git gui and eclipse. I am using Ubuntu 11.10.</p>

<p>My other projects have no problem in pulling or pushing and This particular project I used to pull everyday and now it gives error.</p>

<p>My Internet Connection is working properly and I am able to clone and pull my other project same time.</p>

<p>Anybody could figure out, What could be the cause of this problem?</p>
","3","1208870","0","0"
"9589814","400265","2012-03-06 18:36:28","232","395902","<git><git-pull>","How do I force git pull to overwrite everything on every pull?","<p>I have a CENTRAL bare repository that has three developer repositories pulling and pushing to it normally.</p>

<p>I also have two other repositories that pull from the CENTRAL bare repo: one is the live server, and the other is a test/stage server—each pulling from its own respective branch.</p>

<p>The scenario is this: I have a <code>post-update</code> hook script on the CENTRAL repo that automatically accesses the test and live repos and runs a pull command on each. This updates both test and live servers, all depending on what branch has new commits. This all works great.</p>

<p>The problem is this: there may be times in an emergency that files may be directly updated on the server (via ftp or whatever) and the CENTRAL post-update script will then fail since merge/overwrite conflicts will occur. There is no way to avoid this scenario, and it is inevitable.</p>

<p>What I would like to have happen is this: I want the pull from the live and test sites to <em>always</em> overwrite/merge on pull. <strong><em>Always.</em></strong> These repos will be pull-only as they are not for development.</p>

<p>In all my research, I cannot find a good solution to have a pull <em>always</em> force an overwrite of the local files. Is this at all possible? It would make for a great development scenario if so.</p>
","3","400265","0","0"
"45237694","8178738","2017-07-21 12:27:31","1","420","<git><github><git-push><git-pull>","I am not able to push my code on git?","<p>when i fire this command is show's error like below.</p>

<pre><code>  git push origin master 
</code></pre>

<p>shows an error</p>

<pre><code> Couldn't find host bitbucket.org in the .netrc file; using defaults
 Hostname was NOT found in DNS cache
 Could not resolve proxy: proxy
 Closing connection 0
fatal: unable to access 'git@github.com:xyz/abc.git': Could not resolve proxy: proxy
</code></pre>
","6","8178738","",""
"45252834","6381081","2017-07-22 09:20:24","1","1021","<git><git-pull>","How can I pull twice in the git?","<p>I pulled the project once by this code:</p>

<pre><code>$ git pull origin master
</code></pre>

<p>And I removed the whole project <em>(except .git directory)</em> by hand. Now I want to get the project again. When I pull it again, it says:</p>

<pre><code>$ git pull origin master
From https://bitbucket.org/path/to/repository
 * branch            master     -&gt; FETCH_HEAD
Already up-to-date.
</code></pre>

<p>And my working directory is still empty <em>(there is just .git directory)</em>. Anyway, how can I pull the project again?</p>
","0","6381081","",""
"45277419","3926714","2017-07-24 09:52:04","0","119","<git><github><pull-request><git-pull>","update github my old pull request","<p>I was working on this feature in on of the open source project, however, due to some other work, I stopped for working on for quite long.</p>
<p>Now I want to make some changes to this feature branch and push this. However, the pull request says there are some conflicts and I should resolve it first.</p>
<p>I am new to Git so things look really confusing.</p>
<p>Following are the details.</p>
<blockquote>
<p>Remote Branch: <a href=""https://github.com/robotframework/Selenium2Library/"" rel=""nofollow noreferrer"">https://github.com/robotframework/Selenium2Library/</a></p>
<p>My forked Branch: <a href=""https://github.com/Gaurang033/Selenium2Library"" rel=""nofollow noreferrer"">https://github.com/Gaurang033/Selenium2Library</a></p>
<p>Pull Request: <a href=""https://github.com/robotframework/Selenium2Library/pulls/Gaurang033"" rel=""nofollow noreferrer"">https://github.com/robotframework/Selenium2Library/pulls/Gaurang033</a></p>
</blockquote>
<p>this is how my branch look</p>
<blockquote>
<p>git branch -vv</p>
<p>*feature-table-functions fecb9a6 [origin/feature-table-functions: ahead 1] incorporated comments</p>
</blockquote>
<p>Now how should I update the branch and resolve the conflict and push new changes?</p>
<blockquote>
<p>git pull --rebase<br />
Current branch feature-table-functions is up to date. git status<br />
On branch feature-table-functions Your branch is ahead of
'origin/feature-table-functions' by 1 commit.   (use &quot;git push&quot; to
publish your local commits)</p>
</blockquote>
<p><a href=""https://i.stack.imgur.com/wl0rt.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/wl0rt.png"" alt=""And this is how it looks on my GitHub forked project"" /></a></p>
","2","3926714","",""
"27785582","1045004","2015-01-05 18:26:16","0","3035","<git><duplicates><git-rebase><git-pull>","git: Pushing Single Commits, Reordering with rebase, Duplicate Commits","<p>I want to push several single commits to a git remote repo. I followed Geoff's answer found here to do so:</p>

<p><a href=""https://stackoverflow.com/questions/3230074/git-pushing-specific-commit"">How can I pushing specific commit to a remote, and not the previous commits?</a></p>

<p>The commits I want to push are not at the head, so I have to reorder the commits using rebase first and I used these instructions to do so:</p>

<p><a href=""http://gitready.com/advanced/2009/03/20/reorder-commits-with-rebase.html"" rel=""nofollow noreferrer"">http://gitready.com/advanced/2009/03/20/reorder-commits-with-rebase.html</a></p>

<p>Essentially I've done:</p>

<pre><code>git clone
git commit
git commit
...
git pull
git rebase -i HEAD~3
git push origin &lt;SHA&gt;:master
</code></pre>

<p>I got errors doing this. So I started looking deeper into the problem. I found that there are duplicate commits in my log if I do a second git pull after rebasing, for example:</p>

<pre><code>git clone
git commit
git commit
...
git pull
git log --pretty=format:""%h - %an : %s"" // log before rebasing
git rebase -i HEAD~3
git pull
git log --pretty=format:""%h - %an : %s"" // log after rebasing
git pull 
git log --pretty=format:""%h - %an : %s"" // log after rebasing after pulling
</code></pre>

<p>So I posted this question:</p>

<p><a href=""https://stackoverflow.com/questions/27749096/git-duplicate-commits-after-local-rebase-followed-by-pull"">git: Duplicate Commits After Local Rebase Followed by Pull</a></p>

<p>Roger's response there led me to this question: Why do I see duplicate commits after rebasing and pulling?</p>

<p>From above, the log before rebasing looks like:</p>

<pre><code>84e4015 - Me : Local Commit 3
0dbe86a - Me : Local Commit 2
d57ba2a - Me : Merge branch 'master' of remote repository
a86ea35 - Me : Local Commit 1 before reordering
2fc4fe7 - Remote User 2 : Remote Commit 2
b7a8656 - Remote User 1 : Remote Commit 1
8ce80fc - Me : Merge branch 'master' of remote repository
</code></pre>

<p>And the log after rebasing looks like:</p>

<pre><code>cf1ff7b - Me : Local Commit 3
cd14463 - Me : Local Commit 2
b9d44fb - Me : Local Commit 1 after reordering
9777c56 - Remote User 2 : Remote Commit 2
a2d7d8b - Remote User 1 : Remote Commit 1
8ce80fc - Me : Merge branch 'master' of remote repository
</code></pre>

<p>Notice that the original 2 commits 2fc4fe7 and b7a8656 have new SHAs; 9777c56 and a2d7d8b. I believe this is the start of the problem. </p>

<p>Now after I do another git pull the log looks like this:</p>

<pre><code>e8e1a85 - Me : Merge branch 'master' of remote repository
cf1ff7b - Me : Local Commit 3
cd14463 - Me : Local Commit 2
b9d44fb - Me : Local Commit 1 after reordering
9777c56 - Remote User 2 : Remote Commit 2
a2d7d8b - Remote User 1 : Remote Commit 1
2fc4fe7 - Remote User 2 : Remote Commit 2 // duplicate 2
b7a8656 - Remote User 1 : Remote Commit 1 // duplicate 1
8ce80fc - Me : Merge branch 'master' of remote repository
</code></pre>

<p>Notice that the remote commits are now duplicated, and the original SHAs of the remote commits, 2fc4fe7 and b7a8656, have returned.</p>

<p>In Roger's response he said that it looked like the fault of other people pushing to git and that they were rebasing their already pushed commits. But I believe it is my fault for locally rebasing a pushed commit. </p>

<p>Is this because I rebased a commit that had already been pushed to the remote? If so, what should I have done to avoid this? I need to rebase my commits so that I can push a single commit. Should I have used a branching system to do this? If so how would I use branches to solve this problem?</p>
","1","1045004","",""
"45678631","3064946","2017-08-14 16:07:29","0","353","<git><github><git-push><git-pull><git-clone>","Automatic git Pull on Cloned Folder in desktop","<p>I have a folder on my desktop which is git cloned to a certain branch. Now I want to do a Automatic Git pull whenever something is pushed to that branch (Assuming there are no conflicts). How do I achieve this ?
I am a novice in GIT. So looking for some detailed solution.</p>
","1","3064946","",""
"45704949","7989392","2017-08-16 04:04:29","0","1052","<gitlab><atlassian-sourcetree><git-pull>","I cannot pull with source tree in github","<p>I am trying to pull in gitlab with source tree but unable to do so.</p>

<blockquote>
  <p>git -c diff.mnemonicprefix=false -c core.quotepath=false fetch origin
  remote: HTTP Basic: Access denied fatal: Authentication failed for
  '<a href=""http://davy_yg@git.amanahcorp.com/daffi_gusti/soulfy_repo3.git/"" rel=""nofollow noreferrer"">http://davy_yg@git.amanahcorp.com/daffi_gusti/soulfy_repo3.git/</a>'
  remote: Forbidden fatal: unable to access
  '<a href=""http://davy_yg@git.amanahcorp.com/daffi_gusti/soulfy_repo3.git/"" rel=""nofollow noreferrer"">http://davy_yg@git.amanahcorp.com/daffi_gusti/soulfy_repo3.git/</a>': The
  requested URL returned error: 403 Completed with errors, see above.</p>
</blockquote>

<p>How to fix the error so that I can pull and push?</p>
","0","7989392","0","0"
"63754134","804517","2020-09-05 12:52:17","2","1687","<c#><git><process><git-pull><exit-code>","How to check if git pull is successful from Process.ExitCode","<p>I am calling <code>git pull</code> using <code>ProcessInfo</code></p>
<p>I am checking <code>ExitCode</code> for all the commands for there success.</p>
<p>So if <code>ExitCode</code> is 0 the command ran successfully if not there is some error.</p>
<p>All works fine, the problem occurs when it tries to do a <code>git pull</code> and the repository is already up to date.
In that case git considers it a fail and so returns <code>ExitCode=1</code>, but for me it is a success, it is just that there was nothing to be pulled.</p>
<p>Is there any way I can check the success of pull command?</p>
<p>I have one approach in mind that if I can somehow run a command to check if there is anything to be pulled, if that command returns true then I will do a pull else won't</p>
<p>This post gives the option to check if anything is there to be pulled
<a href=""https://stackoverflow.com/questions/3258243/check-if-pull-needed-in-git"">Check if pull needed in Git</a></p>
<p>Can somebody help if there is direct way to handle pull alone or what should I check before pull?</p>
","3","804517","0","0"
"45790294","6787477","2017-08-21 06:09:24","0","669","<git><logging><git-pull><gitblit>","How can I also log complete git pull history?","<p>I am using gitblit to host git repository in my organisation. I have to log all the git pull operations also on all the repositories by any user for the purpose of tracking the history. How can I do that ?</p>
","3","6787477","",""
"63773040","8225502","2020-09-07 07:25:30","1","581","<macos><remote-access><git-clone><git-pull><git-remote>","Clone git repo to a Shared Mac OS X (folder) from Windows","<p>Clone git repo to a Shared Mac OS X (folder) from Windows</p>
<p>I am not able to clone a git repository in a shared folder over LAN, do let me know if anyone can help here</p>
<pre><code>Cloning into '\\&lt;ip address&gt;\Demo\Demo_1\Demo_Test'...
POST git-upload-pack (152 bytes)
POST git-upload-pack (190 bytes)
remote: Enumerating objects: 3, done.        
remote: Counting objects:  33% (1/3)        
remote: Counting objects:  66% (2/3)        
remote: Counting objects: 100% (3/3)        
remote: Counting objects: 100% (3/3), done.        
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0        
Receiving objects:  33% (1/3)
Receiving objects:  66% (2/3)
Receiving objects: 100% (3/3)
Receiving objects: 100% (3/3), done.
error: unable to write file &lt;ip address&gt;/Demo/Demo_1/Demo_Test/.git/objects/pack/5kjserkj343lkjl2k34nsdfjlks.pack: Permission denied
fatal: cannot store pack file
fatal: index-pack failed
</code></pre>
<p>Read write permission already granted for the shared folder to administrator, Mac OS user, everyone, staff</p>
<p>Tried chmod recursive too for the root folder</p>
","5","8225502","0","0"
"45866551","8312360","2017-08-24 16:16:25","-1","63","<git><github><git-branch><git-pull>","What is the correct way to create a pull request in github","<p>I am new to github and open source.</p>

<p>I just wanted to know that which of the following is the correct way of contributing to someone's​ project ?</p>

<p>A. Fork the project so that it shows under your account and then make the changes in it. Finally, creating a pull request.</p>

<p>OR</p>

<p>B. Make a branch into the original project's repository (without forking) and then making your changes into that branch. Finally, creating a pull request.</p>

<p>I googled but couldn't find it.
Thanks in advance.</p>
","2","8312360","",""
"63856467","6841988","2020-09-12 03:10:48","1","583","<git><bitbucket><git-pull>","bitbucket permission denied (public key) when git pull","<p>I get the following error when I try to pull from bit bucket. I'm in an AWS ECS instance:</p>
<pre><code>git@bitbucket.org: Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
</code></pre>
<p>I have already added the ssh key to the bit bucket account access keys and have tried adding the key to my repository itself. Earlier I have successfully pushed my code to bit bucket but never did a pull.</p>
","0","6841988","0","0"
"63858850","13003755","2020-09-12 09:29:40","1","6341","<git><github><push><git-push><git-pull>","error: failed to push some refs to 'https://github.com/XXXXXXXXX.com","<pre><code>$ git push -u origin master
To https://github.com/XXXXXXXXX.com/FirstRepo.git
 ! [rejected]        master -&gt; master (non-fast-forward)
error: failed to push some refs to 'https://github.com/XXXXXXXXX.com/FirstRepo.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Integrate the remote changes (e.g.
hint: 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
</code></pre>
<p><strong>I am using github for the first time today, I had already checked other answers out of which only one seems to work and that is using 'git push origin master --force', but by doing this it is deleting all other commits. So can anyone please tell me the solution for this.</strong></p>
","5","13003755","",""
"45931977","7844349","2017-08-29 06:19:40","1","985","<linux><git><git-push><git-pull><git-clone>","Git requires username and password for git push, git pull using HTTPS method","<p>So, when I use HTTPS method for cloning git repository and do some changes and <code>push</code> or <code>pull</code> to git it will always be prompting me for <code>username and password</code>. what's the solution for that?</p>
","5","7844349","0","0"
"63895710","11253118","2020-09-15 05:33:58","1","65","<git><github><git-pull>","git pull showing error when trying to pull an existing repo in which files were added via upload previously","<p>when trying to pull an existing repo from GitHub, git shows the following error:</p>
<blockquote>
<p>$ git pull calc master From<br />
<a href=""https://github.com/predator2v0/simple-Javascript-calculator"" rel=""nofollow noreferrer"">https://github.com/predator2v0/simple-Javascript-calculator</a><br />
* branch master     -&gt; FETCH_HEAD
fatal: refusing to merge unrelated histories</p>
</blockquote>
<p>I want to know how this happens and how to overcome it. do not have any issues if unrelated histories are merged. just want to know how to do that thing. please help.</p>
","4","11253118","0","0"
"9832348","697664","2012-03-23 00:03:25","68","272533","<git><git-push><git-pull>","git push rejected: error: failed to push some refs","<p>I know people have asked similar questions, but I believe the causes of their problems to be different.  I did a hard reset because I had messed up my code pretty bad</p>

<pre><code> git reset --hard 41651df8fc9
</code></pre>

<p>I've made quite some changes, I've made some commits and now that I'm trying to push all these commits into the server I get the following error:</p>

<pre><code> ! [rejected]        master -&gt; master (non-fast-forward)
error: failed to push some refs to 'git@git.somewhere.git'
</code></pre>

<p>Git suggests to do a git pull and that's what other people have suggested to other users.  However, I believe that a git pull will merge my current code with the code that I don't want anymore (head revision).
How can I do a push and forget about the version/revisions ahead of me?</p>
","0","697664","0","0"
"64464508","12833093","2020-10-21 13:24:05","0","99","<git><git-merge><git-pull><git-fetch>","git pull excluding some file?","<p>I have a public repository for my students in which I pushed a large dataset and some corrections. The thing is we have a storm here at the moment and connection is really poor. Moreover, students already downloaded the datasets on their own for the purpose of the exercises.</p>
<p>My question, for which I can't figure out an easy solution : is there a way for them, to pull the repo without the dataset (just for that time) and whenever connection will be back, on their next pull, they will be able to pull everything.</p>
<p>I was thinking <code>git fetch</code> + <code>git merge</code> only wanted files, but that's not exactly what I wanted since ideally it would be a <code>git fetch</code> + <code>git merge</code> excluding one folder (the data folder).</p>
<p>Hope my issue is clear enough and that it has an easy solution !
Thanks for your help</p>
","0","12833093","",""
"9984287","528909","2012-04-02 21:43:54","34","20958","<git><github><branch><git-rebase><git-pull>","""git pull --rebase"" leads to ""Cannot rebase onto multiple branches""","<p>So, my work environment has precisely one branch with a remote companion on Github.  I'm trying to do <code>git pull --rebase</code> in order to prevent <code>git push</code> from creating merge commit messages that don't provide new information to others working on this project and just gum up the works.  But when I try that, it gives me this:</p>

<pre><code>From https://github.com/our_profile/our_repository
 * branch            HEAD        -&gt; FETCH_HEAD
Cannot rebase onto multiple branches
</code></pre>

<p>And the pull aborts. Calling <code>git branch</code> informs me that I have only one branch on my local machine, so what's going on?</p>
","1","528909","0","0"
"64483049","4390557","2020-10-22 13:12:42","6","4554","<git><git-branch><git-pull><git-refspec>","error: cannot update the ref 'refs/remotes/origin/xyz': unable to create directory for '.git/logs/refs/remotes/origin/xyz': No such file or directory","<p>I am facing below issue while taking fresh pull. (<code>git pull</code>)</p>
<blockquote>
<p>error: cannot update the ref 'refs/remotes/origin/xyz': unable to
create directory for '.git/logs/refs/remotes/origin/xyz': No such file
or directory</p>
</blockquote>
<p>I have checked particular location and there is neither permission issue nor such directory exists.</p>
<p>Jfyi I have already searched similar threads but those are not worked for me and most of them are related to append, delete etc.</p>
<p>I am badly stuck at this and any help would be highly appreciated.</p>
","7","4390557","0","0"
"65384476","14808041","2020-12-20 20:28:37","1","270","<git><git-merge><git-pull>","git pull broke something - how to go back to previous working commit and merge the remote changes in again?","<p>I commited a new feature locally, pulled from remote and got merge conflicts. After resolving them, my feature stopped working (seems like I made an error).</p>
<p>My idea was to go back to my commit and somehow repeat the merge. I checked out my commit, made a new branch, checked out master and tried to merge the new branch into master. This didn't work because &quot;Everything is up to date&quot;.</p>
<p>How do I best handle this if I don't want to fix the error by looking through the code by hand?</p>
<p><strong>/edit</strong>: I accepted the correct answer to the question but it turns out that my problem has a different origin than assumed above. I asked a follow-up question <a href=""https://stackoverflow.com/questions/65391983/why-did-git-pull-change-my-code-without-throwing-merge-conflicts-for-all-changes"">here</a>.</p>
","2","14808041","0","0"
"65391983","14808041","2020-12-21 11:31:28","0","550","<git><git-merge><git-pull><git-merge-conflict>","Why did git pull change my code without throwing merge conflicts for all changes?","<p>I commited a new feature locally, pulled from remote and got merge conflicts. After resolving them, my feature stopped working. I assumed that I made an error and asked <a href=""https://stackoverflow.com/questions/65384476/git-pull-broke-something-how-to-go-back-to-previous-working-commit-and-merge-t/"">a question about this</a> yesterday. So I did a hard reset to my previous commit, repeated the merge and resolved the conflicts I was shown.</p>
<p>But again, my feature stopped working. I looked through the code manually and saw that part of the code of my local commit was changed by the pull but no merge conflict had been displayed for this part.</p>
<p>So for some changes, merge conflicts were displayed but not for others. I confirmed this by reproducing the situation a third time.</p>
<p>What could be the cause of this behaviour?</p>
","2","14808041","0","0"
"65397962","7544643","2020-12-21 18:16:27","1","23","<git><version-control><git-rebase><git-pull>","Why does git pull --rebase and git rebase give me different histories?","<p>My git history is as follows:</p>
<pre><code>- A - B - C   &lt;-- origin/master
   \
    X - Y - Z    &lt;-- origin/my-branch, my-branch (local)
</code></pre>
<p>I have two scenarios:</p>
<ol>
<li><p>I run this on my-branch (local):</p>
<pre><code>$ git pull --rebase origin master
</code></pre>
</li>
<li><p>I run the following starting from my-branch on local:</p>
<pre><code>$ git checkout master
$ git pull
$ git checkout my-branch
$ git rebase master
</code></pre>
</li>
</ol>
<p>After scenario 1, my history (with <code>git log</code>) shows:</p>
<pre><code>... - X - Y - Z - A - B - C    &lt;-- my-branch
</code></pre>
<p>And after scenario 2, my history shows:</p>
<pre><code>... - A - B - C - X - Y - Z    &lt;-- my-branch
</code></pre>
<p>I want to know why is there a difference? Isn't the two set of commands supposed to do the exact same thing?</p>
","2","7544643","",""
"65398294","9773920","2020-12-21 18:44:54","0","438","<git><github><git-pull>","git pull changes into a specific directory","<p>I am preparing a deployment automation script to deploy Drupal project in a Linux system. On Staging the branch is &quot;Master&quot; and I want to pull all the latest changes of &quot;Release&quot; branch to a specific directory and I want to rsync the changes to my web directory. I am trying to use the below command:</p>
<pre><code>git -C /var/tmp/staging_12.21 pull
</code></pre>
<p>This command is not pulling the changed files into /var/tmp/staging_12.21 folder rather updates the .git file directly. Is there a way to download/pull only the latest changed files into a specific directory? Also staging_12.21 is an empty folder.</p>
","0","9773920","0","0"
"10671638","1310991","2012-05-20 07:37:32","19","19933","<git><git-pull><git-fetch>","How to fix git repository broken by interrupted git fetch?","<p>If <code>git fetch</code> gets interrupted for example by Ctrl-C or caused by connectivity problems, after that <code>git fetch</code> and also <code>git pull</code> fail to work.</p>

<pre><code>user@computer:~/code/openttd-git$ git fetch
^C
user@computer:~/code/openttd-git$ git fetch
error: Unable to find 22d90742fc79a9011fb86ee03d8aeea66bc12657 under http://git.openttd.org/openttd/trunk.git
Cannot obtain needed object 22d90742fc79a9011fb86ee03d8aeea66bc12657
error: Fetch failed.
</code></pre>

<p>I believe this is not related to the repository. Using <code>git clone</code> to create a copy of this broken local repository into a new local repository does not fix this. The only solution I know so far is to <code>git clone</code> the entire remote repository (<code>origin/master</code>) into a new local repository. But is there any better (faster) solution?</p>

<p>There is <a href=""http://bugs.debian.org/cgi-bin/bugreport.cgi?bug=602528"">Debian bug report</a> that has last message from February 2011. Is this the same bug I have or is there already a fix or any solution or workaround to this? My git version is 1.7.10.</p>
","0","1310991","0","0"
"10680703","1407208","2012-05-21 06:57:10","2","224","<git><git-pull><git-log>","Can git tell me when a repo was pulled from origin","<p>I'm trying to find out exactly when some part of a site went live by looking at the git logs.</p>

<p>My setup is like this:<br>
- I have a local git repo where I'm doing development and testing and committing changes<br>
- I push changes to a repo on my server<br>
- when I am happy with the changes I pull them into a second repo on the same server which makes the changes live.</p>

<p>So I make changes, <code>git commit</code>, <code>git push</code>. Then ssh into the web server and <code>git pull</code> to deploy.</p>

<p>Using <code>git log</code> I can see when I made which commits but I can't work out how to tell when I did the <code>git pull</code>. Is this possible?</p>
","5","1407208","0","0"
"28967297","1463246","2015-03-10 15:09:37","0","351","<git><git-merge><git-rebase><git-pull>","git pull --rebase --preserve-merges rewrites merge commit with unmodified parents","<p>consider the history</p>

<pre><code>   D  origin/master
  /
 | C  master
 | |\
 | | B
  \|/|
   A :
   |
   :
</code></pre>

<p>After a <code>git pull --rebase --preserve-merges</code> I would expect the history to be</p>

<pre><code>   C'  master
   |\
   D |
   | B
   |/|
   A :
   |
   :
</code></pre>

<p>But it turns out to be</p>

<pre><code>   C'  master
   |\
   | B'
   |/|
   D :
   |
   A
   |
   :
</code></pre>

<p>In other words, the B commit is rewritten to B', even though there is no need for it, because both parents are unmodified. I get that I'm rebasing onto D, but it is problematic because all conflicts in the B merge have to be resolved again.</p>

<p>Is there a benefit to the current functionality?</p>

<p>Is there a way to get the functionality I want?</p>
","0","1463246","0","0"
"28991445","4659277","2015-03-11 15:56:37","0","1994","<git><git-commit><git-pull><recover>","Is it possible to recover git files not pushed?","<p>I ran into a terrible situation where I updated my local copy 2 and I forgot that I had built upon my local copy one, therefore when I tried to pulled the local copy 1 it returned some error and to get rid of that I guess I stashed the valuable changes on that copy. I'm not sure if I had commited (definitely no pushed) my local copy 1. 
After pulling to this copy and of course stashing the previous change I realized that I lost a lot of things.
Is there away I can recover the nonpushed data?</p>
","0","4659277","",""
"47590932","571875","2017-12-01 10:04:18","0","228","<git><git-pull><git-rewrite-history>","How can I move a local commit to after all commits in a git pull?","<p>Here's my situation. I've been working on a feature and made a local commit. I carried on working. Meanwhile, a colleague pushed changes that I need. Some of those changes are in the same files I'm working on.  </p>

<p>I currently have some code I'll need to stash before I pull from origin.<br>
Is there a way to pull the code so my colleagues code exists before my last local commit in the commit history?<br>
I know for a fact that my local commit is older than the ones I'm going to pull.<br>
I'm going to end up with something like this:  </p>

<p><code>older commits -&gt; my commit -&gt; origin commit 1 -&gt; origin commit 2 -&gt; popped stash</code></p>

<p>But what I want is:</p>

<p><code>older commits -&gt; origin commit 1 -&gt; origin commit 2 -&gt; my commit -&gt; popped stash</code></p>

<p>The only way I can see how to do this is to undo my local commit, stash the whole lot, then pull then pop the stash. Is there a way to do this that will maintain my old commit?</p>

<p>I just saw there is a tag here for <code>git-rewrite-history</code>, so it might be possible? </p>
","0","571875","",""
"47606613","245549","2017-12-02 09:55:10","7","1003","<git><git-rebase><git-pull>","How to explain ""git pull --rebase"" in simple terms?","<p>I think I understand <code>git pull</code> and this is how I explain it in, what I call, ""simple terms"":</p>

<ol>
<li>Generally speaking, <code>git pull</code> is about <strong>merging</strong> a ""remote"" branch into a ""local"" branch.</li>
<li>In more detail, git uses the content of the ""remote"" branch to ""update"" / ""modify"" content of the ""local"" branch.</li>
<li>In even more detail, if a file has been modified in the ""local"" branch but not in the ""remote"" branch, then after the merge, the content of the file will be the same as the content in the ""local"" branch. The opposite is also true. If a file was modified on the ""remote"" branch but not in the ""local"" branch, the content will be taken from the ""remote"" branch.</li>
<li>If a file was modified in both branches (""local"" and ""remote"") than git will <strong>try</strong> to take modifications from both branches. If the changes happen on different places of the file, both changes will be applied and be present in the content of the file after the merge.</li>
<li>If the changes happen on the same place we have what is know as a ""merge conflict"" and I am not going to touch this case for simplicity.</li>
<li>As a result of the merge, we modify the ""local"" repository and therefore we need to ""commit"".</li>
</ol>

<p>Now I want to get the same kind of explanation for <code>git pull --rebase</code>. I do not want to use such terms as ""head"", ""index"", ""fetch"", ""upstream"" because these terms / concept only confuse beginners like me. I know that I need to learn these ""advanced"" concepts and I do it by reading tutorials but for now, as a part of my learning process, I want to understand <code>git pull --rebase</code>.</p>

<p><strong>ADDED</strong></p>

<p>I think at some point I heard the following explanation. By <code>git pull --rebase</code>. When we merge, we do it not in a ""symmetric"" way, as described above. Instead, we first ""forget"" the changes in the ""local"" repository and apply only the changes from the ""remote"" repository. By doing that we basically ""copy"" the remote repository as it is. After that we apply the changes from the ""local"" repository <strong>on top</strong>. However, it is still not clear to me what exactly it means. In particular, what ""on top"" means.</p>
","4","245549","0","0"
"11610818","1159684","2012-07-23 10:33:24","9","1700","<git><git-pull>","setting --ff-only as a default for git pull but not for git merge","<p>I'm having a little problem with my colleagues and my commit history becoming unnecessary complicated when working on the same project. The problem is git pull merging non-ff if there is just a single commit difference etc. So I like to fail the git pull if a ff is not possible so that the developer can look at the commits and figure out if a merge or a rebase is more appropriate. </p>

<p>My question: is there a way to set --ff-only by default for all git pull commands on any branch but not for git merge? I'm aware of aliases, but that is not what I'm looking for.</p>
","2","1159684","",""
"66175487","13568667","2021-02-12 16:28:02","0","1152","<laravel><git><gitignore><git-pull>","Does the ""git pull"" command delete folders and files that are in gitignore?","<p>I have been developing a site locally (Laravel 7) and I have a repo on GitHub.</p>
<p>Every time I made a change locally, I pushed to the repository and from the VPS where the site is (via SSH) I did <code>git pull</code>. I realized that some folders previously placed in <code>.gitignore</code> were actually not being ignored. Then I saw that it was possible to clear the git cache. I did it that way and the next push actually ignored what I wanted it to ignore:</p>
<pre><code>git rm -rf --cached .
git add .
git commit -am &quot;cleaning git cache&quot;
git push
</code></pre>
<p>Now I have <em>a terrible doubt</em>. I have, for example, this in the file <code>.gitignore</code></p>
<pre><code>/storage
/storage/*/*
</code></pre>
<p>When I do <code>git pull</code> on the VPS, <em>will the <code>storage</code> folder I have there (which is full of useful files that should not be deleted at all) be deleted?</em> I can't afford that.</p>
<p><strong>EDIT :</strong> I read contradictory responses. And that's not reassuring....</p>
<p><strong>EDIT 2 :</strong> I retraced my steps in this way and everything went back to the way it was.</p>
<p><em>Locally:</em>
<code>git reset HEAD~1</code> <code>git add .</code> <code>git commit -m &quot;Today's commit&quot;</code> <code>git push -f origin master</code></p>
<p><em>On VPS:</em>
<code>git pull</code></p>
<p>Situation restored. Thanks anyway</p>
","8","13568667","",""
"47643557","6860953","2017-12-04 23:16:05","1","637","<git><automation><git-pull>","How to automate git pull origin without needing to comment?","<p>I have a remote server on which I run a number of scripts.
I just run my scripts on that server, and do my editing and saving and pushing to bitbucket cloud as my origin repository from other locations.</p>

<p>How do I automate the ""git pull origin"" command for that windows server.
This isnt about running a command or script in the Task Scheduler, but more like I have to manually comment everytime when I do a ""git pull origin"".</p>

<p>I just wish to run ""git pull origin"" to make sure my scripts are up to date on the server in the morning before running.</p>

<p>But I am having trouble doing it without being forced to manually enter a message or other manual behavior.</p>

<p>Maybe do I have a setting wrong?</p>
","3","6860953","0","0"
"26843187","","2014-11-10 11:50:04","9","17322","<git><gitignore><git-pull>","Git pulls files in .gitignore","<p>I use Git pull to download changes from remote repo to my local dev folder.
the problem is every time I pull changes, git downloads some file that exists in .gitignore file (e.g. /app/config/config.yml)</p>

<p>what am I doing wrong ??
here is my .gitignore </p>

<pre><code># Parameters
/app/config/parameters.yml
/app/config/parameters.ini
/app/config/config.yml
</code></pre>

<p>but when I pull <code>git pull</code> I find a new config.yml !!</p>
","3","","0","0"
"26617985","343204","2014-10-28 20:36:28","-1","52","<git><git-pull>","git - pull from working repo - explain","<p>I'm reading this <a href=""http://sethrobertson.github.io/GitBestPractices/"" rel=""nofollow"">http://sethrobertson.github.io/GitBestPractices/</a></p>

<p>which says:</p>

<blockquote>
  <p>Once you git push (or in theory someone pulls from your repo, but
  people who pull from a working repo often deserve what they get) your
  changes to the authoritative upstream repository or otherwise make the
  commits or tags publicly visible, you should ideally consider those
  commits etched in diamond for all eternity.</p>
</blockquote>

<p>Why on earth would anyone want to <code>pull from a working repo</code>?</p>
","1","343204","",""
"26762477","1978945","2014-11-05 16:42:54","0","1069","<git><git-pull>","How to do a `git pull` in several steps","<p>I think that a <code>git pull</code> command is an alias for a <code>git fetch</code> and a <code>git merge</code>.</p>

<p>I would like to do a <code>git pull origin master</code> in several steps. It think it could be something like this:</p>

<pre><code>git fetch origin master
git merge &lt;remote fetched branch&gt;
</code></pre>
","0","1978945","",""
"39283646","431698","2016-09-02 02:55:13","0","93","<git-push><git-pull><git-remote>","Methods to make git pull from one remote and push to another remote?","<p>I have two remotes origin and fork. What I want to achieve is to make <code>git pull</code> pull from origin and make <code>git push</code> push to fork.</p>

<ol>
<li>One approach is set different URLs for pull and push in
<code>.git/config</code>. <code>url</code> is for pull. <code>pushurl</code> is for push. <a href=""https://stackoverflow.com/a/7420741/431698"">https://stackoverflow.com/a/7420741/431698</a> mentions this method.</li>
<li>The other is to use <code>git remote set-url</code> to set <code>url</code> and <code>git remote set-url --push</code> to set <code>pushurl</code>. This approach basically does the same thing as method 1. <a href=""https://stackoverflow.com/a/15903520/431698"">https://stackoverflow.com/a/15903520/431698</a> mentions this method.</li>
<li>Use <code>remote.pushdefault</code>. <a href=""https://stackoverflow.com/a/18562564/431698"">https://stackoverflow.com/a/18562564/431698</a> mentions this method.</li>
</ol>

<p>Is there any method to achieve my goal?</p>
","2","431698","",""
"20607502","3053011","2013-12-16 09:37:32","-1","811","<git><git-pull><git-stash>","git pull replaces existing code","<p>After I committed files in Git, I made a <code>pull</code> request but it stops some of my code functionality. I want to go to the previous stage, before I committed my files, the state previous to this pull request. </p>

<p>I found <code>git stash</code> is an option to go to previous stage. But there are many options given with it like</p>

<pre><code>git --rebase
git stash
git stash pop
</code></pre>

<p>Other commands I've tried include:</p>

<pre><code>git status
git commit file1 file2 file3 -m ""message""
git commit -i file1 file2 file3 ""message""
git pull
git checkout 
</code></pre>

<p>Which commands do I need to use to go to the stage before pull?</p>
","1","3053011","",""
"58506393","9914653","2019-10-22 14:21:46","2","1823","<git><git-pull>","Does `git pull` only merge the changes into the branch one is checked out into?","<p>I recently performed the following actions in git:</p>

<ol>
<li><code>git checkout a</code></li>
<li><code>git pull</code> (this downloaded some new code which was added in another branch <code>b</code>)</li>
<li><code>git merge master</code></li>
<li><code>git checkout master</code></li>
<li>At this point I expected <code>master</code> to contain the changes downloaded in 2) however they weren't present. I ran <code>git pull</code> again which fetched the changed.</li>
</ol>

<p>Does <code>git pull</code> fetch and merge the changes only into the current branch (which I'm checked out into)? If yes, is there a git command to merge the downloaded changed into every/specific branches?</p>
","1","9914653","0","0"
"1741143","127013","2009-11-16 09:50:35","91","31237","<git><version-control><git-pull>","'git pull origin mybranch' leaves local mybranch N commits ahead of origin. Why?","<p>I just observed something odd about <code>git pull</code>, which I don't understand.</p>

<p>On Friday, I worked on a local branch. let's call it <code>mybranch</code>. Before leaving the office I pushed it to origin (which is my github repo): <code>git push origin mybranch</code>.</p>

<p>Yesterday at home, I <code>pull</code>ed mybranch to my laptop, did some more coding, and then pushed my changes back to github (origin).</p>

<p>Now I'm at work again, and tried to pull the changes from yesterday to my work machine (I didn't change anything in my work place's local repo over the weekend):</p>

<pre><code>git pull origin mybranch
</code></pre>

<p>that caused a fast forward merge, which is fine. I then did a <code>git status</code>, and it said:</p>

<pre><code># On branch mybranch
# Your branch is ahead of 'origin/mybranch' by 6 commits.
#
nothing to commit (working directory clean)
</code></pre>

<p>Huh? How can it be 6 commits ahead when I didn't even touch it over the weekend, AND just pulled from origin? So I ran a <code>git diff origin/mybranch</code> and the diffs were exactly the 6 changes I just pulled from remote.</p>

<p>I could only ""fix"" this by running <code>git fetch origin</code>:</p>

<pre><code>From git@github.com:me/project
af8be00..88b0738  mybranch -&gt; origin/mybranch
</code></pre>

<p>Apparently, my local repo was missing some reference objects, but how can that be? I mean, a pull does a fetch already, and I didn't work on anything except that branch, so a <code>git fetch origin</code> and <code>git fetch origin mybranch</code> should have the same result?</p>

<p>Should I always use <code>git pull origin</code> instead of <code>git pull origin branchname</code>?</p>

<p>I'm confused.</p>
","7","127013","0","0"
"1930796","66475","2009-12-18 21:28:28","9","8865","<git><pull><git-pull>","How do I pull a remote branch in git without conflicts?","<p>There is a branch on remote I would like to work on. It is old and I no longer have an old copy of it on my local machine. It is really far behind master. Whenever I attempt to pull it I get conflicts. I just want to create an exact duplicate of the remote branch on my local system. Why would that lead to conflicts?</p>

<p>I tried:</p>

<pre><code>git pull origin branch_name:branch_name
</code></pre>

<p>That created a new branch on my local machine with the right name, but it led to conflicts.</p>
","0","66475","0","0"
"20953841","1642231","2014-01-06 15:57:03","1","65","<git><git-pull>","After doing a git pull, what is the command to see what changed in the files that got updated?","<p>After doing a git pull, what is the command to see what changed in the files that got updated? examples would be great. </p>
","0","1642231","",""
"2213235","267730","2010-02-06 13:28:54","69","51957","<git><git-rebase><git-pull><git-stash><git-revert>","Undoing a git pull --rebase","<p>Hey I'm new to git and I need to undo a pull, can anyone help?!? So what I've done is...</p>

<ol>
<li>git commit</li>
<li>git stash</li>
<li>git pull --rebase</li>
<li>git stash pop</li>
</ol>

<p>this created a bunch of conflicts and went a bit wrong. Now doing 'git stash list' reveals that my stash is still there. Is it possible to revert my repo back to the point just after doing git commit. So effectively my repo only contains only changes I have made and nothing new from the server?</p>
","0","267730","0","0"
"58982200","12412373","2019-11-21 19:14:47","1","787","<git><github><version-control><rebase><git-pull>","When I do ""git pull origin master --rebase"" from a feature branch, I receive outdated incoming code","<p>Not sure if it's something I did incorrectly that leads to this behavior...</p>

<p>I have a master branch and a feature branch assumably named ""feature"".</p>

<p>Below are the operations that I've done:</p>

<ol>
<li>Made some changes on the feature branch</li>
<li>Run ""git pull origin master --rebase"" on the feature branch to get changes from my teammates</li>
<li>Pushed the changes to remote feature branch with ""git push origin feature""</li>
<li>Realized I need to fix something, so I made some changes</li>
<li>Ran ""git pull origin master --rebase"" to get changes from the team again before pushing</li>
</ol>

<p>Now, the issue showed up when I do step 5 ""git pull origin master --rebase"". I'm getting conflicts, and the conflicts are between the code I pushed in step3 and the code I have locally. However, I'm pretty sure that the remote master branch is clean and does not have code from this branch.</p>

<p>I tried the following operations, and only one of them is giving me issue:</p>

<ul>
<li>git pull origin master (from master branch) [good]</li>
<li>git pull origin master (from feature branch) [good]</li>
<li>git pull origin master --rebase (from master branch) [good]</li>
<li>git pull origin master --rebase (from feature branch) [not good] &lt;-- containing code from step 3.</li>
</ul>

<p>Could anyone shed some lights on this, please? Thanks!</p>
","2","12412373","0","0"
"39008753","2462759","2016-08-18 01:48:37","1","972","<git><git-merge><git-pull><git-merge-conflict>","git pull doesn't bring all the changes","<p>This question has been asked many times and I have tried solution provided there but no luck for me. So ...</p>

<p>I have master and test_branch</p>

<pre><code>Admin@paul MINGW64 ~/my-project (master)
$ git diff master test_branch
</code></pre>

<p>it shows 5 files and so many commits. 
But when I do:</p>

<pre><code>Admin@paul MINGW64 ~/my-project (master)
$ git pull origin test_branch

From https://bitbucket.org/clientname/my_project
 * branch            test_branch -&gt; FETCH_HEAD
Auto-merging page/test1.java
CONFLICT (content): Merge conflict in page/test1.java
Automatic merge failed; fix conflicts and then commit the result.
</code></pre>

<p>I fix the conflicts , run tests and get failure because pull didn't bring all the changes and for file test1.java only 1 or 2 lines of conflict not all.</p>

<p>I tried <code>gitk</code> too but that shows very complex web kind of structure which is hard to understand.</p>
","0","2462759","",""
"39036640","5958644","2016-08-19 10:23:51","0","116","<git><github><merge><git-pull>","what's better pull or merge to branches on github","<p>I have some project on GitHub, there is few branches in there.</p>

<ul>
<li>master</li>
<li>alpha</li>
<li>beta</li>
</ul>

<p>for example. Now I create new branch <code>alpha-issue1</code>. On alpha branch was added some commits by my colleges and I want to copy this changes to my branch. First time I think <code>git merge alpha</code> would be good idea, but then I read about 'better way' - <code>git pull alpha test-issue1</code> (if I right). So I don't know what way to chose..</p>
","1","5958644","",""
"20194922","2710542","2013-11-25 13:55:51","1","3886","<git><git-pull>","Object file .git/objects/ is empty from git pull","<p>I created a Git repository on computer A, and cloned this to computer B. Then I updated A and committed and pushed to remote, everything is working.</p>

<p>But when I run these commands in computer B:</p>

<pre><code>git status -s
</code></pre>

<p>or</p>

<pre><code>git pull
</code></pre>

<p>I get the error:</p>

<blockquote>
  <p>error: object file .git/objects/eb/c57584a88e2bfffab31fe651368c0f74e8e399 is empty<br>
  fatal: loose object ebc57584a88e2bfffab31fe651368c0f74e8e399 (stored in .git/objects/eb/c57584a88e2bfffab31fe651368c0f74e8e399) is corrupt</p>
</blockquote>

<p>What does this error mean and how can I fix it?</p>
","4","2710542","",""
"1125968","98046","2009-07-14 14:58:15","9355","7784168","<git><version-control><overwrite><git-pull><git-fetch>","How do I force ""git pull"" to overwrite local files?","<p>How do I force an overwrite of local files on a <code>git pull</code>? My local repository contains a file of the same filename as on the server.</p>
<blockquote>
<p>error: Untracked working tree file 'example.txt' would be overwritten by merge</p>
</blockquote>
","11","98046","0","0"
"58269028","10662240","2019-10-07 11:52:19","9","3134","<git><git-push><git-pull>","Is git push atomic?","<p>Is <code>git push</code> with several commits an atomic operation?</p>

<ol>
<li>with regards to other <code>git push</code> operations to the same branch</li>
<li>with regards to <code>git pull</code> operations from the same branch</li>
</ol>

<p>For case 1. it has to be. Otherwise my commits would interfere with someone else's commits, possibly creating an inconsistent or invalid state. Git prevents that by either forcing me to integrate someone else's changes first (if I lose the race) or forcing someone else to integrate my changes (if I win the race).</p>

<p>But what about 2.? If my repository looks like this:</p>

<pre><code>          C---D---E master
         /
    A---B origin/master
</code></pre>

<p>Is anyone doing a <code>git pull</code> while I am doing <code>git push</code> going to see either A---B or A---B---C---D---E, or can they also get anything in between, e.g. A---B---C---D?</p>
","4","10662240","0","0"
"1435754","156458","2009-09-16 22:05:39","56","104402","<git><conflict><git-merge><git-pull>","How do I resolve a conflict after git pull?","<p>I have to solve some conflict after a <code>git pull</code>.</p>

<pre><code>$ git pull
CONFLICT (rename/add): Renamed vignette_generator_mashed.h-&gt;vision_problem_8.h in 49423dd0d47abe6d839a783b5517bdfd200a202f. vision_problem_8.h added in HEAD
Added as vision_problem_8.h~HEAD_1 instead
Removed vignette_generator_cross_square.cc
Automatic merge failed; fix conflicts and then commit the result.
</code></pre>

<p>So I googled it a bit, and found people saying using <code>git mergetool</code>. But here is what I got:</p>

<pre><code>$ git mergetool
merge tool candidates: meld kdiff3 tkdiff xxdiff meld gvimdiff emerge opendiff emerge vimdiff
No files need merging
$ git mergetool opendiff
merge tool candidates: meld kdiff3 tkdiff xxdiff meld gvimdiff emerge opendiff emerge vimdiff
opendiff: file not found
</code></pre>

<p>So does it mean I have to install something?</p>

<p>What if I simply want the version from <code>git pull</code> to overwrite everything?</p>
","2","156458","0","0"
"20549778","2769590","2013-12-12 17:11:18","17","1234","<git><git-pull><git-fetch>","some confusion on git pull vs git-fetch","<p>So - can someone clarify this one: </p>

<p>I run:</p>

<pre><code>git pull origin master  
git status
</code></pre>

<p>And it then pulls the changes and says:</p>

<pre><code>your branch is ahead of origin/master ... blahblah by 6 commits...
</code></pre>

<p>When I then run </p>

<pre><code>git fetch
git status
</code></pre>

<p>It says:</p>

<pre><code># On branch master
nothing to commit (working directory clean)
</code></pre>

<p>So - I thought <code>git pull</code> does git fetch by default - so why does it says ""ahead by 6 commits""  without additional <code>git fetch</code>?</p>
","10","2769590","",""
"39609387","5980376","2016-09-21 06:53:44","0","55","<git><version-control><git-pull>","How to see what files will be 'pulled' when I do a git pull","<p>I am on branch master and there are multiple users doing simultaneous pushes to the branch in the same repository.
Now I need to do a <code>git pull</code> but I am not sure what files will be pulled as I don't know what all files were pushed.</p>

<p>Is there a way to know exactly what files will be pulled or what changes will be made if I do a <code>git pull</code> before the actual pull/merge is done?</p>
","1","5980376","",""
"58569304","8496110","2019-10-26 08:42:14","1","473","<git><github><git-pull>","git pull no tracking info for my branch after merging a branch from another remote to my branch","<p>There is a repository called <code>main_repo</code>, that me and my colleague <code>forked</code>. So, my colleague created a branch called <code>new_changes</code> on her fork and branched out from my branch called <code>my_branch</code> and made new changes. Yesterday I merged her pull request of her branch to my branch on stash using the merge button. </p>

<p>On her pull request page it says <code>MERGED her_fork_repo new_changes</code> to <code>my_branch</code> in commit <code>1234</code>.Supposedly if I <code>git pull</code> on my branch on intellij I would see my colleague's new changes, but instead it says:</p>

<blockquote>
<pre><code>There is no tracking information for the current branch.
Please specify which branch you want to rebase against.
See git-pull(1) for details.

    git pull &lt;remote&gt; &lt;branch&gt;

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=origin/&lt;branch&gt; my_branch
</code></pre>
</blockquote>

<p>From my branch when I typed <code>git remote</code> it shows <code>origin</code>.I have also tried <code>git pull origin my_branch</code> but git says <code>Already up to date</code>. </p>

<p>And from <code>my_branch</code> 's pull request page (to merge into <code>main_repo</code>), I didn't see the new changes also, what should I do so that the new changes is reflected on my branch?</p>
","3","8496110","0","0"
"58633976","9055634","2019-10-30 21:35:51","1","35","<git><git-rebase><git-pull>","Started working before actually doing a git rebase after conflicts","<p>I am working in a branch and I pulled rebase from remote and I got some merge conflicts.<br>
I resolved the conflicts but before <code>git add</code> and <code>git rebase --continue</code> I got distracted and continue doing actual work.<br>
Now I am in the state that my working tree is fine code-wise with the old conflicts resolved and new code present but <code>git status</code> shows <code>You are currently rebasing branch...</code></p>

<p>What can I do to fix this and not mess up my work?</p>
","0","9055634","0","0"
"20985827","1988876","2014-01-08 02:21:12","0","636","<git><github><git-push><git-pull><git-remote>","how to request pull request from a particular remote in git?","<p>This is how my config file of git looks:</p>

<pre><code>[core]
        repositoryformatversion = 0
        filemode = true
        bare = false
        logallrefupdates = true
        ignorecase = true
        precomposeunicode = false
[remote ""origin""]
        url = git@github.com:XXXXXXX/training.test.git
        fetch = +refs/heads/*:refs/remotes/origin/*
[branch ""master""]
        remote = origin
        merge = refs/heads/master
[remote ""upstream""]
        url = https://github.com/YYYYYYY/training.test.git
        fetch = +refs/heads/*:refs/remotes/upstream/*
</code></pre>

<p>The <code>remote</code> ""origin"" points to my github account
The <code>remote</code> ""upstream"" points to a different github account from where I forked into mine.</p>

<p>Q1: so everytime I do a <code>git pull</code>, it will <code>pull</code> from my <code>remote</code> (which is ""origin"").
how will I do a <code>git pull</code> of the <code>remote upstream</code> .</p>

<p>Q2: any changes I <code>commit and push</code> to my repository, the other user ""YYYYY"" must be notified for a pull request. how would I achieve this?</p>
","0","1988876","0","0"
"21322132","908939","2014-01-24 00:23:22","1","257","<git><git-merge><git-pull><git-workflow>","How do I run 'git pull' so that it always works, and merge collisions destroy my changes?","<p>I want to pull from a repository, and I trust that any change-sets from that repository which collide with mine, are the better option.  </p>

<p>How do I automate the pull, so that I don't have to deal with any merge conflicts, and that the repository I'm pulling from always wins the battle?</p>

<p>looking at the command line options, I'm not exactly sure if <code>git pull --squash</code> is what I'm looking for, or if I have to apply some kind of merging strategy. I can't figure out what I would pass to</p>

<pre><code>-s &lt;strategy&gt;
--strategy=&lt;strategy&gt;
</code></pre>

<p>or </p>

<pre><code>-X &lt;option&gt;
--strategy-option=&lt;option&gt;
</code></pre>

<p>if that is indeed one of the flags I should be using.</p>
","0","908939","",""
"21323050","908939","2014-01-24 02:01:54","1","585","<git><git-merge><git-push><git-pull><git-alias>","Is there a git command that attempts a pull before pushing everytime?","<p>When I work on git repositories by myself, there is no reason to ever pull before pushing.  </p>

<p>When I work with others, it is recommended that I perform a pull before attempting to push-- well, either a pull, or a checkout, and then get the changes merged in.<br>
Either way, I can not push by normal means, until I am up-to-date with the master, so it is a good habit to pull before pushing everytime(so I've been told).<br>
90% of the time I pull, it's either already up-to-date or a fast-forward.</p>

<p>Is there a <code>git push</code>-like command that automatically does a <code>pull</code> first, and only halts the push when there are actual merge conflicts?</p>

<p>I suppose I could make an alias, but I wanted to first check if there was an already built-in command for it.</p>
","1","908939","",""
"59162007","8340633","2019-12-03 17:01:12","0","53","<git><git-pull><git-fetch>","Understanding git commands in the context of the task","<p>I need help understandign git pull/fetch merge, etc... 
I know there are a lot of articles and answers on this site, so I will put it in a context of the problem I have</p>

<ol>
<li><p>So, I have this:</p>

<pre><code>Remote branch ""myBranch""
file A
file B

Local Branch ""myBranch""
       file A
       file B 
</code></pre></li>
</ol>

<p>At this point, these 2 branches are the same</p>

<p>2.) I go ahead and manually create an additional file on remote branch.  Imitating as if ANOTHER developer commited it
So, the picture changes</p>

<pre><code>    Remote branch ""myBranch""
    file A
    file B
    file C *

   Local Branch ""myBranch""
           file A
           file B 
</code></pre>

<p>Now, I know that git fetch command will ""tell me"" that there are changes, but will not modify my local branch.
When I run git fetch, I get the following output</p>

<pre><code>    $ git fetch
    remote: Counting objects: 4, done.
    remote: Compressing objects: 100% (3/3), done.
    remote: Total 4 (delta 1), reused 0 (delta 0), pack-reused 0
    Unpacking objects: 100% (4/4), done.
    From https://bvdevgithubvm.broadviewnet.com/internal-dev/bvn-process-history-service
       0c075bc..6098e63  prototype  -&gt; origin/prototype
</code></pre>

<p>BUT !! I only know that there are differences.
How do I know WHAT CHANGED.  Can I see the changes on remote branch BEFORE I bring it to my local branch (to my local machine)<br>
I guess, what I am looking for, is if you know SVN world, something equivalent to being able to see svn log and see who commited what, before doing an SVN update.</p>

<p>This was a part 1 of the question I had.  Now goes part 2, that may be viewed as independent question.</p>

<p>3.) So, from above I call git pull and bring the remote modification to the local branch
So, the picture now is  </p>

<pre><code>Remote branch ""myBranch""
           file A
           file B
           file C

        Local Branch ""myBranch""
           file A
           file B
           file C
</code></pre>

<p>At this point branches are the same.</p>

<p>So, I go ahead and delete the file C from my local branch.
Then I commit the changes, but DO NOT push them. (yet)!!</p>

<p>At this point the picture is like this:</p>

<pre><code>    Remote branch ""myBranch""
           file A
           file B
           file C

        Local Branch ""myBranch""
           file A
           file B
</code></pre>

<p>Now, this is where I get confused.  If I do the git fetch or git pull, 
output is </p>

<pre><code>$ git pull
    Already up to date.
</code></pre>

<p>I EXPECTED to know that there is something on a remote branch that makes it different.  But .. I can't ?<br>
How can I deal with this?<br>
Now, I understand that there may be a reason for such behavior, reason that lies in git filosophy, compared to the SVN (for instance).
But, how I can deal with such a difference?  How can I know that things might have changed on the remote?  </p>
","4","8340633","0","0"
"29870237","2588615","2015-04-25 20:15:22","-1","480","<git><amazon-web-services><amazon-ec2><git-pull><pull>","git pull error when trying to deploy to AWS EC2","<p>I am trying to commit some new lines of code from my repository to Aws. I have everything synced on Github. Trying to do a pull from my repository to the EC2 instance.</p>

<p>I ssh in to my EC2, no issues here, but when I do <code>""git pull""</code> (and enter in my github username and password) i get a prompt saying: </p>

<pre><code>""You are not currently on a branch. Please specify which branch you want to merge with. See git-pull(1) for details. git pull &lt;remote&gt; &lt;branch&gt;"".
</code></pre>

<p><strong>Update:</strong>
I tried a <code>'git checkout master'</code> before the <code>'git pull'</code> but it messed up by EC2, the site is down with these errors - <code>'Pull is not possible because you have unmerged files. Please, fix them up in the work tree, and then use 'git add/rm &lt;file&gt;' as appropriate to mark resolution, or use 'git commit -a</code> '</p>

<p>Appreciate your help!</p>
","0","2588615","",""
"978052","5296","2009-06-10 20:45:41","91","82765","<git><pull><git-pull><working-copy>","How can I make my local repository available for git-pull?","<p>I have a working copy repository that I've been working in no problem; the origin for this repository is on GitHub.  </p>

<p>I'd like to make my working copy repository available as the origin for my build machine (a VM on another physical host), so that commits I make to my working copy can be built and tested on the build machine without having to go via GitHub first.  I already have a build for the GitHub repository going, but I'd like this to be a ""golden"" repository/build; i.e., if something goes in there, the build against GitHub should be guaranteed to pass.  </p>

<p>I've looked at the documentation on Git URLs, and see that there's the option of using a URL in the form <code>git://host.xz[:port]/path/to/repo.git/</code> (see, e.g., <a href=""http://git-scm.com/docs/git-clone"" rel=""noreferrer"">git-clone documentation</a>).  I want to do this in the simplest possible way, with the minimum of configuration: I don't want to have to set up an SSH daemon or web server just to publish this to my build machine.  </p>

<p>I'm running Windows 7 x64 RC, I have MSysGit and TortoiseGit installed, and I have opened Git's default port (9814) on the firewall.  Please assume working copy repo is at <code>D:\Visual Studio Projects\MyGitRepo</code>, and the hostname is <code>devbox</code>.  The build machine is Windows Server 2008 x64.  I have been trying the following command on the build machine, with the associated output:</p>

<pre><code>D:\Integration&gt;git clone ""git://devbox/D:\Visual Studio Projects\MyGitRepo""
Initialized empty Git repository in D:/Integration/MyGitRepo/.git/
devbox[0: 192.168.0.2]: errno=No error
fatal: unable to connect a socket (No error)
</code></pre>

<p>Am I missing something?</p>
","1","5296","0","0"
"58111731","3445110","2019-09-26 07:35:03","-1","833","<git><github><pull-request><git-pull>","Pull request in git showing full diff for few files even though it has changes in few lines","<p><a href=""https://i.stack.imgur.com/ds93v.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ds93v.png"" alt=""enter image description here""></a>Pull request in git showing full diff for few files even though it has changes in few lines. Dont know how to fix this problem. If there is any git command which will fix this pls let me know.</p>
","8","3445110","",""
"20157629","1670542","2013-11-23 02:03:00","1","10424","<git><pull><git-pull>","What is the difference between ""git pull origin"" and ""git pull remote""?","<p>I've been using 'git pull origin' to check out updates to my friend's project, but I wonder if I should be using 'git pull remote' instead.</p>
","0","1670542","0","0"
"12929625","1752208","2012-10-17 07:54:09","4","523","<git><git-merge><git-pull><merge-conflict-resolution><automerge>","Why does git does not merge some changes?","<p>We ran into a strange git merge issue.  We have 2 repos (simplication below).  The PublicRepo is where we do most development on and every now and then we pull/merge changes into PrivateRepo.    </p>

<p><a href=""https://github.com/suwatch/PublicRepo"" rel=""nofollow"">https://github.com/suwatch/PublicRepo</a></p>

<p><a href=""https://github.com/suwatch/PrivateRepo"" rel=""nofollow"">https://github.com/suwatch/PrivateRepo</a></p>

<p>if we clone PublicRepo and make change to <strong>kudu.web/kudu.web.csproj</strong> by removing below lines and commit.</p>

<pre><code>&lt;Reference Include=""Microsoft.Json, Version=2.0.0.0, Culture=neutral, PublicKeyToken=31bf3856ad364e35, processorArchitecture=MSIL""&gt;
  &lt;HintPath&gt;..\packages\JsonValue.0.6.0\lib\40\Microsoft.Json.dll&lt;/HintPath&gt;
&lt;/Reference&gt;
</code></pre>

<p>When trying to pull/merge this change from PublicRepo -> PrivateRepo, the automerge simply <strong>ignored</strong> this change and not removed anything.   Try with different lines, it does work (removed properly).  I wonder what could be the issue?  Where to start investigating?  What do we have to do to correct this - besides having to review all auto-merged files everytime we pull/merge?</p>

<p>Thanks!</p>
","0","1752208","0","0"
"58232573","2589553","2019-10-04 08:26:39","1","67","<git><git-merge><git-pull><git-subtree>","`git subtree pull` yields weird change list in main project?","<p>I use <code>dai-client-matcher</code> as a <code>subtree</code> in a main project. I recently made a small commit to <code>dai-client-matcher</code> and tried to <code>git subtree pull</code>, as what I have always done so far, to the main project. The pulling &amp; merging process seemed to go well until I manually checked each commit and found that the merging commit was saying that I had done a lot of changes (including lots of deletions) in my main project.</p>

<p>Here is two last commits in <code>dai-client-matcher</code>:</p>

<p><a href=""https://i.stack.imgur.com/iTDFE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/iTDFE.png"" alt=""enter image description here""></a></p>

<p><a href=""https://i.stack.imgur.com/pedqA.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/pedqA.png"" alt=""enter image description here""></a></p>

<p>As you can see, in the last commit I only made a single change in one single file namely <code>src/dcm_refdb_mnger.hpp</code>.</p>

<p>Current status of the main project:</p>

<p><a href=""https://i.stack.imgur.com/eZQ6D.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/eZQ6D.png"" alt=""enter image description here""></a></p>

<p>The second line from the bottom shows the last merge of <code>dai-client-matcher</code> (commit <code>5e822365</code>) to the main project.</p>

<p>Now I <code>git subtree pull</code> the last commit of <code>dai-client-matcher</code> to the main project:</p>

<pre><code>duong2179-mbpro:main-project duong2179$ git fetch dai-client-matcher test-subtree
From git.abc.xyz.com:dai-client-matcher
 * branch              test-subtree -&gt; FETCH_HEAD
duong2179-mbpro:main-project duong2179$ git subtree pull --prefix subtrees/dai-client-matcher dai-client-matcher test-subtree --squash
From git.abc.xyz.com:dai-client-matcher
 * branch              test-subtree -&gt; FETCH_HEAD
Merge made by the 'recursive' strategy.
 subtrees/dai-client-matcher/src/dcm_refdb_mnger.hpp | 1 -
 1 file changed, 1 deletion(-)
</code></pre>

<p>Things seem to go well until I manually check the merge commit in the main project:</p>

<p><a href=""https://i.stack.imgur.com/CFIGR.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/CFIGR.png"" alt=""enter image description here""></a></p>

<p>The right side shows that I have done a lot of changes to the code base of main project.</p>

<p>Have I done anything wrong here? Why does the merge commit show a lot of changes like this?</p>
","0","2589553","",""
"58238536","12151830","2019-10-04 14:39:54","0","284","<git><git-pull><git-fetch>","Why does my local branch show (local out of date) despite doing git fetch?","<p>My team mate updated his branch <code>feature1</code> on remote while I was working on <code>feature2</code>. </p>

<p>Now when I do <code>$ git remote show origin</code>, it shows - </p>

<p><code>Local refs configured for 'git push':</code></p>

<p><code>feature1 pushes to feature1 (local out of date)</code></p>

<p>I am currently checked out on branch <code>feature2</code>, and I tried all the commands below, but the state of <code>feature1</code> doesn't change to <code>(up to date)</code>. (All commands execute without any errors)</p>

<p><code>$ git fetch origin</code></p>

<p><code>$ git fetch --all</code></p>

<p><code>$ git fetch origin feature2</code></p>

<p>Why does this happen? What am I missing?</p>
","1","12151830","",""
"58276824","719603","2019-10-07 20:38:03","1","125","<git><git-merge><git-pull><gitattributes>","What's the best way to exclude files from a merge that I have included in my "".git/info/exclude"" file?","<p>I have some files specified in the "".git/info/exclude"" file so that when I make a commit, those files are not staged/included in the commit. I <em>also</em> want to keep my local version of these files when I do a merge. I've set up a ""ours"" merge driver and set the "".git/info/attributes"" file appropriately (I think); however, I don't think the driver's being used because I don't think git detects any conflicts in these files when the merge is attempted.</p>

<p>Here's my "".git/info/exclude"" file (which is giving me what I want - these files never get staged):</p>

<pre><code>/IDWA.Client/dmsConfig.json
/IDWA.Server.AppServer/client-config*.*
/IDWA.Server.AppServer/dmsConfig.json
</code></pre>

<p>Here's my "".git/info/attributes"" file (which doesn't appear to be doing anything at all; again, I think because git is not detecting any conflicts when a merge is attempted):</p>

<pre><code>/IDWA.Client/dmsConfig.json merge=ours
/IDWA.Server.AppServer/client-config*.* merge=ours
/IDWA.Server.AppServer/dmsConfig.json merge=ours
</code></pre>

<p>The driver configuration:</p>

<pre><code>git config --global merge.ours.driver true
</code></pre>

<p>And, finally..</p>

<p><a href=""https://i.stack.imgur.com/jUYpi.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jUYpi.png"" alt=""enter image description here""></a></p>

<p>I just want to be able to do a git pull and never have to worry about these files.</p>
","2","719603","0","0"
"12984499","605356","2012-10-20 01:35:08","12","2288","<git><permissions><githooks><git-pull><ownership>","How to prevent root from running git pull?","<p>Have need to prevent root from updating a git (working) directory.  Reasoning includes but not limited to: preventing undersired file-system ownership changes.</p>

<p>None of the git hooks seem to <em>prevent</em> a fetch/merge/pull before it happens, similar to pre-commit hook.  Or at least, nothing I see here (or in man page): 
<a href=""http://www.analysisandsolutions.com/code/git-hooks-summary-cheat-sheet.htm"">http://www.analysisandsolutions.com/code/git-hooks-summary-cheat-sheet.htm</a></p>

<p>Thoughts?</p>
","7","605356","0","0"
"30629461","2770118","2015-06-03 19:56:32","3","238","<git><git-pull>","Does git truncate files when pulling from a remote?","<p>I have a web server running Apache and PHP. I want to know if Git interrupt access to files during a pull process.</p>
","2","2770118","",""
"20507979","1361598","2013-12-11 00:07:07","1","143","<git><file-permissions><git-pull>","Changing a perl script to executable makes git think the file has changed","<p>I have a project being developed in a Windows based IDE. Included in this project are some perl scripts.</p>

<p>After cloning the project onto the production servers (linux based), I change the permissions of the perl files to be executable by the user only.</p>

<p>Now if I make a change on the windows server and push it to the repository, when I try to pull the change to get it on the server I am told ""error: Your local changes to the following files would be overwritten by merge"". </p>

<p>How can I get around this? I am working towards getting pulls that are semi-automated, triggered by another script, but I need to have the files executable and able to pull any updates without causing this issue. I could have the script remove the executable permission, pull, then put it back, but I am hoping there is a better solution than this!</p>
","4","1361598","",""
"20568971","2267304","2013-12-13 14:33:18","11","32696","<git><git-merge><git-pull>","git pull: keeps telling me to stash local changes before pulling","<p>When I am trying to pull my git repository with ""git pull"", it keeps telling me that I have local changes although I have not touched any of the mentioned files. Can someone explain this behavior and knows a solution?</p>

<p>git status:</p>

<pre><code>    # On branch master
# Your branch is behind 'origin/master' by 1 commit, and can be fast-forwarded.
#   (use ""git pull"" to update your local branch)
#
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   src/component/Provider.java
#   modified:   src/data/Cascading.java
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p><strong>Solved the problem.</strong> It was actually my fault not noticing that the remote repository has been reset to a previous version. Nevertheless if you experience this, the solution explained by Max Woolf will work!</p>
","5","2267304","0","0"
"58537304","11143113","2019-10-24 08:32:09","0","58","<git><gitlab><git-push><git-pull>","How to pull files from git based on any back date?","<p>I have a process that generates a file ""hi.txt"" at multiple path on multiple servers.</p>

<pre><code>target-server1:

/opt/tmp/test/hi.txt 
/opt/tmp/log/db/hi.txt 
.... 
....
/opt/tmp/scr/hi.txt

target-server2:

/app/tmp/hi.txt
/app/db/hi.txt
.... 
.... 
/opt/tmp/scr/hi.txt

and likewise.
</code></pre>

<p>I wish to maintain these ""hi.txt"" files in git and I should be able to retrive any hi.txt for any given date-time. </p>

<p>Note: installing git on remote servers is not an option.</p>

<p>Below is the approach i took.</p>

<p>I pull (copied) all these ""hi.txt"" in a particular folder  onto a common server [we call it a jump-server] which is having git and renaming each of the ""hi.txt"" with an increment value like</p>

<pre><code>jump-server: 
/var/common/hi.txt_1 
/var/common/hi.txt_2 
.... 
....
/var/common/hi.txt_43 
/var/common/hi.txt_44
</code></pre>

<p>I then plan to push these files to git.</p>

<p>The challenge is how do i retrive pull any file of any given date in the past ?</p>

<p>Considering that we may have /var/common/hi.txt_1 filename pushed to git twice on the same date with the same comments.</p>

<p>I'm using local git and gitlab for maintaining files.</p>

<p>What would be a good approach that will help me retrive the files of any given date from git ? Kindly suggest ?</p>
","0","11143113","",""
"13135601","358788","2012-10-30 09:00:32","27","34661","<git><github><git-pull><git-remote>","""Proper"" way to pull git ""production branch"" to production server","<p>I'm quite new to Git, and have read the Pro Git book @ <a href=""http://git-scm.com/book/en/Git-Branching-Basic-Branching-and-Merging"" rel=""noreferrer"">http://git-scm.com/book/en/Git-Branching-Basic-Branching-and-Merging</a>. My question is if what I'm doing today is the prefered way to work with production server and a remote Git repo.</p>

<p>I have my repo hosted on GitHub, using three remote branches: developing -> testing -> master.</p>

<p>Whenever the 'testing' branch has been verified to be working, I <code>git merge</code> 'master' with 'testing' (fast forward?) locally, and <code>git push</code> 'master' to GitHub.</p>

<p>On the production server (/opt/www/url.com/) I have done: </p>

<pre><code>git init
git remote add origin https://github.com/.....
git pull origin master
</code></pre>

<p>Now everytime I want to update the master I issue a <code>git pull</code></p>

<pre><code>git pull origin master
</code></pre>

<p>Production will never push any changes to remote. And local changes won't happen. Am I doing it correct? If not, what is the prefered way to pull updates to production?</p>

<p>Edit #1: I don't want to manage any conflicts on the production server, which I am facing now (somehow I've done something wrong). I simply want to pull down the latest updated master branch, and switch to it.</p>
","0","358788","0","0"
"20707976","505722","2013-12-20 16:31:20","0","706","<git><git-pull>","git pull List all errors","<p>I'm trying to do a <code>git pull</code> and I'm getting <code>error: Your local changes to 'someDir/someFile' would be overwritten by merge.  Aborting.</code> this is fine since I need to check these changes and decide whether these need committed or not.</p>

<p>However doing the above, checking that file and committing/rolling back is laborious if I have to do it each time. Is there a way I can get <code>git pull</code> to list <em>all</em> merge errors rather than one each time? </p>
","1","505722","",""
"39117488","3286903","2016-08-24 07:54:19","0","983","<git><bash><passwords><credentials><git-pull>","git pull with password on command line in bash","<p>I want to update many repos with a loop in bash:</p>

<pre><code>for dir in *; do ( cd $dir; git pull origin master ); done
</code></pre>

<p>Although there are many similar questions as </p>

<ul>
<li><a href=""https://stackoverflow.com/questions/11506124/how-to-enter-command-with-password-for-git-pull"">How to enter command with password for git pull?</a></li>
<li><a href=""https://stackoverflow.com/questions/14629107/how-to-input-password-to-git-pull-command"">How to input password to git pull command?</a></li>
<li><a href=""https://stackoverflow.com/questions/10054318/how-to-provide-username-and-password-when-run-git-clone-gitremote-git"">How to provide username and password when run “git clone git@remote.git”?</a></li>
</ul>

<p>git just allows to set credentials by </p>

<ul>
<li>modifying the remote repo: http://:@host/...</li>
<li>using <a href=""https://stackoverflow.com/questions/6191985/git-http-securely-remember-credentials/12938677#12938677"">gitcredentials</a></li>
</ul>

<p>Why is there no ""<code>--password</code>"" option as e.g. in mysql command line?
This would help a lot for automating git tasks on the fly.</p>

<p>Is that a planned git feature and already on the roadmap or do we have to stick with the option given today for a long time?</p>

<p>Is there a workaround to specify the password e.g. using piping mechanisms?</p>
","0","3286903","",""
"39148206","3162189","2016-08-25 14:37:50","6","1186","<git><git-rebase><githooks><git-pull>","Executing a git-hook after pull --rebase","<p>I'd like to have a hook run after doing <code>git pull --rebase</code> in order to check if a certain file was changed. Something along the lines of <a href=""https://gist.github.com/sindresorhus/7996717"" rel=""noreferrer"">this</a> hook.</p>

<p>I initially thought of using the <code>post-rewrite</code> hook, however that only works when commits are being rewritten, and won't run when the <code>pull</code> operation simply fast-forwards the branch, which is very often.</p>

<p>Any ideas will be appreciated.</p>
","0","3162189","0","0"
"18599418","2743565","2013-09-03 18:48:06","1","1830","<git><git-push><git-pull>","Why is this git push not allowing me to do this?","<p>So I recently tried to do the following in git:</p>

<pre><code>Username for '##### - Site': User
Password for '##### - Site':
To https://comtech.git.beanstalkapp.com/ong-sis.git
 ! [rejected]        master -&gt; master (non-fast-forward)
error: failed to push some refs to '##### - Site'
hint: Updates were rejected because a pushed branch tip is behind its remote
hint: counterpart. Check out this branch and merge the remote changes
hint: (e.g. 'git pull') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
</code></pre>

<p>So I was like, ok - lets try and force this - <strong>BAD I KNOW BUT READ ON</strong> - my reasoning for this is because the master of the branch I am trying to push too has code I no longer care about - and I am the only one who pushes to this repo.</p>

<p>So I tried this:</p>

<pre><code>$ git push --force SISONG master
Username for '##### - Site': user
Password for '##### - Site':
Counting objects: 190, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (110/110), done.
Writing objects: 100% (111/111), 599.75 KiB | 0 bytes/s, done.
Total 111 (delta 60), reused 40 (delta 1)
remote: error: denying non-fast-forward refs/heads/master (you should pull first
)
To https://comtech.git.beanstalkapp.com/ong-sis.git
 ! [remote rejected] master -&gt; master (non-fast-forward)
error: failed to push some refs to '##### - Site'
</code></pre>

<p>So finally I decided, ya know what - lets pull - lets just do it and deal with the merge issues.</p>

<pre><code>$ git pull SISONG master
Username for '##### - Site': user
Password for '##### - Site':
From ##### - Site
 * branch            master     -&gt; FETCH_HEAD
Already up-to-date.
</code></pre>

<p>I'm sorry what?! So your up to date? ok fine push the damn stuff....</p>

<p>Now my company does not allow  non-fast-forward pushes, and I cannot get ahold of the admin for this repo - any ideas?</p>
","3","2743565","0","0"
"18612093","1341368","2013-09-04 11:04:26","0","2260","<git><git-pull>","Applying remote changes onto local, git pull overwrites files, another way than stashing?","<p>I am working on a local version of a site pulled from a remote repo and made changes to the site. The partner working on it has also made changes and I need to pull them onto my local version without overwriting the files I have created or changed.</p>

<p>I know that I can stash my changes and then access them later, but is this the best approach?</p>
","1","1341368","",""
"1155095","54964","2009-07-20 18:22:02","6","12729","<git><repository><git-submodules><git-pull>","Unable to `git submodule foreach git pull`","<p>This question is based on <a href=""https://stackoverflow.com/questions/1145422/to-show-external-code-dependency-in-git-by-a-submodule"">this thread</a>.</p>

<p><strong>My .gitmodules is at my Home</strong></p>

<pre><code>[submodule ""bin""]
           path = bin
           url = git://github.com/masi/bin.git
</code></pre>

<p><strong>My folder -structure at my Home:</strong></p>

<pre><code>~
|-- [drwxr-xr-x] bin          // this is the folder which I make a submodule
                              // it is also a folder where I have a Git to push my submodule's files
    | -- fileA
    ` -- folderA
    ...
</code></pre>

<p>I run </p>

<pre><code>git submodule init    # I get no output from these commands
git submodule update          
</code></pre>

<p>I run </p>

<pre><code>git submodule foreach git pull
</code></pre>

<p>I get </p>

<pre><code>Entering 'bin'
fatal: Where do you want to fetch from today?
Stopping at 'bin'; script returned non-zero status.
</code></pre>

<p>My first assumption to fix the bug was to change <code>path = bin</code> to <code>path = /Users/Masi/bin</code>. However, this does not solve the problem.</p>

<p><strong>How can you upload the content from the external repository which is a submodule in my Git?</strong> </p>
","6","54964","0","0"
"58286213","91610","2019-10-08 12:18:05","5","178","<git><relative-path><git-pull>","Make git pull show relative path to the current directory for updated files","<p>If my current directory is a subdirectory of a git project and I call <code>git pull</code> it always shows a path relative to the project root. Is there a way to see changed file paths relative to current directory?</p>

<p>Ex.</p>

<pre><code>&lt;root&gt;/default $ git pull
...
Updating 03e5eb12..95987ffb
Fast-forward

../client/styles/components/manageEscrow.styles.ts               |  11 +++++
./lib/index.ts                                                   |   8 ++--

INSTEAD OF
client/styles/components/manageEscrow.styles.ts                  |  11 +++++
default/lib/index.ts                                             |   8 ++--
</code></pre>
","2","91610","0","0"
"20409853","772264","2013-12-05 20:20:13","44","48972","<git><git-pull><git-stash>","git stash and apply","<p>I'm new to git and not quite clear on how stashing works.</p>

<p>Let's say I'm working on branch master and try to <code>git pull</code> and receive the error that my local changes would be overwritten and need to be stashed or committed. If I haven't staged any of my changes and run <code>git stash</code>, then do a <code>git pull</code> and and update successfully, what happens when I <code>git stash apply</code>?</p>

<p>In general, If someone else modifies files and I run <code>git pull</code>, what happens when I <code>run git stash apply</code>? does it overwrite the files that were just updated, regardless of whether or not they were staged when I stashed them? Does it overwrite every file that I just updated with <code>git pull</code>, with the files that were stashed?</p>
","1","772264","0","0"
"39468125","5028874","2016-09-13 10:44:56","10","6183","<git><git-merge><git-pull>","Restore git files deleted after git merge --abort","<p>I've lost files added to git during ""merge conflict"" phase.</p>

<p>Step by step:</p>

<pre><code>git pull
git status
</code></pre>

<p>Git informs me about ""merge conflict"", that's okay. Then I create a new file and add it to git.</p>

<pre><code>vi test.txt
git add test.txt
</code></pre>

<p>After that, abort merge:</p>

<pre><code>git merge --abort
</code></pre>

<p>I have not found the file ""test.txt"" neither in directory, nor via ""git fsck"", nor  ""git reflog"". Is it possible to restore the file?</p>
","0","5028874","0","0"
"20581914","1350350","2013-12-14 10:02:26","41","137395","<git><git-pull>","Files not updating using 'git pull'","<p>I am using Git to cooperate with other users, but today I cannot get the latest change on some files using ""<code>git pull</code>"", and I cannot see the changes in ""<code>git log</code>"".</p>

<p>What could be the issue?</p>
","7","1350350","0","0"
"20586812","2571840","2013-12-14 18:36:57","0","76","<git><git-pull>","Error doing git pull","<p>I'm getting suddenly this error when I try to pull changes from repository:</p>

<pre><code>git pull
fatal: http://guthub.com/msalsas/BunchOfColors/info/refs not valid: is this a git repository?
</code></pre>

<p>Seems to be a typo (""guthub""), because if I do it in this way:</p>

<pre><code>git pull http://github.com/msalsas/BunchOfColors
</code></pre>

<p>it works. The thing is that I don't know what could cause this problem and how to solve it.
I've been working with this repo before and pulling changes without any problem.</p>
","2","2571840","",""
"20793139","3138102","2013-12-27 00:33:19","1","89","<git><git-pull>","How to pull only particular files from a git repository?","<p>I have 2 repositories A and B.</p>

<p>I wanted to pull only some of the files from repository A to repository B.</p>

<p>Is there any way to do this?</p>
","0","3138102","",""
"1814555","119013","2009-11-29 03:33:37","0","247","<git><git-pull>","How do I pull from my ""public"" git server to bring my broken local ""master"" up to date?","<p>I have a local &quot;master&quot; git repository. Every few hours, I 'git push' my changes to a server from which I then pull to my client machines.  Well, I accidentally used GITK to rollback my local &quot;master&quot; repository one version too far.</p>
<p>What are the steps to pull the last committed version back from the server and still have my local version behave &quot;masterfully&quot;?</p>
","1","119013","",""
"18730888","2272514","2013-09-11 00:33:42","5","2448","<git><tortoisegit><git-pull>","How to pull from many repos with tortoisegit?","<p>I have many different repos residing in the same directory (about 20). I would like to stay up-to-date with the rest of my team and perform a ""git pull"" for all of the repos at every morning. </p>

<p>Is there a faster way than doing a ""right-click -> git sync -> pull"" for every single repo?</p>
","1","2272514","",""
"18739930","2571840","2013-09-11 11:29:27","2","5514","<git><gitignore><git-pull>","unable to pull .gitignore file","<p>I've modified my .gitignore file from my VPS. Then I've commit the change and pushed to remote repo:</p>

<pre><code>git add .gitignore
git commit -m "".gitignore changed""
git push -u origin --all
</code></pre>

<p>and then, I pull it to localhost:</p>

<pre><code>git pull
</code></pre>

<p>But I get the next error:</p>

<pre><code>error: unable to unlink old '.gitignore' (Permission denied)
</code></pre>

<p>I've tried changing permissions of .gitignore local file to 0777, but doesn't work.
The file in remote repo has been changed, but not in my local file
What could be the problem? and how could be solved?</p>
","2","2571840","0","0"
"2284931","220949","2010-02-17 22:33:38","3","562","<git><diff><pull><git-pull>","is there a simple way to know which files will be updated in the next 'git pull'?","<p>i would like to know which files would be updated (and hopefully the changes that would occur) if i'd do a 'git pull'...</p>

<p>is </p>

<pre><code>git stash 
git fetch
git diff origin/master
git stash apply 
</code></pre>

<p>the answer ?</p>
","0","220949","0","0"
"59029451","1635450","2019-11-25 10:11:58","1","118","<bitbucket><git-push><git-pull><git-lfs>","Bitbucket git lfs fail to push and pull","<p>On <code>git lfs pull</code>, I get:</p>

<pre><code>Object does not exist on the server: [404] Object does not exist on the server

</code></pre>

<p>On <code>git lfs push origin --all</code>, I get:</p>

<pre><code>(missing) src/some_file_name (c466bb10506eb1404a0746d50069eaacb96abe736bb3351a81a29e1dea5d47c2)
</code></pre>

<p>How do I recover from this?</p>
","0","1635450","",""
"18783555","230214","2013-09-13 10:02:49","1","1117","<git><version-control><git-pull><git-clone>","How to update git repo or to create if there is no such repo","<p>I want a script that will update the git repo. I want it to update the repo if the folder with the repo exists and I want to clone the repo if there is no such folder.</p>

<p>I want to specify 2 thing for that script:</p>

<ul>
<li>git remote url (for example <code>ssh://git.example.com/var/git/repo.git</code>)</li>
<li>forder where the git repo should be (for example <code>/var/lib/git/repo</code>)</li>
</ul>

<p>It is not very hard to write this kind of script, but I think that this task is something very common and it is already solved. </p>

<p>The task is pretty simple, but there are some things that should be done carefully. For example, the main branch of the repo can not the master, but something else, the scrip should give the non zero exit status in case of error, it should work if there is some changes in the repo, and so on.</p>

<p>So my question — what script can I use to carefully solve the task of cloning or updating the repo.</p>
","0","230214","",""
"18784097","2639206","2013-09-13 10:29:08","1","659","<git><git-pull>","Difference between different refspecs in a git-pull call","<p>Whats the difference between using the following git commands</p>

<blockquote>
  <p>git pull origin master<br>
  git pull origin master:master</p>
</blockquote>

<p>Some observations </p>

<p>1) First one tells me if there any conflicts but the other simply says ""rejected - non-fast forward ""</p>

<p>2) Second one doesn't update my remote pointers i.e. origin/master if it fails</p>
","0","2639206","0","0"
"59107709","7887218","2019-11-29 15:42:22","1","1280","<git-pull><git-fetch>","Git pull vs git pull --all","<p>In the Git manual it states that the --all option is for the fetch part. I'm confused because I thought git fetch would update the whole local copy of the remote repository by default, so I don't see the need to define --all. And the main question, is git pull the same as git pull --all? if not, what is the difference?</p>
","0","7887218","",""
"21276507","1342109","2014-01-22 07:15:29","2","577","<git><github><git-merge><git-push><git-pull>","Will git-merge delete untracked files?","<p>I am using git for my code.</p>

<p>In my local repo i have a deleted a large folder and committed(<code>git push</code>) to repo, and after that i logged in to server and done <code>git pull</code>, but i got the below message </p>

<pre><code>.....
.....
 * branch            master     -&gt; FETCH_HEAD
Updating 12hgb51..e27d363
error: The following untracked working tree files would be removed by merge:
    request_log
    request_log
......
......
</code></pre>

<p>But i have some changed files/uncommited files/untracked files on server(which i need only on server and don't want to commit it), so if do <code>git merge</code> command all the unsaved files will be gone on server ?, </p>

<p>Actually why git showing this error message
How to avoid this error without loosing unsaved files ?</p>
","3","1342109","0","0"
"35287001","239117","2016-02-09 08:18:09","4","645","<git><git-pull><gentoo>","git: pull specific branch, keep only the latest tree (without any history)","<p>How can I pull a specific branch from a remote repository, checking out only the latest tree without keeping any history?</p>

<p>This question is specifically related to checking out Gentoo's Portage tree: I'd like to update my Portage tree, without keeping any history, minimizing the size of <code>/usr/portage/.git</code>.</p>
","0","239117","",""
"35296680","4014635","2016-02-09 16:07:35","31","33464","<git><git-merge><git-pull><git-config>","How to configure ""git pull --ff-only"" and ""git merge --no-ff""","<p>A typical git workflow for me is to clone a remote repository and use git pull to keep it up-to-date. I don't want merge commits when I pull, so i use the --ff-only option.</p>

<p>I also make local branches for feature work. I want to preserve the branch history, so when I merge the local branch back to my local clone, I use the --no-ff option.</p>

<p>How can I configure git to use those options by default? Currently my .gitconfig looks like this:</p>

<pre><code>[merge]
  ff = false
[pull]
  ff = only
</code></pre>

<p>However, git pull (which is really git fetch and git merge) seems to be picking up the merge option and therefore creating merge.</p>
","0","4014635","0","0"
"59204562","3112241","2019-12-05 23:09:14","-1","865","<git><git-pull>","What modes does git pull have other than the default?","<p>The <code>git-pull</code> section of the <a href=""https://git-scm.com/docs/git-pull/2.21.0"" rel=""nofollow noreferrer"">Pro Git book</a> says ""In its default mode, git pull is shorthand for git fetch followed by git merge FETCH_HEAD.""</p>

<p>What other modes are there, and where can I find documentation for them?</p>
","0","3112241","0","0"
"59283281","11566361","2019-12-11 10:07:25","0","150","<git><github><webhooks><git-pull>","Why have I my local repository ahead of 1 commit after git pull?","<p>I have done a push to my remote repository, from a local one, then a webhook notify a web service that makes a git pull on another local repository.</p>

<p>After that I see the changes on that local repository, but if I execute <code>git status</code> the output is:
<code>your branch is ahead of 'origin/master' by 1 commit</code></p>

<p>Can someone explain to me what happened?</p>
","5","11566361","0","0"
"40484929","7131095","2016-11-08 10:46:49","2","1642","<git><git-pull><git-flow>","Will a ""git-pull develop"" fetch all the commits reacheable from develop?","<p>I have a question regarding how git will pull the changes form the remote, and how many history.</p>

<p>I'm considering to follow a gitFlow workflow for my project. We are 80 developers, and we will be integrating our changes from feature branches to the develop branch - by means of pull requests to perform code review first. </p>

<p>We will need to (locally) rebase our feature branches on (top of) develop, so that we have all the latest develop changes integrated. Hence, we will be pulling develop often. Here, I don´t want to fetch other teammates' feature branches - nor their commit history.  </p>

<p>Now, if I pull develop, will this operation bring commit history that happen under other feature branches if they are reachable (through a merge commit) from develop?</p>

<p>Thanks in advance :-)</p>

<p><strong>EDIT</strong>:  I might not have been clear enough:</p>

<ol>
<li><p>We use rebase locally, so that pull request over develop branch are mergeable. We don't use merge as it might ""pollute"" feature branches when performing code-review. If the pulll request is accepted then, we will merge with a non fast forward commit. </p></li>
<li><p>I know I can ""git fetch origin develop"". Here is my question: will git pull origin develop just ""fetch"" the blue commits or also the  green ones? See figure <a href=""https://i.stack.imgur.com/zoyEE.png"" rel=""nofollow noreferrer"">git-pull-</a></p></li>
</ol>
","4","7131095","0","0"
"18857570","2788848","2013-09-17 18:46:38","374","130094","<git><git-pull><git-checkout>","How to 'git pull' without switching branches (git checkout)?","<p>I'm used to running <code>git pull</code> and other commands from within a branch I'm working on.  But I have set up a development server that several people work on, so I don't want to have to switch branches when I do it.</p>
<p>If I want to update an existing branch on the dev server from the github repository we all use, what would be the right way to do that?</p>
<p>If I run the command <code>git pull github branchname</code> will that simply pull the branch into the current branch?</p>
<p>All of the git examples I can find seem to indicate that you run <code>checkout branchname</code> first, then do the pull.  I'm trying to avoid that.  As I said, this is an existing branch and I just want to update to the latest version.</p>
","4","2788848","0","0"
"63529683","7133414","2020-08-21 20:28:26","0","266","<git><git-branch><git-merge><git-pull><git-fetch>","git reset to a local commit head; need to pull from origin keeping local changes","<p>I have a local <code>feature/branch</code>. When I pull from a <code>remote/origin</code> it's overiding my local changes, when usually it presents me with conflicts from the merge.... How do I set up the local git branch so that I get a conflict report when merging the remote branch and can resolve those conflicts?</p>
<p>UPDATE:</p>
<p>using <code>git branch -vv</code> I can see that the branch was merged into the <code>remote branch origin/master</code> and has a pull request id. Many changes have been made on top and some of the work on the current <code>feature/branch</code> and some changes have been over-written. I moved the <code>feature/branch</code> back to a previous commit before it's changes were over-written.</p>
<p>I can see the changes in <code>git diff master</code> but I'd like to be able to see the <em>conflicts</em> and resolve them in vscode rather than scroll through the terminal output of <code>git diff master</code>.</p>
<p>could I detach the <code>local feature/branch</code> from the <code>remote feature/branch</code> so that git picks up the conflicts on a <code>git pull origin master</code>?</p>
","1","7133414","",""
"63535515","804517","2020-08-22 11:15:04","1","40","<git><git-pull>","Is it possible to switch git repository branch from different folder?","<p>Is there any way to switch the branch of some git repository from different directory?</p>
<p>Same like <code>git pull</code></p>
<p>So to pull a repository from different directory I have the version of pull like this</p>
<pre><code>git -C c:\MyDirectory\MyRepository pull
</code></pre>
<p>Is there any similar version for <code>git switch</code> as well?</p>
","1","804517","",""
"9491751","1239064","2012-02-29 00:04:42","1","8066","<git><git-pull>","git pull fatal error server repo","<p>My goal is to set up a repo on my lab server, which I can clone on my laptop via ssh. I still want a working copy on the server.  Here is what I did:</p>

<p>server:</p>

<blockquote>
  <blockquote>
    <p>mkdir myProject</p>
    
    <p>git --init </p>
    
    <p>(add some files and commit them so it' isn't empty) </p>
    
    <p>git clone --bare ~/myProject/.git/ ~/git/myrepo.git</p>
  </blockquote>
</blockquote>

<p>laptop:</p>

<blockquote>
  <blockquote>
    <p>git clone erin@labserver.edu:/home/erin/myrepo.git</p>
    
    <p>git add file1</p>
    
    <p>git commit </p>
    
    <p>git push</p>
  </blockquote>
</blockquote>

<p>server:</p>

<blockquote>
  <blockquote>
    <p>git pull</p>
  </blockquote>
</blockquote>

<p>then I get this error:</p>

<blockquote>
  <blockquote>
    <p>fatal: Where do you want to fetch from today?</p>
  </blockquote>
</blockquote>

<p>Do you have an idea of what could be wrong?  I tried following the branching/ staging/rebasing directions <a href=""https://stackoverflow.com/questions/1756600/when-youre-the-origin-repo-in-git-how-do-you-do-a-local-pull"">here</a>, but it didn't fix the problem.  Also</p>

<blockquote>
  <blockquote>
    <p>git pull origin master</p>
  </blockquote>
</blockquote>

<p>didn't fix it either.</p>
","0","1239064","0","0"
"27669331","2142661","2014-12-27 16:46:24","0","73","<git><github><git-pull>","How to rollback the git repo before the ""Initial commit""","<p>I've done the following:</p>

<ol>
<li>added a new empty repo in GitHub,</li>
<li>run <code>git init</code> to initialize my local project,</li>
<li>run  <code>git remote add origin</code> to associate the remote.</li>
</ol>

<p>However, I then ran <code>git pull</code> to pull from the remote, which seems to have removed my project's source code.</p>

<p>How can I recover this lost source code? This project is very important to me...</p>
","5","2142661","0","0"
"27716846","1568658","2014-12-31 06:01:12","3","1283","<git><git-pull><git-tag>","git pull - will it fetch tags on remote by default?","<p>I know <code>git fetch --tags</code> will fetch all tags from remote to local.</p>

<p>I am not sure will <code>git pull</code> get tags from remote by default, so will it or not?</p>
","0","1568658","0","0"
"9745941","454780","2012-03-16 23:51:22","9","10202","<git><git-push><git-pull><git-commit>","How do I use the --work-tree option with git? I keep getting an error","<p>I have a normal repo where there is a working tree and a .git folder in the same directory as the working tree.</p>

<p>I'm trying to run a git command from outside this location with the command</p>

<pre><code>git --git-dir=/path/to/repo/.git --work-tree=/path/to/repo pull /some/other/repo master
</code></pre>

<p>but I keep getting the error <code>fatal: /usr/libexec/git-core/git-pull cannot be used without a working tree.</code>.</p>

<p>What am I doing wrong?</p>
","2","454780","0","0"
"27777348","3999893","2015-01-05 10:14:03","1","64","<git><bash><git-pull>","Pull changes for several git-repositories","<p>In my folder <code>~/git</code> I have more than 20 folders containing git-repositories.
I could pull the changes for each repository by running</p>

<pre><code>cd folder1
git pull
cd ..
cd folder2
git pull
cd ..
# etc
</code></pre>

<p>In bash I could also solve it with a loop:</p>

<pre><code>for f in $(find . -mindepth 1 -maxdepth 1 -type d);
do
  cd ${f};
  git pull;
  cd..;
done
</code></pre>

<p>I'm wondering, if there is a more elegant way, e.g. using <code>xargs</code> or the <code>-exec</code> of <code>find</code>.</p>
","1","3999893","",""
"63654733","719001","2020-08-30 06:45:03","1","270","<git><git-pull>","How to provide comment to git pull merge message","<p>my automation fails because <code>git pull</code> expects a reply (merge message).
I saw I can use the <code>--no-edit</code> flag which is not recommended.
Instead I would like to actually provide a message to it during the pull.
Of course, if there is a conflict - to exit with failure.</p>
<p>How to do that ?</p>
","1","719001","0","0"
"64387105","7013532","2020-10-16 10:07:52","1","3521","<python><git><git-pull><gitpython><pygit2>","how to use git pull with GitPython?","<p>I am trying to pull filesfrom git using python but it's not working. Below is the code I was using:</p>
<pre><code>import git 
git.cmd.Git().pull('https://github.com/User/repo','master') 
</code></pre>
<p>it asks for authentication and after that terminates.</p>
<p>Could someone please help me here? what's wrong with this code?</p>
","0","7013532","0","0"
"28303977","3373470","2015-02-03 16:32:21","0","38","<git><git-branch><git-push><git-pull>","Setting where a local git branch pulls AND pushes","<p>I am working on my forked repo with 2 main branches:</p>

<ul>
<li>master: <em>pulls</em> from main_project/master</li>
<li>bootstrap: <em>pulls</em> from collaborator/bootstrap</li>
<li><strong>The second remote is a fork also contributing to the main project</strong></li>
</ul>

<p>I want the above branches to <em>pull</em> from the respective related repos; however, I want them to <em>push</em> to <code>origin/&lt;branch&gt;</code> (master or bootstrap). I know I can designate a push by <code>git push &lt;remote&gt; &lt;branch&gt;</code>, but I want it to be simpler, if possible.</p>

<p>As a follow-up, would <em>tracking</em> a branch help in anyway? I am not aware of tracking, although I did read about it via similar SO questions. How would branch tracking affect my situation?</p>
","0","3373470","",""
"10356165","1098524","2012-04-27 18:45:59","25","7199","<c++><c><git><makefile><git-pull>","Avoid recompilation with git and make","<p>I have two development branches in git and I frequently need to change between the two. However, the really frustrating thing is that every time I change branches in git, the entire project gets rebuilt because the file-system timestamps for some files will change. </p>

<p>Ofc, the makefiles are configured to build the project into two different build directories .</p>

<p>Is there any way around this? Compilation is a very long and time-consuming process... </p>

<p>Edit:- This is a slightly more detailed explanation of the question... 
Say I have a header files Basic.h which is included in a number of other files. Basic.h is different between branch 1 and branch 2. </p>

<p>Now let's say I have compiled branch 1 into build_branch1 and branch 2 into build_branch2. Say I have branch 2 currently checked out. Now I checkout branch 1 and change File1.cpp and recompile. Ideally, since only File1.cpp has changed since I compiled it the last time, this is the only file that should be recompiled.</p>

<p>However, since Basic.h has it's timestamp changed due to the checkout, all files that are including Basic.h will get recompiled. I want to avoid this. </p>
","4","1098524","0","0"
"28337390","362754","2015-02-05 06:17:10","3","1600","<git><git-branch><git-pull><git-remote>","git pull command output message meaning into which branch","<p>Say there is a remote branch <code>br1</code> checkout on the remote repo, and the <code>master</code> branch on a local repo. </p>

<ul>
<li><p>Command 1: If I do a ""<code>git pull origin br1:br1</code>"" it pulls remote <code>br1</code> into local <code>br1</code>, and shows: 
<code>
9188a5d..97d4825  br1        -> br1
9188a5d..97d4825  br1        -> origin/br1
</code></p></li>
<li><p>command 2: If I do just a ""<code>git pull</code>"", it will pull remote <code>br1</code> into local <code>master</code>, but it shows only the following:
<code>
9188a5d..97d4825  br1        -> origin/br1
</code></p></li>
</ul>

<p>I'm expecting it also shows something like ""<code>br1 -&gt; master</code>"". Why it does not show that? </p>

<p>Does ""<code>br1 -&gt; br1</code>"" mean pulling remote <code>br1</code> into local <code>br1</code>? </p>

<p>What does that ""<code>br1 -&gt; origin/br1</code>"" mean? </p>

<p><strong>Update</strong>: With help from VonC, I figured out the following: </p>

<ul>
<li><p><code>git pull</code> updates all the tracking branches. <code>br1 -&gt; origin/br1</code> means <code>br1</code> on the remote is pulled into local tracking branch <code>origin/br1</code>. </p></li>
<li><p><code>git pull origin br1:br1</code> pulls remote <code>br1</code> into local <code>br1</code> and into <code>origin/br1</code>. Then the messages after that mean the same change set is also pulled into the current checked-out branch (the message is <code>Updating ...</code>, it does not show <code>br1 -&gt; master</code>):
<code>
$ git pull origin br1:br1
   beb48a4..b344dd1  br1        -> br1
   beb48a4..b344dd1  br1        -> origin/br1
Updating cca5a9b..b344dd1
Fast-forward
 file2 | 0
 file3 | 0
 4 files changed, 0 insertions(+), 0 deletions(-)
</code></p></li>
<li><p>Previously I thought <code>git pull</code> pulls into the local master. That is not the case. It is that <code>git pull origin br1:br1</code> does it. </p></li>
</ul>

<p><strong>Update 2</strong>: With explanations by torek, the specific problem is that the command <code>git pull origin br1:br1</code> pulls remote <code>br1</code> into <code>FETCH_HEAD</code> after a sequence of other actions and subsequently merges the <code>FETCH_HEAD</code> onto the current branch. </p>
","0","362754","0","0"
"46593731","2274226","2017-10-05 19:51:06","0","134","<git><git-push><git-pull>","git mirror repo with pull and push","<p>I need a solution to following problem. I have some workarounds, But I would like to know what's the proper way to do it.</p>

<p>Problem Statement:
I want to have source on my local machine (M).
However I can only build on remote machine (S).
Source is in git repo (G).
How can I develop on M. Build on S. Then push to G?</p>

<p>What I think is way to do:
Is there a way to say clone G on S, then clone S to M.
I make changes on M, push them to S. Do the build on S. If everything okay, push from S to M. I would like to know exact CLIs for this. Would there be any issues with push, pull, commit etc in this case? </p>

<p>Please suggest if you think there is altogether different way to do this.</p>
","3","2274226","",""
"28663227","2605112","2015-02-22 21:04:28","12","13836","<git><merge><git-pull><git-checkout>","Difference between checkout remote branch and pull remote branch in git?","<p>What is the difference between:</p>

<pre><code>git checkout -b &lt;branch&gt; origin/&lt;branch&gt;
</code></pre>

<p>and </p>

<pre><code>git pull origin &lt;branch&gt;
</code></pre>

<p>They seem to have the same functionality to me.  thanks.</p>
","0","2605112","0","0"
"28668742","2605112","2015-02-23 07:26:06","11","8743","<git><github><version-control><git-pull>","git pull U, A and D tags: Meaning?","<p>git pull occasionally will give me messages as follows:</p>

<p><img src=""https://i.stack.imgur.com/bo75l.png"" alt=""screen shot of gitbash during pull attempt""></p>

<p>I do not understand the tags of ""U"", ""A"", and ""D"". Can someone please tell me what these mean?  Thanks.</p>
","0","2605112","0","0"
"64591193","12195161","2020-10-29 12:31:57","0","41","<git><github><git-push><git-pull><pull>","Update local project with lastly updated/edited git repo","<p>I've lastly done some changes in my Project and <code>git push</code>ed it into the GitHub server. But now, I've done some changes in my local desktop projects and it is showing some error. I want to update that lastly <code>pushed</code> data into my local desktop but <code>git pull</code> isn't doing anything except printing <code>Already upto date</code>. This is so tedious and frustating. How to update the lastly push data to my LOCAL desktop.</p>
<p>Need help!!!</p>
","0","12195161","",""
"64602069","7613404","2020-10-30 02:47:04","0","2196","<git><github><git-merge><git-pull><git-checkout>","how to edit and update files for different git branches?","<p>A repository in my GitHub has two branches: <code>master</code> and <code>solution</code>. First I <code>git clone</code></p>
<pre><code>git clone &lt;master url&gt;
</code></pre>
<p>then I <code>cd</code> to that folder and switch to <code>solution</code> branch</p>
<pre><code>git checkout solution
</code></pre>
<p>I find the contents of files is still the same as in <code>master</code>, e.g. <code>README.md</code>. how can I access <code>solution</code> files?</p>
<p>then I tried <code>git pull</code> to update the files in <code>solution</code> branch</p>
<pre><code>git pull origin solution
</code></pre>
<p>and it works and now the contents of files are for <code>solution</code>, but when I want to switch back to <code>master</code>, it failed and said I need to merge, because I think some files have different contents in the two branches. How to switch back?</p>
<p>In general, how to edit and update files in different branches and how to easily switch back and forth?</p>
<p>Another example:</p>
<pre><code>          I--J   &lt;-- br1
         /
...--G--H   &lt;-- main
         \
          K--L   &lt;-- br2     
              \
               M--N
                   \
                    P
</code></pre>
<p>Is another worktree needed?</p>
","3","7613404","0","0"
"28358825","362754","2015-02-06 04:57:00","0","965","<git><git-pull>","git pull to merge into non-current branch for downstream repo to be able to track","<p>A remote repo has two branches <code>master</code> and <code>br1</code>. A local is cloned from it, and checked out on <code>master</code>. </p>

<p>With a <code>git pull origin br1:br1</code> command, it pulls remote <code>br1</code> into local <code>br1</code>, and merge down into the local <code>master</code> too. For example:</p>

<pre><code>$ git pull origin br1:br1
   e73973c..9377c16  br1        -&gt; br1
   e73973c..9377c16  br1        -&gt; origin/br1
Updating cca5a9b..9377c16
Fast-forward  
 file2 | 0
 file4 | 0
 2 files changed, 0 insertions(+), 0 deletions(-)
</code></pre>

<p>Basically three things happened: It brings remote <code>br1</code> into local <code>br1</code>. It brings remote <code>br1</code> into local <code>origin/br1</code>. Then it update local <code>master</code> with the same change set, that is revealed by the <code>Updating...</code> and <code>Fast-forward</code> messages. </p>

<p>Is there a command or some options to have it not to do the ""updating current master"" part? </p>

<p>I've read a few SO questions and answers. All of them suggest some sequence of commands or scripts. I wish that can be done in one single command, and further wish that command is not too complicated. </p>

<p><strong>Update</strong>: With ideas from torek's explanation below, the answer is to use a non-standard setting: </p>

<p>Change the following two configurations in the downstream repo: </p>

<pre><code>remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*
branch.br1.merge=refs/heads/br1
</code></pre>

<p>to:</p>

<pre><code>remote.origin.fetch=+refs/remotes/origin/*:refs/remotes/origin/*
branch.br1.merge=refs/remotes/origin/br1
</code></pre>

<p>Now, on the current repo with master as current branch, the command <code>git pull</code> will bring upstream changes from <code>br1</code> into <code>origin/br1</code>. Then a <code>git pull</code> on downstream repo will pull from <code>origin/br1</code>. </p>

<p>The normal <code>git push</code> command also works as usual on the current repo and the downstream repo. </p>

<p>Though this is not exactly merging into the non-current branch <code>br1</code>. But it works well for the purpose. </p>
","4","362754","",""
"46644278","1668622","2017-10-09 10:28:45","10","1327","<git><git-submodules><git-pull><git-checkout><git-config>","Todays strategy to keep git submodule checkouts in sync with commit-IDs?","<p>A lot of questions about automatically update submodules have been asked on 
StackOverflow including:</p>

<ul>
<li><a href=""https://stackoverflow.com/questions/4611512"">Is there a way to make git pull automatically update submodules?</a></li>
<li><a href=""https://stackoverflow.com/questions/1030169"">Easy way to pull latest of all git submodules</a></li>
<li><a href=""https://stackoverflow.com/questions/22328053"">Why doesn't <code>git checkout</code> automatically do <code>git submodule update --recursive</code>?</a></li>
</ul>

<p>But it looks to me as for git submodules there is no single approach yet which works like <code>svn up</code> regarding svn-externals.</p>

<p>So since git is changing every day I dare to ask again: </p>

<p><strong>Is there a (convenient) way to <em>init</em> and <em>automatically update</em> submodule checkouts (i.e. keep in sync with their corresponding submodule commit IDs) for <code>checkout</code> <em>and</em> <code>pull</code> (i.e. <code>merge</code> and <code>rebase</code>)?</strong></p>

<p>Currently I have two approaches for this:</p>

<p><strong>#1: create a <code>post-checkout</code>, <code>post-merge</code> and <code>post-rewrite</code> hook with the following content</strong></p>

<pre><code>#!/bin/sh
git submodule update --init --recursive
</code></pre>

<p>as you can already see this approach has several disadvantages:</p>

<ul>
<li>it's <strong>complicated</strong> and probably needs a script to make it working reliably</li>
<li>does not work well if you <strong>use these git-hooks already</strong></li>
<li>the commit hooks are only active <strong>on this clone</strong> (has to be re-done by
everyone working on this project on every single clone)</li>
<li>setup is <strong>non-standard</strong> and will confuse others</li>
</ul>

<p><strong>#2: configure aliases for <code>pull</code> and <code>checkout</code></strong></p>

<pre><code>git config --global alias.up 'pull --recurse-submodules'
git config --global alias.co 'checkout --recurse-submodules'
</code></pre>

<p>But this isn't nice neither:</p>

<ul>
<li>it won't <code>--init</code> the submodules (can be solved by running <code>pull</code>/<code>checkout</code> and <code>submodule update</code> separately instead</li>
<li>it's <strong>non-standard</strong> and won't work with scripts and snippets</li>
<li>it's <strong>easy to forget to use</strong> <code>up</code>/<code>co</code> instead of <code>pull</code>/<code>checkout</code></li>
<li>it works <strong>only on the local</strong> machine/user</li>
</ul>

<p>This approach would be a bit more like I want it to be if you could do something
like</p>

<pre><code>git config --global pull.recurseSubmodules true
git config --global pull.initSubmodules true
git config --global checkout.recurseSubmodules true
git config --global checkout.initSubmodules true
</code></pre>

<p>.. but you can't, do you?</p>
","0","1668622","0","0"
"28401525","457237","2015-02-09 01:31:30","0","46","<git><git-pull>","git pull complains about overwrite even after removing those files on remote repo","<p>My friend accidentally added some obj files on to our remote repo. Now, on my machine, when I tried to do <code>git pull</code>, it complained that these <code>.o</code> files would overwrite mine locally. As those are unnecessary files, I did <code>git rm --cached</code> on every file that <code>git pull</code> complained on. </p>

<p>Even after this, if I do <code>git pull</code>, I am getting the same overwrite errors. My doubt is, I've deleted the unwanted the files from the remote repo itself. Then why is git still complaining about them?</p>
","0","457237","",""
"28440183","3449718","2015-02-10 19:28:12","0","1838","<git><git-pull>","getting latest changes and updates from git server","<p>I had created my own Branch named as vishal_branch from master branch.
I had done some changes before and committed.
After me many other's also did changes and committed.
This will update the server with new changes.
Now again I am working in my local Branch (vishal_branch).</p>

<p>How can I get the lasted updates of server in my branch.</p>
","5","3449718","",""
"65542650","3008394","2021-01-02 18:30:12","0","39","<git><version-control><git-pull>","Way to make sure git pull always overwrites one specifc local file","<p>In repository I have a set of file. One of them gets modified by running some operation.
How can I configure the git to make sure that whenever someone does a pull the one file should get overwritten by the version currently in repo.</p>
<p>i.e.
Person A makes some change - file &quot;spec&quot; is modified.<br />
Person A pushes everything to origin.</p>
<p>Person B was also making some changes now he needs to accept the changes.<br />
Person B does pull.<br />
For person B his current copy of file &quot;spec&quot; should get overwritten (without merge attempt).<br />
Now B would do somethings that will modify file &quot;spec&quot; and the push everything to origin.</p>
<p>File &quot;spec&quot; should never get merged. (Though modified file needs to be pushed to origin).
I need this spec file to be in the same repo.</p>
","3","3008394","",""
"65543174","14928572","2021-01-02 19:25:53","0","787","<git><github><repository><git-branch><git-pull>","git err :: Can't create remote/branch","<p>I have problem to push to my github.
I've uploaded other projects on github.
but suddenly, problem appears.</p>
<p>In terminal, I run following:</p>
<pre><code>1. git clone https://github.com/(username)/(reponame).git  
2. create remote to my github repogisry address.
3. git init  
4. git add .
5. git commit -m &quot;message&quot;
6. git push &lt;repo&gt; &lt;branch&gt;
</code></pre>
<p>but there's this message</p>
<pre><code>&quot;Cant's push refs to remote, Try running 'pull' to integrate your changes.
</code></pre>
<p>so I pull -&gt;</p>
<pre><code>git pull &lt;remote name&gt; &lt;branch&gt;
</code></pre>
<p>but there's other error :</p>
<pre><code>fatal: couldn't find remote ref master
</code></pre>
<p>I checked out my folder.
In .git/refs there's no 'remotes' folder which has remote, branch.
but in VSCODE (when I run push to) there's  in popup I/'ve created.<br />
To solve this error, deleted remote, create again, git init again, restart vscode,
but the error isn't fixed.</p>
<p>To test the other, I create other project, different github repo.
this project works.(in this project's folder the remotes folder is in refs)</p>
<p>but the project problems appeared before still has err.</p>
<p>how to solve this problem? Please help..</p>
","6","14928572","",""
"28810935","1701590","2015-03-02 13:26:22","1","39","<git><workflow><branching-and-merging><git-pull>","Correct git workflow, when should I pull?","<p>I have a git workflow, but I am finding that I can't work on feature1 and feature2 at the same time, as they are in different branches. (There will be 2 developers).</p>

<p>My idea is each time I <strong>'git push origin feature-x'</strong> I should <strong>pull</strong> the code back into my master, and then create a new branch. I can then work with what I have already done and build upon that. Otherwise I lose all my work that I have just done, and have to remember what I did. Also other developers are not pulling the newest code they cant work with what I have just added. (Like a new button!)</p>

<p>Once per week we test the testing area, and then push to live.
Then I pull from LIVE with all my changes. is this right?
When should I pull?</p>

<p><img src=""https://i.stack.imgur.com/no1rN.png"" alt=""enter image description here""></p>
","0","1701590","",""
"28845690","2414957","2015-03-04 02:28:56","0","1406","<git><bitbucket><git-branch><git-push><git-pull>","git push origin master error: The following untracked working tree files would be overwritten by merge: .DS_Store","<p>It's been a while that I am facing the following problem. What's the fix to it? I am just a newbie in git so please be instructive. I have already tried to follow the commands shown in the error but wasn't successful.</p>

<pre><code>Monas-MacBook-Pro:demo mona$ git branch
* master
Monas-MacBook-Pro:demo mona$ git add .
Monas-MacBook-Pro:demo mona$ git commit -m ""logo fixed""
[master 62bedf3] logo fixed
 1 file changed, 8 insertions(+), 7 deletions(-)
Monas-MacBook-Pro:demo mona$ ls
1a
Monas-MacBook-Pro:demo mona$ git push
fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master

Monas-MacBook-Pro:demo mona$ git push origin master
To https://lamiastella@bitbucket.org/lamiastella/vldb-demo.git
 ! [rejected]        master -&gt; master (non-fast-forward)
error: failed to push some refs to 'https://lamiastella@bitbucket.org/lamiastella/vldb-demo.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Integrate the remote changes (e.g.
hint: 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
Monas-MacBook-Pro:demo mona$ git pull origin master
From https://bitbucket.org/lamiastella/vldb-demo
 * branch            master     -&gt; FETCH_HEAD
error: The following untracked working tree files would be overwritten by merge:
    .DS_Store
Please move or remove them before you can merge.
Aborting
Monas-MacBook-Pro:demo mona$ git pull
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details

    git pull &lt;remote&gt; &lt;branch&gt;

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=origin/&lt;branch&gt; master

Monas-MacBook-Pro:demo mona$ 
</code></pre>
","1","2414957","",""
"65925763","8331923","2021-01-27 19:08:05","0","712","<git><git-pull>","git pull from a listed branch (master) is not working but works with a brach that is not listed (main)","<pre><code>&gt; (base)user@files % git branch
* master

&gt; (base) user@files % git pull origin master
fatal: couldn't find remote ref master

&gt; (base) user@files % git pull origin main
From https://github.com/name/teamstuff
 * branch            main       -&gt; FETCH_HEAD
Already up to date.
</code></pre>
","3","8331923","",""
"65978500","14945503","2021-01-31 11:21:30","0","592","<windows><git><powershell><cmd><git-pull>","How to do git pull for all sub-directories in a folder?(In Windows )","<p>I have a git directory, I want to do <code>git pull</code> for all sub directories, sub sub directory and so on, how to do that in windows command prompt or powershell ?</p>
<p><strong>NOTE</strong>: I know about similar questions, but none of them work for me as some are for linux and rest only do git pull for <code>.git</code> folders inside master folder(i.e. <code>depth = 1</code>), I want depth = ∞</p>
","1","14945503","",""
"47473659","9003618","2017-11-24 12:48:17","0","545","<git><github><gitlab><git-pull>","Override local files with Git Pull | Discard all local files and directories and git the complete latest code from the repo","<p>I want get complete latest code from the git server and need to override my local machine changes. Meaning I want to remove all my local untrack files and directories and than get the latest code from the remote repository. Is it possible to do with git? </p>
","1","9003618","",""
"29996827","3852459","2015-05-02 00:04:39","1","4349","<git><git-rebase><git-pull>","How do I disable rebasing when I call git pull?","<p>Each time I have a commit diverged with the <code>origin/master</code> and I call git pull, it tries to rebase, which I have lots of trouble with. But if I call <code>git fetch</code> and then <code>git merge origin/master</code> everything is ok. How can I set the default pull behaviour to merge without rebasing?</p>
","4","3852459","0","0"
"12399758","383759","2012-09-13 05:11:08","5","103","<git><version-control><git-push><git-pull><git-remote>","How do git remotes work?","<p>If I have a main project that is version controlled.</p>

<p>I then add a remote for a third party plugin</p>

<p><code>git remote add myplugin &lt;url&gt;</code></p>

<p>I can then do <code>git pull myplugin master</code></p>

<p>and it just pulls in the changes from that remote.</p>

<p>Now lets say my project is setup as:</p>

<pre><code>/
/index.php
/whatever
</code></pre>

<p>and the remote is setup as </p>

<pre><code>/
/whatever.php
</code></pre>

<p>when I pull in the remote I end up with</p>

<pre><code>/index.php
/whatever
/myplugin
/myplugin/whatever.php
</code></pre>

<p>this is good.</p>

<p>What I am wondering is,
If I make changes to myplugin,</p>

<p>If I issue <code>git push myplugin master</code> what is pushed?</p>

<p>Is it going to only push changes in myplugin? 
or does a remote act as a second repository and will commit the entire repository?</p>
","0","383759","0","0"
"13399990","337962","2012-11-15 14:51:02","12","16767","<java><git><git-pull><jgit>","Usage of 'pull' command in Jgit","<p>I'm a new user of git and am using <a href=""http://wiki.eclipse.org/JGit"" rel=""noreferrer"">JGit</a> to interact with a remote git repository. In JGit, I used <code>CloneCommand</code> to initially to clone a repo, and it worked without a issue. However, when I try to use <code>PullCommand</code>, which is the equivalent of SVN update AFAIK, the local repo contents are not updated. </p>

<p>This is the code that I used:</p>

<pre><code>private String localPath;
private Repository localRepo;
private Git git;

localPath = ""/home/test/git_repo_test"";
remotePath = ""https://github.com/test/repo_1.git"";

try {
    localRepo = new FileRepository(localPath + ""/.git"");
} catch (IOException e) {
    e.printStackTrace();  
}
git = new Git(localRepo);

PullCommand pullCmd = git.pull();
try {
    pullCmd.call();
} catch (GitAPIException e) {
    e.printStackTrace();  
}
</code></pre>

<p>This doesn't update the local repository for new files which I have pushed to the remote repository using the command line. However, if I delete the local repository and take a clone again, all the changes are reflected. </p>

<p>Please let me know what is the correct approach of using <code>PullCommand</code> in JGit.</p>

<p>EDIT:</p>

<p>The structure of the remote repository:</p>

<pre><code>root ____ file_1
  |______ directory_1
              |__________ file_2 
              |__________ file_3
</code></pre>

<p>directory_1 and the two files are pushed from the commandline after the initial cloning and I tried this code so that it will get reflected in the local repository, which is not happening.</p>

<p>The code used to clone the repository:</p>

<pre><code>File file = new File(localPath);
CloneCommand cloneCmd = git.cloneRepository();
try {
    cloneCmd.setURI(remotePath)
            .setDirectory(file)
            .call();
} catch (GitAPIException e) {
    e.printStackTrace();  
}
</code></pre>

<p>Here, <code>git</code>, <code>localPath</code> and <code>remotePath</code> are the same variable as above.</p>
","1","337962","",""
"16409424","2356237","2013-05-07 00:36:00","11","13434","<git><github><git-pull><recover>","git deleted everything, how to recover files and folders","<p>It was the first time that I was using git, I wanted to import an existing project into github and everything was deleted. After search for an answer I think git deleted the files after git pull, I'm trying to recover the files and folders but I can't find how to do it. </p>

<p>I did exactly the next:</p>

<pre><code>jesus@jesus-K52F:~/Escritorio/Django/Ujixy$ git init
Initialized empty Git repository in /home/jesus/Escritorio/Django/Ujixy/.git/
jesus@jesus-K52F:~/Escritorio/Django/Ujixy$ git add .
jesus@jesus-K52F:~/Escritorio/Django/Ujixy$ git status
# On branch master
#
# Initial commit
#
# Changes to be committed:
#   (use ""git rm --cached &lt;file&gt;..."" to unstage)
#
#   new file:   Catalogoapp/__init__.py
#   new file:   Catalogoapp/models.py
#   new file:   Catalogoapp/tests.py
#   new file:   Catalogoapp/views.py
#   new file:   Messageapp/__init__.py
#   new file:   Messageapp/models.py
#   new file:   Messageapp/tests.py
#   new file:   Messageapp/views.py
#   new file:   Ujixyapp/__init__.py
[...]

jesus@jesus-K52F:~/Escritorio/Django/Ujixy$ git push origin master
fatal: 'origin' does not appear to be a git repository
fatal: The remote end hung up unexpectedly
jesus@jesus-K52F:~/Escritorio/Django/Ujixy$ git add *
jesus@jesus-K52F:~/Escritorio/Django/Ujixy$ git status
# On branch master
#
# Initial commit
#
# Changes to be committed:
#   (use ""git rm --cached &lt;file&gt;..."" to unstage)
#
#   new file:   Catalogoapp/__init__.py
#   new file:   Catalogoapp/models.py
#   new file:   Catalogoapp/tests.py
#   new file:   Catalogoapp/views.py
#   new file:   Messageapp/__init__.py
#   new file:   Messageapp/models.py
#   new file:   Messageapp/tests.py
#   new file:   Messageapp/views.py
#   new file:   Ujixyapp/__init__.py
[...]
jesus@jesus-K52F:~/Escritorio/Django/Ujixy$ git remote add origin https://github.com/PEREYO/Ujixy.git
jesus@jesus-K52F:~/Escritorio/Django/Ujixy$ git pull origin master
remote: Counting objects: 3, done.
remote: Total 3 (delta 0), reused 0 (delta 0)
Unpacking objects: 100% (3/3), done.
From https://github.com/PEREYO/Ujixy
* branch            master     -&gt; FETCH_HEAD
jesus@jesus-K52F:~/Escritorio/Django/Ujixy$ git push origin master
Username for 'https://github.com': PEREYO
Password for 'https://PEREYO@github.com': 
Everything up-to-date
jesus@jesus-K52F:~/Escritorio/Django/Ujixy$ git init
Reinitialized existing Git repository in /home/jesus/Escritorio/Django/Ujixy/.git/
jesus@jesus-K52F:~/Escritorio/Django/Ujixy$ git add *
jesus@jesus-K52F:~/Escritorio/Django/Ujixy$ git status
# On branch master
nothing to commit (working directory clean)
</code></pre>

<p>Now I'm trying to fix it doing the next:</p>

<pre><code>jesus@jesus-K52F:~/Escritorio/Ujixy$ git fsck --lost-found
Checking object directories: 100% (256/256), done.
dangling tree bfe11a30d57a0233d3b0c840a3b66f6421987304
jesus@jesus-K52F:~/Escritorio/Ujixy$ git status
# On branch master
nothing to commit (working directory clean)
jesus@jesus-K52F:~/Escritorio/Ujixy$ git reflog
61daa69 HEAD@{0}: initial pull

jesus@jesus-K52F:~/Escritorio/Ujixy$ git cat-file -p bfe11a30d57a0233d3b0c840a3b66f6421987304
040000 tree 9196501a346cfe4347f46d82936745b78b0235b9    Catalogoapp
040000 tree 49561b4bd6adb8fe8bb1915d6bef09cd49195a97    Messageapp
040000 tree 0fb58bf9b56397443fb235e2a38045d6df7cd473    Ujixyapp
100644 blob e69de29bb2d1d6434b8b29ae775ad8c2e48c5391    __init__.py
100644 blob dfe3388ddf2d5ba34559eb3ec56199d83cdce8bd    __init__.pyc
100644 blob bcdd55e27be9447bf6b224b8ba0cbc6802509862    manage.py
100644 blob 34c5978d8026844038d530b491828398bc3ea6c7    settings.py
100644 blob 167a6b1965426ec30c25535fe27338b61b2ae0cf    settings.pyc
100644 blob 4a7215cb90ae95d64ca30fde1c1277e0155eb4ed    urls.py
100644 blob 6eedcddafbc8854f70f44181edac8e63781cfb09    urls.pyc
</code></pre>

<p>But, How can I recover the directories with all the files and folder? Now I'm working in a copy of .git folder to avoid another problems.</p>
","0","2356237","0","0"
"33019089","5423711","2015-10-08 14:46:22","0","397","<git><git-merge><git-push><git-pull><smartgit>","not able to push changes in smartgit.it shows merging in project folder","<p>I am using SmartGit and when I take a pull(merge and pull), it shows 'merging' on my project folder in repositories window and it is not allowing me to push my change.</p>
","1","5423711","",""
"16454098","2360913","2013-05-09 03:58:25","0","554","<git><git-pull><git-stash>","Git stash and git pull in vagrant","<p>Having problem in using git pull and git stash it give me following error.</p>

<p><strong>fatal: cannot unlink '.vagrant/machines/default/virtualbox/id': Permission denied</strong></p>

<p>Inside vagrant and if I use git pull then it will say that there some changes that need to be
pushed and thing is that I don't want these changes anymore.</p>

<p>So, if anyone can help in this.
Thanks</p>
","1","2360913","",""
"58653405","","2019-11-01 02:30:25","1","212","<git><git-submodules><git-pull>","Will git pull include new submodules?","<p>When I clone a repository with the following command, it automatically includes submodules.</p>

<pre><code>git clone --recursive https://github.com/xxxxxxxx
</code></pre>

<p>I have a question. If you later update the repository with <code>git pull</code>, will it include the newly added submodules? (if there is a newly added submodule)</p>
","0","","",""
"40028804","4632019","2016-10-13 18:53:14","9","1400","<git><git-pull><git-fetch>","How git-pull corporate with git-fetch (was: what does git-pull option `-p` mean)?","<p>Sometimes I see at articles command: <code>git pull -p</code><br>
But I do not found info about that in <a href=""https://git-scm.com/docs/git-pull"" rel=""noreferrer"">official documentation</a></p>

<p>What does that option mean?</p>

<p><strong>UPD</strong></p>

<p>As noted by @torek the <code>-p</code> option is passed to <code>git fetch</code>. And <code>-p</code> here means:</p>

<blockquote>
  <p>-p<br>
  --prune<br>
  Before fetching, remove any remote-tracking references that no longer exist on the remote.</p>
</blockquote>

<p>But I do not understand how <code>git-pull</code> <s>corporate</s> cooperate with <code>git-fetch</code>?<br>
How I can figure out how and which <code>git</code> options fall through one command to another?</p>
","3","4632019","",""
"58942127","10894456","2019-11-19 20:12:55","2","139","<git><intellij-idea><git-branch><git-pull><git-checkout>","Why ""git pull"" is updated files when implemented immediately after checking out a remote branch?","<p>I use IntellijIDEA,</p>

<ol>
<li>At the branches view( right bottom corner) I select  a brunch from remote branches which I have never checked out before ( I didn't even knew it's name before read at my Jira task )</li>
<li>Clicked on it</li>
<li>Checkout As...</li>
<li>Left the original name ( the same as remote name)</li>
<li>OK</li>
</ol>

<p>I I wish I got an up to date branch ( isn't it reasonably?) but when I immediately select Git -> pull, I got <strong>588 files updated in 627 commits</strong> at this branch?</p>

<p>Please explain what is the logic? Isn't it reasonably to expect to get an up to date branch when checkout and expect pull will say ""everything is up to date"" ? </p>
","0","10894456","",""
"30855536","1567269","2015-06-15 21:48:26","3","1727","<git><gitlab><git-pull><pull>","git pull returns, fatal: protocol error: bad line length character: No s","<p>When I run git push or pull, I get the error </p>

<pre><code>fatal: protocol error: bad line length character: No s
</code></pre>

<p>My environment is:</p>

<p>Windows 7 pro</p>

<p>Visual Studio 2012</p>

<p>git bash</p>

<p>This is a repo that i've used several times before (although not for about a month).  I also am the owner, and it's a private repo.</p>

<p>I've found this question asked <a href=""https://stackoverflow.com/questions/3224340/git-push-returns-fatal-protocol-error-bad-line-length-character"">here</a></p>

<p>But that is not the same problem.  I didn't ever have any key problems, and I've had this repo for almost a year.</p>

<p>I also found an answer <a href=""https://gitlab.com/gitlab-org/gitlab-development-kit/issues/35"" rel=""nofollow noreferrer"">here</a>, but the repo is definitely not mispelled.  I've found that answer several places, and I can guarantee you that it's not mispelled in any way.</p>

<p>Another answer I've found is <a href=""https://forum.gitlab.com/t/fatal-protocol-error-bad-line-length-character-no-s/347"" rel=""nofollow noreferrer"">this</a>, and they say that it's an access problem.  Once again, I've had this repo around a year, and I'm also the admin over gitlab, so I'd know if something had changed.  I'm still the owner of the repo, but just to make sure, I moved myself to developer, then back to owner/manager, and nothing seemed to work.  </p>

<p>As some extra info, I've checked all of the server logs, and there appear to be no errors when this is happening, so I'm guessing it's a local problem.</p>

<p>Any ideas?</p>

<p><strong>EDIT</strong></p>

<p>This question is definitely not a duplicate of <a href=""https://stackoverflow.com/questions/8170436/git-remote-error-fatal-protocol-error-bad-line-length-character-unab"">this</a></p>

<p>The reason is that even though the error messages are similar, and the answer could provide more information on how to fix the problem, it doesn't actually solve the problem. </p>

<p>When I run </p>

<pre><code>ssh gituser@gitlab.mycompany.com git-receive-pack namespace/project.git
</code></pre>

<p>The output received is </p>

<pre><code>008818ad46342298ddf8w87er7sdf769we7r76sd refs/heads/master report-status delete-refs side-band-64k quiet ofs-delta agent=git/2.0.5

00514daa7afb0982347928374sdf987asfd refs/tags/archive/branchName

004865987sdf987asdf98a7sf98as7f97 refs/tags/release/v1.2.0.2
0048345f9s9df87asd9f8as79df879s8d refs/tags/release/v1.2.0.4
0048c7fd22015s9df87as9df89sadf87d refs/tags/release/v1.2.0.6
0000
</code></pre>

<p>after the 0000 at the end, it's just stalled, blinking underscore.</p>

<p>According to the possible duplicate link, that command should output an error message that starts with ""No s"", but it doesn't.  </p>
","6","1567269","",""
"21174503","","2014-01-16 22:46:53","1","955","<git><git-pull><fast-forward>","Output of git pull command","<p>I used <code>git pull git@github.com:myaccount/random.git</code> for updating my local git directory.
I found following result on shell</p>

<pre><code> Fast forward
 .htaccess                         |    2 +-
 folder_name/file1.php                    |   74 ++--------------
 folder_name/file1.php                    |    2 +-
 folder_name/file2.php                    |    2 +-
 folder_name/css/style.css                 |    1 +
 folder_name/file3.html                     |  167 -------------------------------------
 folder_name/file4.php                      |   78 ++---------------
 folder_name/file5.php                   |   32 ++------
 folder_name/file6.php                     |  108 ------------------------
 folder_name/file7.php              |   77 -----------------
 folder_name/file8.php                     |    4 +-
 folder_name/file9.php                      |    5 +-
 folder_name/file10.php                      |   31 ++-----
 folder_name/file11.php                   |   16 ----
 folder_name/file12.php                     |   64 +++++---------
 folder_name/pics/items/file13.png |  Bin 0 -&gt; 91578 bytes
 folder_name/file14.html                     |   44 ----------
 folder_name/file15.php                      |  102 ++++-------------------
 folder_name/file16.php                      |  112 +++----------------------
 19 files changed, 94 insertions(+), 827 deletions(-)
 create mode 100644 folder_name/.htaccess
 delete mode 100644 folder_name/file3.html
 delete mode 100644 folder_name/6.php
 delete mode 100644 folder_name/7.php
 delete mode 100644 folder_name/11.php
 create mode 100644 folder_name/pics/items/file13.png
 delete mode 100644 folder_name/file14.html
</code></pre>

<p>I tried to understand following output and understood upto a limit. I got what is delelte mode or create mode. But what is number after <code>|</code> sign and what does <code>+</code> and <code>-</code> are representing. and what is <code>Fast Forward</code> in start of the line. I found more things like if a file is deleted, its output after <code>|</code> is consist of only number and <code>-</code>s. So what does it actually mean?</p>
","1","","",""
"13313777","937332","2012-11-09 18:21:29","0","305","<xcode><git><git-pull>","workflow confusion after XCode git pull","<p>I've used other DVCS systems before but I'm new to git. So I think I have wrong assumptions about how to use it the way I intend.</p>

<p>I have a RepoA which has a master and develop branch where I do the majority of my work. A while back, I cloned RepoB from RepoA to start working on ""BigFeatureA"" and also did this in the develop branch. I'm not finished with BigFeatureA but want to bring over all the changes that have been made in RepoA since I did the clone so that I continue to work on BigFeatureA using the most up to date code. (At the moment in RepoA, the develop and master branches are the same but of course, sometimes they're not.) Using XCode working in RepoB, I did a Pull from RepoA develop branch. I had a conflict, resolved it, Pull button enabled and then did the pull. </p>

<p>Now in RepoB, all the changes brought over are ""uncommitted changes"" and the files are showing ""M's"" or modified. So none of the commit messages or anything came over from RepoA, just the source changes. This isn't what I expected. Is this just XCode's version of git workflow or is this just how git merge works?</p>

<p>My final workflow was to push RepoB to RepoA when BigFeatureA was done. Is there a difference between doing that and going the other direction, ie: be in RepoA and pulling from RepoB?</p>

<p>(Further reading suggests that I probably should have created a ""BigFeatureA"" branch in RepoB and then done a pull from RepoA on the develop branch in there and then a merge from the BigFeatureA branch into the develop branch. Would there have been a difference doing a merge between branches vs repo's?)</p>
","2","937332","",""
"31400298","1003123","2015-07-14 07:27:30","8","520","<git><git-pull>","Replace git pull with git up","<p>I use <a href=""https://github.com/aanand/git-up"" rel=""nofollow noreferrer""><code>git up</code></a> in order to avoid <a href=""https://stackoverflow.com/questions/26239379/what-is-a-merge-bubble"">merge bubbles</a>, but sometimes I accidentally issue a <code>git pull</code>.</p>

<p>What is the best way to systematically replace a <code>git pull</code> with a <code>git up</code>?</p>
","10","1003123","0","0"
"13888103","614443","2012-12-15 00:23:44","2","181","<git><git-branch><bitbucket><git-merge><git-pull>","git merge pull branches confusion","<p>I have 2 branches (master and dev). Another worker has pushed a new branch called stage into the repository so that stage is now 1 commit ahead of master. I am trying to pull down stage so that I can merge it into master (and thus merge into dev), but I am having issues pulling down stage. How do I pull down a clean version of stage?</p>
","0","614443","0","0"
"21348306","614990","2014-01-25 08:18:31","0","48","<git><git-push><git-pull>","Pushing commits to separate folder inside git","<p>I have a git repository which consists of separate projects.Inside the repository I have individual projects like SAP, REST, BANK, Help,Angular.</p>

<p>Whenever I need to pull the code of individual project, i am getting code from the entire repository and also it makes sense from the behavior of git. Is there any alternate to fetch the individual project code and push it again to the repository?</p>
","0","614990","",""
"2602546","277","2010-04-08 18:45:02","119","139531","<git><git-pull><git-merge><git-fetch>","How Do I 'git fetch' and 'git merge' from a Remote Tracking Branch (like 'git pull')","<p>I have set up some remote tracking branches in git, but I never seem to be able to merge them into the local branch once I have updated them with 'git fetch'.</p>

<p>For example, suppose I have remote branch called 'an-other-branch'. I set that up locally as a tracking branch using</p>

<pre><code>git branch --track an-other-branch origin/an-other-branch
</code></pre>

<p>So far, so good. But if that branch gets updated (usually by me moving machine and commiting from that machine), and I want to update it on the original machine, I'm running into trouble with fetch/merge:</p>

<pre><code>git fetch origin an-other-branch
git merge origin/an-other-branch
</code></pre>

<p>Whenever I do this, I get an 'Already up-to-date' message and nothing merges.</p>

<p>However, a</p>

<pre><code>git pull origin an-other-branch
</code></pre>

<p>always updates it like you would expect.</p>

<p>Also, running git diff</p>

<pre><code>git diff origin/an-other-branch
</code></pre>

<p>shows that there are differences, so I think I have my syntax wrong.</p>

<p>What am I doing wrong?</p>

<p><strong>EDIT [2010-04-09]:</strong> I have checked a couple of times, and I'm definitely not on a different branch. Should my 'git fetch' followed by a 'git merge' (as shown above) do the exact same thing as a git pull? I will get some workflow showing the results of a git status etc.</p>
","0","277","0","0"
"31458213","5016012","2015-07-16 15:16:24","4","2569","<git><cygwin><git-push><git-pull>","Can't do git push/pull on Cygwin: error while loading shared libraries","<p>So I installed git on Cygwin and everything is great, <em>except</em> anything to do with remotes. When I try either to push or pull anything, I get the following error:</p>

<p><code>
/usr/libexec/git-core/git-remote-https.exe: error while loading shared libraries: ?: cannot open shared object file: No such file or directory
</code></p>

<p>I also have git bash installed, but since that installation doesn't connect with Cygwin, I had to use apt-cyg to get it to work in Cygwin. I can push/pull in git bash or in the GitHub GUI no problem (they don't clash or anything), but I'd really like to get the Cygwin version working, since I do other stuff there and it is annoying to change terminals all the time!</p>
","2","5016012","0","0"
"13950854","1915480","2012-12-19 10:59:08","3","262","<git><git-pull>","git pull doesn't ""download"" changed files from origin","<p>I am new to git.</p>

<p>I have one repository <em>[CR]</em> on Github. This repository, <em>CR</em>, is accessed by two different git directories on my local machine - <em>g01</em> and <em>g02</em>. Both have <em>CR</em> as origin. In <em>g02</em> I modified two files (<em>f01</em> and <em>f02</em>), added and committed them and did a git push. The repository <em>CR</em> on Github was successfully updated.</p>

<p>Meanwhile, on <em>g01</em> these two files (<em>f01</em> and <em>f02</em>) were modified added and committed.
When trying a git pull on <em>g01</em> I expect that the two modified files (<em>f01</em> and <em>f02</em>) from <em>CR</em> will be merged somehow. Instead I get the message: <code>Already up-to-date</code></p>

<p>The files <em>f01</em> and <em>f02</em> are different on <em>g01</em> and <em>g02</em>. <em>g02</em> accords with <em>CR</em> but <em>g01</em> doesn't.</p>

<p>What could be the reason for this behaviour?</p>
","5","1915480","",""
"13973599","429400","2012-12-20 13:48:14","2","95","<git><git-pull>","git pull: update repo without changing the contents of a specific directory","<p>I want to update my local system repo with the remote one, but I do not want to touch the contents of one specific directory myDir.
Note that this directory was updated later in the master branch but I want to keep my old version of it.</p>

<p>What is the best way to do so?</p>

<p>Thanks,
Li </p>
","3","429400","",""
"28718230","1455384","2015-02-25 11:46:32","2","560","<git><github><git-pull>","git reset HEAD@{1} not removing files that were added?","<p>does <code>git reset HEAD@{1}</code> not remove files that were added from <code>git pull</code>?</p>

<p>What I did. I used <code>git pull</code>. Got newest source code. Then found out that code was not good and wanted to restore my code to previous state, so I did <code>git reset HEAD@{1}</code>. It restored back.</p>

<p>But now if I try to do <code>git pull</code> again I will get such error:</p>

<p><code>error: Untracked working tree file 'addons/auth_crypt/i18n/fr_CA.po' would be overwritten by merge.  Aborting</code></p>

<p>If I rename that file, it throws another same error for another file, that I guess was added on pull before doing git reset. So do I need to remove/rename such files manually and only then I will be able to do <code>git pull</code>. Or is there easier fix (there could be hundreds of such files)?</p>

<p>I also tried <code>git pull --rebase</code>, but get the same error.</p>
","0","1455384","",""
"10796776","519912","2012-05-29 09:53:27","2","3397","<git><githooks><git-pull><git-post-receive>","git pull in hooks/post-receive failed","<p>On the server, /home/git/xxx/hooks/post-receive:</p>

<pre><code>#!/bin/bash

cd /var/www/xxx
git pull
</code></pre>

<p>On the server, /var/www/xxx was created like this:</p>

<pre><code>cd /var/www
git clone /home/git/repositories/xxx.git
</code></pre>

<p>When I run ""git push"" on the client, got this message:</p>

<pre><code>remote: fatal: Not a git repository: '.'
</code></pre>

<p>Any ideas?</p>
","2","519912","",""
"65868438","14002066","2021-01-24 08:21:03","-1","1044","<git><git-commit><git-push><git-pull>","How to un-commit all un-pushed git commits without losing the changes","<p>Is there any way to undo all un-pushed commits (I made 3 commits to the wrong branch without pushing) without losing the changes?</p>
","4","14002066","",""
"47363380","8961271","2017-11-18 06:49:59","0","127","<ios><github><version-control><xcode9><git-pull>","Xcode9 unable to enter Git username while git pull","<p>I am working on an app where I am pulling my code from the remote git repository While doing this Xcode not allowing me to enter my GitHub username. Its showing 'git' as prefill disable username. Please check attached screenshot link for same.</p>

<p><a href=""https://i.stack.imgur.com/cwljL.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/cwljL.png"" alt=""enter image description here""></a></p>
","4","8961271","",""
"66190157","11069078","2021-02-13 21:35:46","1","1120","<git><git-pull>","How to pull git branch without undoing all my changes?","<p>I have a git branch I'm working from and I have screwed it up. I have a bunch of local changes I made and I'm trying to put these changes and this commit into a PR but I can't do that without updating from the branch because they somehow got out of sync. So whenever I run <code>git status</code> I get</p>
<pre><code>Your branch and 'origin/myChanges' have diverged,
and have 1 and 1 different commits each, respectively.
  (use &quot;git pull&quot; to merge the remote branch into yours)
</code></pre>
<p>And everything I've tried with the git pull just blows all of my changes away, but I need to update from the branch before I'm allowed to send the commit to the PR. I've also tried running a force push to have the branch be the same as mine (it's just a small branch I made for this feature so w little risk). I don't know how to git pull in such a way where my changes are not destroyed and blown away, I want to keep everything that is local and I don't care about anything on the branch.</p>
","1","11069078","",""
"11744081","234102","2012-07-31 15:50:19","159","83393","<git><git-pull>","Why is git prompting me for a post-pull merge commit message?","<p>Recently, following any <code>git pull</code>, git has started spawning my text editor, and asking for a merge commit message. A commit message is already pre-filled, and I just have to save and close the window to complete the pull.</p>

<p>In the past, it would do the merge silently, with a standard commit message (along the lines of <code>Merge branch 'dev' of remote.com:/repo into dev</code>).</p>

<p>I recently updated git to version 1.7.11.3 (via homebrew), but can't think of anything else I might have done to change this behavior. Is this a setting, or is there otherwise some way of getting back to the way it was?</p>
","0","234102","0","0"
"11796580","423373","2012-08-03 13:20:36","334","191546","<git><pull><git-pull>","git pull error :error: remote ref is at but expected","<p><strong>Full message:</strong></p>

<pre><code>error: Ref refs/remotes/origin/user is at 3636498c2ea7735fdcedc9af5ab3c8689e6abe77 but expected a21359c6cc2097c85775cde6a40105f4bd7100ec
From github.com:{github project url}
 ! a21359c..6273ffc  user -&gt; origin/user  (unable to update local ref)
</code></pre>
","4","423373","0","0"
"47678336","2006674","2017-12-06 15:50:43","0","287","<git><version-control><git-pull><git-reset>","git pull forced with exceptions","<p>I want to do automatic(no manual intervention) <code>git pull</code> from git remote repository.</p>
<p><strong>But that some files are kept in local state</strong> and all others are same as in remote repository.</p>
<p>I have found <a href=""https://stackoverflow.com/questions/1125968/how-do-i-force-git-pull-to-overwrite-local-files"">How do I force &quot;git pull&quot; to overwrite local files?</a></p>
<p>The solution from that answer is:</p>
<blockquote>
<p>git fetch --all</p>
<p>git reset --hard origin/master</p>
</blockquote>
<p>But this is overwriting all files in the local directory to state from origin/master.</p>
<p>How can I do this, but with excluding some files?</p>
<p>More info:
I am making one deployment script (I know that fabric/git is not the best solution, but if I can do this than it is good enough for me.)</p>
","4","2006674","",""
"12010130","723096","2012-08-17 17:09:44","0","66","<git><git-merge><git-pull>","Pulling specific references in git repository","<p>I'm working on a specific project inside of the Linux TV kernel project, and need to know how to pull the references for it.  They're stored in a branch on the repository called ""experimental"".  Basically, what I've done so far is this:</p>

<pre><code>git clone git://github.com/torvalds/linux.git v4l-dvb 
cd v4l-dvb 
git remote add linuxtv git://linuxtv.org/media_tree.git 
git remote update 
git checkout -b media-master remotes/linuxtv/staging/for_v3.7
</code></pre>

<p>Ultimately, what I want to do is check out the commits from the staging/for_v3.7 branch (because that's the branch that's being actively developed on) and then merge the references from the experimental branch that apply to the drx-j drivers into it. The references are located at <a href=""http://git.linuxtv.org/mchehab/experimental.git/shortlog/refs/heads/drx-j"" rel=""nofollow"">http://git.linuxtv.org/mchehab/experimental.git/shortlog/refs/heads/drx-j</a> </p>

<p>So my question is, what is the command that I would use to pull all of the changes from that reference into my local repository?</p>

<p>Thanks, and have a great day:)
Patrick.</p>
","0","723096","0","0"
"66251562","964886","2021-02-17 23:42:25","-1","288","<git><github><git-push><git-pull>","How to accept the git push? Is git suitable to send full project on github? Shall i use other method, which? Ssh?","<p>Updated question ( i do not create a separate branch, use decault procedure, and do not use sudo ). It gives me two branches on git : main and master, but it shows only one branch on localmachine *master. How to merge master with the main on the github?</p>
<pre><code>$ sudo git init // i have change permissions for .git to writable, do not use sudo anymore
$ git add -all
$ git remote add origin &quot;https://github.com/gintares/jokes2&quot;
$ git commit -m &quot;first&quot;
$ git push -u origin master

$ git branch
* master
</code></pre>
<p>ORIGINAL QUESTION
i was creating a different branch
and was using git with sudo ( it is not recommended )</p>
<p>How to get the git repository pull requests approved?</p>
<p>I have created a new git repository, and new project on my computer.</p>
<pre><code>htdocs/jokes_any$ sudo git init

htdocs/jokes_any$ sudo git add --all
htdocs/jokes_any$ sudo git remote add origin &quot;https://github.com/gintares/jokes&quot;
htdocs/jokes_any$ git remote -v // And double check to make sure it know
htdocs/jokes_any$ sudo git checkout -b jokes

htdocs/jokes_any$ sudo git commit -m &quot;first&quot;

htdocs/jokes_any$ sudo git push -u origin jokes

htdocs/jokes_any$ sudo git remote -v
         
origin  https://github.com/gintares/jokes (fetch)
origin  https://github.com/gintares/jokes (push)
htdocs/jokes_any$ 
</code></pre>
<p>It is under this link <a href=""https://github.com/gintares/jokes"" rel=""nofollow noreferrer"">https://github.com/gintares/jokes</a></p>
<p>It looks like commit, versus files and folders. I am not able to find where i can accept the push?</p>
<p>I can see compare &amp; pull request button, it opens the new window with all pushed files. Nevertheless, these files are not under <a href=""https://github.com/gintares/jokes"" rel=""nofollow noreferrer"">https://github.com/gintares/jokes</a> , they are under <a href=""https://github.com/gintares/jokes/compare/jokes?expand=1"" rel=""nofollow noreferrer"">https://github.com/gintares/jokes/compare/jokes?expand=1</a></p>
<p>How to accept the push?</p>
<p>Shall i send the files to git over shell, and push changes later? I mean is git suitable to send full project on github?  Shall i use other method, which? Shall i use git ssh <a href=""https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh"" rel=""nofollow noreferrer"">https://docs.github.com/en/github/authenticating-to-github/connecting-to-github-with-ssh</a>?</p>
","5","964886","",""
"30187624","4882274","2015-05-12 10:04:32","2","12003","<eclipse><git><git-pull><git-checkout>","Checkout conflict with files git pull","<p>Yesterday I made a pull in Eclipse from my team repository and it worked perfectly. But today I have tried to pull and the following message appears:</p>

<pre><code>Checkout conflict with files: 

.....(Here is my project and the window that is affected)

org.eclipse.jgit.api.errors.ChechoutConflictException
</code></pre>

<p>One of my partners has made changes but not at the same time that me. How can I solve it?</p>
","0","4882274","",""
"30196000","2712050","2015-05-12 15:59:41","1","846","<git><git-pull><git-clone>","Pull the latest remote git branch incrementally without worrying about merges","<p>How do I do incremental downloading of just the changed files from remote repo without worrying about conflicts? I want any local changes to be discarded and overridden. Also, because the repo lives on Google Drive, it's important that no unchanged files are touched.</p>
","3","2712050","",""
"30208928","633961","2015-05-13 07:58:13","173","58816","<git><git-pull><git-stash>","Can ""git pull"" automatically stash and pop pending changes?","<p>I know how to solve this:</p>

<pre><code>user@host$ git pull
Updating 9386059..6e3ffde
error: Your local changes to the following files would be overwritten by merge:
    foo.bar
Please, commit your changes or stash them before you can merge.
Aborting
</code></pre>

<p>But isn't there a way to let <code>git pull</code> do the <code>stash</code> and <code>pop</code> dance for me?</p>

<p>If this command has a different name, it's ok.</p>

<p>Creating a shell alias for <code>git stash; git pull; git stash pop</code> is a solution, but I search for a better solution.</p>
","8","633961","0","0"
"66358295","14539510","2021-02-24 20:21:41","0","1284","<git><github><ubuntu-18.04><github-actions><git-pull>","Can't git pull from remote repo but can git clone in GitHub Actions","<p>So I'm trying to pull a branch from one of my private repositories into GitHub Actions, so I can modify it and push it back into that repository, but it won't let me.  Although I can clone the repo, but since I need to push modified files back into the repository, that won't work.  The workflow that I ran the commands on, runs on <code>ubuntu-latest</code>.  Another thing to note is that when I ran these same commands on my Windows computer, everything runs properly, but for some reason, I didn't need the token or username for the link to work.  When I try to pull from the remote repo, I get the following error.</p>
<pre><code>remote: Repository not found.
fatal: repository 'https://github.com/[username]/[repo].git/' not found
Error: Process completed with exit code 1.
</code></pre>
<p>But when I try to clone the repository, the command successfully runs.  The commands I ran are below.</p>
<p>I create the remote repo with</p>
<pre><code>git remote add repo https://[username]:[token]@github.com/[username]/[repo].git
</code></pre>
<p>The token has the <code>repo</code> scope, so it has complete access to repositories.  To verify that the command worked, I ran</p>
<pre><code>git remote -v
</code></pre>
<p>Which shows the new remote that I added so I know it worked.  Next I try to pull the <code>master</code> branch from the remote repo with</p>
<pre><code>git pull repo master --allow-unrelated-histories
</code></pre>
<p>Which is where I get the error.  The clone command is</p>
<pre><code>git clone https://[username]:[token]@github.com/[username]/[repo].git
</code></pre>
<p>This command runs successfully unlike the <code>git pull</code> command.</p>
<p>I have looked at <a href=""https://stackoverflow.com/questions/37813568/git-remote-repository-not-found"">Git - remote: Repository not found</a> and <a href=""https://stackoverflow.com/questions/25947059/git-clone-repository-not-found"">Git Clone - Repository not found</a>, but none of the answers I've tried helped me.  Since the commands worked on my local computer, it most likely isn't the commands, and is probably something to do with how GitHub Actions runs the commands or the token.</p>
<h1>What I did for the problem to occur</h1>
<ol>
<li>Create a private repository.</li>
<li>Add files, commit, push, etc.</li>
<li>Create a public repository.</li>
<li>Add a workflow file.</li>
<li>Create a personal access token with the <code>repo</code> scope.</li>
<li>Add a secret in the public repo and set it to <code>https://[username]:[token]@github.com/[username]/[private repo].git</code></li>
<li>Add the commands <code>git remote add repo ${{ secrets.[secret name] }}</code>, <code>git remote -v # To verify that the remote add worked</code>, <code>git pull repo [main/master branch]</code>, and <code>ls</code></li>
<li>commit and push the workflow file and then run the workflow.</li>
<li>Open the session log to see the error</li>
</ol>
","12","14539510","",""
"18907689","1769790","2013-09-20 01:48:43","12","20073","<git><git-branch><git-pull><git-fetch>","Issue with git pull master is out of sync with origin master","<p>These are the sequence of steps I have performed:</p>

<ol>
<li>committed my changes in branch to local master (commit id <code>dc9afg2k</code>)</li>
<li><code>git fetch origin master &amp;&amp; git merge origin master</code></li>
<li><code>git checkout master</code> </li>
<li><code>git pull</code> (this pulled all recent changes)</li>
<li><code>git fetch origin master &amp;&amp; git merge origin master</code></li>
<li><code>git reset --hard origin/master</code></li>
<li><code>git checkout branch</code> </li>
<li><code>git blog</code> 
<li><code>git reset --hard dc9afg2k</code> (commit successful) </li>
<li><code>git checkout master</code></li>
<li><code>git log</code> (this was gone back to 2 days ago).</li>
<li><code>git pull</code> (<code>master</code> is not updating with current <code>origin/master</code>).</li>
</ol>
","0","1769790","0","0"
"2890659","41661","2010-05-23 04:18:00","17","18038","<git><git-pull><fast-forward>","How can I fast-forward a single git commit, programmatically?","<p>I periodically get message from git that look like this:</p>

<pre><code>Your branch is behind the tracked remote branch 'local-master/master' 
by 3 commits, and can be fast-forwarded.
</code></pre>

<p>I would like to be able to write commands in a shell script that can do the following:</p>

<ol>
<li><p>How can I tell if my current branch can be fast-forwarded from the remote branch it is tracking?</p></li>
<li><p>How can I tell how many commits ""behind"" my branch is?</p></li>
<li><p>How can I fast-forward by just <em>one</em> commit, so that for example, my local branch would go from ""behind by 3 commits"" to ""behind by 2 commits""?</p></li>
</ol>

<p>(For those who are interested, I am trying to put together a quality git/darcs mirror.)</p>
","0","41661","0","0"
"18930527","1416970","2013-09-21 08:24:21","360","246441","<git><git-pull>","Difference between git pull and git pull --rebase","<p>I started using git sometime back and do not fully understand the intricacies. My basic question here is to find out the difference between a <code>git pull</code> and <code>git pull --rebase</code> , since adding the <code>--rebase</code> option does not seem to do something very different : just does a pull.</p>

<p>Please help me with understanding the difference.</p>
","3","1416970","0","0"
"21810301","655316","2014-02-16 11:07:15","2","113","<git><git-merge><git-pull><git-fetch>","How to fetch and merge from URL into a project from zip file, using git?","<p>I downloaded a big zip file from Github, months ago. I decided to change some parts of the project. I unzipped the file contents and made a mistake and executed these lines:</p>

<pre><code>git init
git add .
git commit -a

git fetch https://github.com/Path_To_Project
</code></pre>

<p>This last line downloaded a big amount of data, which I thought it would auto merge it with my local files.</p>

<p>Now, I see that my local project is not updated. Still there are a huge amount of data in <code>.git/objects</code> folder. How can I merge those data into my project?</p>
","0","655316","0","0"
"51059021","3526864","2018-06-27 09:22:29","3","3646","<git><git-pull>","How does `git pull --rebase` correctly pull amended commits?","<p>I have a setup where I code on my <code>local</code> machine and pull it from my <code>dev</code> box to test it.
Say I create a commit <code>A</code> on branch <code>foo</code> on <code>local</code>, and create a branch <code>foo</code> on dev box which has upstream set as <code>local/foo</code>. If I do a <code>git pull</code> from branch <code>foo</code> on dev box, branch tree of <code>dev/foo</code> becomes same as <code>local/foo</code>.</p>

<p>But if I now amend the commit <code>A</code> in <code>local/foo</code>, <code>git pull</code> from branch <code>foo</code> on dev box gives a merge conflict. Whereas <code>git pull --rebase</code> works correctly and does not dupicate commit <code>A</code> twice on <code>dev/foo</code>.</p>

<p><code>git help pull</code> says that:</p>

<pre><code>       -r, --rebase[=false|true|merges|preserve|interactive]
           When true, rebase the current branch on top of the upstream branch after 
fetching. If there is a remote-tracking branch corresponding to the upstream branch 
and the upstream branch was rebased since last fetched, the rebase uses that 
information to avoid rebasing non-local changes.
</code></pre>

<p>I get that the last line is being applied in the above scenario, but I don't understand what the pre-conditions are or how its working?</p>

<p>An explanation would be very helpful.
Thanks</p>
","0","3526864","0","0"
"66701370","1745943","2021-03-19 01:25:47","0","34","<git><git-pull>","What does only ""git pull"" do in a certrain branch?","<p>I have a branchA and branchB (main branch). After some code review, I tried to run this first in branchA to pull changes from branchB</p>
<pre><code>git pull --rebase origin branchB
</code></pre>
<p>followed by</p>
<pre><code>git push origin -u branchA
</code></pre>
<p>but I get this error</p>
<pre><code>! [rejected](fetch first)
error: failed to push some refs to '&lt;url&gt;'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
</code></pre>
<p>Also i see this on command prompt
<a href=""https://i.stack.imgur.com/2rmEp.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/2rmEp.png"" alt=""enter image description here"" /></a></p>
<p>After that, I did just &quot;git pull&quot; (without any arguments) and it works just fine. What happens in running &quot;git pull&quot;</p>
","0","1745943","",""
"48749715","6765534","2018-02-12 15:21:16","1","5500","<git><github><version-control><git-pull>","What does git pull <link-to-remote> do?","<p>A newer git user at my job mistakenly ran the command</p>

<p><code>git pull https://github.com/our-repo.git</code></p>

<p>What they meant to do was: </p>

<p><code>git clone https://github.com/our-repo.git</code> </p>

<p>or at least</p>

<p><code>git remote add origin https://github.com/our-repo.git</code></p>

<p><code>git pull origin master</code></p>

<p>Yet <code>git pull https://github.com/our-repo.git</code> seemed to have pulled in some code but obviously it did not create an <code>origin</code> or any branches. </p>

<p>What exactly would <code>git pull &lt;url-to-remote&gt;</code> actually do? </p>
","0","6765534","",""
"31688157","1778409","2015-07-28 22:24:23","0","104","<git><git-branch><git-pull><git-checkout><bitbucket-server>","how to check out against a remote git repository from command line","<p>I am having trouble understanding exactly how I need to create a  local feature branch to put customizations into.  I have consulted some online resources which only confuse me  further.</p>

<p>I have created the remote branch via stash called feature/mycustomization for people to create pull requests against.</p>

<p>Now from command line do I have to do a git checkout -b  to create   a local branch  from which to push the changes to feature/mycustomization?  Also, does the name of my local branch have to match up with the remote branch due to convention?</p>

<p>Or is there a command which pulls the code from the remote branch feature/mycustomization created in step one and automatically creates the local branch?</p>

<p>I would appreciate some step by step instructions if possible.</p>

<p>Cheers,
Bob</p>
","0","1778409","",""
"51898502","6492006","2018-08-17 15:22:02","1","78","<git><git-merge><git-pull>","git term for downloading and updating local working copy","<p>What is git term for downloading new data from a remote repository in order to update your local working copy files?</p>

<p>I am talking about <code>git fetch &amp; git merge</code> or <code>git pull</code>, is there are specific git term for this operation?  I know what these commands do and mean but I am looking for correct git term for this operation.</p>

<p>I have heard of '<em>pulling</em>' but that is confused often with '<em>pull request</em>'.</p>

<p>I have also heard of '<em>reverse engineering</em>' which is even more confusing to me.</p>

<p>What is correct term?</p>
","4","6492006","0","0"
"48799235","9319166","2018-02-15 02:38:17","0","219","<node.js><github><google-cloud-platform><git-pull><circleci>","github pull request failing because ci/circleci timed out","<p>I forked the sample code for Google tutorials, fixed a bug using the github editor, and issued a pull request (<a href=""https://github.com/GoogleCloudPlatform/nodejs-docs-samples/pull/567"" rel=""nofollow noreferrer"">https://github.com/GoogleCloudPlatform/nodejs-docs-samples/pull/567</a>).  This was my first time doing both.</p>

<p>It fails with this message: <code>The Some checks were not successful</code>
Details:  <code>ci/circleci — A command timed out during your tests</code></p>

<p>When I click 'details', the circleci site (<a href=""https://circleci.com/gh/GoogleCloudPlatform/nodejs-docs-samples/1533?utm_campaign=vcs-integration-link&amp;utm_medium=referral&amp;utm_source=github-build-link"" rel=""nofollow noreferrer"">https://circleci.com/gh/GoogleCloudPlatform/nodejs-docs-samples/1533?utm_campaign=vcs-integration-link&amp;utm_medium=referral&amp;utm_source=github-build-link</a>) gives me this (see below).</p>

<p>Can anyone help me understand how to proceed?</p>

<p><strong>Title 1</strong> </p>

<pre><code>$ functions start &amp;&amp; cd functions/datastore &amp;&amp; npm run system-test &amp;&amp; functions stop
config10:04 (timed out)
</code></pre>

<p><strong>Details 1</strong>  </p>

<pre><code>$functions start &amp;&amp; cd functions/datastore &amp;&amp; npm run system-test &amp;&amp; functions stop
Enter a projectId to get started: projectId:  
command functions start &amp;&amp; cd functions/datastore &amp;&amp; npm run system-test &amp;&amp; functions stop took more than 10 minutes since last output
</code></pre>

<p><strong>Title 2</strong> </p>

<pre><code>$ functions start &amp;&amp; cd functions/helloworld &amp;&amp; npm run test &amp;&amp; functions stop
10:03 (timed out)config
</code></pre>

<p><strong>Details 2</strong></p>

<pre><code>$functions start &amp;&amp; cd functions/helloworld &amp;&amp; npm run test &amp;&amp; functions stop
Enter a projectId to get started: projectId:  
command functions start &amp;&amp; cd functions/helloworld &amp;&amp; npm run test &amp;&amp; functions stop took more than 10 minutes since last output
</code></pre>
","0","9319166","",""
"48823631","6647670","2018-02-16 09:26:59","0","313","<php><git><github><gitlab><git-pull>","Git pull not working with Shell_exec('git pull ');","<p>I am trying to use php to run git commands and it works really fine but i have strange problem <strong>git pull.</strong></p>

<pre><code>$auth       = 'https://' . $txtusername . ':' . $txtpassword . '@' . $gitrepo;
$txtbranch = 'master';

shell_exec (""2&gt;&amp;1 git pull $auth $txtbranch"");

From https://gitlab.companyname.com/testperson/git-bootcamp
 * branch            HEAD       -&gt; FETCH_HEAD
Already up-to-date.
</code></pre>

<p>I get the output that everything is up to date but actually there are files that have not been pulled yet. Its amazing the following works but not the above one.(directly added the static line to the code)</p>

<pre><code>shell_exec (""2&gt;&amp;1 git pull http://testperson:tes%40t123@gitlab.companyname.com master"");

From https://gitlab.companyname.com/testperson/git-bootcamp
 * branch            HEAD       -&gt; FETCH_HEAD
Updating ee30924..c92f020
Fast-forward
 README.md | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
</code></pre>

<p>Is there something i am doing wrong ? please can you help me on this one.
<strong>Server:linux
,php:7.0
,gitlab(private)</strong></p>

<p>thanks in advance.</p>
","7","6647670","",""
"48853053","9377163","2018-02-18 14:59:46","0","498","<git><git-merge><pull-request><git-pull><git-fork>","Updating fork with upstream: git fetch-checkout-merge vs. git checkout-pull?","<p>I am trying to understand how to keep my fork's master updated with the original repo's (from which I forked) master.</p>

<p>I read two documents:</p>

<ul>
<li><a href=""https://github.com/susam/gitpr#keep-your-fork-updated"" rel=""nofollow noreferrer"">https://github.com/susam/gitpr#keep-your-fork-updated</a></li>
<li><a href=""https://gist.github.com/Chaser324/ce0505fbed06b947d962#keeping-your-fork-up-to-date"" rel=""nofollow noreferrer"">https://gist.github.com/Chaser324/ce0505fbed06b947d962#keeping-your-fork-up-to-date</a></li>
</ul>

<p>Both documents provide more or less these steps:</p>

<pre><code>git fetch upstream
git checkout master
git merge upstream/master
</code></pre>

<p>Can these 3 steps be safely reduced to:</p>

<pre><code>git checkout master
git pull upstream/master
</code></pre>

<ol>
<li>If yes, is there any scenario where the reduced two-step update
would lead to problems but the three-step update would not?</li>
<li>Can these two steps be reduced to just one step?</li>
</ol>
","1","9377163","0","0"
"60015470","11636136","2020-02-01 09:09:30","0","242","<git><github><ssh><fatal-error><git-pull>","Fatal: https://github.com/<>/<>/info/refs not valid: is it a git repository? Error while pulling from remote repo","<p>From production branch of repo I am trying to pull into production branch using following command.</p>
<pre><code> git pull origin production
</code></pre>
<p>I get this error:</p>
<blockquote>
<p>Fatal: <a href=""https://github.com/svp19/parsec.git/info/refs"" rel=""nofollow noreferrer"">https://github.com/svp19/parsec.git/info/refs</a> not valid: is this a git repository?</p>
</blockquote>
<p>I have tried <code>git remote show origin</code> but I get the same error.</p>
<p>My <code>.git/config</code> file content is as below</p>
<pre><code>user@anand-Standard-PC:~/Downloads/parsec/.git$ cat config
[core]
repositoryformatversion = 0
filemode = true
bare = false
logallrefupdates = true
[remote &quot;origin&quot;]
url = https://github.com/svp19/parsec.git
fetch = +refs/heads/*:refs/remotes/origin/*
[branch &quot;production&quot;]
remote = origin
merge = refs/heads/production
[remote &quot;originSSH&quot;]
url = ssh://git@stash.****.net:7999/svp19/parsec.git
fetch = +refs/heads/*:refs/remotes/originSSH/*
</code></pre>
<p>How do I solve it and pull into my local repository?</p>
","4","11636136","0","0"
"22318214","2279816","2014-03-11 06:38:16","0","1881","<git><bitbucket><git-pull><automerge>","git pull auto-merge failed","<p>We use a single branch for all the users. Every time a user tries to push, he needs to pull others changes first. This results in a git automerge which works fine in most of the scenarios. </p>

<p>Yesterday, one of our users did the above and it resulted in a conflict, which failed the automerge. Now, the person resolved the conflicts and instead of committing all the files as part of this merge, committed and pushed only the conflicted file (after resolving them).</p>

<p>This has resulted in a situation, where all the files which he didn't commit are now being shown as old in the remote repo.</p>

<p>The changes are still there on his machine and we can also see them in git if we go to the file history but are not getting pulled.</p>

<p>Any way out of this?</p>

<p>BTW, we don't use --rebase or --ff-only options.</p>
","8","2279816","",""
"48884847","7820028","2018-02-20 11:59:58","0","323","<php><git><version><git-pull><vcs-checkout>","Is there a way if I do git checkout a file of older version and then later git pull to get latest file again","<p>I have a file which I had checkout out using previous git hash code 
using command :<br>
        <code>git checkout 1a4f8901b3b3b52903ac7c8e7aa7a0a7ba95b4f1 -- example/abcxyz.php</code></p>

<p>now whenever I update any file and do git pull, <code>git pull</code> the 
command is unable to pull the above checkout file.</p>

<p>so if anyone can help me to get the latest commit of that file . And why it is not checkout that file?</p>
","2","7820028","",""
"4312059","246265","2010-11-30 09:10:52","36","21919","<git><git-push><git-pull>","git pull says up-to-date but git push rejects non-fast forward","<p>I've just pulled a new branch, made some local changes, committed and tried to push. I was given this error: <code>! [rejected] groups -&gt; groups (non-fast forward)</code>
So I tried a to pull but was told <code>Already up-to-date.</code></p>

<p>Here's what I get pulling then pushing.</p>

<pre><code>~/dev$ git pull origin groups
Already up-to-date.
~/dev$ git push origin groups
To /mnt/ebs/git/repo.git
 ! [rejected]        groups -&gt; groups (non-fast forward)
error: failed to push some refs to '/mnt/ebs/git/repo.git'
</code></pre>

<p>Can anyone explain how this can be happening and how I can fix it?</p>
","6","246265","0","0"
"40739305","744534","2016-11-22 10:23:37","14","20454","<git><git-pull>","Default behaviour of 'git pull'","<p>Why is that <code>git pull</code> pulls everything including newly created remote branches but <code>git pull origin master</code> does not?</p>

<p>I'm using <code>git version 2.9.3.windows.2</code>.</p>
","0","744534","0","0"
"41823835","7461788","2017-01-24 08:55:58","0","72","<git><git-merge><git-pull>","merging two git repos","<p>I did search all the questions that are similar to mine but still, I am not able to achieve what I wanted to.
Please advice if this is possible:</p>

<ol>
<li>I have publicRepo/master branch</li>
<li>I have privateRepo/master branch</li>
</ol>

<p>I would like to simply take the latest of publicRepo/master and merge with privateRepo/master. But I would like to take everything from publicRepo/master regardless of merge conflicts (similar to what used to be <code>git pull -s</code> theirs)</p>

<p>How can this be done, so far I have tried these solutions:</p>

<p>1) <a href=""https://stackoverflow.com/questions/11199602/merge-2-different-git-repos"">Merge 2 Different git Repos</a> (I end up with 3 way merge and get theirs when there are conflicts)
2) <a href=""https://stackoverflow.com/questions/2233933/merging-two-git-repositories"">Merging two Git repositories</a></p>

<p>I also tried:</p>

<pre><code>git fetch --all (as I added publicRepo/dev as one of my remotes)

git reset --hard publicRepo/dev

git pull (does a 3 way merge, which I do not want, I want everything from my publicRepo/Master)
</code></pre>
","1","7461788","",""
"40878166","6595857","2016-11-30 00:19:17","3","2162","<git><alias><git-pull><git-checkout>","git alias including checkout and pull + rebase with params","<p>What am I doing wrong here? 
Suppose I'm in branch ""one"" and wanna switch to master and execute a pull --rebase.</p>

<p>The alias I used was:</p>

<pre><code>git config --global alias.cpr ""!git checkout $1 &amp;&amp; git pull --rebase $2 $1""
</code></pre>

<p>Thanks</p>
","2","6595857","",""
"21982651","189247","2014-02-24 08:38:32","4","1232","<git><version-control><github><branching-and-merging><git-pull>","Purging redundant branches from git","<p>Here is the scenario: Someone has a git repository (on github if that matters) which I've forked. In my branch, I've created lots of branches with changes that the upstream has pulled. Or in some cases applied the diff of my branch instead of properly pulling the branch.</p>

<p>What I want to find is a list of all my branches that has been fully merged into upstreams master branch. That way I can then safely delete those branches because <code>git branch</code> and other tools list 30+ branches and it looks cluttered.</p>

<p>I thought I explained properly why this question is different from the linked one: <strong>Or in some cases applied the diff of my branch instead of properly pulling the branch</strong> e.g. <code>git branch --merged</code>is not a full answer, but oh well...</p>
","1","189247","0","0"
"3262151","351210","2010-07-16 05:25:54","2","71","<git><merge><pull><git-merge><git-pull>","With git how can i merge a repository that has already been merged?","<p>I have a repository that i pulled the changes for, so now it is up to date with the remote repository. Except that now i realized that i needed to pull all of that repositories changes and keep none of mine. I want to go back in history so that i won't get an ""Already up-to-date"" when i pull. Also part two, how can i pull and get all of their changes keeping none of mine?</p>
","0","351210","",""
"59739828","1316995","2020-01-14 18:35:33","0","54","<git><git-pull>","Specify custom merge message when using git pull","<p>Is there a way to specify custom merge message without using --edit?</p>

<p>This brings up editor:</p>

<p><code>git pull &lt;some location&gt; --edit</code></p>

<p>I would like:</p>

<p><code>git pull &lt;some location&gt; --merge-message ""Merge from X""</code></p>
","0","1316995","",""
"22856019","3496878","2014-04-04 07:13:21","23","5491","<git><github><git-pull><git-bash>","How to make a second github pull request when one is already pending","<p>I've used other revision control systems before but have little experience with git and github.</p>

<p>I wanted to contribute to a project, so I forked it on github, fetched a local copy of my fork, edited it, committed it, pushed the change back to my github fork, and opened a pull request for the original upstream author to look at.  That all seems fine.  The author said he'll get around to using it in a bit.</p>

<p>But now I want to address a second issue of the project with a second pull request.  But everything I commit and push ends up being appended to that first pull request.  What I want to do is make a new second pull request for the subsequent changes, while the first pull request is still pending and not merged in to the upstream yet.</p>

<p>What steps do I need to run to do that?  I'm using git-bash.</p>
","2","3496878","0","0"
"3553270","398646","2010-08-24 02:59:13","31","10718","<git><authentication><git-push><git-pull>","How to config git to pull from http and push through ssh in one 'remote'?","<p>Pulling from http to escape authentication(so I don't need to type password if I'm not using ssh.keygen).</p>

<p>Pushing through ssh with authentication.</p>
","3","398646","0","0"
"59944024","11893427","2020-01-28 07:33:34","0","347","<java><git><rename><git-push><git-pull>","How Renaming of a java class affects to git status?","<p>I am using a remote repository while my team using the same branch and in different packages. 
On my side, I refactored one of the java classes in my package (Right-Click on package explorer > Refactor> Rename). And I did commit <strong><em>another change and that change is nothing related to the refactored one</em></strong>. </p>

<p>When the code is committed to the remote repository, it gives compilation errors to others once it gets a pull. But from my side no errors or build break issues. </p>

<p>Can someone explain; </p>

<ol>
<li>What is the reason behind that?</li>
<li>How to avoid compilation errors in a situation like that?</li>
</ol>
","3","11893427","",""
"42278974","3284365","2017-02-16 16:05:43","0","169","<git><credentials><private-key><git-pull>","How do I stop using rsa key for git pull?","<p>The repository was cloned using a key, but now I need to do a pull using user and password authentication, and doing the git pull won't ask for credentials.</p>

<p>How do I force the pull to ask me for credentials?</p>
","0","3284365","",""
"59971813","2394634","2020-01-29 16:43:52","0","108","<git><github><git-merge><git-pull>","How to selectively not merge when pulling from github repo","<p>Let's say I have cloned a github repo to my computer, have changed some of these files locally, but when I do a new <code>git pull</code> <em>do not</em> want to merge in any way with the github repo's version of those files. That is, I want my changes to those local files not in any way to be superseded or changed by the repo's versions -- although I do want to keep pulling to get any new files from the repo. Another way to say this might be, How can you pick which files to merge and which not to merge? I know if I change a file on my end I should do a <code>commit</code>... Beyond that I'm lost.</p>
","0","2394634","",""
"30265980","4116960","2015-05-15 18:02:03","7","9943","<android><git><git-pull>","Android studio git message: following untracked working tree files would be overwritten by merge, but not showing which files","<p>I'm working on an android project in android studio and using VCS for working on git with the other members of the team.
Last time I tried to pull from origin, the following error came up:
""following untracked working tree files would be overwritten by merge"", but it doesn't show me any file that caused the error.
I checked and every class and file in the project is added to git, so I don't know what the problem could be.
The change I've done was creating the folder ""drawable"" under the folder ""res"" and added an image that I use in the app; both was added to git. 
What should I do? </p>
","0","4116960","0","0"
"30450766","3929267","2015-05-26 06:14:22","0","173","<github><git-pull>","Git pull with some extra folders/files on local as compared to git repository","<p>I have 5 folders and some files on my local project folder. And on git hub only 3 folders are there.</p>

<p>If I do git pull, Will other 2 folders/files from local will be deleted?</p>
","0","3929267","",""
"13519191","1646558","2012-11-22 19:48:36","3","167","<git><github><git-merge><git-pull>","How do I update a github fork from the original repo?","<p>I forked a github repo.
Now I want to update my fork to the current repo version. How can I do that?</p>
","0","1646558","0","0"
"13571849","93311","2012-11-26 19:37:03","17","19473","<git><merge><git-pull>","How do I remove git's MERGE_MSG?","<p>I've tried a few things suggested, but nothing seems to remove it. This started occurring when I upgraded to Mountain Lion OS X. Anytime I do a <code>git pull</code>, it displays this annoying as heck empty editor with the title MERGE_MSG.</p>

<p>How do I prevent that from popping up <em>globally</em> across all my apps?</p>
","3","93311","0","0"
"31177893","258479","2015-07-02 07:16:09","22","25087","<git><git-pull><git-fetch>","Why does git log not show anything new after git fetch?","<p>I am learning about working with Git remotes by reading the <a href=""http://git-scm.com/book/en/v2/Git-Basics-Working-with-Remotes"" rel=""noreferrer"">relevant section of the Pro Git Book</a>.</p>

<p>If you clone a repository, the command automatically adds that remote repository under the name ""origin"". So, <code>git fetch origin</code> fetches any new work that has been pushed to that server since you cloned (or last fetched from) it.</p>

<p>It’s important to note that the <code>git fetch</code> command only <em>fetches</em> the data to your local repository; it doesn’t automatically merge it with any of your work or modify what you’re currently working on. You have to merge it manually into your work when you’re ready.</p>

<p>Here is what I tried. I cloned a repository and edited a file.
In the original repository, someone updated the same file and pushed.
Then,</p>

<ol>
<li><p>I ran <code>git fetch</code>.
It showed some update progress message. However, <code>git log</code> did not show that update. Did I misunderstand what <code>git fetch</code> does? Am I missing something?</p></li>
<li><p>I ran <code>git pull</code>, and I got</p></li>
</ol>

<blockquote>
  <p>error: Your local changes to 'hello_world.c' would be overwritten by merge.  Aborting.
  Please, commit your changes or stash them before you can merge.</p>
</blockquote>

<p>Here, I believe it's also merging and to avoid accidental data loss, it aborts. </p>

<p><strong>Edit:</strong>
Thanks for the answers. Actually before looking at the answers, I was trying myself and realized the same with the following commands / outputs:</p>

<pre><code>$ git ls-remote origin
d0006a6bfa95e0e90aa820a0e50d31a548625652    HEAD
d0006a6bfa95e0e90aa820a0e50d31a548625652    refs/heads/master
$ git ls-remote .
14375458b8a6b84f82d9fa4d2ded0bb8c9e87431    HEAD
14375458b8a6b84f82d9fa4d2ded0bb8c9e87431    refs/heads/master
d0006a6bfa95e0e90aa820a0e50d31a548625652    refs/remotes/origin/HEAD
d0006a6bfa95e0e90aa820a0e50d31a548625652    refs/remotes/origin/master
</code></pre>

<p>Also with following commands:</p>

<pre><code>$git log origin --oneline
$git log --oneline
</code></pre>

<p>Thank you for bearing with my stupid questions ;-) </p>
","1","258479","0","0"
"31203443","4205016","2015-07-03 09:35:45","1","568","<git><github><git-pull><git-fetch>","Can git pull be used to update repository with an upstream","<p>From <a href=""https://stackoverflow.com/questions/292357/what-are-the-differences-between-git-pull-and-git-fetch?answertab=votes#tab-top"">What is the difference between &#39;git pull&#39; and &#39;git fetch&#39;?</a>,</p>

<p>If <code>git pull</code> is a combination of <code>git fetch</code> followed by a <code>git merge</code>, can <code>git pull upstream master</code> be used to <strong>fetch and merge</strong> the changes from the upstream in the clone of a forked repository.</p>
","0","4205016","",""
"13674014","1460983","2012-12-02 21:25:15","0","5947","<wordpress><git><github><git-pull>","How to prevent git pull from overwriting a file?","<p>I use Git and GitHub to push changes I make on my local web development environment to my GitHub account and from there I pull these updates to my live production site. I am working with WordPress, so what I have done is .gitignore the wp-config.php file as my productions site has its own unique wp-config.php file with its own respective database credentials. As I am git ignoring this file, when I pull to my production site it gives me the following error:</p>

<pre><code>error: Your local changes to the following files would be overwritten by merge:
wp-config.php
Please, commit your changes or stash them before you can merge.
Aborting
</code></pre>

<p>How do I prevent this wp-config.php file from being overwritten (more specifically deleted) when I do a git pull?</p>
","0","1460983","",""
"66544092","10521831","2021-03-09 09:21:39","-2","70","<git><repository><bitbucket><git-branch><git-pull>","Please help me about problem in my git branch","<p>I can pull from another branch, but the data from another branch not updated in my branch. When i try pulled manually git pull branch_andy2 production it shows error like this :</p>
<p>fatal: 'branch_andy2' does not appear to be a git repository
fatal: Could not read from remote repository.</p>
<p>Please make sure you have the correct access rights
and the repository exists.</p>
","0","10521831","",""
"31310066","1306394","2015-07-09 06:50:14","1","418","<git><git-pull><pull>","Git pull not does not work when providing branch name in the command (git version 1.7.1)","<p>I am not being able to understand this case. Why just <code>git pull origin develop</code> does not do the <code>fast-forward</code>. Why I need to run <code>git pull</code> to update the files.</p>
<p>It is a server copy. Local changes are never made. Developers update their work in the <code>develop</code> branch and then a <code>pull</code> is performed on the server with the help of hooks.</p>
<p>Here is the terminal commands and output.</p>
<pre><code>[dev1st@ds3 rosplay]$ git branch -vv
* develop d555ff7 [origin/develop: ahead 2] add comment
[dev1st@ds3 rosplay]$ git pull origin develop
From http://115.112.117.254/php/rosplay
 * branch            develop    -&gt; FETCH_HEAD
Already up-to-date.
[dev1st@ds3 rosplay]$ git status
# On branch develop
# Your branch is ahead of 'origin/develop' by 2 commits.
#
nothing to commit (working directory clean)
[dev1st@ds3 rosplay]$ git pull
From http://115.112.117.254/php/rosplay
   2d3bb3a..d555ff7  develop    -&gt; origin/develop
Already up-to-date.
[dev1st@ds3 rosplay]$ git status
# On branch develop
nothing to commit (working directory clean)
</code></pre>
<p>I've set the tracking information correctly. But still for this project only, <code>git pull origin develop</code> won't do the <code>fast-forward</code>.</p>
<p>Please help.</p>
<h2>Update (<code>.git/config</code> content)</h2>
<pre><code>[core]
        repositoryformatversion = 0
        filemode = true
        bare = false
        logallrefupdates = true
[remote &quot;origin&quot;]
        url = http://username:password@...php/rosplay.git
        fetch = +refs/heads/*:refs/remotes/origin/*
[branch &quot;develop&quot;]
        remote = origin
        merge = refs/heads/develop
</code></pre>
","3","1306394","0","0"
"13818689","348545","2012-12-11 10:50:42","3","1836","<git><git-branch><git-pull><gitorious>","git pull works only for master branch","<p>Pulling any branch from any repository from a computer inside the git server's LAN works.<br>
However, on any remote computer (not on the same LAN as the git server), pulling master from any repository works, but <strong>pulling any other branch hangs</strong>.</p>

<p>Environment:<br>
 - Git server is gitorious running on ubuntu<br>
 - I'm pulling from windows using msysgit and either command line or tortoisegit<br>
 - The url used is of the form: <code>ssh://git@[my.domain]/[proj]/[repo.git]</code></p>

<p>I know <a href=""https://stackoverflow.com/questions/9925173/gitorious-branch-permissions"">gitorious does not support branch specific permissions</a>. Also the fact that within the LAN all the branches work must indicate something... what could it possibly be?!</p>

<p><strong>Update:</strong><br>
I suspected the branch I'm trying to pull doesn't exist, so I tried pushing it. Here's the result:</p>

<pre><code>git.exe push --progress  ""origin"" other_branch

To ssh://git@my.domain/proj/repo.git
! [rejected]        other_branch -&gt; other_branch (non-fast-forward)
error: failed to push some refs to 'ssh://git@my.domain/proj/repo.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Merge the remote changes (e.g. 'git pull')
hint: before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
</code></pre>

<p>funny that doesn't hang...</p>
","4","348545","0","0"
"13857458","1752939","2012-12-13 10:08:30","1","657","<git><git-push><git-pull>","git search local history","<p>I made a couple commits without making a git push. After that I made a git push and know I can't find these commits that were only local. Can I somehow find those commits that I didn't push to remote repo?</p>
","1","1752939","0","0"
"14266010","112741","2013-01-10 19:45:05","1","550","<git><git-merge><git-pull><git-subtree>","When does git pull cause merge between multiple branches?","<p>I'm trying to understand the circumstances that caused git to merge a feature branch I was working on into the main develop branch after switching to the develop branch.</p>

<p>I was able to revert the merge but it took the better part of a day to fully resolve and I'd like to avoid it in the future.</p>

<p>Here is the workflow:</p>

<p>After working on my feature branch I need to work on a bug fix.
My feature branch (refs/heads/feature/uploader/90) has been kept up with the main develop branch with:</p>

<pre><code>git merge origin/develop
</code></pre>

<p>Then I need to switch to the develop branch:</p>

<pre><code>git checkout develop
</code></pre>

<p>git outputs:</p>

<p><em>Switched to branch 'develop'
Your branch is behind 'origin/develop' by 88 commits, and can be fast-forwarded.</em></p>

<p>Then when I issue a pull:</p>

<pre><code>git pull origin refs/heads/develop
</code></pre>

<p>For some reason it looks like git has decided to merge my feature branch into develop, the output looks like this: </p>

<pre><code>branch develop -&gt; FETCH_HEAD
Fast-forwarding to: 102301bcc51fc6d7978e5287df9d031d82e53bc9
Trying simple merge with d139bab0a96df01408f82110e38b6e0b6b98e6e6
Merge made by the 'octopus' strategy.
</code></pre>

<p>And my commit log shows me committing:
<em>Merge branches 'feature/uploader/90' and 'develop' of github.com:MakerStudios/dashboard into develop</em></p>
","2","112741","0","0"
"31546068","1557150","2015-07-21 17:44:19","3","10895","<git><git-pull>","How to debug ""git pull"" taking too much time?","<p>We are facing a problem of <code>git pull</code> taking too much time and at last it is just failing. We are using company Gitlab.</p>

<p><strong>When it happened</strong></p>

<p>One of my colleague updated the repo with some huge video and image files. 
And we try to pull the code may be because that files its taking too long and failing also.</p>

<p><strong>What we tried</strong></p>

<p>All of these have not resolved the problem:</p>

<ol>
<li>We removed that files from repo. Added to git ignore.</li>
<li><code>git filter-branch</code>.</li>
<li>We've tried removing the large files entirely, using <a href=""https://stackoverflow.com/questions/307828/completely-remove-file-from-all-git-repository-commit-history"">this technique</a>.</li>
<li>Tried the command <code>git gc</code> after <code>git filter-branch</code>.</li>
</ol>

<p>but for my colleague he able to pull code very fast,</p>

<ol>
<li>May be because he already has that files in his local</li>
<li>Or maybe he is using SSH, we didn't added it.</li>
</ol>

<p><strong>Error</strong></p>

<blockquote>
  <p>remote: Counting objects: 1279, done.
  remote: Compressing objects: 100% (880/880), done.
  fatal: The remote end hung up unexpectedly MiB | 743.00 KiB/s<br>
  fatal: early EOF
  fatal: index-pack failed</p>
</blockquote>

<p><strong>Edited</strong></p>

<ol>
<li>The work around we made is, copied the project folder from his system</li>
<li>Copied to my system as fresh.</li>
<li>Created fresh ssh key </li>
</ol>
","3","1557150","",""
"31549071","825924","2015-07-21 20:33:36","3","1333","<git><git-merge><git-rebase><git-pull>","What does git pull --rebase --ff-only do?","<p>I saw a command line reference which recommended <code>git pull --rebase --ff-only</code>. I thought git would reject that, but it doesn’t.</p>

<p>What does the combination of <code>--rebase</code> with <code>--ff-only</code> mean?</p>

<p><em>Edit:</em> I perfectly know what each alone does.</p>
","3","825924","0","0"
"2993902","135414","2010-06-07 23:34:38","112","93422","<git><git-pull>","How do I check the date and time of the latest `git pull` that was executed?","<p>How do I check the date and time of the latest <code>git pull</code> that was executed? I frequently need to know when the code changed on a server when something goes wrong.</p>
","0","135414","0","0"
"13994546","1922100","2012-12-21 17:25:51","8","3133","<git><github><gitignore><git-pull>","How to avoid merging a specific file with git-pull?","<p>In my local repository, I have a modified settings file with a different version of the file stored on GitHub. Whenever I pull from GitHub into my local repository, my local copy gets changed.</p>

<p>Is there any way to avoid having my local copy overwritten by <em>git-pull</em>?</p>
","2","1922100","",""
"40882109","3415220","2016-11-30 06:57:07","0","141","<git><git-pull><sourcetree><squash>","git pull request with SourceTree squash my changes on same file","<p>We use SourceTree. When other person changes some things on same file and commit and push his changes then when i fetch and pull these, my changes on same file squashed and file updated with just his changes there is no my changes. How to solve this problem? Any suggestion?</p>

<p>Thanks all.</p>
","6","3415220","",""
"14023648","223092","2012-12-24 16:25:16","75","10702","<git><git-pull>","Why does my git history look like a christmas tree?","<p>When doing <code>git log --decorate --oneline --graph</code> in one of our repositories shortly before Christmas, we found that the following structure had appeared (rotated to emphasize the tenuous festive theme):</p>

<p><img src=""https://i.stack.imgur.com/ZsXT6.png"" alt=""redacted git log output, rotated to look like a Christmas tree""></p>

<p>How did this pattern in the commit graph arise?</p>

<p><em>This is deliberately somewhat silly, of course, but there's a interesting point here — it's often difficult to see how to interpret particular patterns in the commit graph when you see them in you git history browser.</em></p>
","3","223092","0","0"
"41126860","4292958","2016-12-13 17:14:25","2","166","<git><bitbucket><keychain><git-pull>","Not able to avoid password step in git pull","<p>I have my credentials (username/nick (not email) and password) and bitbucket link at keychain but still asks for the password when i use <em>git pull</em>. In the link area i have the HTTPS that appears when i do <em>git pull</em>. I am using my nickname because everytime i enter my password in terminal i receive this message:</p>

<pre><code>A keychain cannot be found to store ""nickname""
</code></pre>

<p>But when i do git pull it asks for the password with that config at keychain.</p>

<p>Now i dont know if i should be using my email instead of my nick, that is also not working in keychain.</p>

<p>I have also did,</p>

<pre><code>git help -a | grep credential-
</code></pre>

<p>and it appears several credentials where i have osxkeychain also, but when i do,</p>

<pre><code>git help credential-osxkeychain 
</code></pre>

<p>i get this,</p>

<pre><code>No manual entry for git-credential-osxkeychain
</code></pre>

<p>then if i try to,</p>

<pre><code>git credential-osxkeychain set
</code></pre>

<p>or</p>

<pre><code>git credential-osxkeychain erase
</code></pre>

<p>it simply doesnt show anything and i have to do CTRL+C to exit.</p>

<p>Note that when i do,</p>

<pre><code>git credential-osxkeychain
</code></pre>

<p>i get,</p>

<pre><code>usage: git credential-osxkeychain &lt;get|store|erase&gt;
</code></pre>

<p>So what credentials should i use, the nickname instead of email? If not what could be the problem?</p>
","9","4292958","",""
"22147574","1045808","2014-03-03 13:04:03","221","498730","<git><github><git-pull><git-bash>","GitHub - fatal: could not read Username for 'https://github.com': No such file or directory","<p>I have the following problem when I try to pull code using git Bash on Windows:</p>
<pre><code>fatal: could not read Username for 'https://github.com': No such file or directory
</code></pre>
<p>I already tried to implement the accepted solution provided here:</p>
<ul>
<li><a href=""https://stackoverflow.com/questions/20871549/error-when-push-commits-with-github-fatal-could-not-read-username"">Error when push commits with Github: fatal: could not read Username</a></li>
</ul>
<p>However the problem still persists.</p>
<p>After adding/removing origin I still get the same error.</p>
<p>Could advise on this issue?</p>
<p>Thanks!</p>
","4","1045808","0","0"
"22148582","417629","2014-03-03 13:53:58","4","6372","<git><git-branch><git-pull><git-remote>","Why can't I git pull from a remote?","<p>I'm trying to do a <code>git pull</code> from a remote repo on WP Engine, and running into a problem.</p>

<pre><code>$ git pull production master
fatal: Couldn't find remote ref master
$ fatal: The remote end hung up unexpectedly
</code></pre>

<p>I ran the following for more info;</p>

<pre><code>$ git branch -a
  master
* wpengine
  remotes/origin/HEAD -&gt; origin/master
  remotes/origin/master
</code></pre>

<p>And then tried;</p>

<pre><code>$ git pull production origin/master
fatal: Couldn't find remote ref origin/master
$ fatal: The remote end hung up unexpectedly
</code></pre>

<p>And also;</p>

<pre><code>$ git pull production remotes/origin/master
fatal: Couldn't find remote ref remotes/origin/master
$ fatal: The remote end hung up unexpectedly
</code></pre>

<p>Am I referencing the remote branch that I want to pull incorrectly, or is there a problem with WP Engine that I need to solve?</p>
","10","417629","0","0"
"14318234","1132363","2013-01-14 12:14:43","864","1412213","<git><git-pull><git-stash>","How do I ignore an error on 'git pull' about my local changes would be overwritten by merge?","<p>How do I ignore the following error message on Git pull?</p>

<blockquote>
  <p>Your local changes to the following files would be overwritten by merge</p>
</blockquote>

<p>What if I <strong>want</strong> to overwrite them?</p>

<p>I've tried things like <code>git pull -f</code>, but nothing works.</p>

<p>To be clear, I only want to overwrite specific changes, not everything.</p>
","5","1132363","0","0"
"49445206","9539190","2018-03-23 08:22:09","0","827","<python><django><git-pull><pythonanywhere>","git pull doesn't update files on pythonanywhere","<p>I am following Django Girls Tutorial, I am on html section - <a href=""https://tutorial.djangogirls.org/en/html/"" rel=""nofollow noreferrer"">https://tutorial.djangogirls.org/en/html/</a> - where git is updated than files are transferred to pythonanywhere by using git pull. My git has been updated however, after git pull on pythonanywhere I do not see updated Files. I rerun my web app as well, no changes.</p>

<p>After git pull I see files changes, insertions and deletion, but no files updated in FILES section.</p>

<p>Thank You for help, 
Bogdan</p>

<p><a href=""https://i.stack.imgur.com/YTp7l.jpg"" rel=""nofollow noreferrer"">enter image description here</a></p>
","2","9539190","",""
"50044783","5165019","2018-04-26 13:51:28","5","3109","<git><merge><git-merge><git-pull>","Difference between git merge another-branch and git pull remote another-branch","<p>Consider I am on <code>master</code> and I have remote branch <code>develop</code> on my remote named <code>origin</code>, everything is up-to-date, I have already runned <code>git fetch</code>.</p>

<p>Now is there any difference between <code>git merge origin/develop</code> and <code>git pull origin develop</code> ?</p>
","0","5165019","0","0"
"60129367","11419133","2020-02-08 17:37:06","0","1728","<python><github><repository><git-pull>","How to update a git hub repository on command line","<p>I would like to update a GitHub repository which can be found  <a href=""https://github.com/south-coast-science"" rel=""nofollow noreferrer"">https://github.com/south-coast-science</a> 
I am doing this so that I can use a new command, however I'm not sure how to do this. I have tried using the pip install update method which did not work.</p>

<p>""sudo pip3 install SCS/ -U"" </p>

<p>I think I may need to do a git pull but I'm not sure how to approach it.</p>
","3","11419133","0","0"
"48927248","71376","2018-02-22 12:18:27","3","6207","<git><rebase><git-pull>","git pull --rebase explanation","<p>Starting point: I have created a branch from <code>master</code> and locally made commits. Other commits have, during my branch work, been PR'd into <code>master</code>...</p>

<p>What I would then do, locally, is <code>git checkout master</code>, <code>git pull</code>, then checkout my branch and <code>git rebase master</code></p>

<p>My understanding is that - at this point - all the commits I've made while working on my branch will be applied ""after"" those <code>master</code> commits.</p>

<p>My understand of <code>git pull --rebase</code> is that it does as I've described above. My question is (assuming that is correct) how does the <code>git pull --rebase</code> know <strong>which branch I am rebasing on?</strong></p>

<p>In the steps above I have rebased onto the <code>HEAD</code> of <code>master</code>, whereas most <code>git pull --rebase</code> explanations appear to focus on rebasing upon commits made to the <strong>same</strong> branch (not the original <code>master</code>).</p>

<p>My typical steps, explicitly:</p>

<pre><code>git clone &lt;path&gt;
cd &lt;dir&gt;
git checkout -b feature/my-branch
&lt;make changes&gt;
git add .
git commit -m ""some message""
git checkout master
git pull --all
git checkout feature/my-branch
git rebase master
**git push --set-upstream origin feature/my-branch**
</code></pre>

<p>Question: Can/Should I change the above steps to:</p>

<pre><code>git clone &lt;path&gt;
cd &lt;dir&gt;
git checkout -b feature/my-branch
**git push --set-upstream origin feature/my-branch**
&lt;make changes&gt;
git add .
git commit -m ""some message""
git pull -r
</code></pre>
","3","71376","0","0"
"41439024","7143532","2017-01-03 08:11:50","15","9933","<git><rebase><git-pull><git-stash>","Can I use git pull --rebase instead of ""git stash git pull git stash pop""?","<p>What is the difference between </p>

<pre><code>git pull --rebase
</code></pre>

<p>and </p>

<pre><code>git stash
git pull
git stash pop
</code></pre>
","0","7143532","0","0"
"49500846","7449489","2018-03-26 21:23:03","1","791","<linux><bash><git><apache><git-pull>","Doing a 'git pull' with Apache from a Bash script","<p>I have a Git repository on Bitbucket named ""foo-apps"". I have a Linux web server with a local clone of this repository, and I want this server's associated Apache web page to do some Git commands with this repository, such as <code>git pull</code> and <code>git checkout</code>, via a Bash script. The problem is, only the user ""foo"" has permission to associate with the ""foo-apps"" repository, and the web page runs as the Apache user, ""www-data"". </p>

<p>It seems that www-data can do <code>git log</code> and some other commands on the local repository, but not the <code>git pull</code> or the <code>git checkout</code> command. (Just so you know my system: I have an HTML file that contains JavaScript, which contains an AJAX request, which calls a PHP file, which calls my Bash script, which has the Git commands in it.)</p>

<p>What are some ways that I can successfully get those Git commands to work when the process is triggered by the web interface? I am not opposed to any working suggestions, even if they include a complete overhaul of my system... however, I would like to have the simplest effective solution with what I've already got.</p>

<p>Here are some ideas I've thought of and tried out a bit. None of them seem to work, but keep in mind that I've only ""half tried"" them as I didn't have confidence I was using preferred methods:</p>

<ul>
<li>Giving www-data permission on my Bitbucket repository</li>
<li>Giving Apache access to foo's ssh keys</li>
<li>Somehow switching to user foo in the script, like with <code>sudo</code>, <code>su</code>, etc.. (I think this type of thinking is more along the lines of what I want... I don't have a lot of control over the settings of the Bitbucket repository. I am fine putting a password in a script, too.)</li>
</ul>

<p>This web server is on a closed network, and security is not a very high concern for me.</p>

<p>I don't know if it's useful, but here are some of the main Git related errors I've received when trying these methods:</p>

<p><code>error: cannot open .git/FETCH_HEAD: Permission denied</code></p>

<p><code>fatal: BUG: get_tempfile_fd() called for inactive object</code></p>

<p><code>/usr/bin/git: /usr/bin/git: cannot execute binary file</code></p>
","2","7449489","",""
"49507405","6057372","2018-03-27 08:01:05","0","95","<git><github><git-commit><git-pull>","cannot git commit, push or pull","<p>I am having problems doing <code>git commit -m</code> and <code>git pull</code>. I have done <code>git init</code> and made changes for many times and had had no problems working on branches and pushing to GitHub. However, now the problem occurs out of blue.</p>

<p>I can no longer git commit or git push. Every time I made changes and after doing <code>$git add .</code>, it shows </p>

<pre><code>$ git commit -m ""fixed plot fonts""
On branch convergence
Your branch is up-to-date with 'origin/convergence'.
nothing to commit, working tree clean


$ git pull
Already up-to-date.

$ git branch
* convergence
master
show
shown

$ git status
On branch convergence
Your branch is up-to-date with 'origin/convergence'.
nothing to commit, working tree clean


$ git pull
Already up-to-date.
</code></pre>

<p>Could someone give me some directions? Thank you!!</p>

<p><strong>UPDATE</strong></p>

<p>After I reinitialized git, I still could not git commit and git push.</p>

<p><code>$ git init
Reinitialized existing Git repository in /Users/xyz/Documents/R packages/bio/.git/</code></p>

<p><code>h$ git add .</code></p>

<p><code>$ git commit -m ""change font sizes of ggplot""
On branch convergence
Your branch is up-to-date with 'origin/convergence'.
nothing to commit, working tree clean</code></p>
","14","6057372","0","0"
"67054889","7295761","2021-04-12 08:20:17","3","828","<git><git-merge><git-pull><git-merge-conflict>","Force git pull to resolve divergent by discard all local commits?","<h1>The question</h1>
<p>I have a local repo with 3 commits:</p>
<pre><code>A -&gt; B -&gt; C
</code></pre>
<p>And the remote repo has another 3 commits:</p>
<pre><code>A -&gt; B -&gt; D
</code></pre>
<p>How to make <code>git pull</code> to resolve the divergent by discarding all local commits? The local repo after <code>git pull --some-magic</code> should be:</p>
<pre><code>A -&gt; B -&gt; D
</code></pre>
<p>Note that, <code>git reset HEAD~1 --hard</code> won't work, because my script doesn't know how many commits must be reverted to avoid a conflict.</p>
<h1>Why I need this</h1>
<p>I'm writing a script to sync between github and gitlab repositories. One of them is a read-only mirror. My scripts just try <code>git pull --force</code> from origin1 and <code>git push</code> to origin2.</p>
<p>However, if someone changed the history of <code>origin1</code>, the <code>git pull</code> in my script would fail with an error message. The only way to solve the problem is delete the whole local repository, and perform <code>git clone</code> from stretch. It's wasting bandwidth and slow!</p>
","1","7295761","0","0"
"49527071","9562080","2018-03-28 05:54:30","0","909","<git><git-pull><git-reset><git-reflog><git-untracked>","Can git restore untracked files after a bad pull?","<p>I have an artist working in git for a class project. He had an asset in a working directory that was untracked. Before he committed the file, he preformed a pull to get the latest changes. An upper level folder must have been renamed and during the pull the folder he was working in was deleted and all of the tracked files were moved to the new folder. All of the untracked files appear to be deleted. Is there a way to restore the untracked files or to revert the repository using git reflog and git reset?</p>
","6","9562080","",""
"49556394","8182674","2018-03-29 12:42:35","1","842","<git><github><git-merge><git-pull><git-diff>","How do I merge files without conflict in git?","<p>We are two people working on one master branch repo in Github. </p>

<p>And, today I had modified a file in my local copy which I commited, then I wanted to merge my friends change with he pushed to github, so I did: </p>

<pre><code>git fetch
git diff --stat HEAD...HEAD@{upstream}
</code></pre>

<p>And I can see</p>

<pre><code> src/components/views/invoicing/expenses/add.vue  | 106 ++++++--------
 src/components/views/invoicing/expenses/edit.vue | 173 ++++++++++++-----------
 src/components/views/org/Add.vue                 |   4 +-
 src/i18n/de.js                                   |  22 ++-
 src/i18n/en.js                                   |  26 ++--
 src/i18n/fr.js                                   |  11 +-
 src/resources/expensesList.js                    |   4 +-
</code></pre>

<p>Now, I can merge all files since I didn't modify them except the <code>src/resources/expensesList.js</code> file which I have modified and committed. </p>

<p>So, <code>git merge origin/master</code> say: </p>

<blockquote>
  <p>CONFLICT (content): Merge conflict in src/resources/expensesList.js</p>
</blockquote>

<p>but all the other files are mergable and okay, so is there anyway to fix the conflict either to instruct git to use my changes or the incoming changes so I can run merge without conflict</p>
","6","8182674","",""
"4235964","514827","2010-11-21 01:33:11","4","8658","<git><github><git-push><git-pull><git-remote>","What can I do when git push fails with ...""local out of date""?","<p>I'm sure this is a pretty easy fix, but I'm not sure why my pushes to GitHub are failing.</p>

<p>Right now it looks like:</p>

<pre><code>$ git push origin master
To git@github.com:user_name/project_name.git
 ! [rejected]        master -&gt; master (non-fast-forward)
error: failed to push some refs to 'git@github.com:user_name/project_name.git'
To prevent you from losing history, non-fast-forward updates were rejected
Merge the remote changes before pushing again.  See the 'Note about
fast-forwards' section of 'git push --help' for details.
</code></pre>

<p>And: </p>

<pre><code>$ git remote show origin
* remote origin
  Fetch URL: git@github.com:user_name/project_name.git
  Push  URL: git@github.com:user_name/project_name.git
  HEAD branch: master
  Remote branch:
    master tracked
  Local ref configured for 'git push':
    master pushes to master (local out of date)
</code></pre>

<p>Also, when I try a git pull:</p>

<pre><code>$ git pull
You asked me to pull without telling me which branch you
want to merge with, and 'branch.master.merge' in
your configuration file does not tell me, either. Please
specify which branch you want to use on the command line and
try again (e.g. 'git pull &lt;repository&gt; &lt;refspec&gt;').
See git-pull(1) for details.

If you often merge with the same branch, you may want to
use something like the following in your configuration file:

    [branch ""master""]
    remote = &lt;nickname&gt;
    merge = &lt;remote-ref&gt;

    [remote ""&lt;nickname&gt;""]
    url = &lt;url&gt;
    fetch = &lt;refspec&gt;

See git-config(1) for details.
</code></pre>

<p>What did I do to cause this state ... and what should I do to fix it?</p>
","0","514827","",""
"41708925","469294","2017-01-17 23:33:26","10","20468","<git><git-pull><git-fetch>","Are ""git fetch --tags --force"" and ""git pull <branch>"" conmutative operations?","<p>Normally the git tags are a fixed reference to a commit. But sometimes they are used to mark some event (<code>last-build</code>, <code>base-line</code>, etc..) and they change frequently.   </p>

<p>I have an script that refreshes those kind of ""floating"" tags from the reference repository.</p>

<pre><code>git fetch --tags --force
</code></pre>

<p>and also make pull from one branch:</p>

<pre><code>git pull origin &lt;mybranch&gt;
</code></pre>

<p>I know that many git users warn about using floating tags, but i am forced to deal with that. My question is:</p>

<p><em>If the branch is marked by one of those floating tags... does the execution order of the commands matter?</em></p>

<p>I am afraid that <code>git pull</code> doesn't refresh the tags when they exist locally, and that it might work with the reference of the all tags if it runs first.</p>

<p><code>git pull</code> has a <code>--force</code> option, but the help section of the option <code>--no-tags</code> explain the default behavior as:</p>

<blockquote>
  <p>By default, tags that point at objects that are downloaded from the
  remote repository are fetched and stored locally.</p>
</blockquote>

<p>Does it means that the objects should be downloaded first in order to be able to refresh the tags ? In that case <code>git pull</code> should go first.</p>

<p>Which is the correct order?</p>
","2","469294","0","0"
"42013273","5883228","2017-02-02 22:11:29","1","55","<git><github><version-control><bitbucket><git-pull>","How to pull all items within a specifc folder located on external git repository","<p>I am trying to pull all the files and folders within a specific folder in my git repository. I have already tried using sparce-checkout but this pulls the specific folder. I wish for it to only pull the files within the folder.</p>

<p>I have a folder called /EWINS/ and I wish to pull every folder and file within that directory.</p>

<p>I have tried:</p>

<p><code>git init</code></p>

<p><code>git config core.sparseCheckout true</code></p>

<p><code>git remote add -f origin https://MYDIRECTORY</code></p>

<p><code>echo ""EWINS/*"" &gt;&gt; .git/info/sparse-checkout</code></p>

<p><code>git pull origin master</code></p>

<p>However this results in the folder EWINS being pulled where as I require all the items within EWINS. Specifically I do not want the EWINS folder, simply all of the items within it.</p>

<p>I could theoretically specify every single file I want and that will work but I will have to be editing the script every time a new item which needs to be managed is added, and this is not appropriate.</p>

<p><strong>I have referenced:</strong> </p>

<p><a href=""https://stackoverflow.com/questions/600079/how-do-i-clone-a-subdirectory-only-of-a-git-repository"">How do I clone a subdirectory only of a Git repository?</a></p>

<p><a href=""http://lakehanne.github.io/git-sparse-checkout"" rel=""nofollow noreferrer"">http://lakehanne.github.io/git-sparse-checkout</a></p>

<p>Any help would be appreciated.</p>

<p><strong>Example:</strong></p>

<p>I receive:</p>

<p>EWINS\app.test , text.txt, note.pad</p>

<p>I want:</p>

<p>app.test, text.txt, note.pad</p>
","0","5883228","0","0"
"42260136","1790644","2017-02-15 21:11:33","0","117","<git><git-pull><git-fetch>","git pull from fetch head / unavailable server","<p>Before losing internet access I ran <code>git fetch --all</code> to fetch all branches.</p>

<blockquote>
  <p>With a connection to the server now unavailable, how can I do a <code>git pull</code>?</p>
</blockquote>

<pre><code>$ git checkout feature.a
Already on 'feature.a'
Your branch is behind 'origin/feature.a' by 7 commits, and can be fast-forwarded.
  (use ""git pull"" to update your local branch)

$ git pull
ssh: Could not resolve hostname unavailable.example.com: nodename nor servname provided, or not known
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
</code></pre>
","3","1790644","",""
"5161594","640298","2011-03-01 23:16:15","1","1250","<git><git-push><git-pull>","How do I setup git to push and pull from the current branch?","<p>So I have two tracked branches in my repo, 'testing' and 'master'. These are tracking to the same named branches on my remote server. I have the .gitconfig option for push.default set to 'tracking'. However when I do ""git push origin"" it merges my new changes with the Master branch ont he remote server. Here is the output of 'git remote show origin':</p>

<pre><code>* remote origin
Fetch URL: git+ssh://******************
Push  URL: git+ssh://******************
HEAD branch: master
Remote branches:
  master  tracked
  testing tracked
Local refs configured for 'git push':
  master  pushes to master  (up to date)
  testing pushes to testing (fast-forwardable)`
</code></pre>

<p>Basically, I want to be able to just type 'git push' and 'git pull' and it will automatically push and pull to origin with the appropriate branch. </p>

<p>EDIT:</p>

<pre><code>[*****]$ git config push.default
tracking
[*****]$ git --version
git version 1.7.3.4
</code></pre>
","2","640298","",""
"49784394","2809294","2018-04-11 21:00:37","4","1302","<git><git-pull><git-fetch>","What is the exact difference when you execute `git fetch upstream master:master` vs `git pull upstream master:master`","<p>I know the difference between <code>git fetch</code> and <code>git pull</code>. <code>git pull</code> is basically a <code>git fetch</code> + <code>git merge</code> in one command.</p>

<p>However, I was researching on how to update my fork (master branch) with the upstream <strong>without checking out the master branch</strong>. I came across this SO answer - <a href=""https://stackoverflow.com/questions/3216360/merge-update-and-pull-git-branches-without-using-checkouts/4157106#4157106"">Merge, update and pull Git branches without checkouts</a></p>

<p>But when I used <code>git fetch upstream master:master</code> after I was already checked out on master, I ran into this error -</p>

<pre><code>fatal: Refusing to fetch into current branch refs/heads/master of non-bare repository
</code></pre>

<p>So, I tried <code>git pull upstream master:master</code> and it worked. What is interesting is that doing <code>git pull upstream master:master</code> updates my fork with upstream <strong>regardless of whether I am on master or not</strong>. Whereas <code>git fetch upstream master:master</code> only works when I am <strong>NOT on master</strong> branch.</p>

<p>It will be very interesting to read explanation on this, from the knowledgeable folks out here.</p>
","2","2809294","0","0"
"14863968","841626","2013-02-13 21:59:39","1","522","<git><version-control><gitignore><git-pull>","prevent git from overriding tracked ignored files during a pull","<p>So there is a file that is already tracked by git call it file.php...This is in a collaborative environment</p>

<p>I made changes to that file that I don't want to have it committed but I want the changes to stay in my local environment so I did this</p>

<pre><code>1. git update-index --assume-unchanged file.php
2. Added file.php to gitignore
</code></pre>

<p>And the changes to the file won't get committed, etc, which is working fine</p>

<p>The problem is...whenever I do a <code>git pull origin master</code>, the pull always attempts to override that file</p>

<p>I tried doing <code>git rm --cached file.php</code> but that will untrack the file and requires a commit and I don't want to affect the central repository when ignoring this..</p>

<p>How do I get git to ignore a tracked file during a pull?</p>
","2","841626","",""
"32396129","3420543","2015-09-04 10:44:08","0","3137","<git><git-pull>","git pull doesn't see recent changes","<p>I am trying to pull a recent commit from a remote repository with git but it does not see the changes. This is the output from the local server where I am trying to pull to:</p>

<pre><code>[root@app-dev ansible]# git pull
Already up-to-date.

[root@app-dev ansible]# git log --pretty=oneline
96f7b87b2a433cf2182909b0e8238378169112a9 Fixed Plesk init_conf issues
2c4145615af4f24f265eadfa729a4b5a84d01afd Initial commit

[root@app-dev ansible]# git status
# On branch master
nothing to commit (working directory clean)

[root@app-dev ansible]# git remote show origin
* remote origin
  Fetch URL: http://dev.domain.com/ansible/.git
  Push  URL: http://dev.domain.com/ansible/.git
  HEAD branch: master
  Remote branch:
    master tracked
  Local branch configured for 'git pull':
    master merges with remote master
  Local ref configured for 'git push':
    master pushes to master (up to date)
</code></pre>

<p>On the remote repository:</p>

<pre><code>[root@www ansible]# git log --pretty=oneline
9aef656c5800cb4f5d46270934899994eabe1580 Added readme file - TEST
96f7b87b2a433cf2182909b0e8238378169112a9 Fixed Plesk init_conf issues
2c4145615af4f24f265eadfa729a4b5a84d01afd Initial commit
</code></pre>

<p>So the remote repository has one more commit which the local one is not seeing when running a <code>git pull</code>.</p>

<p><strong>Update:</strong></p>

<p>Running <code>git fetch --force &amp;&amp; git reset --hard origin/master</code> on the local repository returns this (still not the most recent commit):</p>

<pre><code>[root@app-dev ansible]# git fetch --force &amp;&amp; git reset --hard origin/master
HEAD is now at 96f7b87 Fixed Plesk init_conf issues
</code></pre>

<p>Running <code>git status</code> on remote repo:</p>

<pre><code>[root@www ansible]# git status
# On branch master
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       playbook.zip
nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p>What am I doing wrong and how can I get the local to pull the most recent version from the remote repo?</p>
","11","3420543","0","0"
"15002135","478573","2013-02-21 12:20:17","0","247","<git><git-pull>","git - when doing git pull, I got message Fast-forward .gitignore and did nto get some part of the code base","<p>Yesterday, the developer I work with did some branch cloning to accomplish what he needed to accomplish, but when I did a git pull, the system pulled some items, and then I got a Fast-forward
 .gitignore on some of the files which seem to not have gotten added.</p>

<p>But when I did git pull origin master the system told me that the branch is already up to date.</p>

<p>Is there a way I can get the files that did not get pulled? And could someone please help me understand what is happening? Here is the message from the original pull:</p>

<pre><code>remote: Counting objects: 33, done.
remote: Compressing objects: 100% (19/19), done.
remote: Total 20 (delta 13), reused 0 (delta 0)
Unpacking objects: 100% (20/20), done.
From https://bitbucket.org/genadinik/fundraising
   a49bd87..eef5124  master     -&gt; origin/master
Updating a49bd87..eef5124
Fast-forward
 .gitignore                                            | 140 ++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++
 Crashlytics.framework/Versions/A/Crashlytics          | Bin 1893656 -&gt; 1911576 bytes
 Crashlytics.framework/Versions/A/Resources/Info.plist |  20 ++----------
 Crashlytics.framework/run                             | Bin 448880 -&gt; 372912 bytes
 Fundraising/AppDelegate.m                             |   5 +++
 Fundraising/Fundraising-Info.plist                    |   2 +-
 Fundraising/en.lproj/MainStoryboard_iPhone.storyboard | 144 +------------------------------------------------------------------------------------
 7 files changed, 149 insertions(+), 162 deletions(-)
 create mode 100644 .gitignore
</code></pre>
","7","478573","",""
"50230528","7527037","2018-05-08 09:39:21","0","264","<git><repository><git-merge><git-rebase><git-pull>","git pull remote branch V/S git merge remote/branch V/S git rebase remote/branch","<p>Consider my forked repo is mapped with the remote <code>origin</code> and the parent repo mapped to <code>upstream</code>.</p>

<p>Seems like, all the 3 commands below can be used to keep the <code>master</code> branch of <code>origin</code>, up to date with the <code>master</code> branch of <code>upstream</code>.</p>

<pre><code>git pull upstream master

git merge upstream/master

git rebase upstream/master
</code></pre>

<p>Please help me understand if there are any differences between these three commands.</p>
","1","7527037","",""
"33258056","163394","2015-10-21 11:23:07","8","2801","<git><git-merge><git-rebase><git-pull>","Why for git pull merging is the default behavior?","<p>Usually when we update our local repository with new origin commits we do git fetch, git rebase. But we don't do git fetch git merge. Usually, the reason is that we don't want to add a new commit (merge commit) but just want to get all new commits on top of our code. So why then the default behavior for git pull is not with merge. I know that we can change it, but is there is better reason to use fetch-merge over fetch-rebase.</p>
","1","163394","0","0"
"16699689","2062384","2013-05-22 19:03:09","8","6515","<git><git-pull><git-gc>","git gc and git pull locks up machine and never finishes","<p>When running <code>git gc</code>, git gets up to 99% complete and then locks up.  I let it run all night and it never finished, and did not seem to progress.  Generally I have to hard-reset the machine to recover because everything locks up.  Because the machine becomes completely unresponsive I can't get <code>top</code> or <code>htop</code> statistics.</p>

<p>I decided to ignore that problem for awhile.  Today however, when running a <code>git pull</code>, git decided to auto pack the repository, which triggered this same error.  </p>

<p>This is where it gets stuck:</p>

<pre><code>Auto packing the repository for optimum performance. You may also
run ""git gc"" manually. See ""git help gc"" for more information.
Counting objects: 428464, done.
Delta compression using up to 4 threads.
Compressing objects:  99% (93702/93718)
</code></pre>

<p>This is a Qt 4.8 C++ project on Fedora 17.  I have 8GB of RAM and the partition holding the project is 33G with 27G used (88% full). </p>

<p>What could be causing this problem?  If the machine lacks resources for running <code>git gc</code>, is there a way to tell git not to auto pack?</p>
","0","2062384","0","0"
"50076703","5816","2018-04-28 12:47:31","1","77","<git><git-pull><git-am>","How do you fake git pull when the network is down?","<p>I don't have network connectivity to allow git fetch to work, but I do have remote desktop access so I am trying to use git format-patch and git am to transfer the commits.</p>

<p>However it appears that the patch gets a new commit number when applied, so you'd end up having to do a merge when the network is restored.</p>

<p>Is it possible to get the effect of a pull by transferring patch files?</p>
","7","5816","",""
"42907433","","2017-03-20 15:21:10","0","64","<git><bitbucket><git-pull>","git pull terminal allow everyone","<p>We have a staging server and at the moment, when I go to the server in the terminal and perform a <code>git pull</code>, everything works fine. When my colleague tries it, he's asked for my password. How can I change this so that everyone is able to perform a pull on that server and not just me?</p>
","1","","",""
"61797976","7431197","2020-05-14 12:58:19","1","138","<git><github><push><git-push><git-pull>","Why 'git push'(without -f) overwrites the remote history? [GitHub]","<p>I had one remote repository where I made some local commits(~6 commits) in let's say repo A and pushed those commits to GitHub and then I made some changes that I didn't commit or pushed.</p>
<p>Later I renamed that repo in GitHub and instead of update the references in the local one, I cloned it to another directory, let's say local repo B, and I made more commits(~30 commits) and pushed them and I deleted the repo B.</p>
<p>Then I noticed that the repo A has unpushed changes, I didn't pull the new commits, just committed the changes, and this is when the history diverged and pushed them with <code>$ git push</code>(without -f or --force) then got the following output:</p>
<pre><code>...
remote: This repository moved. Please use the location:
remote: &lt;new URL of the repo&gt;
...
 + 3d93603...cec405b master -&gt; master (forced update)
</code></pre>
<p>It replaced all the commits pushed from the local repo B</p>
<p>Later I managed to recover those commits with this using the <a href=""https://stackoverflow.com/a/61784279/7431197"">remote GitHub's reflog</a>.</p>
<p>My question is why this happened? I didn't know git can overwrite the remote history without using <code>-f</code>, also that means <code>git pull</code> could rewrite the history like <code>git push</code> did it?</p>
<p>I never touched my push.default config, my version is 2.17.1, this is the <a href=""https://api.github.com/repos/EGA-SUPREMO/RPG-Game-template/events"" rel=""nofollow noreferrer"">link to the GitHub API events of the repo</a> and I haven't done any special changes to the .gitconfig if that helps.</p>
<p>Edit:
I replicated the experiment and now it gives me errors like torek pointed out, at this point, I just think this was caused by a bug.</p>
","3","7431197","0","0"
"24888549","3544484","2014-07-22 13:20:39","1","911","<git><github><webserver><git-pull>","issues pulling to server from git using 'git pull origin master'","<p>I am trying to pull from GIT to my webserver.</p>

<p>I am going into my server via SSh via my Mac terminal and doing the following:</p>

<pre><code>philips-air:~ philiplocke$ ssh whatever@whatever.net
Last login: Tue Jul 22 07:47:53 2014 from 151.226.30.206
joostrap@serv01 [~]# cd public_html
joostrap@serv01 [~/public_html]# cd portfolio
joostrap@serv01 [~/public_html/portfolio]# git pull origin master
Password for 'https://whatever@github.com': 
From https://github.com/whatever/portfolio
 * branch            master     -&gt; FETCH_HEAD
/usr/libexec/git-core/git-pull: line 263: tr: command not found
There are no candidates for merging among the refs that you just fetched.
Generally this means that you provided a wildcard refspec which had no
matches on the remote end.
</code></pre>

<p>What does this mean?</p>

<pre><code>/usr/libexec/git-core/git-pull: line 263: tr: command not found
There are no candidates for merging among the refs that you just fetched.
Generally this means that you provided a wildcard refspec which had no
matches on the remote end.
</code></pre>

<p>I have my git config setup as follows:</p>

<pre><code>[core]
    repositoryformatversion = 0
    filemode = true
    bare = false
    logallrefupdates = true
    ignorecase = true
    precomposeunicode = false
[remote ""origin""]
    url = https://whatever@github.com/whatever/portfolio.git
    fetch = +refs/heads/*:refs/remotes/origin/*
[branch ""master""]
    remote = origin
    merge = refs/heads/master
</code></pre>

<p>Results of git fetch, git remote -a &amp; git status:</p>

<pre><code>joostrap@serv01 [~/public_html/portfolio]# git fetch
Password for 'https://fastnetwebdesign@github.com': 

joostrap@serv01 [~/public_html/portfolio]# git remote -a
error: unknown switch `a'
usage: git remote [-v | --verbose]
   or: git remote add [-t &lt;branch&gt;] [-m &lt;master&gt;] [-f] [--tags|--no-tags] [--mirror=&lt;fetch|push&gt;] &lt;name&gt; &lt;url&gt;
   or: git remote rename &lt;old&gt; &lt;new&gt;
   or: git remote remove &lt;name&gt;
   or: git remote set-head &lt;name&gt; (-a | --auto | -d | --delete |&lt;branch&gt;)
   or: git remote [-v | --verbose] show [-n] &lt;name&gt;
   or: git remote prune [-n | --dry-run] &lt;name&gt;
   or: git remote [-v | --verbose] update [-p | --prune] [(&lt;group&gt; | &lt;remote&gt;)...]
   or: git remote set-branches [--add] &lt;name&gt; &lt;branch&gt;...
   or: git remote set-url [--push] &lt;name&gt; &lt;newurl&gt; [&lt;oldurl&gt;]
   or: git remote set-url --add &lt;name&gt; &lt;newurl&gt;
   or: git remote set-url --delete &lt;name&gt; &lt;url&gt;

    -v, --verbose         be verbose; must be placed before a subcommand

joostrap@serv01 [~/public_html/portfolio]# git status
On branch master
Your branch is up-to-date with 'origin/master'.
nothing to commit, working directory clean
joostrap@serv01 [~/public_html/portfolio]# 
</code></pre>

<p>git branch -a</p>

<pre><code>joostrap@serv01 [~/public_html/portfolio]# git branch -a
* master
  remotes/origin/master
  remotes/origin/revert-2-master
joostrap@serv01 [~/public_html/portfolio]# 
</code></pre>
","6","3544484","0","0"
"62237728","13666914","2020-06-06 20:35:54","-1","2270","<git><git-pull><pull>","undo git pull of project","<p>I do by error pull of a project on Github in local project so all project in local are deleted and replace by the github project.</p>

<p><strong>note:</strong> the project on Github is Flutter project and the local project is Laravel one.</p>

<p>How can I find my Laravel project?</p>

<p>this some code maybe help to resolve this issue </p>

<pre><code>$ git status .
On branch master
Untracked files:
(use ""git add &lt;file&gt;..."" to include in what will be committed)
    test.sh
nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>
","2","13666914","",""
"62241410","12277111","2020-06-07 05:53:06","0","345","<c#><git><checkout><atlassian-sourcetree><git-pull>","Load Failed error on a project (of multiple projects in a Solution), after Checking out a git branch from SourceTree","<p>I was trying to Checkout a remote branch (ModuleA) on Source-tree to my Local Repo. The checkout was successful, however one of the Projects of the Solution (the solution contains 17 projects in all) did not check out correctly. when I open the solution on my Visual Studio 2019, it shows the Project Load Failed. it is missing the <code>.csproj</code> file in the physical location. And when i try to Reload it says </p>

<blockquote>
  <p>""Value Does not fall within the expected range""</p>
</blockquote>

<p>I tried to use the Pull and Fetch options again, but no luck. Is there any way I can pull that particular project from the remote? Is there a workaround?
I have tried various suggestions mentioned online, but it mostly asks me to Delete branch and try again. And I am new to SourceTree (and clearly do not like it, for all the unclear messages it shows, without hinting on how to fix it), So please ignore my lack of knowhow on this. </p>

<p>Note: If it helps, I was earlier having issues with this Branch (ModuleA), with Commit and Push of some code i had done, which was not important and had tried to discard / Reset also. But in vain, so I had deleted the whole Branch. And now when I'm trying to start afresh by checking out the branch from remote, I have this issue. Also Note I had two other branches, which were also deleted. </p>
","3","12277111","",""
"68432786","9113679","2021-07-18 20:19:11","0","30","<git><git-pull><git-checkout>","After doing `git pull` in a local repository, is it possible to find out which commit was the last before the git pull?","<p>I did a git pull. Then, a fast forward merge happened and multiple objects and commits were added to my local repository.</p>
<p>Some things went wrong and I would like to go back to how the local repository was before pulling new objects from upstream.</p>
<p>Hence, I would like to <strong>checkout the last commit</strong> before pulling. The problem is that I <strong>do not</strong> remember what was the last commit before pulling.</p>
<p>Is there a command to show the last commit before pulling? Maybe another command that shows what as added on the last git pull?</p>
<p>Thanks.</p>
","3","9113679","",""
"60389289","1084174","2020-02-25 07:15:46","0","53","<ios><git><directory><version-control><git-pull>","Why git pull rebase does not update my local folder?","<p><strong>Why git pull rebase does not update my local folder?</strong></p>

<p>I have below groups in one of my Git version controlled iOS projects,</p>

<pre><code>-- App
-- Libs
</code></pre>

<p>I see, for my project in Xcode, group name and physical folder name for <code>Libs</code> folder is same (<em>i.e. CamelCased</em>) but for all other team mates, the group shows CamelCased where their physical folder name is showing divergent (<em>smallcase, <code>libs</code></em>). I have done <code>git pull --rebase</code> and got the latest of remote repository. But still the folder name does not get updated.</p>

<p>Inside <code>Libs</code> folder we have some library and surprisingly app is building fine for all members including me.</p>

<p>Why Git cannot detect the divergence between local physical folder and remote origin folder name? What should I need to do to make my local code exactly same as origin? Note that, when I clone the project in a new location, I see the folder name is small cased <code>libs</code>.</p>

<p><code>git prune</code> did not help as well.</p>
","5","1084174","",""
"68441829","2761641","2021-07-19 14:01:59","1","38","<git><macos><bitbucket><git-commit><git-pull>","When can it happen that you take a pull and you see automatically some changes in the git status?","<p><em>emphasized text</em>
<BR/><strong>MAC OS</strong><BR/><BR/></p>
<p><a href=""https://i.stack.imgur.com/wUMeS.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/wUMeS.png"" alt=""enter image description here"" /></a></p>
<p>After taking pull in develop branch, seeing two files removed automatically. any one know when can this happen?</p>
<p>I took a pull in develop branch, and instead of seeing a clean deck, i.e. no changes, I am seeing two files removed.</p>
<p>N.B. These two files were not removed by me, neither they were removed before taking pull.
Before taking pull, there were no uncommitted changes in the repo.</p>
<p>When can it happen that you take a pull and you see automatically some changes in the git status?</p>
","11","2761641","",""
"4157189","97101","2010-11-11 17:19:48","708","889439","<git><git-pull>","How to `git pull` while ignoring local changes?","<p>Is there a way to do a <code>git pull</code> that ignores any local file changes without blowing the directory away and having to perform a <code>git clone</code>?</p>
","4","97101","0","0"
"68445734","472501","2021-07-19 19:03:54","0","130","<git><git-pull>","Local git repo corrupted? All files recognised as new and pull failed - Cannot lock ref, reference broken","<p>I work on a repo with others, of which, we commit/pull from a bitbucket repo.</p>
<p>I needed to do a pull, but when I tried I got an error that a reference was broken in my IDE, as below:</p>
<p><a href=""https://i.stack.imgur.com/avBD3.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/avBD3.png"" alt=""enter image description here"" /></a></p>
<p>In addition to this, in my IDE it seems to show that all the files are &quot;new&quot; and shows they need committing; when in actuality, there shouldn't be anything that needs to be committed.</p>
<p>I used the solution <a href=""https://stackoverflow.com/a/50346081/472501"">here</a>, so I ran:</p>
<pre><code>rm .git/refs/remotes/origin/2.0
</code></pre>
<p>After that I ran the <code>git fsck</code> command, but I got the below output:</p>
<pre><code>error: refs/heads/2.0: invalid sha1 pointer 0000000000000000000000000000000000000000
error: invalid HEAD
error: bad ref for .git/logs/HEAD
error: bad ref for .git/logs/refs/heads/2.0
dangling blob 08f12165c07042e539c6ac88b365a96d35bef0a4
dangling blob 9a62767cc1463b4892d58f7d55a7c7c7d9e5d735
dangling blob 31737e10f9c73a51d0b30d0075f3a0d26cc7e9a0
dangling commit 609378008f36807d5c2d1062cfbedec0cc467943
dangling blob 969319da42df899791d3c85e3b3c8ad0742968b0
dangling blob b8a5369235ac3abd2628b7df85f0693126fe70c5
dangling blob f7e58848298e6c1efffa3ebc2dd9b18d1fbc1d09
dangling blob 0d2696322077d2483d9ee768269600e0010456c6
dangling blob 8a38dbed0980daed0323980af726de6bf66e8663
dangling blob 9238c0fad597aa49c1270b301dca8c6b9dfd3da0
dangling blob 166c6068c051c34b36cc44f00e9c36f7a6c22cda
dangling blob 263ce1d6f1cc89702562499e664cdc5d312cea3d
dangling blob 47fe36f31eea1bbad3d90d90637c5840718e1052
dangling blob b70eed498d36e1c577837be651cebb87bcad383c
dangling blob 861f5f6572390895b68134495c1c4ac7dea1a363
</code></pre>
<p>So I am unsure where to go from here?</p>
","3","472501","",""
"15548010","34134","2013-03-21 12:47:35","1","121","<git><github><git-merge><git-pull>","When pulling from a team repo from github, git forces me to make a merge commit, no conflicts","<p>I've been working with another person on a repo we host at github. Everytime I or he pulls, git forces us to make a merge commit (vim opens up with a commit description), although we were working on different files and there are certainly no conflicts.</p>

<p>Shouldn't new commits be just added without an additional merge-commit?</p>
","0","34134","",""
"15602037","72321","2013-03-24 18:01:28","60","73590","<git><git-rebase><git-pull>","git rebase upstream/master vs git pull --rebase upstream master","<p>Is there a difference between <code>git rebase upstream/master</code> and <code>git pull --rebase upstream master</code>, and if so, what? The remote could be any remote, not necessarily upstream.</p>
","0","72321","0","0"
"68721404","15398309","2021-08-10 05:17:04","-1","234","<git><ubuntu><github><git-pull>","How do I undo the last git pull on master in my server","<p>I ran a git pull command on my master branch, which broke the web app. I want to return to the previous state, but I couldn't find a way to undo the last pull. Help!</p>
","1","15398309","",""
"16318973","984621","2013-05-01 13:25:48","-1","98","<git><github><gitignore><git-pull>","How to pull a directory that is in .gitignore?","<p>In the <code>.gitignore</code> is a directory that I would need to pull on my localhost. I don't see this directory in the project structure o Github, but when I try to search it, I see this directory in the <code>.gitignore</code> file.</p>

<p>I pulled the project from Github on my localhost, but this directory is missing.
How can I get that directory?</p>

<p>Thanks</p>
","0","984621","",""
"32593751","4629183","2015-09-15 19:07:44","-2","951","<git><gerrit><rebase><git-pull>","Why we use Git pull --rebase and not git pull in gerrit","<p>I am new in gerrit and i had a doubt that why we not use the simple pull like Git in gerrit and instead, we use git pull --rebase?</p>

<p>Secondly (different question), can you please state me why we need to give a special target reference while pushing the changes in gerrit?</p>
","3","4629183","",""
"32708671","4187805","2015-09-22 04:57:25","0","61","<html><git><github><git-pull>","Can I pull from git to my domain host for a private website?","<p>I have a private website and I have both a domain/hosting from a provider. I have been using git to version control it to github (through git, using terminal) so I can keep track of changes, and I found it rather tedious to commit/push to git, and then zip all the files, upload them to my host, delete old ones, unzip, etc. Is there a way I can “push”  the files to both github AND my host, eliminating needless steps? My host is ASmallOrange.
I should specify that all I have is HTML, CSS and JS on it, I don't think I have a backend (that I set up at least). I just have a css folder, image folder, and index.html at the root.</p>
","0","4187805","",""
"32721757","3250087","2015-09-22 16:11:27","4","652","<git><git-pull>","Why git pull is not pulling the newly created branch that was pushed to remote?","<p>I thought <code>git pull</code>  = <code>git fetch</code> + <code>git merge</code></p>

<p>This is good for sometime to pull the changes in remote branches, until encountering a situation where in <code>git pull</code> is not pulling the newly created branch. By newly created branch, what I meant is that ""someone else""
just created a new branch and pushed to remote, and I tried to do a <code>git pull</code>, but I am not getting the new branch onto my list of remote branches.</p>

<p>I was able to get this newly created branch only after I did a <code>git fetch</code> and then <code>git merge</code>.</p>

<p><strong>Question:</strong>
So does this mean, always do a <code>git pull</code> only when you want to pull changes of an existing branch,
and do a <code>git fetch</code> + <code>git merge</code> when you want to pull a newly created branch?</p>

<p><strong>Edit:</strong></p>

<p>Thanks to @uDaY . Now I understand how to do this in <em>git bash</em>. But wondering if we want to do this from Eclipse IDE, how can we make aware to Eclipse git pull utility to execute a <code>git pull -all</code> instead of the default <code>git pull</code>? Any thoughts?</p>

<p>Update1 : Ignore it, I will post as new question. </p>

<p><strong>Update2: 09/23/2015</strong> Well, Another question is not needed, I figured it out. Here it is,</p>

<blockquote>
  <p>Pull is basically fetch + merge</p>
</blockquote>

<p>So unless you define what fetch has to really fetch, you cant expect a pull to pull what you intend to pull!</p>

<p>What this means is , In eclipse Since you cannot configure a <code>pull</code>, you must have to configure '<code>Fetch</code>'.
ie: Right click on </p>

<blockquote>
  <p>project->Team->Remote->Configure Fetch from Upstream</p>
</blockquote>

<p>.
See if some mapping is defined under '<em>refmappings</em>'. Whatever, go to <em>Advanced</em>, and a new window will popup
which says '<em>Configure Fetch</em>' - Fetch Ref Specifications-Select refs to fetch
Make sure you have Source Ref as ""refs/heads/<em>""  and Destination Ref as ""refs/remotes/origin/</em>"" , and Force Update checkbox as checked.</p>

<p>I also did one extra step, by selecting the dropdown for '<em>Source ref:</em>' and picked up the new branch name eg: <code>newbranch</code>, 
selecting the dropdown for '<em>Destination ref:</em>' and picked up the new branch name eg: <code>origin/newbranch</code>, and clicked on ""<em>+ Add Spec</em>"",
and click on ""<em>Finish</em>"". Now <em>Save</em> it.</p>

<p>Finally do a <em>pull</em>. </p>
","0","3250087","0","0"
"32753678","1692342","2015-09-24 05:00:19","1","82","<git><gitignore><git-pull>","Avoid pulling files which are in .gitignore","<p>I have git repository and I am collaborating with other developers. I have written added folders in my <code>.gitignore</code> file to ignore them. </p>

<p>However whenever I do <code>git add .</code> , it adds the files from these folders. Also when I pull the latest code from, using git pull it fetches the files from the folders listed in <code>gitignore</code>. Is there a way to avoid getting the latest changes for the files mentioned in <code>.gitignore</code>?</p>

<p>My <code>.gitignore</code> file is as shown below:</p>

<pre><code>/log/*
!/log/.keep
/tmp
/db
/bin
/lib
/public
/test
/vendor
/.idea/*
.idea/
</code></pre>
","0","1692342","",""
"33573597","1190690","2015-11-06 18:48:00","0","66","<git><bitbucket><git-pull>","Undo everything git did by using git pull command","<p>I had a previous project code and I started using git in between but due to some reasons I need to get back the code that was before I added git. What I did is as follows.</p>

<p>I ran git init command than I ran git remote add origin  command than I ran git pull  command which updated all files I think although files were same.</p>

<p>I need to get back files without updation. I started getting 500 error after I ran git pull command.</p>

<p>Please help.
Thanks</p>
","0","1190690","",""
"33655556","2379279","2015-11-11 16:49:23","0","438","<eclipse><git><github><synchronization><git-pull>","New to git--just need to sync one file","<p>I managed to finally get EGit in Eclipse to work (still don't know how) and I've committed/pushed <a href=""https://github.com/SturmB/Scheduling"" rel=""nofollow"">my current project</a> up to GitHub. So far, so good. Looking at it on GitHub's site, I see it wants me to make a README.md file to provide a nice description. Fine, I think, I'll just use the tool it's providing me with to get it started, then have it sync back down to my local computer where I can further modify it and keep it synced.</p>

<p>So I created a quick README.md file on GitHub's site. But now, when I perform a ""Pull"" action in Eclipse, I am told that there's nothing new to pull, or something like that. Why is it not getting the new file that was created on GitHub's site, and how can I get it so that I can make changes to it whenever I want?</p>
","2","2379279","",""
"17119794","2488041","2013-06-15 02:59:34","1","7882","<xcode><github><git-pull>","How to pull files from github branch to xcode directly?","<p>I have a project created for me by teacher and I have to improve it. He created a repo on Git Hub with branch for me. I'm trying to pull the project files from that branch directly to Xcode and Xcode refers to the branches that I have created which are empty, not the master one. Can't find any adequate manual for that as well... Please help...</p>
","0","2488041","0","0"
"17153456","","2013-06-17 17:36:03","1","203","<git><branching-and-merging><git-pull><remote-branch>","Error in git book or I misunderstood?","<p><a href=""http://git-scm.com/book/en/Git-Branching-Remote-Branches#Tracking-Branches"" rel=""nofollow"">Here</a> you can read:</p>

<blockquote>
  <p>Tracking Branches Checking out a local branch from a remote branch
  automatically creates what is called a tracking branch. Tracking
  branches are local branches that have a direct relationship to a
  remote branch. If you’re on a tracking branch and type git push, Git
  automatically knows which server and branch to push to. Also, running
  git pull while on one of these branches fetches all the remote
  references and then automatically <em>merges in the corresponding remote
  branch</em>.</p>
</blockquote>

<p>Instead of <em>merges in the corresponding remote branch</em> shouldn't day <em>merge in the corresponding local branch</em>?</p>
","0","","0","0"
"33757700","4046443","2015-11-17 13:04:47","-1","800","<git><server><git-pull><git-clone><git-fsck>","git server error: corrupt loose object on remote","<p>I have an error in response to 
<code>git fsck --full</code> 
which is <code>corrupt loose object '...'</code> 
on a git server machine.
I don't have a local repository. I can't clone. I don't have the object in repo/objects/...</p>

<p>Do you have any ideas on how to fix this?
The object is not inside the repo.git/objects directory. 
I can ssh inside the server machine.</p>

<p>any suggestion is highly appreciated.
Thanks</p>

<p>EDIT</p>

<p>I've tried with </p>

<pre><code>git gc --prune
</code></pre>

<p>but i'm receiving the same error</p>

<p><code>error: inflate: data stream error (invalid distance code)
error: corrupt loose object '4e4c................'
fatal: object 4e4c............. is corrupted
error: failed to run repack</code></p>

<p>EDIT 2</p>

<p><code>git gc --aggressive --prune=now</code></p>

<p>gives me the same error
and also</p>

<p><code>git gc --aggressive --prune=all</code></p>

<p>With</p>

<p><code>git ls-tree 4e4cc....</code></p>

<p>I have the same error</p>

<p>EDIT 3</p>

<p>I've found a local repo(of 10GB) with the last commit and I can push to the remote (of 20GB). I can also pull from that local. Why they are different in size? I still can't clone... and the obj 4e4c............. is not inside .git/objects/</p>
","0","4046443","",""
"50691366","3168809","2018-06-05 02:57:42","1","29","<git><git-pull>","git pull automatic forced updated without changes","<p>I am using a git svn mirroring system, more or less based on <a href=""https://blog.tfnico.com/2011/09/git-svn-mirror-without-annoying-update.html"" rel=""nofollow noreferrer"">these blogs</a>, and it works without any problem. Committing from a developers machine with <code>git svn dcommit</code> to the main repository and pulling from the git-svn mirror, all works without re-pulling any changes from either svn or git.</p>

<p>But, when pulling, I see strange things I have never seen from git:</p>

<pre><code>$ git pull
From server:repository
 + 10cc435f163...953f9564671 trunk      -&gt; origin/trunk  (forced update)
Already up to date.
$
</code></pre>

<p>Now first of all I didn't add a <code>--force</code> command line option, nor did anything change as far as I can see (git hashes of the commits etc).</p>

<p>What does happen here?</p>
","0","3168809","",""
"17222440","1816471","2013-06-20 19:42:59","92","68493","<git><git-pull>","Is there a ""git pull --dry-run"" option in Git?","<p>Is there such a thing as <code>git pull --dry-run</code> to see how stuff will be merged before it messes up my working tree?</p>

<p>Right now I am doing:</p>

<pre><code>git fetch origin &amp;&amp; git merge --no-commit --no-ff
</code></pre>

<p>I did not see anything in the man page for 'git-pull' related to it.</p>

<p>To clarify, I just need it in an Ant script for deployment to see if there are conflicts when doing <code>git pull</code>, then back off exit out of build, fail deployment and leave that directory tree the same it was before <code>git pull</code>.</p>
","3","1816471","0","0"
"33815424","2005291","2015-11-19 22:19:39","9","6496","<git><git-rebase><git-pull>","after git rebase my local branch and remote branch have diverged","<p>I have a <code>my-feature</code> branch that is pushed up to origin for code review. It is <strong>not shared</strong>. Eventually it will get merged into my <code>develop</code> branch which <strong>is shared</strong> amongst my team. I'd like to rebase my <code>develop</code> branch into <code>my-feature</code> to keep the history cleaner and then merge my feature branch into develop. This is what I have been doing:</p>

<pre><code>$ git checkout my-feature
// do some work. make commits.

$ git rebase develop
// fix some conflicts

$ git add .

$ git rebase --continue
</code></pre>

<p>After I have rebased successfully, I check the status:</p>

<pre><code>$ git status
On branch my-feature
Your branch and 'origin/my-feature' have diverged,
and have 155 and 1 different commit each, respectively.
  (use ""git pull"" to merge the remote branch into yours)

$ git what do I do here?
</code></pre>

<p>I have to idea what to do here. If I <code>git pull</code>, then I've noticed that I will get some conflicts which doesn't make sense. Some people say to force push but I'm nervous about that. <strong>Is it normal to force push my topic branch to origin?</strong> So long as no one else uses that branch?</p>
","0","2005291","0","0"
"33833087","66814","2015-11-20 17:55:12","0","2440","<git><git-merge><git-pull>","Does git pull affect remote tracking branch?","<p>As we know git pull = git fetch + git merge.  But my understanding with git merge is it only affects the branch that you are merging into, not the branch you are merging from.</p>

<p>So in the case of git pull, I imagine it looks like this:</p>

<pre><code>git fetch origin
git merge origin/master
</code></pre>

<p>If that's the case, new changes from origin will be replayed on master, but origin/master will not have the changes committed to local master branch. Does git pull make sure remote tracking branch (origin/master) contain all the new changes made in master after git merge or is that done when you do git push?</p>
","5","66814","",""
"69231123","15612094","2021-09-18 02:26:51","-1","123","<git><github><git-pull>","How do i pull code from another branch on my github repository","<p>Ok, I had some challenges with my system and then decided to format it. comin g back, I would like to continue with my project and I would like to pull it from another branch(master)
I tried <code>git pull blog master</code> That didn't work. I need help in pulling from master rather it just pulled from main.</p>
<p>Thanks for your contribution</p>
","0","15612094","",""
"50892009","275088","2018-06-16 21:43:58","1","93","<git><git-pull>","How does 'git pull <remote> <branchname>' work?","<p>I'm a bit confused by this part of the <a href=""https://git-scm.com/docs/git-pull"" rel=""nofollow noreferrer""><code>git-pull</code></a> documentation:</p>

<blockquote>
<pre><code>$ git pull origin next
</code></pre>
  
  <p>This leaves a copy of <code>next</code> temporarily in <code>FETCH_HEAD</code>, but does not
  update any remote-tracking branches.</p>
</blockquote>

<p>Does this form of <code>git pull</code> actually get new commits from the remote repository into the local one?</p>
","1","275088","",""
"18193154","542550","2013-08-12 17:34:02","0","222","<git><git-merge><git-push><git-pull><git-reset>","Reverting a git pull that's already been pushed","<p>I'm not sure if this is a duplicate or not as it's kind of a one off scenario:</p>

<p>I have a ""beta"" branch, and started a new ""refactor"" branch.</p>

<ol>
<li>I did a bunch of code in ""refactor"" branch.</li>
<li>I pulled latest changes from beta into refactor (<code>git checkout refactor &amp;&amp; git pull origin beta</code>)</li>
<li>My changes were ready, so I checked out beta, and pulled changes from refactor into beta.  (<code>git checkout beta &amp;&amp; git pull origin refactor</code>)</li>
<li>Realized my beta branch wasn't up to date, so had to do a <code>git pull</code> to pull latest into beta.</li>
<li>Now that beta branch was up to date, did another <code>git pull origin refactor</code> to ensure the latest was there (got an auto-commit message that refactor was being merged into beta).</li>
<li>I pushed my code :(</li>
</ol>

<p>So now I'm realizing the two things I did wrong:</p>

<ol>
<li>In step 3, I should have done a git pull first so that I had the latest changesets in beta</li>
<li>In step 3 also, I realized i should have called <code>git merge refactor</code> instead of <code>git pull origin refactor</code> (don't ask me why I did this, it's Monday and I just wanted to get my awesome refactor code into beta to start testing).  I now realize if I had done both of these things, none of the later steps would have been needed.</li>
</ol>

<p>So my question is this: technically, all the code is there and looks fine, but the network graph on github looks super funky, and I don't have one clean ""merge"" commit that I can easily roll back to if my merged branch needs to be reverted, instead beta just now has all of my individual commits from the refactor branch.  Is there an easy way I can roll back my stupified merge and do it the cleaner way?</p>

<p>I have tried doing <code>git checkout beta &amp;&amp; git reset --hard beta@{""1 hour ago""}</code> , but the problem is that gets me to the <em>outdated</em> local version of beta instead of what should have been the latest version before I issued the merge when I should have done the git pull first.  I feel like there should be a way to do like <code>git reset --hard origin/beta@{""1 hour ago""}</code> to reset to the <em>remote</em> beta branch @ 1 hour ago, and then do the <code>git merge refactor</code>?  Would I just be able to push those changes and be sure that the remote commits were overwritten?</p>

<p>Thanks for any help in advance!  I'm hesitant about doing anything with ""git reset"" as the refactor is pretty major, and there are a lot of pending changes in beta that I didn't do, so I'm more worried about screwing up a reset and losing code than I am worried about having to manually revert commits from the refactor branch that were pulled in.</p>
","0","542550","0","0"
"18208995","1197249","2013-08-13 12:23:34","0","53","<git><version-control><git-branch><git-push><git-pull>","I want to commit but also create branch in git. Is this the correct way?","<p>I have 3 files unstaged.<br>
What I want is to commit and push 2 of them and save the 3rd in a private branch.<br>
If I do git add/git commit for the 2 of them, then git checkout branch name and then git checkout master and THEN git pull followed by  git push am I correct?</p>
","0","1197249","",""
"34739544","3949702","2016-01-12 09:14:51","3","727","<git><rebase><git-pull><pull>","Using revert to state before last git pull --rebase state","<p>I want to revert to the state before my last git pull --rebase request. I dont remember the last commit Id to which I can reset. This change I want to do locally , Any suggestions how to do it. I got the following using git reflog, dont know how to proceed.</p>

<pre><code> &gt;git reflog 
 3b52052 HEAD@{0}: rebase finished: returning to refs/heads/master
3b52052 HEAD@{1}: pull --rebase: checkout 3b520529dd08834067f316658bc450af1d6c5313
44e2c32 HEAD@{2}: clone: from https://xyy@bitbucket.org/abc-api/xyz.git
</code></pre>
","3","3949702","",""
"34760925","5769938","2016-01-13 07:39:08","3","89","<git><git-pull><git-clone>","I cloned a git repository. How do I pull from it into a working directory?","<p>So I cloned an existing (and working) Git repository, for the purpose of experimenting with the clone (instead of pushing stuff into the live production repo).</p>

<p><a href=""https://i.stack.imgur.com/S0dbO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/S0dbO.png"" alt=""enter image description here""></a></p>

<p>It went without incident but now I would like to create a Working Directory to which I can pull from (and from which I can push to) the new ""remote"" repository I just created (cloned).</p>

<p>How do I do that?</p>

<p>I tried pulling to an empty directory with the help of <code>Git Extensions</code>, but all I get in the context menu are operations that do not seem like what I need:</p>

<p><a href=""https://i.stack.imgur.com/N5NAT.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/N5NAT.png"" alt=""enter image description here""></a></p>

<p>Obviously, I am missing a key Git concept here. What am I missing?</p>
","0","5769938","",""
"18274252","137948","2013-08-16 13:16:57","2","4174","<git><git-rebase><githooks><git-pull>","When I do a git pull with rebase, how do I disable the rebase hook?","<p>The command:</p>

<pre><code>git rebase --no-verify
</code></pre>

<p>...allows me to rebase without running the git rebase hook I've created.</p>

<p>But I've also set <strong>git pull</strong> to rebase instead of merge, so now when I do a pull, it runs my rebase trigger. Is there a way to pass the --no-verify option to git pull and have it use the option when rebasing?</p>

<p>(Other than the last resort of creating a wrapper script to temporarily move the triggers out of the way, and move them back again afterwards).</p>
","0","137948","",""
"18314531","2310209","2013-08-19 13:04:51","2","2262","<git><git-push><git-pull>","git push doesn't working?","<p>i am working on master branch cloned by command <code>git clone -b master suhail@192.168.1.201:/home/github/jobsite</code></p>

<p>where <code>suhail@192.168.1.201:/home/github/jobsite</code> repository contains a lots of branches</p>

<p>i usually do <code>git pull</code> and <code>git push</code>  to pull and push my works.</p>

<p>now as i want to merge branch <code>forum</code> into <code>master</code>.</p>

<p>so i cloned the branch by command <code>git checkout --track origin/forum</code>, and merged it with master.</p>

<p>now the problem is <code>git push</code> &amp; <code>git pull</code> is not working correctly? </p>
","1","2310209","",""
"18322224","1389890","2013-08-19 20:08:59","0","36","<git><git-pull><git-commit><git-status>","git-pull omits a file","<p>Git is saying everything is up to date but there is a file missing on one node's copy of the source tree. On system A:</p>

<pre><code>$ ls -l
abc.py
xyz.py

$ git add xyz.py
$ git status
nothing added to commit...

$ git commit
nothing added to commit...

$ git push
Everything up-to-date
</code></pre>

<p>On system B:</p>

<pre><code>$ git pull
Already up-to-date
$ ls -l
abc.py
</code></pre>

<p>My question is: What happened to file xyz.py on system B? Why did the pull not create it on System B?</p>
","2","1389890","",""
"41888489","2218640","2017-01-27 07:03:02","3","13407","<git><git-pull><git-checkout><git-fetch>","git fetch not working - but checkout working","<p>I am beginner to git and trying some hands on with it on Windows.</p>
<p>I made a repository on Bitbucket. Added Three files ( SAY A , B , C ) to the master branch via Bitbucket online .</p>
<p>Now  i have folder on my local PC , where i used <code>git fetch</code> for getting those three file. Three files are now in local repository.</p>
<p>Now , i added one other file (SAY D )  on bitbucket , and changed the content of all three files (A , B , C ) .</p>
<p>Now if i try to fetch the changes via <code>git fetch MY_REMOTE master</code>  ,  I am not getting any changes in my local. but</p>
<ul>
<li><p>with <code>git pull MY_REMOTE master</code> , I am able to see the changes.</p>
</li>
<li><p>with <code>git checkout MY_REMOTE/master</code> , I am able to see the changes.</p>
<p>So the doubt i have ,</p>
</li>
<li><p><code>git fetch</code> simply copies the changes those are not on the local to the local repo except Local repo have changed the same copy. Why <code>git fetch</code> is not working here ?</p>
</li>
<li><p>I don't understand the purpose of doing <code>git checkout MY_REMOTE/master</code> on Local . Why should i do that ?</p>
</li>
</ul>
","0","2218640","0","0"
"34906054","2605112","2016-01-20 17:00:38","0","110","<git><github><git-pull><git-filter-branch><git-add>","How to remove file from remote repo without doing anything locally in git?","<p>Here's my situation:</p>

<p>I wanted to do a once-and-done push to a git repo.  So, I did the <code>add</code>, <code>commit</code>, and <code>push</code> as usual.  Except, I forgot that I had other files in previous commits that also got pushed.  So, now there are unnecessary files contaminating the repo (remotely) that I pushed to.  I want to remove those unnecessary files.</p>

<p>I don't want to pull from the remote repo because I'm not interested in getting any of those files.  So, I effectively want to do something like a <code>git filter-branch</code> but only on the remote repo.  </p>

<p>How do I remove files from the remote repo without pulling/pushing again locally?</p>
","0","2605112","",""
"18464149","2721370","2013-08-27 11:29:21","4","4161","<git><github><git-merge><git-push><git-pull>","Branch is merging into self on git push","<p>I have a repo set up on GitHub, with a Dev branch, which I clone to my local machine using:</p>

<pre><code>git clone https://github....
</code></pre>

<p>I then switch to my Dev branch using:</p>

<pre><code>git checkout -b Dev
</code></pre>

<p>I then pull just to make sure all is up to date</p>

<pre><code>git pull origin Dev
</code></pre>

<p>I am now in my Dev branch, write some code and add the files using:</p>

<pre><code>git add filename
</code></pre>

<p>I then commit using:</p>

<pre><code>git commit -m ""message""
</code></pre>

<p>I then push using:</p>

<pre><code>git push origin Dev
</code></pre>

<p>This works all good. A second user then comes along and enters some code. At the same time I am working on a separate file but we are working on the same branch. I add and commit as before. However, when I try to push, I receive the following:</p>

<blockquote>
  <p>To <code>https://github.com/ex/ex.git</code>  ! [rejected]<br>
  Dev -> Dev (fetch first) error: failed to push some
  refs to '<code>https://github.com/ex/ex.git</code>' hint: Updates
  were rejected because the remote contains work that you do hint: not
  have locally. This is usually caused by another repository pushing
  hint: to the same ref. You may want to first merge the remote changes
  (e.g., hint: 'git pull') before pushing again. hint: See the 'Note
  about fast-forwards' in 'git push --help' for details.</p>
</blockquote>

<p>I do as it says and perform:</p>

<pre><code>git pull origin Dev
</code></pre>

<p>I can then push as before and all seems well. However, back on GitHub when I check the commit history I see this:</p>

<pre><code> Merge branch 'Dev' of https://github.com/ex/ex into Dev
</code></pre>

<p>amongst the commits I just added. Why is this merge happening? How can I stop this from happening?</p>
","1","2721370","0","0"
"34967726","4606213","2016-01-23 19:21:00","2","345","<git><shell><sh><git-pull><cd>","git pull ignores current work directory in shell script","<p>I'm trying to get some sort of auto-deployment working.</p>

<p>My current post-update hook looks like follows:</p>

<pre><code>#!/bin/sh

for ref in $@
do
        if [ $ref = ""refs/heads/master"" ]
        then
                echo ""Deploying $ref to dev-domain""
                cd ~/www/dev-domain
                echo """" &gt; system/lock
                if ! git pull --ff-only
                then
                        echo ""Failed to pull""
                        exit
                fi
                if ! system/migrateDatabase
                then
                        echo ""Failed to migrate""
                        exit
                fi
                rm system/lock
        fi
done
</code></pre>

<p>But all I get is this:</p>

<pre><code>remote: Deploying refs/heads/master to dev-domain
remote: fatal: Not a git repository: '.'
remote: Failed to pull
</code></pre>

<p>The file lock-file will be placed in the correct place, though.</p>

<p>So, to me it seems like <code>git pull</code> somehow ignored the current working directory... How do I get around this?
Or am I missing something different?</p>
","1","4606213","0","0"
"69312158","15102038","2021-09-24 08:50:25","4","4919","<git><git-merge><git-rebase><git-pull>","git pull VS git pull --no-rebase","<p>What is the difference between <code>git pull</code> and <code>git pull --no-rebase</code>
?</p>
<p>In my understanding the git pull by default does a fetch then a merge. So the no-rebase means merge and therefore these two commands are exactly identical! Is that correct?</p>
","2","15102038","",""
"35015643","752301","2016-01-26 14:03:32","1","2262","<git><git-rebase><git-pull>","git pull --rebase on a remote branch","<p>I have got a question related to the <code>git pull --rebase</code> command: Why isn't it a good idea to use <code>git pull --rebase</code> on remote branches? I know that the rebase command rewrites history. But why (and how and in which situations) could this command be evil? </p>
","1","752301","",""
"42184661","3001352","2017-02-12 05:54:06","5","10855","<git><git-pull><git-fetch>","what is the difference between git pull , git fetch and git rebase?","<p>What are the differences between <code>git pull</code> ,  <code>git fetch</code> and <code>git rebase</code>? I feel pull and fetch are same.</p>
","3","3001352","0","0"
"22973936","689344","2014-04-09 21:06:31","0","52","<git><version-control><git-pull>","How to pull a series of commits from another repository in git?","<p>I have two repositories, <code>A</code> and <code>B</code>. I want to copy all the files in <code>A</code>, with a subset of  their history, into <code>B</code>. <code>B</code> has its own files with history that I'd like to preserve, too; it is not a fresh, new repository.</p>

<p>You see, <code>A</code> has 28,000 commits. All but the most recent 30 or so, I don't care about. For simplicity of discussion, let's say that I'm not interested in commits #1 through #27,970, but I would like to retain the history for commits #27,971 through #28,000.</p>

<p>I've tried two different approaches.</p>

<ul>
<li>Squash commits #1 through #27,970 commits in <code>A</code> (using <code>git rebase -i</code>) into a single commit, and then <code>git pull</code> <code>A</code> into <code>B</code>. The trouble I ran into here as that during the rebase of <code>A</code>, there were a lot of errors about git being unable to apply certain commits. I'm not knowledgeable about these commits in <code>A</code>, so I was unable to fix them. (Plus, it was taking a <em>long</em> time to perform the rebase - many hours and I wasn't done yet.)</li>
<li>Download a snapshot (i.e., no history) of <code>A</code> at commit #27,970 and place that in <code>B</code>, and the do a <code>git add</code> and <code>git commit</code> for the fresh new files. Then create a patch from <code>A</code> (using <code>git format-patch</code>) for commits #27,971 throught #28,000, and apply that patch (using <code>git apply</code>) to <code>B</code>. This all seemed to work fine, except it did not maintain the history of commits for the given files. That is, after applying the patch, it appear that all changes from all 30 commits happened at once: the history was not preserved.</li>
</ul>

<p>There's gotta be a simple way to do this!</p>
","3","689344","",""
"42234839","5670324","2017-02-14 19:42:48","1","2439","<python><git><github><git-pull><gitpython>","How can I use gitpython to run 'git pull alias_name master' where alias_name is a custom alias?","<p>I am relatively new to Python and am attempting to use GitPython to pull changes down from a remote repository to its local counterpart that has already been cloned.</p>

<p>Outside of the script, running 'git pull alias_name master' (Where alias_name is a custom alias) directly from terminal works every time. I verify that the local repo actually updated by comparing the commit SHA between the local instance of the repo and the remote</p>

<pre><code>cd path/to/local/instance/of/repo
git pull alias_name master
git log --pretty=format:'%h' -n 1
</code></pre>

<p>If what is returned above matches the commit SHA for the web interface for the remote repo, I know the local repo has pulled down the latest changes.  Each time I run this from terminal, the SHAs match up and I can see the debugger pull down the latest changes.</p>

<p>When running the following, the script executes without any errors being thrown, but the local repo is not updated because the SHAs do not match up after running the script.</p>

<p>Here is what I have:</p>

<pre><code>import git
from git import Repo

repo= git.Repo(path/to/local/instance/of/repo)
o = repo.remotes.origin
repo.heads.master.set_tracking_branch(o.refs.master)
repo.heads.master.checkout()
o.pull()
o.push()
</code></pre>

<p>I essentially am wondering if there any way to tell gitpython to run 'git pull alias_name master' instead of  'git pull -v origin' (which it appears to be running by default with o.pull())?</p>
","0","5670324","0","0"
"23225351","64586","2014-04-22 16:37:24","1","35","<git><git-pull>","Is it possible to have a specific merge strategy just for 'git pull'","<p>The project I'm on has two branches, ostensibly named STABLE and DEV.</p>

<p>There's been some divergence in a core part of project between the two branches so when merging from Stable to DEV, we're using the <code>ours</code> merge strategy.</p>

<p>However, when pulling from Remote to DEV, we don't want to use the <code>ours</code> merge strategy, otherwise we'll not get the changes we need (if I understand merge strategies correctly)</p>

<p>So I guess the question is: is it possible to use one merge strategy when merging branches, and a different strategy when pulling from remote.</p>

<p>Or is my understanding of merge strategies all wrong?</p>
","7","64586","0","0"
"5102361","631964","2011-02-24 08:53:40","16","19858","<git-pull>","pull command error : Failed connect to github.com:8080","<p>I tried to pull repository so that I can merge the changes made to my repository.<br>
But while using the pull command it gives following error:</p>

<pre><code>$ git pull https://github.com/ShrutiRuparel/depot.git master
error: Failed connect to github.com:8080; 
No error while accessing https://github.com/ShrutiRuparel/depot.git/info/refs

fatal: HTTP request failed
</code></pre>

<p>I tried setting the http proxy but no change.<br>
<code>push</code> command worked perfectly fine but error with <code>pull</code> command.<br>
Any suggestions?</p>
","2","631964","0","0"
"23238713","1486230","2014-04-23 08:22:58","22","11162","<git><git-pull><smartgit>","Can't ""pull"" with smartgit, ""fetch only"" is available","<p>I use <strong>SmartGit</strong> as a GUI for git. But so far, I always have the same problem.
In my projects (all of them), <em>I can't pull</em>, the button is disabled, it's only the ""fetch only"" button which is available.</p>

<p>But if I run the command <code>git pull origin master</code> it <em>works fine</em> and I can continue to use SmartGit as usual.</p>

<p>How to get rid of this problem ?</p>

<p><img src=""https://i.stack.imgur.com/WN0OY.png"" alt=""enter image description here""></p>
","2","1486230","",""
"5144039","514416","2011-02-28 15:37:30","1","7512","<php><git><shell-exec><git-pull>","shell_exec and git pull","<p>I was hoping someone could help, I have a PHP page which uses <code>shell_exec</code> to zip up a directory and run <code>git pull</code> to bring down recent repository changes. </p>

<pre><code>$op = shell_exec(""cd /home/user/git/$repo/$dir/; zip -r /home/user/archives/$dir.$datestamp.zip $dir; cd /home/user/git/$repo/$dir/; git pull"");
</code></pre>

<p>The zip works fine. If I change <code>git pull</code> to for example <code>git log</code> or <code>git status</code> - within my shell_exec, this works also, and I can see the log file. </p>

<p>Just doesn't seem to like git pull.</p>

<p>I saw another similar post to this, but wasn't sure how it was achieved >> <a href=""https://stackoverflow.com/questions/2522941/shell-exec-with-git-pull"">Shell_exec with git pull?</a></p>
","6","514416","0","0"
"42609200","5981201","2017-03-05 13:56:31","2","3636","<git><git-pull>","I ran 'git pull' but still can't automatically merge?","<p>I'm working on a feature branch, which will eventually be merged into <code>origin/develop</code> once my pull request is accepted.</p>

<p>Before pushing my branch up to origin, I ran:</p>

<p><code>$ git pull origin develop</code></p>

<p>After pushing my changes to <code>origin/&lt;feature-branch&gt;</code>, Github says it ""Can't automatically merge"" and that this branch is ""3 commits ahead, 12 commits behind develop"".</p>

<p>What did I do wrong, and how can I make sure my local branch is up to date with <code>origin/develop</code> before pushing up my changes, so that a fast-forward merge is possible?</p>

<p><strong>Workflow</strong></p>

<p>1) <code>$ git clone &lt;origin-url&gt;</code></p>

<p>2) <code>$ git checkout &lt;feature-branch&gt;</code></p>

<p>3) Make changes to code, stage and commit them</p>

<p>4) <code>$ git checkout develop</code></p>

<p>5) <code>$ git pull origin develop</code></p>

<p>6) <code>$ git checkout &lt;feature-branch&gt;</code></p>

<p>6) <code>$ git push origin &lt;feature-branch&gt;</code></p>
","3","5981201","",""
"60730080","5399268","2020-03-17 20:54:55","0","301","<git><branch><git-push><git-pull>","Pushing changes to HEAD detached from origin in git","<p>I have been using <code>git</code> for some time already but this is the first time I have to deal with a master and a branch. </p>

<p>It happens on a directory /D I have created a branch and then checked out that branch on other directory /S. From /S I commited and pushed some changes. But when I want to pull those changes under /D I get the message that I'm ""Already up-to-date"". I thought maybe it was related to <code>.gitignore</code>, but it seems not. </p>

<p><strong>Note:</strong> /D directory is local on my machine and /S directory is a mounted directory (on a Windows machione) from a network shared drive.</p>

<h2>Situation within directory /D</h2>

<p><code>git status</code> command shows:</p>

<pre><code>USER@PC MINGW64 /d/epptra2 (v2.8_beta_1.5_branch)
$ git status
On branch v2.8_beta_1.5_branch
Your branch is up-to-date with 'origin/v2.8_beta_1.5_branch'.
</code></pre>

<p>And <code>git branch</code> command shows:</p>

<pre><code>USER@PC MINGW64 /d/epptra2 (v2.8_beta_1.5_branch)
$ git branch -a
  master
  origin
* v2.8_beta_1.5_branch
  remotes/origin/master
  remotes/origin/v2.8_beta_1.5_branch
</code></pre>

<h2>Situation within directory /S</h2>

<p><code>git status</code> command shows:</p>

<pre><code>USER@PC MINGW64 /s/epptra2 ((4c27924...))
$ git status
HEAD detached from origin/v2.8_beta_1.5_branch
</code></pre>

<p>And <code>git branch</code> command shows:</p>

<pre><code>USER@PC MINGW64 /s/epptra2 ((4c27924...))
$ git branch -a
* (HEAD detached from origin/v2.8_beta_1.5_branch)
  master
  remotes/origin/master
  remotes/origin/v2.8_beta_1.5_branch
</code></pre>

<h2>Questions</h2>

<p><strong>How can I get the changes I pushed to the branch under directory /S to be reflected under directory /D?</strong> And <strong>why was the HEAD detached from origin?</strong> Is there any command I may have done to detach the HEAD by mistake? If so, how can I fix this?</p>

<p>I had been pushing changes from /D and my collegues have been pulling changes from that branch with no issues. I still don't see why doing some update from another repository pointing to same branch would make this issue.</p>
","12","5399268","",""
"60914707","12648193","2020-03-29 13:02:52","2","413","<oauth-2.0><github-api><git-pull><pull>","How to pull from official/master using github api for authenticated user?","<p>I have oauth2 access_token for user with scope repo which means I can basically access all public/private repos of the user.
I have a local copy of a repo on my machine and I want to pull (fetch and merge) using the authenticated user's token in github api.<br> How do I manage this?</p>
","0","12648193","0","0"
"60927670","9405694","2020-03-30 09:34:28","0","31","<git><bitbucket><git-pull>","synchronizing the git local master with the remote master branch created uncommitted commits","<p>I am new to git and I tried to update my local master branch with the remote master(I am using visual studio). I fetched the changes and pulled them into my local branch but then I have the incoming changes as uncommitted changes so I can't checkout to any other branch. I know that we shouldn't push into the master branch and the uncommitted changes are coming from my colleague. I undo the changes in my local master branch but it is still like the following image:</p>
<p><a href=""https://i.stack.imgur.com/KOuSA.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/KOuSA.png"" alt=""enter image description here"" /></a></p>
<p>How can I fix this problem and update my master branch without overwriting anything in remote master?</p>
","4","9405694","",""
"60936479","5638364","2020-03-30 17:50:52","2","794","<git><ssh><windows-server-2012><git-pull>","Execute git pull command over ssh on window server hangs forever","<p>I have a windows server 2012 with bitvise ssh server installed on it, beside git and git bash, I have set up a virtual user and git it full permission over a folder contains a git repository (Let's call it GR).
Now when I open the server via remove desktop connection and open GR folder using cmd and perform <code>git pull</code> everything works as expected and I get the latest commits. but When I connect to the server via ssh client and change the directory <code>cd</code> to GR folder and perform <code>git pull</code> the execution hangs forever and it's not working.
I tried to change bitvise to PowerShell but I got the same result, so anyone could help me on how am I going to run <code>git pull</code> command over ssh on windows server.</p>

<p>Note: I change the ssh default port for windows server <code>bitvise</code> but It didn't work</p>
","0","5638364","0","0"
"5914343","504963","2011-05-06 16:33:13","2","23632","<git><github><git-push><git-pull>","Can't commit changes to github","<p>Whenever I try and to commit changes to my github repo I get this error.</p>

<blockquote>
  <p>To git@github.com:antarr/3skeleton.git<br>
  ! [rejected]        master -> master
  (non-fast-forward)<br>
  error: failed to
  push some refs to
  'git@github.com:antarr/3skeleton.git'<br>
  To prevent you from losing history,
  non-fast-forward updates were rejected<br>
  Merge the remote changes (e.g. 'git
  pull') before pushing again.<br>
   See the
  'Note about fast-forwards' section of
  'git push --help' for details.</p>
</blockquote>

<p>If I do <code>git pull</code> first, it changes some of the files on my machine. Which kind of defeats the purpose.</p>
","0","504963","",""
"61690932","1477456","2020-05-09 02:13:30","2","311","<git><git-merge><git-rebase><git-pull><git-fetch>","Is there a difference between ""git pull --rebase"" and ""git fetch && git rebase --autostash FETCH_HEAD""?","<p>Title says it all. Is there a difference between:</p>

<p><code>git pull --rebase --autostash</code></p>

<p>and</p>

<p><code>git fetch &amp;&amp; git rebase --autostash FETCH_HEAD</code>?</p>

<p>And while we're at it, between:</p>

<p><code>git pull</code></p>

<p>and</p>

<p><code>git fetch &amp;&amp; git merge</code>?</p>

<p>Thanks!</p>
","1","1477456","0","0"
"25022341","3888820","2014-07-29 18:21:35","3","1888","<git><git-pull>","git pull could not read from .git/MERGE_MSG (file was never created)","<p><br>Have anyone seen this error before when doing a git pull, and how do you resolve it?</p>

<pre><code>F:\git\test-results-db&gt;git pull origin bugfix/duplicate-test-times
From {stash_server_URL}
* branch            bugfix/duplicate-test-times -&gt; FETCH_HEAD
Can't do inplace edit on .git/MERGE_MSG: Permission denied.
fatal: Could not read from '.git/MERGE_MSG': No such file or directory
</code></pre>

<p>This has happened before for the user in question and the last time we created a new branch as a workaround.</p>

<p>Thanks,
<br>Mikael</p>
","0","3888820","0","0"
"25038556","2697957","2014-07-30 13:48:09","4","9605","<git><git-pull><git-clone>","git clone issue: repo too large? (50m)","<p>Been having an issue with being unable to clone a git repo. It starts to run and then cancels half way through.
My current git repo size is 53.7 MB
Git version is 1.7.12.4 on server and on my remote.</p>

<p>Error below:</p>

<pre><code>MacBook-Pro:htdocs macbook$ git clone myrepo@mysite.com:~/opt/git/myrepo.git 
Cloning into 'myrepo'...
zcardepo@zcardepot.com's password:
remote: Counting objects: 8888, done.
remote: Compressing objects: 100% (7185/7185), done.
Write failed: Broken pipe267/8888), 1.03 MiB | 1001.00 KiB/s
fatal: The remote end hung up unexpectedly
fatal: early EOF
fatal: index-pack failed
</code></pre>

<p>I created a fresh new repo, clones just fine. Once I add my site files to it and push them to the remote though. I can no longer clone from it. But I can pull from it just fine. </p>

<p>I added this with no luck: </p>

<pre><code>[core]
    compression = -1
[pack]
    windowMemory = 10m
    packSizeLimit = 20m
</code></pre>

<p>I tried upping these both to way higher values. No luck </p>

<p>I also tried running <code>git gc --aggressive</code> and git <code>gc --prune</code> on the remote repo. </p>

<p>I've seen <a href=""https://stackoverflow.com/questions/15606177/git-repository-too-large"">this post</a>, but mine is no where as large (1g+) 
Also see a people having issues with the git versions <a href=""https://stackoverflow.com/questions/25005359/git-clone-not-working-old-local-repo-push-pull-works-ok/25024157#25024157"">not matching</a>, but this isn't the case ether. </p>
","0","2697957","0","0"
"6791705","205058","2011-07-22 14:45:11","5","3156","<git><macos><git-submodules><git-pull>","Submodules and 'git pull --rebase'","<p>We recently switched to git and are trying to use Submodules to include our Common libraries.</p>

<p>No matter what we do we can not get 'git pull --rebase' to work in the Super or Submodule.</p>

<p>We get: </p>

<pre><code>james:libraries james$ git pull --rebase
Cannot pull with rebase: You have unstaged changes.
Please commit or stash them.
</code></pre>

<p>This happens even if we do not have any local changes at all and have a clean directory. Any thoughts on what we might be doing wrong?</p>

<p>Thanks!
James</p>
","1","205058","0","0"
"25267718","1544418","2014-08-12 15:01:34","0","1023","<github><go><git-pull>","Golang tool for git pull?","<p>I'm trying to make it easy for the not-too-technical to use my golang program as a command line application. I want them to be able to update the code easily too when I push changes to github. Is there a way to update a library using something like ""go update github.com/user/repo"" so they don't have to cd to the src directory and git pull themselves? Or at this point must I simply say ""time to learn git""?</p>
","0","1544418","",""
"6898317","242933","2011-08-01 12:20:46","45","9504","<git><git-push><git-pull><git-fetch>","git pull analogous to / opposite of git push -f?","<p>Sometimes, esp. when I'm the only one working on a remote repository, I like rewriting the history with <code>git rebase -i</code> and <code>git push origin master -f</code>.</p>

<p>How do I do a forced <code>git pull origin master</code> without a merge? I tried it with the <code>-f</code> option, but that didn't work. I just want to rewrite the history of my local git repo to match that of the remote (origin).</p>
","5","242933","0","0"
"6920304","716105","2011-08-03 00:19:02","0","232","<git><git-push><git-pull>","Permissions for .git/ for each working directory","<p>I get this error every time I git push. Only for this working directory. Not in another similar one, where from what I can tell has the same permissions.</p>

<pre><code>$ git push
Counting objects: 15, done.
Compressing objects: 100% (7/7), done.
Writing objects: 100% (8/8), 683 bytes, done.
Total 8 (delta 5), reused 0 (delta 0)
remote: Sending mail...
To git@devel.site.com:mysite.git
dd36358..86bc572  redesign -&gt; redesign
! [rejected]        master -&gt; master (non-fast-forward)
error: failed to push some refs to 'git@devel.site.com:mysite.git'
To prevent you from losing history, non-fast-forward updates were rejected
Merge the remote changes (e.g. 'git pull') before pushing again.  See the
'Note about fast-forwards' section of 'git push --help' for details.
</code></pre>

<p>Is this a permissions issue? git pull seems to work fine and git push seems to go through too but I still get the error. </p>

<p>Any ideas?</p>
","0","716105","",""
"62481287","13778847","2020-06-20 03:31:36","0","1306","<git><git-pull>","Does git pull replace everything in my local repository?","<p>Let's say I have a server side and a client side directory. I've made changes on the client side with things like themes. If I <code>git pull</code> will it replace everything on both directories?</p>
","2","13778847","",""
"44031150","3685285","2017-05-17 17:15:43","78","94011","<git><git-bash><git-pull>","Why does git pull hang?","<p>When I do a <code>git pull</code>, from the git bash, the terminal usually runs the pull, updates my local, and then hangs. I'm not sure if it's waiting for me to do something, but I usually exit out of this with <code>CTRL-C</code>. After that, I get that an index.lock is preventing me from doing other things to which I have to delete it. Am I misunderstanding how <code>git pull</code> works?</p>
","3","3685285","0","0"
"25430600","1546701","2014-08-21 15:47:03","215","136747","<git><git-rebase><git-pull>","Difference between git pull --rebase and git pull --ff-only","<p>Let's say <code>origin/master</code> has commit <code>A--B--C</code> and my <code>local/master</code> has commit <code>A--B--D</code>.</p>

<p>What will happen if I use <code>git pull --rebase</code> ?</p>

<p>What will happen if I use <code>git pull --ff-only</code> ?</p>

<p>Is there any difference in the resulting commit tree ?</p>
","0","1546701","0","0"
"44048653","6035289","2017-05-18 13:07:22","0","3439","<git><merge><git-merge><git-pull><pull>","git pull and fast forward merging","<p>My question is simple. Does <code>git pull</code> perform a fast-forward merge when pulling new changes from origin repository? I read in the documentation that by default it does not, however I do not have any merge commit when pulling.</p>

<p>As an example consider an origin repository with the following history:</p>

<pre><code>A -&gt; B -&gt; C -&gt; D
</code></pre>

<p>And my the working repository is like:</p>

<pre><code>A -&gt; B -&gt; C -&gt; W -&gt; X
</code></pre>

<p>Then, if I pull from remote I get:</p>

<pre><code>A -&gt; B -&gt; C -&gt; W -&gt; X -&gt; D
</code></pre>

<p>without any merge commit between <code>X</code> and <code>D</code>. There is no merge conflict when pulling new changes. This does not match with what I have understand from the git guide.</p>
","2","6035289","",""
"7565750","614157","2011-09-27 07:46:17","8","9189","<synchronization><branch><git-pull>","How to 'git pull' all the branches easily?","<blockquote>
<p>git pull --help</p>
<p>Incorporates changes from a remote repository into the current branch.</p>
</blockquote>
<p>I pull the git repository for offline view of the code and like to have the updated code for the different branches. How do I pull the code for all the branches easily without doing a pull for each branch manually?</p>
<blockquote>
<p>--all -- Fetch all remotes.</p>
</blockquote>
<p>--all didn't help.</p>
","2","614157","0","0"
"62969381","11154841","2020-07-18 13:54:37","0","1048","<git><github><authorization><pull-request><git-pull>","Is it in line with the DCO that a github sign-off needs and publishes full name + an email ""that matches the commit author""?","<p>Coming from Stack Overflow where a pseudo name is normal and enough, a github beginner like me does not expect to have to sign-off a git pull request with the full name and kind of full-name-email being published. Going over to github, I simply do not expect more than what Stack Overflow is asking for. I thought the other contributors on github just chose willingly to sign with their full names and respective e-mails, and I was astonished to see my personal mail being published.</p>
<p>The tasks you follow to do the pull request on github (not from the DCO, this was just a helping comment):</p>
<blockquote>
<p>You need sign-off your PR with your email address. Below are steps to
sign-off a commit. At first, you need configure your git with user
name and email: <code>git config --global user.name &quot;FIRST_NAME LAST_NAME&quot;</code>
<code>git config --global user.email &quot;MY_NAME@example.com&quot;</code>
Next run <code>git push --force-with-lease origin YOURBRANCHNAME</code></p>
</blockquote>
<p>I have read the DCO Developer Certificate of Origin now in the github version <a href=""https://github.com/apps/dco"" rel=""nofollow noreferrer"">https://github.com/apps/dco</a> and in the original version <a href=""https://developercertificate.org/"" rel=""nofollow noreferrer"">https://developercertificate.org/</a>.</p>
<p>The github version asks for more than the original DCO, in my opinion.</p>
<blockquote>
<p>It requires all commit messages to contain the Signed-off-by line with an email address that matches the commit author.</p>
</blockquote>
<p>further below...</p>
<blockquote>
<p>Contributors sign-off that they adhere to these requirements by adding a Signed-off-by line to commit messages.
This is my commit message</p>
<p>Signed-off-by: Random J Developer random@developer.example.org</p>
</blockquote>
<p>Here you could already discuss if &quot;Random J Developer&quot; has to be the full name or just a pseudo name, and also whether the name (or pseudo name respectively) should be part of the mail. The original DCO speaks just generally of the personal information in the sign-off:</p>
<blockquote>
<p>I understand and agree that this project and the contribution are
public and that a record of the contribution (including all personal
information I submit with it, including my sign-off) is maintained
indefinitely and may be redistributed consistent with this project or
the open source license(s) involved.</p>
</blockquote>
<p>In its intro, the github DCO mentions the email that &quot;matches the commit author&quot; as the core of the personal information, and later adds the name in the example. This &quot;matches the commit author&quot; is already a stricter requirement than the original DCO is asking for, thus this requirement could already be questioned. From the original DCO I read the option to put your full name and full name email, but not the need to do so, as the github user name and a mail that includes the github author name would be personal information enough to identify you as well, which is the main requirement. From the github DCO I read the wish that you put your full name, but it is only in the example, not in the text, and I could also go around that now by putting my github username and an email that does not show my full name but includes my github name, and still following the DCO, as I read it.</p>
<p>My final question after this long explanation:
Is the github DCO requirement of full name and an &quot;email address that matches the commit author&quot; in line with the official DCO? Or does it ask too much, and a pseudo name + email using that pseudo name would be already enough? Or as a third option, would a pseudo name + email not using any pseudo or full name already be enough?</p>
<p>p.s.:</p>
<p>To anyone of github reading this. If publishing the full name and respective email is really needed, I simply would like to be informed about this when doing my first pull request, because few people will read the DCO before starting.</p>
","1","11154841","",""
"44542077","3887531","2017-06-14 10:26:05","0","401","<git><github><git-pull>","git pull when a tracking branch is ahead and behind by some commits","<p>Let's say I have a tracking branch on my local repository and I've made a couple of commits. </p>

<p>At the same time my tracking branch is behind a couple of commits from the remote branch that it is tracking.</p>

<p>So, if I do git pull does the merge happen or do I get an error? 
If yes, then do I get a merge commit resulting from the two branch tips and a common ancestor?</p>

<p>Would have tried it out but thought I'll just ask if anyone knows.</p>

<p>Thanks :)</p>
","3","3887531","",""
"26036905","2264643","2014-09-25 11:00:06","0","1117","<git><github><git-pull>","Ignoring directories when using git pull","<p>:)</p>

<p>I have a production *nix server that gets the updated files from github using ""git pull"".</p>

<p>My problem is that there are outdated versions of some plugins in ""app/code/community/"", which would be pulled and would overwrite my local (up-to-date) files and folders.</p>

<p>I do not know how to tell git to just ignore this directory when I pull from github... Can anybody help me out here?</p>

<p>Thanks in advance!</p>

<p>Chris</p>
","1","2264643","",""
"26040423","3875899","2014-09-25 13:53:29","1","2501","<git><bash><batch-file><batch-processing><git-pull>","How to set correctly parameters to batch file to run ""git pull""?","<p>I have following code in my .bat file:</p>

<pre><code>cd C:\\TESTS\pathToFolderWhereIWantToGitPull
start ""path to git bash.exe"" git pull
pause
</code></pre>

<p>Git bash open correctly but bash.exe close very fast and dont do a git pull in that folder. What I am doing wrong here? The bash.exe is correct application to do git pull? Any ideas what to do to run this code correctly?</p>
","0","3875899","0","0"
"42347428","7593595","2017-02-20 14:41:49","1","629","<c++><bitbucket><commit><git-pull><libgit2>","How can I check if pull is needed using libgit2 in c++?","<p>I want to check if I have the latest version of program. I have my program shared to bitbucket.org , and I want my c++ code to write me if I need to pull the latest version, or I already have the latest version. </p>
","0","7593595","",""
"42356081","7367292","2017-02-20 23:34:48","1","267","<git><github><git-pull>","how do checkout the commits from specific user in git?","<p>In git, If I pushed few time of changes to remote repository, like following commits(commit A0001,commit A0002,commit A0005,commit A0006,commit A0008,).</p>

<p>And meanwhile, others also commit commit A0003,A0004, A0007, A0009. </p>

<p>And now I want to pull out those changes that only being pushed by me. 
How can I achieve that? Thanks.</p>
","3","7367292","",""
"42575353","5488813","2017-03-03 09:39:50","0","66","<git><git-pull><git-diff>","How to get the changed file names between two consecutive git pull?","<p>I am trying to get the names of files that have been changed in 2 consecutive pull requests. So 2 developers have changed 2 diff files and pushed to github. When i try to pull it in 3rd repo i need to get the 2 changed filenames. Currently i am getting only the changed file name of the latest developer by using the following code. </p>

<pre><code>git diff --diff-filter=ACMR --name-only @{1}.. 
</code></pre>

<p>If anyone have any idea please share. </p>

<p>Thankyou</p>
","0","5488813","",""
"16734145","535556","2013-05-24 11:40:39","1","2071","<git><ssh><git-pull><passphrase><ssh-agent>","How to avoid typing passphrase for git pull executed under www-data","<p>I stuck on the operation when I need to execute Git pull command running from PHP script. (user is added into www-data group) without passphrase typing. I found that this can be solved using command:</p>

<pre><code>eval ""$(ssh-agent)""

ssh-add 
</code></pre>

<p>But this command is working only under my own user (for example george). But if i try to execute  following command under www-data in git cloned repository :</p>

<pre><code>sudo -u george git pull
</code></pre>

<p>I always obtain following messsage </p>

<pre><code>Enter passphrase for key '/home/george/.ssh/id_rsa': 
</code></pre>

<p>Note: I add user to www-data group and to visudo users too. But i don't know, how to solve password passing or avoiding to passphrase typing. </p>

<p>Many thanks for any help. </p>
","0","535556","",""
"50588986","1902512","2018-05-29 16:28:51","0","117","<git><git-rebase><git-pull><gitpython><git-merge-conflict>","How to create a git pull --rebase conflict for testcase?","<p>I would like to create a test case that solves a rebase conflict, but first I need a way to cause the rebase conflict when doing a <code>git pull --rebase</code>.</p>

<p>Is there a programmatic way of creating a rebase conflict scenario?</p>

<p>The test will be for a GitPython program.</p>
","3","1902512","",""
"33330522","4220109","2015-10-25 14:00:20","2","127","<git><github><git-pull><git-merge-conflict>","conflicts on git pull brings uncommited remote changes","<p>I'll phrase my question using an example.<br>
Suppose Adam and Eve are working on master branch, both checked out on commit C1.<br>
Adam creates commits A1, A2 and pushes them to origin.<br>
Eve creates commit E1 which conflicts with A2.<br>
Before pushing her changes, Eve has to update her local repo, so she runs git pull.<br>
Eve now sees the conflicts caused by E1 and A2 (marked as ""unmerged paths""), but when she runs ""git status"" she can also see changes which were made in A1 as ""Changes to be commited"".</p>

<p>After Eve fixes her conflicts, she commits both her changes and Adam's changes from A1, and pushes.<br>
The changes from commit A1 will now appear under Eve's name in origin (Instead of Adam's).</p>

<p>Why does this happen? and how can I fix it?<br>
Also note - This doesn't happen when there are no conflicts.</p>

<p>I know that using git pull --rebase avoids this problem altogether, and I understand the difference between regular pull and rebase pull, but I don't understand how it avoids this problem.</p>

<p>Thanks</p>
","7","4220109","",""
"69174119","5136129","2021-09-14 08:07:10","0","105","<git><git-rebase><git-pull>","Pass --autosquash to git pull --rebase=interactive","<p>When doing <code>git pull --rebase=interactive</code>, can I somehow pass the <code>--autosquash</code> flag like I can for a &quot;normal&quot; <code>git rebase -i</code>?</p>
","3","5136129","",""
"34440451","3362364","2015-12-23 17:00:41","0","926","<git><github><git-branch><git-pull>","Cannot git pull in a new branch","<p>I'm working on a new branch created by a colleague. I have committed all the changes and when I try to <code>git pull</code>, it gives me an error:</p>

<pre><code>$ git pull
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details

    git pull &lt;remote&gt; &lt;branch&gt;

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=origin/&lt;branch&gt; kiet_tnp
$
</code></pre>

<p>What do I do? Without <code>git pull</code>, I cannot push my codes.</p>
","1","3362364","",""
"19032566","496949","2013-09-26 15:36:19","16","11045","<git><git-push><git-pull>","Why do we need to git push first before git pull?","<p>I have both local changes and remote changes.</p>

<p>Someone told me I must do push first, then pull. Any reason behind this?</p>
","1","496949","0","0"
"19033763","","2013-09-26 16:32:45","0","61","<git><git-branch><git-pull><git-checkout><git-fetch>","Understanding git fetches and your local repo","<p>I read that, after doing a <code>git fetch</code>, your local repo has all the commits from the original repo, but that they are ""not yet integrated into the cloned repository's local branches"".</p>

<p><strong>What does this mean/imply?</strong></p>

<p>Do I then need to checkout my branch to pull the changes down into my local working copy? Or does it imply something else? Thanks in advance!</p>
","0","","",""
"69417587","16561110","2021-10-02 13:58:04","0","23","<git><git-pull>","git not synchronizing local repo with remote branch","<p>I created a new branch from the master called <code>remove-maven-3</code>. Surprisingly it doesn't have a file called pom.xml on local, but if I check it on remote github.com, it's there. <br>
The following is the result of the command git pull: <br></p>
<pre><code>git pull
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull &lt;remote&gt; &lt;branch&gt;

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=agbi-code/&lt;branch&gt; remove-maven-3
</code></pre>
<br>
This seems weird don't have any idea what might be going wrong.
","2","16561110","",""
"19058545","1171136","2013-09-27 19:22:12","0","59","<git><git-pull>","copying remote master to local branch -git","<p>Hey I am working on a local branch on an Android Project.I want to replace all code on my local branch with all the code on the remote master.When I try to do <code>git pull origin master</code>,it tries to merge and pulls up conflicts to resolve,which is undesirable since I just want to simply replace everything.</p>
","0","1171136","",""
"19070541","2826937","2013-09-28 18:56:14","1","287","<linux><git><git-pull><filemtime>","change mtime on git pull","<p>Does anybody know way to change mtime to repo commit time (or any other, but depends on commit metadata) for added/updated files?</p>

<p>We have some logic, which tests files mtime, but backend servers have different mtime on files which were changed, because of this we have some bugs.</p>
","0","2826937","",""
"51078361","5576930","2018-06-28 08:40:29","0","181","<git><git-pull>","failed to git pull same file from specific commit id in local machine?","<h1>Env：</h1>

<ul>
<li>macOS 10.13.5</li>
</ul>

<h1>Git init and push changed files in local machine</h1>

<p>Notes：XXX is username of local machine</p>

<pre><code>    ➜  gittest git init
    Initialized empty Git repository in /Users/XXX/Desktop/gittest/.git/
    ➜  gittest git:(master) echo ""hello"" &gt; 1.md
    ➜  gittest git:(master) ✗ git add 1.md
    ➜  gittest git:(master) ✗ git commit -m""hello""
[master (root-commit) ea37549] hello
 1 file changed, 1 insertion(+)
 create mode 100644 1.md
    gittest git:(master) ✗ git push --set-upstream /Users/XXX/Desktop/gittest/.git/ master
    Branch 'master' set up to track remote branch 'master' from '/Users/XXX/Desktop/gittest/.git/'.
    Everything up-to-date
    gittest git:(master) ✗ echo ""hello 2"" &gt;&gt;1.md # change files
    ➜  gittest git:(master) ✗ git add 1.md
    ➜  gittest git:(master) ✗ git commit -m""hello 2""
[master 4593958] hello2
 1 file changed, 1 insertion(+)
    ➜  gittest git:(master) ✗ git push
    Everything up-to-date
</code></pre>

<h1>Git Pull the first commit files but failed</h1>

<pre><code>➜  gittest git:(master) git pull
From /Users/XXX/Desktop/gittest/
 * branch            master     -&gt; FETCH_HEAD
Already up to date.
</code></pre>

<p>But it could not return file that was first commited to git push.</p>

<h1>Expected</h1>

<ul>
<li>Git pull files with specified commit id and cover origin files with same names.</li>
<li>I don't want to use remote server or repository(e.g. Github).Please don't give solutions about it.</li>
<li>I don't want to create another branch and merge it. I just want to finish my goal in a master branch.</li>
</ul>
","1","5576930","",""
"51081005","9968701","2018-06-28 10:49:47","1","155","<git><clone><git-pull><git-clone><git-checkout>","Checking out specific file from git repository","<p>I have a git repository named demo.In that git i have a file named details.This details file contains some filenames listed in it.My requirement is that when i checkout the repository, I want only the files whose names are in details file to be pulled and other files shouldn't be checked out.I have tried sparse  checkout , but sparse checkout helps to pull files of a sub directory in a repository while my need is that the files which are listed in details file alone should be checked out.Could you suggest me ways to do it?</p>
","2","9968701","0","0"
"42743809","21009","2017-03-12 04:36:22","2","816","<git><git-push><git-pull>","Automated concurrent git push","<p>I'd like to setup one simple repository which would contain output from different projects, compiled on Travis CI.</p>

<p>What I can't figure out is the easiest way how to safely push to the repository from the Travis console. If there are two projects building at the same time and both of them happen to push at the same time, one of them will naturally fail with non-updated refs error.</p>

<p>Since paths in each commit are guaranteed to be unique ([project name]/[commit id]) the best I could come up with is a script like this:</p>

<pre><code>while $(git push) not ok {
    git pull --rebase
}
</code></pre>

<p>Can you think of something better?</p>
","5","21009","0","0"
"61016580","4438463","2020-04-03 16:43:55","2","41","<git><git-pull><git-fetch><sparse-checkout><shallow-clone>","Same git size with and without --depth=1","<p>I am writing a script that clones a large git repository, modifies a few files and pushes the changes back to the remote. It needs to run as fast as possible.</p>

<p>Right now, it takes about 10 minutes to clone the repository. The resulting folder is roughly 3GB large, 50% of which is the <code>.git</code> folder. I tried cloning the repository with <code>--depth=1</code>, but the result is basically identical.</p>

<p>I also tried running <code>git fetch origin --depth=1</code>, which downloads a <code>.git</code> folder of about 100MB. However, when I checkout the branch, it then gets back to 3GB.</p>

<p>Why does my <code>.git</code> folder have the same size with and without <code>--depth=1</code>? Does it mean that my history is basically small, and the size comes from large binary files, etc?</p>

<p>Note 1: This workspace is using git lfs. I don't know if that has an impact or not.</p>

<p>Note 2: I intend on experimenting with partial clones in the near future. It looks like it could solve my problem, since I know exactly which files I need to modify.</p>
","1","4438463","",""
"5612747","299216","2011-04-10 15:26:16","2","135","<git><deployment><git-push><git-pull>","git - changing versions of code?","<p>Right now my method of using git is to develop a website locally and when it's looking good, to <code>git push origin master</code> and then ssh into the server and <code>git pull origin master</code>. I'm curious if there's a way to easily change versions of an app. So say I've added a couple features and then want to remove them for a little while. How could I go back without just removing the code?</p>
","1","299216","",""
"42806711","2773530","2017-03-15 10:14:13","1","2134","<git><git-pull><git-reset>","Git: Remove unstaged changes after undoing a git pull?","<p>I did a pull of a different branch by mistake and did <code>git reset HEAD@{1}</code>
to undo it. Now when I type <code>git status</code> I get a huge list of untracked and modified files from the branch that I pulled.</p>

<p>How to remove them from staging so that I do not have to commit them?</p>
","0","2773530","0","0"
"42839127","2725235","2017-03-16 16:01:31","10","23972","<git><git-pull>","git pull a specific tag only","<p>I looking for command to make my life easiest.</p>

<p><strong>The issue:</strong>
have a project with sources.
along of time i pushed more versions: v1.0.1 until v1.0.14 (latest)
the version v1.0.12 is an patch and fixes special for myserver, 
but the myserver actually have installed v1.0.10 (I should update from v1.0.10 to v1.0.12)</p>

<p><strong>the question:</strong>
how to make an command to update the specific server to the looking version v1.0.12</p>

<p>i know command git pull but not understand how to do correct way
also i want some options to prevent merge conflicts</p>

<p>the start point is command that i made:</p>

<pre><code>$ git pull --rebase origin refs/tags/1.0.13:refs/tags/1.0.13
From http://192.168.0.12/gitlab/AF-NG/frontend-dist
* [new tag]         1.0.13     -&gt; 1.0.13
* [new tag]         1.0.11     -&gt; 1.0.11
* [new tag]         1.0.12     -&gt; 1.0.12
* [new tag]         1.0.14     -&gt; 1.0.14
First, rewinding head to replay your work on top of it...
Applying: 2.0.0
Using index info to reconstruct a base tree...
------
Falling back to patching base and 3-way merge...
Auto-merging styles/css/production.min.css
CONFLICT (add/add): Merge conflict in file.css
When you have resolved this problem, run ""git rebase --continue"".
If you prefer to skip this patch, run ""git rebase --skip"" instead.
To check out the original branch and stop rebasing, run ""git rebase --abort""
</code></pre>
","6","2725235","0","0"
"61505145","10161504","2020-04-29 15:10:55","0","48","<git><repository><git-commit><git-push><git-pull>","How can we not lose our work with git if we are coding simultaneously","<p>I am new with git and I'm basically only using <code>pull</code>, <code>commit</code> and <code>push</code>; right now a question in my head popped up. </p>

<p>Lets say we are 2 people coding right now on the same project; don't we both risk of losing our work if one of us does <code>pull</code> then <code>commit</code> and <code>push</code>?</p>

<p>If i <code>push</code> first, then he will have to <code>pull</code> and his work is wiped out to receive mine; if he pushes first my work is wiped out when i <code>pull</code>; if we just <code>commit</code> but not <code>push</code> we end up having 2 different versions of the project in our local repositories; so what should I do?</p>

<p>My only idea for now is that we should message eachother to not code simultaneously, can git manage this situation somehow?</p>
","6","10161504","",""
"43037293","3930247","2017-03-27 03:03:08","31","13023","<git><version-control><git-pull>","What is the difference between git pull and git reset --hard origin/<branch>?","<p>I find the latter to be faster than the first, so I usually do that after <code>git fetch</code> whenever I need to sync my local branch with the remote. What is the difference?</p>
","15","3930247","0","0"
"42577917","7441034","2017-03-03 11:39:10","0","30","<git><github><git-pull>","How to get the changed file names between 2 consecutive git pull?","<p>I am trying to get the names of files that have been changed in 2 consecutive pull requests. So 2 developers have changed 2 diff files and pushed to github. When i try to pull it in 3rd repo i need to get the 2 changed filenames. Currently i am getting only the changed file name of the latest developer by using the following code. </p>

<pre><code>git diff --diff-filter=ACMR --name-only @{1}.. 
</code></pre>

<p>If anyone have any idea please share. </p>

<p>Thankyou</p>
","0","7441034","",""
"60701996","1084174","2020-03-16 07:40:57","0","1131","<git><merge><rebase><conflict><git-pull>","git pull --rebase with auto merge strategy not working","<p>I am trying to pull rebase with auto merging strategy,</p>

<pre><code>m-hissain-sk01:sc hissain$ git status
On branch master
Your branch and 'origin/master' have diverged,
and have 47 and 3 different commits each, respectively.
  (use ""git pull"" to merge the remote branch into yours)

error: could not apply b5f4d22... Refactored existing source
Resolve all conflicts manually, mark them as resolved with
""git add/rm &lt;conflicted_files&gt;"", then run ""git rebase --continue"".
You can instead skip this commit: run ""git rebase --skip"".
To abort and get back to the state before ""git rebase"", run ""git rebase --abort"".
Could not apply b5f4d22... Refactored existing source

m-hissain-sk01:sc hissain$ git status
interactive rebase in progress; onto 2d4593d
Last command done (1 command done):
   pick b5f4d22 Refactored existing source
Next commands to do (2 remaining commands):
   pick 4298398 Implemented clean swift version
...

Unmerged paths:
  (use ""git reset HEAD &lt;file&gt;..."" to unstage)
  (use ""git add/rm &lt;file&gt;..."" as appropriate to mark resolution)

    added by us:     MyProj.xcodeproj/project.xcworkspace/contents.xcworkspacedata
    added by us:     MyProj.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist
    added by us:     MyProj/Configs/Assets.xcassets/AppIcon.appiconset/Contents.json
        ...
</code></pre>

<p>Expected conflicts will be automatically resolved with ours version. But after running the command, I still see unstashed codes waiting to be resolved manually.</p>

<p><strong>Why didn't it work?</strong></p>
","4","1084174","",""
"60879397","8778675","2020-03-27 03:00:49","1","1637","<git><bitbucket><git-push><git-pull>","Does git pull automatically merge with your latest commit?","<p>I just need to clear my doubt on something. Lets say my colleague and I are working on some code on the same branch called dev. What is the proper way of pulling his code without any conflict ?</p>

<p>This is what I have done, I have done the following </p>

<pre><code>git add . 
git commit -m "" First Commit""
git pull origin branch dev
</code></pre>

<p>After running this, it automatically merges with my existing code without any conflict . Are these the correct steps?</p>

<p>Thank you.</p>
","1","8778675","0","0"
"5552879","676439","2011-04-05 13:47:19","2","4285","<git><git-merge><git-pull><git-fetch>","synchronize between 2 git repositories","<p>I have 2 bare repositories. They are made like this:</p>

<pre><code>ssh git@primary.com
git init --bare repo1
ssh git@backup.com
git clone --bare git@primary.com:repo1
</code></pre>

<p>One is used for development (let's call it <strong>primary</strong>) and one is used for backup (in case first is not accessible). Is it possible to automatically synchronize them - something like doing <code>git pull</code> on backup.</p>

<p>I guess you can't merge or pull on bare repository. Is there another way to have backup repository up to date, rather than this:</p>

<pre><code>ssh git@backup.com
rm repo1 -fr
git clone -- bare git@primary.com:repo1
</code></pre>

<p>of course when primary wasn't accessible for a while and I used backup then I would want to update primary.</p>

<p>Also adding 2 remotes to the working repository is a solution, but you have to constantly push to the both of them, which can't happen if one is inaccessible.</p>

<p>All conflicts are resolved in the non-bare repositories</p>

<p><strong>edit</strong> why do I need backup repository:</p>

<p>we use remote repository to exchange code and it's needed daily. usually people don't need code written by other developers, but that's not always the case. we lost contact with primary for 3 days and it was not easy to develop. I made second repository on another server and I cloned local, but I had to do that for a lot of projects and it's time consuming. I prefer to have the second repository automatically updated.</p>
","1","676439","",""
"61211167","7887218","2020-04-14 15:16:16","0","3378","<git><git-merge><git-pull><git-fetch>","git fetch + git merge origin/master vs git pull origin/master","<p>I thought git pull was like a git fetch + git merge. Being in branchA, I always do a git fetch and then a git merge origin/master. But today, being in a branchA, I tried git pull origin/master and it didn't work but doing a git pull origin master worked. Any thoughts?</p>

<p>Extra question, if an updated origin/master and the online version of master are the same, why bother to have origin/master, wouldn't it be more convenient to always work with the online version that is always updated, releasing us from the burden to alway be git fetching?</p>
","3","7887218","",""
"24944512","1730238","2014-07-24 21:43:40","1","14","<github><git-pull>","Github check for pull done on github repository","<p>Is there a way to check a github repo whether someone has pulled from it or not after adding that person as a collaborator? The repo is private if it matters.</p>
","0","1730238","0","0"
"25208675","148968","2014-08-08 17:09:35","2","74","<git><git-merge><git-pull>","What causes git to make automatic commits on pull?","<p>I have been working on different repositories and noticed a different behaviour: in one project when I pull other people's work into mine I just get their commit in my history, in another one git creates an automatic merge commit when I pull. In both cases there were no conflicts, and both repositories are bare repos on the same server.</p>

<p>What causes git to add or not add this automatic merge commit on pull?</p>
","0","148968","",""
"35909857","390409","2016-03-10 07:10:45","2","126","<git><git-pull><git-clone>","how to update local unrevisioned files with git repository","<p>I have a git repository with 2-3 GB size of files and the same files I have on my local machine as backup. How do I clone the git repository on my local so that it replaced my unversioned files with git repo files to save time and bandwidth. </p>
","2","390409","0","0"
"43736259","3169909","2017-05-02 11:02:59","0","216","<python><git><python-3.x><git-pull><gitpython>","Get diff git commit objects in gitpython on git fetch or pull","<p>How can i get updated commits from remote to local branch when we call git pull or git fetch?</p>

<p>I need to know the list of commits that are updated on call of git.pull so that i will get to know the list of files that got changed ,author of the commit who have made the commit. </p>
","3","3169909","",""
"52009372","10270808","2018-08-24 17:39:40","1","290","<git><git-merge><git-pull>","How to avoid a file in a pull request with git","<p>When cloning a Rails repository I have to update the mysql2 gem localy to a newer version for it to run on my machine. When creating a branch and then pull request with my changes how do I avoid adding the changed gem into the pull request?</p>
","2","10270808","",""
"62412563","5161457","2020-06-16 15:52:01","9","3142","<laravel><git><githooks><git-pull><file-ownership>","Prevent git from overwriting file owner upon git pull","<p>I've seen a handful of similar questions on here, but none of the solutions given seem to be working... wondering if they're outdated, or this case is somehow different...so I wanted to open up a new thread to talk about it. </p>

<p>I've run into a frustrating problem where, every time I perform and <code>git pull</code>, it changes the owner to the pull-er's user. What happens then is that the site shows the following error:</p>

<p><code>Warning: file_get_contents(/var/www/html/wp-content/themes/&lt;my-theme&gt;/resources/views/&lt;changed-file&gt;): failed to open stream: Permission denied in /var/www/html/wp-includes/class-wp-theme.php on line 1207</code></p>

<p>which can only be fixed by running <code>chown www-data</code> on the changed file.</p>

<p>This will become an issue when more people begin to work on the site, or when important files are change (default template/header/footer..), and the site goes blank until chown is run.</p>

<hr>

<h2>Site details</h2>

<p>Laravel, wordpress, ubuntu 18, armor hosting </p>

<p>Git repo stored in custom theme</p>

<hr>

<p>I've tried a few solutions, but none seem to work, (perhaps because they're implemented incorrectly..)</p>

<h2>Solutions I've tried</h2>

<p>1: set filemode to false - I set filemode to false, locally and globally, on my local machine and the server in question. I've tried changing the case to ""fileMode"" too.</p>

<p>2: implement post-update hook - I added a post update hook to automatically update the file permissions/ownership. Here's the script (note that the git repo is in the custom theme):</p>

<pre><code>#!/bin/sh

# default owner user
OWNER=""www-data:www-data""

# changed file permission
PERMISSION=""664""

# web repository directory
REPO_DIR=""/var/www/html/wp-content/themes/quorum-theme""

# remote repository 
REMOTE_REPO=""origin""

# public branch of the remote repository
REMOTE_REPO_BRANCH=""master""

cd $REPO_DIR || exit
unset GIT_DIR
files=""$(git diff-tree -r --name-only --no-commit-id HEAD@{1} HEAD)""
git merge FETCH_HEAD

for file in $files
do
  sudo chown $OWNER $file
  sudo chmod $PERMISSION $file
done

exec git-update-server-info
</code></pre>

<hr>

<p>Let me know if there is anything else worth trying, or if you notice an issue with my code...</p>

<p>All the best,</p>

<p>Jill</p>
","3","5161457","0","0"
"62625777","13466110","2020-06-28 17:09:55","0","503","<git><gitlab><ssh-keys><git-pull><git-remote>","why I don't have access to gitlab repository after doing git pull to update my local project?","<p>The team that I work for transferred the project from bitbucket to gitlab, so while I was working before the transfer, I didn't have any problem with bitbucket, I mean with the SSH key, I inserted on bitbucket the public key that I created with my laptop and everything's going well,  so I was doing git pull, push, add, commit...etc.
but after transferring the project to git-lab( I registered myself on git-lab and I was invited to the project by the boss, I put my public key on git-lab), I made <code>git remote set-URL origin git@gitlab.com:...path.../file.git</code> to update my origin project, so I didn't receive anything as a reply for this command line.
so after that, when I did <code>git pull</code>, I don't have access( permission denied ), I don't understand why.
you can see the picture bellow.
Is there someone here who knows why ?
THANKS <img src=""https://i.stack.imgur.com/lonBD.jpg"" alt=""enter image description here"" /></p>
","3","13466110","",""
"52102650","1502493","2018-08-30 17:37:04","0","322","<git><visual-studio><visual-studio-2017><git-pull><team-explorer>","GIT in VS2017r - How do I recover from a Team Explorer git Repo Sync that failed because tip is behind remote tip","<p>How do I get the Master branches of my remote repo and my local repo back into sync in Team Explorer?</p>

<p><strong>Situation:</strong>
I have my app code in VSTS in a remote git repo.  I do all my work in Master, normally on my local (Dallas) machine, and use VS 2017 Team Explorer ""SYNC"" to periodically sync it up to the remote repo on VSTS.</p>

<p>On 25 Aug I made some changes to the code but had not yet committed them.  On 26 Aug I had to go for a three day visit to Austin.  While in Austin, I had to make some changes to the code so I cloned the repo from VSTS to my laptop, made the changes, committed them (see commit 8af in log below), and synched back to VSTS.</p>

<p>Upon my return to Dallas on 29 Aug, I went into the local machine, realized I had some uncommitted work, and committed it (see commit 310 in log below).  I then tried to sync with the master on VSTS and got the ""<em>tip is behind</em>"" error (see log below).</p>

<p>Tried a pull and got another error:</p>

<p>Pull operation failed.
The pull would overwrite your local changes to the following 3 files:</p>

<pre><code>.vs/slnx.sqlite
/Account/Logout.cshtml
/App_Data/RESTORE BackupFile to SQL 2016 localdb.sql
</code></pre>

<p>From that point, trying to follow the (helpful?) hints and error messages, I got into even deeper trouble, added some more local commits, and am now quite confused.  The beauty of the Git integration in VS 2017 is it keeps you from having to know a lot about git.  That is also the evil in that setup!  I am pretty clueless when I have to work beneath the abstractions of VS 2017</p>

<p>I want to end up with history in origin and in the local Dallas repo to look like this</p>

<pre><code> Commit     ORIGIN  Local      Notes
 3d6                X(HEAD)    X(HEAD)  
 db9                X          X
 5e6                X          X
 310                X          X
 8af                X          X
 aa8                X          X   
</code></pre>

<p>As opposed to the current state:</p>

<pre><code> Commit           ORIGIN     Local
 3d6                           X(HEAD)  
 db9                           X
 5e6                           X
 310                           X
 8af                X(HEAD)
 aa8                X          X    (common parent of 8af and 3d6)
</code></pre>

<p>Hopefully this description and the (edited) log info below will help someone help me out of this mess.  The original git documentation is turgid and incomprehensible. I tried Revert and reset (not fully understanding them) and got nowhere but in trouble.</p>

<p>My situation doesn't seem to fit any of the solutions I have been able to find via Googling and stack overflow.</p>

<p>My best guess is <code>git push -f</code> .  I am the only one working on this app.  However, I am worried given all the warnings on the dangers of git push -f.  If I did <code>git push -f</code> in the above scenario, what gets overwritten?  I am guessing it would be commit 8af (which is only on the origin master and has the common parent with the recent commits that would be pushed.  Is that a correct guess?</p>

<p>I would appreciate someone telling me what I need to do here.</p>

<p><strong>edited (""merged"")log</strong> 
(All commits, changes made, etc. were in Master branch)
C:\Users\rrrob\Source\VS2017Rafino>git log</p>

<p>commit 3d6 (HEAD -> master) <em>NOT IN ORIGIN</em> Thu Aug 30 08:38:18 2018 -0500</p>

<p>commit db9 Wed Aug 29 16:01:53 2018 -0500 <em>NOT IN ORIGIN</em></p>

<p>commit 5e6 Wed Aug 29 15:08:24 2018 -0500 <em>NOT IN ORIGIN</em></p>

<p><strong>29 Aug</strong> returned to Dallas, committed previously uncommitted changes in Master and tried to sync.
received ""Error encountered while pushing to the remote repository: rejected Updates were rejected because the tip of your current branch is behind its remote counterpart. Integrate the remote changes  before pushing again."" 
tried to Pull )(possibly Fetch?) from origin and received further error: ""Pull operation failed.""
commit 310 Wed Aug 29 15:05:47 2018 -0500 <em>NOT IN ORIGIN</em>  (parent is aa8)</p>

<p><strong>26</strong> AUG went to Austin, cloned repo, made changes in master, committed, and sync'd with master in origin
commit 8af Tues Aug 28 12:56 5:56PM (UTC) <em>NOT IN Dallas Local Repo</em> (parent is aa8)</p>

<p><strong>LAST Successful SYNC in Team Explorer</strong>
commit aa8 Thu Aug 16 15:10:06 2018 -0500  <em>in Dallas and in origin</em></p>

<p>commit a8b Tue Aug 14 10:32:43 2018 -0500</p>
","0","1502493","",""
"62659379","2402577","2020-06-30 14:10:00","4","1053","<git><git-rebase><git-pull>","Difference between `git pull --rebase --autostash` and `git pull --ff-only`?","<p>Following question <a href=""https://stackoverflow.com/questions/30208928/can-git-pull-automatically-stash-and-pop-pending-changes"">Can “git pull” automatically stash and pop pending changes</a> has solutions using both:</p>
<ul>
<li><p><code>git pull --rebase --autostash</code></p>
</li>
<li><p><code>git pull --ff-only</code></p>
</li>
</ul>
<p>I am little bit confused about which one should I use. Do they actually accomplish same result? Very similiar <a href=""https://stackoverflow.com/q/25430600/2402577"">question</a> is asked which does not has <code>--autostash</code> parameter along with the <code>--rebase</code></p>
","1","2402577","0","0"
"25390958","1394141","2014-08-19 18:55:43","0","158","<php><git><openshift><git-pull>","update openshift git repository after changes are made by client","<p>I have a php app on openshift with mysql and manage it through git. I can easily add photos to my local clone and push it up to git and it works fine. But when a client uploads a photo through my site, to the openshift server, that uploaded photo (via php $_FILE) doesn't get pushed into the git repo and when I pull git repo to my local machine I can't find that uploaded photo. Any workaround?</p>
","0","1394141","",""
"36100618","6077300","2016-03-19 10:37:15","0","1009","<git-pull><libgit2sharp>","Libgit2sharp:how to use ""git pull“","<pre><code>using (var repo = new Repository(""path/to/your/repo""))
{
    LibGit2Sharp.PullOptions options = new LibGit2Sharp.PullOptions();
    options.FetchOptions = new FetchOptions();
    options.FetchOptions.CredentialsProvider = new CredentialsHandler(
        (url, usernameFromUrl, types) =&gt;
            new UsernamePasswordCredentials()
            {
                Username = USERNAME,
                Password = PASSWORD
            });
    repo.Network.Pull(new LibGit2Sharp.Signature(USERNAME, EMAIL, new DateTimeOffset(DateTime.Now)), options)
}
</code></pre>

<p>i do not konw how to set arguments,when i use it,one error will show-----Unsupported URL protocol.could you tell me how to set arguments?</p>
","1","6077300","",""
"7446446","928763","2011-09-16 14:47:16","7","13027","<git><git-pull>","getting 'Aborting' after git has pulled some files","<p>I use git for versioning, I am trying to pull code changes from the server. 
As i run 'git pull origin master', after pulling some files its showing me 'Aborting'.
Whats this about, I have been working on git past 3 months but no such thing happened. Is there something corrupted?</p>

<p>Also unable to 'git push' since all the files have not been pulled</p>

<p>its like:</p>

<pre><code> * branch            master     -&gt; FETCH_HEAD
error: The following untracked working tree files would be overwritten by merge:
    sites/all/modules/examples/form_example/form_example_tutorial.inc
    sites/all/modules/examples/form_example/form_example_wizard.inc
    sites/all/modules/examples/image_example/image_example.info
    sites/all/modules/examples/image_example/image_example.install
    sites/all/modules/examples/image_example/image_example.module
    sites/all/modules/examples/image_example/image_example.pages.inc
    sites/all/modules/examples/image_example/image_example.test
    sites/all/modules/examples/js_example/accordion.tpl.php
    sites/all/modules/examples/js_example/css/jsweights.css
    sites/all/modules/examples/js_example/js/ajaxy.js
    sites/all/modules/examples/js_example/js/black.js
    sites/all/modules/examples/js_example/js/blue.js
    sites/all/modules/examples/js_example/js/brown.js
    sites/all/modules/examples/js_example/js/green.js
    sites/all/modules/examples/js_example/js/purple.js
    sites/all/modules/examples/js_example/js/red.js
    sites/all/modules/examples/js_example/js_example.info
    sites/all/modules/examples/js_example/js_example.module
    sites/all/modules/examples/menu_example/menu_example.info
    sites/all/modules/examples/menu_example/menu_example.module
    sites/all/modules/examples/menu_example/menu_example.tes
Aborting
</code></pre>
","1","928763","0","0"
"62893041","8118003","2020-07-14 10:23:44","-1","543","<c++><git-pull><libgit2>","pull using libgit2, c++","<p>I try pull from remote master to local master. In remote master only one not synchronized commit.</p>
<p>Error in method git_annotated_commit_lookup():</p>
<blockquote>
<p>Git Error -3 : object not found - no match
for id (08f4a8cc00400100f083caccd755000020299210)</p>
</blockquote>
<p>In callback fetchhead_ref_cb never exevute code in &quot;if&quot; block.</p>
<pre class=""lang-cpp prettyprint-override""><code>
    int fetchhead_ref_cb(const char *name, const char *url,
       const git_oid *oid, unsigned int is_merge, void *payload)
    
    {
       qDebug() &lt;&lt; &quot;fetchhead_ref_cb&quot;;
       if (is_merge)
       {
            qDebug() &lt;&lt; &quot;Is merge&quot;;
            git_oid_cpy((git_oid *)payload, oid);
       }
       return 0;
    }

    bool pullBranch()
    {
        int error;
        git_remote *remote;
        git_oid branchOidToMerge;
            
        /* lookup the remote */
        error = git_remote_lookup(&amp;remote, repo, &quot;origin&quot;);
        if (!checkForError(error, &quot;Remote lookup&quot;)) {
            git_fetch_options options = GIT_FETCH_OPTIONS_INIT;
            options.callbacks.credentials = cred_acquire_cb;
            error = git_remote_fetch(remote,
                                     NULL, /* refspecs, NULL to use the configured ones */
                                     &amp;options, /* options, empty for defaults */
                                     &quot;pull&quot;); /* reflog mesage, usually &quot;fetch&quot; or &quot;pull&quot;, you can leave it NULL for &quot;fetch&quot; */
            if (!checkForError(error, &quot;Remote fetch&quot;)) {
    
                git_repository_fetchhead_foreach(repo, fetchhead_ref_cb, &amp;branchOidToMerge);
    
                git_merge_options merge_options = GIT_MERGE_OPTIONS_INIT;
                git_checkout_options checkout_options = GIT_CHECKOUT_OPTIONS_INIT;
                git_annotated_commit *commit;
    
                error = git_annotated_commit_lookup(&amp;commit, repo, &amp;branchOidToMerge);
                if (!checkForError(error, &quot;Annotated commit lookup&quot;)) {
                    error = git_merge(repo, (const git_annotated_commit **)commit, 1, &amp;merge_options, &amp;checkout_options);
                    if (!checkForError(error, &quot;Merge&quot;)) {
                        git_annotated_commit_free(commit);
                        git_repository_state_cleanup(repo);
                        git_remote_free(remote);
                        return true;
                    }
                }
            }
        }
        git_remote_free(remote);
        return false;
    }

     
</code></pre>
","1","8118003","",""
"52268090","","2018-09-11 03:04:42","2","530","<git><git-merge><git-rebase><git-pull>","Running `git pull --rebase`, what does it rebase against?","<p>I see a lot of examples of:</p>

<p><code>git pull --rebase</code></p>

<p>but I am left wondering what branch is merged into the current branch. Shouldn't it be <code>git pull --rebase &lt;master&gt;</code> or <code>git pull --rebase &lt;dev&gt;</code>?</p>
","3","","0","0"
"25963039","621033","2014-09-21 19:30:42","3","1821","<git><github><git-commit><git-pull>","How to exclude a commit from git pull request?","<p>I have made a git pull request with my repo. Sometime later, before pull request got approved, I proceeded to make another commit&amp;push which also got pushed up to pull request.</p>

<p>Is there a way to remove the last commit from pull request and how to prevent this from happening in the future?</p>
","0","621033","0","0"
"6994773","455137","2011-08-09 10:31:20","10","906","<php><git><version-control><git-pull>","Performing a git pull in pure PHP","<p>I was wondering if anyone knows of a library or how to perform a get pull request with pure PHP, <strong>without</strong> git being installed on the server.</p>

<p>First of all, is this even possible? I have seen the odd class, but they don't seem to be able to perform pull requests.</p>

<p>I guess an alternative would be bundling some form of stripped down version of git with my script. Would that be possible?</p>

<p>I am really at a loss here so any help or suggestions would be much appreciated.</p>

<p>Thanks.</p>
","10","455137","0","0"
"44082091","2527470","2017-05-20 04:59:58","1","808","<git><git-merge><git-pull>","Does 'git pull origin master' has difference with 'git merge master'?","<p>Due to the scenario is quite specific, so, I think I have to post a new question.</p>

<p>Assuming that I have 2 branch named 'master' &amp; 'A' separately.</p>

<p>Approach A:
In branch A, use <code>git pull origin master</code> then resolve conflicts if any</p>

<p>Approach B:
In branch master use <code>git pull</code> to pull latest changes from remote,
then <code>checkout A</code> to branch A, use <code>git merge master</code> then resolve conflicts if any.</p>

<p>Are these both approaches above has same result?</p>
","1","2527470","",""
"62997644","11464903","2020-07-20 14:28:07","0","97","<ssh><gitlab><gitlab-ci><git-pull>","I want to push my GitLab code on my website server using gitlab ci and ssh but it doesn't work correctly when I pull","<p>I have made this .gitlab-ci.yml to push my code automatically on my webserver:</p>
<pre><code>stages:
    - deploy

deploy:
    stage: deploy
    image: ubuntu:latest
    environment:
        name: production
    only:
        - master
    before_script:
        - 'which ssh-agent || ( apt-get update -y &amp;&amp; apt-get install openssh-client -y )'
        - mkdir -p ~/.ssh
        - eval $(ssh-agent -s)
        - '[[ -f /.dockerenv ]] &amp;&amp; echo -e &quot;Host *\n\tStrictHostKeyChecking no\n\n&quot; &gt; ~/.ssh/config'
        - apt-get update -qq &amp;&amp; apt-get install -y -qq sshpass
        - apt-get install -y -qq git
        - export SSHPASS=$AddressServerWebSSHPwd
    script:
        - sshpass -e ssh -p 22 $AddressServerWebSSH cd www/web-jjb &amp;&amp; ls -auxl &amp;&amp; git pull origin master &amp;&amp; echo &quot;test&quot; &amp;&amp; ls -auxl
</code></pre>
<p>Everything works, the ssh connections are correct, the pull also until the result.
If I look on the log of the pipeline, the pull work:
<a href=""https://i.stack.imgur.com/m1ILo.png"" rel=""nofollow noreferrer"">https://i.stack.imgur.com/m1ILo.png</a></p>
<p>But when I look on fileZilla, there are nothing... (He is supposed to add index.php):
<a href=""https://i.stack.imgur.com/Hg0NI.png"" rel=""nofollow noreferrer"">https://i.stack.imgur.com/Hg0NI.png</a></p>
<p>Somebody got an idea ?
Thanks</p>
","0","11464903","",""
"7616742","754842","2011-09-30 22:36:12","15","1504","<git><version-control><git-merge><git-pull>","What are these symbols next to ""merge mode by recursive"" in git merge?","<p>When I use <code>git pull [project name] master</code> to update my core files, I get a bunch of green plus and red minus signals under ""merge made by recursive."" What are these symbols and what do they mean? </p>

<p>Here's a screenshot:</p>

<p><img src=""https://i.stack.imgur.com/e82eQ.jpg"" alt=""git pull""></p>

<p>Thank you for your help. </p>
","1","754842","0","0"
"63001513","722393","2020-07-20 18:14:41","2","1447","<git><visual-studio><visual-studio-2019><default><git-pull>","How to discover the current default behavior for git pull?","<p>I've started receiving this warning at VS Code startup:</p>
<p><a href=""https://i.stack.imgur.com/UgTYu.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/UgTYu.png"" alt=""enter image description here"" /></a></p>
<p>So I downloaded Git for Windows v2.27.0. Upon running the installer, I encountered this prompt:</p>
<p><a href=""https://i.stack.imgur.com/3gJvY.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/3gJvY.png"" alt=""enter image description here"" /></a></p>
<p>I'd like to choose the same default behavior that Visual Studio did when it first installed Git for me, so as to keep everything working smoothly. I'm enough of a novice at Git that I wouldn't want things to go awry.</p>
<p>I haven't proceeded yet; I don't want to risk mucking it up.</p>
<p><a href=""https://stackoverflow.com/q/40739305/722393"">This Q&amp;A</a> discusses the concept but doesn't quite get there on finding out what the default is. The <a href=""https://git-scm.com/docs/git-pull"" rel=""nofollow noreferrer"">official documentation</a> comes up short here as well.</p>
<p>Is there a way to determine the current default?</p>
<p>If there isn't, is it possible to change the default after the fact, in case I choose the wrong option?</p>
","2","722393","0","0"
"7622616","47633","2011-10-01 20:02:09","68","44035","<git><git-pull>","executing a git pull from a different directory","<p>I'm configuring <a href=""https://github.com/guillaumebort/calimoucho"" rel=""noreferrer"">calimoucho</a> (a little play continuos integration server), and for it to work I need to run a command to pull a cloned git hub repository from outside it.</p>

<p>to be more precise, I'll explain it with an example.</p>

<p>I have the following repository</p>

<pre><code>cd /home/sas
mkdir apps
cd apps
mkdir myApp
cd myApp
git init
echo ""my file"" &gt; file
git add .
git commit -m ""initial commit""
</code></pre>

<p>Just a silly test repository where my app is supossed to be</p>

<p>Now I need to clone that repository to a checkout folder. </p>

<pre><code>cd /home/sas
mkdir calimoucho
cd calimoucho
mkdir checkout
cd checkout
git clone /home/sas/apps/myApp/ 
</code></pre>

<p>so I have the following directory structure</p>

<pre><code>~/apps
    myapp
      .git
      file
~/calimoucho
    checkout
      myapp
        .git
        file
</code></pre>

<p>The continuos integration server will have to pull new changes from ~/apps/myapp to ~/calimoucho/checkout/myapp, running a command line sentence from ~/calimoucho</p>

<p>I try with the following command</p>

<pre><code>~/calimoucho$ git --git-dir=/home/sas/apps/myApp/.git --work-tree=/home/sas/calimoucho/checkout/myApp/ pull
</code></pre>

<p>and I get the following error</p>

<pre><code>fatal: /usr/lib/git-core/git-pull cannot be used without a working tree.
</code></pre>

<p>if I don't specify the --work-tree option, the pull is issued, but changes are applied to ~/calimoucho folder instead of ~/calimoucho/checkout/myApp</p>

<p>any idea how to update the cloned repo from the ~/calimoucho folder?</p>

<p>thanks a lot</p>
","1","47633","0","0"
"25798996","1850767","2014-09-12 00:36:08","0","84","<git><svn><git-merge><git-pull>","Need to merge a git branch forcefully onto the master after svn import","<p>I have a small project that was migrated from SVN.  I wasn't sure how to do it so I made a new git repo and two branches, 'master' and 'current'.  I then just copied the files into 'current' and continued development.</p>

<p>I finally got around to trying to import the changes to keep track of them.  I 'git svn fetch' the old repository and committed it to 'master'.  Now 'master' is a history of all the svn changes, and 'current' is my latest stuff.</p>

<p>I now want to just merge 'current' onto 'master', using 'current' as the absolute source of truth... so if it doesn't exist in 'current', it is deleted from 'master', and modified files in 'current' are used to overwrite the ones in 'master', all while keeping the commit history of 'current'.</p>

<p>Any ideas on the best way to go about this?</p>
","0","1850767","",""
"63005678","342540","2020-07-21 00:31:51","1","66","<git><synchronization><git-push><git-pull><gitea>","Why is git reporting 'up to date' after a ""git pull""?","<h1>What am I doing wrong here with what should be a simple sync between devices and a remote?</h1>
<p>I've looked at other answers here and ended up more confused after trying some of the suggested solutions. This has got to be something really simple.</p>
<h2>The scenario:</h2>
<h3>what I'm trying to do:</h3>
<p>I want to synchronize between a local copy of a kdbx database between multiple devices. For the purposes of this discusson, I'll simply define two devices used locally and my remote Git repo on a gitea server:</p>
<ol>
<li>My Gitea server (we'll call this <strong>gitea.host</strong>)</li>
</ol>
<p>An empty repo has been created on this remote Git server called, <strong>kdbx</strong>.</p>
<ol start=""2"">
<li>My laptop / desktop device (we'll call this <strong>laptop</strong>)</li>
</ol>
<p><em>KeePassXC</em> and the companion browser plugin has been installed in Firefox on <strong>laptop</strong>. Git is also installed.</p>
<p>The database being used by <em>KeePassXC</em> is <em>joeuser.kdbx</em></p>
<ol start=""3"">
<li>My Android device (we'll call this device, <strong>android</strong>)</li>
</ol>
<p><em>KeePassDX</em> has been installed on <strong>android</strong>. I also have Termux installed.</p>
<h3>Initial setup:</h3>
<ul>
<li>On <strong>android</strong> we open termux perform the following:</li>
</ul>
<pre><code>pkg install git
pkg install vim
cd storage/shared
mkdir private/keys
cd private/keys
git config --global user.name &quot;joeuser&quot;
git config --global user.email &quot;joeuser@gmail.com&quot;
git clone https://gitea.host/joeuser/kdbx.git
</code></pre>
<p>Open <em>KeepassDX</em>, choose <em>joeuser.kdbx</em> and check... All entries are there and it is working.</p>
<ul>
<li>On <strong>laptop</strong> we perform the following:</li>
</ul>
<pre><code>cd /home/joeuser
mkdir private/keys
cd private/keys
git config --global user.name &quot;joeuser&quot;
git config --global user.email &quot;joeuser@gmail.com&quot;
git clone https://gitea.host/joeuser/kdbx.git
</code></pre>
<p>move <em>joeuser.kdbx</em> from wherever it is to /home/joeuser/private/keys/kdbx</p>
<p>Open <em>KeepassXC</em>, connect to /home/joeuser/private/keys/kdbx/<em>joeuser.kdbx</em> and check... All entries are there and it is working.</p>
<h3>Add new entry in database on 'laptop' and sync with remote:</h3>
<p>It doesn't really matter which device we use first, but for this example we'll start with <strong>laptop</strong></p>
<p><strong>NOTE</strong>: We've also installed the <em>KeePassXC</em> browser plugin which will be used here.</p>
<ol>
<li>Open <em>KeePassXC</em>, unlock the database, <em>joeuser.kdbx</em></li>
<li>Open browser (For example, Firefox) and visit a site like, for example, <a href=""https://joeuser.com"" rel=""nofollow noreferrer"">https://joeuser.com</a></li>
<li>login, and the browser plugin asks if you wish to add the uid/pwd combo into a new entry, and accept.</li>
<li>Go back to <em>KeePassXC</em> and verify there's now an entry in the kdbx database. Everything looks good.</li>
<li>Push the database to remote origin:</li>
</ol>
<pre><code>git add .
git merge -m &quot;added entry in kdbx&quot;
git push
</code></pre>
<h3>sync 'android' with remote:</h3>
<p>1 Open <em>termux</em> and perform the following:</p>
<pre><code>cd storage/shared/private/keys/kdbx
git pull
</code></pre>
<ol start=""2"">
<li>Open <em>KeePassDX</em>, and connect to the database private/keys/kdbx/joeuser.kdbx</li>
<li>check for the login entry for joeuser.com and it is there.</li>
<li>Go back to <em>KeePassDX</em>, add another uid/pwd entry in the database.</li>
<li>in the <em>termux</em> session, perform:</li>
</ol>
<pre><code>git add .
git merge -m &quot;added another entry in db&quot;
git push
</code></pre>
<p>At this point everything comes to a screeching halt. a push, a pull from either local device results in messages from Git stating:</p>
<p><code>Already up to date</code> for a pull and <code>Everything up to date</code> for a push.</p>
<h2>Problem! How to solve?</h2>
<blockquote>
<p>I wanted to model this after the way that <strong>pass</strong> works on UNIX/Linux
workstations along with its counterpart combination of <strong>Password
Store</strong> and <strong>OpenKeyChain</strong> works on Android. Basically, <strong>pass</strong>
uses git to synchronize between my remote Gitea server's private repo
and all I have to do when using either <em>laptop</em> or <em>android</em> is to
pull down the settings menu and choose sync - voila! The device is now
synchronized with the remote repo, and it works flawlessly everytime.</p>
</blockquote>
<h2>What am I doing wrong here? How can I solve this and gain the functionality that I'm seeking to harness?</h2>
<p>I've never really had issues before using git with local and remote repos, but then again, with the exception of <strong>pass/Password Store/OpenKeyChain</strong> I've always worked with a team that included others and was never really all that concerned with doing a pull of my own updates from remote (because, by definition, I already had them) unless I was moving to a new device. I was getting everyone elses contribs as expected.</p>
","4","342540","0","0"
"8044675","165448","2011-11-08 00:45:13","44","123450","<git><git-pull><git-stash>","Pull is not possible because you have unmerged files, git stash doesn't work. Don't want to commit","<p>I just want to pull. I have changes to disregard, my Gemfile and Gemlock files and I'd be happy to just overwrite them and just pull. I tried stashing my changes away, this didn't work out for me. What do I do?</p>

<pre><code>git pull
M   Gemfile
U   Gemfile.lock
Pull is not possible because you have unmerged files.
Please, fix them up in the work tree, and then use 'git add/rm &lt;file&gt;'
as appropriate to mark resolution, or use 'git commit -a'.
~/projects/sms/apps2/apps2_admin(apps2)$ git stash save ""saved""
Gemfile.lock: needs merge
Gemfile.lock: needs merge
Gemfile.lock: unmerged (4ea16799dba7bfe1db28adecf36dee1af5195c1a)
Gemfile.lock: unmerged (e77439c9f86d1d0eda7ae0787e3e158f90959e68)
Gemfile.lock: unmerged (d690d3860db1aa8e46c1bb2f4de3e52a297b5c26)
fatal: git-write-tree: error building trees
Cannot save the current index state
~/projects/sms/apps2/apps2_admin(apps2)$ git pull
M   Gemfile
U   Gemfile.lock
Pull is not possible because you have unmerged files.
Please, fix them up in the work tree, and then use 'git add/rm &lt;file&gt;'
as appropriate to mark resolution, or use 'git commit -a'.
</code></pre>
","3","165448","0","0"
"26157389","4093810","2014-10-02 08:52:32","1","3536","<git><ubuntu><offline><git-pull>","How to pull a git repository on ubuntu without internet connection?","<p>I want to use Git over the local network in our company because I don't have internet access in my computer. My friend has an internet connection and an ubuntu machine, he pushed some source codes to Git and I need to pull them without Internet connection and I also use ubuntu 14.04. 
Additionaly, I set up a repository with the command:</p>

<pre><code>git init --bare
</code></pre>

<p>EDIT: Both machines are ubuntu, sorry for the misunderstanding.</p>
","4","4093810","",""
"8565828","823392","2011-12-19 18:39:28","3","1875","<git><ubuntu><tortoisegit><git-pull>","Troubleshooting git pull","<p>I've set up a git repo via ssh on an Ubuntu box I'm using as a media center/backup server.</p>

<p>the steps I took were:</p>

<pre><code>cd repos
git init &lt;repoName&gt;
cd &lt;repoName&gt;
git config --bool core.bare true
</code></pre>

<p>I've been able to successfully push and pull from my desktop and laptop via TortoiseGit, however a git pull via SSH returns:</p>

<pre><code>fatal: /usr/lib/git-core/gitpull cannot be used without a working tree. 
</code></pre>

<p>I'm very new to terminal/ssh so any help would be greatly appreciated! </p>
","1","823392","",""
"8114813","1044601","2011-11-13 21:17:42","4","281","<git><git-push><git-pull>","How to fix a deleted git commit branch or refs?","<p>Ok, I got a little problem with git. Seems by accidentally, I delete one of git commit branch / refs / or something. So.... every time I try to use the ""git push"" there is always an error like below : </p>

<pre><code>Counting objects: 62, done.
error: unable to find 917c9bbd15d005484257180c1de94a479d7a7a43
Delta compression using up to 4 threads.
Compressing objects: 100% (43/43), done.
fatal: unable to read 917c9bbd15d005484257180c1de94a479d7a7a43
fatal: early EOF
error: failed to push some refs to 'slk@busaway.org:studentreg.git'
</code></pre>

<p>how to fix this ?  I tried the ""git pull / git fsck / "" and none has working so far... >.&lt;""</p>

<p>Thanks in advance ^^</p>
","2","1044601","0","0"
"8160512","1050708","2011-11-17 00:09:07","10","3212","<git><git-merge><git-pull>","preventing git merge to master branch","<p>I am using branching to create and deploy custom instances of out platform. These instances usually start as a branch from the 'master' branch, get customized somewhat, get deployed into testing and production, and finally archived.</p>

<p>If new features or bug fixes are added into the master I would like to be able to fetch/merge them into my project instances (branches), but I almost never want to merge back changes from the branches to the master. This occurred recently by mistake and has created some serious headaches. A git pull to update a repository merged everything into the master branch and then was pushed back into the main repo. </p>

<p>Is there any easy way to forbid merging back into the master? Or at least requiring some --force flag?</p>
","0","1050708","0","0"
"26376832","4120409","2014-10-15 07:28:00","308","700017","<git><git-pull><merge-conflict-resolution><git-fetch>","Why does git say ""Pull is not possible because you have unmerged files""?","<p>When I try to pull in my project directory in the terminal, I see the following error:</p>

<pre><code>harsukh@harsukh-desktop:~/Sites/branch1$ git pull origin master
U app/config/app.php
U app/config/database.php
U app/routes.php
Pull is not possible because you have unmerged files.
Please, fix them up in the work tree, and then use 'git add/rm &lt;file&gt;'
as appropriate to mark resolution, or use 'git commit -a'.
</code></pre>

<p>Why does git say <code>""Pull is not possible because you have unmerged files""</code>, and how can I resolve it?</p>
","3","4120409","0","0"
"8648230","850868","2011-12-27 19:00:01","0","2511","<git><git-pull>","Issues with git pull across branches: fatal: Couldn't find remote ref","<p>I know what I did wrong but don't know what it messed up or how it can be rectified.</p>

<p>So I was on branch product which is same as master. Then I have another branch release-28122011. I was working on release-28122011. Then I did</p>

<p>git pull origin product -- this may have updated some references in the release branch to update to product</p>

<p>then I realized my mistake and tried to do git pull from release but it throws fatal errors. Is there any way to rectify this.</p>

<pre><code>kamal@kamal-Lenovo-G470:~/git/BigHelloWorld$ git stash
Saved working directory and index state WIP on release-28122011: 4ab88ba Merge branch 'release-28122011' of ssh://182.71.101.50/BigHelloWorld into release-28122011
HEAD is now at 4ab88ba Merge branch 'release-28122011' of ssh://182.71.101.50/BigHelloWorld into release-28122011
kamal@kamal-Lenovo-G470:~/git/BigHelloWorld$ gs
# On branch release-28122011
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   BigHelloWorldWeb/src/main/java/com/BigHelloWorld/web/filter/RequestIdentifierFilter.java
#   modified:   BigHelloWorldWeb/src/main/webapp/views/mobile/set1/about.jsp
#   modified:   BigHelloWorldWeb/src/main/webapp/views/mobile/set1/addressDetails.jsp
#   modified:   BigHelloWorldWeb/src/main/webapp/views/mobile/set1/failureNotice.jsp
#   modified:   BigHelloWorldWeb/src/main/webapp/views/mobile/set1/home.jsp
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   BigHelloWorldWeb/src/main/webapp/views/mobile/docomo/
no changes added to commit (use ""git add"" and/or ""git commit -a"")
kamal@kamal-Lenovo-G470:~/git/BigHelloWorld$ git add .
kamal@kamal-Lenovo-G470:~/git/BigHelloWorld$ gs
# On branch release-28122011
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#   modified:   BigHelloWorldWeb/src/main/java/com/BigHelloWorld/web/filter/RequestIdentifierFilter.java
#   modified:   BigHelloWorldWeb/src/main/webapp/views/mobile/set1/about.jsp
#   modified:   BigHelloWorldWeb/src/main/webapp/views/mobile/set1/addressDetails.jsp
#   modified:   BigHelloWorldWeb/src/main/webapp/views/mobile/set1/failureNotice.jsp
#   modified:   BigHelloWorldWeb/src/main/webapp/views/mobile/set1/home.jsp

kamal@kamal-Lenovo-G470:~/git/BigHelloWorld$ git commit -m ""WAP fixes 8"" BigHelloWorldWeb/src/main/java/com/BigHelloWorld/web/filter/RequestIdentifierFilter.java BigHelloWorldWeb/src/main/webapp/views/mobile/set1/about.jsp BigHelloWorldWeb/src/main/webapp/views/mobile/set1/addressDetails.jsp BigHelloWorldWeb/src/main/webapp/views/mobile/set1/failureNotice.jsp BigHelloWorldWeb/src/main/webapp/views/mobile/set1/home.jsp
[release-28122011 a7067bb] WAP fixes 8
 Committer: kamal &lt;kamal@kamal-Lenovo-G470.(none)&gt;
Your name and email address were configured automatically based
on your username and hostname. Please check that they are accurate.
You can suppress this message by setting them explicitly:

    git config --global user.name ""Your Name""
    git config --global user.email you@example.com

After doing this, you may fix the identity used for this commit with:

    git commit --amend --reset-author

 21 files changed, 738 insertions(+), 152 deletions(-)
 create mode 100644 BigHelloWorldWeb/src/main/webapp/views/mobile/docomo/purchaseConfirm.jsp
 create mode 100644 BigHelloWorldWeb/src/main/webapp/views/mobile/docomo/purchaseUserDetails.jsp
kamal@kamal-Lenovo-G470:~/git/BigHelloWorld$ git pull origin product
remote: Counting objects: 125, done.
remote: Compressing objects: 100% (62/62), done.
remote: Total 80 (delta 38), reused 0 (delta 0)
Unpacking objects: 100% (80/80), done.
From ssh://192.168.2.251/BigHelloWorld
 * branch            product    -&gt; FETCH_HEAD
Auto-merging BigHelloWorldResources/build/build.sql
Merge made by recursive.
 .../impl/CustomerCareAdminServiceImpl.java         |   16 ++-
 .../catalog/impl/ProductBulkUploadAdminImpl.java   |   21 +++--
 .../com/BigHelloWorld/core/dto/OrderItemDetailDTO.java  |   49 ++++++---
 .../com/BigHelloWorld/core/dto/SuborderDetailDTO.java   |   12 ++
 .../com/BigHelloWorld/core/dto/filter/FilterDTO.java    |  113 ++++++++++++++++++++
 .../BigHelloWorld/core/dto/filter/FilterListDTO.java    |   25 +++++
 .../main/java/com/BigHelloWorld/core/entity/Filter.java |   75 +++++++++++++
 .../java/com/BigHelloWorld/core/entity/FilterValue.java |   70 ++++++++++++
 .../com/BigHelloWorld/core/entity/ProductCategory.java  |   22 +++-
 .../com/BigHelloWorld/core/entity/ProductOffer.java     |   12 ++
 BigHelloWorldResources/build/build.sql                  |    6 +-
 .../java/com/BigHelloWorld/dao/filter/IFilterDao.java   |   29 +++++
 .../BigHelloWorld/dao/filter/impl/FilterDaoImpl.java    |   73 +++++++++++++
 .../BigHelloWorld/services/filter/IFilterService.java   |   28 +++++
 .../services/filter/impl/FilterServiceImpl.java    |   56 ++++++++++
 .../BigHelloWorld/web/controller/FilterController.java  |   78 ++++++++++++++
 .../webapp/WEB-INF/spring/applicationContext.xml   |    2 +
 .../main/webapp/WEB-INF/spring/spring-servlet.xml  |    1 +
 .../src/main/webapp/views/customer/orderDetail.jsp |    9 ++-
 19 files changed, 663 insertions(+), 34 deletions(-)
 create mode 100755 BigHelloWorldCore/src/main/java/com/BigHelloWorld/core/dto/filter/FilterDTO.java
 create mode 100755 BigHelloWorldCore/src/main/java/com/BigHelloWorld/core/dto/filter/FilterListDTO.java
 create mode 100755 BigHelloWorldCore/src/main/java/com/BigHelloWorld/core/entity/Filter.java
 create mode 100755 BigHelloWorldCore/src/main/java/com/BigHelloWorld/core/entity/FilterValue.java
 mode change 100644 =&gt; 100755 BigHelloWorldCore/src/main/java/com/BigHelloWorld/core/entity/ProductCategory.java
 mode change 100644 =&gt; 100755 BigHelloWorldCore/src/main/java/com/BigHelloWorld/core/entity/ProductOffer.java
 mode change 100644 =&gt; 100755 BigHelloWorldResources/build/build.sql
 create mode 100755 BigHelloWorldServices/src/main/java/com/BigHelloWorld/dao/filter/IFilterDao.java
 create mode 100755 BigHelloWorldServices/src/main/java/com/BigHelloWorld/dao/filter/impl/FilterDaoImpl.java
 create mode 100755 BigHelloWorldServices/src/main/java/com/BigHelloWorld/services/filter/IFilterService.java
 create mode 100755 BigHelloWorldServices/src/main/java/com/BigHelloWorld/services/filter/impl/FilterServiceImpl.java
 create mode 100755 BigHelloWorldWeb/src/main/java/com/BigHelloWorld/web/controller/FilterController.java
kamal@kamal-Lenovo-G470:~/git/BigHelloWorld$ git pull origin product
From ssh://192.168.2.251/BigHelloWorld
 * branch            product    -&gt; FETCH_HEAD
Already up-to-date.
kamal@kamal-Lenovo-G470:~/git/BigHelloWorld$ git status
# On branch release-28122011
# Your branch is ahead of 'origin/release-28122011' by 8 commits.
#
nothing to commit (working directory clean)
kamal@kamal-Lenovo-G470:~/git/BigHelloWorld$ git pull origin release-28122011
fatal: Couldn't find remote ref release-28122011
fatal: The remote end hung up unexpectedly
kamal@kamal-Lenovo-G470:~/git/BigHelloWorld$ git checkout release-28122011
Already on 'release-28122011'
Your branch is ahead of 'origin/release-28122011' by 8 commits.
kamal@kamal-Lenovo-G470:~/git/BigHelloWorld$ git status
# On branch release-28122011
# Your branch is ahead of 'origin/release-28122011' by 8 commits.
#
nothing to commit (working directory clean)
kamal@kamal-Lenovo-G470:~/git/BigHelloWorld$ git pull origin release-28122011
fatal: Couldn't find remote ref release-28122011
fatal: The remote end hung up unexpectedly
</code></pre>
","0","850868","",""
"8689054","229642","2011-12-31 15:58:23","38","52575","<git><github><git-pull><git-fetch>","git pull origin master does not update origin/master?","<p>According to the documentation, <strong>git pull</strong> performs a <strong>git fetch</strong> then a git merge, however in that case performing <strong>git pull origin master</strong> should perform a <strong>git fetch origin master</strong> right?  However,  it does not appear to be doing so.  Here is an example.</p>

<p>Supposed my remote origin master (on GitHub in my case) has the following history:</p>

<pre><code>commit 1111111 : my first commit
commit 2222222 : a commit from someone else
</code></pre>

<p>and I only have my first commit locally as doing following shows</p>

<pre><code>git checkout master
git log --pretty=format:'%h' -n 1
1111111

git checkout origin/master
git log --pretty=format:'%h' -n 1
1111111
</code></pre>

<p>From here I do my pull and look at the results as follows:</p>

<pre><code>git checkout master
git pull origin master

git log --pretty=format:'%h' -n 1
2222222

git checkout origin/master
git log --pretty=format:'%h' -n 1
1111111
</code></pre>

<p>As can be seen, the pull did in fact update my master branch with the new commit(s) from the remote origin, but my local origin/master is still where it was.  Forcing me to do the following</p>

<pre><code>git fetch origin master

git checkout origin/master
git log --pretty=format:'%h' -n 1
2222222
</code></pre>

<p>Is this correct behavior for git pull or might I have something miss configured?  I looked through the git pull man page and didn't see anything that suggested this but I may have missed it.</p>
","4","229642","0","0"
"26262817","1661745","2014-10-08 17:25:34","5","16819","<git><git-rebase><git-pull>","git pull --rebase for a specific folder/file","<p>I only want to rebase one folder.</p>

<p>Is it possible to do something like</p>

<pre><code>git pull --rebase origin/master path/to/folder/or/file.txt
</code></pre>

<p>and only that path will be updated?</p>
","2","1661745","0","0"
"8505289","850868","2011-12-14 13:28:34","13","40274","<git><merge><git-pull>","How to do git merge/pull correctly: You have not concluded your merge (MERGE_HEAD exists)","<p>I am a newbie to Git and having trouble understanding how to use Git. I have been using CVS so going through some learning curve for Git. Here is what all I tried </p>

<p>Now I had changed only two files PromoServiceImpl.java and build.sql. However having trouble merging changed from ""product"" branch. </p>

<p>Remaining files that you see (like ApiServiceImpl.java etc) are changes from other users but I am not sure if the representation here suggests that I have changed them. Prob it got merged during earlier pull commands and now it expects me to commit them ??</p>

<p>No matter whatever is the flow of commands I follow (even after some Google search) I see the following error:</p>

<blockquote>
  <p>You have not concluded your merge (MERGE_HEAD exists)
  Please, commit your changes before you can merge.</p>
</blockquote>

<p>Here is the sequence of commands I followed and output (tried to make it pretty by inserting new lines for everyone to read). Also this error comes back even after taking changes from repository afresh so I am sure I am doing something wrong rather than some issue with git.</p>

<pre class=""lang-sh prettyprint-override""><code>kamal@kamal-Lenovo-G470:~/git/TryGit$ gs
# On branch product
# Your branch is ahead of 'origin/product' by 1 commit.
#
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   TryGitServices/src/main/java/com/TryGit/services/promo/impl/PromoServiceImpl.java
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   Adding
no changes added to commit (use ""git add"" and/or ""git commit -a"")


kamal@kamal-Lenovo-G470:~/git/TryGit$ git pull origin product
From ssh://192.168.2.251/TryGit
 * branch            product    -&gt; FETCH_HEAD
Auto-merging TryGitResources/build/build.sql
CONFLICT (content): Merge conflict in TryGitResources/build/build.sql
Automatic merge failed; fix conflicts and then commit the result.


kamal@kamal-Lenovo-G470:~/git/TryGit$ gs
# On branch product
# Your branch is ahead of 'origin/product' by 1 commit.
#
# Changes to be committed:
#
#   modified:   TryGitCore/src/main/java/com/TryGit/core/api/binding.xml
#   modified:   TryGitServices/src/main/java/com/TryGit/services/api/impl/ApiServiceImpl.java
#   modified:   TryGitServices/src/main/java/com/TryGit/services/common/impl/StartupServiceImpl.java
#   modified:   TryGitWeb/src/main/webapp/WEB-INF/wsdl/TryGit.wsdl
#   modified:   TryGitWeb/src/main/webapp/static/css/TryGit/homeDeal.css
#   modified:   TryGitWeb/src/main/webapp/static/css/TryGit/TryGit.css
#   modified:   TryGitWeb/src/main/webapp/static/img/TryGit/sprite/TryGit.png
#   modified:   TryGitWeb/src/main/webapp/views/admin/createPromoCode.jsp
#   modified:   TryGitWeb/src/main/webapp/views/admin/product/productAdmin.jsp
#   modified:   TryGitWeb/src/main/webapp/views/deal/homePage.jsp

#
# Unmerged paths:
#   (use ""git add/rm &lt;file&gt;..."" as appropriate to mark resolution)
#
#   both modified:      TryGitResources/build/build.sql
#
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   TryGitServices/src/main/java/com/TryGit/services/promo/impl/PromoServiceImpl.java
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   Adding


kamal@kamal-Lenovo-G470:~/git/TryGit$ git reset TryGitResources/build/build.sql
Unstaged changes after reset:
M   TryGitResources/build/build.sql
M   TryGitServices/src/main/java/com/TryGit/services/promo/impl/PromoServiceImpl.java
kamal@kamal-Lenovo-G470:~/git/TryGit$ gs
# On branch product
# Your branch is ahead of 'origin/product' by 1 commit.
#
# Changes to be committed:
#
#   modified:   TryGitCore/src/main/java/com/TryGit/core/api/binding.xml
#   modified:   TryGitResources/build/build.sql
#   modified:   TryGitServices/src/main/java/com/TryGit/services/api/impl/ApiServiceImpl.java
#   modified:   TryGitServices/src/main/java/com/TryGit/services/common/impl/StartupServiceImpl.java
#   modified:   TryGitWeb/src/main/webapp/WEB-INF/wsdl/TryGit.wsdl
#   modified:   TryGitWeb/src/main/webapp/static/css/TryGit/homeDeal.css
#   modified:   TryGitWeb/src/main/webapp/static/css/TryGit/TryGit.css
#   modified:   TryGitWeb/src/main/webapp/static/img/TryGit/sprite/TryGit.png
#   modified:   TryGitWeb/src/main/webapp/views/admin/createPromoCode.jsp
#   modified:   TryGitWeb/src/main/webapp/views/admin/product/productAdmin.jsp
#   modified:   TryGitWeb/src/main/webapp/views/deal/homePage.jsp
#
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   TryGitResources/build/build.sql
#   modified:   TryGitServices/src/main/java/com/TryGit/services/promo/impl/PromoServiceImpl.java
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   Adding


kamal@kamal-Lenovo-G470:~/git/TryGit$ git stash
Saved working directory and index state WIP on product: b8bb080 changing build.sql for RBT task
HEAD is now at b8bb080 changing build.sql for RBT task


kamal@kamal-Lenovo-G470:~/git/TryGit$ gs
# On branch product
# Your branch is ahead of 'origin/product' by 1 commit.
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   Adding
nothing added to commit but untracked files present (use ""git add"" to track)


kamal@kamal-Lenovo-G470:~/git/TryGit$ git reset Adding


kamal@kamal-Lenovo-G470:~/git/TryGit$ git reset Adding


kamal@kamal-Lenovo-G470:~/git/TryGit$ gs
# On branch product
# Your branch is ahead of 'origin/product' by 1 commit.
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   Adding
nothing added to commit but untracked files present (use ""git add"" to track)

kamal@kamal-Lenovo-G470:~/git/TryGit$ git rm Adding
fatal: pathspec 'Adding' did not match any files

kamal@kamal-Lenovo-G470:~/git/TryGit$ man git rm

kamal@kamal-Lenovo-G470:~/git/TryGit$ git rm Adding
fatal: pathspec 'Adding' did not match any files

kamal@kamal-Lenovo-G470:~/git/TryGit$ gs
# On branch product
# Your branch is ahead of 'origin/product' by 1 commit.
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   Adding
nothing added to commit but untracked files present (use ""git add"" to track)

kamal@kamal-Lenovo-G470:~/git/TryGit$ git pull origin product
remote: Counting objects: 566, done.
remote: Compressing objects: 100% (316/316), done.
remote: Total 386 (delta 207), reused 0 (delta 0)
Receiving objects: 100% (386/386), 203.81 KiB, done.
Resolving deltas: 100% (207/207), completed with 56 local objects.
From ssh://192.168.2.251/TryGit
 * branch            product    -&gt; FETCH_HEAD
Auto-merging TryGitResources/build/build.sql
CONFLICT (content): Merge conflict in TryGitResources/build/build.sql
Automatic merge failed; fix conflicts and then commit the result.

kamal@kamal-Lenovo-G470:~/git/TryGit$ git pull origin product
M   TryGitCore/src/main/java/com/TryGit/core/api/binding.xml
U   TryGitResources/build/build.sql
M   TryGitServices/src/main/java/com/TryGit/services/api/impl/ApiServiceImpl.java
M   TryGitServices/src/main/java/com/TryGit/services/common/impl/StartupServiceImpl.java
M   TryGitWeb/src/main/webapp/WEB-INF/wsdl/TryGit.wsdl
M   TryGitWeb/src/main/webapp/static/css/TryGit/homeDeal.css
M   TryGitWeb/src/main/webapp/static/css/TryGit/TryGit.css
M   TryGitWeb/src/main/webapp/static/img/TryGit/sprite/TryGit.png
M   TryGitWeb/src/main/webapp/views/admin/createPromoCode.jsp
M   TryGitWeb/src/main/webapp/views/admin/product/productAdmin.jsp
M   TryGitWeb/src/main/webapp/views/deal/homePage.jsp
Pull is not possible because you have unmerged files.
Please, fix them up in the work tree, and then use 'git add/rm &lt;file&gt;'
as appropriate to mark resolution, or use 'git commit -a'.

kamal@kamal-Lenovo-G470:~/git/TryGit$ git add TryGitResources/build/build.sql
kamal@kamal-Lenovo-G470:~/git/TryGit$ git pull origin product
You have not concluded your merge (MERGE_HEAD exists).
Please, commit your changes before you can merge.
kamal@kamal-Lenovo-G470:~/git/TryGit$ gs
# On branch product
# Your branch is ahead of 'origin/product' by 1 commit.
#
# Changes to be committed:
#
#   modified:   TryGitCore/src/main/java/com/TryGit/core/api/binding.xml
#   modified:   TryGitResources/build/build.sql
#   modified:   TryGitServices/src/main/java/com/TryGit/services/api/impl/ApiServiceImpl.java
#   modified:   TryGitServices/src/main/java/com/TryGit/services/common/impl/StartupServiceImpl.java
#   modified:   TryGitWeb/src/main/webapp/WEB-INF/wsdl/TryGit.wsdl
#   modified:   TryGitWeb/src/main/webapp/static/css/TryGit/homeDeal.css
#   modified:   TryGitWeb/src/main/webapp/static/css/TryGit/TryGit.css
#   modified:   TryGitWeb/src/main/webapp/static/img/TryGit/sprite/TryGit.png
#   modified:   TryGitWeb/src/main/webapp/views/admin/createPromoCode.jsp
#   modified:   TryGitWeb/src/main/webapp/views/admin/product/productAdmin.jsp
#   modified:   TryGitWeb/src/main/webapp/views/deal/homePage.jsp

#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   Adding

kamal@kamal-Lenovo-G470:~/git/TryGit$ git pull origin product
You have not concluded your merge (MERGE_HEAD exists).
Please, commit your changes before you can merge.

kamal@kamal-Lenovo-G470:~/git/TryGit$ 
</code></pre>
","2","850868","0","0"
"36373181","1654520","2016-04-02 12:22:17","2","44","<git><git-merge><git-pull><git-stash>","aborting a git merge and going back to uncommitted work","<p>this is my situation:</p>

<p>i forgot to pull and I started working on my project. what I worked on this morning is totally different from my last commit on that repository.</p>

<p>I'm doing a commit and I'm prompted to pull, this is when i realized i will have an avalanche of unresolvable conflicts.</p>

<p>i pull and my project is all messed up now.
is there a way to going back to the work i did before performing the pull? </p>

<p>not reverting to my last commit because I would lose all the work i did today, but just stash all the mess and go back to 5 minutes ago?</p>
","3","1654520","",""
"52451739","6492006","2018-09-21 22:30:36","0","2846","<git><git-pull>","git - How Frequent Should I Get Latest Changes","<p>As a git novice, I understand basics but one thing that I feel uneasy is if my change takes days to complete.</p>

<p>I would start off by creating a new branch <code>branch-A</code> and work on it but I hear I should get latest code changes from remote on a daily basis, at least once a day to reduce chance of conflicts.</p>

<ol>
<li>How often should I get the changes from remote into my <code>branch-A</code> while I am actually on that local branch still doing coding?</li>
<li>And if I am on my own local <code>branch-A</code> doing coding for days, should I do daily fetch/merge to <code>brach-A</code> or to my local <code>master</code>?</li>
</ol>

<p><strong>UPDATE</strong></p>

<p>I guess I am not clear about what I need clarified.</p>

<p>Assume I use feature branch</p>

<p>Assume medium team size and regardless if we all work in ""same"" area or not, help me understand what is safe best practice.</p>

<p>Having said that, I do this as this is what I know (not sure what rebase is, as I said I am novice but will read, OK):</p>

<p><strong>Get latest change and merge into develop</strong></p>

<pre><code>git fetch origin
git merge origin/develop
</code></pre>

<p><strong>Create new branch from freshly updated develop branch</strong></p>

<pre><code>git checkout -b branch-A
</code></pre>

<p><strong>Work and do staging and committing today</strong></p>

<pre><code>git add.
git commit -m ""my message""
</code></pre>

<p>Next day, I want to make sure I get all changes from remote to reduce chance of conflicts.  So, I want to do fetch/merge again <strong>but note I am on my branch-A currently</strong></p>

<p>How do I do this?  Do I do it like this</p>

<pre><code>git fetch origin
git merge origin/branch-A
</code></pre>

<p>or like this</p>

<pre><code>git fetch origin
git merge origin/develop
</code></pre>
","0","6492006","0","0"
"36418708","3048967","2016-04-05 06:29:51","8","22575","<git><git-pull>","Why git asks to enter a commit message to explain why this merge is necessary","<p>I had 1 commit on my local branch, then to take the changes from remote branch into my local, I did a <code>git pull</code> on my local branch and to my surprise <code>git</code> said this.</p>

<pre><code># Please enter a commit message to explain why this merge is necessary,
# especially if it merges an updated upstream into a topic branch.
</code></pre>

<p>I understand that I'm in <code>vi</code> editor.</p>

<p>My question is <strong>why</strong> git asked me to enter the message. I never faced it before.</p>

<p>My git version is: <code>version 1.9.5-preview20141217</code></p>

<p>I referred <a href=""https://stackoverflow.com/questions/11744081/why-is-git-prompting-me-for-a-post-pull-merge-commit-message?lq=1"">this</a> question but I'm still finding it hard to understand.
Thanks.</p>
","3","3048967","0","0"
"52521829","4403732","2018-09-26 15:54:04","5","3407","<git><git-pull>","Why can't I git pull with irrelevant local changes?","<p>In git, you can't do <code>git pull</code> if you have any uncommitted modifications, giving the following error:</p>
<blockquote>
<p>error: cannot pull with rebase: You have unstaged changes.</p>
<p>error: please commit or stash them.</p>
</blockquote>
<p>It works with untracked files though. I find this super annoying that I need to <code>git stash</code> every time I want to pull, even if my changes have nothing to do with the files being pulled.</p>
<p>Is there any workaround to allow pulling if my changes are not in conflict with the pulled ones? I don't really get it why it doesn't work if the pull is not about to break anything. If that's a security concern, then why does it work for new files? In theory, the pull could introduce the new file of the same path.</p>
<p>Is there any solution to make it easier?</p>
","2","4403732","0","0"
"45304116","1662268","2017-07-25 12:58:54","0","367","<git><git-pull><git-fetch>","git pull without updating remote","<p>Suppose I have already run <code>git fetch</code>, and now I want to run <code>git pull</code>, to bring my local <code>myBranch</code> up-to-date with my <code>origin\myBranch</code>.</p>

<p>BUT!! in the mean time, after running the <code>fetch</code>, my internet connection has dropped :( Now, when I run <code>git pull</code> it fails, because it can't see <code>remote</code>. But I'd like to still do the local portion of the pull.</p>

<p>Is there a way to tell <code>git pull</code> to run without doing the initial <code>git fetch</code>?</p>

<p>NOTE:
I could <code>git reset --hard</code> to update <code>myBranch</code>. But <code>git pull</code> doesn't always just do that.</p>

<p>I guess another way to phrase the question is ""What second command satisfies: <code>git pull</code> = <code>git fetch</code> + <code>git ???</code>""?</p>
","0","1662268","",""
"52533318","6494677","2018-09-27 09:05:37","39","173145","<git><bitbucket><atlassian-sourcetree><pull-request><git-pull>","How to solve the requested URL returned error: 403 in git repository","<p>I have multiple accounts in git I committed code three weeks back with this account. I'll unable to pull my code . I was getting    The requested 
URL returned error: 403
I'll try <a href=""https://stackoverflow.com/questions/7438313/pushing-to-git-returning-error-code-403-fatal-http-request-failed/9575906#9575906"">Pushing to Git returning Error Code 403 fatal: HTTP request failed
</a> but I couldn't solved my error</p>

<pre><code>git -c diff.mnemonicprefix=false -c core.quotepath=false fetch origin
remote: Forbidden
fatal: unable to access 
'https://chantidurgam@bitbucket.org/chantidurgam/patanjali.git/': The requested 
URL returned error: 403
</code></pre>

<p>Completed with errors, see above.</p>
","2","6494677","0","0"
"9660590","263268","2012-03-12 01:09:48","3","159","<git><git-pull>","How to undo git pull from unrelated project?","<p>I just did something dumb. In my fooclient project, I just did:</p>

<pre><code>git remote add official https://github.com/fooserver
git pull official master
</code></pre>

<p>In other words, I pulled a completely different codebase (the server, instead of the client) into my working directory. Not surprisingly, there weren't many merge conflicts (the file names are all completely different, after all). Also not surprisingly, Git completely failed to warn me that the repos didn't have a single common ancestor.</p>

<p>In this particular situation, I'm able to recover by doing this:</p>

<pre><code>cp file-i-worked-on.js ~
git reset --hard HEAD # to discard broken merge conflicts
git checkout a12345 # where a12345 is the latest head of fooclient that I had checked out
cp ~/file-i-worked-on.js .
</code></pre>

<p>But what would be the more general strategy?</p>
","0","263268","0","0"
"52568548","5353461","2018-09-29 12:51:14","3","344","<git><git-pull><git-stash>","git stash exits 0 but no stash created","<p>I've been advised to <a href=""https://stackoverflow.com/a/52540878/5353461"">avoid <code>git pull --autostash</code></a>, and instead use:</p>

<pre><code>git alias.pull-autostash '!git stash push &amp;&amp; git pull --rebase &amp;&amp; git stash pop'
</code></pre>

<p>When there are no changes in the index or working tree, doing:</p>

<pre><code>$ git stash push
</code></pre>

<p>gives:</p>

<pre><code>No local changes to save
</code></pre>

<p>An additional problem is that the exit status is <code>0</code>.</p>

<p>Any <code>stash pop</code> would then <code>pop</code> something which wasn't pushed.</p>

<p>How do I force an empty stash to be created, like <code>git commit --allow-empty</code>?</p>
","0","5353461","",""
"53587085","2289953","2018-12-03 03:29:46","1","78","<git><laravel><bitbucket><git-pull><git-fetch>","Git: git pull - start from specific commit until the latest commits skipping 1 commit?","<p>How can I pull from a branch to start fetching on a specific commit?</p>

<p>Suppose, I have these branches:
<code>branch1</code> and <code>oldbranch1</code></p>

<p><code>branch1</code> is the rollback version of <code>oldbranch1</code></p>

<p>And suppose, <code>oldbranch1</code> have these commits:</p>

<ul>
<li>commit_5</li>
<li>commit_4</li>
<li>commit_3 (merge <code>somebranch</code> to <code>oldbranch1</code>)</li>
<li>commit_2</li>
<li>commit_1</li>
</ul>

<p>And on <code>branch1</code>:</p>

<ul>
<li>commit_2</li>
<li>commit_1</li>
</ul>

<p>Now I want to get the updates from <code>oldbranch1</code> skipping the <code>commit_3</code> from <code>oldbranch1</code> as it contains wrong merges that deletes the changes from <code>commit_2</code> and <code>commit_1</code></p>

<p>How can I do it? is there any magic commands for this? </p>
","0","2289953","0","0"
"37538354","4079634","2016-05-31 06:29:34","1","28","<git><shell><git-pull>","does all of the files involved has been written finish after the result of git pull printed?","<p>I wrote a shell script, which can get the lastest code from git and then restart the program.The code  logic is showed as follows:<br>
<code>
git pull origin master
the_command_of_restart
</code>
But i found, although the git command executed successfully, after program was restart it still ran old code.It seemed that after <code>git pull</code>, the git repository had been updated finished, but the files involved with the repository had not been written finish.<br>
If what i guess is true, how can i execute the restart command after all modifed file being written finish.</p>
","0","4079634","0","0"
"37580254","967593","2016-06-01 23:12:57","0","2300","<git><git-pull>","Refresh my local git repo to the contents of remote repo","<p>I am writing a program that aggregates data on all branches of a repo every week.</p>

<p>The program will check through 15-20 repos. Basically I need to reset my local git repo to be the same exact thing as the remote one. I won't have any local changes. However, if there are changes I will be switching between commits in each branch to generate a report. So the branches will always be on an older commit. Not sure if this will screw up with a subsequent git pull call?</p>

<p>The code does something like this at the moment:</p>

<pre><code>git clone &lt;repo&gt;
git pull --progress --verbose
</code></pre>

<p>then gets a list of branches and checks each branch for new commits that week and aggregates a report on them. By the way, is there a way to git pull for all branches at once?</p>

<p>What's the best way to do this?</p>

<p>I started googling and found many things such as git clean, git fetch, git pull (git merge/fetch) etc. </p>

<p>Will git pull work here? Or is it best to delete all files and clone again? I'd rather avoid unnecessary overhead by cloning the same thing several times if git pull will simply grab the latest commits.</p>

<p>Thanks!</p>
","0","967593","",""
"70397635","16872910","2021-12-17 18:48:57","1","788","<git><git-merge><git-pull>","My working tree is clean but 'git pull' says there are local files that will be overwritten","<p>I'm having trouble with a basic git pull. When I check git status, the working tree is clean. But when I try to pull or fetch and merge, git says local changes will be overwritten and gives me a list of files. I've tried <code>git reset --hard HEAD</code> and then merging, but same problem. I also tried <code>git stash</code> but still nothing.</p>
<p>All the files that git complains about are in the obj/ directory, which I have in my gitIgnore, so I'm not completely sure why git is worrying about these files to begin with. *However, I have had issues with git tracking files that I previously hadn't included in my gitignore. I tried to untrack problem folders and files with <code>git update-index --skip-worktree</code>, but I wouldn't be surprised if that's still part of my problem.</p>
<p>Any advice on the best next move? My objective is to pull the remote commit and I don't care about the local files git is referring to.</p>
<p><a href=""https://i.stack.imgur.com/sXaqJ.png"" rel=""nofollow noreferrer"">git merge error even after clean worktree</a></p>
","2","16872910","",""
"70402199","16149823","2021-12-18 09:13:21","1","195","<git><git-pull>","How to redo git pull?","<p>For example, I am working on branch1 and I want to 'git pull' code from branch2. However, I 'git pull' code from branch3 instead of branch2. How can I redo the 'git pull' command? (delete the code from branch2)</p>
","3","16149823","0","0"
"37691118","5209224","2016-06-07 23:37:01","0","39","<git><git-pull>","Why does git pull update my remote repo?","<p>I made some changes, <code>git add</code>, <code>git commit</code>, and then <code>git pull --rebase</code>. My understanding is that when I <code>git pull rebase</code>, I'm adding all the code from the remote repo into my local repo and then adding my latest commit on top of that, without adding an additional commit (which merge would do). Thus, my index and working directory now reflects the latest code from the remote and what latest commit. This is on my <strong>local</strong> repo.</p>

<p>What I don't understand is why when I tried to push to the <strong>remote</strong> repo, git tells me everything is already up to date. I thought I've only updated my <strong>local</strong> repo, not my <strong>remote</strong> repo. Pulling updates just the <strong>local</strong>, not <strong>remote</strong> right?</p>

<p>Terminal after <code>git pull rebase</code></p>

<pre><code>First, rewinding head to replay your work on top of it...
Applying: commitmessage1
Applying: commitmessage2
Applying: commitmessage3
</code></pre>

<p>Terminal after <code>git push</code></p>

<pre><code>Counting objects: 39, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (37/37), done.
Writing objects: 100% (39/39), 3.51 KiB | 0 bytes/s, done.
Total 39 (delta 32), reused 0 (delta 0)
remote: From jlei.com:master
remote:    75e79e6..f05460f  v2/updates -&gt; origin/v2/updates
remote: Already up-to-date.
remote: Build skipped.
To user@jlei.com:master
   75e79e6..f05460f  v2/updates -&gt; v2/updates
</code></pre>
","7","5209224","",""
"70500496","13957132","2021-12-27 21:17:02","-1","312","<git><git-commit><git-pull><git-add><git-untracked>","Cant pull nor commit from git for untracked file","<p>I was trying to pull from a repo and it gives me that message but if I run git status it says that my working tree has diverged and if I try to add and commit it gives me that error, (btw those files in the .gradle folder are in the .gitignore file so I don't get why there are being displayed when I try to use git)<a href=""https://i.stack.imgur.com/NsbWF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/NsbWF.png"" alt=""enter image description here"" /></a></p>
","2","13957132","",""
"70573608","15337229","2022-01-04 02:52:20","0","1131","<git><github><git-merge><git-pull><git-merge-conflict>","how to show Can’t automatically merge in github","<p>When I push my code in Github and want to merge code with the main branch but shows &quot;Can’t automatically merge. Don’t worry, you can still create the pull request.&quot;</p>
<p>I am tried many times in many ways but failed. Please give me any suggestions.</p>
","0","15337229","",""
"63490960","6088983","2020-08-19 16:06:23","0","24","<gitlab><git-merge><git-pull>","pulling changes from a renamed git repo to my new git repo","<p>I cloned a repo (repo A) and then renamed the repo to my own repo (repo B). Repo A gets updated from time to time by the owner, please how can I pull these new changes to my own repo (Repo B)? Thank you for your help</p>
","2","6088983","0","0"
"9239557","94486","2012-02-11 10:42:23","1","7596","<git><git-pull><git-fetch>","How can git-fetch only download changes without adding/updating files?","<ul>
<li>Project.git is a remote git repo that has a staging branch</li>
<li>Two developers are working on their own forks of project.git</li>
<li>Both developers only interact with staging</li>
</ul>

<h3>Common to both developers</h3>

<pre><code># Developer 1 &amp; developer 2 add staging as follows
$ git clone myForkOfProject.git
$ git remote add live project.git
</code></pre>

<h3>Developer 2 working on docs</h3>

<pre><code>[master] $ git branch docs
[master] $ git checkout docs
[docs] $ git add README 
[docs] $ git commit -m ""pushing to live's staging from local's docs works"" README
[docs] $ git push live docs:staging
</code></pre>

<h3>Developer 1 working on bugfix, wants to selectively merge docs</h3>

<p>Developer 1 wants to see selectively merge files from docs into his local <code>mybranch</code></p>

<pre><code>[master] git branch mybranch
[master] git checkout mybranch
[mybranch] $  git fetch live staging

# Checks to see if anything changed
[mybranch] $  git status -s ./
[mybranch] $

# Doesn't know what to merge since diff, status shows no change 

# Where as if developer1 did
[mybranch] $  git pull live staging
[mybranch] $  git status -s ./
A  README
</code></pre>

<h3>What developer1 actually wanted</h3>

<p>What developer1 wanted to do is only to fetch the last changes in staging into the working directory without automatically adding README.</p>

<p>How do I pull/fetch so that <code>git status -s ./</code> just downloads the changes</p>

<pre><code>[mybranch] git *fetch changes from staging into mybranch 's working directory*
[mybranch] git status -s ./
[?] README
# This is what developer1 wants to see
# so that he can decide to 'git add README' manually
# here are the unsuccessful attempts to do the same

# Developer2 makes a commit, and does git push live docs:staging 
[mybranch] $ git fetch live staging
[mybranch] $ git pull live staging --no-commit --no-log --no-ff
</code></pre>

<p>The last option I have is to selectively call <code>git rm --cached README</code>, but I wonder if I'm missing something in the <code>git fetch</code>, <code>git merge</code> flow.</p>
","0","94486","0","0"
"27047626","2074779","2014-11-20 19:12:04","0","49","<git><git-push><git-pull>","Accessing a remote git repository","<p>I have a git repository on a server with IP address XXX.XX.XX.XX and my username is UUU</p>

<p>In my local laptop I am setting up as follows in my .git/config file:</p>

<pre><code>[remote ""origin""]
        url = UUU@XXX.XX.XX.XX:/home/UUU/repositories/repo.git
        fetch = +refs/heads/*:refs/remotes/origin/*
        receivepack = /usr/bin/git-receive-pack
        uploadpack = /usr/bin/git-upload-pack
</code></pre>

<p>When I use git push or git pull on my laptop, I get the following error</p>

<pre><code>bash: /usr/bin/git-upload-pack: No such file or directory
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
</code></pre>

<p>What am I doing wrong?</p>
","1","2074779","",""
"9281053","170521","2012-02-14 17:05:10","1","140","<git><git-merge><git-pull><git-diff>","inspect changes after a git pull merge","<p>is it possible to play a git diff in the changes brought by the automatic merge after a <code>git pull</code>? </p>

<p>Usually, if there are any conflicts i can check on those using normal git diff, but no idea how to do it when the pull was successful (and the changes were automatically commited)</p>
","0","170521","",""
"9362873","1203698","2012-02-20 14:38:00","-1","106","<git><git-pull>","Minimalistic git pull tool","<p>I have a project that is hosted on remote server which development is done with git and when a time for release comes, updates should be uploaded to the server from the repository, to do this I need to either download a tarball, or install full git distribution to the server, but neither of this is really convenient. I have no need for git on the server, I do no development there, I make no changes at all, repository files are nothing but trash, all I need is <code>pull</code>. </p>

<p>So, is there a tool that can read commit history of the repo, compare current version with latest remote, download and install all the necessary patches and nothing more?</p>
","2","1203698","",""
"27121222","1268670","2014-11-25 07:47:42","3","7346","<git><shell><git-pull>","Nothing happens with a `git pull`","<p>Since yesterday, I have a big issue with my Professional computer : I cannot use <code>git pull</code>. This is really weird because every other git command's works.</p>

<p>What I tried :</p>

<ul>
<li>Reinstalling Github for Windows, Git Shell, etc...</li>
<li>Look if I can access to the remote server (git push work, I can ping the remote server).</li>
</ul>

<p><code>GIT_TRACE=1 git pull</code> return :</p>

<pre><code>$ GIT_TRACE=1 git pull
trace: exec: 'git-pull'
trace: run_command: 'git-pull'
</code></pre>

<p>An other thing is strange : now on a git repository, I didn't see the current repository on the git shell :</p>

<pre><code>MY_USER@MY_COMPUTER /c/Github/myRepo 
$
</code></pre>

<p>Usually, my CLI looks like this :</p>

<pre><code>MY_USER@MY_COMPUTER /c/Github/myRepo &lt;develop&gt;
$
</code></pre>

<p>I'm thinking the problem is software because I got an 'entreprise' package update just before the issue.
<strong>My configuration</strong> : Windows 8.1 Professional with Github for Windows and I'm using Git shell.</p>

<p>If someone has an idea to fix this or how can I debug this command, I appreciate.</p>

<p><strong>EDIT</strong> </p>

<p><code>git remote -v</code> returns :</p>

<pre><code>$ git remote -v
origin  https://MY_USER@git-SI.enterprise.fr/PROJECT/windows/PROJECT_repo.git (fetch)
origin  https://MY_USER@git-SI.enterprise.fr/PROJECT/windows/PROJECT_repo.git (push)
</code></pre>

<p><code>git status</code>returns :</p>

<pre><code>$ git status
# On branch develop
# Your branch is ahead of 'origin/develop' by 1 commit.
#   (use ""git push"" to publish your local commits)
#
nothing to commit, working directory clean
</code></pre>
","8","1268670","0","0"
"27488072","1113997","2014-12-15 15:58:56","1","60","<git><git-merge><git-push><git-pull>","overwriting some files in git remote","<p>I am using git and apparently I screwed something up.</p>

<p>So, I have my local PC (called A), then my local PC (called B), and my remote.</p>

<p>After a series of of events (forgot to pull stuff, and then worked locally and so on) the situation goes like this :</p>

<ul>
<li>remote has a copy</li>
<li>both of my local files have different changes</li>
<li>in the last week I have been making changes from local PC B. So local PC A has rev 2 let's say, and local PC B has rev 11 (latest of server) but both of them have different local changes</li>
</ul>

<p>On my attempt to see what to do, I made things even worse.</p>

<ul>
<li>I pushed data from local PC A (maybe forcing it - I am not sure) </li>
</ul>

<p>But these removed all my other changes. I don't know how I managed that.</p>

<p>Not only that, but all my commits made from PC B (rev 3 to 11) lets say are gone from history - I cannot see them anywhere.</p>

<p>So, I have my remote and local PC to have the same data - and local PC B to have changes in it.</p>

<p>I know the files I have changes these two weeks - so I am trying the following (lets say it is one file - file.php)</p>

<pre><code>git add file.php
git commit -m ""test""

no changes added to commit
</code></pre>

<p>whey trying to push something I see something like this :</p>

<pre><code>error: failed to push some refs to 'https://github.com/&lt;url&gt;'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
</code></pre>

<p>So what I need to do?</p>

<p>What I want to do is - just push this file to my remote and then I will just do git pull to sync everything.</p>

<p>I am doing stuff from command line, not using any GUI since I am working on VirtualBox.</p>

<p>Also, if I do :</p>

<pre><code>git status
</code></pre>

<p>I see one file as modified.</p>

<p>Then If I commit this one - everything goes fine but I cannot push that into server because of the previous error. Mind that this behaviour only happens for files that belong to a folder that does not exist at all in the remote branch.</p>
","0","1113997","",""
"45426704","608639","2017-07-31 23:21:11","6","7345","<git><git-pull>","How to make 'git pull' take a message?","<p>Well, here we go again with more Git goodness. It has found other ways to make simple tasks difficult to impossible...</p>

<pre><code>git pull -X theirs https://github.com/weidai11/cryptopp.git master
From https://github.com/weidai11/cryptopp
 * branch            master     -&gt; FETCH_HEAD
Auto-merging GNUmakefile
error: cannot spawn notepad++.exe: No such file or directory
error: unable to start editor 'notepad++.exe'
Not committing merge; use 'git commit' to complete the merge.
</code></pre>

<p><code>notepad++.exe</code> is where nearly every other Windows executable is located. Its in program files. Its not a secret, and its not a hidden location.</p>

<p>Try again so it stops wasting my time with useless crap:</p>

<pre><code># Rewind past broken git
git checkout HEAD~3 -f

# Back to master
git checkout master -f

# Tray again; avoid the prompt
$ git pull -X theirs -m ""Sync with Upstream master"" https://github.com/weidai11/cryptopp.git master
error: unknown switch `m'
usage: git pull [&lt;options&gt;] [&lt;repository&gt; [&lt;refspec&gt;...]]

    -v, --verbose         be more verbose
    -q, --quiet           be more quiet
    --progress            force progress reporting
</code></pre>

<p>What is the option to tell Git, <em>""Here's the message to use. Stop confusing yourself. Stop wasting my time with useless crap?""</em></p>

<p>Thanks in advance</p>
","3","608639","0","0"
"27592779","1091722","2014-12-21 19:11:41","1","480","<macos><git><git-merge><git-pull>","git pull always fails, but git fetch/merge are fine","<p>When I <code>git pull</code> in any repository, I always get the following merge error:</p>

<pre><code>aetherboard:shwangster shwangster$ git pull -v
From github.com:sirspinach/shwangster
 = [up to date]      master     -&gt; origin/master
merge: 012012012012012012012012012012012012012012012012012012012012 - not
something we can merge
</code></pre>

<p>On the other hand, <code>git fetch</code> and <code>git merge origin/master</code> work like a charm. So I've been able to work around this problem for a while. However, I needed to update brew today, and the same error prevents me from doing that.</p>

<p>Here is the output from <code>brew update</code>, which shows git again attempting to merge with the mysterious <code>0120120120120...</code>.</p>

<pre><code>aetherboard:gitrepos shwangster$ brew update
merge: 012012012012012012012012012012012012012012012012012012012012 - not 
something we can merge
Error: Failure while executing: git pull -q origin refs/heads/master:refs/remotes/origin/master
</code></pre>
","4","1091722","",""
"27926391","190758","2015-01-13 16:06:58","3","1270","<git><jenkins><git-pull><git-clone>","concurrent git pulls to same local repository","<p>I've been tasked with maintaining a Jenkins server with jobs that basically check out some code and build it.  Currently they do a git clone using the ""--depth 1"" and ""-b {branch}"" options to get a specific code branch as quickly as possible.  But this is still wasteful since a fresh copy is being checked out (over the network) every time a job executes, even if there are very few (if any) changes.</p>

<p>Instead, what I'd like to do is have a shared local repo on the build machine that's a clone of our remote repo.  Each job would do a ""git pull"" on a specific branch to bring in any changes from the remote repo, then copy the source tree from the repo to its Jenkins workspace before starting the build.</p>

<p><strong>Is this a bad idea?</strong></p>

<p>What concerns me is the possibility that different jobs targeting the same code branch will be run simultaneously, which could result in concurrent ""git pull"" requests.</p>

<p><strong>Could this result in corruption of Git's meta-data?</strong></p>

<p><strong>Is one of the concurrent pulls likely to fail due to locking issues?</strong></p>

<p>The shared local repo would never have any changes committed to it and nothing would ever be pushed from it to the remote repo.  It would be ""pull only"", so to speak.  All the pulls would come from the same user, so there shouldn't be any file permission issues.</p>

<p>Some googling turned up this discussion from 4 years ago, but it doesn't seem conclusive:</p>

<p><a href=""http://git.661346.n2.nabble.com/concurrent-fetches-to-update-same-mirror-td5893458.html"" rel=""nofollow"">http://git.661346.n2.nabble.com/concurrent-fetches-to-update-same-mirror-td5893458.html</a></p>
","0","190758","",""
"64324159","1809245","2020-10-12 19:23:28","2","665","<git><repository><git-pull>","How can I ""pull"" a git database without downloading the whole repository","<p>I have the <em>content</em> of a huge project (with some changes) but not the Git database. One could get to the same situation for example like this:</p>
<ol>
<li><code>git clone &lt;...&gt;/repo.git</code></li>
<li><code>cd repo</code></li>
<li><code>echo &quot;Blah&quot; &gt; new_file.txt</code></li>
<li><code>rm .git</code></li>
</ol>
<p>Since my repo is huge and all the project files are still there, I do not want to re-clone everything. How can I get back to a normal situation, where I would be able to commit and push my <code>new_file.txt</code>?</p>
<p>I tried searching in general and among other questions here but nothing seems to provide the answer for this specific situation.</p>
","4","1809245","",""
"10253395","1347303","2012-04-20 20:52:33","8","5927","<gitolite><tortoisegit><git-pull>","Pull not working - TortoiseGIT / Windows 7 / GIT on Debian + gitolite","<p>i have a weird issue. Im using TortoiseGIT (Win7) and my repositories are placed on a vritual server (Debian), where im using gitolite and SSH keys.</p>

<p>I can <code>clone</code> the repository to my PC, i can run <code>Fetch</code>, <code>Push</code>, <code>Commit</code>, <code>Sync</code> .. everything, but when trying to <code>Pull</code> the changes from server <code>Pushed</code> by other contributor, the following error appears:</p>

<pre><code>git.exe pull -v --progress      ""origin""
fatal: 'pull' appears to be a git command, but we were not
able to execute it. Maybe git-pull is broken?
git did not exit cleanly (exit code 128)
</code></pre>

<p>I don't understand, why just the <code>pull</code> command is not working .. thanks for any help.</p>

<p>I can make a clone of the repository, with the contributed changes .. but can not <code>Pull</code> the changes to created repository on my PC.</p>
","0","1347303","",""
"28250389","2674303","2015-01-31 10:03:30","3","2755","<git><version-control><git-pull><git-fetch>","Should I do git fetch before pull if branch exists locally?","<p>I have following question about git.</p>

<p>I novice with git. I want to get last state of <code>branch1</code> locally.</p>

<p>now I switched on <code>branch2</code> and <code>branch1</code> exists locally.</p>

<p>Now I make</p>

<ol>
<li>fetch  </li>
<li>switch to branch1  </li>
<li>pull</li>
</ol>

<p>Please clarify me whether does first <code>fetch</code> redundant or not?</p>
","0","2674303","",""
"10591999","1365055","2012-05-14 22:42:21","11","14364","<xcode><git><pull><git-pull>","How to resolve git pull conflicts in xcode ui","<p>I am using the Xcode repository GUI with the latest version of Xcode instead of the command line. I did an initial pull of the rep without a problem. I made some changes to the local files. At the same time, my other developer made some changes. I committed my changes to the local rep but needed his changes to  do a proper build. We only have 1 branch.</p>

<p>I tried to pull and the Xcode UI reports 6 conflicts (which is what I would expect as I need the 6 files to do the proper build). </p>

<p>My question is how to resolve the conflicts? I read online I should be able to use the left and right button at the bottom of screen to let me pick which file version. I went through all of the 6 files and used the proper buttons to choose which changes I wanted.</p>

<p>However the Pull button in the lower right hand corner is disabled and greyed out.</p>
","1","1365055","0","0"
"46800460","","2017-10-17 23:00:49","0","190","<git><git-pull><git-status>","git-status reports everything clean but git-pull complains about unstaged changes","<p>Could somebody explain to me the following output?</p>

<pre><code>[user@ hostname /dir]% git status
On branch master
Your branch is up-to-date with 'origin/master'.

It took 11.81 seconds to enumerate untracked files. 'status -uno'
may speed it up, but you have to be careful not to forget to add
new files yourself (see 'git help status').
nothing to commit, working directory clean
[user@ hostname /dir]% git pull
Cannot pull with rebase: You have unstaged changes.
Please commit or stash them.
[user@ hostname /dir]% git --version
git version 2.4.8
[user@ hostname /dir]%
</code></pre>
","1","","",""
"10617924","894284","2012-05-16 11:52:29","2","1096","<git><merge><branch><git-pull>","Accidentally merged other branches when using `git pull` with no arguments","<p>Not knowing any better, I'd always used blissfully <code>git pull</code> (without arguments) to get remote updates.</p>

<p>Now that we're using branches, this has come back to haunt me.</p>

<p>After doing a <code>git pull</code>, I noticed that my local master had been merged with the other branches as well, whereas on the remote, the branches are not merged.  </p>

<p>I'm trying to figure out how this happened so that I can avoid doing it again in the future, but no luck so far.</p>

<p>I didn't put anything strange in my .git/config file.</p>
","0","894284","0","0"
"72352502","6719286","2022-05-23 17:19:38","0","541","<git><git-pull><git-fetch>","Why does git require me to commit or stash local changes before doing a pull","<p>I made a change to a file in my local working copy and the same file has been modified in the remote repo. When I do a git pull, git gives the message, &quot;error: Your local changes to the following files would be overwritten by merge:
foo.txt
Please commit your changes or stash them before you merge.&quot;</p>
<p>I know how to solve this issue, but I am not completely clear why this happens. So, if I do a git pull (which is git fetch  followed by git merge), then git will first bring the remote file changes to my local (and hence I lose my local changes) and then do the merge, is this what happens?</p>
<p>Also, in the same scenario, instead of a git pull, I did a git fetch first. This caused no issue, but when I did a git merge, I got the same message from git about losing local changes. So, that means that git fetch does not bring the remote changes to local, only when I try to do the merge is when the local working copy is replaced by the remote changes?</p>
","4","6719286","",""
"54670833","598203","2019-02-13 13:00:02","1","6319","<linux><git><fatal-error><git-push><git-pull>","git pull / push returns: fatal: protocol error: bad line length character: _","<p>When I run <code>$git push</code> or <code>$git pull dev master</code>, I received this error:</p>

<blockquote>
  <p>fatal: protocol error: bad line length character:  _</p>
</blockquote>

<p>I searched and found this solution:</p>

<pre><code>ssh &lt;host&gt; git-receive-pack &lt;path-to-git-repository&gt;
</code></pre>

<p>I ran it. Here is the server response:</p>

<pre><code>00..4b29e780 refs/heads/master report- 
status delete-refs side-band-64k quiet ofs-delta agent=git/1.8.3.1
00..4b29e780 refs/remotes/origin/HEAD
00..4b29e780 refs/remotes/origin/master
0000
</code></pre>

<p>What does it mean? What is the problem?</p>
","3","598203","0","0"
"54842340","5505318","2019-02-23 13:55:51","0","477","<git><github><git-merge><git-push><git-pull>","How to merge and push a local branch in git","<p>Hi I am in difficulty with this scenarios:
I have two local branch: <strong>develop</strong> and <strong>branch1</strong>.  On remote I have <strong>develop</strong> branch only.</p>

<p>The steps that i followed:</p>

<ul>
<li>I have pulled remote develop from my local develop. </li>
<li>I have created new branch <strong>branch1</strong> and add some code inside it.</li>
</ul>

<p>I need to create, and push all the modification of <strong>branch1</strong> on remote.
After doing it I am costrained to go to github and make a pull request from my ""branch1"" remote branch to the develop remote branch.</p>

<p>Which are the steps that I need to do in case of conflicts?
I try to read a lot but the major part are merging in local and push on develop ( or master ) but my scenario is different cause i need to push on remote <strong>branch1</strong> and from there to ask to review the code from a person and make a pull request. I need to avoid conflicts.</p>
","0","5505318","",""
"54861055","8178784","2019-02-25 07:04:30","7","972","<git><github><git-pull>","How to shorten output of 'git pull' command?","<ul>
<li>So I ran <code>$ git pull</code> command on a git repository.</li>
<li>And it outputs useful details that I am interested in, and a lot of other details that I don't care about.</li>
<li>So is there some switch or option to leave only the details I need?</li>
</ul>

<p><code>$ git pull</code></p>

<p>I <strong>need this</strong> information:</p>

<pre><code>remote: Enumerating objects: 2866, done.
remote: Counting objects: 100% (2866/2866), done.
remote: Total 4840 (delta 2865), reused 2865 (delta 2865), pack-reused 1974
Receiving objects: 100% (4840/4840), 7.51 MiB | 2.98 MiB/s, done.
Resolving deltas: 100% (3810/3810), completed with 531 local objects.
From https://github.com/erlang/otp
   76da23bb4e..6053c0e4d7  master     -&gt; origin/master
   77cff66931..39968f062e  maint      -&gt; origin/maint
   934f9974eb..f30b1052c7  maint-21   -&gt; origin/maint-21
 * [new tag]               OTP-21.2.6 -&gt; OTP-21.2.6
 * [new tag]               OTP-20.3.2.1 -&gt; OTP-20.3.2.1
Updating 76da23bb4e..6053c0e4d7
</code></pre>

<p>I <strong>don't need this</strong> information:</p>

<pre><code>Fast-forward
 .gitignore                                         |     3 +
 bootstrap/bin/no_dot_erlang.boot                   |   Bin 6539 -&gt; 6541 bytes
 bootstrap/bin/start.boot                           |   Bin 6539 -&gt; 6541 bytes
 bootstrap/bin/start_clean.boot                     |   Bin 6539 -&gt; 6541 bytes
 bootstrap/lib/compiler/ebin/beam_a.beam            |   Bin 3364 -&gt; 3200 bytes
 bootstrap/lib/compiler/ebin/beam_asm.beam          |   Bin 11040 -&gt; 10996 bytes
 bootstrap/lib/compiler/ebin/beam_block.beam        |   Bin 3460 -&gt; 3444 bytes
 bootstrap/lib/compiler/ebin/beam_disasm.beam       |   Bin 20864 -&gt; 20860 bytes
 bootstrap/lib/compiler/ebin/beam_except.beam       |   Bin 4252 -&gt; 4228 bytes
 bootstrap/lib/compiler/ebin/beam_jump.beam         |   Bin 10024 -&gt; 9988 bytes
 .../lib/compiler/ebin/beam_kernel_to_ssa.beam      |   Bin 29484 -&gt; 28880 bytes
 bootstrap/lib/compiler/ebin/beam_peep.beam         |   Bin 3644 -&gt; 3604 bytes
 bootstrap/lib/compiler/ebin/beam_ssa.beam          |   Bin 12208 -&gt; 12176 bytes
 bootstrap/lib/compiler/ebin/beam_ssa_bsm.beam      |   Bin 18176 -&gt; 17952 bytes
 bootstrap/lib/compiler/ebin/beam_ssa_codegen.beam  |   Bin 37824 -&gt; 37708 bytes
 bootstrap/lib/compiler/ebin/beam_ssa_dead.beam     |   Bin 12128 -&gt; 11876 bytes
 bootstrap/lib/compiler/ebin/beam_ssa_lint.beam     |   Bin 7512 -&gt; 7536 bytes
 etc...
</code></pre>

<p>So how do I do this?</p>
","2","8178784","0","0"
"55045596","4684797","2019-03-07 14:01:12","41","28805","<git><branch><git-pull>","How to set default remote in git?","<p>I have multiple remotes in my git repository. If I execute <code>git pull</code>, then it asks for the password of one of my colleagues.</p>

<p>How can I change the remote to <code>black</code>?</p>
","6","4684797","0","0"
"63975153","2509614","2020-09-20 03:07:17","4","5430","<git><github><visual-studio-code><git-pull><pull>","Why do I have uncommitted changes after doing a git pull in Visual Studio Code?","<p>In Visual Studio Code (VSC), I have a folder open. That folder corresponds to a local git repo whose remote repo is on GitHub. The 2 repos are synchronized.</p>
<p>Next, I add a file to the remote repo by manually uploading the file and committing it.</p>
<p>Then, I synchronize the local repo by using the sync button in VSC. After I do that, in the VSC Source Control view, it shows 1 pending change which is the file I just added to the remote repo and the file is listed as an &quot;uncommitted&quot; change in VSC.</p>
<p>This is different from how I've used Git before on the command line or on tools other than VSC, like Eclipse, for example. I'm used to how doing this type of workflow would result in a Git fast-forward where the file that was just added to the remote repo would NOT show up as an uncommitted change; rather, the file would just be available in the local repo as a result of the git-pull.</p>
<p>As it stands now, I have to pointlessly recommit the &quot;uncommitted&quot; change in my local repo each time this workflow happens just to bring the 2 repos in sync again.</p>
<p>I assume I'm doing something wrong in VSC or have something misconfigured in VSC.</p>
<p>Any thoughts/suggestions?</p>
","8","2509614","0","0"
"9855946","64257","2012-03-24 21:52:51","11","10058","<git><git-pull>","Is it safe to ""git pull"" when my working tree and/or index is dirty?","<p>Say I have a git repo whose working tree and/or index is ""dirty"" (i.e. I have local modifications that have not yet been committed or stashed) and I'm tempted to do a ""git pull"" without first committing or stashing. (Alternatively, say I'm introducing a new team member to git and <em>they</em> are tempted to run ""git pull"" when <em>their</em> local repo is ""dirty"".) I'm wondering how safe it is to do a ""git pull"" in this case. If it's unsafe, what's the worst thing that can happen? Does it matter if I'm pulling from a trusted vs untrusted source?</p>

<p>My investigation so far suggests a confusing range of ideas on what I'd assumed would be a fairly straightforward question.</p>

<p>To start with, the git-stash manpage makes it sound like git pull is pretty safe, and will abort if you're in a situation where something might go wrong:</p>

<pre><code>   Pulling into a dirty tree
       When you are in the middle of something, you learn that there are
       upstream changes that are possibly relevant to what you are doing.
       When your local changes do not conflict with the changes in the
       upstream, a simple git pull will let you move forward.

       However, there are cases in which your local changes do conflict
       with the upstream changes, and git pull refuses to overwrite your
       changes. In such a case, you can stash your changes away, perform a
       pull, and then unstash, like this...
</code></pre>

<p>This actually seems to be what happens too, in my simple tests so far.</p>

<p>Also perhaps implying that ""git pull"" is pretty safe, the <a href=""http://code.google.com/p/gitextensions/"" rel=""nofollow noreferrer"">Git Extensions</a> toolbar for Visual Studio has a prominent pull button that does not do a check for dirtiness before shelling out to ""git pull"". (If I were designing a Visual Studio toolbar, I would try to avoid making it particularly easy to shoot yourself in the foot.)</p>

<p>The git-pull manpage doesn't make my ""git pull"" sound dangerous, though it suggests it's not a best practice:</p>

<pre><code>   If any of the remote changes overlap with local uncommitted changes,
   the merge will be automatically cancelled and the work tree untouched.
   It is generally best to get any local changes in working order before
   pulling or stash them away with git-stash(1).
</code></pre>

<p>But then you can also find advice that pulling into a dirty is very bad, <a href=""https://cwiki.apache.org/DeltaSpike/suggested-git-workflows.html"" rel=""nofollow noreferrer"">e.g.</a>:</p>

<pre><code>Avoid git-pull!
git-pull should never get invoked if you have dirty files lying around or if your branch is ahead of master.
This will always lead to some dirty artifacts in the commit history
</code></pre>

<p>Is there an easy answer to which perspective is best, or is this somehow a case-by-case thing?</p>

<p><strong>Followup</strong>: Would using ""git pull --rebase"" rather than just ""git pull"" change the answer at all? Rebasing may have its <a href=""https://stackoverflow.com/questions/2590260/when-will-git-pull-rebase-get-me-in-to-trouble"">own</a> <a href=""https://stackoverflow.com/questions/2472254/when-should-i-use-git-pull-rebase"">pitfalls</a> in some cases, but so far my guess is that having a dirty working tree/index wouldn't make a rebase more problematic than it otherwise would be.</p>
","0","64257","0","0"
"46065581","4343984","2017-09-06 01:43:23","-2","3151","<git><git-commit><git-push><git-pull><git-add>","What happens when user does ""git push"" before ""git add"" and ""git commit""?","<p>I was working on a project made some changes in my code (in Itellij IDE) and by mistake I did below two steps in my terminal and I saw some changes went into the main respository (not my changes or anything I had worked previously).
Does anyone know why it did it ?</p>

<p>Note:
Changes that were pushed were not my code.</p>

<ol>
<li>git pull ( all-upto-date, I received) from my terminal</li>
<li><p>git push (rather than ""git add"" and ""git commit"") from my terminal</p>

<ul>
<li>Adding additional information (<strong>edited</strong>)
Yes, I had some changes in my local repository before I did a git push. But when I did the mistake of ""git push"" none of my local committed changes were pushed but rather someone else code was pushed which I had pulled.</li>
</ul></li>
</ol>

<p>I could not understand why git did that and thought of asking a question here to understand.</p>

<p>The question was asked to know possible cause without influencing my view on the answer.</p>
","3","4343984","",""
"46074044","5061866","2017-09-06 11:29:13","3","2140","<git><git-branch><git-pull>","Is it safe to do a git pull from master to my local repo after creating a new branch on which I need to see the latest changes too?","<p>I would like to have the latest updates from the remote repo on my local one. I usually do git pull while being on the master branch and then create a new branch. I have now created a new branch (did not add/change anything in the local code) but skipped the git pull on master before this. If I do a git pull, will the latest remote modifications be reflected on my new local branch and local master, or should I delete it and recreate it after git pull?
Thanks!</p>
","0","5061866","0","0"
"9867957","123545","2012-03-26 07:06:34","5","3811","<git><git-pull>","git shows that I deleted all the files in my repo and staged them for commit after I did a git pull. Why?","<p>Here's what I did:</p>

<pre><code>$ git pull
remote: Counting objects: 446, done.
remote: Compressing objects: 100% (372/372), done.
remote: Total 383 (delta 280), reused 0 (delta 0)
Receiving objects: 100% (383/383), 652.75 KiB | 381 KiB/s, done.
Resolving deltas: 100% (280/280), completed with 43 local objects.
Fast-forward
&lt;list of files and summary of changes&gt;
</code></pre>

<p>Now when I typed git status, git shows me that I deleted ALL the files in my repo and that I staged them for commit. It also shows me ALL the files as untracked.</p>

<pre><code>$ git status
# On branch master
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#   deleted:    ....
#   deleted:    ....
#   deleted:    ....
&lt;a list of all files in the repo&gt;
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
&lt;a list of all top-level files and folders in the repo&gt;
</code></pre>

<p>And then when I typed <code>git add .</code> and then <code>git status</code>, it showed that are no changes to be committed.</p>

<p>Any idea why this is happening? </p>
","4","123545","0","0"
"9876179","248220","2012-03-26 16:42:08","13","6905","<git><git-submodules><git-pull>","What's the status of my git submodule, and how can I clean it up?","<p>Being a relative submodules noob, I wanted to update my submodule with from its origin, and did:</p>

<pre><code>git pull
</code></pre>

<p>This resulted in:</p>

<pre><code>remote: Counting objects: 111, done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 57 (delta 54), reused 57 (delta 54)
Unpacking objects: 100% (57/57), done.
From github.com:eteanga/smarty
   8e9a011..818ab3e  master     -&gt; origin/master
You are not currently on a branch, so I cannot use any
'branch.&lt;branchname&gt;.merge' in your configuration file.
Please specify which remote branch you want to use on the command
line and try again (e.g. 'git pull &lt;repository&gt; &lt;refspec&gt;').
See git-pull(1) for details.
</code></pre>

<p>Trying to fix:</p>

<pre><code>git pull origin master
</code></pre>

<p>Output:</p>

<pre><code>From github.com:eteanga/smarty
 * branch            master     -&gt; FETCH_HEAD
Updating 8e9a011..818ab3e
Fast-forward
[snip]
</code></pre>

<p>Now it seems that I did get the updated code, <strong>but</strong> I'm not currently working on any branch.</p>

<p>What should I have done to update my submodule correctly, and what should I do to fix this current state?</p>
","0","248220","0","0"
"27889619","595105","2015-01-11 16:54:41","0","81","<git><bash><git-pull>","bash: git pull has modification condition","<p>I want to make a bash script that will run a git pull and run some other command to update the project's data / cache.</p>

<p>I would like to run those commands only if the git pull command had updated the project (new commits were retrieved).</p>

<p>Something like that would be nice:</p>

<pre><code>#!/bin/bash

git pull
if *git pull brought new commits*; then
    # run update cache commands
fi
</code></pre>

<p>A grep filter on git pull output could do the trick, but I'm looking for a cleaner solution.</p>
","5","595105","",""
"64807713","14626928","2020-11-12 16:23:04","-2","209","<git><git-push><git-pull>","git generating a new master.lock file every time I pull","<p>Running git on windows 10, I get similar problems on different git-applications (git GUI, git on UBUNTU shell, git in terminal).</p>
<p>It's the same behaviour on all my projects and different computers, making me suspecting that something is wrong with my account. The problem started a couple of months ago, did not have any problems before that.</p>
<pre><code>git pull                                                                           
error: cannot lock ref 'refs/remotes/origin/master': Unable to create '/mnt/c/users
/simon/Dropbox/Universitet/dark/datorarkitektur/.git/refs/remotes/origin/master.loc
k': File exists.                                                                                                                                                      
Another git process seems to be running in this repository, e.g.                   
an editor opened by 'git commit'. Please make sure all processes                   
are terminated then try again. If it still fails, a git process                    
may have crashed in this repository earlier:                                       
remove the file manually to continue.                                              
From https://git.cs.umu.se/c18sjn/datorarkitektur                                   
! 7b1722c..c2c55fa  master     -&gt; origin/master  (unable to update local ref)
</code></pre>
<p>I remove the .lock file located in .git/refs/remotes/origin/master.lock but it is generated every time I pull. I have tried to remove all my editors with integrated GIT functionality and terminated all processes except one terminal.</p>
<p>If my branch is behind I am able to pull (with similar warnings but does work) and then push, but I am not able to push at all if my branch is ahead before the pull (because the pull fails). Example of push:</p>
<pre><code>git push                                                                           
To https://git.cs.umu.se/c18sjn/datorarkitektur.git                                 
! [rejected]        master -&gt; master (non-fast-forward)                           
error: failed to push some refs to 'https://git.cs.umu.se/c18sjn/datorarkitektur.git'                                                                                 hint: Updates were rejected because the tip of your current branch is behind       
hint: its remote counterpart. Integrate the remote changes (e.g.                   
hint: 'git pull ...') before pushing again.                                        
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
</code></pre>
","2","14626928","",""
"10097571","343381","2012-04-10 22:50:10","13","3952","<git><git-pull>","Is it possible to 'git pull' only the next commit?","<p>I understand <code>git pull</code> will update the working branch to the tip of a remote branch that it tracks.  So let's say if I do <code>git pull</code>, it will pull in all the latest changes.  In my case, it will pull in 5 changes on top of my tree.</p>

<p>Is there a way to <code>git pull</code> only the next change?  i.e., if <code>git pull</code> would put change 03, 04, 05, 06 and 07 on top of my tree, how do I pull only change 03?  At the time of this command I do not know the commit ID of the next change it would pull in.</p>

<p>The tip of my tree is completely unaltered and will not have any merge conflicts and such.</p>
","1","343381","0","0"
"10124223","81415","2012-04-12 13:08:04","14","57677","<git><git-pull><git-checkout><git-fetch>","Pulling just one directory out of a git repo","<p>I have a git repo that I want to do a pull from. I do a normal <code>git pull</code> with no problems. The issue is that I want just one certain directory out of the repo. My thinking was that I could use a <code>.gitignore</code> file with a rule like this:</p>

<pre><code>#Ignore all files
/
#Except the one I want
!/temp
</code></pre>

<p>The problem is this doesn't work. Is that the right way to do it or is there a better way?</p>
","3","81415","0","0"
"46392822","3337391","2017-09-24 17:22:25","4","5944","<git><git-merge><git-rebase><git-pull>","Difference between git pull, git fetch+merge and git rebase","<p>I am confused between <code>git pull</code>, <code>git fetch</code> + <code>git merge</code> and <code>git rebase</code>.
They all seem to do same function then what is the difference between them specially in terms of commit logs.</p>

<p>If there are changes in both remote and local branch then whose commit will appear first in all three cases.</p>
","5","3337391","0","0"
"10147475","644986","2012-04-13 19:55:46","139","137758","<git><git-pull><git-checkout>","git checkout tag, git pull fails in branch","<p>I have cloned a git repository and then checked out a tag:</p>

<pre><code># git checkout 2.4.33 -b my_branch
</code></pre>

<p>This is OK, but when I try to run <code>git pull</code> in my branch, git spits out this error: </p>

<blockquote>
  <p>There is no tracking information for the current branch. Please
  specify which branch you want to merge with. See git-pull(1) for
  details</p>

<pre><code>git pull &lt;remote&gt; &lt;branch&gt;
</code></pre>
  
  <p>If you wish to set tracking information for this branch you can do so
  with:</p>

<pre><code>git branch --set-upstream new origin/&lt;branch&gt;
</code></pre>
</blockquote>

<p>I want <code>git pull</code> to only update the master branch and leave my current branch alone (it's a tag anyway). Is something like this possible?</p>

<p>The reason I need this is that I have a automatic script which always git pulls the repository and of course fails because of the error above..</p>
","1","644986","0","0"
"28528570","3929110","2015-02-15 16:58:06","1","44","<git-branch><git-pull>","How to pull a commit from a branch in git","<p>I have two commits in my branch.<br>
How can I pull the first  from command line in my local repository?<br>
I have two commits under branch 'foo'. With messag ""xyz"" and ""abc""  and with some numbers written ""efc204e"" and ""33481e8"" respectively  </p>
","6","3929110","",""
"65326123","6247680","2020-12-16 15:20:04","0","255","<git><git-pull><git-merge-conflict>","git conflict while pull from upstream","<p>My local <code>master</code> regularly gets several commits behind from <code>upstream</code> pulled from other feature branches.</p>
<p>Obviously, all <strong>PR</strong>s have conflicts resolved while merging to upstream. The thing is whenever I'm pulling the changes to my local, I've to face and resolve the conflicts again. But, that's already resolved while the <strong>PR</strong> is made. This is being a regular hassle to <code>pull</code> other's work.</p>
<p>Is there any way I can avoid this?</p>
","5","6247680","",""
"65671922","3964397","2021-01-11 17:41:56","1","522","<git><gitignore><git-pull>","Is it possible to use "".gitignore"" from the remote during a pull?","<p>I have a situation where some files that were previously checked into Git now need to be ignored. To ignore them I added the files to &quot;.gitignore&quot; and did the following:</p>
<pre><code>git rm -r --cached .
git add --all
git commit -m &quot;Removed files from git tracking that should be ignored&quot;
git push
</code></pre>
<p>Now I have a situation where I need to pull these &quot;.gitignore&quot; changes to another server, but when I do a <code>git pull</code> the files that were just added to &quot;.gitignore&quot; are not ignored, and instead they get removed entirely!</p>
<p>I think what is happening is during the pull it is using the local &quot;.gitignore&quot; file that does not ignore these files... and it detects that these files are no longer in git so it just removes them. If I add the files back manually and do another git pull then it begins working properly (now that the correct &quot;.gitignore&quot; file is on the server.)</p>
<p>Is there any way to tell the <code>git pull</code> to use the &quot;.gitignore&quot; file from the remote server instead of the local file that way these files get properly ignored and do not get removed on a git pull?</p>
","4","3964397","0","0"
"47135249","6179286","2017-11-06 10:53:25","0","56","<git><ubuntu><git-pull><git-log>","exact timestamps git pull","<p>I'm trying to retrieve a list when a <strong>git pull</strong> was made on a Ubuntu server
eg.</p>

<ul>
<li>2017-11-03 14:00:00 revision</li>
<li>2017-11-02 11:30:00 revision</li>
</ul>

<p>Is this possible?</p>

<p>I tried <strong>git log</strong> but this shows me the commits and not the date when they were pulled.</p>
","3","6179286","",""
"65697525","1084174","2021-01-13 07:40:31","1","213","<git><github><version-control><rebase><git-pull>","How to 'git pull --rebase' for all Git branches?","<p><strong>How to 'git pull --rebase' for all Git branches?</strong></p>
<p>I need to make git bundle frequently with latest source hence, I run <code>git pull --rebase</code> for each branch manually. When I run <code>git pull --rebase --all</code> I see for current active branch rebased is done but for other branch I see &quot;head is some # commit ahead&quot; this type of message. Is there any git tool running which will result like running <code>git pull --rebase</code> after switching each branch manually?</p>
","1","1084174","0","0"
"11030181","1237696","2012-06-14 09:24:07","3","2792","<git><virtualbox><git-pull><ubuntu-12.04>","git pull fatal error","<p>When I try to trigger <strong>git pull</strong> command it is returning an error as follows:</p>

<blockquote>
  <p>mert@eren-VirtualBox:~/restoranya/restoranya$ git pull origin master</p>
  
  <p>error: object file
  .git/objects/2a/0836034919f0cfe0f8f1ab98037884dd1c93de is empty </p>
  
  <p>fatal: loose object 2a0836034919f0cfe0f8f1ab98037884dd1c93de (stored
  in
  .git/objects/2a/0836034919f0cfe0f8f1ab98037884dd1c93de) is corrupt</p>
  
  <p>mert@eren-VirtualBox:~/restoranya/restoranya$ fatal: The remote end
  hung up unexpectedly</p>
</blockquote>

<p>Whats the reason for such an error? What should I do to recover?</p>
","0","1237696","0","0"
"29287734","590475","2015-03-26 20:00:32","1","10617","<git><git-pull><git-fetch>","How to pull new files from git master?","<p>Hi I have been scouring all the forums and search engines for doing what I thought to be simple. I am trying to pull all the changes from my master git repo into a remote branch. It does that but does not pull in the new files created. How on earth can I make sure that new files are added to the branch with </p>

<pre><code>git pull
</code></pre>

<p>I tried:</p>

<pre><code>git checkout master newfile.html
</code></pre>

<p>and </p>

<pre><code>git checkout HEAD -- newfile.html
</code></pre>

<p>I thought that by default 'pull' would just update everything from the master new or not new, but it is obviously not the case. How do I do this?</p>
","2","590475","",""
"11433731","1517898","2012-07-11 13:27:41","7","25135","<git><branch><git-pull>","Why did a git pull origin master not work, but a git pull did?","<p>So I ran into a peculiar problem this morning, and I was wondering if the community could help me figure it out.  So I've been doing <code>git pull origin master</code> when I want to fetch and merge the projects changes from the remote master copy and bring them to my local master.</p>
<p>I've been running into some merging issues lately though, so I did an experiment - <br>
I did a <code>git pull origin master</code> like always, and got the message that said <em>&quot;Already up-to-date.&quot;</em></p>
<p>Then I did a normal <code>git pull</code> and then saw all of my coworkers changes rolling in and merging with my local master branch.</p>
<p>Why did a git pull origin master not work, but a git pull did?</p>
<p>I wonder how many changes I haven't been seeing because of this quirk I discovered.  I've done some research to find out what the differences are but I still haven't found a reason why my repo wasn't being updated properly with a git pull origin master, when I've seen changes being fetched and merged into my branch with that method before.</p>
<p>Thoughts?</p>
<p>Thanks in advance.</p>
","0","1517898","0","0"
"66072103","2414957","2021-02-05 23:48:26","3","2228","<git><github><pull-request><git-pull>","the modified file pulled through git pull origin master is not shown as changed even though git log confirms the pull","<p>I have a branch and wanted to git the changes in the master using $ git pull origin master
After I do this, the pull really didn't show any merged PR being pulled and said it's already updated. However, the git log shows the last merged PR.</p>
<p>So how can I get the latest changes (a merged PR) on this branch?</p>
<p>Doing the $ git pull origin master on the master branch shows the merged PR being pulled.</p>
<p>How can I fix this problem? Since the README.md that I have merged its PR on the Github page, and also was able to use git pull origin master and pull it to master is not being pulled into this new branch.</p>
<pre><code>$ git branch
  dataprocessing
  master
* toyota
</code></pre>
<p>When in the branch:</p>
<pre><code>$ git merge master
Already up to date.
</code></pre>
<p>and</p>
<pre><code>$ git branch -vv
  dataprocessing dcaa9f9 Merge pull request #122 from XYZaiXYZ/toyota
  master         dcaa9f9 [origin/master] Merge pull request #122 from XYZaiXYZ/toyota
* toyota         dcaa9f9 [origin/toyota: ahead 1] Merge pull request #122 from XYZaiXYZ/toyota
</code></pre>
<p>Additionally, the following yields no results:</p>
<pre><code>$ git diff origin master
</code></pre>
<p>This is what I see in the README.md in local branch toyota:
<a href=""https://i.stack.imgur.com/LUcQf.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/LUcQf.png"" alt=""enter image description here"" /></a></p>
<p>This is what I see in the README.md in GitHub PR which I merged:
<a href=""https://i.stack.imgur.com/NLnAW.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/NLnAW.png"" alt=""enter image description here"" /></a></p>
<p>This is what I see when I browse to the actual README.md in GitHub website:
<a href=""https://i.stack.imgur.com/8VcSy.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8VcSy.png"" alt=""enter image description here"" /></a></p>
<p>This is what I see if I $ git checkout master, as you see even in master after pulled update the README.md is not changed:
<a href=""https://i.stack.imgur.com/8ghAb.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8ghAb.png"" alt=""enter image description here"" /></a></p>
<pre><code>$ git checkout toyota
Switched to branch 'toyota'
Your branch is ahead of 'origin/toyota' by 1 commit.
  (use &quot;git push&quot; to publish your local commits)

$ git merge origin master
Already up to date.

$ git log README.md 
commit ac7cXXXX (origin/toyota)
Author: Mona Jalal &lt;mona@XYZ&gt;
Date:   Fri Feb 5 22:40:32 2021 +0000

    fixed two typos in the README.md

$ git pull origin master
From ssh://github.com/XYZaiXYZ/vision
 * branch            master     -&gt; FETCH_HEAD
Already up to date.
</code></pre>
<p>I have merged #122 PR to master myself and I see this when I enter the git repo:
<a href=""https://i.stack.imgur.com/k2Rsx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/k2Rsx.png"" alt=""enter image description here"" /></a></p>
<pre><code>$ git checkout master
$ git log
commit dcaa9XYZ (HEAD -&gt; master, origin/master, origin/HEAD, toyota, dataprocessing)
Merge: 3b29485 ac7c61e
Author: Mona Jalal &lt;76495162+XYZ@users.noreply.github.com&gt;
Date:   Fri Feb 5 17:44:36 2021 -0500

    Merge pull request #122 from XYZaiXYZ/toyota
    
    fixed two typos in the README.md
</code></pre>
<p>I also did git clone the repo in a test dir and I can see the changes are shown in this new clone
<a href=""https://i.stack.imgur.com/1KtKG.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/1KtKG.png"" alt=""enter image description here"" /></a></p>
","10","2414957","",""
"30097955","4112603","2015-05-07 10:09:02","1","721","<git><bitbucket><git-push><git-pull>","Bitbucket git pull and git push give 'Already up to date' and 'Everything up to date' when I can see online 2 more commits on top","<p>Bitbucket git pull and git push are giving 'Already up to date' and 'Everything up to date' when I can see online 2 more commits on top</p>

<p>When using gitk I see that remote master is 2 commits below of the real remote master (the one I can see on bitbucket webview). I do a git pull or a git fetch plus the merge and I always get 'Already up to date'.</p>

<p>If I checkout the latest commit I can see on the webview manually and put it in a different branch I can see on Gitk that I'm now on top of master (local and remote) by 2 commits, so I tried to push these 2 commits again and it says 'Everything up to date'</p>

<p>Not really sure what else I can do. Already cloned the repo from scratch again and same thing. Webview all the commits, right after git clone if I do a git status or use gitk the 2 top commits are not there.</p>

<p>The only think I did different compared to what I was doing before is that those 2 commits have tags. May that be the issue?</p>

<p>Thanks in advance for the help. </p>
","0","4112603","",""
"30099585","2856076","2015-05-07 11:18:49","4","7233","<git><visual-studio><visual-studio-2013><git-pull><pull>","Pull Button for git disabled in VisualStudio","<p>I'm using VisualStudio 2013 Update 4 and have git for Windows installed.
I have local git repository and my project is linked to. I can push unsynced commits to remote repository in the IDE, but button for pull and fetch are disabled.</p>

<p>In git bash i can pull (or fetch) and then back in VS i get an unsynced commitment for ""merge"" and can push it (Looks strange to me).</p>

<p>Can i integrate pull/fetch from remote repository without TFS?</p>
","0","2856076","",""
"47806589","8017611","2017-12-14 05:43:55","-1","4805","<github><git-push><git-pull>","How to pull code which is in develop branch git bub","<p>I am new to GitHub and I am trying to pull code from develop branch (just another branch) from git hub but its download the code from master branch, which command I should use to get the code from develop branch. pls anyone can explain this. thank u</p>

<p>and whenever I tried to push code I will get the error like this
<a href=""https://i.stack.imgur.com/nFiNm.jpg"" rel=""nofollow noreferrer"">enter image description here</a></p>
","1","8017611","",""
"48970721","6098159","2018-02-25 06:05:50","3","6609","<git><github><git-pull>","Resolving merge conflict in git pull?","<p>I need help in  resolving merge conflict in git pull from GitHub, I did following 
on my current branch, I did the following<br>
fa</p>

<ol>
<li><code>git pull --rebase master</code> </li>
<li><code>git pull ssh:.....</code> (pulled changes from my review) </li>
<li>there was merge conflict in one file</li>
<li>removed all conflicts </li>
<li><code>git add .</code></li>
<li>when I tried to commit back using <code>git commit --amend</code> I got error </li>
</ol>

<blockquote>
  <p>""fatal: you are in the middle of merge -- cannot amend""</p>
</blockquote>

<p>I want to amend same commit again without createating new commit ID. is there a way ? </p>
","5","6098159","",""
"14210782","556856","2013-01-08 08:14:31","5","768","<git><git-pull>","What does git pull . do?","<p>When I run it on my git repo this is what I get.</p>

<pre><code>git pull .
From .
 * branch            HEAD       -&gt; FETCH_HEAD
Current branch rel_20121207 is up to date.
</code></pre>

<p>But when I run just <code>git pull</code> it actually updates from the remote.</p>

<p>I would like to know what exactly happened when I ran <code>git pull .</code></p>
","0","556856","",""
"49036007","617146","2018-02-28 18:11:29","5","4350","<git><version-control><status><git-pull>","How to quickly check if a git pull command is successful?","<p>I wrote a bash script to loop through all git folders and do a <code>git pull</code>. The issue is there are a lot of folders, and the <code>git pull</code> command generates a lot of logs for each of them, so that I have to skim through the logs and check if any of them had failures (e.g: some might need a <code>git reset</code> prior to the pull)
Is there a way to get kind of ""success"" or ""failure"" state of <code>git pull</code> result, then it'd be more concise in the logs, and I can just focus on those that failed and treat them separately.</p>
","0","617146","0","0"
"14234005","497180","2013-01-09 11:15:12","0","105","<git><version-control><github><git-pull>","non-fast-forward error in git","<p>I want to use <strong>git</strong> in my existing project, so I created a space on <strong>github</strong> for it and in the project folder on my host I did the usual:</p>

<pre><code>$ git config --global user.name myname
$ git config --global user.email ""myemail@email.com""
$ cd myProjectFolder/
$ git init
$ git add .
$ git commit -m ""first commit""
$ git remote add origin https://github.com/myusername/myprojectname.git
</code></pre>

<p>And then I want all the files of my project to be also on the online repository:</p>

<pre><code>$ git push origin master
</code></pre>

<p>But I got the following much-dreaded error:</p>

<pre><code>To https://github.com/myusername/myprojectname.git
 ! [rejected]        master -&gt; master (non-fast-forward)
error: failed to push some refs to 'https://github.com/myusername/myprojectname.git'
To prevent you from losing history, non-fast-forward updates were rejected
Merge the remote changes (e.g. 'git pull') before pushing again.  See the
'Note about fast-forwards' section of 'git push --help' for details.
</code></pre>

<p>Now, there is nothing I have to <code>pull</code> from the online repository, since there is still nothing over there. Why should I pull?</p>

<p>Anyhow, what exactly should I do here to have all my files online and start using git?</p>
","2","497180","",""
"14416175","1275959","2013-01-19 16:10:10","1","1708","<git><gitignore><git-pull><git-checkout>","Git checkout failing after pulling and changing .gitignore file","<p>Suppose I have in my local repo two branches 'master' and 'new', in master I decided to put a folder 'folder/' in .gitignore and the I pulled from the repo into master, adding a new folder 'temp/' Now when I want to checkout to 'new', I have this </p>

<pre><code>error: The following untracked working tree files would be overwritten by checkout:
.folder/subfolder/somefile
.folder/subfolder/somefile
tmp/somefiles(1),tmp/somefiles(2)...
</code></pre>

<p>(I commited before checking out out) I tried to run git rm --cached to the 'temp/'and 'folder/' folder and I don't understand why I get this message (and I think check out process is not really clear for me). Some one can help ?</p>
","0","1275959","0","0"
"67354162","3222249","2021-05-02 08:02:12","0","1954","<git><github><git-pull>","Not able to pull the code through git pull","<p>I have two below branches in my remote GitHub repository:</p>
<pre><code>master
test-branch
</code></pre>
<p>I did <code>git pull</code> in my test directory but I don't see any code pull in my local directory. Also when I do <code>git branch</code> I don't see any local branch listing here. Not sure why ? But once I do <code>git branch -a</code>, see below remote branches displayed in red:</p>
<pre><code> remotes/origin/master
 remotes/origin/test-branch
</code></pre>
<p>When I do specific branch pull i.e. <code>git pull origin test-branch</code> I see code gets pulled in my test directory but when I do <code>git branch</code> I see below listing:</p>
<pre><code>* master
  remotes/origin/test-branch [displayed in red]
</code></pre>
<p>Not sure why it is displaying master here as I pulled test-branch code. Also how I can see which remote branch this master is pointing to?</p>
","3","3222249","0","0"
"72481704","10370570","2022-06-02 19:59:37","1","803","<git><git-branch><git-commit><git-pull>","Will git pull command overwrite non-commit changes","<p>Git <code>pull</code> command will <code>fetch</code> + <code>merge</code> remote branch to local branch . And if there are merge conflict between commits , you can resolves it locally  .</p>
<p>But what if I never <code>commit</code> anything I changed locally and <code>pull</code> a remote updated branch ?</p>
<p>Will git ignores my local non-commit changes and straight off overwrite my local branch ?</p>
<p>Does this mean I should always <code>commit</code> before pulling to update local branch ?</p>
","1","10370570","",""
"52733032","8854574","2018-10-10 05:13:55","0","255","<git><git-merge><git-pull>","How to get back stashed changes without solving git pull merge conflicts","<p>I have three branches, branch <code>a</code>,<code>b</code> and branch <code>HotFix</code>.</p>

<p>I was working on branch HotFix, where I was solving an issue, then I got a call for another work. I need to switch to branch <code>b</code>. I stashed my current branch changes and then I do <code>git checkout b</code> after that <code>git pull origin b</code>.</p>

<p>After pulling the changes git bash shows me merge conflicts, these are really huge number of files, I don't want to resolve the conflicts manually. I have lost my local branch <code>HotFix</code> and its work. Is there any way to get back the stashed changes without resolving conflicts. </p>

<hr>

<p>What I think I am looking for a <code>git unpull</code> or <code>git reverse pull</code>.</p>
","1","8854574","",""
"52758442","1297725","2018-10-11 11:02:13","0","34","<git><github><repository><git-push><git-pull>","migrate git repositories into another","<p>I have a repository A and B and want to migrate both repositories into C,
I tried below steps</p>

<pre><code>git clone --bare &lt;A-url&gt;
cd to the A.git directory
git push --mirror &lt;C-url&gt;
</code></pre>

<p>Now C has same copy of A  </p>

<pre><code>git clone --bare &lt;B-url&gt;
cd to the B.git directory
git push --mirror &lt;C-url&gt;
</code></pre>

<p>Here repository C is having only folders and files from repo B and the content from repository A removed
Is there any way to persist/retain the files in repository C ?</p>
","2","1297725","",""
"52870122","5353461","2018-10-18 08:39:32","1","135","<git><git-merge><git-pull><pull><git-fetch>","Why avoid `git pull` and what to do instead","<p>In <a href=""https://stackoverflow.com/questions/52538050/exit-status-is-0-but-autostash-requires-manual-merging#comment92077148_52540878"">this comment</a>, 
<a href=""https://stackoverflow.com/users/1256452/torek"">@torek</a> (reputation currently 172,509) said:</p>

<blockquote>
  <p>I actually recommend avoiding <code>git pull</code> entirely, for the same reason you recommend avoiding <code>--autostash</code></p>
</blockquote>

<p>The <a href=""https://stackoverflow.com/a/52540878/5353461"">reason given</a> for avoiding <code>git rebase --autostash</code> was:</p>

<blockquote>
  <p>It seems convenient when it works but is problematic when it doesn't</p>
</blockquote>

<p>In which ways can <code>git pull</code> be problematic when it doesn't work?</p>

<p><a href=""https://stackoverflow.com/a/52870006/5353461"">My robust automated solution to avoiding <code>git pull --autostash</code> is non-trivial</a>.</p>

<p>Is there a robust automated solution to avoiding <code>git pull</code>?</p>
","7","5353461","0","0"
"36867180","1491663","2016-04-26 13:59:59","0","89","<git><merge><atlassian-sourcetree><git-pull>","Why does git / SourceTree wants me to edit conflicts in the source rather than in the destination of a merge?","<p>We are using git via SourceTree. I am in the process of merging a master (which has previously been updated because of some hotfixes) into a release branch (which was broken out of the master a couple of months back).</p>

<p>Source Tree is indicating that there are conflicts when doing a Pull Request from master -->release and advises me to use the commands below (via the atlassian-Stash-GUI).</p>

<p>However what I don’t understand is this: I appear to be solving the conflicts then via the commands below in the master and pushing them into the master. I also end up having the changes from NextRelease then in the master when I'd rather expected to have them only in NextRelease because of this Pull Request.</p>

<p>I would have thought that I should end up via these commands in the NextRelease branch and solve the conflicts there and leave my master unchanged.</p>

<p>Am I doing something wrong here?</p>

<pre><code>git fetch origin release/NextRelease

git checkout master
git merge FETCH_HEAD

&lt;now we should resolve the conflicts&gt;

git commit
git push origin HEAD
</code></pre>
","1","1491663","",""
"52980805","10323279","2018-10-25 03:13:20","0","2652","<gitlab><git-commit><git-push><git-pull><git-fetch>","can't push to gitlab, failed and rejected","<blockquote>
  <p>has been pulled, the result is still an error <code>! [rejected]  dev-&gt;dev(non-fast-forward)</code></p>
</blockquote>

<pre><code>D:\PPI_Roketin\Project\astrowatch (dev)
λ git add resources/views/reals/_form.blade.php

D:\PPI_Roketin\Project\astrowatch (dev)
λ git commit -m ""resources/views/reals/_form.blade.php""
[dev db5ac99] resources/views/reals/_form.blade.php
1 file changed, 2 insertions(+), 2 deletions(-)

D:\PPI_Roketin\Project\astrowatch (dev)
λ git push origin dev
To gitlab.com:roketin-stellar/astrowatch.git
! [rejected]        dev -&gt; dev (non-fast-forward)
error: failed to push some refs to 'git@gitlab.com:roketin- stellar/astrowatch.git'
hint: Updates were rejected because the tip of your current branch is behind
hint: its remote counterpart. Integrate the remote changes (e.g.
hint: 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
</code></pre>

<blockquote>
  <p>error like this, why?</p>
</blockquote>

<p><a href=""https://i.stack.imgur.com/xW3bV.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/xW3bV.png"" alt=""enter image description here""></a></p>

<blockquote>
  <p>have done git checkout, and repeated the command, it's still an error like above</p>
</blockquote>
","1","10323279","",""
"69923829","6097074","2021-11-11 06:00:27","-2","39","<git><git-pull>","Wrongly git pull and conflicts occur","<p>I am facing issue after wrongly use <code>git pull</code> command but after that i got conflict issues. But i want to revert that <code>git pull</code> and resync my local project with online git project.</p>
<p>help to get solution for this problem.</p>
","2","6097074","",""
"37190514","1723578","2016-05-12 14:52:14","2","250","<git><git-rebase><git-pull>","git pull --rebase fork infomation","<p>We are using <code>git pull --rebase</code> instead of <code>git pull</code>. We have a problem retrieving the fork information that doesn't show anymore on the server.</p>

<p>Assume a single ""master"" branch from which people push and pull.
Also, assume people modified different files and there was no conflict raised by git.</p>

<p>Here is an image of my local branch and its upstream before the pull</p>

<pre><code>      A---B---C local
     /
D---E---F---G server
</code></pre>

<p>If we were using <code>git pull</code> (the standard one) this is what would have happened</p>

<pre><code>      A---B---C 
     /         \
D---E---F---G---M---
</code></pre>

<p>but since we are using <code>git pull --rebase</code> this is what happens if I am not wrong:                  </p>

<pre><code>D---E---F---G---A'--B'--C' 
</code></pre>

<p>Now we know that one of the tests doesn't work anymore in C'. We are sure it was working in both C and G. Even if there was no conflicts, This could have possibly happened, if there was two redundant code blocks, and the first guy removed one block while the other guy removed the other block.</p>

<p>Normally the modifications to be checked are those in the commits A',B',C,F,G, because the fork has happened at E. But since we are using <code>git pull --rebase</code> we can not know when the fork has happened so we are unable to recognize the set A',B',C,F,G. </p>

<p>1) Knowing that the problem now only appears at C' is there a way to recognize E and hence the set A',B',C,F,G ?</p>

<p>2) If the answer to 1) is ""no"" then what commits should be checked?</p>
","0","1723578","0","0"
"70010191","10570539","2021-11-17 19:07:32","-2","1782","<git><commit><git-commit><git-pull><git-merge-conflict>","git: Your branch and 'origin/master' have diverged - I don't want to push ""27 different"" commits and want to uncommit them and keep the local commit?","<p>Your branch and 'origin/master' have diverged,
and have 1 and 27 different commits each, respectively.
(use &quot;git pull&quot; to merge the remote branch into yours)</p>
<p>nothing to commit, working tree clean</p>
","3","10570539","",""
"37246151","4490949","2016-05-16 03:06:24","8","1549","<git><version-control><git-rebase><git-pull><git-flow>","git pull --rebase origin master appears to rebase from the beginning every time","<p>We frequently branch out from master to work on large feature branches. These feature branches are usually worked on for days or even weeks before being merged with master (as much as best practice dictates that we need to merge as frequently as possible, practically it could be different). </p>

<p>As such, we try as much as possible to <code>git pull --rebase origin master</code> in order to remain updated with master. However, we'd occasionally encounter the situation where e.g.:</p>

<p>1) Branch out from <code>master</code> branch to <code>feature/new-branch</code></p>

<p>2) Make changes in <code>feature/new-branch</code> and commit changes.</p>

<p>3) <code>git pull --rebase origin master</code> to put commits on top on master. Fix any conflicts and <code>git add .</code> + <code>git rebase --continue</code></p>

<p>4) Make more changes in <code>feature/new-branch</code> and commit changes. </p>

<p>5) <code>git pull --rebase origin master</code> again. </p>

<p>However, at step 5), the process requires us to fix the same conflicts from step 3). Which can be tedious.</p>

<p>Is this the right best practice git flow and if not, what else can we do to make the process more efficient?</p>
","0","4490949","0","0"
"38017517","2560685","2016-06-24 15:57:54","71","30226","<git><git-rebase><git-pull>","git pull --rebase vs git rebase : what's the danger?","<p>I don't understand the difference between <code>git pull --rebase</code> and <code>git rebase</code>, without any other options.</p>
<p>I don't understand if they are safe, a good practice, or very dangerous.</p>
<p>Can I break the history of commits by doing a <code>git pull --rebase</code> in local?</p>
","2","2560685","0","0"
"38026529","3064157","2016-06-25 08:28:42","1","5444","<git><bitbucket><rpc><git-pull>","How to resolve error in git pull from bitbucket?","<p>Getting following error when making pull request on bitbucket.
The project is written in python-django framework.</p>

<pre><code>remote: Counting objects: 3703, done.
remote: Compressing objects: 100% (3030/3030), done.
error: RPC failed; curl 18 transfer closed with outstanding read data remaining
fatal: The remote end hung up unexpectedly
fatal: early EOF
fatal: index-pack failed
</code></pre>

<p>Any solution?</p>
","0","3064157","",""
"38072215","2377652","2016-06-28 09:24:52","0","2064","<git><git-branch><git-pull>","Why creating git branch doesn't copy all files?","<p><code>git branch</code> shows me that I'm on <em>master</em>.
I write <code>git checkout -b newbranch</code>.
<code>git branch</code> shows me that I'm on newly created branch <em>newbranch</em>.
I write <code>git pull</code> and get the following error:</p>

<pre><code>There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull &lt;remote&gt; &lt;branch&gt;

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=origin/&lt;branch&gt; newbranch
</code></pre>

<p>I guess that was because I couldn't pull from a branch that I only just created. So I write <code>git pull origin master</code> and get a million files that differ between branches <em>master</em> and <em>newbranch</em> (taking my full console so I can't see the beginning of the error) with the following ending:</p>

<pre><code>Please move or remove them before you can merge.
Aborting
</code></pre>

<p>I don't understand why branch <em>newbranch</em> isn't an exact copy of <em>master</em>. From what I read when I create a new branch it starts from the same commit as the branch I was on. I just wanted to make <code>git pull</code> to make sure all files are exactly the same as on master. If the new branch isn't the exact copy of the branch it was copied from, I don't know where all the files were taken from.</p>

<p><strong>Edit:</strong>
As everyone mentioned, the problem was that my local master was different than remote master. So I had to do:</p>

<pre><code>git checkout master
git branch -d newbranch
git fetch --all
# change permision issues with chmod and chown
git reset --hard origin/master
git checkout -b newbranch
</code></pre>
","1","2377652","0","0"
"38118886","5695625","2016-06-30 09:22:11","5","172","<git><git-pull>","git pull shows ""destructing"" messages","<p>I did a <em>git pull</em> today and got the following:</p>

<pre><code>$ git pull
remote: Counting objects: 8, done.
remote: Compressing objects: 100% (8/8), done.
remote: Total 8 (delta 6), reused 0 (delta 0)
Unpacking objects: 100% (8/8), done.
From bitbucket.org:[...]
   968e1d5..672edb4  develop    -&gt; origin/develop
   911ae33..37250eb  release/fta -&gt; origin/release/fta
destructing 4
destructing 3
destructing 2
destructing 1
Merge made by the 'recursive' strategy.
 .../[...].cs  | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
</code></pre>

<p>Some context:</p>

<ul>
<li>The pull was unable to do a fast-forward. Therefore I got a merge commit.</li>
<li>From the point on where my branch diverged from the remote, I had one commit (with 2 file changes) and the remote had one commit (with 1 file changed).</li>
</ul>

<p>So what are the ""destructing X"" messages about?
Why are there 4 of them? Two commits with 3 file changes where merged.</p>

<p>Checked git documentation and did some duckduckgo'ing and could not find an answer.</p>

<p>Kind regards</p>
","4","5695625","0","0"
"38124744","3042595","2016-06-30 13:35:33","0","685","<git><version-control><merge><git-pull><git-stash>","Why git pull won't/can't merge local changes?","<p>Trying to understand git behavior.</p>
<p>When I execute <code>git pull</code> I get a warning</p>
<pre><code>error: Your local changes to the following files would be overwritten
by merge:
        foo/bar
Please, commit your changes or stash them before you can merge. Aborting
</code></pre>
<p>But if I <code>git stash save</code>, <code>git pull</code>, and then <code>git stash pop</code>, the changes are applied without any problem.</p>
<pre><code>Auto-merging foo/bar
...
</code></pre>
<p>Why can't/won't <code>git pull</code> do the same thing?</p>
","3","3042595","",""
"38143694","389616","2016-07-01 10:59:11","1","286","<repository><git-pull>","How to check when last git pull command was performed?","<p>How do I check the last date time of git pull request made, as I have done some changes in my repo and trying to push them but before it I used ""git pull"" but it says ""Already uptodate"", now I use ""git push"" but unable to push changes as it says ""Everything up-to-date"". While git status shows modified files in staged and unstaged.</p>

<p>What am I doing wrong ?</p>
","0","389616","0","0"
"38169268","1234000","2016-07-03 11:00:06","0","208","<git><git-pull>","Merge remote into local subdirectory of a git project","<p>I have the following situation: Local, forked and customized git project that did not maintain the folder structure of the source.</p>

<p><code>~/dwm/dwm/* and ~/dwm/dwmstatus/*</code> is the new structure of my git project.</p>

<p>I now wanted to patch the latest source into my local repo. I <code>git remote add http://git.suckless.org/dwm/</code> and do a pull.</p>

<p>What happens is that the pull ignores the subdirectories (how should it know at first) and makes a full pull into <code>~/dwm/*</code>.</p>

<p>Question: How can I merge from the source remote into the ~/dwm/dwm/* subfolder? 
What I tried: <code>git checkout HEAD dwm/</code> and perform a pull then. This didn't do the trick as the directory was already up to date.</p>
","4","1234000","",""
"71106659","11098908","2022-02-14 02:48:41","0","1039","<git><git-pull>","Unable to do git pull due to permission denied could not read from remote repository","<p>I'm the owner of the remote repo. I can do <code>git push</code> easily. However, when I tried to do <code>git pull</code> to align my local with the remote repo, I got this error:</p>
<pre><code>git@github.com: Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
</code></pre>
<p>I spent hours to google for a solution but to no avail.</p>
<p>What is happening? I can understand if I can't do both <code>push</code> and <code>pull</code>. Could someone please help?</p>
<p>PS: when doing git <code>remote -v</code> I have the correct information</p>
<pre><code>origin  git@github.com:&lt;my github username&gt;/&lt;my github repo&gt;.git (fetch)
origin  https://github.com/&lt;my github username&gt;/&lt;my github repo&gt; (push)
</code></pre>
","2","11098908","",""
"73220127","11715424","2022-08-03 10:25:29","-1","67","<git><git-pull>","Specify branch name during git pull to avoid pulling from default branch","<p>I have below conditions my .yml file that is run to do the deployment to windows server.</p>
<ol>
<li>If folder 'ABC' does not exist in windows server, then create a folder 'ABC' and execute below command</li>
</ol>
<p><code>git clone --branch master https://git-token@github.com/username/repo.git master\</code></p>
<ol start=""2"">
<li>If folder 'ABC' already exists, then just do a pull using below command to pull latest changes</li>
</ol>
<p><code>git pull https://git-token@github.com/username/repo.git</code></p>
<p>Problem is, when it executes step 2, instead of pulling from 'master' branch, code is being pulled from 'Dev' branch since 'Dev' is the default branch in github (I would not want to change the default branch) and we are not specifying branch in the git pull command.</p>
<p>Can you please help me with the single git pull command (as in step 2) in which we specify the branch name as well. This needs to be a single pull command since .yml script is allowing to use only one command here.</p>
<p>I tried below options and these threw errors saying git command is invalid</p>
<p><code>git pull --branch master https://git-token@github.com/username/repo.git master\</code></p>
<p><code>git pull origin master  https://git-token@github.com/username/repo.git</code></p>
","0","11715424","",""
"67413615","14940254","2021-05-06 07:29:45","1","2009","<git><git-push><git-pull><git-lfs>","i can't push anything to git using git lfs although i reduce the size of repository","<p>i'm using git lfs for putting large file in github. today i recieve this email:</p>
<blockquote>
<p>Git LFS has been disabled on your personal account because you’ve exceeded your data plan by at least 150%. Please purchase additional data packs to cover your bandwidth and storage usage:</p>
<p><a href=""https://github.com/account/billing/data/upgrade"" rel=""nofollow noreferrer"">https://github.com/account/billing/data/upgrade</a>
i don't want to purchase so i deleted all of my files from github to reduce the size. so now there is no file in github. and now i want to push a small file to github with the following command:</p>
</blockquote>
<pre><code> git push origin master
</code></pre>
<p>but the result is as the following:</p>
<pre><code>Uploading LFS objects:   0% (0/19), 0 B | 0 B/s, done.
batch response: This repository is over its data quota. Account responsible for LFS bandwidth should purchase more data packs to restore access.
error: failed to push some refs to 'https://github.com/something/something.git'
</code></pre>
<p>why? i deleted all of the files from github and the size should be very small but it doesn't let me to push anything. what should i do?</p>
","3","14940254","",""
"14447804","1998408","2013-01-21 21:45:02","1","52","<git-pull>","why do you need to put branch name in git pull remote <branch> if the updated branch is where you are?","<p>when I do a git ""pull origin master"" from a branch the branch is updated NOT the master. In order to update the master I need to do a ""git checkout master"" and then call ""git pull origin master"". Why is ""master"" needed in the command if the updates take place to the current branch and not necessarily the master. </p>
","0","1998408","",""
"32006810","5122231","2015-08-14 09:31:32","1","111","<git-push><git-pull><git-clone><git-remote><git-add>","Connecting to web hosting site via git in such a way that I can push and pull directly via my local pc","<p>I initialized a bare repository on server</p>

<pre><code>git init --bare  
</code></pre>

<p>and then added a remote</p>

<pre><code>git remote add origin my.hosting.website.com:my-repository.git   
</code></pre>

<p>then I am trying to pull.I used     </p>

<pre><code>pull -all my repo on server
</code></pre>

<p>Problem is when I try to pull/push an item it gives error message</p>

<pre><code>fatal: /usr/libexec/git-core/git-pull cannot be used without a working tree
</code></pre>

<p>How to resolve this issue ?</p>

<p>Sorry I am just new to git.</p>
","5","5122231","",""
"49844954","4586715","2018-04-15 17:42:34","0","3492","<git><github><rebase><pull-request><git-pull>","How to get back my uncommitted changes after a git rebase?","<p>I had some uncommitted changes on my local and I wanted to send a pull request. I did a <code>git pull --rebase</code> and forgot committing my local changes.</p>

<p>The <code>git pull --rebase</code> has removed all my unsaved/uncommitted contents. How do I get them back?</p>

<p>I don't mind reverting the rebase, all I want is my uncommitted changes back.</p>
","2","4586715","",""
"67732782","3355407","2021-05-28 04:06:44","0","102","<git><git-rebase><git-pull>","git pull rebase freeze","<p>I am able to pull succesfully previosuly, but today when I do git pull --rebase, it just shows this message</p>
<pre><code>&quot;Updating b4b1294473..22ceb04d88&quot;
</code></pre>
<p>and it get stuck there forever.</p>
<p>It takes a lot of time to setup the git workspace, is there a workaround?</p>
","12","3355407","",""
"67881574","5751393","2021-06-08 04:49:37","0","62","<git><git-push><git-pull><git-remote>","git origin vs. other remotes, why origin works so much better?","<p>When I execute the following commands, everything works fine:</p>
<pre><code>git clone x
git checkout master
git pull --rebase
git commit
git push
</code></pre>
<p>But this does not work and asks for a remote and a branch:</p>
<pre><code>git remote add y
git checkout y/master
git pull --rebase
</code></pre>
<p>I experience similar problems with <code>git push</code>.</p>
<p>Why is it not y/origin?<br />
Why does it work so nicely and friendly by default
with <code>origin</code> but not other remotes?</p>
","3","5751393","",""
"32082486","3323107","2015-08-18 21:02:05","0","449","<php><git><exec><git-pull><webhooks>","webhook exec git pull not working when called from the browser","<p>i searched on the internet for hours to find a good solution but all the topics that allready exits dont help for me</p>

<p>i try to build a webhook to update my website by doing a git pull that is called afther a git hook when commits pushed to my live branche. But it isn't working when i try to call git pull by requesting my php script in the browser.</p>

<p>apache is running as www-data, all the rights a set up well. </p>

<p>the php script is running good when i try to run it as www data user with <code>su - www-data</code> and than <code>php webHook.php</code></p>

<p>but when i call it in the browser, i get no response. I guess apache is blocking </p>

<p>this is the command i use in the php script:</p>

<pre><code>echo shell_exec('cd /home/my-site/public_html &amp;&amp; git pull');
</code></pre>

<p>the result is empty and the git repository is not pulled at all. </p>

<p>but if i try this:</p>

<pre><code>echo shell_exec('cd /home/my-site/public_html &amp;&amp; git');
</code></pre>

<p>i got this result</p>

<blockquote>
  <p>usage: git [--version] [--exec-path[=]] [--html-path] [--man-path] [--info-path] [-p|--p..........</p>
</blockquote>

<p>so everything is working, except the git pull command.</p>

<p>the respository is saved on another server with atlassian stash. and i saved the password with <code>git config --global credential.helper ""cache --timeout=360000000""</code></p>
","3","3323107","",""
"68003405","14350674","2021-06-16 13:14:35","-1","107","<git><git-pull>","Firstly I commited new repo in git with master branch and now I cant commit","<p>Firstly I commited with master branch now I am in main branch and unable to change to master branch. Moreover if I tried to commit to my repo through main branch the following errors it shows:-</p>
<pre><code>$ git push --set-upstream https://github.com/manvith22/Evernote-clone.git main

To https://github.com/manvith22/Evernote-clone.git
 ! [rejected]        main -&gt; main (fetch first)
error: failed to push some refs to 'https://github.com/manvith22/Evernote-clone.git'
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.

abc@MA MINGW64 ~/react-redux-hooks (main)
    $ git pull &lt;remote&gt; master:dev
bash: remote: No such file or directory

abc@MA MINGW64 ~/react-redux-hooks (main)

    $ git pull &lt;main&gt; master:dev

bash: main: No such file or directory

abc@MA MINGW64 ~/react-redux-hooks (main)

    $ git pull &lt;evernote&gt; master:dev

There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details.

    git pull &lt;remote&gt; &lt;branch&gt;

If you wish to set tracking information for this branch you can do so with:

    git branch --set-upstream-to=&lt;remote&gt;/&lt;branch&gt; main
</code></pre>
","4","14350674","",""
"14601060","497180","2013-01-30 09:55:41","5","3744","<git><github><repository><git-pull><git-clone>","git clone vs git pull","<p>For my project I keep an online repository on <code>github</code> and local repositories on two computers (say A, B) where I write code and run tests and also on three other machines (say, C, D, E) where I just run tests.</p>

<p>Now, it happened a few times that there are conflicts whenever I want to just download updated code on C, D, E and doing just <code>git pull origin $someBranch</code> won't work, probably due to some small modifications that I did on the local source code just for testing purposes and which I don't want to keep.</p>

<p>What should I do in this case? Should I always do <code>git clone $URLofMyRepository</code> or are there less aggressive ways?</p>
","0","497180","0","0"
"32116917","1324134","2015-08-20 11:22:15","5","2774","<php><git><github><apache2><git-pull>","Executing git commands via php over http","<p>OS - Ubuntu 14.04</p>

<p>I am working on deployment using GIT webhooks for it.</p>

<p>I have added the deployment keys to git repo and now I want to trigger the <code>git pull origin master</code> command when a push happens from my local repo.</p>

<p>This is the <code>test.php</code> file I call via browser:</p>

<pre><code>&lt;?php       
    //echo ""THis is a test file on a test repo for testing the deploy functionality using github webhooks!!!!"";
    echo exec('whoami');
    echo exec('sh -x /var/www/proj/test/git.sh');
?&gt;
</code></pre>

<p>This is the <code>git.sh</code> shell file:</p>

<pre><code>#!/bin/bash
cd /var/www/proj-dir/test
git pull origin master
</code></pre>

<p>When I run this on terminal using  <code>php test.php</code> I get the correct result as expected:</p>

<pre><code> ubuntu From github.com:repo/test
 * branch            master     -&gt; FETCH_HEAD
 Already up-to-date.
</code></pre>

<p><code>ubuntu</code> for <code>whoami</code> followed by the <code>git pull</code> output.</p>

<p>Now here's the issue when I call the same <code>http://example.com/test.php</code> via the browser it shows the user or <code>whoami</code> output as <code>www-data</code>, which is apache user, but I tried updating the permissions of the php file to execute and changing the user to <code>www-data</code> but did not work.<br/>
checked the apache logs and when I execute through the browser I get a permission error</p>

<pre><code>  Please make sure you have the correct access rights and the repository exists. + cd /var/www/proj/deploy-test + git pull origin master 
</code></pre>

<p>Host key verification failed. fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists.</p>

<p><strong>What updates do I need to make so the file works via browser request?</strong></p>

<p>If I need to update the sudoers file what should be the updates?<br/></p>

<p><strong>Update</strong><br/>
I added the <code>.ssh</code> keys to the <code>var/www/</code> dir as that is the home for apache user. But I still get the </p>

<pre><code>git pull origin master
error: cannot open .git/FETCH_HEAD: Permission denied
</code></pre>

<p>Also I added a line for the www-data user to be able to execute the sh file.</p>

<pre><code> www-data ALL=(anthony) NOPASSWD: /var/www/mysite/vendor/tmd/auto-git-pull/scripts/git-pull.sh
</code></pre>

<p>Reference <a href=""https://github.com/antriver/auto-git-pull"" rel=""nofollow noreferrer"">here</a> Still no luck<br/>
Updated the permissions for .git folder to www-data user</p>

<p><code>sudo chown www-data:www-data /var/www/proj/test/.git
</code></p>
","9","1324134","0","0"
"32130198","5023269","2015-08-20 23:42:57","0","283","<git><git-pull>","How to git 're-'pull in server?","<p>I've just finished a function, add it and commit it in develop branch. When time came to add my work to server, I logged in with ssh, and i did : git pull origin ""wrong branch"". my web site took an old update, now i've re-pull with develop (which the correct branch) and nothing changes.</p>

<p>How can i fix it please ?</p>

<p>Here is the response I get :</p>

<pre><code>From 193.108.29.147:/var/git/repositories/my_website
* branch            develop    -&gt; FETCH_HEAD
Already up-to-date.
</code></pre>
","0","5023269","0","0"
"15080877","836390","2013-02-26 03:31:00","1","4253","<git><git-pull>","git pull with ""--work-tree"" flag fails","<p>I'm running (in a script - trying to avoid using cd):</p>

<pre><code>git --git-dir=/test/.git --work-tree=/test/ pull
</code></pre>

<p>And getting:</p>

<pre><code>fatal: /usr/lib/git-core/git-pull cannot be used without a working tree.
</code></pre>

<p>Note that I've run other commands with exactly this structure that have worked (in particular, add, commit, and pull), so I think it's just a pull problem.</p>

<p>A similar problem is documented here: <a href=""https://stackoverflow.com/questions/7851967/git-pull-fails-to-parse-syntax"">Git pull fails to parse syntax</a>, but it's not quite the same - they get a different error (and they're running on Windows, so who knows... I'm on Ubuntu).</p>
","2","836390","0","0"
"68597497","1420625","2021-07-30 22:01:19","0","276","<git><git-pull>","Is git pull from another directory possible?","<p>I've different repository and want to keep all of them up to date. A solution can be <code>cd folder; git pull origin master</code> for all repositories. What I'm looking for is a way to do the same but without <code>cd</code> each times.</p>
","1","1420625","",""
"15209075","2639206","2013-03-04 19:04:10","1","296","<git><git-merge><git-push><git-pull><github-api>","How to have clean git history","<p>Just before pushing the local changes to the remote repository, git always asks us to sync local branch with remote branch . For that to happen, I am doing git pull first,  then commit the pulled changes and finally then push.</p>

<p>Problem with this approach is, git merges the pulled in files with my existing changes and in the future when I try to figure out what I had done on that particular commit, there will be no clear distinction between what I did and what pull merged.</p>

<p>I would like to have a clean history, that is my commits always should have/show only those changes that I add but not that were merged due to pull. </p>

<p>One solution for this problem I can think of is have two local branches for the given remote branch. (1) for your changes, (2) for syncing up with the remote and when one needs to push , sync the (2) with the remote first and then merge (1) with (2) and then push from (2)</p>

<p>Any other suggestions on how to have a clean history?</p>
","0","2639206","",""
"15316601","712605","2013-03-09 22:23:10","434","103327","<git><git-pull>","In what cases could `git pull` be harmful?","<p>I have a colleague who claims that <code>git pull</code> is harmful, and gets upset whenever someone uses it.</p>

<p>The <code>git pull</code> command seems to be the canonical way to update your local repository.  Does using <code>git pull</code> create problems? What problems does it create? Is there a better way to update a git repository?</p>
","9","712605","0","0"
"16846096","831905","2013-05-30 21:22:41","0","992","<python><git><cron><git-pull>","crontab automated git pull","<p>I have a server deployed. I am writing a crontab task. It uses a python script that need to check if there is new push into the repository. If it finds a new push, it will pull and update the server code and should restart the server. </p>

<p>My problem is how to make the python script know if there is new commit into the repository?</p>

<p>I know you can use </p>

<pre><code>git rev-list deployment..origin/deployment 
</code></pre>

<p>to check if there is any commit is available on the remote server.</p>

<p>But how to implement in the python script and make it decide to know that it need to pull?</p>

<p>Thanks
Nick</p>
","3","831905","",""
"33512199","5457974","2015-11-04 01:29:10","1","590","<git><git-pull><git-fetch>","What is a very descriptive and easy to understand description between git fetch and git pull? When is it better to git fetch vs git pull?","<p>I am somewhat new to git any advice would be appreciated. Even a link to learn a more in depth free video/course practice could be useful to me here. </p>
","1","5457974","",""
"33514282","5256636","2015-11-04 05:23:31","-1","375","<git><bitbucket><git-pull><pull><pull-request>","What happens when I do git pull origin master with ""--rebase""","<p>Let's come to my problem .</p>

<p>what is the different between this 2 command , i am confused about that .</p>

<pre><code>1. git pull origin master
2. git pull --rebase origin master
</code></pre>

<p>here what is the job of ""--rebase"" .
Please let me clear !</p>

<p>Pull everything from the remote master in the local develop and merge it? Pull everything in the local master branch and merge it?</p>
","0","5256636","",""
"35714287","116","2016-03-01 03:49:17","12","1619","<git><version-control><git-pull><pull-request>","Does ""pure git"" have the concept of a pull request?","<p>Of course, there's <code>git pull</code>, but is there a formalized method (i.e. not an ad hoc method such as sending an email) of making a pull request in ""pure"" git?</p>
","0","116","0","0"
"53327922","10320794","2018-11-15 21:08:36","-1","35","<git><git-merge><git-pull>","In git, how can I get a file from the server, after I merged two branches on production, into my local branch?","<p>I did a merge of branch A and branch B on the production server(Branch B was merged into branch A). Now there are files that are in branch A that came from branch B as expected. Unfortunately, locally when in Branch A, those files that came from branch B are missing. However, they are in Branch A on the server. How can I pull those files?</p>
","0","10320794","",""
"70089235","6010664","2021-11-23 23:55:09","0","36","<git><git-pull>","How to download updates made before a time point from remote server by git","<p>Git remote server may have many updates for a repo, if I just want to download the updates for this repo, which were made before a time point, what git command should I use?</p>
","0","6010664","",""
"53399433","","2018-11-20 18:38:47","0","203","<git><git-pull><codeship>","Why is my build hanging in #codeship pro at a `git pull` step?","<p>Why is my build hanging in #codeship pro at a <code>git pull</code> step after "" Warning: Permanently added the RSA host key for IP address 'xxx.xxx.xxx.xxx' to the list of known hosts.""?</p>

<p>I followed instructions in <a href=""https://documentation.codeship.com/pro/builds-and-configuration/cloning-repos/#the-ssh-key-option"" rel=""nofollow noreferrer"">https://documentation.codeship.com/pro/builds-and-configuration/cloning-repos/#the-ssh-key-option</a> and this adds Bitbucket into known hosts list and adds the SSH key into the container/service during build time, but, I am not able to do any <code>git</code> related operation where I need to connect to Bitbucket.</p>

<p>I captured network packets during this operation by running that step in <code>jet run</code> and I see that after sending 3 encrypted packets, Bitbucket stops sending data and the connection times out<a href=""https://i.stack.imgur.com/d9NGm.png"" rel=""nofollow noreferrer"">3 packets referred to above</a></p>

<p>Did someone get this issue?</p>
","0","","",""
"53456389","8304052","2018-11-24 08:13:48","-1","418","<git><intellij-idea><git-pull>","I'm using ij idea .What can I do to avoid the git pull operation failed?","<p>the information it shows is something like </p>

<pre><code>your local files will be override.......
</code></pre>

<p>Is something wrong with the gitignore file?<br>
What can I do to eliminate it absolutely? Thanks a lot!</p>
","6","8304052","",""
"71300846","13668157","2022-02-28 20:44:08","0","721","<git><github-actions><git-pull><github-actions-self-hosted-runners>","Using git pull within run in github actions main.yml","<p>I am trying to update a local server running some non-production versions of some of my company's sites to update whenever the main repository merges a pull request. However, the action stalls out when the action hits the <code>git pul ...</code> line. The logs do not provide any information, the process seemingly halts. I can run the same commands in the command prompt. Any advice is appreciated.</p>
<p>main.yml</p>
<pre class=""lang-yaml prettyprint-override""><code>name: CI
    
    on:
       
      push:
        branches: [ master ]
    
       
      workflow_dispatch:
    
     
    jobs:
       
      deployment:
         
        runs-on: self-hosted
    
         
        steps:
           
          - uses: actions/checkout@v2
    
           
          - name: Test
            shell: cmd
            run: actions.cmd
</code></pre>
<p>actions.cmd</p>
<pre><code>cd path\to\stuff
git pull remoteName master
</code></pre>
<p>Update, ran into some weird caching issues but was able to clean up a little and got some error messages:</p>
<pre><code>nothing to commit, working tree clean
fatal: 'github' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
success
Error: Process completed with exit code 1.
</code></pre>
<p>github is the name of the remote. Again, I can run these scripts normally, but maybe the workflow needs some additional authentication?</p>
","3","13668157","",""
"71302003","6837445","2022-02-28 23:04:53","3","10454","<git><git-merge><git-pull><git-config>","What is/was the default git divergent merge strategy?","<p>I recently started using a new machine and noticed this error hint when attempting to push to a branch after I resolved something online earlier on GitHub and forgot to pull.</p>
<p>So I pulled, and usually when I do this, I would get a list of the files that had changes and need to resolve them, add them, and then push.</p>
<p>However something different happened today when encountering this. I got this message:</p>
<pre class=""lang-none prettyprint-override""><code>hint: You have divergent branches and need to specify how to reconcile them.
hint: You can do so by running one of the following commands sometime before
hint: your next pull:
hint:
hint:   git config pull.rebase false  # merge
hint:   git config pull.rebase true   # rebase
hint:   git config pull.ff only       # fast-forward only
hint:
hint: You can replace &quot;git config&quot; with &quot;git config --global&quot; to set a default
hint: preference for all repositories. You can also pass --rebase, --no-rebase,
hint: or --ff-only on the command line to override the configured default per
hint: invocation.

fatal: Need to specify how to reconcile divergent branches.
</code></pre>
<p>Whenever setting up a new machine, I've never seen this before. I'm using the same <code>.gitconfig</code> on two other machines where I haven't seen this message:</p>
<pre class=""lang-ini prettyprint-override""><code>[user]
  name = my name
  email = my email 

[format]
  numbered = auto

[color]
  branch = yes
  diff   = auto
  pager  = yes
  status = auto
</code></pre>
<p>I've done this many times and I suddenly have amnesia. I do not recall this hint/error from Git ever (6 years). Is this new? Maybe I can look at history of Git's source? If not, what's the default?</p>
","1","6837445","0","0"
"71432996","18434669","2022-03-11 02:27:25","1","1563","<git><repository><bitbucket><git-push><git-pull>","Constantly getting git error ""port 22: Network is unreachable"" with no clear cause","<p>I'm using Fork as a git client. Recently, whenever I try to push/pull/fetch from a remote repository I get this error:</p>
<blockquote>
<p>Pushing to bitbucket.org:(repository)
ssh: connect to host bitbucket.org port 22: Network is unreachable
fatal: Could not read from remote repository.
Please make sure you have the correct access rights
and the repository exists.</p>
</blockquote>
<p>I first tried making a new ssh key and that seemed to fix the problem, but then it started up again. I then tried turning off my firewall/antivirus which also only worked for a day or two before I got the error once more. My internet connection is stable and I definitely have access to the remote repository I'm trying to connect to. I haven't tested it with any other repositories because this is the only one I actively need to use.</p>
<p>At this point, I have no idea what the problem could possibly be because it seems almost random when it does or doesn't work. Just now I attempted to push 3 times and I kept getting the error, and then suddenly it worked. Any help would be greatly appreciated, this is really starting to interfere with my team's workflow.</p>
","1","18434669","0","0"
"71491371","18478510","2022-03-16 03:05:33","-1","140","<git><github><git-commit><git-push><git-pull>","Basic question on practice of git pull before git push","<p>On a high level, I understand that it's a good practice to git pull(and manually merge conflicts if any) before git-push. I am working in an enterprise setting. My questions are:</p>
<p>(1) Can I do git-push without first git-pull?. Is it not allowed at all or github can be configured (by admin) to behave in a certain way -- say to crib during push that pull was not done or to not crib at all..</p>
<p>(2) Following up on (1) question, say I did do git pull first, but then I didn't really merge anything gracefully and just overwrote in local files and then try to git push, will this go through?. I mean for namesake/record, I did git-pull, though I didn't honor it...what prevents a user from doing this (if at all).</p>
<p>(3) Is there a way to configure a branch so that pushes to the branch only happen thru pull request and not directly (say from command line etc). Is there a notion of something like branch owner who can configure whether to allow direct push or not?.</p>
<p>(4) I understand that some of this could be tried by running some experiments, but that would only give me some idea on my current setup. I want to understand what is the standard behavior and what all can be customized...</p>
","0","18478510","",""
"71627490","10943603","2022-03-26 11:05:02","0","2050","<git><git-merge><git-pull><pull>","Resolving git pull merge conflicts","<p>Is it correct that for git pull (and thus git merge by extension) to throw merge conflicts, the local and remote repositories have to be out of sync ? Basically, is it necessary for these 2 conditions to be met in order to get a merge conflict -</p>
<ul>
<li>There must be at least one commit made locally that hasn't been pushed to remote.</li>
<li>There must be at least one commit made on remote (that hasn't been pulled yet) that involves the changing the same line of code as one of the commits made locally (that hasn't been pushed yet).</li>
</ul>
","0","10943603","",""
"71786221","18487559","2022-04-07 17:00:38","0","130","<git><git-pull>","what does -X option do with git pull?","<pre><code>git pull origin -X theirs branch_name
</code></pre>
<p>What does <code>-X theirs</code> do in this git pull command? Does it cause the specified branch to be merged into the current branch?</p>
","0","18487559","",""
"71811108","3220554","2022-04-09 19:11:29","1","51","<git><git-push><git-pull>","Why does the ""From"" line in a ""git pull"" response not list the bare repo's name?","<p>I'm rather new to git, and I'm trying to understand the lines</p>
<pre><code>...
From /tvm
   f8322345..9837f82f  master     -&gt; origin/master
...
</code></pre>
<p>in git's response to a <code>git pull</code> with branch <code>dev</code> checked out.</p>
<p>I've got a git bare repo, and two repos that push/pull to that bar repo; all on a single server.  The configuration is as follows:</p>
<pre><code>/
|
+-- tvm.git           The bare repo
|
+-- htdocs
      |
      +-- dev         The development repo. Has both master and dev branches
      |
      +-- website     The production repo. A clone of the master branch.
</code></pre>
<p>This setup is used to manage a Joomla based web site. The database changes as people are writing new articles, etc., so the master branch in the production repo changes with this.</p>
<p>I need to merge the master branch into the dev branch in the development repo to bring dev up to date. While in <code>/htdocs/website</code> (which always has branch <code>master</code> checked out), I first unload the DB, then <code>git commit</code>, and <code>git push</code>. Git's response is (some lines deleted for brevity):</p>
<pre><code>Enumerating objects: 5, done.
...
Total 3 (delta 2), reused 0 (delta 0), pack-reused 0
To /tvm.git
   5f08eef0..9837f82f  master -&gt; master
</code></pre>
<p>I understand the last two lines to mean: Git has pushed the changes to the bare repo (<code>To /tvm.git</code>) and this was branch <code>master</code> to <code>master</code>.</p>
<p>Next, I change to the devlopment directory, which has branch <code>dev</code> checked out.</p>
<pre><code>/htdocs/website $ cd ../dev/
/htdocs/dev $ git status
On branch dev
Your branch is up to date with 'origin/dev'.

nothing to commit, working tree clean
</code></pre>
<p>Just to be sure, I pull from the bare with <code>git pull</code>. The response is (again some lines deleted):</p>
<pre><code>remote: Enumerating objects: 17, done.
...
Unpacking objects: 100% (13/13), 32.46 KiB | 21.00 KiB/s, done.
From /tvm
   f8322345..9837f82f  master     -&gt; origin/master
Already up to date.
</code></pre>
<p>I don't understand, firstly, why does git tell me <code>From /tvm</code> and not <code>From /tvm.git</code>? Is this just inconsistency? Secondly, why is git writing <code>master -&gt; origin/master</code>? Why <code>master</code> and not <code>dev</code>? And thirdly, why is git writing <code>Already up to date.</code>? The master branch is <em>not</em> up to date; I had just commited and pushed changes to the master branch in the bare repo.</p>
<p>The git config files contain ...</p>
<ul>
<li>In the development repo:</li>
</ul>
<pre><code>[core]
        repositoryformatversion = 0
        filemode = true
        bare = false
        logallrefupdates = true
[remote &quot;origin&quot;]
        url = /tvm.git
        fetch = +refs/heads/*:refs/remotes/origin/*
[branch &quot;master&quot;]
        remote = origin
        merge = refs/heads/master
[branch &quot;dev&quot;]
        remote = origin
        merge = refs/heads/dev
</code></pre>
<ul>
<li>In the production repo:</li>
</ul>
<pre><code>[core]
        repositoryformatversion = 0
        filemode = true
        bare = false
        logallrefupdates = true
[remote &quot;origin&quot;]
        url = /tvm.git
        fetch = +refs/heads/*:refs/remotes/origin/*
[branch &quot;master&quot;]
        remote = origin
        merge = refs/heads/master
</code></pre>
<ul>
<li>In the bare repo_:</li>
</ul>
<pre><code>[core]
        repositoryformatversion = 0
        filemode = true
        bare = true
</code></pre>
","0","3220554","",""
"71833491","4876257","2022-04-11 19:44:35","2","63","<git><git-pull><git-stash><git-merge-conflict>","simple example to demonstrate a git principal with stash and pull","<p>Say I have <code>one.txt</code> and <code>two.txt</code> in a remote repo and I've been doing some work locally and haven't staged them. Then I find out another team member made some necessary changes to those two files and pushed them to the remote repo. I need his changes, so I go <code>git stash</code>, <code>git pull</code>, <code>git stash pop</code>.</p>
<p>But I get 2 merge conflicts when I did the <code>stash pop</code>. one.txt was auto merged and two.txt had to be done manually. For the manual one, I said &quot;take both&quot; in one area, and the other I kept mine). Then I staged the result of the merge via <code>git add</code>.</p>
<p><code>git status</code> now shows both files are ready to be committed.</p>
<p>Will I have a problem pushing? In other words, does the checking in of a merge (in the context of the stash/pull/pop) have to match what the co-worker pushed? Also, am I supposed to do something with the stash after/when there's a conflict?</p>
<p>I'm trying to avoid a merge conflict when I push to the remote repo, so I'm worried about getting into a weird state.</p>
","1","4876257","",""
"71966344","1787154","2022-04-22 09:18:54","0","107","<git><heroku><git-clone><git-pull>","pull from heroku gets empty git but there's an online site","<p>Trying to retrieve old code for updating...</p>
<pre><code>heroku git:clone -a appname 
</code></pre>
<p>creates empty dir...</p>
<hr />
<p>So:</p>
<pre><code>$ git clone https://git.heroku.com/appname.git
Cloning into 'appname'...
warning: You appear to have cloned an empty repository.

$ git remote -v
heroku  https://git.heroku.com/appname.git (fetch)
heroku  https://git.heroku.com/appname.git (push)

$  git pull https://git.heroku.com/appname.git heroku
fatal: couldn't find remote ref heroku

git pull https://git.heroku.com/appname.git
fatal: couldn't find remote ref HEAD
</code></pre>
<p>login via heroku bash and &quot;ls -la&quot; i can check there is no .git folder in my app but it works online and i should have pushed it tru heroku cli as theres no other way ( i dont use public github).</p>
<p>It's a django app.</p>
<p>Also tried without understanding well an answer i found:</p>
<pre><code>git fetch -vv --all
Fetching heroku
Fetching here
fatal: couldn't find remote ref refs/heads/heroku
error: could not fetch here

git reset --hard HEAD
</code></pre>
<p>which just resets a commit i had locally without fetching remote git</p>
<pre><code> git remote set-head heroku -a
error: Cannot determine remote HEAD
</code></pre>
<p>remote update silent goes on</p>
<pre><code>$ git remote update
Fetching heroku
$
</code></pre>
<hr />
<p>*App was in maintenance mode, which shouldnt affect but tried by enabling it and do everything again</p>
<hr />
<p>edit: i'm diving into this which might or not have been the case
<a href=""https://help.heroku.com/XOBUHLKQ/why-do-i-see-a-message-you-appear-to-have-cloned-an-empty-repository-when-using-heroku-git-clone"" rel=""nofollow noreferrer"">heroku help for cloned empty link</a></p>
<pre><code>heroku git:remote -a appname
</code></pre>
<p>it does set remote but i don't have the correct name of the app template used in case it was tru button deploy, which i don't know, but i doubt was the case.
So it's not the same case as <a href=""https://stackoverflow.com/questions/71958592/heroku-cloned-an-empty-repository-message-for-a-repository-that-isnt-empty"">Heroku &quot;cloned an empty repository&quot; message for a repository that isn&#39;t empty</a></p>
<p>**edit2: this solution by heroku just retrieves the original template, but not the changes that you would have developed further from it</p>
<hr />
<p>It probably could only be resolved with the heroku support which im waiting answer.</p>
<p>Or with this hack to retrieve the files <a href=""https://code-examples.net/es/q/1478abd"" rel=""nofollow noreferrer"">https://code-examples.net/es/q/1478abd</a></p>
","6","1787154","",""
"54033842","4623602","2019-01-04 06:10:58","16","11280","<git><github><git-pull>","How to pull a pull request from upstream in github","<p>I have forked a repo in github. There are some new pull requests in the <code>Upstream</code>. I want to pull a pull request from upstream locally. </p>

<p>How can I do that? I have no idea and found nothing related to this. </p>
","2","4623602","0","0"
"72031183","4876257","2022-04-27 15:12:28","0","1267","<git><git-pull><git-stash>","git stash pop merge conflict resolution and reason","<p>I've recently been using <code>git stash</code> <code>git pull</code> and <code>git stash</code> pop as my work flow when I need to sync up to what other devs are doing but save what I'm working on and then continue working. I recently did a git pull to get everything new and it worked with no problem, I was caught up. A few hours later I did stash/pull/pop and and got a merge conflict when doing the <code>pop</code>. I saw that the conflicts were between code I recognized I had written a long time ago and what I was trying to currently pull from just a couple hours in between the clean pull and this one.</p>
<p>Could this be because I didn't clear my stash after I resolved a merge conflict from the past, therefore any subsequent pop + conflict tries to use the most recent stash where a conflict also occurred?</p>
<p>I guess what I'm saying is, if you get a conflict and resolve it after popping your stash, do you need to manually remove that stash to avoid this next time you pop with conflict? I thought stash pop was supposed to remove the stash, but I take it it doesn't if there's a conflict... so it needs to be done manually to avoid the unexpected situation where it was trying to get me to resolve conflicts between the recent pull I did and code that was done and pushed weeks ago?</p>
<p>Just trying to figure this out and avoid it.</p>
","0","4876257","",""
"54235453","1897528","2019-01-17 11:58:11","14","13349","<git><github><branch><git-pull>","error: cannot update the ref <branch>: unable to append to <git location>: Not a directory","<p>My issue is not <a href=""https://stackoverflow.com/questions/2642836/git-error-unable-to-append-to-git-logs-refs-remotes-origin-master-permission"">this issue.</a> </p>

<p>On pull, I am getting the following error-</p>

<blockquote>
  <p>error: cannot update the ref
  'refs/remotes/origin/features/name/surname’: unable to append to
  '.git/logs/refs/remotes/origin/features/name/surname': Not a directory</p>
</blockquote>

<p>Adding user permissions did not cut any ice.</p>

<p><strong><em>Solution</em></strong>-
Then simply deleting the branch from GitHub resolved the issue.</p>

<p>Interestingly this branch has a different directory structure than other branches. </p>

<p>While other branches look like-</p>

<pre><code>refs/remotes/origin/features/name
</code></pre>

<p>This one looks like-</p>

<pre><code>refs/remotes/origin/features/name/surname
</code></pre>
","2","1897528","",""
"54483830","661740","2019-02-01 16:52:03","0","201","<git><ssh><repository><git-pull><git-clone>","How to set up an ssh key for read-only git access","<p>I've looked <a href=""https://stackoverflow.com/questions/9620584/how-can-i-set-read-only-access-to-ssh-git-server"">here</a>, and the accepted answer rejects setting up what I want.</p>

<p>My company has set up a git server.  I have a private ssh key on my personal computer from which I can access that server, read from git, and write changes to git.</p>

<p>I also need read access to git from a server where other people have root access.  I'm not willing to put my private git ssh key with read-write access on a server where other people can read it.  As a consequence, I end up having to connect with https, and type in my user name and password every time I want to download from git.  This is sub-optimal.</p>

<p>Is there a way that I can add a key to git that has my credentials, but only read access?  If not, can I at least set up git on my server account so that it knows my user name, and I only have to type in my password?</p>
","3","661740","",""
"54497381","3716664","2019-02-02 20:49:17","6","1247","<git><git-merge><git-submodules><git-pull>","Merge submodule changes after git pull on parent repository","<p><em>How to fetch&amp;merge main repository and do the same for all submodules using <strong>single</strong> command?</em></p>

<p>I have a repository <em>A</em> which includes submodule <em>B</em>.
Submodule <em>B</em> is often updated and changes are not always up to date.</p>

<p>I can update and merge new changes by doing following</p>

<pre><code>cd A/B    &lt;-- enter submodule directory
git pull  &lt;-- run pull to fetch and !!merge!! submodule changes
</code></pre>

<p>What I want to do is to run single command to pull&amp;merge main repository and do the same with all submodules.</p>

<pre><code>cd A                           &lt;-- Now enter to parent directory
git pull --recurse-submodules  &lt;-- Fetch&amp;merge changes on main repository
                               &lt;-- and pull changes on all submodules 
</code></pre>

<p>What actually happens is:</p>

<ol>
<li>Changes on repository <em>A</em> are fetched and merged => <strong>OK</strong></li>
<li>Changes on submodule repository <em>B</em> are only fetched and not merged => <strong>NOK</strong></li>
</ol>

<p>Current solution is:</p>

<pre><code>cd A
git pull --recurse-submodules
cd B
git merge   &lt;-- Now merge fetched changes from submodule remote
</code></pre>

<p>or:</p>

<pre><code>cd A
git pull --recurse-submodules
git submodule foreach git merge origin master
</code></pre>

<p>Other questions I checked, without luck:</p>

<p><a href=""https://stackoverflow.com/questions/1030169/easy-way-to-pull-latest-of-all-git-submodules"">Easy way to pull latest of all git submodules</a></p>

<p><a href=""https://stackoverflow.com/questions/3497123/run-git-pull-over-all-subdirectories?noredirect=1&amp;lq=1"">Run git pull over all subdirectories</a></p>

<p>Running <code>git --help pull</code> on git version <code>2.20.1</code> I see this message:</p>

<blockquote>
  <p>BUGS Using --recurse-submodules can only fetch new commits in already checked out submodules right now. When e.g. upstream added a new submodule in the just fetched commits of the superproject the submodule itself can not be fetched, making it impossible to check out that submodule later without having to do a fetch again. This is expected to be fixed in a future Git version.</p>
</blockquote>

<p><em>Is this related to the issue?</em></p>
","0","3716664","0","0"
"56570784","8825683","2019-06-12 21:46:12","3","1752","<git><merge><git-merge><git-rebase><git-pull>","Is git pull --rebase the same as git pull when no work is done on the local master branch?","<p>I understand that the difference between <code>git rebase</code> and <code>git merge</code> is that <code>git rebase</code> moves the beginning of a branch to the tip of another branch, where as <code>git merge</code> creates a new commit that represents (i.e. includes or integrates) branched commits from another branch. So for example:</p>

<p>Since <code>git pull</code> is equivalent to <code>git fetch</code> + <code>git merge</code>, and <code>git pull --rebase</code> is equivalent to <code>git fetch</code> + <code>git rebase</code>, let's say you have a local master branch and a remote master branch:</p>

<pre><code>- o - o - o - H - A - B - C (master)
               \
                P - Q - R (origin/master)
</code></pre>

<p>HEAD is at C</p>

<p>If you <code>git pull</code> you end up with this:</p>

<pre><code>- o - o - o - H - A - B - C - X (master)
               \             /
                P - Q - R --- (origin/master)
</code></pre>

<p>HEAD will now be at X which is commit R of the remote repository's commit history because the merge commit (X) represents (i.e. includes or integrates) the remote branch's commit history that was merged</p>

<p>If on the other hand you did <code>git pull --rebase</code>, you would end up with this:</p>

<pre><code>- o - o - o - H - P - Q - R - A' - B' - C' (master)
                          |
                          (origin/master)
</code></pre>

<p>As you can see <code>git pull</code> is not the same as <code>git pull --rebase</code> because <code>git pull --rebase</code> gives HEAD at C' which is commit C of the local master branch, where as when <code>git pull</code> was used HEAD was at R. In other words, contents of the commit history via <code>git pull</code> are the same as the contents of the commit history from <code>git pull --rebase</code>, but the order of commits in the commit histories is different </p>

<p>But what happens when you are pulling from a remote branch when no work has been done on the local master branch:</p>

<p>local master branch and a remote master branch:</p>

<pre><code>- o - o - o - H (master)
               \
                P - Q - R (origin/master)
</code></pre>

<p>HEAD is at H</p>

<p>If you <code>git pull</code> you end up with this:</p>

<pre><code>- o - o - o - H - X (master)
               \             \
                P - Q - R --- (origin/master)
</code></pre>

<p>HEAD will now be at X which is commit R of the repo because the merge commit represents the remote branch that was merged</p>

<p>If on the other hand you did <code>git pull --rebase</code>, would you end up with this?:</p>

<pre><code>- o - o - o - H - P - Q - R (master)
                          |
                          (origin/master)
</code></pre>

<p>Meaning that HEAD is at R which means that <code>git pull --rebase</code> is the same as <code>git pull</code> when no work is done on the local branch</p>
","2","8825683","0","0"
"73337872","19752520","2022-08-12 17:33:54","-1","38","<git><repository><commit><git-push><git-pull>","How do I pull my colleague's work (repository) from git hub to VScode using Python?","<p>Git beginner here. Please help me to get my colleague's repository form GitHub to my VScode. In his absence I need to run API tests. Thank you for your help.</p>
","2","19752520","",""
"73356629","1914833","2022-08-15 03:22:54","0","36","<git><version-control><git-commit><git-pull>","Why would a local git repo be more ahead of remote after a pull than before?","<p>The local master is on Centos and being used from the command line.</p>
<p>The remote master is on GitHub. There's only ever one remote and I've checked it's the correct one.</p>
<p>If I do <code>git status</code> and see this:</p>
<pre><code>Your branch is ahead of 'origin/master' by 3 commits.
</code></pre>
<p>then do a <code>git fetch</code> and a <code>git pull</code> (and see some changes being downloaded and merged without any problems), why would I see this afterwards?</p>
<pre><code>git status
Your branch is ahead of 'origin/master' by 4 commits.
</code></pre>
<p>How is it possible that the local branch is ahead by <em>more</em> commits following a pull, after no activity in the local repo?</p>
<p>When I do <code>git log master ^origin/master</code> I see a list of commits. This command should show which commits are in local but aren't in remote. But if I pick a commit ID from the list, I can find it in Github.</p>
<p>I'd really be interested in an explanation for this.</p>
","6","1914833","",""
"56635648","979325","2019-06-17 16:47:52","0","71","<git><git-pull><git-tag><git-fetch>","git does't retrieve remote tags with pull but it does with fetch","<p>I'm using a git repository with many remote tags.</p>

<p>In another PC, if I use this command:</p>

<pre><code>git pull origin develop
</code></pre>

<p>I don't have new remote tags created by another station, but if I use following command:</p>

<pre><code>git fetch origin
</code></pre>

<p>I download also tags. Tags are created in <code>develop</code> branch, and, as far as I know, <code>git pull</code> is a shortcut for <code>git fetch</code> and <code>git merge</code>.</p>

<p>If I clone the repository in a new folder I can retrieve all tags instead.</p>

<p>So why I can't download new tags from remote repository and how can I fix it?</p>

<p>I'm using git 2.21 on windows 10 64 bit, with git bash.</p>
","3","979325","",""
"73407886","19487362","2022-08-18 18:30:46","0","35","<git><git-pull><git-bare>","Pulling from a bare git --repo that's configured to push to server","<p>first question here (yay me).</p>
<p>I just started my first job as a Developer a couple months ago, and have recently set up my (very small) company on VCS. We're not using GitHub, but rather pushing local commits to a bare repo, and then that repo has a post-receive hook that deploys the code on the server. This is working well for me individually, and I'm also able to clone the bare repo in order to set up new users with the codebase.</p>
<p>My questions are about pulling to update our individual local repos with what's on the server. It's similar to the question <a href=""https://stackoverflow.com/questions/6852388/git-pull-files-from-a-bare-repo"">here</a>, but I'm not sure how to format the SOURCE mentioned there given that our repo isn't on GitHub, and haven't had any luck searching elsewhere. I've tried pulling from my local repo when I know there are minor difference, but after the pull my files don't reflect the live code, yet I still get the message &quot;already up to date.&quot;</p>
<p>Once we're able to pull, I'm curious how differences will be merged. For instance, let's save dev1 and dev2 have the same, current version of the live code from the server. Then dev1 starts working on something that spans several days. During that time, dev2 makes some small changes and pushes them live. What happens if some of dev2's tweaks happen to be working with the same lines/files that dev1 is working on, and dev1 on tries to pull before he's finished all of his changes?</p>
<p>Through all of my searching on Google and such I've seen plenty of things saying that the bare repo makes all of this stuff easier etc., but I've not found anything explaining exactly why that is.</p>
<p>Thank you all in advance!</p>
","6","19487362","",""
"56652255","10363906","2019-06-18 15:15:05","0","428","<git><git-pull><git-rm>","Keep deleted files on git pull","<p>In the couple of the commits I need to pull there are a couple of deletions. Those files belong to some basic project files that shouldn't be present in git repository (that was our mistake in the first place, yeah). 
So I am afraid that the deletion of that files might cause some malfunctioning and I don't want to spend time fixing it.</p>

<p>I am looking for something like</p>

<pre><code>git rm --cached
</code></pre>

<p>That deletes file from the remote repo but leaves in local</p>

<p>And I need something like </p>

<pre><code>    git pull --cached
</code></pre>

<p>that won't delete local files but will remove them from tracked files</p>
","4","10363906","",""
"55770050","1764881","2019-04-20 03:43:12","2","117","<git><git-rebase><git-pull><git-reflog><reflog>","Why git commit can be lost in this case?","<p>My colleague did a series of careless pull/push operations. He end up in a situation where his local commit becomes missing</p>

<p>I recovered his commit using <code>git reflog</code>. But I couldn't figure out why his operations lead to the situation. Can someone shed some lights?</p>

<p>See <code>git reflog</code> output and comments below:</p>

<pre><code>#######
# reflog is in reverse manner, most recent operation first
# test is like our ""develop"" branch, MTX-65 is the feature branch
# Both are remote-tracking
#######
39261b7 (HEAD -&gt; MTX-65, origin/feature/MTX-65) HEAD@{0}: checkout: moving from test to MTX-65
7f66c72 (test) HEAD@{1}: checkout: moving from MTX-65 to test
39261b7 (HEAD -&gt; MTX-65, origin/feature/MTX-65) HEAD@{2}: pull: Fast-forward
d51c1be HEAD@{3}: rebase finished: returning to refs/heads/MTX-65
d51c1be HEAD@{4}: rebase: Add Notification
c33d31f HEAD@{5}: pull --tags -r origin feature/MTX-65: checkout c33d31f4d0109396dea6d6bb78f47ba56097e4ac

#######
# This is the key commit that got lost
# It's not in `git log` out any more
#######
a6a7a7e HEAD@{6}: commit (merge): Warning message
3c8113c HEAD@{7}: commit (amend): Add Notification
7f551e4 HEAD@{8}: commit: Add Notification
96bcf99 HEAD@{9}: pull --tags -r origin feature/MTX-65: Fast-forward
b79bee0 HEAD@{10}: commit: personal &amp; institution page
3cfb1aa HEAD@{11}: commit: Institution：
7f66c72 (test) HEAD@{12}: checkout: moving from test to MTX-65
7f66c72 (test) HEAD@{13}: merge MTX-65: Fast-forward
0733fd2 HEAD@{14}: checkout: moving from MTX-65 to test
7f66c72 (test) HEAD@{15}: commit (merge): Merge test
ebfaeea HEAD@{16}: checkout: moving from test to MTX-65
0733fd2 HEAD@{17}: pull: Fast-forward
1043c35 HEAD@{18}: checkout: moving from MTX-65 to test

#######
# This is a commit that still exists after the disaster
#######
ebfaeea HEAD@{19}: commit: institution 认证信息
</code></pre>
","2","1764881","0","0"
"55777424","1147600","2019-04-20 20:21:49","0","242","<git><github><git-merge><git-pull><git-fetch>","Why does git not fetch the pull request I merged in GitHub?","<p>I'm having some git trouble. My setup is as follows:</p>

<p>[workstation repo] -origin-> [network drive bare repo] -origin-> [GitHub]</p>

<p>I just accepted my first pull request on GitHub (<a href=""https://github.com/Captain-Chaos/WorldPainter/pull/100"" rel=""nofollow noreferrer"">this one</a>) and merged it to master. Now I want to pull it to my workstation. So I do <code>git fetch</code> on the network drive, and then <code>git pull</code> on my workstation, but on my workstation git says 'Already up-to-date' and refuses to merge the change (I checked, it's not in my workspace).</p>

<p>The output of <code>git branch -vv</code> on the network drive includes the line:</p>

<pre><code>* master                    0fe40e2 [origin/master: behind 2] Some small code improvements
</code></pre>

<p>The output of <code>git branch -vv</code> on the workstation repo includes the line:</p>

<pre><code>* master         0fe40e2 [origin/master] Some small code improvements
</code></pre>

<p>The actual commit they should be pointing to is <a href=""https://github.com/Captain-Chaos/WorldPainter/commit/338864196d59b86d3b42c4fffc88f56aecb75433"" rel=""nofollow noreferrer"">3388641</a>. It looks like in the bare repo on the network drive the master branch is somehow behind origin/master. I have no idea how this situation arose, or how to fix it. I can't use <code>git pull</code> or <code>git reset</code> since it is a bare repo.</p>

<p>Does anyone know how I can determine what the problem is and how to fix it?</p>
","0","1147600","",""
"55917556","9806050","2019-04-30 09:10:06","0","123","<github><git-pull>","Regarding push the code changes from FTP to git repo","<p>I have some of the queries in pushing the code changes from Server(FTP) to Github repo:</p>

<ol>
<li>I have made some of the code changes in a file on Server(FTP)</li>
<li>After changing the file, I want to push the changes to Github repo(we have cloned the server files on the corresponding repo)</li>
<li>But I don't know how to push the changes to repo from server</li>
</ol>

<p>Could anyone please help me with this?</p>
","0","9806050","",""
"56117825","875044","2019-05-13 18:16:48","1","72","<git><git-branch><git-push><git-pull>","Separate tracking branches (not remote) for git pull and push","<p>There are <a href=""https://stackoverflow.com/a/2917001"">answers</a> about different remotes for push and pull, but is it possible to have different tracking branches for pull and push, from same remote, or even from different remotes?</p>

<p>In my workflow, it's often to pull from master branch of upstream, and then push to another personal branch of upstream, or some branch of another personal remote.</p>
","0","875044","",""
"56159981","857428","2019-05-16 02:30:37","5","5154","<git><rebase><git-pull>","git pull --rebase: passing --rebase-merges","<p>This is what I normally do when rebasing my current branch whilst keeping my local branching from getting flattened:</p>

<pre><code>git fetch origin
git rebase -r origin/develop
</code></pre>

<p><code>-r</code> is <code>--rebase-merges</code>, which I prefer over <code>--preserve-merges</code></p>

<p>My question is: is there a way to pass this when doing <code>git pull --rebase</code> ?</p>

<p>Eg - I'd like to run the equivalent of the command above like so:</p>

<p><code>git pull --rebase=rebasemerges origin develop</code></p>

<p>instead of:</p>

<p><code>git pull --rebase=preserve origin develop</code></p>

<p>**edit: OK - looks like in 2.22, <code>--preserve-merges</code> is getting deprecated in favour of <code>--rebase-merges</code>. This is for <code>git rebase</code> though - fingers crossed the changes gets carried over to <code>git pull --rebase</code></p>
","1","857428","0","0"
"56171828","9340545","2019-05-16 15:18:36","1","1666","<git><merge><gitlab><git-commit><git-pull>","Getting error ""fatal: could not open '.git/MERGE_HEAD' "" when committing","<p>getting error trying to do ""git commit -m '...' ""</p>

<pre><code>fatal: could not open '.git/MERGE_HEAD' for reading: No such file or directory
</code></pre>

<p>I am working on a branch and am trying to pull from master but i need to commit first</p>
","2","9340545","",""
"73013703","579184","2022-07-17 16:53:47","0","597","<windows><git><git-clone><git-pull>","git clone ""you appear to have cloned an empty repository"" but it's not empty, pull says ""couldn't find remote ref master""","<p>I'm trying to set up a vanilla new separate repository for the first time with git 2.37.1 on two W10 systems using drive mapping but I can't find any answered questions that fit my case given my novicitry. :-) Sorry the format is messed up, I did 4 spaces in front of code but most code lines ignore that for some reason.</p>
<p>Spent hours looking at other similar questions, but they all seem to say that there are no commits in the remote repository I'm trying to clone, which is not true. There are lots of commits.</p>
<p>I created a git repository on System1 and it works.</p>
<pre><code> git ls-tree --full-tree --name-only -r HEAD
</code></pre>
<p>shows all my files (with lots of commits)</p>
<pre><code> git show HEAD
</code></pre>
<p>shows</p>
<pre><code> commit 557...27d (HEAD -&gt; master)  
 # and the diff between the latest and previous commit
</code></pre>
<p>And</p>
<pre><code> git branch -a
</code></pre>
<p>shows</p>
<pre><code>* master
</code></pre>
<p>No branches, no complexity, no nothing</p>
<p>I go to System2, and create my repo directory, cd into it, then</p>
<pre><code>git init  
git remote add origin s:/cap2office # that's my mapped System1 repository)
git pull origin master  
</code></pre>
<p>I get:  <code>fatal: couldn't find remote ref master</code></p>
<pre><code>git remote
</code></pre>
<p>I get: <code>origin</code></p>
<pre><code>git branch -a
</code></pre>
<p>shows nothing</p>
<pre><code>git ls-remote
</code></pre>
<p>shows: <code>From s:/cap2office</code></p>
<p>I also tried:</p>
<pre><code>git clone s:/cap2office
</code></pre>
<p>and it says</p>
<pre><code>Cloning into 'cap2office'...  
warning: You appear to have cloned an empty repository.  
</code></pre>
<p>I know I'm missing some trivial magic command, but can't figure out what it is.</p>
","3","579184","",""
"73032931","4768946","2022-07-19 07:39:50","0","2085","<git><repository><git-merge><git-pull><git-reset>","git merge conflicts even with git reset --hard","<p>I am working on a branch on a repository. I commit and push changes every day to origin from one computer. Then on another computer the next day I do <code>git pull</code> and expect the changes pushed from the day before to be updated in my working directory.</p>
<p>I keep receiving :</p>
<pre><code>CONFLICT (content): Merge conflict in src/main.c
Automatic merge failed; fix conflicts and then commit the result.
</code></pre>
<p>Ok, so I then do a <code>git reset --hard HEAD</code> , which should undo any local and uncommited changes that I have, and then do <code>git pull</code> again. However, the conflict error remains.</p>
<p>This is not the behavior I expect. Previously for me, <code>git reset --hard HEAD</code> followed by <code>git pull</code> would solve this. But not anymore:)</p>
<p>Does anyone know what I am doing wrong here? Thanks</p>
","8","4768946","",""
"56395786","11583218","2019-05-31 13:12:43","0","34","<github><git-push><git-pull>","I have a question about using github with collaborators","<p>I guys, Id like to know some tips about git,
I've worked with collaborators in the same repository and Id like to know if when someone makes the code's push, the code that is already there will be changed adding only the changes and when the other persor make the other git-push the code will be the union of both pushes, or the code will be replaced by the last one pushed from the last person who made the git-push.</p>
","0","11583218","0","0"