Post Link,User Link,CreationDate,Score,ViewCount,Tags,Title,Body,CommentCount,OwnerUserId,AnswerCount,FavoriteCount
57652455,8562954,8/26/2019 5:55,1,754,<git><continuous-integration><gitlab><gitlab-ci><githooks>,How to trigger certain scripts when a commit occurs in the Gitlab repository,"<p>I am looking for a way to run some python scripts in our remote server when a commit occurs to our Gitlab repo. We are not hosting our repo, it is on Gitlab servers. Any recommendations are welcome.</p>

<p>Thanks in advance.</p>
",0,8562954,,
38742960,1347198,8/3/2016 11:56,1,200,<git><jira><bitbucket><githooks>,git - extend commit hook with part of branch name,"<p>I would like to use the <em>prepare-commit-msg</em> hook. I am using feature and bugfix branches (feature/ISSUEKEY-23123-some-feature) and I would like to prepend the ISSUEKEY-23123 into the commit message:</p>

<pre><code>#!/bin/bash
BRANCH_NAME=$(git branch | grep '*' | sed 's/* //')
STR=`echo $BRANCH_NAME | grep -E 'ISSUEKEY-[0-9]*' -o`
if [[ $BRANCH_NAME == *""feature""* ]] || [[ $BRANCH_NAME == *""bugfix""* ]]
then
    echo $STR &gt; $1
fi
</code></pre>

<p>This works, but it discards the standard message vi is showing me for commits, e.g.:</p>

<pre><code># Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
# Explicit paths specified without -i or -o; assuming --only paths...
# On branch feature/ISSUEKEY-1716-model-implement
# Your branch is based on 'origin/feature/ISSUEKEY-1716-model-implement', but the upstream is gone.
#   (use ""git branch --unset-upstream"" to fixup)
#
# Changes to be committed:
#       new file:   asd
#
# Untracked files:
#       FSTD-1716
#       TMP
#
</code></pre>

<p>Is there a way to either prepend the <code>STR</code> to the output, or to call a git command what prints me the mentioned standard commit message?</p>

<p>The opened commit message should be:</p>

<pre><code>ISSUEKEY-1716 
# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
# Explicit paths specified without -i or -o; assuming --only paths...
# On branch feature/ISSUEKEY-1716-model-implement
# Your branch is based on 'origin/feature/ISSUEKEY-1716-model-implement', but the upstream is gone.
#   (use ""git branch --unset-upstream"" to fixup)
#
# Changes to be committed:
#       new file:   asd
#
# Untracked files:
#       FSTD-1716
#       TMP
#
</code></pre>
",0,1347198,0,0
57575542,452281,8/20/2019 14:08,1,2116,<git><githooks>,Git pre-commit hook not working as expected,"<p>I have configured my repo to use a <code>hooks</code> directory instead of the <code>.git/hooks</code> directory so that it can be <a href=""https://stackoverflow.com/a/37861972/452281"">managed from within the repo</a></p>

<p>I want to run <code>sed</code> to redact a password before a commit occurs. I am using this code in my <code>hooks/pre-commit</code> script which I have also made executable.</p>

<pre><code>#!/bin/bash

FNAME=smbclient.conf
sed -i -e 's/password=.*/password=See_Thycotic/g' ${FNAME}

grep -c See_Thycotic ${FNAME}
if [ ""$?"" -ne ""0"" ] ; then
    echo Failed to redact password in ${FNAME}
    exit 1
fi
echo Password was redacted in ${FNAME} before commit
</code></pre>

<p>When I run this command:</p>

<pre><code>git commit smbclient.conf -m ""changed something""
</code></pre>

<p>I see this message (as expected):</p>

<pre><code>1
Password was redacted in smbclient.conf before commit
</code></pre>

<p>The problem is that the file is committed before the contents are changed by the <code>pre-commit</code> script.  If I then run <code>git status</code>, it tells me <code>modified: smbclient.conf</code>.</p>

<p><strong>1) How can I change this file before the commit occurs and then also have it committed?</strong></p>

<p><strong>2) Is it possible to have the pre-commit script run when committing only the smbclient.conf file and no other files?</strong></p>
",3,452281,,
38694154,6654829,8/1/2016 8:27,1,191,<git><hook><bitbucket><githooks><git-tag>,Information from the git tag object,"<p>Do you have any ideas what kind of information does git tag object carry? </p>

<p>The point is I would like to analyze it when I make git hook (preferably server-side). </p>
",2,6654829,0,0
38694434,4052756,8/1/2016 8:41,0,273,<git><githooks><assembla>,How add server-side git hooks in Assembla?,"<p>How can i add server-side hooks in Assembla for all users this repository? If i add in .git/hooks it's be only for my local repository or i don't understand something? </p>

<p>I need hooks for check and edit commit messages for all users of repository.</p>
",0,4052756,,
62190318,1058380,6/4/2020 8:39,1,1121,<git><githooks>,git hook to set username and email,"<p>Is it possible to write a git hook that sets the username and email before the first commit? The username and email should be set depending on configured parameters like repository / domain regex or other ones.</p>

<p>I tried to write different types, but I only succeeded in that the configuration change <em>after</em> the first commit.</p>

<p><strong>Edit</strong></p>

<p>My code looks like this (based on <a href=""https://coderwall.com/p/jp7d5q/create-a-global-git-commit-hook"" rel=""nofollow noreferrer"">Create a global git commit hook</a>):</p>

<pre><code>.git-templates/hooks/ -&gt; cat pre-commit 
#!/bin/bash
remote=$(git config --get remote.origin.url)
if [ -n ""$remote"" ]; then
    if [[ $remote =~ ""specific_domain"" ]]; then
        git config user.email ""myname@specific_domain.tld""
        git config user.name ""Firstname Lastname""
    else
        git config user.email ""pseudonym@general_domain.tld""
        git config user.name ""pseudonym""
    fi
fi
</code></pre>
",3,1058380,,
25990834,553735,9/23/2014 8:53,2,516,<git><gitlab><githooks><gitlab-ci>,Gitlab CI fails to schedule builds for new commits,"<p>I have several projects on Gitlab integrated with Gitlab CI. However, the only time when build is scheduled in gitlab_ci for them is when I press <code>Test settings</code> in the gitlab_ci integration ingitlab project's services.</p>

<p>In all other cases, that is, when a commit is made to any of branches of the Gitlab project, no build is sheduled in gitlab_ci. What is aggravating is that <code>Test settings</code> only shedules a build of default branch (that is, <code>master</code>).</p>

<p>What can I do to diagnose and fix the situation? What logs should I look into? What settings to check?</p>
",0,553735,0,0
28170968,1971279,1/27/2015 12:51,1,1139,<node.js><git><githooks><forever>,Git post-receive restart forever(node.js)?,"<p>I am using git on my server as a remote repo, inside post-receive I define my work-tree where the files are hosted and my git-dir.</p>

<p>I am using node.js with forever on this app and in order for most changes to take effect I need to run <code>forever restart server.js</code>. It's a pain to have to login via ssh and cd to the directory and manually do it.</p>

<p>So I was thinking is it possible to issue a command within the post-receive, like <code>forever restart server.js</code>? </p>

<p><strong>Here is my post-receive file</strong></p>

<pre><code>#!/bin/sh
git --work-tree=/var/www/example/public_html --git-dir=/var/repo/examp$
forever restart ../../../www/example/public_html/server.js
</code></pre>
",2,1971279,,
46787669,5132444,10/17/2017 10:11,0,55,<git><github><version-control><bitbucket><githooks>,How to merge git from different repositories into 1 repo,"<p>I am working on a project where i am splitting up the entire project into multiple modules which are then being individually developed. I do not want the developers of the individual modules to have access to any other modules or the entire project and all they can see is their module.How can i go doing this using the existing git systems such as github or bitbucket.
Would each module be a repo and then a main repo which hooked into each of these repos to merge the data? </p>
",0,5132444,0,0
49149001,544847,3/7/2018 10:00,33,15491,<reactjs><testing><jestjs><create-react-app><githooks>,Run Create-React-App Tests not in Watch Mode,"<p>I have a project created using Create-React-App. I am looking to add in a <code>precommit</code> hook to run our linter and tests with the <code>pre-commit</code> package.</p>

<pre><code>""pre-commit"": [
  ""precommit-msg"",
  ""lint"",
  ""test""
],
</code></pre>

<p>However, since the test script runs by default in watch mode, this prevents the commit from ever actually happening. How can add the tests not in watch move in the pre-commit?</p>
",0,544847,0,0
35777262,454488,3/3/2016 16:10,0,554,<chef-infra><githooks><chef-recipe>,Manage a set of server side git hooks across multiple repositories using chef,"<p>So here are the requirements:</p>

<ol>
<li>Enable / Disable server side hooks using chef</li>
<li>Install all/some hooks to one, or more repositories</li>
</ol>

<p>I found various hook managers in github, but they all had limitations, or did not have integration with chef. or were client side only. Here are some hook managers i found:</p>

<ol>
<li><a href=""https://github.com/brigade/overcommit"" rel=""nofollow"">https://github.com/brigade/overcommit</a></li>
<li><a href=""https://github.com/MatthieuBizien/git-hook-manager"" rel=""nofollow"">https://github.com/MatthieuBizien/git-hook-manager</a></li>
</ol>

<p>or there were git hooks for chef, like:</p>

<ol start=""3"">
<li><a href=""https://github.com/mattpep/santoku"" rel=""nofollow"">https://github.com/mattpep/santoku</a></li>
</ol>

<p>so using chef, if i can setup a cookbook, which deploys files across git repos while creating links and changing permissions/ownership, that would do it too.</p>

<p>GitLab Community Edition (CE) is being used for remote repositories</p>
",4,454488,,
76270159,4043273,5/17/2023 8:45,-1,32,<git><bitbucket><githooks><atlassian-plugin-sdk><bitbucket-cloud>,Can you develop custom bitbucket remote server hook that can reject pushes?,"<p>During my research on how to implement a solution for filtering commits on bitbucket's git repo, i.e. rejecting pushes that introduce invalid changes, I found out about bitbucket's custom plugins and allegedly you can implement custom hooks as java apps that you can connect with bitbucket's git repo. One example: <a href=""https://blog.developer.atlassian.com/beer-o-clock-stash-plugin-tutorial/"" rel=""nofollow noreferrer"">https://blog.developer.atlassian.com/beer-o-clock-stash-plugin-tutorial/</a>.</p>
<p>In this example plugin is used as a part of the custom &quot;Stash&quot; server that is run on the localhost. My question is: could that same custom plugin be used on an existing bitbucket remote repo somehow, and can you point me in a right direction on how to achieve that?</p>
",0,4043273,,
76322364,21952637,5/24/2023 10:08,0,40,<git><spring-boot><githooks><pre-commit-hook>,Why isn't My Git pre-commit Hook Working with Spring Boot and Gradle?,"<p>How to implement Git pre-commit/pre-push hook in Spring boot for gradle project?</p>
<p>I have implemented at my project but its not working.
Step 1:  Created a pre-hook script, let's create <code>pre-commit</code> file inside a new <strong>scripts</strong> directory.</p>
<p>Below script is been configured for pre-commit</p>
<pre><code>#!/bin/sh

echo &quot;*****Running unit tests******&quot;

git stash -q --keep-index

./gradlew test

status=$?

git stash pop -q

echo &quot;*****Done with unit tests******&quot;

exit $status
</code></pre>
<p>Step 2:
Next, create a Gradle task in the build.gradle file to install the pre-commit script. Why do we need it? because, we want this to run on all developers' machine, not just on our machine, we all love consistency and wants to put the constraints</p>
<p>Gradle task will run whenever someone takes the build</p>
<pre><code>task installLocalGitHook(type: Copy){
from new File(rootProject.rootDir, 'scripts/pre-commit')
into { new File(rootProject.rootDir, '.git/hooks')}
fileMode 0775
}

build.dependsOn installLocalGitHook
</code></pre>
<p>When build the project above Gradle task won't be run and pre-commit script won't be copied to <code>.git/hooks/</code> directory.</p>
<p>But, If I run the task manually form grade file it works and copied pre-commit script to <code>.git/hooks/</code> director</p>
<p>References:</p>
<ol>
<li><a href=""https://dev.to/akdevcraft/git-pre-hook-pre-commit-with-gradle-task-134m"" rel=""nofollow noreferrer"">https://dev.to/akdevcraft/git-pre-hook-pre-commit-with-gradle-task-134m</a></li>
<li><a href=""https://gist.github.com/franklsm1/d15dd2020772fb6ca65a375956bf27c2"" rel=""nofollow noreferrer"">https://gist.github.com/franklsm1/d15dd2020772fb6ca65a375956bf27c2</a></li>
</ol>
<p>I have try to implement <code>pre-commit</code> hook but it's not work as expected.</p>
",0,21952637,,
76334093,1920035,5/25/2023 15:42,1,37,<bash><git><githooks>,Git BASH - Hook on merge removes line breaks,"<p>I am using a git hook in my <code>prepare-commit-msg</code> to automatically prepend branch names to the commit message:</p>
<pre class=""lang-bash prettyprint-override""><code>#!/bin/sh
NAME=$(git branch | grep '*' | sed 's/* //')
echo &quot;$NAME&quot;' - '$(cat &quot;$1&quot;) &gt; &quot;$1&quot;
</code></pre>
<p>However if I do a git merge, all of the line endings are removed. This causes an issue because git will automatically include lines with comments starting with a <code>#</code> which include things like files that were changed.</p>
<p>So what winds up happening during a merge is something like this:</p>
<pre><code>my_branch_name - Merge branch 'master' into my_branch_name # Conflicts: # File1.txt # File2.txt # File3.txt
</code></pre>
<p>Instead of:</p>
<pre><code>my_branch_name - Merge branch 'master' into my_branch_name
# Conflicts:
# File1.txt
# File2.txt
# File3.txt
</code></pre>
",0,1920035,,
76355479,12890791,5/29/2023 7:39,0,41,<git><hook><githooks><husky><git-husky>,Husky: cannot spawn .husky/commit-msg: No such file or directory,"<p>I have been working with husky for few years now. We started a new project and was sure to add husky for pre-commit and commit-msg linting. But this time we faced some issue in the windows machine.</p>
<p>We configured the husky in the project using a mac. When we added new dev who has a windows machine, there was error in commiting.</p>
<p>we have,</p>
<ul>
<li>pre-commit</li>
<li>commit-msg</li>
</ul>
<p><code>.husky/pre-commit</code></p>
<pre><code>#!/bin/sh
. &quot;$(dirname &quot;$0&quot;)/_/husky.sh&quot;

npx lint-staged
</code></pre>
<p><code>.husky/commit-msg</code></p>
<pre><code>#!/bin/sh
echo $(dirname &quot;$0&quot;)
. &quot;$(dirname &quot;$0&quot;)/_/husky.sh&quot;

npx --no-install commitlint --edit $1
</code></pre>
<p><code>.husky/_/husky.sh</code></p>
<pre><code>#!/usr/bin/env sh
if [ -z &quot;$husky_skip_init&quot; ]; then
  debug () {
    if [ &quot;$HUSKY_DEBUG&quot; = &quot;1&quot; ]; then
      echo &quot;husky (debug) - $1&quot;
    fi
  }

  readonly hook_name=&quot;$(basename -- &quot;$0&quot;)&quot;
  debug &quot;starting $hook_name...&quot;

  if [ &quot;$HUSKY&quot; = &quot;0&quot; ]; then
    debug &quot;HUSKY env variable is set to 0, skipping hook&quot;
    exit 0
  fi

  if [ -f ~/.huskyrc ]; then
    debug &quot;sourcing ~/.huskyrc&quot;
    . ~/.huskyrc
  fi

  readonly husky_skip_init=1
  export husky_skip_init
  sh -e &quot;$0&quot; &quot;$@&quot;
  exitCode=&quot;$?&quot;

  if [ $exitCode != 0 ]; then
    echo &quot;husky - $hook_name hook exited with code $exitCode (error)&quot;
  fi

  if [ $exitCode = 127 ]; then
    echo &quot;husky - command not found in PATH=$PATH&quot;
  fi

  exit $exitCode
fi
</code></pre>
<p>files inside the <code>.husky</code> folder.
the pre-commit file works just fine without any issue.
but we get following error in case of commit-msg</p>
<p><strong><code>error: cannot spawn .husky/commit-msg: No such file or directory</code></strong></p>
<p>it is not even getting invoked.</p>
<p>does anyone encountered this issue ? Is there any fix for this?</p>
<p><strong>NB : Please don't suggest <code>--no-verify</code> as it does the opposite of what we are trying to implement.</strong></p>
",0,12890791,,
76380455,19956715,6/1/2023 9:26,0,68,<eslint><githooks>,"what is causing eslint errors in my git pre-commit hook, despite having those folders in .eslintignore?","<p>I'm trying to make a GIt pre-commit Hook so that ESLint rules are kept.
when running a git commit I get a list of errors. some of the errors are files that are in the .eslintignore file.
the .eslintignore file is located in the root of my project directory:</p>
<p>my .eslintignore file:</p>
<pre><code>node_modules/
.vite/

</code></pre>
<p>these are the errors:</p>
<pre><code>[STARTED] Preparing lint-staged...
[SUCCESS] Preparing lint-staged...
[STARTED] Running tasks for staged files...
[STARTED] package.json — 20 files
[STARTED] **/*.{js,jsx,json} — 16 files
[STARTED] eslint . --fix
[FAILED] eslint . --fix [FAILED]
[FAILED] eslint . --fix [FAILED]
[FAILED] eslint . --fix [FAILED]
[STARTED] Applying modifications from tasks...
[SKIPPED] Skipped because of errors from tasks.
[STARTED] Reverting to original state because of errors...
[SUCCESS] Reverting to original state because of errors...
[STARTED] Cleaning up temporary files...
[SUCCESS] Cleaning up temporary files...

✖ eslint . --fix:

frontend\.eslintrc.json
  2:10  error  Parsing error: Unexpected token :

frontend\.vite\deps\_metadata.json
  0:0  warning  File ignored by default.  Use a negated ignore pattern (like &quot;--ignore-pattern '!&lt;relative/path/to/filename&gt;'&quot;) to override

frontend\.vite\deps\chunk-V42YN7MM.js
  0:0  warning  File ignored by default.  Use a negated ignore pattern (like &quot;--ignore-pattern '!&lt;relative/path/to/filename&gt;'&quot;) to override

frontend\.vite\deps\react-dom_client.js
  0:0  warning  File ignored by default.  Use a negated ignore pattern (like &quot;--ignore-pattern '!&lt;relative/path/to/filename&gt;'&quot;) to override

frontend\.vite\deps\react.js
  0:0  warning  File ignored by default.  Use a negated ignore pattern (like &quot;--ignore-pattern '!&lt;relative/path/to/filename&gt;'&quot;) to override

frontend\file.js
  1:7  error  'r' is assigned a value but never used  no-unused-vars

frontend\package-lock.json
  2:9  error  Parsing error: Unexpected token :

frontend\package.json
  2:9  error  Parsing error: Unexpected token :

frontend\src\API\api.jsx
  6:30  error  'user' is defined but never used  no-unused-vars
  8:41  error  'process' is not defined          no-undef

frontend\src\Redux\dataAction.jsx
  5:14  warning  Fast refresh only works when a file only export components. Use a new file to share constant or functions between components  react-refresh/only-export-components
  9:14  warning  Fast refresh only works when a file only export components. Use a new file to share constant or functions between components  react-refresh/only-export-components

frontend\src\Redux\dataReducer.jsx
  6:7  warning  Fast refresh only works when a file only export components. Move your component(s) to a separate file  react-refresh/only-export-components

✖ 13 problems (6 errors, 7 warnings)

husky - pre-commit hook exited with code 1 (error)
</code></pre>
<p>tried running</p>
<pre><code>npx eslint --fix    
</code></pre>
<p>and nothing changed.</p>
<p>any suggestions to how to make .eslintignore file work and a quick way to get rid of the errors (not one at a time)?</p>
",0,19956715,,
76407305,11610196,6/5/2023 14:11,-2,62,<python-3.x><githooks><pre-commit><pre-commit.com><commitizen>,Pre-commit in pattern branch name,"<p>I have that final pre-commit-config.yml</p>
<pre><code>  - repo: local
    hooks:
      - id: versioncommit
        name: versioncommit
        entry: bash -c &quot;make generate-commit-file; git add __commit__.py&quot;
        language: system
        pass_filenames: false
        stages: [commit]
  - repo: local
    hooks:
      - id: requirements
        name: requirements
        entry: bash -c &quot;make generate-requirements &amp;&amp; git add requirements.txt&quot;
        language: system
        pass_filenames: false
        stages: [commit]
</code></pre>
<p>Makefile part</p>
<pre><code>generate-commit-file:
    git rev-parse --short HEAD | ./venv/bin/python -c &quot;import sys; hash_commit=str(sys.stdin.read()).strip(); print('commit = \'{}\''.format(hash_commit), file=sys.stdout)&quot; &gt; __commit__.py

generate-requirements:
    python3.10 -m venv local_req
    ./local_req/bin/pip install -U pip wheel setuptools
    ./local_req/bin/pip install -r ./settings/requirements/main.txt
    ./local_req/bin/pip freeze &gt; requirements.txt
    rm -rf ./local_req

</code></pre>
<p>I use git-flow to manage branches in addition to commitizen to manage commit.</p>
<p>So these my local-hook requirements take a while. Because I install all the requirements in a separate folder, then I freeze and delete the folder. And it takes about 30 seconds. Which makes each commit very time consuming.</p>
<p>I would like only when I commit to a branch that starts with &quot;rel-&quot; to run the local hook of requirements and versioncommit.</p>
",2,11610196,,
76540341,8742968,6/23/2023 12:55,-1,22,<git><gitlab><githooks><mirror>,post-merge git hook not running on gitlab mirror repo,"<h2>background</h2>
<p>I'm managing a set of repositories which are hosted on a self-managed instance of gitlab (am not an admin). These repos are effectively the 'source' repos which have cloned copies on another server with which clients interact. The goal is to have each of the cloned repositories pull automatically on every push to the gitlab remotes, and then to automatically run a script after the pull unique to that repo which manages file permissions (we require more than the restricted set of git file permissions to get the job done).</p>
<h2>current solution - webhook + cgi</h2>
<p>My current solution is to use gitlab webhooks to call <code>cgi</code> scripts on the server; these scripts (one per repo) do <code>git pull</code> and then call their respective permissions updating script.</p>
<h2>goal</h2>
<p>Was hoping to switch to a gitlab mirrored repo, and then to use a git post-merge hook to run the permission-updating script automatically. This would remove the necessity to have an extra <code>cgi-bin</code> script for each repo, and allows us to manage security via ssh keys rather than a password.</p>
<h2>problem</h2>
<p>Setting up the mirror repo works, and if I manually run <code>git pull</code>, the <code>post-merge</code> hook does indeed run. However, it seems that the hook does <strong>not</strong> run on the &quot;automagical&quot; updates from gitlab.</p>
<h2>questions</h2>
<ol>
<li>Is there a git hook which will work with the gitlab mirror repo feature?</li>
<li>Why is this failing? What's happening under the hood here?</li>
<li>Given the general situation specified above, can you think of another more elegant solution? Other ideas would be greatly appreciated. Thank you.</li>
</ol>
",0,8742968,,
76558764,975525,6/26/2023 16:54,0,15,<git><visual-studio><githooks>,How can I call .net application/exe in pre-commit hook,"<p>I wanted to validate xml file before the file being committed to the repository. For this I have created .net application which accepts the file and validates the xml file and if file is valid it will return true else it will return false.</p>
<p>My question here is, how can I call .net application in pre-commit hook.</p>
<p>Below is the pre-commit code snippet</p>
<pre><code>#!/bin/bash

for file in $(git diff --cached --name-only --diff-filter=ACM); do
  # Check if the file is an XML file
  if [[ $file == *.xml ]]; then
    # Perform XML validation using the xmlvalidator.exe program
    path_to_validator=&quot;./Utilities/xmlvalidator.exe&quot;
    validation_result=$(mono &quot;$path_to_validator&quot; &quot;$file&quot; 2&gt;&amp;1)

    # Check the output of the validator program
    if [[ $validation_result != *&quot;Valid XML&quot;* ]]; then
      echo &quot;Error: Invalid XML file: $file&quot;
      echo &quot;Validation Result: $validation_result&quot;
      exit 1
    fi
  fi
done

exit 0
</code></pre>
<p>When I execute this, its error out in the line</p>
<p>path_to_validator=&quot;./Utilities/xmlvalidator.exe
And error is- path_to_validator: command not found.</p>
<p>Can anybody help me out.</p>
<p>I am using visual studio 2019 and windows OS for git repository.</p>
",0,975525,,
76570791,6945723,6/28/2023 7:06,-1,24,<android><git><gitlab><gitlab-ci><githooks>,Gitlab doesn't allow to update a pre-push git hook,"<p>In an Android Project I a created a pre-push git-hook in the <code>project-name/git-hooks</code> folder.</p>
<p>This hook has to be copied into the folder .git/hooks so that it can be available for every developer in the team, better explained in this <a href=""https://dev.to/akdevcraft/git-pre-hook-pre-commit-with-gradle-task-134m"" rel=""nofollow noreferrer"">article</a>.</p>
<p>The problem is that now the CI fails on my MR with the following error, even though the same thing for pre-commit worked smoothly</p>
<p><code>Could not copy file './git-hooks/pre-push' to './.git/hooks/pre-push'</code>.</p>
<p>The code to copy the file is the following and it works locally</p>
<pre><code>task installLocalGitHook(type: Copy){
    from new File(rootProject.rootDir, 'scripts/pre-push')
    into { new File(rootProject.rootDir, '.git/hooks')}
    fileMode 0775
</code></pre>
<p>}</p>
",1,6945723,,
76596057,179332,7/1/2023 18:32,0,17,<git><git-merge><githooks>,How to implement custom checks before starting a git merge?,"<p>I would like to implement a custom check which has the option to abort a merge before it's begun, preventing <code>git merge</code> from touching the working tree or repository <em>in any way</em>.  The <code>pre-merge-commit</code> hook runs too late for this; <a href=""https://git-scm.com/docs/githooks#_pre_merge_commit"" rel=""nofollow noreferrer"">the man page entry</a> says:</p>
<blockquote>
<p>This hook [...] is invoked after the merge has been carried out successfully and before obtaining the proposed commit log message to make a commit.</p>
</blockquote>
<p>I couldn't see any other hook or config parameter usable for this.  <code>prepare-commit-msg</code> doesn't even get run when I do a test of <code>git merge</code>.  It feels like there should be a <code>pre-merge</code> hook which runs at the very beginning of the merge process.</p>
<p>Can anyone suggest a solution or workaround?  I guess I could write a <code>git-merge</code> wrapper which performs the check before invoking the real <code>git-merge</code>, and then alter <code>$PATH</code> to find that only when I want this check active.  But that feels pretty ugly, and I'm not even sure it would work.  <strong>EDIT:</strong> it doesn't work, because git doesn't allow aliasing of built-in subcommands, as explained in <a href=""https://stackoverflow.com/questions/3538774/is-it-possible-to-override-git-command-by-git-alias"">Is it possible to override git command by git alias?</a></p>
",1,179332,,
40503820,1587446,11/9/2016 9:41,0,37,<javascript><git><githooks><jshint>,JSHint not accepting file content as argument,"<p>I am trying to make a server side git <code>pre-receive</code> hook for checking the code quality of php and javascript files. So the repo server will make the git push fail, if the pre-receive hook fails the test. Since the server doesn't have the physical file with the content from the latest commit, I have tried getting the file contents and piping them to the php linting tools. It was successful. </p>

<p>For javascript file, I am using the <code>jshint</code> tool. But the issue with the <code>jshint</code> tool is that it is not accepting the file content as the argument. </p>

<p>Is there any way by which I can make the <code>jshint</code> accept file content instead of the file name ? One solution I find is by writing a temporary file. But that is not an ideal solution. </p>
",0,1587446,,
21607598,859678,2/6/2014 15:51,2,1076,<git><githooks><tortoisegit>,TortoiseGit - pre-rebase hook not executed,"<p>I'm working under Windows 7 and I have installed msysgit and TortoiseGit.
I wrote a pre-rebase hook for a git repository.</p>

<p>The hook is called when I rebase the repo from Git Bash.
However the hook is not called if I start the rebase from TortoiseGit.
I tried to write a pre-commit hook, and it works from bot Git Bash and TortoiseGit.</p>

<p>The hook is the following:</p>

<pre><code>#!/bin/sh
#
# Copyright (c) 2006, 2008 Junio C Hamano
#
# The ""pre-rebase"" hook is run just before ""git rebase"" starts doing
# its job, and can prevent the command from running by exiting with
# non-zero status.
#
# The hook is called with the following parameters:
#
# $1 -- the upstream the series was forked from.
# $2 -- the branch being rebased (or empty when rebasing the current branch).
#
# This sample shows how to prevent topic branches that are already
# merged to 'next' branch from getting rebased, because allowing it
# would result in rebasing already published history.

echo '************************************************************'
echo '********************** Running CMake  **********************'
echo '************************************************************'
cmake -G ""Visual Studio 11"" -BBuild/ -Hsrc
</code></pre>

<p>What's wrong?</p>
",0,859678,0,0
40609278,4733027,11/15/2016 11:56,0,260,<angular><githooks><azure-web-app-service>,How do I CI deploy my Angular 2 app to Azure?,"<p>I currently have an Angular 2 application in a GitHub repo. I would like to deploy it as a webapp on Azure, preferably automatically, on every commit, using Git hooks. How do I do this?</p>
",1,4733027,,
2794694,336249,5/8/2010 15:53,11,8461,<git><pull><githooks>,How do I hook a git pull on the remote?,"<p>Is there a way to hook when a git pull happens on the remote (similar to a pre-receive or post-receive).  Basically I'd like to be able to cause the remote to commit whatever it has when there is a pull.</p>

<p>In my situation, whatever is live on the remote is an authoritative source which may get modified without a git commit.  I want to make sure when I pull I'm always able to get the latest of whatever is live.</p>
",4,336249,0,0
40725328,5309101,11/21/2016 16:51,3,1596,<git><githooks><git-checkout>,How to do a pre-checkout with Git,"<p>I would like to move some files before doing a <code>git checkout</code> on a specific branch, and to execute some scripts.</p>

<p>There is no way to do an alias to checkout with my scripts, I really need a hook.</p>

<p>I saw many links and it seems the the pre-checkout hook is not yet implemented.
Is there a way to do so?</p>
",1,5309101,,
40837679,1843805,11/28/2016 5:26,1,76,<git><githooks>,"How to know the ""remote"" in git pre-push hook file","<p>In the ""pre-push"" file, I can get some params using ""
<code>read local_ref local_sha remote_ref remote_sha</code>"", but I wanna do some restrictions stuff according to the specific remote repo(yes, there's mutiple remote address in my project)， so how can I do this? 
Thanks in advance!</p>
",0,1843805,0,0
40837990,1843805,11/28/2016 6:00,1,512,<node.js><git><githooks>,“bash read command” in nodejs,"<p>I wanna write a git hook scripts with nodejs which I'm good at. In bash files, I can get params like this: </p>

<p><code>#!/bin/bash
read local_ref local_sha remote_ref remote_sha</code></p>

<p>Is there any same command in nodejs?</p>

<p><code>#!/usr/bin/env node
""bash read function in nodejs""</code></p>
",7,1843805,,
21946499,1103892,2/21/2014 22:30,2,394,<git><githooks><gitolite><pivotaltracker>,How to add git hook for sending commit messages into pivotal tracker story as comments?,"<p>I am using mac os, git(without github), gitolite as git server and pivotal tracker. </p>

<p>I would like to add git hook which notify pushed commit for ex: <code>[#432324] some commit</code> will add as a comment to PT story. And maybe I will be able to close finish story when in commit message will be 'Fixed' text.</p>
",0,1103892,,
3206950,352052,7/8/2010 18:52,0,363,<ruby><git><rspec><githooks>,Telling rspec to not load files,"<p>I'm trying to add some commit hooks to my git repo. I want to leverage Rspec and create commit message specs that will run each time I commit. I have figured out how to run rspec outside of the 'spec' command, but I now have an interesting problem.</p>

<p>Here is my current code:</p>

<p>.git/hooks/commit-msg</p>

<pre><code>#!/usr/bin/env ruby

require 'rubygems'
require 'spec/autorun'

message = File.read(ARGV[0])

describe ""failing"" do
    it ""should fail"" do
        true.should == false
    end
end
</code></pre>

<p>This is throwing an error when it gets to the describe call. Basically, it thinks that the commit message it receives is the file to load and run the specs against. Here is the actually error</p>

<pre><code>./.git/COMMIT_EDITMSG:1: undefined local variable or method `commit-message-here' for main:Object (NameError)
from /Users/roykolak/.gem/ruby/1.8/gems/rspec-1.3.0/lib/spec/runner/example_group_runner.rb:15:in `load'
from /Users/roykolak/.gem/ruby/1.8/gems/rspec-1.3.0/lib/spec/runner/example_group_runner.rb:15:in `load_files'
from /Users/roykolak/.gem/ruby/1.8/gems/rspec-1.3.0/lib/spec/runner/example_group_runner.rb:14:in `each'
from /Users/roykolak/.gem/ruby/1.8/gems/rspec-1.3.0/lib/spec/runner/example_group_runner.rb:14:in `load_files'
from /Users/roykolak/.gem/ruby/1.8/gems/rspec-1.3.0/lib/spec/runner/options.rb:133:in `run_examples'
from /Users/roykolak/.gem/ruby/1.8/gems/rspec-1.3.0/lib/spec/runner.rb:61:in `run'
from /Users/roykolak/.gem/ruby/1.8/gems/rspec-1.3.0/lib/spec/runner.rb:45:in `autorun'
from .git/hooks/commit-msg:12
</code></pre>

<p>I am looking for a way to tell rspec to not load files. I have a suspicion that I will need to create my own spec runner. I came to this conclusion after viewing these lines in rspec-1.3.0/lib/spec/runner/example_group_runner.rb</p>

<pre><code>  def load_files(files)
    $KCODE = 'u' if RUBY_VERSION.to_f &lt; 1.9
    # It's important that loading files (or choosing not to) stays the
    # responsibility of the ExampleGroupRunner. Some implementations (like)
    # the one using DRb may choose *not* to load files, but instead tell
    # someone else to do it over the wire.
    files.each do |file|
      load file
    end
  end
</code></pre>

<p>But, I would like some feedback before I do that. Any thoughts?</p>
",0,352052,,
59709758,3408956,1/13/2020 1:57,0,91,<git><github><githooks>,Chained git remotes: dev repos -> repo on intranet -> repo on github,"<p>Developers within the firm all has access to a git repo on our intranet (network drive). I would like to set up a 'central' git repo on the intranet, from/to which all developers can pull/push commits. </p>

<p>I would like this intranet repo to be synchronized with a remote repo on github, with only one admin account (myself) having any access to the github repo. That is, I don't want to give ssh keys or username/passwords of our github account to our developers or their computers. </p>

<p>How can I achieve this given I have all the ultimate privileges within the firm? </p>

<pre><code>dev1 &lt;-\
        --&gt; intranet repo --&gt; github repo
dev2 &lt;-/
</code></pre>

<p>Edit:</p>

<p>The solution I decided on:</p>

<ul>
<li>Use python watchdog on my machine with access to my ssh keys and ssh-agent, to monitor for changes to intranet repo.git/refs/heads/ folder (which should be sufficient given it is a bare repo), debounce it</li>
<li>upon watchdog debounced trigger, use GitPython to do a git push to github</li>
</ul>
",0,3408956,,
59714740,5306152,1/13/2020 10:27,4,4330,<python><git><githooks><pre-commit.com>,pre-commit run unittest git hooks: ModuleNotFoundError for installed python module in environment,"<p>I use <a href=""https://pre-commit.com/"" rel=""nofollow noreferrer"">pre-commit</a> to handle git hooks for my git project. When I use it, the <code>pre-commit run -a</code> command keeps to skip the test execution:</p>

<pre><code>(smartexchange) trnbook:smartexchange ale$ pre-commit run unittest -a
unittest.................................................................Failed
hookid: unittest

test_adminusers_add_delete_user (tests.test_admin_users.TestAdminUsers) ... ok
test_adminusers_init (tests.test_admin_users.TestAdminUsers) ... ok
test_get_user_by_id (tests.test_admin_users.TestAdminUsers) ... ok
test_str (tests.test_admin_users.TestAdminUsers) ... ok
test_custom_logger_formatter (tests.test_logging.TestLogging) ... ok
test_custom_logger_formatter_withinif (tests.test_logging.TestLogging) ... ok
test_custom_logger_prefix (tests.test_logging.TestLogging) ... ok
tests.test_market (unittest.loader._FailedTest) ... ERROR
test_update_const (tests.test_update_const.TestObjectFormatter) ... ok
test_balance (tests.test_user.TestBalance) ... ok
test_user_balances (tests.test_user.TestUser) ... ok
test_user_init (tests.test_user.TestUser) ... ok
test_user_str (tests.test_user.TestUser) ... ok
test_firstline_objects_formatter (tests.test_utils.TestObjectFormatter) ... ok
test_object_formatter (tests.test_utils.TestObjectFormatter) ... ok
tests.test_validations (unittest.loader._FailedTest) ... ERROR

======================================================================
ERROR: tests.test_market (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: tests.test_market
Traceback (most recent call last):
File ""/Users/ale/bin/miniconda3/envs/smartexchange/lib/python3.7/unittest/loader.py"", line 436, in _find_test_path
    module = self._get_module_from_name(name)
File ""/Users/ale/bin/miniconda3/envs/smartexchange/lib/python3.7/unittest/loader.py"", line 377, in _get_module_from_name
    __import__(name)
File ""/Users/ale/workspace/smartexchange/smartexchange/tests/test_market.py"", line 4, in &lt;module&gt;
    from Market.market import Order
File ""/Users/ale/workspace/smartexchange/smartexchange/Market/market.py"", line 6, in &lt;module&gt;
    from Utils.validation_funds import Fund
File ""/Users/ale/workspace/smartexchange/smartexchange/Utils/validation_funds.py"", line 4, in &lt;module&gt;
    from PyRock_v1_API.client import pyrockclient
File ""/Users/ale/workspace/smartexchange/smartexchange/PyRock_v1_API/client.py"", line 2, in &lt;module&gt;
    from Utils.settings import TRT_APIKEY, TRT_SECRET
File ""/Users/ale/workspace/smartexchange/smartexchange/Utils/settings.py"", line 3, in &lt;module&gt;
    from dotenv import load_dotenv
ModuleNotFoundError: No module named 'dotenv'


======================================================================
ERROR: tests.test_validations (unittest.loader._FailedTest)
----------------------------------------------------------------------
ImportError: Failed to import test module: tests.test_validations
Traceback (most recent call last):
File ""/Users/ale/bin/miniconda3/envs/smartexchange/lib/python3.7/unittest/loader.py"", line 436, in _find_test_path
    module = self._get_module_from_name(name)
File ""/Users/ale/bin/miniconda3/envs/smartexchange/lib/python3.7/unittest/loader.py"", line 377, in _get_module_from_name
    __import__(name)
File ""/Users/ale/workspace/smartexchange/smartexchange/tests/test_validations.py"", line 4, in &lt;module&gt;
    from Utils.validation_funds import Fund
File ""/Users/ale/workspace/smartexchange/smartexchange/Utils/validation_funds.py"", line 4, in &lt;module&gt;
    from PyRock_v1_API.client import pyrockclient
File ""/Users/ale/workspace/smartexchange/smartexchange/PyRock_v1_API/client.py"", line 2, in &lt;module&gt;
    from Utils.settings import TRT_APIKEY, TRT_SECRET
File ""/Users/ale/workspace/smartexchange/smartexchange/Utils/settings.py"", line 3, in &lt;module&gt;
    from dotenv import load_dotenv
ModuleNotFoundError: No module named 'dotenv'


----------------------------------------------------------------------
Ran 16 tests in 0.013s

FAILED (errors=2)
</code></pre>

<p>The direct execution of <code>python -m unittest discover</code> instead it's ok:</p>

<pre><code>(smartexchange) trnbook:smartexchange ale$ python -m unittest discover --start-directory=smartexchange --verbose
test_adminusers_add_delete_user (tests.test_admin_users.TestAdminUsers) ... ok
test_adminusers_init (tests.test_admin_users.TestAdminUsers) ... ok
test_get_user_by_id (tests.test_admin_users.TestAdminUsers) ... ok
test_str (tests.test_admin_users.TestAdminUsers) ... ok
test_custom_logger_formatter (tests.test_logging.TestLogging) ... ok
test_custom_logger_formatter_withinif (tests.test_logging.TestLogging) ... ok
test_custom_logger_prefix (tests.test_logging.TestLogging) ... ok
test_order (tests.test_market.TestOrder) ... ok
test_update_const (tests.test_update_const.TestObjectFormatter) ... ok
test_balance (tests.test_user.TestBalance) ... ok
test_user_balances (tests.test_user.TestUser) ... ok
test_user_init (tests.test_user.TestUser) ... ok
test_user_str (tests.test_user.TestUser) ... ok
test_firstline_objects_formatter (tests.test_utils.TestObjectFormatter) ... ok
test_object_formatter (tests.test_utils.TestObjectFormatter) ... ok
test_currency (tests.test_validations.TestValidations) ... ok
test_fund (tests.test_validations.TestValidations) ... ok
test_fund_update_change (tests.test_validations.TestValidations) ... ok

----------------------------------------------------------------------
Ran 18 tests in 0.011s

OK
</code></pre>

<p>Until I added the <code>requests</code> and <code>python-dotenv</code> module import within the code, the <code>git add . &amp;&amp; pre-commit install &amp;&amp; pre-commit run -a</code> command was ok.
Here is my actual <code>.pre-commit-config.yaml</code> file.</p>

<pre><code>repos:
- repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v2.4.0
    hooks:
    - id: trailing-whitespace
    - id: end-of-file-fixer
    - id: check-yaml
    - id: check-added-large-files
- repo: https://github.com/PyCQA/bandit
    rev: 1.6.2
    hooks:
    - id: bandit
        args: [--verbose]
        # verbose: true
- repo: https://github.com/pre-commit/mirrors-autopep8
    rev: v1.4.4
    hooks:
    - id: autopep8
- repo: local
    hooks:
    - id: unittest
        name: unittest
        entry: python -m unittest discover
        language: python
        types: [python]
        args: [--start-directory=smartexchange,--verbose]
        pass_filenames: false
        verbose: true
</code></pre>

<p>I use <a href=""https://docs.conda.io/en/latest/miniconda.html"" rel=""nofollow noreferrer"">miniconda</a> as environment manager; here my <code>conda list</code> output:</p>

<pre><code>(smartexchange) trnbook:smartexchange ale$ conda list
# packages in environment at /Users/ale/bin/miniconda3/envs/smartexchange:
#
# Name                    Version                   Build  Channel
aspy.yaml                 1.3.0                      py_0    conda-forge
ca-certificates           2019.11.28           hecc5488_0    conda-forge
cached-property           1.5.1                      py_1  
certifi                   2019.11.28               py37_0    conda-forge
cffi                      1.13.2           py37h33e799b_0    conda-forge
cfgv                      2.0.1                      py_0    conda-forge
chardet                   3.0.4                    pypi_0    pypi
click                     7.0                        py_0    conda-forge
cryptography              2.8              py37hafa8578_1    conda-forge
editdistance              0.5.3            py37h0a44026_0    conda-forge
identify                  1.4.9                      py_0    conda-forge
idna                      2.8                      pypi_0    pypi
importlib_metadata        1.3.0                    py37_0  
libcxx                    4.0.1                hcfea43d_1  
libcxxabi                 4.0.1                hcfea43d_1  
libedit                   3.1.20181209         hb402a30_0  
libffi                    3.2.1                h475c297_4  
more-itertools            8.0.2                      py_0  
ncurses                   6.1                  h0a44026_1  
nodeenv                   1.3.4                      py_0    conda-forge
openssl                   1.1.1d               h0b31af3_0    conda-forge
pip                       19.3.1                   py37_0  
pre-commit                1.21.0                   py37_0    conda-forge
pycparser                 2.19                     py37_1    conda-forge
pyopenssl                 19.1.0                   py37_0    conda-forge
pysocks                   1.7.1                    py37_0    conda-forge
python                    3.7.6                h359304d_2  
python-dotenv             0.10.3                     py_0    conda-forge
pyyaml                    5.2              py37h1de35cc_0  
readline                  7.0                  h1de35cc_5  
requests                  2.22.0                   py37_1    conda-forge
setuptools                44.0.0                   py37_0  
six                       1.13.0                   py37_0  
sqlite                    3.30.1               ha441bb4_0  
tk                        8.6.8                ha441bb4_0  
toml                      0.10.0           py37h28b3542_0  
urllib3                   1.25.7                   py37_0    conda-forge
virtualenv                16.7.5                     py_0  
wheel                     0.33.6                   py37_0  
xz                        5.2.4                h1de35cc_4  
yaml                      0.1.7                hc338f04_2  
zipp                      0.6.0                      py_0  
zlib                      1.2.11               h1de35cc_3  
</code></pre>

<p>This is the project file structure:</p>

<pre><code>(smartexchange) trnbook:smartexchange ale$ tree
.
├── README.md
├── environment_smartexchange.yml
├── smartexchange
│   ├── Account
│   │   ├── admin_users.py
│   │   ├── balance.py
│   │   └── user.py
│   ├── Market
│   │   ├── admin_orders.py
│   │   ├── exchange.py
│   │   ├── market.py
│   │   └── trading.py
│   ├── PyRock_v1_API
│   │   ├── PyRock.py
│   │   ├── client.py
│   │   ├── example.py
│   │   └── example_pagination.py
│   ├── Utils
│   │   ├── _env
│   │   ├── const.py
│   │   ├── const_str.py
│   │   ├── curr.csv
│   │   ├── helper_logging.py
│   │   ├── helpers.py
│   │   ├── meta_admin.py
│   │   ├── meta_helpers.py
│   │   ├── pyrock_client.py
│   │   ├── settings.py
│   │   ├── update_consts.py
│   │   ├── validation_funds.py
│   │   └── validations.py
│   ├── __init__.py
│   └── tests
│       ├── __init__.py
│       ├── test_admin_users.py
│       ├── test_exchange.py
│       ├── test_logging.py
│       ├── test_market.py
│       ├── test_update_const.py
│       ├── test_user.py
│       ├── test_utils.py
│       └── test_validations.py
└── smartexchange.code-workspace

6 directories, 37 files
</code></pre>

<p>What could cause this behaviour? How do I fix it?</p>
",0,5306152,0,0
59802384,7077301,1/18/2020 16:11,2,131,<git><githooks>,How to limit the storage of a git repository?,"<p>I want to limit the storage of a git repository, to avoid a repository exceed a size limit.
I've seen this question (<a href=""https://stackoverflow.com/questions/47791509/how-to-prevent-a-git-repository-growing-above-a-maximum-size?noredirect=1&amp;lq=1"">How to prevent a Git repository growing above a maximum size?</a>), in which this problem is solved using a pre-receive hook. But, if I lock the push as this way, the user will cannot remove files to recover space.</p>

<p>I've thinking in modify this pre-receive, calculating a estimation of the size of the repository after the push. But I don't know how can I get this new size.
This estimation must consider the removed files, to allow the user can do a new push removing files to leave space.  </p>

<p>Other way could be use a post-receive, which revert the changes if the new size exceed the limit. But, if the push includes more than one commit, this revert can be complex.</p>

<p>How can I solve this?</p>
",6,7077301,0,0
3363262,327508,7/29/2010 14:01,3,2264,<git><githooks>,git hooks push and local commits,"<p>I have recently been writing git hooks for my project team. I would like to know if developers are making various commits locally, without following the standard commit message pattern. then they push those commits. Will there push fail because there commits weren't following the pattern?</p>

<p>The desired result would be they are able to commit locally as they wish, then are forced to follow a structure way when they push back to the main corporate branch.</p>

<p>Thoughts? Is this the best practice? </p>
",2,327508,0,0
3375283,327508,7/30/2010 20:53,0,2936,<python><git><ssh><jira><githooks>,git server side hooks,"<p>I am running into a problem when running the follow python script on the server looking for commit information for the push making sure it follows a particular syntax, I am unable to get input from the user which is why the username and password are hard coded. I am now also unable to get the list of commit message that occurred before this particular push.</p>

<pre><code>#!/usr/bin/python

import SOAPpy 
import getpass 
import datetime
import sys
import re
import logging
import os


def login(x,y):
    try:
        auth = soap.login(x, y)
        return auth
    except:
          sys.exit( ""Invalid username or password"")

def getIssue(auth,issue):
    try:
        issue = soap.getIssue(auth, issue)
    except:
        sys.exit(""No issue of that type found : Make sure all PRs are vaild jira PRs"")

def git_get_commit_msg(commit_id):
    return get_shell_cmd_output(""git rev-list --pretty --max-count=1 "" + commit_id)

def git_get_last_commit_id():
    return get_shell_cmd_output(""git log --pretty=format:%H -1"")

def getCommitText():
    commit_msg_filename = sys.argv[1]
    try:
        commit_msg_text = open(commit_msg_filename).read()
        return commit_msg_text
    except:
        sys.exit(""Could not read commit message"")

def git_get_array_of_commit_ids(start_id, end_id):
    output = get_shell_cmd_output(""git rev-list "" + start_id + "".."" + end_id)
    if output == """":
        return None
    commit_id_array = string.split(output, '\n')
    return commit_id_array

def get_shell_cmd_output(cmd):
    try:
        proc = subprocess.Popen(cmd, shell=True, stdout=subprocess.PIPE)
        return proc.stdout.read().rstrip('\n')
    except KeyboardInterrupt:
        logging.info(""... interrupted"")

    except Exception, e:
        logging.error(""Failed trying to execute '%s'"", cmd)

def findpattern(commit_msg):
    pattern = re.compile(""\w\w*-\d\d*"")
    group = pattern.findall(commit_msg)
    print group
    found = len(group)
    found =0
    issues = 0
    for match in group:
            auth = soap.login(jirauser,passwd)
            getIssue(auth,match)
            issues = issues + 1
            found+=1
    if found ==0:
        sys.exit(""No issue patterns found."")

    print ""Retrieved issues: "" + str(issues)  

def update():
    print sys.argv[2]
    print sys.argv[3]
    old_commit_id = sys.argv[2]
    new_commit_id = sys.argv[3]
    commit_id_array = git_get_array_of_commit_ids(old_commit_id, new_commit_id)
    for commit_id in commit_id_array:
        commit_text = git_get_commit_msg(commit_id)
        findpattern(commit_text)

soap = SOAPpy.WSDL.Proxy('some url')
# this line if for repointing the input from dev/null
#sys.stdin = open('/dev/tty', 'r') # this fails horribly.
#ask user for input
#jirauser = raw_inp
#(""Username for jira: "")
jirauser = ""username""
passwd = ""987654321""
#passwd = getpass.getpass(""Password for %s: "" % jirauser)
login(jirauser,passwd)
#commit_msg = getCommitText()
#findpattern(commit_msg)
update()
</code></pre>

<p>The intended goal of this code is to check the commits made locally, and to parse through them for the intended pattern, as well as checking the in jira if that PR exists. it is a server side hook that get activated on a push to the repository.</p>

<p>Any tips on writing python hooks would be appreciated.  Please and thank you.</p>
",4,327508,,
3542854,315927,8/22/2010 18:51,20,16738,<git><shell><githooks>,Calling 'git pull' from a git post-update hook,"<p>I have a central git repo set up using gitolite.</p>

<p>I want to set up a hook such that whenever a user pushes to the repo, it performs a pull elsewhere followed by some automated testing.</p>

<p>So far, I only want to it perform the pull.</p>

<p>In the hooks directory I created the following script names post-update:</p>

<pre><code>#!/bin/sh  
cd /home/git/www/epicac
git pull
</code></pre>

<p>When I invoke this script using ./post-update, it does exactly what I want.</p>

<p>However, whenever it's invoked automatically as I hook, I get: fatal: Not a git repository: '.'</p>

<p>Any idea why this might be happening?</p>
",2,315927,0,0
41217202,2430929,12/19/2016 6:53,0,89,<git><version-control><git-branch><githooks>,Get incoming branch from push in a Git hook,"<p>We are currently a team of 3 developers working in a project using gitlab.com</p>

<p>We have two servers, one for production and one for testing, both running on different droplets. </p>

<p>After we're done with our changes, we push to the testing server where we have this Git post-receive hook (it's a bare repository):</p>

<pre><code>#!/bin/sh
git --work-tree=/var/www/domain.com --git-dir=/var/repo/site.git checkout -f
</code></pre>

<p>We use a branch named 'testing' (which is checked out in the testing server), so everything works fine. After everything is OK, we merge that into master and then push to production. The issue here is that there might be sometimes where we need to create a branch to fix a bug in production but we don't want to upload the work in progress in our testing branch, and we also want to test out this <em>hotfix</em> branch in our testing server. </p>

<p>That's why I figured we could just checkout the incoming branch in the testing server, so everyone can test their code on a live server without always having to have the testing branch checked out. Can this be done? I tried googling the git environment var for the incoming branch which would make it trivial from there but didn't get any luck. I know we all could just push and the manually checkout the branch in  the testing server but that solution is not appealing. It would be more efficient to do just with git push and let the server handle the rest!</p>

<p>This is definitely not the best way for deployment using Git, so I'm all ears for suggestions!</p>
",2,2430929,,
3703159,171428,9/13/2010 18:10,81,36705,<git><githooks>,Git remote/shared pre-commit hook,"<p>With a one official repository as the remote, and multiple local repositories cloned from it, can a pre-commit hook be scripted on that main repository and be enforced on all clones of it?</p>
",2,171428,0,0
60170424,3413122,2/11/2020 13:51,1,1069,<git><githooks>,Automatically update local github repository on master branch change,"<p>I have a github repository that exists on several different hosts. I'm trying to figure out if there's some way to have two of the hosts automatically pull down any new changes to the master branch, without having to log in and issue the <code>pull</code> commands themselves, at the same time I still need to be able to push changes from those hosts on rare occasions.</p>

<p>From what I've seen I believe I should be looking at something with Hooks, but having a hard time understanding how they work. It seems like a server side <code>post-receive</code> may be what I'm looking for, but not sure.</p>

<p>Does anyone have any experience with getting this to work? </p>
",0,3413122,0,0
3858931,184600,10/4/2010 20:38,8,10542,<git><githooks><newline>,Git: convert carriage return \r to new line \n with git hook?,"<p>A fellow coder uses a Windows computer that is putting carriage returns everywhere in our source.</p>

<p>Is there a way to write a git hook that converts all <code>\r\n</code> to <code>\n</code>?</p>

<p><strong>Note</strong> I haven't used git hooks before, so a little extra hand-holding might go a long way :)</p>
",0,184600,0,0
41468839,885540,1/4/2017 16:33,1,311,<git><environment-variables><githooks>,Why is `GIT_EDITOR` set to `:` (colon) within my `commit-msg` hook?,"<p>I have a <code>commit-msg</code> hook that attempts to read the <code>GIT_EDITOR</code> environment variable.</p>

<p>In my shell <code>$GIT_EDITOR</code> is not set.</p>

<pre><code>$ echo $GIT_EDITOR

$ test -z ""$GIT_EDITOR"" &amp;&amp; echo ""GIT_EDITOR empty""
GIT_EDITOR empty
</code></pre>

<p>However within the <code>commit-msg</code> hook it appears to be set to <code>:</code>. Why is this? Is there away to prevent it from happening?</p>

<p>I've tested this on multiple machines and I'm seeing the same behaviour everywhere.</p>

<p>Reduced test case:</p>

<pre><code>$ mkdir /tmp/git-hook-editor-test &amp;&amp; cd /tmp/git-hook-editor-test/
$ git init
$ echo 'echo ""GIT_EDITOR ="" $GIT_EDITOR &amp;&amp; exit 1' &gt; .git/hooks/commit-msg
$ touch foo.txt
$ git add foo.txt
$ git commit -m 'foo' foo.txt
GIT_EDITOR = :
</code></pre>
",4,885540,,
41473107,1030345,1/4/2017 20:57,7,571,<laravel><composer-php><githooks>,Deployment of Laravel app breaks the app until composer install is manually run,"<p>I have a Laravel app using Passport to provide API authentication.  The app is deployed using git with a post-receive hook.  Part of the post-receive script is a composer install.  Ever since I've included Passport, whenever I deploy my app the API breaks on routes that are behind an authentication gate, with the stack trace pasted below.</p>

<p>When I go in to the app's server and run the exact same <code>composer install</code> command as is in my post-receive hook, then things work fine again.  </p>

<p>I don't see any error messages from git when the deploy happens, and it appears that I get the same output from <code>composer install</code> when the deploy happens and when I run the command manually.</p>

<p>Here's the deploy output from the <code>composer install</code> command:</p>

<pre><code>remote: Loading composer repositories with package information        
remote: Installing dependencies (including require-dev) from lock file        
remote: Nothing to install or update        
remote: Generating autoload files        
remote: &gt; php artisan clear-compiled        
remote: The compiled class file has been removed.        
remote: &gt; php artisan optimize        
remote: Generating optimized class loader        
remote: Compiling common classes
</code></pre>

<p>And here's what I see when I run the command manually:</p>

<pre><code>Loading composer repositories with package information
Installing dependencies (including require-dev) from lock file
Nothing to install or update
Generating autoload files
&gt; php artisan clear-compiled
The compiled class file has been removed.
&gt; php artisan optimize
Generating optimized class loader
Compiling common classes
</code></pre>

<p>What's going on here?  It seems that the deploy is installing an older version of some component of Passport that is then corrected after running <code>composer install</code> manually, but I am at a loss as to why this would be happening, and especially why it would happen each time I deploy a new update, even if there are no changes to composer.json or composer.lock.</p>

<p>Here's the stack trace referred to above:</p>

<pre><code>[2017-01-04 20:36:37] production.ERROR: exception 'BadMethodCallException' with message 'Call to undefined method Illuminate\Database\Query\Builder::withAccessToken()' in /home/portalvarius/app/production/vendor/laravel/framework/src/Illuminate/Database/Query/Builder.php:2450
Stack trace:
#0 [internal function]: Illuminate\Database\Query\Builder-&gt;__call('withAccessToken', Array)
#1 [internal function]: Illuminate\Database\Query\Builder-&gt;withAccessToken(Object(Laravel\Passport\Token))
#2 /home/portalvarius/app/production/vendor/laravel/framework/src/Illuminate/Database/Eloquent/Builder.php(1469): call_user_func_array(Array, Array)
#3 [internal function]: Illuminate\Database\Eloquent\Builder-&gt;__call('withAccessToken', Array)
#4 [internal function]: Illuminate\Database\Eloquent\Builder-&gt;withAccessToken(Object(Laravel\Passport\Token))
#5 /home/portalvarius/app/production/bootstrap/cache/compiled.php(11801): call_user_func_array(Array, Array)
#6 /home/portalvarius/app/production/vendor/laravel/passport/src/Guards/TokenGuard.php(139): Illuminate\Database\Eloquent\Model-&gt;__call('withAccessToken', Array)
#7 /home/portalvarius/app/production/vendor/laravel/passport/src/Guards/TokenGuard.php(139): App\Models\User-&gt;withAccessToken(Object(Laravel\Passport\Token))
#8 /home/portalvarius/app/production/vendor/laravel/passport/src/Guards/TokenGuard.php(90): Laravel\Passport\Guards\TokenGuard-&gt;authenticateViaBearerToken(Object(Illuminate\Http\Request))
#9 /home/portalvarius/app/production/vendor/laravel/passport/src/PassportServiceProvider.php(251): Laravel\Passport\Guards\TokenGuard-&gt;user(Object(Illuminate\Http\Request))
#10 [internal function]: Laravel\Passport\PassportServiceProvider-&gt;Laravel\Passport\{closure}(Object(Illuminate\Http\Request))
#11 /home/portalvarius/app/production/vendor/laravel/framework/src/Illuminate/Auth/RequestGuard.php(53): call_user_func(Object(Closure), Object(Illuminate\Http\Request))
#12 /home/portalvarius/app/production/bootstrap/cache/compiled.php(544): Illuminate\Auth\RequestGuard-&gt;user()
#13 /home/portalvarius/app/production/bootstrap/cache/compiled.php(548): Illuminate\Auth\RequestGuard-&gt;check()
#14 /home/portalvarius/app/production/app/Http/Middleware/Authenticate.php(20): Illuminate\Auth\RequestGuard-&gt;guest()
#15 /home/portalvarius/app/production/bootstrap/cache/compiled.php(10052): App\Http\Middleware\Authenticate-&gt;handle(Object(Illuminate\Http\Request), Object(Closure), 'api')
#16 /home/portalvarius/app/production/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php(33): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}(Object(Illuminate\Http\Request))
#17 /home/portalvarius/app/production/Api/V1/Http/Middleware/LogApiAccess.php(37): Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}(Object(Illuminate\Http\Request))
#18 /home/portalvarius/app/production/bootstrap/cache/compiled.php(10052): Api\V1\Http\Middleware\LogApiAccess-&gt;handle(Object(Illuminate\Http\Request), Object(Closure))
#19 /home/portalvarius/app/production/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php(33): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}(Object(Illuminate\Http\Request))
#20 /home/portalvarius/app/production/bootstrap/cache/compiled.php(10160): Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}(Object(Illuminate\Http\Request))
#21 /home/portalvarius/app/production/bootstrap/cache/compiled.php(10052): Illuminate\Routing\Middleware\SubstituteBindings-&gt;handle(Object(Illuminate\Http\Request), Object(Closure))
#22 /home/portalvarius/app/production/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php(33): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}(Object(Illuminate\Http\Request))
#23 /home/portalvarius/app/production/vendor/laravel/framework/src/Illuminate/Routing/Middleware/ThrottleRequests.php(49): Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}(Object(Illuminate\Http\Request))
#24 /home/portalvarius/app/production/bootstrap/cache/compiled.php(10052): Illuminate\Routing\Middleware\ThrottleRequests-&gt;handle(Object(Illuminate\Http\Request), Object(Closure), '60', '1')
#25 /home/portalvarius/app/production/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php(33): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}(Object(Illuminate\Http\Request))
#26 /home/portalvarius/app/production/bootstrap/cache/compiled.php(10037): Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}(Object(Illuminate\Http\Request))
#27 /home/portalvarius/app/production/bootstrap/cache/compiled.php(8339): Illuminate\Pipeline\Pipeline-&gt;then(Object(Closure))
#28 /home/portalvarius/app/production/bootstrap/cache/compiled.php(8330): Illuminate\Routing\Router-&gt;runRouteWithinStack(Object(Illuminate\Routing\Route), Object(Illuminate\Http\Request))
#29 /home/portalvarius/app/production/bootstrap/cache/compiled.php(8321): Illuminate\Routing\Router-&gt;dispatchToRoute(Object(Illuminate\Http\Request))
#30 /home/portalvarius/app/production/bootstrap/cache/compiled.php(2575): Illuminate\Routing\Router-&gt;dispatch(Object(Illuminate\Http\Request))
#31 /home/portalvarius/app/production/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php(53): Illuminate\Foundation\Http\Kernel-&gt;Illuminate\Foundation\Http\{closure}(Object(Illuminate\Http\Request))
#32 /home/portalvarius/app/production/bootstrap/cache/compiled.php(3371): Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}(Object(Illuminate\Http\Request))
#33 /home/portalvarius/app/production/bootstrap/cache/compiled.php(10052): Illuminate\Foundation\Http\Middleware\CheckForMaintenanceMode-&gt;handle(Object(Illuminate\Http\Request), Object(Closure))
#34 /home/portalvarius/app/production/vendor/laravel/framework/src/Illuminate/Routing/Pipeline.php(33): Illuminate\Pipeline\Pipeline-&gt;Illuminate\Pipeline\{closure}(Object(Illuminate\Http\Request))
#35 /home/portalvarius/app/production/bootstrap/cache/compiled.php(10037): Illuminate\Routing\Pipeline-&gt;Illuminate\Routing\{closure}(Object(Illuminate\Http\Request))
#36 /home/portalvarius/app/production/bootstrap/cache/compiled.php(2519): Illuminate\Pipeline\Pipeline-&gt;then(Object(Closure))
#37 /home/portalvarius/app/production/bootstrap/cache/compiled.php(2503): Illuminate\Foundation\Http\Kernel-&gt;sendRequestThroughRouter(Object(Illuminate\Http\Request))
#38 /home/portalvarius/app/production/public/index.php(54): Illuminate\Foundation\Http\Kernel-&gt;handle(Object(Illuminate\Http\Request))
#39 {main}        
</code></pre>
",4,1030345,0,0
60187792,7757474,2/12/2020 11:55,0,231,<git><githooks><husky><git-husky>,"GIT: How to trigger an npm script, after git push of particular file in the remote branch?","<p>I have a requirement that once I push a csv file to remote branch, it should call an npm script to process the data from CSV file.</p>

<p>Please advice which would be the best way to do this.</p>
",0,7757474,,
60189691,3691686,2/12/2020 13:40,0,532,<git><githooks>,Get commit message on post-commit hook and reuse it,"<p>Here's my post-commit file:</p>

<pre><code>#!/bin/sh
unset GIT_INDEX_FILE

git --work-tree=../foo2 --git-dir=/m/Downloads/foo1/.git checkout -f

cd ../foo2/
git add .
git commit -m $1
</code></pre>

<p>When a commit is made on <code>foo1</code> repository, I need to move commited files to <code>foo2</code> repository and commit these files using the same commmit message.</p>

<p>The moving files steps is working fine. My problem now is get commit message.</p>
",2,3691686,,
60310504,1452257,2/19/2020 22:51,0,31,<git><git-merge><githooks>,Git hook to detect if fetched repo contains file and stop merge,"<p>Although not ideal, our build process leaves our remote git repo in an ""out-of-sync"" state for a few minutes, where the source code doesn't match the compiled code / DB schema dump, which are committed to git.  We've explored ways to prevent this, but it's not possible to do it in the near future.</p>

<p>We'd like to implement a simple git hook that warns any developer when they've pulled down the repo in this state. It can be done simply by detecting the presence of one or more files. How would we implement a hook that runs on <code>git merge</code> (and thereby also <code>git pull</code>), which will stop the merge and print a terminal message if any of these files exist in the repo?</p>
",0,1452257,,
22632848,76593,3/25/2014 11:13,3,801,<git><vim><githooks>,Change the position of the cursor in a git commit template,"<p>I'm currently using a git commit template (stored in a file) and a prepare-commit-msg hook to replace a placeholder in the commit template with the current branch name (that is actually is the identifier of the story in our bug tracking of choice). The output of this process is opened in VIM.</p>

<p>My commit message will start with [story_identifier]; is there a way to place the VIM cursor after this identifier? </p>
",0,76593,,
60313577,11896442,2/20/2020 5:41,1,6378,<bash><git><githooks><pre-commit-hook>,Pre-commit hook permission denied inside script,"<p>I have following pre-commit hook:</p>

<pre class=""lang-sh prettyprint-override""><code>#!/bin/bash

set -e

result=''

for file in $(find rest/src/main/groovy/ru/naumen/modules -name '*.groovy' | sort); do
    filename=basename ""$file""
    result+=echo ""${filename//.groovy/}"",
done

result+='smpUtils'

sed -i -r ""s|modules = .*|modules = $result|g"" rest/smpsync.ini

git add rest/smpsync.ini
</code></pre>

<p>I'm getting <code>Permission denied</code> error on line 8</p>

<pre class=""lang-sh prettyprint-override""><code>filename=basename ""$file""
</code></pre>

<p>And I'm not able to determine the reason of it. </p>

<p>Hook itself has execution rights (<code>chmod +x .git/hooks/pre-commit</code>)</p>

<p>Whole directories/files tree in <code>./rest/src/main/groovy/ru/naumen/modules</code> has read/write rights and belongs to my user.</p>
",2,11896442,0,0
4043609,113910,10/28/2010 14:00,95,23760,<git><githooks>,"getting ""fatal: not a git repository: '.'"" when using post-update hook to execute 'git pull' on another repo","<p>I'm new to git so I apologize (and please correct me) if I misuse terminology here, but I'll do my best.</p>

<p>I'm trying to set up a bare git repo (hub) and a development site working copy (prime) on a web server. I've tried to pattern it after <a href=""http://joemaller.com/990/a-web-focused-git-workflow/"" rel=""noreferrer"">this article</a>. I want the development working copy to be updated whenever the hub repo is pushed to. I'm under the impression that the proper hook for this is <code>post-update</code>, which I have created like so:</p>

<pre><code>#!/bin/sh
whoami
cd /path/to/working-copy/
RET=`git pull`
echo $RET
</code></pre>

<h2>Update</h2>

<p>When I push changes from my local repo to the bare hub I get the following output from the post-update script:</p>

<pre><code>remote: sites
remote: fatal: Not a git repository: '.'
</code></pre>

<p>However if I SSH into the server as user 'sites' and execute this script manually it works great Any ideas as to what might be going wrong with this hook or script?</p>
",0,113910,0,0
22661335,1214258,3/26/2014 12:38,4,1568,<git><githooks><pre-commit>,"my git pre-commit hook is not executing Astyle, and isnt setting variables. why?","<p>IM writting a simple git pre-commit hook to run Astyle (a code beautifier) in the files that are going to be commited. Here is the code:</p>

<pre><code>#!/bin/sh
echo ""git diff:"" 
FICHEROS=`git diff --name-only`
if [ -z ""${FICHEROS}"" ]; then
  echo ""Files not found""
else
  echo ""files are:""
  echo ""$FICHEROS"" 
  cp $FICHEROS ${FICHEROS}_copy
  echo ""Running astyle""
  /home/robgon/astyle/build/gcc/bin/astyle --indent=force-tab --pad-oper --pad-paren --delete-empty-lines --suffix=none --indent-namespaces --indent-col1-comments -n ${FICHEROS}_copy
  echo ""Formatted""
fi
</code></pre>

<p>When I try to commit a file, named ""file1.c"" with a git commit -a -m ""test1"", for example, I get in the console:</p>

<pre><code>git diff:
Files not found
[master d3d2526] test1
 1 file changed, 1 insertion(+), 1 deletion(-)
</code></pre>

<p>So, the git diff --name-only is not setting the output in FICHEROS. If the pre-commit only try to run astyle, the script skips the output and doesnt format the file...</p>

<p>If i run the .git/hooks/pre-commit from my console I get:</p>

<pre><code>git diff:
files are:
file1.c
Running astyle
Formato     /home/robgon/gitTuto/gitRepo1/proj/file1.c_copy
Formatted
</code></pre>

<p>Why git cant execute astyle and set variables in the pre-commit script, and when i run the pre-commit from my console, it works?</p>
",0,1214258,,
22762724,507564,3/31/2014 13:23,2,2956,<git><jenkins><hudson><githooks>,Control polling frequency with Jenkins Git polling + hook,"<p>After experiencing many failures in Jenkins Git plugin native polling, and reading <a href=""http://kohsuke.org/2011/12/01/polling-must-die-triggering-jenkins-builds-from-a-git-hook/"" rel=""nofollow"">Kohsuke blogpost</a>, I've integrated git hook in our Stash server that triggers any Jenkins job that uses git repository and has polling configured.</p>

<p>Problem is:</p>

<ul>
<li>Git hooks triggers my job on each commit</li>
<li>I have some expensive configurations that should only run once a day (poll changes once a day).</li>
</ul>

<p>What can I do?</p>
",1,507564,,
41745518,1709708,1/19/2017 15:24,0,55,<git><versioning><githooks>,Which git hooks to install for automatic version numbering,"<p>I have a script writing/updating a file with versioning info for my software. It is based on git describe and basically just counts commits since the last tag. Is there any best-practice in which git hooks to run this script in so that all developers always have up-to-date versioning info before compilation independent of the specific workflow they updated their working copy with? I'm especially thinking about the very typical ones:</p>

<ul>
<li>committing/pushing</li>
<li>pulling</li>
<li>merging</li>
<li>initially cloning</li>
</ul>

<p>and I'm sure I'm missing some. Is there a single hook which can cover all of these cases or do I have to install multiple ones? Is there any natural best choice? Does it make sense to put the generated versioning file under version control or not?</p>
",0,1709708,,
4293823,509490,11/27/2010 20:43,1,1490,<git><hook><githooks><git-post-receive>,How to properly use post-receive hook?,"<p>My directory structure is:</p>

<p>~/parent.git/.git/hooks/post-receive</p>

<p>The post-receive hook looks like:</p>

<pre><code>#!/bin/sh
git checkout -f
</code></pre>

<p>When I push into parent.git, the script does not run.  I can't figure out the problem, as every bit of the internet says this should work.</p>

<p>I chmod'd post-receive, so I know that is not the problem.  Any help is much appreciated.</p>
",1,509490,,
41753780,3726610,1/19/2017 23:48,1,152,<javascript><git><githooks>,Git hook precommit doesn't working,"<p>It is a git hook for precommit 
It is assumed to execute esformatter command for every file modified (staged),</p>

<pre><code>#!/bin/sh

for fil in $(git diff --name-only --staged | grep "".js""); do
 esformatter -i$ fil &amp; git add $fil;
done

git commit -m ""Adding format to files""
</code></pre>

<p>Actually I wanted that this code is executed in the same commit but I don't know how to do it.
The code actually works until the done part. But the files are not added to the commit obviusly, so that's why I need the commit part.</p>

<p>Regards</p>
",2,3726610,0,0
38658174,5784831,7/29/2016 11:53,2,163,<r><windows><git><rstudio><githooks>,git commit throws error '[<-',"<p>Does anybody have an idea, how I can fix this? <code>git commit -a -m ""message here</code> works fine for other projects and previous commits this day were all ok.
Now, it throws the error:</p>

<blockquote>
  <p>Error in <code>[&lt;-</code>(<code>*tmp*</code>, 1, ""Date"", value = ""2016-07-29"") :<br>
  Indizierung außerhalb der Grenzen<br>
  Ausführung angehalten</p>
</blockquote>

<p>The error message is something like:</p>

<blockquote>
  <p>index out of bounds</p>
</blockquote>

<p>Please let me know if you need any further information.</p>

<p>Here is a screenshot: <a href=""https://i.stack.imgur.com/9yR9S.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/9yR9S.jpg"" alt=""enter image description here""></a></p>

<p><strong>Edit</strong>: @Carsten guessed right! I have a hook running. But I cannot see why it should stop working from one to another minute... (It still does not work)</p>

<pre><code>#!C:/R/R-3.2.2/bin/x64/Rscript

# License: CC0 (just be nice and point others to where you got this)
# Author: Robert M Flight &lt;rflight79@gmail.com&gt;, github.com/rmflight
inc &lt;- TRUE # default
# get the environment variable and modify if necessary
tmpEnv &lt;- as.logical(Sys.getenv(""inc""))
if (!is.na(tmpEnv)) {
  inc &lt;- tmpEnv
}

# check that there are files that will be committed, don't want to increment version if there won't be a commit
fileDiff &lt;- system(""git diff HEAD --name-only"", intern = TRUE)

if ((length(fileDiff) &gt; 0) &amp;&amp; inc) {

  currDir &lt;- getwd() # this should be the top level directory of the git repo
  currDCF &lt;- read.dcf(""DESCRIPTION"")
  currVersion &lt;- currDCF[1,""Version""]
  splitVersion &lt;- strsplit(currVersion, ""."", fixed = TRUE)[[1]]
  nVer &lt;- length(splitVersion)
  currEndVersion &lt;- as.integer(splitVersion[nVer])
  newEndVersion &lt;- as.character(currEndVersion + 1)
  splitVersion[nVer] &lt;- newEndVersion
  newVersion &lt;- paste(splitVersion, collapse = ""."")
  currDCF[1,""Version""] &lt;- newVersion
  currDCF[1, ""Date""] &lt;- strftime(as.POSIXlt(Sys.Date()), ""%Y-%m-%d"")
  write.dcf(currDCF, ""DESCRIPTION"")
  system(""git add DESCRIPTION"")
  cat(""Incremented package version and added to commit!\n"")
}
</code></pre>
",4,5784831,,
57615881,5308397,8/22/2019 19:22,2,778,<github><jira><githooks><github-enterprise>,Create git pre-receive hook to link git commits with jira id,"<p>I am trying to create a pre-receive hook in github enterprise. I want to put a check on commit message, that it should contain a jira id (say 'RP-123') along with some text. And that commit shoould be visible in jira as a link to github. </p>

<p>Can someone please help me with this.
Thanks!</p>

<p>I have integrated jira with github by adding it to OAuth Apps under developer settings. 
I tried to add an executable script under /git/hooks folder to verify commit message, but this is going to do only client side verification since .git folder is not version controlled in github. 
Can you please let me know how to add server side verification for commit message and how jira will be linked to those specific commits</p>
",0,5308397,,
38714231,6654829,8/2/2016 7:26,2,964,<git><githooks><tagging><git-tag>,Analogue of git tag hook,"<p>Do you have any ideas how can I fire a script while I'm making tagging?</p>

<p>I know that currently there is no a separate git tag hook but it should be some way how to do that. For instance, try to use <code>pre-push</code> hook while you push your tags or something similar. Did anyone do such things? </p>
",0,6654829,0,0
38747618,3142695,8/3/2016 15:19,2,806,<git><makefile><phantomjs><mocha.js><githooks>,Git hooks for executing mocha-tests before commit or merge,"<p>I'm not quite sure, if this can be done with git hooks - that's why I split this question into three parts:</p>

<ol>
<li>First do a test (mocha/phantomjs/meteor). If it passes, a commit can be done</li>
</ol>

<p>For that I tried something like this:</p>

<p><strong>hooks/pre-commit</strong></p>

<pre><code>#!/bin/bash
// First check if current branch is 'development'
meteor test --once --driver-package dispatch:mocha-phantomjs
chimp --ddp=http://localhost:3000 --mocha --path=tests --browser=phantomjs
</code></pre>

<p>So what I would expect is, that the tests are executed first. If any test fails, no commit will be done, if all passes, the commit will be executed.
As you see, I'm not very familiar with bash-scripts (I'm using MacOS). That's why I need you help to get this simple script working.</p>

<p>The Mocha docs (<a href=""https://mochajs.org/"" rel=""nofollow"">https://mochajs.org/</a>) say there is a 'proper exit status for CI support'. So if I understand this correctly it will do a <code>exit 1</code> if any test fails.</p>

<ol start=""2"">
<li>Just do tests if merging from <code>development</code> to <code>master</code> branch</li>
</ol>

<p>As the tests take some minutes, I'm thinking of it would be a bit smarter if they will only be run, before the development branch gets merged into the master branch. 
So on master branch there is alwys just tested code. But how do I get the info which branch is the current one? And also I just found the info, that there is only a <code>post-merge</code>, but no <code>pre-merge</code> hook.</p>

<ol start=""3"">
<li>Do a <code>Makefile</code> deploy after merging</li>
</ol>

<p>After successful merging I would like to execute <code>make</code> to do the deploy to the server. Therefore I would use the <code>post-merge</code>-hook.</p>

<p><strong>hooks/post-merge</strong></p>

<pre><code>#!/bin/bash
// be sure we are in 'master' branch
make
</code></pre>

<p>But how do I know if the merge was successful (or will this be checked by git?) and how do I execute the makefile correctly?</p>

<p>So basically I'm struggling with the correct bash scripts...</p>
",0,3142695,,
49249945,517294,3/13/2018 6:52,8,996,<git><commit><githooks><pre-commit-hook><pre-commit>,git clone different repository in git hooks creating trouble,"<p>We have a specific requirement in which we have to push all files which arrive for being committed to a certain branch.</p>

<p>We are planning to achieve this via git hooks specifically commit-msg hook.</p>

<p>While doing so what we do is we clone branch to temporary location (/tmp/) and then in git commit-msg hook, attempt to commit arrived files to certain branch.</p>

<p>But what happens now is we see all files as deleted in /tmp/.</p>

<p>Crude commit-msg script is as under:-</p>

<pre><code>#!/bin/bash
#
#!/usr/bin/env bash

#git config credential.helper store
REPOSRC=""https://&lt;USER&gt;:&lt;PASS&gt;@&lt;REPO_URL&gt;""
LOCALREPO=""&lt;LOCAL_REPO_DIR&gt;""

echo ""Pulling code to temporarry location"";

cd /tmp &amp;&amp; git clone ""${REPOSRC}"" || (cd ""${LOCALREPO}""; git pull;)

#here when I navigate to /tmp/&lt;LOCALREPO&gt; all files are listed as DELETED

git diff --cached --name-status | while read st file; do

    echo ""file == $file and status == $st"";

                    if [ ""$st"" == ""A"" ]; then
                        cd ""${LOCALREPO}"" &amp;&amp; git add ""$file"" &amp;&amp; git commit ""$file"" -m ""$COMMIT_MSG"" &amp;&amp; git push origin ""$branch""
                    else
                        cd ""${LOCALREPO}"" &amp;&amp; git commit ""$file"" -m ""$COMMIT_MSG"" &amp;&amp; git push origin ""$branch""
                    fi
done
</code></pre>

<p>What can be the root cause for this?</p>

<p><strong><em>EDIT:</em></strong></p>

<p><strong>GIT_INDEX_FILE</strong> shows path of index file from which <strong>commit was initiated</strong> and not <strong>/tmp/</strong> path. Is there any way to change this variable?
Also index file prints something like <strong>next-index-32419.lock</strong>.
Regards</p>
",5,517294,0,0
14282083,1631313,1/11/2013 16:10,6,6719,<php><git><githooks>,use git smudge/clean to replace file contents,"<p>I am attempting to use git to manage deployment to my live website.
The problem that I'm having is that I have a couple of settings files that I don't want to be updated when I push to production</p>

<p>what I'm looking at doing is either using a hook or smudge/clean to change the file contents for example from</p>

<pre><code>&lt;?php
define('DB_NAME', 'live');
define('DB_HOST', '127.0.0.1');
define('DB_USER', 'live_user');
define('DB_PASS', 'livePass');
</code></pre>

<p>to</p>

<pre><code>&lt;?php
define('DB_NAME', 'local');
define('DB_HOST', '127.0.0.1');
define('DB_USER', 'local_user');
define('DB_PASS', 'localPass');
</code></pre>

<p>Is there anyone who could talk me through the process please</p>

<p>I did wonder about using post-receive hook and a shell script to replace the contents, but ideally I want the contents in the repo to be changed before I run git checkout -f 
not changed in the live copy after</p>
",0,1631313,0,0
49289296,8180069,3/14/2018 23:37,1,211,<git><githooks>,call .exe in git pre-commit hook on changed files,"<p>I have an application (.exe) I wrote which takes a file path and performs some custom formatting on the file passed in.  I would like to know if there's a way using git pre-commit hooks to pass in the changed files being committed to my .exe so they can be formatted before going to the git repository.  If so how?  I don't know php so if there's a way to do this using c# or .bat file I'd prefer this.  If there's a different better approach i'm open to that also.</p>
",0,8180069,0,0
66848561,3494947,3/29/2021 3:54,1,273,<git><git-merge><githooks>,"Is there a way to get a pre-merge hook, or similar behavior, from git?","<p>I really could use a pre-pull/merge hook. It isn't because of the repo itself. It's because of what the repo interacts with.  Equivalent behavior would be fine.</p>
<p>Example: Our repo controls a docker-compose file. If the name and/or tag for an image inside the file changes while the stack it controls is up, then docker-compose won't be able to bring down the stack/container. It isn't desirable to always require the stacks to come down before pulling.</p>
<p>What I would like is to have a pre-merge hook that checks to see if one of the relevant files would be changed in the merge.  If so, it writes a message to the console like: &quot;If your stacks are up, you should really take them down now (using stop.sh).  Otherwise, you should merge later.  Would you like to continue [C] or abort [A]?&quot;  The dev only has to enter &quot;stop.sh&quot; in another terminal and then hit C.  This also alerts the dev that one or more of the stacks must have changed.  I could even give a convenient list.</p>
<p>Note that we sometimes have more than one docker-compose file for a stack, and different sets of compose files might be invoked in different combinations, depending on the situation.  The scripts that decide which ones to invoke might change, too.  All these file changes would have to be tracked and handled in concert.</p>
<p>The docs say pre-merge-commit runs after the merge has happened.  I could have the hook check what has changed, offer to the dev to force an abort, then have the dev take the stacks down, then merge again.  This is not terrible, but the devs will prefer the pre-merge option.  Is this doable?</p>
<p>My best idea for a workaround is to use a regex script to take down any dangling containers from the stack that aren't the current ones.</p>
<p>If there is some other way to handle this sort of situation, let me know. If you want to write in a pre-pull/merge hook, I volunteer to test!</p>
<p>PS - yes, I should teach all the peeps to inspect the fetch before they merge, but they're overworked humans, and I want to be nice.</p>
",4,3494947,,
32148204,71208,8/21/2015 19:45,10,263,<git><githooks>,How can I preserve the proposed commit message when a hook fails?,"<p>When I add a commit-msg hook which exits with 1 to indicate some error,
the original git commit message is gone/not used when I run git commit again.</p>

<p>Is there a way to retain the old commit message so that I do not have to 
enter the whole message again but just edit the old commit message instead?</p>
",7,71208,0,0
14667128,417501,2/2/2013 22:18,3,342,<git><githooks>,How can I automagically make a checkout upon push?,"<p>Consider the following situation:</p>

<p>I have a git repository foo.git that contains code of a javascript project. In this repository there is a branch <em>production</em> that contains the state of the code as served by a web-server which fetches the code from <code>/var/www/foo</code>. This repository is the master repository for the project. Everybody pushes and pulls from/to it.</p>

<p>Is it possible to have <code>/var/www/foo</code> updated to a checkout of <em>production</em> whenever someobody pushes to that particular branch? You may assume that the git daemon (or the user git which is the user all people log in to to connect via SSH) is entitled to write to said directory.</p>
",8,417501,0,0
68189970,672441,6/30/2021 7:09,0,55,<git><msbuild><githooks><msbuild-task>,MSBuild: How do I CopyFiles to DestinationFolder that is determined by output of executing a command?,"<p>I need to copy a specific git hook file into the local repo on MSBuild to enforce some client side validation which work fine in general, however, I noticed there are exceptional cases where worktrees are setup slightly different from the suggested config. This can be get around if the <code>DestPath</code> below is acquire when the task is being execute from <code>git rev-parse --git-path hooks</code>.</p>
<pre><code>&lt;Target Name=&quot;CopyFiles&quot; AfterTargets=&quot;Build&quot;&gt;
  &lt;Copy SourceFiles=&quot;@(HookFiles)&quot;
        DestinationFolder=&quot;$(DestPath)&quot; 
        OverwriteReadOnlyFiles=&quot;True&quot;
/&gt;
</code></pre>
<p>My guess is to add an Exec task in front of Copy to collect the variable but I am not sure how to make the output available in the Copy task.</p>
<pre><code>&lt;Exec Command=&quot;git rev-parse --git-path hooks&quot;/&gt;
</code></pre>
",0,672441,,
49994976,420628,4/24/2018 6:41,9,2642,<continuous-integration><travis-ci><githooks><git-husky>,Why test in continuous integration if you can test on pre-commit and pre-push git hooks?,"<p>What is the point of using a Continuous Integration system to test your code if you already have a system like Husky running that allows you to test you code before pre-commit and pre-push?</p>
",0,420628,0,0
68254726,13961485,7/5/2021 10:40,0,1139,<git><gitlab><githooks>,Get user and commit details in git pre-receive hooks,"<p>I am new to git and git-hooks. I am tryig to validate every push that is made and for that I need two things:-</p>
<ol>
<li>User's details (email-id and name) who made the push</li>
<li>Commit messages of all the commits in that push</li>
</ol>
<p>I need to do that using Git's pre-receive hook, but I am not able to any of the above two mentioned things.</p>
<p>I have been searching this issue on SO, githooks's doc and other sites but nothing worked for me.</p>
<p>Thanks in advance.</p>
",2,13961485,,
68256155,1824120,7/5/2021 12:29,-1,58,<git><hash><githooks>,Prevent commiting in two directiories in the same branch,"<p>I have a git repository containing code in the sources directory and containing the tests in the tests directory.</p>
<p>I would like that a developer can only commit to the sources OR the tests directory within the same branch. So if a developer startet to work in sources he is not allowed anymore to also contribute tests and vice versa.</p>
<p>For another feature that is located in another branch the roles of the persons can change.</p>
<p>I am thinking about git-hooks, especially about a pre-commit-hook on client (I know the developers can work around) and also a pre-push on server (developers do not have access to the hooks directory).</p>
<p>Within the git hook script I would like to get all existing commits (how do I get all hashes of a branch?), check them if there are already changes in the other directory then that which has new changes or if there are new changes in both directories (sources and tests).</p>
<p>Is there a better solution to achieve my needs?</p>
<p><strong>Update:</strong>
The project is located in a SIL-4 environment (see <a href=""https://en.wikipedia.org/wiki/Safety_integrity_level"" rel=""nofollow noreferrer"">https://en.wikipedia.org/wiki/Safety_integrity_level</a> ), therefore the discussion about the sense of the separation of power of the developers and testers should not be part here. It is simply a requirement and can't be changed.</p>
",3,1824120,,
50003965,6924723,4/24/2018 14:15,1,846,<git><git-bash><githooks>,Make pre-push hook changes part of pushed content to git server,"<p>I have a script which executes on git pre-push hook. Inside there is PowerShell script which modifies project file in repository. This file will be properly modified localy but that change won't end up on the git server.</p>

<p>Here is a script:</p>

<pre><code>#!C:/Program\ Files/Git/bin/sh.exe
branch=`git rev-parse --abbrev-ref HEAD`

if [ $branch = ""development"" ]; 
then
    exec powershell.exe -NoProfile -ExecutionPolicy Bypass -File update_version.ps1 -mode dev
pwd
fi

exit 
</code></pre>
",3,6924723,,
50009171,4661576,4/24/2018 19:07,2,1194,<git><githooks><git-commit><pre-commit-hook>,Custom Message to be displayed after every git commit,"<p>We have recently migrated our git repository from Gitlab to Bitbucket. </p>

<p>Now i want to make sure that the team needs to commit to both repositories until Gitlab gets decommissioned. </p>

<p>By just telling them, it will not be sufficient as one might forget to push to the bitbucket which has the new repository and it might lead to production issues. </p>

<p>What i want to do is to have some kind of message like <strong>""please push to the BitBucket repository as well to avoid the conflicts""</strong> displayed on user's machine when he tried to make any commit in Gitlab(which is the current repo) so that he is reminded of it every time when he commits to Gitlab. </p>

<p>Can someone please tell me how to achieve this with the help of git hooks.</p>
",4,4661576,0,0
68319270,5161457,7/9/2021 15:28,0,320,<git><githooks><automated-deployment>,Prevent wp-config.php (database connection) from being overwritten upon git automated deployments,"<p>I'm having trouble getting git to ignore my <code>wp-config.php</code> file on deployments. I set up automated deployments with git (it's a really great tool, if you don't know about it you can read about it <a href=""https://anchor.host/automatic-git-deploy-with-kinsta-via-ssh/"" rel=""nofollow noreferrer"">here</a> - you don't need to be using kinsta hosting like the article indicates, although your file structure may vary).</p>
<p>But every time I push changes, it overwrites my <code>wp-config.php</code> file, causing a database error on the site. This happens because the git hook used for deployments introduces the changes, then checks out any local changes. Since this is a staging site, it uses the repo from production, but has different values in <code>wp-config.php</code>, in order to connect to its own database.</p>
<p>What I've tried so far:</p>
<ul>
<li>committing the changes to wp-config on the staging server, so it won't get checked out by the git hook</li>
<li>adding <code>wp-config.php</code> to <code>.gitignore</code> (I should've done originally) on staging server</li>
<li>adding <code>wp-config.php</code> to <code>.gitignore</code> (I should've done originally) on development and pushing to staging</li>
<li>adding a line to the <code>post-receive</code> hook to checkout the changes to <code>wp-config.php</code> after the deployment is performed</li>
</ul>
<p>Here's my <code>post-receive</code> hook file (client name replaced with XXXXX):</p>
<pre><code>#!/bin/bash
TARGET=&quot;/www/XXXXX_975/public&quot;
GIT_DIR=&quot;/www/XXXXX_975/private/XXXXX.git&quot;
BRANCH=&quot;master&quot;

while read oldrev newrev ref
do
        # only checking out the master (or whatever branch you would like to deploy)
        if [[ $ref = refs/heads/$BRANCH ]];
        then
                echo &quot;Ref $ref received. Deploying ${BRANCH} branch to staging...&quot;
                git --work-tree=$TARGET --git-dir=$GIT_DIR checkout -f
                git checkout /www/XXXXX_975/public/wp-config.php
        else
                echo &quot;Ref $ref received. Doing nothing: only the ${BRANCH} branch may be deployed on this server.&quot;
        fi
done
</code></pre>
<p>The site lives in the <code>public</code> directory. The repo is in a different directory <code>private</code> so as not to be overwritten by deployments.</p>
<p>This is a Wordpress website, hosted on Kinsta. Let me know if there's any information I forgot to include.</p>
<p>Thank you!</p>
",6,5161457,,
50016710,4928732,4/25/2018 7:46,0,1194,<maven><maven-plugin><githooks><checkstyle><maven-checkstyle-plugin>,Is there a maven-git-checkstyle plugin that runs checkstyle goal on git staged files alone?,"<p>We are working on a legacy app code base and doing incremental development to improve its code quality.
When we ran the maven checkstyle goal on the project we got tons of errors. To address the issues incrementally, we are taking an approach to run checkstyle only on the files which each developer is editing and before committing.<br/>
The options I ran into while search for a solution are pre-commit hooks
which executes a maven goal before committing the code.
<br/>References:<br/>
<a href=""https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks"" rel=""nofollow noreferrer"">https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks</a> <br/>
<a href=""https://hdpe.me/post/maven-checkstyle-pre-commit-hook/"" rel=""nofollow noreferrer"">https://hdpe.me/post/maven-checkstyle-pre-commit-hook/</a></p>

<p>The disadvantage of the above approach is it cannot be enforced on each developers machine. Since the hooks are not uploaded into the repository.
We have our own limitations(team politics) in implementing server side hooks.</p>

<p>IntelliJ checkstyle plugin has the exact functionality which I am looking for (Check All Modified Files).<br/> 
<a href=""https://i.stack.imgur.com/J8JFA.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/J8JFA.png"" alt=""Check All Modified Files""></a></p>

<p>But, not all developers in our team use IntelliJ and It cannot be enforced during the build process.</p>

<p>I guess what I am trying to ask is, is there a way to trigger the pre-commit hook(logic) as a maven goal?</p>
",0,4928732,,
50020076,6777649,4/25/2018 10:35,-1,550,<githooks>,post-receive GIT hook is running from my local machine,"<p>I have written a simple echo statement in post-receive file present in <code>.git/hooks</code>. After me making a push operation I am not able to see the echo statement in my console output. Which means the post-receive server related hook has not been executed.</p>

<p>If I try some local hooks like pre-commit hook those scripts gets executed.</p>

<p>What are the steps that I need to follow to make a server related hook to execute. </p>
",0,6777649,,
14721043,514802,2/6/2013 3:37,2,270,<ruby><git><gitolite><githooks>,How can I cd outside my git hook directory,"<p>I'm writing my own git post-receive hook in ruby, and it resembles something like this:</p>

<pre><code>if !File.exists?(rep_dir+repo)
     puts ""Cloning repository #{repo} into #{rep_dir}.""
     `cd #{rep_dir}; sudo git clone file:////home/git/repositories/#{repo}.git`
exit
end
</code></pre>

<p>This hook is setup in gitolite common hooks, so when I push configurations for a new repository, I clone it right away to a new location.</p>

<p>I also loop for each project in gitolite config to check if the repository exists for each project, but that's not where I'm having problems.</p>

<p>My issue is, whenever this script runs I get:</p>

<pre><code>remote: cd: 1: can't cd to /home/&lt;somedir&gt;/repositories/
remote: Cloning repository gitolite-admin into /home/&lt;somedir&gt;/repositories/.
</code></pre>

<p>The repository was not cloned to the target directory after the hook ran. I read about unsetting the GIT_DIR environment variable, but I had no success.</p>
",1,514802,0,0
15407350,873836,3/14/2013 10:59,1,3851,<git><unix><version-control><gitolite><githooks>,deploying a website/webapp via git/gitolite permissions error,"<p>I've setup a development/testing server where developers can push repositories to a remote repo/webserver via gitolite/git.
On the repository site everything works well and developers can use the server however:</p>

<p><strong>Problem:</strong></p>

<p>I want to deploy the code to an apache documentroot (chown'd apache:apcahe and chmod'd 755). <a href=""http://toroid.org/ams/git-website-howto"" rel=""nofollow noreferrer"">I am following these instructions</a> and when edit my post-receive hook as describe like so:</p>

<pre><code>#!/bin/sh
echo ""deploying to DocumentRoot""
GIT_WORK_TREE=/var/www/www.example.com git checkout -f
</code></pre>

<p>however now when I run git push from my local repo I get permissions errors like:</p>

<pre><code>error: git checkout-index: unable to create file .gitignore (Permission denied)
error: git checkout-index: unable to create file .htaccess (Permission denied)
</code></pre>

<p>And my document root is empty...The post-receive hook is running as the user 'gitolite' (not sure whether that's important).</p>

<p>gitolite is already in the sudoers list so I want to run something like:</p>

<pre><code>GIT_WORK_TREE=/var/www/www.example.com sudo git checkout -f
</code></pre>

<p>but this doesn't seem to work either, I want to avoid <a href=""https://stackoverflow.com/questions/12481197/deploying-node-apps-via-gitolite-and-post-receive-hook/12481490#12481490"">calling a separate shell script</a> if possible.</p>

<p>Any ideas would be really appreciated.</p>
",4,873836,0,0
15434972,1273050,3/15/2013 14:30,3,330,<git><githooks>,How to use self-hosted git server as production server?,"<p>I'm developing a website, and using my own laptop as development server, while using my online server as the production server. And I'm using git to manage my project.</p>

<p>I've used heroku before, and I think publishing my website simply using <code>git push heroku master</code> is really cool, so I plan to build one my self.</p>

<p>So, here's what I've done, I've setup git on my production server (with gitosis to manage the access), and on my git repo, I've used <code>git remote add git@production:myrepo.git</code> to add the remote for git repo. </p>

<p>The question is how to grab the code on production server? The production server serves as a git server, so I can only get .git folder rather than the real code. I've thought of a trick, that is use <code>git clone --local myrepo.git myrepo</code> to clone the data on the production server, and in the hooks/ folder of myrepo.git, I edited the <code>post-receive</code> file as following:</p>

<pre><code>#!/bin/sh
touch /tmp/do-we-got-here
cd /path/to/clone/myrepo
/usr/bin/git pull
</code></pre>

<p>After I use <code>git push production master</code>, the <code>do-we-got-here</code> file got created, so I can tell the post-receive hook is working, but the <code>git pull</code> part does not work, when I get to the myrepo folder, and use <code>git pull</code>, it's still pulling from myrepo.git.</p>

<p>So I'm wondering how to handler this? I know this is possible because hosting sites like heroku are working! But the questione is how?</p>
",6,1273050,0,0
15487400,763468,3/18/2013 21:36,0,428,<git><bash><githooks>,Add commit author as sender for hook/post,"<p>When someone makes a commit, I want the author to be set as the sender.  I've narrowed down this piece of code in <code>post-receive</code></p>

<pre><code>send_mail()
{
        if [ -n ""$envelopesender"" ]; then
                /usr/sbin/sendmail -t -f ""$envelopesender""
        else
                /usr/sbin/sendmail -t
        fi
}
</code></pre>

<p>And I was to add it to the else condition, I think with something like</p>

<pre><code>git log &lt;SHA-1&gt; --pretty=format:""%an&lt;%ae&gt;"" -1
</code></pre>

<p>And I think I would use the <code>$newrev</code> variable for the sha.</p>

<p>I'm not so fresh on my <a href=""/questions/tagged/bash"" class=""post-tag"" title=""show questions tagged 'bash'"" rel=""tag"">bash</a>.  How can I make this happen?</p>
",1,763468,0,0
19548073,36687,10/23/2013 17:10,1,130,<git><github><githooks>,Can I require that all GitHub commits come from a pull request?,"<p>I'd like to enforce that all commits to master come from a pull request.  We don't want commits directly to master if it doesn't come through a pull request.</p>

<p>Is there any way to do this?  Can this be achieved via a server hook, for example?</p>
",0,36687,,
19561705,946850,10/24/2013 9:13,5,810,<git><push><githooks><git-push>,"Push all commits of a branch individually, one after one","<p>Is there an easy way to push all commits of a feature branch (starting from, say, <code>master</code>) individually, one after one, so that each commit triggers a push hook on the remote side?
This is useful for ""test-first"" scenarios when you implement and commit first a failing test and then a fix.</p>

<p>I know I can do <code>git push sha:remote-ref-name</code>, but it's tedious to do manually.</p>
",0,946850,,
279169,658,11/10/2008 21:04,417,126064,<git><deployment><webserver><githooks>,Deploy a project using Git push,"<p>Is it possible to deploy a website using <code>git push</code>? I have a hunch it has something to do with using <a href=""http://www.git-scm.com/book/en/v2/Customizing-Git-Git-Hooks"" rel=""noreferrer"">git hooks</a> to perform a <code>git reset --hard</code> on the server side, but how would I go about accomplishing this?</p>
",4,658,0,0
38701330,575643,8/1/2016 14:24,0,79,<git><git-submodules><githooks><git-commit>,Prevent to Git Hook `post-commit` execute for submodules,"<p>Can I somehow prevent that the <code>post-commit</code> hook being called when I commit something in the submodule? I'm using this hook to automatically commit the submodule changes with the main project commit message and I'm getting in a ""infinity loop"".</p>

<p>File: <code>post-commit</code></p>

<pre><code>#!/bin/sh
if git diff-index --quiet HEAD --; then
    echo no submodule changes
else
    git submodule foreach git add . ;
    git submodule foreach git commit -am ""`cat .git/COMMIT_EDITMSG`""
fi
</code></pre>

<p>Thanks.</p>
",1,575643,,
57661275,384126,8/26/2019 15:59,0,35,<git><githooks>,Generate and commit a file in the context of a post-receive hook,"<p>I need to create a git hook whose responsibility is to compile a handlebars file to .js after a push. So, for every new .hbs file pushed, I must generate a corresponding .js file and for every modified .hbs, I need to update the corresponding .js. The .js file must then be added and committed to the repo.</p>

<p>The requirements state that it HAS to be done server side, so I cannot use any client side hooks.</p>

<p>I am planning to use a post-receive hook to implement this scenario.
I am a not very experimented using git (and even less hooks), so my question is: how can I add a file and create a new commit in a bare repository (in the context of a post-receive hook) if I don't have the files tree?</p>

<p>Thanks!</p>
",3,384126,,
38736656,6654829,8/3/2016 7:06,0,318,<git><githooks><git-tag>,Can I use git pre-push hook only for that case when I made a new tag?,"<p>I would like to use git pre-push hook only for that cases when I added a new tag. Can I somehow analyze the push for this information? </p>
",0,6654829,,
57678113,384126,8/27/2019 15:36,2,157,<git><githooks>,"If many users run ""git push"" at the same time, are those commands ran sequentially or concurrently on the server?","<p>I have a scenario in which I need to create, add and commit a file to the repo for every .hbs file that is added or changes. I do all that in a <code>post-receive</code> hook because the requirements state that it must be done server-side.</p>

<p>In order to do that, I keep a working copy of the repo on the server (Gitlab) so I can add the file to the repo. In my hook, I generate the file then do <code>git add</code>, <code>git commit</code> and <code>git push</code>.</p>

<p>What worries me with that approach is what happens if many people push at the same time? If the push operations run concurrently, I think it might be problematic. But if they are run sequentially, then I see no problem.</p>

<p>So my question is: Can I assume that <code>git push</code> (particularly the <code>post-receive</code> hook) run sequentially on the server?</p>
",0,384126,0,0
427207,825,1/9/2009 6:05,493,130518,<git><githooks>,Can Git hook scripts be managed along with the repository?,"<p>We'd like to make a few basic hook scripts that we can all share -- for things like pre-formatting commit messages.  Git has hook scripts for that that are normally stored under <code>&lt;project&gt;/.git/hooks/</code>.  However, those scripts are not propagated when people do a clone and they are not version controlled.  </p>

<p>Is there a good way to help everyone get the right hook scripts?  Can I just make those hook scripts point to version controlled scripts in my repo?</p>
",4,825,0,0
12160767,1630406,8/28/2012 13:52,0,116,<git><githooks><pre-commit-hook><git-commit>,Getting the list of files which are to be committed in the pre-commit hook with Git,"<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/2412450/git-pre-commit-hook-changed-added-files"">Git pre-commit hook : changed/added files</a>  </p>
</blockquote>



<p>It may be good to add a code verifier or checker of some sort before you commit a list of source codes. Facebook even integrated automated tests into the committing process( or so I heard). What I need is a way to get the list of files that is going to be committed, not just edited. Here is a few reasons for this:</p>

<ol>
<li><code>git commit -m ""message""</code> can modify default message bypasses prepare-message and commit-msg hooks when I tried to use them to get files.</li>
<li>pre-commit hook do not get any arguments from the <code>git commit</code> command so it is not easy to tell what files are being committed, especially from a partial commit.</li>
<li>We have multiple users on one shared workstation, one shared user and one shared local repository( I can do nothing about it, I just do my job there ), so I do not want to verify other's codes when I commit mine (pretty sure this feeling is mutual). So if I use <code>git diff-index --name-only HEAD</code>, I get more codes to verify than I want to.</li>
<li>Automation is awesome and I think it's cool to install a code verifier in the hooks.</li>
<li>The committing process has better to be aborted if the verification fails.</li>
</ol>

<p>If there is any other way to automatically verify the codes in the ways that I described, pleeease tell me how. I really need this. Thank you very much.</p>
",5,1630406,,
47734931,6815416,12/10/2017 1:14,2,1069,<git><githooks><sonarqube-scan>,Git hook that prevent pushing if there is sonar issues on modified files,"<p>I am wondering if there is a git hook that prevent pushing to origin if there is sonar issues on modified files ?</p>
",2,6815416,,
552360,30951,2/16/2009 5:46,105,94893,<git><githooks>,Git hook to send email notification on repo changes,"<p>How do I configure the appropriate Git hook to send a summary email whenever a set of changes is pushed to the upstream repository?</p>
",1,30951,0,0
29805204,1039350,4/22/2015 17:44,3,6520,<ruby><regex><git><githooks><git-commit>,Regex for Git commit message,"<p>I'm trying to come up with a regex for enforcing Git commit messages to match a certain format. I've been banging my head against the keyboard modifying the semi-working version I have, but I just can't get it to work exactly as I want. Here's what I have now:</p>

<pre><code>/^([a-z]{2,4}-[\d]{2,5}[, \n]{1,2})+\n{1}^[\w\n\s\*\-\.\:\'\,]+/i
</code></pre>

<p>Here's the text I'm trying to enforce:</p>

<pre><code>AB-1432, ABC-435, ABCD-42

Here is the multiline description, following a blank 
line after the Jira issue IDs
- Maybe bullet points, with either dashes
* Or asterisks
</code></pre>

<p>Currently, it matches that, but it will also match if there's no blank line after the issue IDs, and if there's multiple blank lines after.</p>

<p>Is there anyway to enforce that, or will I just have to live with it?</p>

<p>It's also pretty ugly, I'm sure there's a more succinct way to write that out.</p>

<p>Thanks.</p>
",1,1039350,0,0
29821526,2173847,4/23/2015 11:03,0,220,<git><version-control><ftp><hook><githooks>,"Git, losing changes from ftp upload to live","<p>i have my local Git repos and a remote repository (hub). I use post-update hook to copy my project (/home/user/projects/website.com) into apache's git repo inside public_html. I have follow this tutorial: <a href=""https://danbarber.me/using-git-for-deployment/"" rel=""nofollow"">using-git-for-deploymen</a>. Bellow is my post-update. I had problems with conflicts with the 2 first ways (i need to resolve conflicts automatically when copy project from remote(hub) into live, simple copy) but the 3rd works fine:</p>

<pre><code>#!/bin/sh
#
# An example hook script to prepare a packed repository for use over
# dumb transports.
#
# To enable this hook, rename this file to ""post-update"".

echo
echo ""**** Pulling changes into Live [Hub's post-update hook]""
echo

cd /home/user/website.com/public_html || exit
unset GIT_DIR

# 1st way: simple point head into hub
#git fetch hub master 2&gt;&amp;1
#git reset --hard FETCH_HEAD 2&gt;&amp;1
#git clean -df 2&gt;&amp;1

# 2nd way: merge (you may have conflicts)
#git fetch hub master 2&gt;&amp;1
#git reset --hard master 2&gt;&amp;1
#git pull --rebase hub master 2&gt;&amp;1

# 3rd way: Combining the above 
git fetch hub master 2&gt;&amp;1
git reset --hard FETCH_HEAD 2&gt;&amp;1
git pull --rebase hub master 2&gt;&amp;1

# allow write permission to group
chmod -R g+w public_html/

exec git update-server-info
</code></pre>

<p>All good so far, but post-commit inside live repo, described in this tutorial isn't working and i'm losing changes when made from ftp into live site directly.
 All that i need is every time a pull from a local git repo is made, a hook to go into live repo, pull from remote into live, commit changes that have been made from ftp access into live, push them into remote and then pull the remote into local repo. I have tried post-merge hook inside my project remote repo (hub) to do that, but i have conflicts and is not working as expected. Here is my post-merge:</p>

<pre><code>#!/bin/sh
#
# An example hook script that is called when a git pull is done
# on a local repository.
#
# To enable this hook, rename this file to ""post-merge"".

echo
echo ""**** pushing changes from Live to Hub [Hub's post-merge hook]""
echo

cd /home/user/website.com/public_html || exit
unset GIT_DIR

## fetch hub's data ##
git fetch hub master 2&gt;&amp;1
#git merge master
git reset --hard master 2&gt;&amp;1
git pull --rebase hub master 2&gt;&amp;1

## Push changes ##
git add -A
git commit -m ""Changes from Live""
git push hub master 2&gt;&amp;1

## Change group permissions ##
chmod -R g+w public_html/

# exec git update-server-info
# : Nothing
</code></pre>

<p>Every time i run post-merge i'm getting this message on push:</p>

<pre><code>! [rejected]        master -&gt; master (non-fast-forward)
error: failed to push some refs to '/home/git/Sites/trofodosies24.git'
To prevent you from losing history, non-fast-forward updates were rejected
Merge the remote changes before pushing again.  See the 'Note about
fast-forwards' section of 'git push --help' for details.
</code></pre>

<p>What am i doing wrong? Please help.</p>
",0,2173847,,
38954654,42636,8/15/2016 11:57,11,7856,<github><github-pages><githooks>,Using github to write a book,"<p>With Github one can write a well-formatted README.md file and document to present the project. Also, there are wiki pages for user to collaborate. I'm wandering what would be an optimal workflow, even for non tech users, to make use of the GitHub platform to write a collaborative book.</p>

<p>How to use markdown but then enhance it by applying a stylesheet, make PDF out of it, organise chapters, have a public site (gh-pages) out of it and so on? Is there such a project or tool chain for GitHub?</p>

<p>In other word, how to easily write a collaborative book with a nice html and PDF output in GitHub? Thanks.</p>
",1,42636,0,0
38982489,4635253,8/16/2016 18:56,1,120,<git><email><githooks>,Automatic email each time change is made in GIT repo,"<p>I want to know if there is a way I can have an automatic email sent out after a person makes a commit in a git repo. Each time somebody pushes something into the repo, I would like to have an automatic email sent out to an email list I have specified.<br>
Thank you. </p>
",3,4635253,,
19903403,317817,11/11/2013 9:56,1,309,<git><githooks>,Git pre-commit hook. Empty index behavior,"<p>I'm writing a pre-commit script to find binary files added to the index.</p>

<p>While working on it I've realized that if I add one single binary file, then do a commit, the script would unstage it(leaving the index empty) but the commit would proceed(unless I do something to prevent it).</p>

<p>Is this the expected behavior?</p>

<p>What I want to know is why do ""git commit"" forbid by default proceeding if index is empty, but when in a hook script the commit would be done.</p>

<p>For the record, I have a workaround to avoid commit to be done in cases where index is empty.</p>

<p>I hope someone can explain why the commit is done.</p>
",0,317817,,
29848083,1159171,4/24/2015 12:54,3,110,<git><ubuntu><githooks>,How to copy a pushed branch to another directory?,"<p>I have a branch called <code>master</code> (Production) and another called <code>development</code>. When I push a commit from master, the post-receive hook executes:</p>

<pre><code>git --work-tree=/var/www/mywebsite.com --git-dir=/var/repo/mywebsite.com.git checkout -f
</code></pre>

<p>And the website is live. But I want my <code>development</code> branch copied to /var/www/mywebsite.com.dev .</p>
",2,1159171,,
68880427,13779411,8/22/2021 10:26,1,531,<git><githooks>,How to access and compare which file was change in git pre receive hook,"<p>I'm new to git hooks, now I have a simple request which needs me to check the config file in my project.</p>
<p>For example, I have a spring-boot config file: <code>application.yml</code>, It's content is:</p>
<pre><code>spring:
  profiles:
    active: prod
</code></pre>
<p>In the <code>master</code> and <code>release</code> branch, I need to ensure the file is</p>
<pre><code>spring:
  profiles:
    active: prod
</code></pre>
<p>While in the <code>dev</code> branch, I need it to be:</p>
<pre><code>spring:
  profiles:
    active: dev
</code></pre>
<p>Now I need a pre-receive hook to check If the <code>application.yml</code> was modified. If it was changed, I need to check if the correct branch corresponds to the correct file content. Otherwise, the push behavior will be rejected.</p>
<p>I'm using GitLab and I knew where to put the file. But I don't know how to write the script or if my request can be satisfied using a pre-receive script. I spent the whole day reading the git doc but I get little help. If anyone has a solution or any document reference would be appreciated.</p>
",8,13779411,,
16526040,330867,5/13/2013 15:42,0,543,<git><githooks>,How to read the content of a file in a post-receive hook?,"<p>I'm building a hook for the post-receive and I need to read the content of a file (VERSION). This file can change along with the commit (new version) so I can't read an existing repo.</p>

<p>I tried this method :</p>

<pre><code>git cat-file blob $(git ls-files -s VERSION | awk '{print $2}')
</code></pre>

<p>But in the hook folder, it doesn't work.</p>

<p>How can I do this?</p>
",2,330867,,
33102333,1561176,10/13/2015 12:08,0,654,<git><continuous-integration><bitbucket><githooks>,git hook to create staging branch,"<p>I am hosting my code on Bitbucket. The webhooks are not adequate to solve my issue, so I am hoping git hooks will work. Since I don't imagine they will work server-side, the git hook should be propagated to each checkout on each developers machine. (I know this might be an issue since its normally a local file, but I can hopefully solve it using information from <a href=""https://stackoverflow.com/q/427207/1561176"">here</a>)</p>

<p><strong>I want to create a git hook that will push changes to staging branches.</strong></p>

<p>Meaning, if I am a user named <code>bob</code> and I want to push to <code>production/master</code>, instead of it pushing to the <code>production/master</code> branch it will push to a staging branch like <code>staging/master/bob</code>. Same for another user <code>roy</code> who pushes to <code>production/master</code> it will go to <code>staging/master/roy</code>. And the same for any production branch. So <code>edd</code> pushing to <code>production/2.0</code> would push to <code>staging/2.0/edd</code>.</p>

<p>I have tried the pre-commit hook, but I can't find a way to direct the target of the push. I know this is possible.</p>

<p>I tried using <code>GIT_WORK_TREE</code>, and I couldn't seem to get it to work.</p>

<hr>

<p><strong>Clarification</strong></p>

<p>The whole process should be seamless for <code>bob</code> the developer. He should pull from the master and push to the master. (or whatever branch he is working on) and the process will happen in the background. It will push his changes to a staging branch, which will then undergo a CI process, and if successful will be pushed into the main branch. This is the solution that I need.</p>
",0,1561176,0,0
33109667,1204900,10/13/2015 18:09,10,4370,<git><testing><githooks>,git pre-push: connection closed by remote host while running tests,"<p>I have a pre-push script in my git repo that runs tests. If tests pass, the push carries on. If tests fail, it aborts the push.</p>

<p>The script worked great for a while until tests started to exceed 3 mins. stdout show a ""Connection to bitbucket closed by remote host"" in the middle of the test output. Then all the tests pass and the push doesn't actually go through.</p>

<p>Here's the pre-push script</p>

<pre><code>#!/bin/sh
DIR=$( cd ""$( dirname ""${BASH_SOURCE[0]}"" )"" &amp;&amp; pwd )

# This script runs tests before any push to the MASTER branch and fails
current_branch=$(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')
echo ""Current branch: ""$current_branch
if [ $current_branch = ""master"" ]
then
    echo ""Pushing to MASTER branch requires tests to pass...""
    ./run.sh test
    if [ $? = 0 ]
    then
        exit 0
    else
        echo ""***ERROR&gt; Failed to pass tests! Get tests to pass and then try again...""
        exit 1
    fi
else
    echo ""Skipping tests since we're not pushing to MASTER...""
fi
</code></pre>
",2,1204900,0,0
33133007,2920692,10/14/2015 18:32,1,1210,<git><githooks><tortoisegit>,TortoiseGit - No option for Post-Commit Hook in the Settings,"<p>I am trying to setup post-commit hook in TortoiseGit settings. But I cannot find
this option. Here is the screenshot:</p>

<blockquote>
  <p><img src=""https://i.stack.imgur.com/oGS6Q.jpg"" alt=""screenshot""></p>
</blockquote>

<p>TortoiseGit Settings for Hook. I am using:</p>

<pre><code>TortoiseGit 1.8.14.0 (C:\Program Files\TortoiseGit\bin)
</code></pre>

<p>How do I set post-commit hook?</p>
",0,2920692,0,0
50565455,4632019,5/28/2018 11:32,3,737,<git><githooks>,How to handle new branch in `pre-receive` git script?,"<p>I have script to block unresolved merge conflicts to be pushed:</p>

<pre><code>#!/bin/bash

echo ""pre-receive HOOK: $old_sha $new_sha""

while read old_sha new_sha refname
do

if git diff ""$old_sha"" ""$new_sha"" | grep -qE '^\+(&lt;&lt;&lt;&lt;&lt;&lt;&lt;|&gt;&gt;&gt;&gt;&gt;&gt;&gt;)'; then
    echo ""Saw a conflict marker in $(basename ""$refname"").""
    git diff ""$old_sha"" ""$new_sha"" | grep -nE '^\+(&lt;&lt;&lt;&lt;&lt;&lt;&lt;|&gt;&gt;&gt;&gt;&gt;&gt;&gt;)'
    exit 1
fi

done

exit 0
</code></pre>

<p>But when new branch is pushed I get next error message:</p>

<p><strong>fatal: bad object 0000000000000000000000000000000000000000</strong></p>

<p>Full output:</p>

<pre><code>Counting objects: 77, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (58/58), done.
Writing objects: 100% (77/77), 11.27 KiB | 5.63 MiB/s, done.
Total 77 (delta 52), reused 14 (delta 6)
remote: pre-receive HOOK
remote: fatal: bad object 0000000000000000000000000000000000000000
To https://tracker.feel-safe.net/gitdev/main.git
 * [new branch]        296-ToS-component -&gt; xxx
</code></pre>

<p>And, as you can see, broken changes are committed.</p>

<p><strong>How to handle new branche in <code>pre-receive</code> hook?</strong></p>

<p>Should I create <code>update</code> hook instead?</p>
",0,4632019,0,0
33198508,2809142,10/18/2015 13:33,2,10154,<git><sonarqube><gitlab><githooks><sonar-runner>,"How to configure SonarQube, Sonar Runner, GitLab and Jenkins to obtain Continuous Integration","<p>I have already set up SonarQube, Sonar Runner and Jenkins latest versions on my local machine (Ubuntu 14.04 LTS desktop version).</p>

<p>I want to know how we can integrate these with git (GitHub or GitLab).
When we push the code to git we want to previously analyse it and after this automatically commit it into Git.</p>

<p>What should I do?</p>
",1,2809142,,
33199479,3519221,10/18/2015 15:02,0,48,<database><git><hook><bitbucket><githooks>,Post-receive githook to push database to live site,"<p>I'm busy workflow with Git. What I want to achieve is pushing a local repository with the database to Bitbucket and then automatically push the files to a server and put the mysqldump file into the database. </p>

<p>I can now make a mysqldump of the database with the git pre-commit hook and push this to my Bitbucket repo. After that I want to handle database import automaticcaly.</p>

<p>I found out that this is possible with the post-receive hook, but can't get it working. Where do I have to add that hook? I tried it in the local git hooks folder where my pre-commit hook is located, but it does nothing.</p>

<p>Anyone who can help me? </p>
",0,3519221,,
17368084,2414932,6/28/2013 15:15,3,1536,<git><githooks><git-post-receive>,"Git hooks, post-receive loop through commit","<p>Using git hooks on the server side, is it possible to loop through the new commit messages that were sent from the client to the server everytime someone pushes to the remote repository?</p>

<p>I need to extract information from each message,</p>

<p>hash,date,commit author,branch</p>

<p>I cant find any good documentation on git hooks figure it out.
I've read through
<a href=""https://stackoverflow.com/questions/8263186/git-post-receive-hook-that-grabs-commit-messages-and-posts-back-to-url"">git post-receive hook that grabs commit messages and posts back to URL</a></p>

<p>and I don't understand a simple line of code</p>
",0,2414932,0,0
33924519,1743860,11/25/2015 19:04,12,3735,<git><sh><githooks><clang-format><git-daemon>,Git 'pre-receive' hook and 'git-clang-format' script to reliably reject pushes that violate code style conventions,"<p>Let's immediately start with a scrap of the <code>pre-receive</code> hook that I've already written:</p>

<pre><code>#!/bin/sh
##
  format_bold='\033[1m'
   format_red='\033[31m'
format_yellow='\033[33m'
format_normal='\033[0m'
##
  format_error=""${format_bold}${format_red}%s${format_normal}""
format_warning=""${format_bold}${format_yellow}%s${format_normal}""
##
stdout() {
  format=""${1}""
  shift
  printf ""${format}"" ""${@}""
}
##
stderr() {
  stdout ""${@}"" 1&gt;&amp;2
}
##
output() {
  format=""${1}""
  shift
  stdout ""${format}\n"" ""${@}""
}
##
error() {
  format=""${1}""
  shift
  stderr ""${format_error}: ${format}\n"" 'error' ""${@}""
}
##
warning() {
  format=""${1}""
  shift
  stdout ""${format_warning}: ${format}\n"" 'warning' ""${@}""
}
##
die() {
  error ""${@}""
  exit 1
}
##
git() {
  command git --no-pager ""${@}""
}
##
list() {
  git rev-list ""${@}""
}
##
clang_format() {
  git clang-format --style='file' ""${@}""
}
##
while read sha1_old sha1_new ref; do
  case ""${ref}"" in
  refs/heads/*)
    branch=""$(expr ""${ref}"" : 'refs/heads/\(.*\)')""
    if [ ""$(expr ""${sha1_new}"" : '0*$')"" -ne 0 ]; then # delete
      unset sha1_new
      # ...
    else # update
      if [ ""$(expr ""${sha1_old}"" : '0*$')"" -ne 0 ]; then # create
        unset sha1_old
        sha1_range=""${sha1_new}""
      else
        sha1_range=""${sha1_old}..${sha1_new}""
        # ...
        fi
      fi
      # ...
             GIT_WORK_TREE=""$(mktemp --tmpdir -d 'gitXXXXXX')""
      export GIT_WORK_TREE
             GIT_DIR=""${GIT_WORK_TREE}/.git""
      export GIT_DIR
      mkdir -p ""${GIT_DIR}""
      cp -a * ""${GIT_DIR}/""
      ln -s ""${PWD}/../.clang-format"" ""${GIT_WORK_TREE}/""
      error=
      for sha1 in $(list ""${sha1_range}""); do
        git checkout --force ""${sha1}"" &gt; '/dev/null' 2&gt;&amp;1
        if [ ""$(list --count ""${sha1}"")"" -eq 1 ]; then
          # What should I put here?
        else
          git reset --soft 'HEAD~1' &gt; '/dev/null' 2&gt;&amp;1
        fi
        diff=""$(clang_format --diff)""
        if [ ""${diff%% *}"" = 'diff' ]; then
          error=1
          error '%s: %s\n%s'                                                   \
                'Code style issues detected'                                   \
                ""${sha1}""                                                      \
                ""${diff}""                                                      \
                1&gt;&amp;2
        fi
      done
      if [ -n ""${error}"" ]; then
        die '%s' 'Code style issues detected'
      fi
    fi
    ;;
  refs/tags/*)
    tag=""$(expr ""${ref}"" : 'refs/tags/\(.*\)')""
    # ...
    ;;
  *)
    # ...
    ;;
  esac
done
exit 0
</code></pre>

<p><strong>NOTE:</strong><br>
Places with irrelevant code are stubbed with <code># ...</code>.</p>

<p><strong>NOTE:</strong><br>
If you are not familiar with <code>git-clang-format</code>, take a look <a href=""http://llvm.org/svn/llvm-project/cfe/trunk/tools/clang-format/git-clang-format"" rel=""nofollow noreferrer"">here</a>.</p>

<p>That hook works as expected, and so far, I didn't notice any bugs, but if you spot any problem or have an improvement suggestion, I'd appreciate any report.  Probably, I should give a comment on what's the intention behind this hook.  Well, it does check every pushed revision for compliance with code style conventions using <code>git-clang-format</code>, and if any of them does not comply, it will output the relevant diff (the one telling developers what should be fixed) for each of them.  Basically, I have two in-depth questions regarding this hook.</p>

<p>First, notice that I perform copy of the remote's (server) bare repository to some temporary directory and check out the code for analysis there.  Let me explain the intention of this.  Note that I do several <code>git checkout</code>s and <code>git reset</code>s (due to <code>for</code> loop) in order to analyze all of the pushed revisions individually with <code>git-clang-format</code>.  What I am trying to avoid here, is the (possible) concurrency issue on push access to the remote's (server) bare repository.  That is, I'm under impression that if multiple developers will try to push at the same time to a remote with this <code>pre-receive</code> hook installed, that might cause problems if each of these push ""sessions"" does not do <code>git checkout</code>s and <code>git reset</code>s with its private copy of the repository.  So, to put it simple, does <code>git-daemon</code> have built-in lock management for concurrent push ""sessions""?  Will it execute the corresponding <code>pre-receive</code> hook instances strictly sequentially or there is a possibility of interleaving (which can potentially cause undefined behavior)?  Something tells me that there should be a built-in solution for this problem with concrete guarantees, otherwise how would remotes work in general (even without complex hooks) being subjected to concurrent pushes?  If there is such a built-in solution, then the copy is redundant and simply reusing the bare repository would actually speed up the processing.  By the way, any reference to official documentation regarding this question is very welcome.</p>

<p>Second, <code>git-clang-format</code> processes only <em>staged</em> (but not committed) changes vs. specific commit (<code>HEAD</code> by default).  Thus, you can easily see where a corner case lies.  Yes, it's with the <em>root</em> commits (revisions).  In fact, <code>git reset --soft 'HEAD~1'</code> cannot be applied to root commits as they have no parents to reset to.  Hence, the following check with my second question is there:</p>

<pre><code>        if [ ""$(list --count ""${sha1}"")"" -eq 1 ]; then
          # What should I put here?
        else
          git reset --soft 'HEAD~1' &gt; '/dev/null' 2&gt;&amp;1
        fi
</code></pre>

<p>I've tried <code>git update-ref -d 'HEAD'</code> but this breaks the repository in such a way that <code>git-clang-format</code> is not able to process it anymore.  I believe this is related to the fact that all of these pushed revisions that are being analyzed (including this root one) do not really belong to any branch yet.  That is, they are in <em>detached</em> <code>HEAD</code> state.  It would be perfect to find a solution to this corner case as well, so that <em>initial</em> commits can also undergo the same check by <code>git-clang-format</code> for compliance with code style conventions.</p>

<p>Peace.</p>
",0,1743860,0,0
50735479,1564038,6/7/2018 7:37,0,106,<node.js><linux><git><githooks><nohup>,Running indefinitely long process in Git post-receive hook,"<p>I'm using a Git post-receive hook on my server so that whenever I push an update to the server, it will check out the new code, kill the currently running Node app and then restart the Node app. The problem is that the client will never disconnect during a push to that server because it is waiting for the Node process to finish before disconnecting. I've tried using &amp; at the end, nohup and &amp; together, and adding <code>exit 0</code> to the end of it after the &amp;.</p>

<p>Any ideas how I can achieve this?</p>
",1,1564038,,
17414275,2221608,7/1/2013 21:49,2,1901,<git><githooks><git-bare>,Revert server to past commit with bare repository hooks,"<p>I have a server with a bare git repository that I push to for live deployment. It has a simple <code>post-receive</code> hook that updates my server code with the latest on <code>master</code>.</p>

<p>I sometimes need to revert to a specific past commit when bugs are found on the production server (I test myself locally, but I don't catch everything). Is there a nice* way to revert to a past commit with this setup?</p>

<p>*By nice I mean a one-liner like pushing to the bare repository: <code>git push prod master</code></p>
",0,2221608,0,0
50746104,1178669,6/7/2018 16:26,0,38,<bash><git><githooks>,githook - get branchname on a new repo,"<p>I'm writing a <code>prepare-commit-msg</code> hook which appends the branch name to the commit msg. I m using this line to get the branch name</p>

<pre><code>  local current_branch=$(git rev-parse --abbrev-ref HEAD)
</code></pre>

<p>The problem is that if no prior commit exists (when the repo was just initizalised) the command fails with the following error message</p>

<pre><code>git rev-parse --abbrev-ref HEAD
HEAD
fatal: ambiguous argument 'HEAD': unknown revision or path not in the working tree.
</code></pre>

<p>Is there some better way to get at the branch name, or to suppress the warning / error?</p>
",0,1178669,,
34012496,743730,12/1/2015 4:15,2,578,<git><notifications><githooks><slack>,How can I install a git post-receive hook if I don't have server-side access to the repository?,"<p>A service I'm using (<a href=""https://www.overleaf.com"" rel=""nofollow"">Overleaf</a>) offers a git repository interface. I'd like to install a post-receive hook so that when my collaborators and I commit changes to the repository, we'll get notifications in <a href=""https://slack.com"" rel=""nofollow"">Slack</a>. Normally, this could be done easily using, e.g., Chris Eldredge's <a href=""https://github.com/chriseldredge/git-slack-hook"" rel=""nofollow"">git-slack-hook</a>, but it requires installing the post-receive hook on the server. In the current case, I don't have direct access to the git repository server's file system.  I've tried creating <code>.git/hooks/post-receive</code> in my local copy, but <code>git</code> won't let me check it in:</p>

<pre><code># git add .git/hooks/post-receive 
error: Invalid path '.git/hooks/post-receive'
error: unable to add .git/hooks/post-receive to index
fatal: adding files failed
</code></pre>

<p>What is the proper procedure for installing a post-receive hook when you can't directly access the file system of the git repository server?</p>

<p>Note: this is <em>not</em> GitHub.</p>
",1,743730,,
34028340,5627156,12/1/2015 19:18,0,41,<linux><git><shell><githooks><slack>,Combine two post-receive hooks,"<p>How can I combine two post-receive hooks? The first one is a <a href=""https://github.com/chriseldredge/git-slack-hook"" rel=""nofollow"">git-slack integration</a> and runs with the following loop: </p>

<pre><code>while read line
do
  set -- $line
  notify $*
  RET=$?
done
</code></pre>

<p>and the second one is for my deployment and looks like this:</p>

<pre><code>while read oldrev newrev refname line
do
   branch=$(git rev-parse --symbolic --abbrev-ref $refname)
   if [ ""master"" = ""$branch"" ]; then
     # some deployment commands
   elif [ ""development"" = ""$branch"" ]; then
     # some other deployment commands
   fi
done
</code></pre>

<p>No matter what branch I use for git, I would like to be able to send notifications to slack. </p>

<p><strong>Any tips on how to combine both loops?</strong></p>
",0,5627156,,
17503205,62245,7/6/2013 12:58,0,366,<git><github><githooks>,Adding a post receive hook in github,"<p>I'd like to add a post receive server side hook to a private repo in github.com. I am aware of the ""webhooks"" feature but I'd like to add a powershell script as a part of the post receive hook. I don't see a way to do it on github's website.</p>
",0,62245,,
17505211,1655918,7/6/2013 17:12,2,747,<git><githooks><git-post-receive>,Git Post Receive Hook: update current working branch to staging server,"<p>So, I have a staging server setup, and what I would like to do is when someone pushes to a non master branch update what the staging server's directory. My current post-receive hook looks like:</p>

<pre><code>echo ""post hook is on the run!""

while read oldrev newrev ref
do
    echo ""$ref""
done

unset $(git rev-parse --local-env-vars)
cd ../staging/bikereport
git fetch
git pull origin $ref

echo ""Post receive finsihed""
</code></pre>

<p>However I am not seeing the changes I would like on the server, and remote returns ""Already up-to-date"" which makes me think it's pulling from Master or something?</p>

<p>This isn't an elegant solution, but we are a <em>very</em> small team working on a single project. An ideal solution would be to save every branch to a new directory within the staging server and then update only that directory per push.</p>
",0,1655918,0,0
34059987,1288198,12/3/2015 7:20,2,645,<git><deployment><githooks><autodeploy>,"GIT POST-MERGE Hook, Get updated files","<p>I've a branch titled <code>uat</code> on git. </p>

<p>I want to get a clone of all the files which are updated in <code>merge</code> in the <code>uat</code> branch.<br>
<em>(Basically idea behind it is to create a build to upload on uat server)</em>.  </p>

<p>I've tried doing this.</p>

<pre><code>#!/bin/bash
branch=$(git symbolic-ref HEAD | sed -e ""s/^refs\/heads\///"");
if [ ""uat"" == ""$branch"" ]; then
    // to do
    // 1. get all updated files
    // 2. create a clone of these files
fi
</code></pre>

<p>Can someone please help me with <code>setp 1</code> i.e. get all the file updated in current merge.</p>
",0,1288198,0,0
17513690,2555122,7/7/2013 15:54,3,2299,<git><githooks>,Automatic checkout after push,"<p>I have a server on which I send the results of my work. After each command <code>git push</code> I have to connect via SSH and enter the command to switch my remote repository to the latest version:</p>

<pre><code>git checkout NNNN
</code></pre>

<p>Can I simplify this action?</p>

<p>P.S. Before submitting of this question I had found some information about GitHooks. Can I use it for my task described above and, for example for restarting Rails server after checkout?</p>
",0,2555122,,
50758546,8586214,6/8/2018 10:24,2,704,<git><githooks><pre-commit-hook>,Git checkout-index does not work in git hooks,"<p>In <code>.git/hooks</code>, I enable <code>pre-commit</code>. I want to extract staged files into another dir. Here is my command.</p>

<pre><code>git diff --cached --name-only | grep -E "".*\.(kt|java)"" | git --git-dir=.git --work-tree=staged-dir checkout-index -f -q --stdin
</code></pre>

<p>As you see, I filter java and kotlin files. However above code does not work for me in <code>pre-commit</code>. But if I execute above command in terminal, staged files extracted into <code>staged-dir</code> directory.</p>

<h1>EDIT</h1>

<p>When I remove <code>checkout-index</code>, there is some output.</p>

<pre><code>git diff --cached --name-only | grep -E "".*\.(kt|java)""
</code></pre>

<blockquote>
  <p>project/A.kt</p>
  
  <p>project/B.java</p>
</blockquote>

<h1>EDIT For Project structure</h1>

<pre><code>rootProject
  |---.git
  |---staged-dir
</code></pre>
",6,8586214,,
69110050,3052438,9/8/2021 21:52,1,2653,<git><githooks><git-stage>,"In Git pre-commit hook, temporarily remove all changes that are not about to be commited","<p>I would like my <code>pre-commit</code> hook to compile the program and run all the automatic tests before allowing to perform the commit.
The problem is that usually my working copy is not clean while I'm committing. They are not staged or even untracked files that I don't want to commit. Sometimes I even explicitly specify only a few files to commit which has nothing to do with what is currently staged.</p>
<p>Of course I want to compile and test only the changes that will be committed, ignoring the other ones.
There would be 3 steps to it:</p>
<ol>
<li><strong>Remove all changes that won't be committed.</strong></li>
<li>Run the tests.</li>
<li><strong>Restore the all the changes to exactly how they were before the 1st step.</strong></li>
</ol>
<p>The 1st step could be achieved by running <code>git stash push --include-untracked --keep-index</code>. The stash entry would also help with the 3rd step.
However, I don't know what to do when I'm committing explicit list of files that are not staged.</p>
<p>(The 2nd step is not really a part of the question.)</p>
<p>The 3rd step could be theoretically done with command <code>git stash pop --index</code> but this command seems to be prone to conflicts if some file was staged and then changed more without staging it again.</p>
<p>This script creates a repository with some files and changes that cover various corner cases:</p>
<pre class=""lang-sh prettyprint-override""><code>#!/usr/bin/env sh

set -e -x

git init test-repo
cd test-repo
git config user.email &quot;you@example.com&quot;
git config user.name &quot;Your Name&quot;

echo foo &gt;old-file-unchanged
echo foo &gt;old-file-changed-staged
echo foo &gt;old-file-changed-unstaged
echo foo &gt;old-file-changed-both
git add .
git commit -m 'previous commit'

echo bar &gt;old-file-changed-staged
echo bar &gt;old-file-changed-both
echo bar &gt;new-file-staged
echo bar &gt;new-file-both
git add .
echo baz &gt;old-file-changed-unstaged
echo baz &gt;old-file-changed-both
echo baz &gt;new-file-both
echo baz &gt;untracked-file
</code></pre>
",3,3052438,0,0
34122106,1549776,12/6/2015 20:09,3,599,<git><gitlab><githooks>,Is it possible to use custom hooks in gitlab 8 for project commit?,"<p>I know it was not possible to apply custom_hooks to project commits.</p>

<p>Is this possible now with gitlab 8 ?</p>

<p>thanks.</p>
",0,1549776,0,0
69112107,12640933,9/9/2021 4:05,1,222,<powershell><bitbucket><githooks>,Trigger a PowerShell script if code change happens on remote git repo,"<p>I wanted to trigger a PowerShell script on my local machine (which will be connected to the internet always) if a code change happens on bitbucket remote git repo for a specific branch.</p>
",0,12640933,0,0
34137988,5542107,12/7/2015 16:06,1,1918,<git><githooks>,Git server side hooks commit update file,"<p>I am trying to implement git hook commit on a server using these instructions: <a href=""https://git-scm.com/book/be/v2/Customizing-Git-An-Example-Git-Enforced-Policy"" rel=""nofollow"">https://git-scm.com/book/be/v2/Customizing-Git-An-Example-Git-Enforced-Policy</a></p>

<p>I created file ""update"" (make it executable, put in hooks folder), and found that this file is not executed when I do <code>git commit -m ""my message""</code> and <code>git push</code> - all these commands work perfectly, but 'update' file is not working (I tried with simple script ""echo ""Hello World"" >> somefile.txt)</p>

<p>Where is the problem?</p>
",6,5542107,0,0
34139963,183704,12/7/2015 17:48,0,93,<ruby><git><hook><githooks><pre-commit-hook>,Ignore regular expression check in Ruby for special Git commits,"<p>I have following Git hook in Ruby, which uses a regular expression to check for a Jira ticket like <code>IPS-56981</code> in the commit message. If not found, then the commit is aborted.</p>

<pre><code>#!/usr/bin/env ruby
message_file = ARGV[0]
message = File.read(message_file)

$regex = /\A\IPS-(\d+)\s\w+/

if !$regex.match(message)
  puts ""[POLICY] Your message is not formatted correctly. You need to specify a Jira ticket.""
  exit 1
end
</code></pre>

<p>In some cases, I want to ignore the check and commit anyway. How can I realize that in Ruby?</p>

<p>My ideas were to pass an additional argument to Git commit and to check in the Ruby script for that or directly to wait in the Ruby script for <code>ignore</code> message to ignore the Jira ticket check. But my tries are failed. Maybe I need to use another Git hook?</p>

<p>I tried:</p>

<pre><code>#!/usr/bin/env ruby
message_file = ARGV[0]
message = File.read(message_file)

$regex = /\A\IPS-(\d+)\s\w+/

if !$regex.match(message)
  puts ""[POLICY] Your message is not formatted correctly. You need to specify a Jira ticket.""
  ignore=$stdin.gets.chomp
  if ignore == ""ignore""
    exit 0
  end
  exit 1
end
</code></pre>

<p>but I get the error message:</p>

<pre><code>.git/hooks/commit-msg:9:in `&lt;main&gt;': undefined method `chomp' for nil:NilClass (NoMethodError)
</code></pre>

<p>It also does not wait to give me the chance to enter <code>ignore</code>.</p>
",3,183704,,
17608860,1696652,7/12/2013 6:38,4,212,<git><shell><githooks>,"How can I use ""select"" in a Git hook?","<p>I want to use Git <code>pre-commit</code> hook. I've modified the default <code>pre-commit</code> file, and my hook works well.</p>

<p>Now I want to add some options in the pre-commit like this code:</p>

<pre class=""lang-sh prettyprint-override""><code>select run in ""yes"" ""no""
do 
case $run in 
 ""yes"")UnitTest;;
 ""no"")echo ""Ignore Unit Test!"";;
 *)echo ""other"";;
esac
done
</code></pre>

<p>but when I run <code>git commit</code>, the output message is</p>

<pre><code>Run the Unit Test Case?
1) yes
2) no
#? 
</code></pre>

<p>The script doesn't leave me any opportunity to enter an option; it looks like the hook exits immediately. I've tried to call <code>pre-commit</code> from another script, and it works as expected.</p>

<p>How can I use <code>select</code> in a Git hook?</p>
",0,1696652,0,0
69119937,5161457,9/9/2021 14:21,1,58,<git><githooks><git-deploy>,Re-instating automatic deployments after git repo wiped out?,"<p>I have a question about how to start using automatic deployments after the git repo on our client's site has been wiped out.</p>
<p><em>What happened to the repo?</em> The client wanted to use a feature on their hosting provider where they can make copy edits to a staging site and &quot;push&quot; it to the live site. After they pushed edits, the git repo disappeared.</p>
<p><em>Automatic deployments</em>: We're using git hooks do deployments. Here's a good <a href=""https://anchor.host/automatic-git-deploy-with-kinsta-via-ssh/"" rel=""nofollow noreferrer"">how-to</a>. Basically, you can make deployments locally using <code>git push &lt;environment&gt; &lt;branch&gt;</code>. When you run this command, git runs the following <code>post-receive</code> hook (site name removed for privacy):</p>
<pre><code>#!/bin/bash
TARGET=&quot;/www/[sitename]_571/public&quot;
GIT_DIR=&quot;/www/[sitename]_571/private/[sitename].git&quot;
BRANCH=&quot;master&quot;

while read oldrev newrev ref
do
        # only checking out the master (or whatever branch you would like to deploy)
        if [[ $ref = refs/heads/$BRANCH ]];
        then
                echo &quot;Ref $ref received. Deploying ${BRANCH} branch to production...&quot;
                git --work-tree=$TARGET --git-dir=$GIT_DIR checkout -f
        else
                echo &quot;Ref $ref received. Doing nothing: only the ${BRANCH} branch may be deployed on this server.&quot;
        fi
done
</code></pre>
<p>The structure of the remote server is:</p>
<p>/www/[sitename]_571/ -&gt; private -&gt; <code>[sitename].git</code> -&gt; hooks<br>
                                     -&gt; public -&gt; website files + <code>.git</code></p>
<p>What's the least destructive way to get git back on the live site, so we can start making deployments again?</p>
<p>Thanks!</p>
",2,5161457,0,0
34177811,5542107,12/9/2015 11:33,2,582,<git><ssh><push><githooks>,Git push over SSH is not activating remote hooks,"<p>I have the following problems that <strong>git push over SSH is not activating remote hooks</strong>.</p>

<p>The server where Git repo is Linux ubuntu.<br>
Git version 1.7.9.5<br>
My path to repo hooks <strong><code>/path/test.git/hooks/update</code></strong>; with <code>Update</code> executable (<code>chmod +x</code>)</p>

<p>In <strong><code>update</code></strong> file I put just simple check to be sure it works.</p>

<pre><code>#!/bin/sh
echo ""Hello World""
echo ""098"" &gt;&gt; test.txt
exit 1
</code></pre>

<p>I am connecting from Ubuntu (on Virtualbox) with following steps:</p>

<pre><code>touch somefile.txt
git add -A
git commit -ma ""my somefile add
</code></pre>

<p>Then:</p>

<pre><code>git push origin HEAD:refs/for/master

Counting objects: 3, done.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 291 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 1 (delta 0)
remote: Processing changes: new: 1, refs: 1, done
remote:
remote: New Changes:
remote:   https://URL/gerrit/15676
remote:
To ssh://mylogin@URL:29418/reponame
 * [new branch]      HEAD -&gt; refs/for/master
</code></pre>

<p>As you see my update script is not activated during ""push"".</p>

<p>What could be check why it happens like this?</p>
",11,5542107,0,0
34182077,5542107,12/9/2015 15:03,0,170,<git><commit><githooks><commit-message>,Catch my message before push in Git,"<p>I am writing git hook client side <code>commit-msg</code> script and I need to put the message from </p>

<pre><code>git commit -m ""**mytext**""
</code></pre>

<p>into some script for further checking on my pattern.</p>

<p>I found how to do it with commits that were pushed </p>

<pre><code>git log -1 --pretty=%B
</code></pre>

<p>But I did not find how to catch my message <strong>before</strong> push.</p>
",0,5542107,,
34191223,1069083,12/9/2015 23:48,2,1912,<git><bash><githooks>,git hook to test if a file contains the right data,"<p>I have a git repo with key files that have to be all in the format</p>

<pre><code>#possible comment
key ""&lt;key with 64 chars&gt;""; # possible comment
vpn .... #optional line
</code></pre>

<p>I would like to add a hook into our git repository, that when you try to commit a new file, this regular expression is checked on all files in the repository beforehand:</p>

<pre><code>cat *|grep -v -E ""^\s*key\s+\""[0-9a-f]{64}\"";\s*(#.*)*$""|grep -v -E ""(^#|vpn|^$)""
</code></pre>

<p>I created a <code>.git/hooks/pre-commit</code> file:</p>

<pre><code>#!/bin/sh

if git rev-parse --verify HEAD &gt;/dev/null 2&gt;&amp;1
then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# Redirect output to stderr.
exec 1&gt;&amp;2

diffstr=$(git diff --cached $against | sed 's/^+//g' | grep -E ""^\+[^\+]"" \
| grep -v -E ""^key \""\w{64}\"";\s*(#.*)*$"" | grep -v -E ""(^#|vpn|^$)"")
if [ ""$diffstr"" != """" ] ; then
    echo ""You have a malformed key in your changes, you can't commit until it has been corrected:""
    echo $diffstr
    exit 1
fi
</code></pre>

<p>I want to be stopped from committing changed/new key-files that are not in the correct format. Any of the following:</p>

<ul>
<li>don't start with <code>key</code></li>
<li>dont use <code>""</code>-quotes</li>
<li>dont end with <code>;</code> (optionally followed by a comment)</li>
<li>where the key is not a 64 hex characters.</li>
<li>any other lines, that don't start with comment <code>#</code></li>
</ul>

<p>But my solution still doesn't stop me from committing wrong key files. What am I doing wrong?</p>
",2,1069083,0,0
34224729,1879408,12/11/2015 13:31,8,6319,<git><clone><githooks><git-push>,"Exception ""working tree already exists"" while cloning GIT repo in pre-push hook","<p>I try to clone my local git repository inside the pre-push script (client hook). I get the exception:</p>

<pre><code>fatal: working tree '...' already exists.
</code></pre>

<p>I don't understand the exception, since i obviously clone the repo to a different directory.</p>

<p>Any ideas?</p>

<hr>

<p>I tried that:</p>

<pre><code>unset GIT_DIR
cd ..
git clone ./TestTest/ /tmp/PrePushTestClone
</code></pre>

<p>It fails exactly the same way :(</p>
",0,1879408,0,0
17720025,1755868,7/18/2013 9:48,0,1228,<git><permissions><centos><githooks>,git post-receive hook permissions,"<p>I did setup a multi-user gitolite environment, but I don't get the post-receive hook working.</p>

<p>The problem is that I have to deal with two users on my VPS server.</p>

<p>For example, if <code>example.com</code> is my main domainname for my VPS server and I want to deploy to <code>dev.example.com</code>, then my user <code>git</code> needs write access to the public_html/dev folder of user <code>example</code>.</p>

<pre><code>$ git push
Counting objects: 5, done.
Writing objects: 100% (3/3), 275 bytes, done.
Total 3 (delta 0), reused 0 (delta 0)
remote: fatal: Could not switch to '/home/example/public_html': Permission denied
To ssh://git@example.com:22/project.git
   e0a35f7..4f747e6  master -&gt; master
</code></pre>

<p>In other word how do I setup a post-receive hook from:</p>

<p><code>home/git/repositories/project.git/hooks</code></p>

<p>to a hosted folder owned by example:example:</p>

<p><code>home/example/public_html/dev</code></p>
",0,1755868,,
69135536,10034344,9/10/2021 16:51,0,132,<git><githooks>,git pull/fetch/checkout in git hook is unable to locate correct repository directory,"<p>I'm experimenting with git hooks, and am trying to get the git server I am using to host my code to perform a build after every pushed commit.  I have cloned a local (on the server) git repository from the server-repository I am hosting.  Both the server-repository and the server's local instantiation of the repo are on the same machine, the server.  I use this local instantiation to perform the build.</p>
<p>Currently I am using the <strong>post-update</strong> git hook to run the following script after each new push to the repository:</p>
<pre><code>#!/bin/sh

#get the branch name that was pushed
branch=$(git rev-parse --symbolic --abbrev-ref $1)

echo performing a build on branch:   $branch

cd /path/to/server/local/repodir
git checkout -f $branch
git pull origin $branch

make

echo &quot;Build Done&quot;
</code></pre>
<p>I am able to run the git hook, and it actually builds everything fine.  However, the git checkout and pull commands fail, and give the following exception:</p>
<pre><code>fatal: not a git repository: '.'
</code></pre>
<p>I'm not sure why this is happening, as I <strong>cd</strong> into the git directory the command before. Running this same script in the terminal on the server runs fine and git performs the actions as it normally would.  I have checked by typing in <strong>pwd</strong> and <strong>ls -la</strong> in the hook and the shell is in the correct folder and has a .git repository item in it, meaning git should have no problem executing in this folder.</p>
<p>Is there something particular about git hooks that is preventing git from checking-out and pulling  these repos that were just pushed from another device?  I wouldn't think so, but I can't understand why git can't seem to find the git repository, and seems to only be looking at <strong>'.'</strong></p>
<p>What is the proper way to git checkout/pull inside of a git hook?</p>
",1,10034344,,
50791696,9923581,6/11/2018 6:37,1,1730,<python><git><githooks><git-commit>,How to test pre/post commit scripts in git?,"<p>I've created a git post-commit hook in python and made a file executable and placed it into .git/post-commit. </p>

<p>It works when I run it via Python. Now I want test it locally in git. How can I do that?  I can't make a commit to git locally from my computer in an easy way, right?</p>

<p>Should I copy the hook file to my server and make test commits to test it? Is there another way?</p>
",0,9923581,,
17727315,42900,7/18/2013 15:10,13,2914,<git><githooks>,Asynchronous git hook?,"<p>I execute unit tests on post-receive but don't want the user to wait for it.</p>

<p>I tried the suggestions from the git-user mailing list (""just <code>&amp;</code> it"") but this is not working: <a href=""https://groups.google.com/forum/#!topic/git-users/CFshrDgYYzE"" rel=""noreferrer"">https://groups.google.com/forum/#!topic/git-users/CFshrDgYYzE</a></p>

<p>git seems to wait for the bash script to exit even if I just put this in hooks/post-receive:</p>

<pre><code>exec-unit-tests.sh &amp;
</code></pre>
",2,42900,0,0
34286835,929046,12/15/2015 10:33,0,47,<git><cocoapods><githooks>,Git Hooks: only post-update is working,"<p>I'm having an issue with <strong>git hooks</strong>.</p>

<p>Here is what I'm trying to do (I'll tell you then, what I'm really doing and what's the problem).</p>

<p>I'm experimenting something on my iMac.<br>
I have a git user with <strong>2 big parts</strong> with git repositories <code>git init --bare...</code></p>

<p>One is for different <strong>pod projects</strong>:</p>

<ul>
<li>pod1.git </li>
<li>pod2.git</li>
<li>...</li>
</ul>

<p>The other is <strong>2 specs</strong> repos to insert ""source ..."" into podfiles then:</p>

<ul>
<li>UIKitSpecs.git</li>
<li>FoundationSpecs.git</li>
</ul>

<p>The idea is to have some internal (for a client) pods xcode projects (on a macMini or something).
What I want to do is to push the podspec and create the good directory with the good version (depending on the last tag) on the good spec git repo!
I can handle the script to push automatically etc..</p>

<p>The point is that on my ""podx.git"" repos, hooks (in the /hooks folder) don't work at all except post-update.
I tried to commit, commit -m ""message"", push etc...
Just the post-update is called after a push!</p>

<p>I removed the .sample prefix, and run the chmod +x command on them even if they already was executables.</p>

<p>Any solution?</p>
",4,929046,,
17755205,1755868,7/19/2013 20:46,3,4605,<git><githooks><ownership>,Changing ownership after a git post-receive,"<p>I have the following setup:</p>

<p>Two users: example and git</p>

<p>Inside <code>/home/git/repositories/project.git/hooks/post-receive</code> I have a checkout to <code>/home/example/public_html/dev</code></p>

<p>So with every git push, the project files are published to <a href=""http://dev.example.com"" rel=""nofollow"">http://dev.example.com</a></p>

<p>The problem is, the checkout is performed from the git user, so all the files inside the dev directory are owned by git:git and the permissions are 600.</p>

<p>So visiting <a href=""http://dev.example.com"" rel=""nofollow"">http://dev.example.com</a> will not show the page. since user apache has no access to it.</p>

<p>Someone suggested to do a chown inside the post-receive hook.
Well, then user git needs to be sudo.
So I added user git as a sudoer.
The next problem was ""<strong>sorry, you must have a tty to run sudo</strong>""
So I comment out #Default requiretty, but run into a next problem.</p>

<p>Making user git a sudoer is not what I wanted (not secure) so I changed everything back to normal.</p>

<p>Are there other more secure options to try?</p>

<p>Probably let the post-receive hook trigger a php file inside dev folder and this php file will do the checkout?</p>

<p>Or can I symlink the dev folder to a folder inside /home/git in a way apache kan show them in the browser?</p>
",4,1755868,0,0
17787125,1041364,7/22/2013 12:04,5,576,<git><authentication><githooks><rtc>,Can I send out of band data along with a commit?,"<p>I wish to integrate a remote git repository with an RTC server, by using their RESTful interface to attach a link to gitweb for a commit associated with a particular task.</p>

<p>Ideally this will be done with a post-receive hook on the git server, but the processing user that git runs as is not allowed a user account to authenticate to RTC.</p>

<p>The best solution I can think of is to somehow pass an authentication token (Acquired from RTC in the form of cookies.txt) along with the git push (But not have it part of the commit).</p>

<p>The alternative would be a post-push hook on each client repository but that has its own problems (Including that there is no such hook).</p>
",2,1041364,0,0
50809321,1109689,6/12/2018 4:37,1,945,<git><githooks><pre-commit-hook>,Capitalise the first letter of the commit message,"<p>I'm not a perl user so I'm unsure of how to write a git commit-msg hook script to capitalise the first letter of the message for each commit so that </p>

<pre><code>initial commit
</code></pre>

<p>becomes</p>

<pre><code>Initial commit
</code></pre>
",0,1109689,0,0
19457425,1464112,10/18/2013 19:17,1,427,<git><shell><angularjs><versioning><githooks>,Utilize Git Bash Command Values as Versioning Scheme Using Angular,"<p>I am inquiring to examine the possibilities of using values I receive while issuing git bash terminal commands within my web application to create a modified semantic versioning scheme utilizing AngularJS.</p>

<p>I retrieve my count by issuing </p>

<pre><code>git rev-list HEAD --count
</code></pre>

<p>and abbreviated hash </p>

<pre><code>git rev-parse --short HEAD
</code></pre>

<p>These commands return values of interest to me, and now my question is, is it possible to somehow harvest these values in a usable way to reference within my page, and if so, is there a decent method to do this using Angular?</p>
",2,1464112,,
17795337,2607922,7/22/2013 19:00,1,1876,<git><apache><samba><githooks>,Git hooks doesn't work on remote repository,"<p>I have a remote Git bare repository hosted on Ubuntu Linux virtual machine with Apache on it and accessible over http in local network.
When I configured my server I used this manual: <a href=""http://blog.bobbyallen.me/2012/07/23/installing-a-git-server-using-apache-webdav-on-ubuntu-server-12-04/"" rel=""nofollow"">http://blog.bobbyallen.me/2012/07/23/installing-a-git-server-using-apache-webdav-on-ubuntu-server-12-04/</a></p>

<p>I intend to propagate this repository to my website (wich have non-bare repository), while Ubuntu has access to it's directory over a Samba share.</p>

<p>So, have something like this:</p>

<p>|my PC| ==push==> |<a href=""http://user@myhub.git/myproject.git|"" rel=""nofollow"">http://user@myhub.git/myproject.git|</a> ==(post-receive hook)==> |/samba/mywebsite/|</p>

<p>My thought was to write a post-receive hook which will do something like that when I push changes from my IDE (PhpStorm):</p>

<pre><code>#!/bin/sh
echo ""Pulling content from hub to website""
echo ""Pulling content from hub to website"" &gt;&gt; /tmp/git.log
cd /samba/mywebsite/ || exit
unset GIT_DIR
git pull hub master

cd /var/www/myproject.git
git update-server-info
</code></pre>

<p>Of course, before that I declared inside my website repository:</p>

<pre><code>git remote add hub /var/www/myproject.git
</code></pre>

<p>The problem is that my post-receive hook doesn't run when I perform push from my IDE: I do not see any result of written in first to lines with echoes (nor in IDE log, nor in /tmp/git.log file). Note, that push itself performs successfully.</p>

<p>In fact, the problem is much deeper: hooks doesn't launch at all. I tried post-receive, update and post-update hooks, but nothing... I placed line like ""echo 111>>/tmp/git.log"" in every one of them, but nothing happens.</p>

<p>Furthermore, when I try to launch one these hooks manualy, everything works fine and webside recevies updates:</p>

<pre><code>sudo -u www-data ./post-receive
</code></pre>

<p>Of course, I do have read/write/execute permitions for user www-data, and also www-data owns everything in /var/www directory. Actually, I set 0777 permissions for all content in that directory.</p>

<p>I tried to perform git push origin manually and from IDE - same result.
I tried even to use !#/bin/sh and !#/bin/bash - no effect.</p>

<h1>UPD:</h1>

<p>I performed this on my server:</p>

<pre><code>cd ~
git clone /var/www/myproject.git
cd myproject
echo ""newline""&gt;&gt;README.txt
commit -a -m ""Test commit""
git push origin
</code></pre>

<p>And miracle happend - it worked! I saw answer from the main repo and hooks did perfomed in this order: update, post-receive, post-update.</p>

<p>So, I assume, I have some problem with pushing changes over http. But I have no idea why does it so.</p>
",6,2607922,0,0
57594628,205426,8/21/2019 15:11,1,1126,<git><github><githooks>,How to push a pre-commit hook to all existing repositories,"<p>In GHE (GitHub Enterprise), is it possible to share pre-commit hooks across all existing (and new) repositories? For example I want to deny JKS files being committed in the first place.</p>

<p>I understand these can be by-passed and simply want to make it harder to do the wrong thing.</p>
",0,205426,,
34348591,3626708,12/18/2015 4:33,0,193,<git><bash><shell><githooks>,git hook not working with input stream,"<p>I have a git pre-push hook which calls a shell script called pre-push.sh like so </p>

<pre><code>#!/bin/bash

#Fail if one script fails and print all info to console
set -ex

#Font variables
underline=`tput smul`
nounderline=`tput rmul`

#Run grunt
grunt;

#Make sure there is only one commit being pushed
printf ""\n${underline}Validating Number of Commits${nounderline}\n"";
src/scripts/hooks/pre-push/countCommits.sh;
</code></pre>

<p>Count commits is as such </p>

<pre><code>#!/bin/bash


confirm () {
    # call with a prompt string or use a default
    read -r -p ""${1:-Are you sure? [y/N]} "" response
    case $response in
        [yY][eE][sS]|[yY]) 
            true
            ;;
        *)
            false
            ;;
    esac
}
#This script counts the number of commits being pushed and fails if it is greater than 1 commit being pushed
countCommits(){
    NUMBER_OF_COMMITS=`git rev-list @{u}.. | wc -l`
    if [ ""$NUMBER_OF_COMMITS"" -gt ""1"" ]; then
        return 1
        #exit 1
     else
        return 0
    fi

}


if countCommits; then
    printf ""\e[0;32mDone, without errors.\e[0m""
else
    printf ""$NUMBER_OF_COMMITS commits were pushed. We recommend pushing only 1 commit.""
    if confirm ""$NUMBER_OF_COMMITS commits were found. We recommend pushing only 1 commit. Do you wish to continue? [y/N]""; then
        :
    else
        printf ""Please squash your commits by running \e[1;34m'git rebase -i'\e[0m\n""
        exit 1
    fi
fi
</code></pre>

<p>when calling pre-push.sh directly it works correctly i.e. waits for the user to say 'y' or 'n' if they have more then 1 commit. However when I use it as a pre-push hook it doesn't wait for the user prompt and continues down the no path</p>

<p>when calling pre-push.sh directly </p>

<pre><code>+ src/scripts/hooks/pre-push/countCommits.sh
       5 commits were pushed. We recommend pushing only 1 commit.       5 commits were found. We recommend pushing only 1 commit. Do you wish to continue? [y/N] n
Please squash your commits by running 'git rebase -i'
</code></pre>

<p>when doing a git push</p>

<pre><code>+ src/countCommits.sh
       5 commits were pushed. We recommend pushing only 1 commit.Please squash your commits by running 'git rebase -i'
error: failed to push some refs
</code></pre>

<p>how do i get the git hook to allow input from the user?</p>
",0,3626708,,
34357216,4756508,12/18/2015 13:51,2,1108,<git><bash><githooks><git-bash>,Can pre-receive hook edit commits?,"<p>I'm building a pre-receive hook to check the name and email address of the author.</p>

<p>I'm able to easily check if the name/email address of the commit using,</p>

<pre><code>while read oldsha newsha refname; do
        authorEmail=$(git log -1 --pretty=format:%ae $newsha)
        if [[ $(grep -w $authorEmail ~/.ssh/authorized_keys | wc -w) -gt 1 ]]; then
                        echo ""Author Email: $authorEmail""
                        exit 0
                else
                        echo ""Unauthorized Email""
                        exit 1
                fi
done
</code></pre>

<p>But instead of simply rejecting it, I want to replace the email with the right one.
I have authorized_keys set up like this,</p>

<pre><code>environment=""UserEmail=user@hostA"" ssh-rsa AAAAAA... user@hostA
</code></pre>

<p>So I'd like to do something along the lines of</p>

<pre><code>if [[ ... ]]; 
    then
        echo ""Author Email: $authorEmail""
        exit 0
    else
        echo ""Unauthorized Email detected""
        echo ""Replacing email with: $UserEmail""
        git commit --amend --author ""something &lt;$UserEmail&gt;""
        exit 0
    fi
</code></pre>

<p>But as expected, the git commit --amend .. throws an error that this should be used in a working tree.
Is there any way I can accomplish this here in the pre-receive or possibly the update hook?</p>
",0,4756508,0,0
57665821,2896438,8/26/2019 22:56,0,167,<git><jenkins><jenkins-pipeline><jenkins-plugins><githooks>,Git server-side hook: How to get remote URL from the server side,"<p>I have my own git server, and I am using git hooks (server side) to setup a Jenkins CI/CD pipeline. Currently I have an update hook doing a validation check, and a post-receive hook CURLing my Jenkins URL to trigger a build. I need to pass the remote URL of the repository to my Jenkins build, however I cannot find a way to receive the remote URL on the server side. I'd like to avoid a client-side hook, as people will be creating new repositories all the time, and I'd prefer to avoid having to enforce the hooks that they have on their end.</p>

<p>Is there any way to do this? Preferably he cleanest approach possible.</p>

<p>Thanks in advance</p>
",2,2896438,,
50818779,7088648,6/12/2018 13:44,1,1025,<git><githooks><flake8>,Install pre-push hook for flake8 python,"<p>I have read the official flake8 docs, it has defined a 2 step process to install git pre-commit hook: </p>

<pre><code>flake8 --install-hook git
git config --bool flake8.strict true
</code></pre>

<p>But it doesn't seem to provide any other type of hooks. Is there a way to install pre-push hook. Will just renaming <code>pre-commit.exe</code> to <code>pre-push.exe</code> work?</p>

<p>This is the <code>pre-commit</code> file:</p>

<pre><code>import sys
from flake8.main import git
if __name__ == '__main__':
    sys.exit(
        git.hook(
            strict=git.config_for('strict'),
            lazy=git.config_for('lazy'),
        )
    )
</code></pre>
",4,7088648,,
17840881,56449,7/24/2013 17:26,0,451,<git><iis><iis-6><githooks><webhooks>,Using IIS6 run a batch file when particular URL hit,"<p>We have a git repo on a IIS server (git installed) and when <code>test.com/updateRepo</code> is hit it should CD into a particular <code>dir</code> and execute  <code>git pull --rebase origin master</code> (or execute a batch file)</p>

<p>How do we go about this?</p>

<p>Need it be a .aspx page that will call that batch file?<br>
Can IIS run it directly?  </p>
",0,56449,,
591923,18751,2/26/2009 18:52,240,168301,<git><whitespace><githooks>,Make Git automatically remove trailing white space before committing,"<p>I'm using Git with my team and would like to remove white space changes from my diffs, logs, merges, etc. I'm assuming that the easiest way to do this would be for Git to automatically remove trailing white space (and other white space errors) from all commits as they are applied.</p>
<p>I have tried to add the following to the <code>~/.gitconfig</code> file, but it doesn't do anything when I commit. Maybe it's designed for something different. What's the solution?</p>
<pre><code>[core]
    whitespace = trailing-space,space-before-tab
[apply]
    whitespace = fix
</code></pre>
<p>I'm using Ruby in case anyone has any Ruby specific ideas. Automatic code formatting before committing would be the next step, but that's a hard problem and is not really causing a big problem.</p>
",3,18751,0,0
19823528,1583507,11/6/2013 21:48,4,734,<git><github><githooks><gitlab><git-bash>,Getting tags in Git Push on pre-receive,"<p>I'm using <code>pre-receive</code> hooks in GIT (using bash on Linux) to filter the push that are allowed into my repo.</p>

<p>I need to filter the push that developers do into my GIT repo, allowing just pushed with this requisites (<code>#</code> is number):</p>

<ul>
<li><code># Commits &gt; 0 &amp;&amp; # Tags != 0</code>: NO</li>
<li><code># Commits &gt; 0 &amp;&amp; # Tags == 0</code>: YES</li>
<li><code># Commits == 0 &amp;&amp; # Tags &gt; 1</code>: NO</li>
<li><code># Commits == 0 &amp;&amp; # Tags == 1</code> &amp;&amp; <code>Key is correct</code>: YES</li>
</ul>

<p>Consider branches and other operations same as commits. You can only push a single tag using the right key (specified in tag comment). You can't push a tag with other elements.</p>

<p>The problem is that <code>$refname</code> only have the HEAD ref, so if you do this order:</p>

<ol>
<li><code>Commit</code></li>
<li><code>Tag</code> (to any revision, even oldies)</li>
<li><code>Commit</code></li>
</ol>

<p>The <code>$refname</code> will point to the last reference (i.e. <code>/refs/heads/master</code>), so doing:</p>

<p><code>
if [[ ""$refname"" == ""refs/tags/""* ]]; then
 ...
fi
</code></p>

<p>Won't work in the order mentionated. I tried to iterate through references using <code>rev-list</code> and <code>for-each-ref</code>, without success.</p>

<p>How could I process the push being received, knowing the number of tags (and getting the comment of each one) to satisfy the upper conditions?</p>

<p>PS: Consider also the situation of pushing with --all option, receiving more than one branch.</p>
",6,1583507,0,0
19850759,1448070,11/8/2013 2:51,0,1070,<git><githooks>,Git: Create remote branch to point another repository,"<p>I have a repository which is actually a forked repository of some external repository. And I would like to create a remote branch named <code>upstream</code> which points to this external repository so that I can update every content of the external repository on the branch upstream.
How do I do that?</p>
",0,1448070,,
57898164,1191147,9/12/2019 0:10,0,1221,<wordpress><bash><git><githooks><git-post-receive>,Git post-receive hook doesn't work with Github,"<h1>Background and Setup</h1>

<p>I'm trying to follow <a href=""https://tqdev.com/2018-deploying-with-git-push-to-production"" rel=""nofollow noreferrer"">the last part of this tutorial here</a> to create a post-receive Git hook (really just an example, the instructions everywhere else are basically identical).</p>

<p>As well as my local repository, I have a GitHub repo set up as a remote called <em>central</em>, and a production server set up as a remote called <em>live</em>. 
I have everything in place such that I'm able to easily push from the local repository to GitHub, and SSH into the production server to pull from GitHub. </p>

<h1>The Goal</h1>

<p>I want to do away with the latter step entirely, so that all I need to do is push to the central repository, from where the production server will pull those changes automatically - and everything I've seen tells me a post-receive hook is the way to do this.</p>

<h1>The Problem</h1>

<p>For some reason, everything I've tried so far to get the post-receive hook to work has failed.</p>

<p>My <code>post-receive</code> file exists on my production server in <code>.git/hooks/</code>, it's been made executable with <code>chmod ug+x</code>, and yes, ""post-receive"" is spelt right. The <code>post-receive</code> file contains the following Bash code:</p>

<pre><code>#!/bin/sh
cd ~/www.example.com/public_html || exit
unset GIT_DIR
git pull central master
exec git update-server-info
</code></pre>

<p>I can even SSH into the production server and execute the <code>post-receive</code> hook manually, and yet for some reason it isn't triggered when I push to the central repository, <em>despite</em> the fact that all the guides specify this is the way it should work. </p>

<p>The single way that I've diverged from these guides is that the repository on my server is a non-bare one, but from what I've learnt of the differences between the two this shouldn't make a difference where it's already been established that I can push and pull as normal.</p>

<p>So why exactly is my post-receive hook not working?</p>

<h2>Edit: Test 1</h2>

<p>Changing the <code>cd</code> line to: </p>

<pre><code>cd ~/www.example.com/public_html &amp;&amp; touch ./cd_ran_successfully || exit
</code></pre>

<p>...and then doing the push command locally results in no <code>cd_ran_successfully</code> file being created on the server. However, manually executing the file when logged into the server, does create the file. This indicates some sort of problem with the user/process that the shared server is using to execute the file, but other than that I have no idea.</p>
",4,1191147,,
39021737,330914,8/18/2016 15:10,1,45,<git><github><command-line-interface><githooks>,Can I create a git hook that changes the branch I'm committing to?,"<p>I often find myself working on a feature branch and stumble upon a ""general fix"" I want to make that isn't related to this feature, but rather to the general dev branch (e.g. fix some styling, refactor something, etc).</p>

<p>So what I need to do is to stash my current progress, switch to the dev branch, make the change, commit it, go back to my original branch and apply my the latest stash. Now since this is a really repetitive and annoying task I was really hoping there would be a way to do such a thing using a commit hook based on the commit message. Basically I imagined it would be if I'm committing something with a message that starts with <code>##dev</code>, it would automatically know to do the process above.</p>

<p>Do you guys think its possible?</p>

<p>Thanks a lot in advance, Alex Z. :)</p>
",4,330914,0,0
57961129,513413,9/16/2019 16:39,4,8901,<git><githooks>,Git pre-commit hook: Prevent commits that change particular files,"<p>I have a few .json files under my project that contain several keys. These keys must not be under version control. I replaced those actual keys with fake ones in my project in order to prevent build fails on continuous integration.</p>

<p>However, developers need to copy/paste these files on their laptop before they are able to test the app.</p>

<p>Now, the problem is a developer might forget and mistakenly commit them into git. I want to run a <code>pre-commit</code> script that checks modified files and fails the commit if one of them is being added.</p>

<p>Is there any way I can do that?</p>
",0,513413,0,0
39417257,4313394,9/9/2016 17:57,1,55,<git><githooks><bitbucket-server>,Can a pre-receive hook block a user from pushing new files/folders?,"<p>I am trying to write a pre-receive hook which could block a user from pushing new files and folders. I know how to block a user from pushing changes but now I want to block new files/folders. The user should be able to push updates.</p>
",0,4313394,,
39898057,5935343,10/6/2016 14:00,2,488,<git><bash><githooks>,How to prevent pushing conflicts with a pre-receive hook placed on the remote bare repo?,"<p>I have two branches on my bare repo, Master and ""desarrollo"" which is development in spanish. I want to create a pre-receive hook to avoid pushing conflicts to the central bare. This hook would be positioned on the central bare. This is what I have:</p>

<pre><code>#!/bin/bash

protected_branch='master'





# check each branch being pushed


while read local_ref local_sha remote_ref remote_sha

do

if git diff ""$old_sha"" ""$new_sha"" | grep -qE '^+?(&lt;&lt;&lt;&lt;&lt;|&gt;&gt;&gt;&gt;&gt;)'; then
    echo ""Saw a conflict marker in $(basename ""$refname"").""
    exit 1
fi

remote_branch=$(echo $remote_ref | sed -e 's,.*/\(.*\),\1,')

if [ $protected_branch = $remote_branch ]

then

echo ""ABORT PUSH: Not allowed to push directly to $protected_branch.""

exit 1 # push will not execute

fi

done

exit 0
</code></pre>

<p>The first part is to prevent push of conflicted files, and the second part is to prevent pushing to master, I only allow pushes to desarrollo branch. The second part works perfectly, but the first part is not preventing the pushs, but it doesn't throw errors either when I try to upload a file with markups either. I want the transaction to fail altogether, not just reject the conflicted file but the whole push in case there is even a single file in conflict:</p>

<pre><code>if git diff ""$old_sha"" ""$new_sha"" | grep -qE '^+?(&lt;&lt;&lt;&lt;&lt;|&gt;&gt;&gt;&gt;&gt;)'; then
        echo ""Saw a conflict marker in $(basename ""$refname"").""
        exit 1
    fi
</code></pre>

<p>I must say I copied both parts from different sources, so there must be something wrong with the variable names, I just want to know is old_sha and new_sha variables are the reason of why this is failing since I'm not particularly good at making hooks</p>

<p>EDIT: I changed the string comparision from 5 to 7  '&lt;&lt;&lt;&lt;&lt;&lt;&lt;' and now it works perfectly, the final script is </p>

<pre><code>#!/bin/bash

protected_branch='master'


# check each branch being pushed


while read old_sha new_sha refname
do

if git diff ""$old_sha"" ""$new_sha"" | grep -qE '^+?(&lt;&lt;&lt;&lt;&lt;&lt;&lt;|&gt;&gt;&gt;&gt;&gt;&gt;&gt;)'; then
    echo ""Saw a conflict marker in $(basename ""$refname"").""
    exit 1
fi

remote_branch=$(echo $refname | sed -e 's,.*/\(.*\),\1,')

if [ $protected_branch = $remote_branch ]

then

echo ""ABORT PUSH: Not allowed to push directly to $protected_branch.""

exit 1 # push will not execute

fi

done

exit 0
</code></pre>
",1,5935343,,
3511057,410713,8/18/2010 10:23,34,12262,<git><git-push><githooks>,Git receive/update hooks and new branches,"<p>I have a problem with the 'update' hook. In the case of a new branch, it gets a 0000000000000000000000000000000000000000 as the 'oldrev'. And I don't know how to handle that case.</p>

<p>We have the requirement, that every commit message references a valid Jira issue. So I have installed an ""update"" hook on our central repository. That hook gets an ""oldrev"" and a ""newrev"". I then pass those to ""git rev-list"" like this:</p>

<p><code>git rev-list $oldrev..$newrev</code></p>

<p>This gives me the list of all revs, which I can then iterate through, and do whatever I need to do.</p>

<p>The problem is, when the user pushes a new branch, the hook gets 0000000000000000000000000000000000000000 as the oldrev. And ""git rev-list"" simply complains with:</p>

<p><code>fatal: Invalid revision range 0000000000000000000000000000000000000000..21bac83b2</code></p>

<p>So how do I get the list of all the revs that are on that new branch? I have searched the net for quite some time now, and found nothing. The example hooks I found either</p>

<ul>
<li>don't handle the problem, and fail with the above error message</li>
<li>incorrectly try to fix the problem by setting the oldrev to """", which returns the wrong results from rev-list</li>
<li>simply give up when they encounter that oldrev</li>
</ul>

<p>None of these sound particularly exciting.</p>

<p>So does someone have any idea how to get the right answer in that case? I was thinking about querying git for ""give me all revs that are reachable from newrev, but not from any of the other branches (=all branches except the new one)"". But even that would give the wrong answer if there had been a merge from the new branch to any of the old ones.</p>
",1,410713,0,0
66345812,14376283,2/24/2021 6:35,4,1339,<git><githooks><husky><git-husky>,How to run husky pre-push hook only when pushing to a certain branch of a certain remote?,"<p>Say I am working with multiple remotes:</p>
<pre><code>$ git remote -v
origin  https://github.com/ettie62/Quicke(fetch)
origin  https://github.com/ettie62/Quicke(push)
public  https://github.com/roslyn80/Quicke(fetch)
public  https://github.com/roslyn80/Quicke(push)
</code></pre>
<p>with each remote having multiple branches:</p>
<pre><code>$ git branch -a
* master
  refactor
  remotes/origin/HEAD -&gt; origin/master
  remotes/origin/master
  remotes/origin/refactor
  remotes/public/dev
  remotes/public/master
</code></pre>
<p>How can I run the following pre-push hook only when attempting to push to a certain branch of a certain remote, e.g. <code>public/master</code>, but not run it when pushing to say <code>origin/master</code>:</p>
<pre><code>&quot;husky&quot;: {
  &quot;hooks&quot;: {
    &quot;pre-push&quot;: &quot;CI=true npm test&quot;
  }
},
</code></pre>
",0,14376283,0,0
16801767,1490695,5/28/2013 21:26,2,1969,<git><github><repository><githooks>,How to add a pre-push git hook to an existing repository?,"<p>I have a repository that I created with <code>git version 1.7.12</code>.</p>

<p>However, I have updated to <code>version 1.8.2.3</code>. This has the hook pre-push. Newly created repositories with this version use the pre-push hook. However when I add the pre-push to an existing repo, I get the following <code>error</code>:</p>

<pre><code>fatal: cannot exec '.git/hooks/pre-push': Not a directory
</code></pre>

<p>Any help?</p>

<p>Thanks!</p>
",4,1490695,,
33365060,1532045,10/27/2015 10:10,3,475,<git><github><githooks><pull-request>,"Github - Restrict pull requests to master from all branches except ""develop"" branch","<p>I'd like to allow pull requests to ""master"" only from ""develop"" branch.</p>

<p>As of now I can create a pull request from a ""feature"" branch to ""master"" and this is not the behavior I want.</p>

<p>Is it possible to enforce this?</p>

<p>Couldn't find a way to do that in github</p>
",4,1532045,,
34492779,1123303,12/28/2015 11:35,0,357,<git><commit><githooks><pre-commit-hook>,Git: Update git status part of commit message after pre-commit hook,"<p>I am running a pre-commit hook which potentially adds new files to the commit. However, although this technically works as expected, the <code>git status</code> part of the commit message does not reflect this change.</p>

<p>For example, I am adding file <code>x</code> in a commit, so my <code>git status</code> beforehand gives the following:</p>

<pre><code>repo&gt;git status
On branch development
Your branch is up-to-date with 'origin/development'.

Changes to be committed:
  (use ""git reset HEAD &lt;file&gt;..."" to unstage)

        new file:   x
</code></pre>

<p>Now, suppose my git hook determines file <code>y</code> also needs to be commited. Although afterwards I can see <code>y</code> was indeed staged for the commit, my empty commit message (after the pre-commit hook has executed) gives the following:</p>

<pre><code># Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
# On branch development
# Your branch is up-to-date with 'origin/development'.
#
# Changes to be committed:
#       new file:   x
#
</code></pre>

<p>even though I am expecting </p>

<pre><code># Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
# On branch development
# Your branch is up-to-date with 'origin/development'.
#
# Changes to be committed:
#       new file:   x
#       new file:   y
#
</code></pre>

<p>Indeed, after aborting the commit I get the following <code>git status</code>:</p>

<pre><code>repo&gt;git status
On branch development
Your branch is up-to-date with 'origin/development'.

Changes to be committed:
  (use ""git reset HEAD &lt;file&gt;..."" to unstage)

        new file:   x
        new file:   y
</code></pre>

<p>In other words, how do I 'refresh' the automatically generated part of my commit message in the pre-commit hook?</p>

<p>EDIT:
My pre-commit hook currently looks as follows.</p>

<pre><code>#!/bin/sh
gulp --production

vendor/bin/phpunit

rc=$?
if [[ $rc != 0 ]] ; then
    echo ""phpunit failed - commit denied""
    exit $rc
fi

git add public
</code></pre>

<p><code>gulp</code> does things like compile SCSS and potentially move things to my public/ directory. If this happens I want to add those files to the commit, hence the <code>git add public</code> directive at the end.
So even though these files <em>do</em> get added to the commit, the <code>git status</code> part of the commit message does not reflect this.</p>
",3,1123303,,
35544725,999452,2/22/2016 2:09,0,37,<git><githooks><git-pull>,Aside from git hook is there an internal GIT command to watch files for commits,"<p>As for as my knowledge with git hooks, almost everything can be done from hooking every commit to a build checker, code ruling (i.e., checkstyle, etc.). and many more. However, things can be a little bit different especially if you don't have any authority on the repository host.</p>

<p>I'm looking for solutions for watch certain files on my remote and/or local repository (i.e., files that I've modified and keep track of the changes from my last previous push). Maybe like this scenario, given a list of files, when I invoke <em>git pull</em> it will check files that have been updated and show me the log of each files (more like <em>git diff</em>).</p>

<p>Is there a way to make this possible? Let me know if you have other options or concerns regarding the content.</p>
",0,999452,,
19242401,643366,10/8/2013 8:10,3,5084,<git><githooks>,Git Hook `post-receive` with `git pull` runs well via command line but returns empty string on automatic hook,"<p>Just like many, I am trying to create a <code>post-receive</code> hook on a server-side remote git. The following is my code:</p>

<p><code>cd [LIVE SITE DIR] &amp;&amp; git pull origin master | wall</code></p>

<p>I have added the <code>wall</code> so that it can be broadcasted and I can receive the notice. One thing that I noticed is when I run <code>./post-receive</code>, it all works fine.</p>

<pre><code>Broadcast message from root (Tue Oct  8 14:58:13 2013):

Updating 7ebd925..1a25791
Fast-forward
 html/header.php | 2 +-
 1 file changed, 1 insertion(+), 1 deletion(-)
</code></pre>

<p>But, when I tried to do a <code>git push</code> , <code>./post-receive</code> seems to be called but I received the following empty broadcast:</p>

<pre><code>Broadcast message from root (Tue Oct  8 14:53:32 2013):
</code></pre>

<p>I have tried to include <code>pwd</code>, <code>ls</code> command into the <code>post-receive</code> and everything works fine for both situations. Except for the <code>git pull</code> that it seems to return an empty output.</p>

<p>Have gone through all the suggestions provided in SO but to no avail :(. Any help or suggestion is much appreciated.</p>

<p>Thanks!</p>
",0,643366,0,0
19284066,2864874,10/9/2013 22:42,0,827,<git><githooks><bitbucket-server>,How can I copy files from a Stash repository after a Stash merge,"<p>I read that there are no post-merge hooks available in Atlassian Stash per <a href=""https://answers.atlassian.com/questions/130202/post-hooks-unsuccessfully-triggered-after-clicking-merge-button-in-a-pull-request"" rel=""nofollow"">this article</a>.  My bare Stash repository is outside the document tree and I'd like for it to copy the working directory into a directory in the document root after a merge has completed in Stash.  I know that bare repositories don't have working directories but I saw a git command that utilized --work-tree and --git-dir on a bare repository to check out the files into another directory.  <a href=""https://www.youtube.com/watch?v=fPqYatEGjfc"" rel=""nofollow"">See here</a> - pause at 11:43</p>

<p>The referenced article also mentioned something about the Stash SDK but I didn't know if this would allow me to extract the working directory from the bare repository.  This seemed like something Git would need to handle.</p>

<p>If anyone has any suggestions on accomplishing this through Stash-available hooks, I'd appreciate it.  Certainly not opposed to accomplishing through other means, as well.</p>

<p>Thank you</p>
",0,2864874,,
19291688,105334,10/10/2013 9:15,3,2152,<git><githooks>,Git pre-receive hook to check config,"<p>Id like to set a pre-receive hook in our git server that checks a config file and discards the push if it's invalid (I want to check presence of certain tokens depending on branch name). But I've seen preceive hook just receives a list of (old-rev, new-rev, refname) and the only way I've found to inspect file contents is diffing those references, which is not very confortable.</p>

<p>Is there an easy way to do this?
With a precommit hook it would be easier but I'd like to have a last barrier in the server.</p>
",0,105334,0,0
19325518,241142,10/11/2013 19:10,3,193,<git><githooks><pre-commit-hook>,Can Git be made to preserve HFS+ extended attributes?,"<p>Is there any way to make Git preserve HFS+ extended attributes?  All I can think of is some Rube-Goldberg system where I use a commit hook script that reads the extended attributes from the file and records them somewhere else, and a checkout hook script that later applies them when checking out. But I'm hoping there's an easier way.</p>

<p>And yes I realize this is slightly outside of the scope of what Git is really designed for.  But since it is so incredibly powerful (and in some ways quite flexible) I'm hoping there's a way to do this.</p>
",5,241142,0,0
19387073,2859666,10/15/2013 17:12,24,7927,<git><githooks>,How to detect commit --amend by pre-commit hook ?,"<p>When I do commit --amend, it is unsafe commit if the commit already has been pushed to remote repository.</p>

<p>I want to detect unsafe commit --amend by pre-commit hook and abort.</p>

<p>But pre-commit hook has no arguments. I don't know how to detect --amend.</p>

<p>What should I do ?</p>
",2,2859666,0,0
19401865,2764163,10/16/2013 11:10,1,105,<git><githooks>,How to pass more input params into a git hook?,"<p>Currently the git hook I have is 
curl -X POST  <a href=""https://xyz.abc.com:9674/t/manipiya5.com/webapps/jenkins/git/notifyCommit?url=https://abc.com:8443/git/manipiya5.com/manipiya5app1.git"" rel=""nofollow"">https://xyz.abc.com:9674/t/manipiya5.com/webapps/jenkins/git/notifyCommit?url=https://abc.com:8443/git/manipiya5.com/manipiya5app1.git</a></p>

<p>I want to pass a user name also as userName=manipiya@manipiya.com</p>

<p>How can I modify the curl command?
I tried the following, but the username was not passed to the backend.
curl -X POST  <a href=""https://xyz.abc.com:9674/t/manipiya5.com/webapps/jenkins/git/notifyCommit?url=https://abc.com:8443/git/manipiya5.com/manipiya5app1.git&amp;tenantUserName=manipiya5@manipiya5.com"" rel=""nofollow"">https://xyz.abc.com:9674/t/manipiya5.com/webapps/jenkins/git/notifyCommit?url=https://abc.com:8443/git/manipiya5.com/manipiya5app1.git&amp;tenantUserName=manipiya5@manipiya5.com</a> </p>

<p>Tried even with the below, but was not successful. 
curl -X POST curl -X POST  <a href=""https://xyz.abc.com:9674/t/manipiya5.com/webapps/jenkins/git/notifyCommit?url=https://abc.com:8443/git/manipiya5.com/manipiya5app1.git"" rel=""nofollow"">https://xyz.abc.com:9674/t/manipiya5.com/webapps/jenkins/git/notifyCommit?url=https://abc.com:8443/git/manipiya5.com/manipiya5app1.git</a> -d 'tenantUserName=manipiya5@manipiya5.com'</p>

<p>Please help ASAP.</p>
",2,2764163,0,0
69508005,11670279,10/9/2021 15:11,0,155,<bash><git><shell><npm><githooks>,npm package not working in custom bash script during pre-commit hook,"<p>I want to run lint-staged in my custom pre-commit hook.<br />
I have the .githooks in the root of my project. I symlink them and hooks work, they get invoked correctly. Then server folder is also at the same level. And inside server I have my node_modules and package.json
pre-commit hook get invoked, but lint-staged doesn't throw any error and my script is successfully executed. But I am sure that staged file has errors, because lint-staged throws error if I directly call it in my terminal.</p>
<p><strong>.githooks/pre-commit</strong></p>
<pre><code>    #!/bin/bash
    script_path=$(readlink -f &quot;$0&quot;)
    hooks_dir=$(dirname &quot;$script_path&quot;)
    root_dir=$(dirname &quot;$hooks_dir&quot;)
    echo &quot;Running pre-commit&quot;
    cd &quot;${root_dir}/server&quot; &amp;&amp; npx lint-staged
</code></pre>
",0,11670279,,
39775961,522560,9/29/2016 16:53,0,481,<git><bash><git-branch><githooks>,Git hook to get prior branch name,"<p>I'm working on <code>.git/hooks/post-checkout</code> and having trouble either sourcing/exporting the branch name, or getting the prior branch name.  I want to restart the server when <strong>switching to or from <code>s3</code> branch</strong>.</p>

<p>I couldn't figure out how to source the env var in bash, so I tried using git to get the prior branch, but the closest I got was <code>git checkout -</code>/<code>git checkout @{-1}</code>, tho I'm not sure simply how to retrieve the prior branch name without the call to checkout.</p>

<p>Should I be using Git env vars instead of shell?</p>

<h3>Current file just restarts the server on each checkout</h3>

<pre><code>#!/bin/bash

touch tmp/restart.txt
echo "" *** restarting puma-dev""

current_branch=$(git branch | sed -n -e 's/^\* \(.*\)/\1/p')
if [ ""$current_branch"" = ""s3"" ]
then
  echo "" *** please don't upload any files""
  echo
fi
</code></pre>
",0,522560,,
51166403,9905751,7/4/2018 5:35,1,2391,<git><github><githooks>,"git - remote: fatal: you are on a branch yet to be born, using post-receive hook","<p>So I am trying to sync to github branches to two parts of my website, theoretically the master branch in my <a href=""https://github.com/wesleynw/tinyweatherstation.com"" rel=""nofollow noreferrer"">github</a> should be synced with my website <a href=""http://tinyweatherstation.com"" rel=""nofollow noreferrer"">tinyweatherstation.com</a> and the beta branch should sync with <a href=""http://beta.tinyweatherstation.com"" rel=""nofollow noreferrer"">beta.tinyweatherstation.com</a>, and I have successfully gotten the post-receive hook working with the master branch, but when this for the beta branch: </p>

<pre><code>git remote add live_beta ssh://wesley@tinyweatherstation.com/var/www/tinyweatherstation.com.git
git push live_beta +beta:refs/heads/beta
</code></pre>

<p>I get the error: </p>

<pre><code>    Enter passphrase for key '/c/Users/WesleyN/.ssh/id_rsa':
Counting objects: 999, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (967/967), done.
Writing objects: 100% (999/999), 5.04 MiB | 529.00 KiB/s, done.
Total 999 (delta 360), reused 0 (delta 0)
remote: Resolving deltas: 100% (360/360), done.
remote: fatal: You are on a branch yet to be born
To ssh://tinyweatherstation.com/var/www/beta.tinyweatherstation.com.git
 * [new branch]      beta -&gt; beta
</code></pre>

<p>The post receive hook looks like this...</p>

<p><code>#!/bin/sh
GIT_WORK_TREE=/var/www/beta.tinyweatherstation.com/html git checkout -f</code></p>

<p>I have commited to this branch (beta) so I know it is there, so please help...</p>
",2,9905751,,
51178382,8274165,7/4/2018 17:10,13,1794,<git><githooks>,How to run local Git project hooks in addition to core.hooksPath global hooks?,"<p>Currently I'm using </p>

<pre><code>git config --global core.hooksPath ~/.git/hooks
</code></pre>

<p>to configure global hooks for all my git projects. But if those projects contain hooks, they're not run. </p>

<p>I'd like to run the global hook as well as the project hooks. Thank you!</p>
",0,8274165,0,0
51182771,5840491,7/5/2018 2:53,1,38,<git><githooks>,How can I check by hook whether there is a file deletion operation?,"<p>How can I check by hook whether there is a file deletion operation?</p>

<p>What I want is that I can get an email alarm if someone deleted a file in a certain commit.</p>
",0,5840491,0,0
43072894,6654215,3/28/2017 14:53,0,86,<git><github><githooks>,Git Hooks: Need to change a string when you merge with master,"<p>I am trying to make a git hook that will be called before the git merge that will change some strings in my code. This is so I can have a development branch that is solely development and my master branch to resemble production. I was thinking a post-merge script could be used, check to see if the merge was into master and then do the changes. Otherwise it wouldn't do a thing. What is the best idea?</p>

<p>Edit: I need a way to change some strings in a file that git knows about. So in a file foo.txt I want to change line 4 to be a different string. </p>
",2,6654215,,
51213849,9904522,7/6/2018 15:46,0,976,<git><githooks>,git hooks- fetch git commit id,"<p>I want to fetch the current git commit id of the repository either before user pushes to GitHub of after user clones from GitHub. This commit id should then be written onto a file, which is also in the repository. Is it possible to do this using any Git hook?   </p>

<p>I have a c++ function that displays the current git id. If a user downloads (.zip) of my repository it should display the commit id that was present GitHub when they downloaded it. If they clone the repo, later commit to it, git id should get updated. Any way to do this?</p>
",5,9904522,0,0
25687363,795398,9/5/2014 13:45,1,501,<git><deployment><githooks>,Deploying /dist folder of repo with Git post-update hook,"<p>This is a post-update hook (took it from  <a href=""http://blog.g-design.net/post/60019471157/managing-and-deploying-wordpress-with-git"" rel=""nofollow"">here</a>), I've set in the bare repository on a server. It deploys the entire repository to the path at <code>GIT_WORK_TREE</code>:</p>

<pre><code>#!/bin/sh
export GIT_WORK_TREE=/path/to/you/live/files
git checkout -f
</code></pre>

<p>How to setup a post-update hook in Git in order to deploy only the dist/ folder of the repository?</p>
",0,795398,,
26336135,898099,10/13/2014 8:53,1,2264,<git><nginx><githooks>,nginx: run bash script on POST as specific user,"<p>I have a nginx and git servers on one CentOS host, my git repo on bitbucket. What I wanna do is to execute a bash script, when specific POST request is received from Bitbucket.</p>

<p>What I have:</p>

<p><strong>1)</strong> dedicated user <code>nginx-script-runner</code>.</p>

<p><strong>2)</strong> nginx config:</p>

<pre><code>location / {
    rewrite ^(.*)$ /main.php?$1;
}
</code></pre>

<p><strong>3)</strong> main.php:</p>

<pre><code>exec('/bin/bash /script.sh')
</code></pre>

<p><strong>4)</strong> /script.sh:</p>

<pre><code>sudo -u nginx-script-runner /bin/bash /pull.sh
</code></pre>

<p><strong>5)</strong> sudoers:</p>

<pre><code>nginx-script-runner ALL=NOPASSWD: /pull.sh
</code></pre>

<p><code>pull.sh</code> automatically pulls from the remote origin and runs the 'build' procedure. Build procedure depends on <code>npm</code>, <code>bower</code>, <code>composer</code>, <code>grunt</code> etc (I also use <code>nvm</code> for the node version management). Those tools are meant to be run when there's real user logged in. The thing is — I login to CentOS via PKA only, no passwords, so my <code>pull.sh</code> falls under requirement to be able to run it as multiple users (me and <code>nginx-script-user</code>). And since it's a git repo, it has <code>node_modules</code>, <code>bower_components</code>, composer's <code>vendor</code> folder I should somehow manage privileges.</p>

<p><strong>1st problem</strong>: I cannot really run <code>pull.sh</code> with different users. Even when I have:</p>

<pre><code>DIR='/repo.git'
#chgrp -R tactic ""$DIR""
#chmod -R g+w ""$DIR""
#find ""$DIR"" -type d -exec chmod g+s {} \;
setfacl -R -m g:common-group:rwX ""$DIR""
find ""$DIR"" -type d | xargs setfacl -R -m d:g:common-group:rwX
</code></pre>

<p>I still end up having loads of ""chgrp/chown permission denied"" error.</p>

<p><strong>2nd problem</strong>: I cannot really execute <code>pull.sh</code> with either of users from <code>main.php</code>.</p>

<p>Any help would be much appreciated.</p>

<p><strong>P.S.</strong></p>

<ul>
<li>Both my personal user (with PKA) and <code>nginx-script-runner</code> (password auth only, no external SSH access) belong to common group <code>common-group</code>.</li>
<li>After the git repo was cloned, I've configure it with <code>git config core.sharedRepository true</code>  and ran the privileges fix.</li>
</ul>
",4,898099,,
51233882,1760615,7/8/2018 16:15,1,232,<git><githooks>,Git pre-push hook merge conflict,"<p>I'm trying to build my latex file before every push, so I use the <code>pre-push</code> script:</p>

<pre><code>#!/bin/sh

./compile y    # just does latex,bibtex,latex,latex
if [ ""$?"" -eq 0 ]; then
    git commit -a --amend --no-edit 
else
    echo ""An error has occurred, check the logs in .bits""
fi
</code></pre>

<p>Every time I push, it succeeds but then I get a merge conflict over the compiled pdf file when I pull. I don't understand.</p>
",0,1760615,,
9180324,1040154,2/7/2012 16:50,0,674,<git><githooks>,git post-receive to manage website with generated files,"<p>I have a web application that I would like to bring under version control using git.  I have done this on the server with several other sites using the following strategy.  </p>

<pre><code>$ mkdir /var/git/example.git &amp;&amp; cd /var/git/example.git
$ git init --bare
$ cat &gt; hooks/post-receive
#!/bin/sh
GIT_WORK_TREE=/var/www/example.com git checkout -f
$ chmod +x hooks/post-receive
.... add files, commit, push, yada yada
</code></pre>

<p>The process works fine whenever I have done it in the past, but for this new site there is a new wrinkle for me.  This new site generates files and stores them in a directory.  The directory is writeable by the webroot.  Let's call that directory:</p>

<pre><code>/var/www/example.com/generatedfiles/
</code></pre>

<p>My concern is that the <code>checkout -f</code> will delete this directory and I will lose all the generated content.  I also don't want that content in my git repository.</p>

<p>So, my question is how can I setup my post-receive hook so that it leaves the generatedfiles directory alone, but I still get the effectiveness of <code>checkout -f</code>?</p>
",5,1040154,,
26952108,4228909,11/15/2014 23:43,1,327,<php><git><github><githooks>,GitHub Payload from Hook not returning?,"<p>I have created a simple script located on my public server.</p>

<pre><code>if($_GET['secret'])
{
   if($_GET['secret'] == $update_key)
   {
      $payload = json_decode(stripslashes($_POST['payload']));

      print_r($payload, TRUE);
   }
}
else
{
   die('You are not authorized');
}
</code></pre>

<p>And then I created a WebHook in my GitHub Project with an application type of <code>application/json</code> that points to the script above. </p>

<p>Now when I push to my repository and then take a look at the body of the response in GitHub on the manage webhooks page, I see that when this was requested, the body of the page was blank. </p>

<p>Why is it not displaying the payload from GitHub?</p>

<p><strong>NOTE:</strong> I have tried both <code>$_POST['payload']</code> and <code>$_REQUEST['payload']</code> with the same results. </p>

<p><strong>Why are you trying to get a hook?</strong></p>

<p>Simple, I am wanting to call the hook when I create a new release on GitHub and then pull the release notes from the payload and store them in a file called <code>release.txt</code> on the same server. </p>

<p>But right now I can't even get the payload to show up.</p>
",0,4228909,0,0
51245246,7949129,7/9/2018 12:08,0,45,<bash><git><tags><githooks><git-server>,Commit software with version number as tag and process tag in server hook,"<p>I have a toolchain which builds my documentation of a project everytime when a new push arrives to my Git server.</p>

<p>When there is no specific version, the documentation should be build with the reference called ""latest"". But when I decice to set a version with the use of a Git tag, the tag should be used in the Git hook to build the documentation with this version number.</p>

<p>The pseudo-code of the hook should look like this:</p>

<pre><code>if (tag_for_this_commit_exists):
    build_docs(str(tag_of_this_commit))
else:
    build_docs(""latest"")
</code></pre>

<p><strong>Question 1:</strong></p>

<p>How can i extract in the post-receive hook the information, if there is a tag assigned to the commit and if there was, which one?</p>

<p><strong>Question 2:</strong></p>

<p>How can I add the tag on the command line in a way that it belongs exactly to the push event and is pushed to the server together with the push of the software?</p>
",5,7949129,,
9665220,761202,3/12/2012 10:16,-1,254,<git><githooks>,What operations cause a remote repository to update multiple refs,"<p>While playing around with some hooks I noticed that the output from the hooks invoked when pushing to a remote repository are subtly different:</p>

<pre><code>hooks/pre-receive
stdin: [[old-value new-value ref-name]]

hooks/update ref-name old-value new-value

hooks/post-receive
stdin: [[old-value new-value ref-name]]

hooks/post-update ref-name
</code></pre>

<p>Where:</p>

<ul>
<li>*value: a commit hash</li>
<li>ref-name: for example, refs/heads/master</li>
</ul>

<p>The format of the information the hooks receive is not consistent, but of particular interest to this question is that pre and post receive can accept multiple updated refs via standard input. The docs say:</p>

<blockquote>
  <p>This hook executes once for the receive operation. It takes no arguments, but for each ref to be updated it receives on standard input a line of the format:</p>
  
  <p>old-value new-value ref-name</p>
</blockquote>

<p>Therefore, <strong>under what circumstances would these hooks receive multiple values?</strong></p>
",0,761202,,
31033097,221450,6/24/2015 17:23,1,154,<git><githooks><gitolite>,gitolite/git: how can I bypass a pre-receive hook on demand?,"<p>I wrote a pre-receive hook that secure static analyze the submitted code and prevent the push whenever some code contains some bugs/weakness/vulnerabilities. </p>

<p>Unlikely in some cases cppcheck reports some false positive and I would like to give to sw engineers the possibility to quickly bypass the hooks. </p>

<p>How can I achieve that on gitolite/git ? </p>

<p>I'm aware of the comments that can instruct cppcheck to report some findings but I can't use it. </p>
",0,221450,0,0
31033196,221450,6/24/2015 17:29,0,140,<git><githooks><gitolite>,gitolite/git: how can I automatically populate the git pre-commit/pre-push hook,"<p>I would like to automatically populate the .git/hook/pre-push/pre-commit file with custom content whenever someone clone my repositories. </p>

<p>How can I achieve that ? </p>
",0,221450,,
51315327,,7/12/2018 22:28,6,5498,<git><github><githooks>,Check commit size before pushing to git remote,"<p>I have a bug in my editor (it's horrible) where on occasion big files get written to the working directory. I then do a <code>git push</code> without manually checking for these big new files and the git remote gets overloaded and eventually errors out. </p>

<p>Is there some check (maybe a git hook) that I can use to check if my repo is above a certain size in MBs?</p>
",4,,0,0
51315942,5796806,7/12/2018 23:54,1,781,<python><git><githooks>,diff in pre-receive hook,"<p>I have written a simple server side git pre-receive hook in Python. Goal is to analyze diffs and reject pushes that have certain text that we consider invalid. I wrote the hook using below set of commands : </p>

<pre><code>git ls-tree
git diff --name-only
git cat-file 
</code></pre>

<p>however I just noticed that i am scanning entire files that are pushed as part of the commit. But I only want to scan the diff ie the changed lines in this push.</p>

<p>The reason for that is some invalid text can be false positive and is okay. It can be force pushed. However if the same file is edited again and valid text is added, the push will be rejected just because that file previously had invalid text. And this will happen each time the file is edited which is kinda annoying</p>

<p>So basically the question is , how to get just the changed linesdiff in the current push on server side hook code instead of scanning complete files. </p>

<p>Thanks</p>
",0,5796806,,
51323137,3409352,7/13/2018 10:31,1,191,<git><bitbucket><githooks>,git client side hook to allow access only to permissible branches,"<p>I have a scenario where on bitbucket I have assigned branch permissions but when the user does a commit on his local and tries to push that to a specific branch he comes to know the error at the time of push so its a rework for him to switch to other branch and again make a commit. So, I am thinking of a git hook like pre-push or pre-commit which can restrict user before the actual commit. Can anybody help me with the correct client side hook which can be implemented in such a case and why that hook should be used? PS: no server side hooks can be implemented.</p>
",0,3409352,,
17966588,543842,7/31/2013 9:28,0,542,<ruby-on-rails><git><rails-migrations><githooks>,How to notified about pending Rails migrations after git pull?,"<p>I think everybody had that problem. When you colleague creates a migration and you forget to run it after <strong>git pull</strong>. As I understand, this can be done by <strong>post-checkout</strong> git hook. Is there a ready solution? </p>

<p>If not, suggest how to make this check. Simple solution is to run rake db:abort_if_pending_migrations in git hook, but it will be too slow.</p>
",0,543842,0,0
35658887,454488,2/26/2016 18:16,1,3097,<git><githooks>,git pre-commit or update hook for stopping commit with branch names having Case Insensitive match,"<p>Is there a way to write a git pre-commit hook to stop commits with identical names with the only difference being upper and lower cases.</p>

<p>e.g <br>
branch name 1 : firstBranch<br>
branch name 2 : FirstBrancH <br>
branch name 3 : firsTbranch <br></p>

<p>but branch name: firstbranchname should be allowed.</p>

<p>if a commit is done at time T for the branch name firstBranch , then at T+n , Commit with branch name ""FirstBrancH"" or any combination, git pre-hook would not allow commit. This needs to be a server hook, as client hooks can be pypassed easily.</p>

<p>so my thoughts are:</p>

<p>so i get the $NAME of the branch being committed to , then compare it with ALL the branches ignoring CASE, and FAIL it with a message 
if the match passes.</p>

<p>i have setup a pre-receive hook on the gitlab server:</p>

<pre><code>#!/bin/bash

check_dup_branch=`git branch -a | sed 's; remotes/origin/;;g' | tr '[:upper:]' '[:lower:]' | uniq -d`
  if [ check_dup_branch ]
  then
    echo ""Duplicate CaseInsensitive Branch Name Detected""
    exit 1
  fi
exit 0
</code></pre>

<p>as per the instructions :</p>

<ol>
<li><p>Pick a project that needs a custom git hook.</p></li>
<li><p>On the GitLab server, navigate to the project's repository directory. For an installation from source the path is usually /home/git/repositories//.git. For Omnibus installs the path is usually /var/opt/gitlab/git-data/repositories//.git.</p></li>
<li><p>Create a new directory in this location called custom_hooks.</p></li>
<li><p>Inside the new custom_hooks directory, create a file with a name matching the hook type. For a pre-receive hook the file name should be pre-receive with no extension.</p></li>
<li><p>Make the hook file executable and make sure it's owned by git.</p></li>
<li><p>Write the code to make the git hook function as expected. Hooks can be in any language. Ensure the 'shebang' at the top properly reflects the language type. For example, if the script is in Ruby the shebang will probably be #!/usr/bin/env ruby.</p></li>
</ol>

<p>But its not working as expected. </p>

<p>if i push aaa, when AAA is already in gitlab, gives me error:</p>

<pre><code>remote: Duplicate CaseInsensitive Branch Name Detected
</code></pre>

<p>but it also gives me the same ""Duplicate"" message when i try to push branch bbb</p>

<p>I expect it to not allow the commit if the branch name is duplicate ) ignoring case )  </p>

<pre><code>After a bit more study on git hooks:
</code></pre>

<p>ref: If you want to accept or reject branches on a case-by-case basis, you need to use the update hook instead.</p>

<p>when update hook is:</p>

<pre><code>#!/usr/bin/python
import sys
print ""Testing pre-receive Hook in Python""

branch = sys.argv[1]

print ""Branch '%s' pushing"" %(branch)

sys.exit(0)
</code></pre>

<p>git push origin AAA</p>

<pre><code>Total 0 (delta 0), reused 0 (delta 0)
remote: Testing pre-receive Hook in Python
remote: Branch 'refs/heads/AAA' pushing
</code></pre>

<ul>
<li>[new branch]      AAA -> AAA</li>
</ul>

<p>now we have to compare like grep -i , git branch -a and do a uniq -d with aaa , after lower casing ALL branches</p>

<p>and then comparing, and IF there is a MATCH, call sys.exit(1)</p>

<p>to NOT allow the push</p>

<p>python update hook:</p>

<pre><code>#!/usr/bin/python
import sys
import subprocess

#print ""Testing pre-receive Hook""

branch = sys.argv[1]
old_commit = sys.argv[2]
new_commit = sys.argv[3]

#print ""Moving '%s' from %s to %s"" % (branch, old_commit, new_commit)
#print ""Branch '%s' pushing"" %(branch)
#print ""old_commit '%s' pushing"" %(old_commit)
#print ""new_commit '%s' pushing"" %(new_commit)

def git(*args):
    return subprocess.check_call(['git'] + list(args))

if __name__ == ""__main__"":
    #git(""status"")
    #git(""for-each-ref"" , ""refs/heads/"" , ""--format='%(refname:short)'"")
    git(""for-each-ref"" , ""--format='%(refname:short)'"")
sys.exit(0)
</code></pre>

<p>further enhancement in the python update hook:</p>

<pre><code>#!/usr/bin/python
import sys
import subprocess

#print ""Testing pre-receive Hook""

branch = sys.argv[1]
old_commit = sys.argv[2]
new_commit = sys.argv[3]

# order is important, for update hook: refname oldsha1 newsha1
print ""Moving '%s' from %s to %s"" % (branch, old_commit, new_commit)
print ""Branch '%s' "" %(branch)
print ""old_commit '%s' "" %(old_commit)
print ""new_commit '%s' "" %(new_commit)

def git(*args):
    return subprocess.check_call(['git'] + list(args))
    #if %(branch).lower() in []array of results from the git for-each-ref
    #sys.exit(1)

def get_name(target):
    p = subprocess.Popen(['git', 'for-each-ref', 'refs/heads/'], stdout=subprocess.PIPE)
    for line in p.stdout:
        sha1, kind, name = line.split()
        if sha1 != target:
            continue
        return name
    return None
if __name__ == ""__main__"":
    #git(""status"")
    #git(""for-each-ref"" , ""refs/heads/"" , ""--format='%(refname:short)'"")
    #cmd = git(""for-each-ref"" , ""--format='%(refname:short)'"")
    cmd = git(""for-each-ref"" , ""--format='%(refname:short)'"")
    #print cmd
    #print get_name(branch)
    #print get_name(old_commit)
    print get_name(new_commit)
sys.exit(0)
</code></pre>

<p>so the reject case, is of course compare the current %(branch) , or % (refname:short) , and compare it with ALL the existing refnames, in an IgnoreCase manner, and if found ( 1 or many ) then do a sys.exit(1) with a message ""Duplicate branch name"" </p>

<p>but currently what i get is:</p>

<pre><code>remote: Moving 'refs/heads/IIII' from 0000000000000000000000000000000000000000 to 4453eb046fe11c8628729d74c3bec1dd2018512e
remote: Branch 'refs/heads/IIII'
remote: old_commit '0000000000000000000000000000000000000000'
remote: new_commit '4453eb046fe11c8628729d74c3bec1dd2018512e'
remote: refs/heads/10B
</code></pre>

<p>and somehow the remote: refs/heads/10B stays static. so i am not sure how i can convert the result of :</p>

<pre><code>cmd = git(""for-each-ref"" , ""--format='%(refname:short)'"")
</code></pre>

<p>into a list or array, and then do a string comparison between each element, and 
remote: Branch 'refs/heads/IIII'</p>
",0,454488,0,0
51385688,5174213,7/17/2018 15:53,0,117,<jenkins><github><githooks><pull-request><jenkins-github-plugin>,trigger open source jenkins job for a github merge,"<p>This is our tool set:
jenkins: Open source Jenkins running on AWS server - 2.107.2
Github: 2.13.3 version</p>

<p>Requirement:
We need to create a GitHub hook in such a way that, if anyone merges the branch (create pull request and merge it), then it should trigger the Jenkins job.We do not use multibranch pipeline, we use just pipeline jobs i.e we use jenkisnfile to run our jobs.</p>

<p>so, i have enabled the ""PullRequestEvent"" in github webhooks. Then i have enabled scm polling in Jenkins job for that particular job.But, the issue is the job is getting triggered for a commit to the xyz branch and also if we merge the pull request. But, the expected behavior is, the job should be triggered only for the merge.</p>

<pre><code>polling log :
This page captures the polling log that triggered this build.
Started on Jul 17, 2018 2:04:00 PM
Using strategy: Default
[poll] Last Built Revision: Revision xyzz (origin/development)
&gt; /app/digital/tools/git/bin/git --version # timeout=10
using GIT_ASKPASS to set credentials Githubread id generated on 20th Jan   2017
&gt; /app/digital/tools/git/bin/git ls-remote -h https://github.xyz.net /abc/Test-SourceCode-Jenkins # timeout=10
Found 3 remote heads on https://github.xyz.net/abc/Test-SourceCode-Jenkins
[poll] Latest remote head revision on refs/heads/development is: xyzz
Done. Took 1.8 sec
Changes found
</code></pre>

<p>jenkins configuration:</p>

<p><img src=""https://i.stack.imgur.com/SGvfO.png"" alt=""jenkins configuration""></p>
",2,5174213,,
36625093,6034506,4/14/2016 13:46,2,1287,<git><githooks>,Location of server-side .git/hooks folder,"<p>I need to monitor changes in multiple Git repositories. I know it can be done with so called git-hooks. Searching the internet (here, GitHub, ...) I found something in the Atlassian tutorials: <a href=""https://www.atlassian.com/git/tutorials/git-hooks/server-side-hooks"" rel=""nofollow"">https://www.atlassian.com/git/tutorials/git-hooks/server-side-hooks</a>. However, I just can't find where they are located. As far as I understand, they should be located somewhere, since they are opened to developers, at least according to what the text hints. So, anyone knows where to find them?</p>
",0,6034506,,
52680121,827525,10/6/2018 14:38,0,6490,<git><githooks>,No such file or directory error on commit hook,"<p>This is my <code>pre-commit</code> hook</p>

<pre><code>#!/bin/sh

echo ""pre-commit started""

filename=""$1""
lineno=0

error() {
    echo ""$1""
    exit 1
}

while read -r line
do
    [[ ""$line"" =~ ^#.* ]] &amp;&amp; continue

    let lineno+=1
    length=${#line}

    if [[ $lineno -eq 1 ]]; then
        [[ $length -gt 50 ]] &amp;&amp; error ""Limit the subject line to 50 characters""
        [[ ! ""$line"" =~ ^[A-Z].*$ ]] &amp;&amp; error ""Capitalise the subject line""
        [[ ""$line"" == *. ]] &amp;&amp; error ""Do not end the subject line with a period""
    fi

    [[ $lineno -eq 2 ]] &amp;&amp; [[ -n $line ]] &amp;&amp; error ""Separate subject from body with a blank line""
    [[ $lineno -gt 1 ]] &amp;&amp; [[ $length -gt 72 ]] &amp;&amp; error ""Wrap the body at 72 characters""
done &lt; ""$filename""
exit 0
</code></pre>

<p>I am getting this error while running </p>

<pre><code>› git commit -m ""sfrewr""
pre-commit started
/Users/me/.git-templates/hooks/pre-commit: line 28: : No such file or directory
[master 6950a43] sfrewr
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 89
</code></pre>

<p>And line <code>28</code> reads </p>

<pre><code>done &lt; ""$filename""
</code></pre>
",0,827525,0,0
51433811,7770081,7/20/2018 1:21,2,100,<git><githooks><git-remote><git-bare>,Set up Git to manage remote website,"<p>I've been trying to set up Git to manage my website, as explained per <a href=""http://toroid.org/git-website-howto"" rel=""nofollow noreferrer"">this tutorial</a> and <a href=""https://blog.sebduggan.com/2012/03/13/deploy-your-website-changes-using-git/"" rel=""nofollow noreferrer"">this one</a> and <a href=""https://neurobin.org/docs/web/using-git-to-manage-a-website/"" rel=""nofollow noreferrer"">this one</a> and <a href=""http://crosbymichael.com/how-to-manage-your-website-with-git.html"" rel=""nofollow noreferrer"">this one</a> and <a href=""https://gist.github.com/Nilpo/8ed5e44be00d6cf21f22"" rel=""nofollow noreferrer"">this gist</a>.</p>

<p>To summarize what I've done: (in-depth explanations can be found in the tutorials)</p>

<ol>
<li>Set up a bare git repo on my web server in <code>/home/usr/mysite.git/</code></li>
<li>In the bare repo, create an executable post-receive hook with <code>GIT_WORK_TREE</code> set to my web documents root, <code>/home/www/mysite.com/</code></li>
<li><p>In my local git repo, add the remote repository. This is from my <code>.git/config</code> :</p>

<pre><code>[remote ""live""]
url = ssh://user@ssh.myserver.com/home/usr/mysite.git
fetch = +refs/heads/*:refs/remotes/live/*
</code></pre></li>
<li>Push : <code>git push live +master:refs/heads/master</code></li>
</ol>

<hr>

<p>Here's the output I get:</p>

<pre><code>Everything up-to-date
</code></pre>

<p>Great!<br>
Except it isn't : <strong>my remote web documents root <code>/home/www/mysite.com/</code> is still empty</strong>.<br>
I've tried everything I could but haven't been able to push the files into my remote folder.</p>

<p>Do you know what I've done wrong, or what I could do to debug this?</p>
",2,7770081,,
51457236,5487258,7/21/2018 14:58,1,2453,<gradle><android-gradle-plugin><file-permissions><githooks>,how to set git hook executable via gradle,"<p><strong>TLDR</strong>: how to add execute permissions / set executable via Gradle to a git hook script</p>

<p>I am developing an Android app with a team and was instructed to implement a company-wide pre-push script as a git hook.</p>

<p>I added a pre-push file with the script to the root directory of the project and added a copy script to copy it to the hooks folder.</p>

<p>I tried adding </p>

<pre><code>android {
    compileSdkVersion 27
    copy {
        from ""../pre-push""
        into ""../.git/hooks""
    }
    tasks.create(name: 'gitExecutableHooks') &lt;&lt; {
        Runtime.getRuntime().exec(""chmod -R +x .git/hooks/"");
    }

    defaultConfig {
        ...
    }
}
</code></pre>

<p>the file is copied to the correct location but I get a warning </p>

<blockquote>
  <p>.git/hooks/pre-push' hook was ignored because it's not set as
  executable.</p>
</blockquote>

<p>and naturally, the git hook doesn't execute. </p>

<p>(P.S. this works as intended on windows machines, and only fails on MacOS and Linux machines)</p>
",0,5487258,0,0
69600907,17171624,10/17/2021 2:32,0,384,<git><sh><githooks>,make shell commands available in git hook,"<p>The goal is to make some set of commands available to the user after they clone/checkout repo.</p>
<p>the git hook file</p>
<pre><code>#!/bin/sh
echo $PWD/dev-commands.sh
source $PWD/dev-commands.sh
</code></pre>
<p>the command I want to make available after the git hook names dev-commands.sh</p>
<pre><code>#!/bin/sh
function greet() {
  echo Hello
}
</code></pre>
<p>this does not seem to make the command available. if I run source dev-commands.sh in the directory manually it does make the <code>greet</code> commands availble..</p>
<p>any tips?</p>
",0,17171624,,
51473173,9866762,7/23/2018 7:00,1,46,<python><logging><gerrit><githooks>,Python log lines not persisted,"<p>I have this very simple snippet of a python script inside a gerrit hook (comment-added)</p>

<pre><code>if *condition*:
    message = ""Shortened for simplicity""

    logging.basicConfig(format='%(asctime)s %(message)s', datefmt='%d/%m/%Y %I:%M:%S %p', filename='/home/gerrit/logs/log_approvals.log', level=logging.INFO, filemode='w')
    logging.info(message)
</code></pre>

<p>My problem is that every time something is written to log_approvals.log, I always see 1 line (the last logged message), so that means that the modifications to the file are not persisted and I don't know why.</p>

<p>Sample output: </p>

<pre><code>23/07/2018 08:32:56 AM Shortened for simplicity
</code></pre>

<p>Any help is much appreciated. </p>
",0,9866762,,
56703627,1411847,6/21/2019 12:37,0,568,<git><githooks>,Git Pre release hook: Automatically put release tag in constant file?,"<p>Does GIT support <strong>pre-release</strong> hooks? When I press release in GIT, I would like to put the release tag in a constant file, commit it, and the release it.</p>

<p>Yeah we can do this via tools like Jenkins, but I am working at a client which does not have such ""advanced"" facilities. </p>
",0,1411847,,
73505740,312452,8/26/2022 19:31,0,76,<node.js><git><npm><githooks>,lefthook change file mode error on Windows 11,"<p>lefthook (npm app version) is generating error advising &quot;Couldnt change file mode to make file executable: ...&quot;. I am trying their sample pre-commit hook. It is probably something I did wrong.
Windows 11
Git Version 2.35.1.windows.2
Node Version: 16.14.2
NPM Version: 8.5.0
VS Code: 1.69.2  (if this is part of my problem)
<a href=""https://i.stack.imgur.com/r5cLl.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/r5cLl.png"" alt=""vscode terminal error output when using lefthook"" /></a></p>
",0,312452,,
73506338,19024989,8/26/2022 20:48,0,125,<shell><githooks>,shell interprets part of commit message as command in commit-msg git hook,"<p>I wrote a commit-msg hook to prevent commits with empty messages by checking to see if COMMIT_EDITMSG is empty, and if so, then to exit process :</p>
<pre><code>#!/bin/sh
# .git/hooks/commit-msg

# Read COMMIT_EDITMSG file
COMMIT_MSG_FILE=$(cat $1)

# No empty commit message rule
if [$COMMIT_MSG_FILE == '']
then
  echo &quot;Must have a commit message&quot;
  exit 1
fi

</code></pre>
<p>It is working as expected except when I make a commit with text in it terminal interprets the first string in the commit message as a command. Say for example if i do <code>git commit -m &quot;commit 1&quot;</code>, shell interprets &quot;commit&quot; as a command. The commit still goes through but does anyone know why this is happening and how I can prevent this?</p>
",5,19024989,,
73512934,7180277,8/27/2022 17:09,0,201,<npm><npm-install><githooks>,"How does doing an ""npm install"" install git hooks?","<p>I am newly(ish) responsible for a git repository.  When I clone it and look in the .git/hooks directory, there are only sample hooks.</p>
<p>We use NPM as our package manager for the front end UI.  After I run an &quot;npm install&quot;, I 'all of a sudden' have real git hooks in .git/hooks.  How does this work?  What am I looking for?</p>
<p>I figure it is some kind of hook, but I am not sure where to start looking to track it down.  In my package.json file I see tslint-react-hooks (TSLint rule that enforces the Rules of Hooks) and react-hook-form (Performant, flexible and extensible forms with easy-to-use validation.), but I think these are red herrings.</p>
<p>I've seen this question <a href=""https://stackoverflow.com/questions/3462955/putting-git-hooks-into-a-repository?rq=1"">Putting Git hooks into a repository</a> which talks about getting hooks in place, but I don't see how it happens for this project.</p>
<p>Here is a copy of my package.json file.  Thanks for any insights.</p>
<pre><code>{
&quot;name&quot;: &quot;ram&quot;,
&quot;version&quot;: &quot;1.0.0&quot;,
&quot;description&quot;: &quot;RAM UI Build Tools&quot;,
&quot;scripts&quot;: {
    &quot;test&quot;: &quot;jest --coverage --watchAll&quot;,
    &quot;testOnce&quot;: &quot;jest&quot;,
    &quot;build&quot;: &quot;cross-env NODE_ENV=production node ./Config/prod.js&quot;,
    &quot;build:dev&quot;: &quot;cross-env NODE_ENV=development node ./Config/dev-noserver.js&quot;,
    &quot;dev&quot;: &quot;cross-env NODE_ENV=development nodemon -e js,ts,tsx,json,scss ./Config/dev-noserver.js&quot;,
    &quot;start&quot;: &quot;cross-env NODE_ENV=development node ./Config/dev.js&quot;,
    &quot;start:full&quot;: &quot;webpack-dev-server --progress --config ./Config/dev-noserver-hot.js&quot;,
    &quot;precommit&quot;: &quot;lint-staged&quot;
},
&quot;lint-staged&quot;: {
    &quot;*.{js,ts,tsx,json,scss}&quot;: [
        &quot;prettier --write&quot;,
        &quot;git add&quot;
    ],
    &quot;*.scss&quot;: [
        &quot;stylelint --fix&quot;,
        &quot;git add&quot;
    ],
    &quot;*.{ts,tsx}&quot;: [
        &quot;tslint --fix&quot;,
        &quot;git add&quot;
    ]
},
&quot;prettier&quot;: {
    &quot;singleQuote&quot;: true,
    &quot;tabWidth&quot;: 4,
    &quot;printWidth&quot;: 120
},
&quot;jest&quot;: {
    &quot;moduleFileExtensions&quot;: [
        &quot;ts&quot;,
        &quot;tsx&quot;,
        &quot;js&quot;
    ],
    &quot;transform&quot;: {
        &quot;^.+\\.tsx?$&quot;: &quot;ts-jest&quot;
    },
    &quot;testMatch&quot;: [
        &quot;**/?(*.)(spec|test).ts?(x)&quot;
    ],
    &quot;modulePaths&quot;: [
        &quot;&lt;rootDir&gt;/Content&quot;
    ],
    &quot;testPathIgnorePatterns&quot;: [
        &quot;/node_modules&quot;,
        &quot;./Config&quot;
    ],
    &quot;collectCoverage&quot;: true,
    &quot;collectCoverageFrom&quot;: [
        &quot;**/*.*&quot;,
        &quot;!**/*.json&quot;,
        &quot;!**/index.ts&quot;
    ],
    &quot;coveragePathIgnorePatterns&quot;: [
        &quot;/node_modules/&quot;,
        &quot;./Config&quot;,
        &quot;./coverage&quot;,
        &quot;./Types&quot;,
        &quot;__snapshots__&quot;,
        &quot;__tests__&quot;,
        &quot;index.tsx&quot;,
        &quot;./Content/Pages&quot;,
        &quot;./Content/Utils/constants.ts&quot;
    ],
    &quot;coverageReporters&quot;: [
        &quot;html&quot;
    ],
    &quot;setupFilesAfterEnv&quot;: [
        &quot;./Config/Test/testFramework.js&quot;
    ],
    &quot;testURL&quot;: &quot;http://localhost/&quot;
},
&quot;author&quot;: &quot;xxxxxxxxxxxxx&quot;,
&quot;license&quot;: &quot;UNLICENSED&quot;,
&quot;private&quot;: true,
&quot;devDependencies&quot;: {
    &quot;@types/classnames&quot;: &quot;2.2.3&quot;,
    &quot;@types/enzyme&quot;: &quot;3.1.10&quot;,
    &quot;@types/history&quot;: &quot;4.6.2&quot;,
    &quot;@types/jest&quot;: &quot;22.2.3&quot;,
    &quot;@types/jquery&quot;: &quot;3.3.1&quot;,
    &quot;@types/lodash&quot;: &quot;4.14.110&quot;,
    &quot;@types/object-hash&quot;: &quot;1.2.0&quot;,
    &quot;@types/query-string&quot;: &quot;6.2.0&quot;,
    &quot;@types/react-beautiful-dnd&quot;: &quot;12.1.2&quot;,
    &quot;@types/react-bootstrap&quot;: &quot;0.32.21&quot;,
    &quot;@types/react-datepicker&quot;: &quot;2.9.5&quot;,
    &quot;@types/react-dom&quot;: &quot;18.0.0&quot;,
    &quot;@types/react-js-pagination&quot;: &quot;3.0.3&quot;,
    &quot;@types/react-router&quot;: &quot;4.0.23&quot;,
    &quot;@types/react-router-dom&quot;: &quot;4.2.6&quot;,
    &quot;@types/react-test-renderer&quot;: &quot;16.0.1&quot;,
    &quot;@types/react-toggle&quot;: &quot;4.0.2&quot;,
    &quot;@types/styled-components&quot;: &quot;5.1.25&quot;,
    &quot;@types/uuid&quot;: &quot;3.4.3&quot;,
    &quot;@types/webpack-env&quot;: &quot;1.13.6&quot;,
    &quot;@typescript-eslint/eslint-plugin&quot;: &quot;5.35.1&quot;,
    &quot;@typescript-eslint/parser&quot;: &quot;5.35.1&quot;,
    &quot;axios-mock-adapter&quot;: &quot;1.15.0&quot;,
    &quot;cross-env&quot;: &quot;5.1.4&quot;,
    &quot;css-hot-loader&quot;: &quot;1.3.9&quot;,
    &quot;css-loader&quot;: &quot;0.28.11&quot;,
    &quot;ejs-loader&quot;: &quot;0.3.1&quot;,
    &quot;enzyme&quot;: &quot;3.11.0&quot;,
    &quot;enzyme-adapter-react-16&quot;: &quot;1.1.1&quot;,
    &quot;eslint&quot;: &quot;8.22.0&quot;,
    &quot;eslint-config-standard-with-typescript&quot;: &quot;22.0.0&quot;,
    &quot;eslint-plugin-import&quot;: &quot;2.26.0&quot;,
    &quot;eslint-plugin-n&quot;: &quot;15.2.5&quot;,
    &quot;eslint-plugin-promise&quot;: &quot;6.0.1&quot;,
    &quot;eslint-plugin-react&quot;: &quot;7.31.0&quot;,
    &quot;html-webpack-plugin&quot;: &quot;3.2.0&quot;,
    &quot;husky&quot;: &quot;0.14.3&quot;,
    &quot;jest&quot;: &quot;26.4.2&quot;,
    &quot;lint-staged&quot;: &quot;13.0.3&quot;,
    &quot;mini-css-extract-plugin&quot;: &quot;0.4.0&quot;,
    &quot;node-sass&quot;: &quot;4.14.0&quot;,
    &quot;nodemon&quot;: &quot;1.17.3&quot;,
    &quot;postcss-flexbugs-fixes&quot;: &quot;3.3.0&quot;,
    &quot;postcss-loader&quot;: &quot;2.1.4&quot;,
    &quot;prettier&quot;: &quot;1.19.1&quot;,
    &quot;react-test-renderer&quot;: &quot;18.2.0&quot;,
    &quot;sass-loader&quot;: &quot;7.0.1&quot;,
    &quot;style-loader&quot;: &quot;0.20.3&quot;,
    &quot;stylelint&quot;: &quot;9.2.0&quot;,
    &quot;stylelint-config-recommended-scss&quot;: &quot;3.2.0&quot;,
    &quot;stylelint-declaration-strict-value&quot;: &quot;1.0.4&quot;,
    &quot;stylelint-declaration-use-variable&quot;: &quot;1.6.1&quot;,
    &quot;stylelint-formatter-pretty&quot;: &quot;1.0.3&quot;,
    &quot;stylelint-scss&quot;: &quot;3.0.0&quot;,
    &quot;stylelint-webpack-plugin&quot;: &quot;0.10.4&quot;,
    &quot;ts-jest&quot;: &quot;26.3.0&quot;,
    &quot;ts-loader&quot;: &quot;8.0.3&quot;,
    &quot;ts-react&quot;: &quot;1.2.1&quot;,
    &quot;tsconfig-paths-webpack-plugin&quot;: &quot;3.0.4&quot;,
    &quot;tslint&quot;: &quot;6.1.3&quot;,
    &quot;tslint-config-prettier&quot;: &quot;1.18.0&quot;,
    &quot;tslint-loader&quot;: &quot;3.5.4&quot;,
    &quot;tslint-react&quot;: &quot;5.0.0&quot;,
    &quot;tslint-react-hooks&quot;: &quot;2.2.2&quot;,
    &quot;typescript&quot;: &quot;4.6.4&quot;,
    &quot;webpack&quot;: &quot;4.46.0&quot;,
    &quot;webpack-cli&quot;: &quot;2.0.14&quot;,
    &quot;webpack-dev-server&quot;: &quot;3.10.3&quot;,
    &quot;xml2js&quot;: &quot;0.4.19&quot;
},
&quot;dependencies&quot;: {
    &quot;@hapi/cryptiles&quot;: &quot;*&quot;,
    &quot;@types/react-table&quot;: &quot;6.7.12&quot;,
    &quot;axios&quot;: &quot;0.27.2&quot;,
    &quot;babel-loader&quot;: &quot;8.2.5&quot;,
    &quot;bootstrap&quot;: &quot;3.3.5&quot;,
    &quot;chokidar&quot;: &quot;3.5.3&quot;,
    &quot;classnames&quot;: &quot;2.2.5&quot;,
    &quot;core-js&quot;: &quot;3.24.1&quot;,
    &quot;ejs&quot;: &quot;3.1.8&quot;,
    &quot;eslint-config-airbnb&quot;: &quot;19.0.4&quot;,
    &quot;eslint-config-airbnb-base&quot;: &quot;15.0.0&quot;,
    &quot;eslint-config-react-app&quot;: &quot;7.0.1&quot;,
    &quot;eslint-plugin-jsx-a11y&quot;: &quot;6.6.1&quot;,
    &quot;eslint-utils&quot;: &quot;3.0.0&quot;,
    &quot;eventsource&quot;: &quot;2.0.2&quot;,
    &quot;expose-loader&quot;: &quot;0.7.5&quot;,
    &quot;file-loader&quot;: &quot;1.1.11&quot;,
    &quot;font-awesome&quot;: &quot;4.7.0&quot;,
    &quot;highcharts&quot;: &quot;10.1.0&quot;,
    &quot;highcharts-react-official&quot;: &quot;3.0.0&quot;,
    &quot;history&quot;: &quot;4.7.2&quot;,
    &quot;jquery&quot;: &quot;2.1.1&quot;,
    &quot;json-schema&quot;: &quot;0.4.0&quot;,
    &quot;lodash&quot;: &quot;4.17.21&quot;,
    &quot;object-hash&quot;: &quot;1.3.1&quot;,
    &quot;popper&quot;: &quot;1.0.1&quot;,
    &quot;powerbi-client&quot;: &quot;2.18.6&quot;,
    &quot;powerbi-client-react&quot;: &quot;1.3.3&quot;,
    &quot;prop-types&quot;: &quot;15.6.1&quot;,
    &quot;querystring&quot;: &quot;0.2.0&quot;,
    &quot;react&quot;: &quot;18.2.0&quot;,
    &quot;react-beautiful-dnd&quot;: &quot;13.0.0&quot;,
    &quot;react-bootstrap&quot;: &quot;0.33.1&quot;,
    &quot;react-datepicker&quot;: &quot;4.8.0&quot;,
    &quot;react-dev-utils&quot;: &quot;12.0.1&quot;,
    &quot;react-dom&quot;: &quot;18.2.0&quot;,
    &quot;react-filtered-multiselect&quot;: &quot;0.5.1&quot;,
    &quot;react-hook-form&quot;: &quot;6.5.3&quot;,
    &quot;react-input-switch&quot;: &quot;2.2.2&quot;,
    &quot;react-js-pagination&quot;: &quot;3.0.3&quot;,
    &quot;react-promise&quot;: &quot;2.0.3&quot;,
    &quot;react-query&quot;: &quot;3.39.0&quot;,
    &quot;react-router-dom&quot;: &quot;4.2.2&quot;,
    &quot;react-socks&quot;: &quot;2.2.0&quot;,
    &quot;react-string-replace&quot;: &quot;0.4.1&quot;,
    &quot;react-super-select&quot;: &quot;1.0.23&quot;,
    &quot;react-table&quot;: &quot;6.8.6&quot;,
    &quot;react-table-hoc-fixed-columns&quot;: &quot;1.0.0-beta.9&quot;,
    &quot;react-toastify&quot;: &quot;5.5.0&quot;,
    &quot;react-toggle&quot;: &quot;4.1.3&quot;,
    &quot;shell-quote&quot;: &quot;1.7.3&quot;,
    &quot;string-replace-to-array&quot;: &quot;1.0.3&quot;,
    &quot;styled-components&quot;: &quot;5.3.5&quot;,
    &quot;sweetalert&quot;: &quot;2.1.2&quot;,
    &quot;sync-request&quot;: &quot;6.0.0&quot;,
    &quot;tar&quot;: &quot;6.1.11&quot;,
    &quot;ts-node&quot;: &quot;10.9.1&quot;,
    &quot;ts-node-dev&quot;: &quot;2.0.0&quot;,
    &quot;uglify-js&quot;: &quot;3.15.5&quot;,
    &quot;url-parse&quot;: &quot;1.5.10&quot;,
    &quot;uuid&quot;: &quot;8.3.2&quot;,
    &quot;webpack-dev-middleware&quot;: &quot;5.3.3&quot;
}
</code></pre>
<p>}</p>
",2,7180277,,
73540084,19877325,8/30/2022 9:25,1,113,<git><deployment><server><githooks><git-bare>,Git post-receive hook with two servers,"<p>We have two servers - ServerA (bare repo) and ServerB (hosted project folder). Every time a developer pushes local changes to ServerA they should be automatically pushed to ServerB.</p>
<p>What I have tried so far:
I created a post-receive script in bare_repo/hooks/.
The script is:</p>
<pre><code>#!/bin/bash
while read oldrev newrev ref
do
    if [[ $ref =~ .*/master$ ]];
    then
        echo &quot;Master ref received.  Deploying master branch to production...&quot;
        git --work-tree=remoteaddress --git-dir=/volume1/_Repos/test.git checkout -f
    else
        echo &quot;Ref $ref successfully received.  Doing nothing: only the master branch may be deployed on this server.&quot;
    fi
done
</code></pre>
<p>Where remoteaddress is something like <em>IPServerB:/path/to/hosted_project_folder</em>.</p>
<p>My entire approach:</p>
<p><em>hosted_project_folder</em> already existed.
Then on ServerA:</p>
<pre><code>git clone --mirror IPServerB:/path/to/hosted_project_folder
git fetch --all
</code></pre>
<p>Add post-receive script in hooks.</p>
<p>On Client:</p>
<pre><code>git clone IPServerA:/path/to/bare_repo
</code></pre>
<p>Add changes at Client and push it to ServerA:</p>
<pre><code>git add -A
git commit -m &quot;add something&quot;
git push origin master
</code></pre>
<p>Where origin is <em>IPServerA:path/to/bare_repo</em></p>
<p>At this point I get an error:</p>
<pre><code>remote: fatal: Invalid path '/volume1/_Repos/test.git/IPServerB:C:': No such file or directory
</code></pre>
<p>However, if we use one server for bare repo and hosted project folder then it works.</p>
",6,19877325,,
73543218,19389810,8/30/2022 13:23,0,1946,<python><formatting><githooks><pre-commit><pre-commit.com>,Black wont fix formatting when using pre-commit.; I think?,"<p>I have been using black in the exact same set when using pre-commit, however, as soon as I incorporated pytest it always renders the below error.</p>
<pre><code>$ git add . &amp;&amp; git commit -m &quot;stackoverflow added to read me for configuration&quot;
Check Yaml...........................................(no files to check)Skipped
Fix End of Files.........................................................Passed
Trim Trailing Whitespace.................................................Passed
black....................................................................Failed
- hook id: black
- exit code: 1

Usage: python -m black [OPTIONS] SRC ...

One of 'SRC' or 'code' is required.

pytest-check.............................................................Passed
</code></pre>
<p>This is my pre-commit config file</p>
<pre><code>repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v2.3.0
    hooks:
    -   id: check-yaml
    -   id: end-of-file-fixer
    -   id: trailing-whitespace
-   repo: https://github.com/psf/black
    rev: 21.12b0
    hooks:
    - id: black
      name: black
      entry: black
      language: system
      require_serial: true
      types: [python]
      always_run: true
-   repo: local
    hooks:
    - id: pytest-check
      name: pytest-check
      stages: [commit]
      types: [python]
      entry: pytest
      language: system
      pass_filenames: false
      always_run: true
</code></pre>
<p>Would appreciate an explanation to the answer if possible.</p>
",0,19389810,,
56807389,3055578,6/28/2019 12:56,0,298,<windows><git><macos><githooks>,Remove GIT Hook in Windows,"<p>I've this script for macOS that removes temporarily a GIT Hook. This script is triggered by an npm script defined in my package.json. This project is shared across the whole team, so it has to work on every machine.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>gitdir=""$(git rev-parse --git-dir)""
hook=""$gitdir/hooks/post-commit""

# disable post-commit hook temporarily
[ -x $hook ] &amp;&amp; chmod -x $hook

git add -A
git commit --amend --allow-empty --no-edit  --no-verify

# enable it again
chmod +x $hook</code></pre>
</div>
</div>
</p>

<p>Can someone help me transcribe this to a .bat in order to be able to excute this in windows?</p>
",6,3055578,,
73584837,5159280,9/2/2022 15:24,4,338,<r><git><githooks><r-styler>,After pre-commit hook: git add makes staged files disappear,"<p>I'm trying to setup a local pre-commit hook. It should check if any edited files are styled according to the tidyverse styleguide (using <a href=""https://styler.r-lib.org/index.html"" rel=""nofollow noreferrer"">styler</a>). Because my company does not allow for direct access to github, I cannot use <a href=""https://lorenzwalthert.github.io/precommit/articles/available-hooks.html#style-files-1"" rel=""nofollow noreferrer"">precommit</a>, and have to setup the hook by editing the <code>.git/hooks/pre-commit</code> file.</p>
<h1>Setup</h1>
<p>This is what I tried: My <code>.git/hooks/pre-commit</code></p>
<pre><code>#!/bin/bash

set -eo pipefail

CHANGED_FILES=$(git diff --name-only --cached --diff-filter=ACMR)

get_pattern_files() {
    pattern=$(echo &quot;$*&quot; | sed &quot;s/ /\$\\\|/g&quot;)
    echo &quot;$CHANGED_FILES&quot; | { grep &quot;$pattern$&quot; || true; }
}

R_FILES=$(get_pattern_files .R)

# if R_FILES is not empty, run Rscript
if [[ -n &quot;$R_FILES&quot; ]]
then
    Rscript ./style.R $R_FILES
fi

# exit with 1, if Rscript failed
if [ $? -eq 0 ]; then
    exit 0
else
    exit 1
fi
</code></pre>
<p>and my <code>./style.R</code></p>
<pre><code>#!/usr/bin/env Rscript
args &lt;- commandArgs(trailingOnly = TRUE)
output &lt;- styler::style_file(path = args)
if (any(output$changed) == TRUE) {quit(status = 1)}
</code></pre>
<h1>Problem</h1>
<p>When I edit a file, I can see it in the diff.</p>
<pre><code>user@machine:~/r_template$ git diff
diff --git a/src/main.R b/src/main.R
index 8d2f097..dd1272d 100644
--- a/src/main.R
+++ b/src/main.R
@@ -1 +1 @@
-1 + 1
+1 +1           &lt;-- this is what I have changed in the file
</code></pre>
<p>I add it with <code>git add -u</code> and then git commit. The hook gets called, and aborts the commit (because the Rscript exits with status 1) as expected.</p>
<pre><code>user@machine:~/r_template$ git commit
Styling  1  files:
 src/main.R ℹ
────────────────────────────────────────
Status  Count   Legend
✓       0       File unchanged.
ℹ       1       File changed.
x       0       Styling threw an error.
────────────────────────────────────────
Please review the changes carefully!
</code></pre>
<p>and can see an (expected) edited file</p>
<pre><code>user@machine:~/r_template$ git status
On branch feature/precommit-hooks
Changes to be committed:
  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)

        modified:   src/main.R

Changes not staged for commit:
  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)

        modified:   src/main.R
</code></pre>
<p>with the intended changes done by <code>styler::style_file()</code></p>
<pre><code>user@machine:~/r_template$ git diff
diff --git a/src/main.R b/src/main.R
index dd1272d..8d2f097 100644
--- a/src/main.R
+++ b/src/main.R
@@ -1 +1 @@
-1 +1
+1 + 1       &lt;-- this is done by styler::style_file()
</code></pre>
<p>Ok, so next I want to stage this edit, so I <code>git add -u</code>. But then something happens I cannot understand</p>
<pre><code>utxkanal@vlx00950:~/r_template$ git status
On branch feature/precommit-hooks
nothing added to commit but untracked files present (use &quot;git add&quot; to track)
</code></pre>
<p>The staging area is completely empty. And still, the change in <code>src/main.R</code> is in effect.
What is happening here?</p>
",3,5159280,,
73610007,648368,9/5/2022 13:16,0,105,<git><hook><githooks>,How can I access the GIT command arguments from a hook script,"<p>Can I access the git command-line from a git hook?</p>
<p>E.g.
git commit -a -m &quot;some commit message&quot;</p>
<p>now, in the <code>pre-commit</code> hook, I want to see if the used <code>-m</code> or used the editor.
alternatively, to see that the user used <code>-a</code> to add the files.</p>
<p>Thanks.</p>
",5,648368,,
73637819,451878,9/7/2022 15:09,0,668,<git><pytest><githooks><pre-commit-hook><pre-commit.com>,"pytest tests with pre-commit hook only on push, not commit","<p>I've a pre-commit, and I want to add a pre-push hook within.
So, I want to launch <strong>only</strong> python tests (pytest) when I <em>push</em> my changes, and not all the hooks (flake8, black, etc).</p>
<p>Here my pre-commit config :</p>
<pre class=""lang-yaml prettyprint-override""><code>default_stages: [commit, push]
repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.2.0
    hooks:
    -   id: trailing-whitespace
    -   id: end-of-file-fixer
    -   id: check-yaml
    -   id: check-added-large-files
        args: [ &quot;--maxkb=120000&quot; ]
    -   id: check-json
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v2.3.0
    hooks:
    - id: flake8
-   repo: https://github.com/psf/black
    rev: 22.3.0
    hooks:
    -   id: black
        language_version: python3.9
-   repo: https://github.com/pre-commit/mirrors-jshint
    rev: v2.9.7
    hooks:
    -   id: jshint
-   repo: https://github.com/pre-commit/mirrors-scss-lint
    rev: v0.57.1-1
    hooks:
    -   id: scss-lint
-   repo: https://github.com/asottile/reorder_python_imports
    rev: v1.7.0
    hooks:
    -   id: reorder-python-imports
-   repo: local
    hooks:
    -   id: pytest-check
        stages: [push]
        types: [python]
        name: pytest-check
        entry: python -m pytest -v tests/
        language: system
        pass_filenames: false
        always_run: true
</code></pre>
<p>How can I do that please ?</p>
",0,451878,,
73639607,3052438,9/7/2022 17:37,1,238,<git><git-merge><githooks><git-revision>,Get MERGE_HEAD in pre-merge-commit hook,"<p>In <code>pre-merge-commit</code>, I need the hash of the merge head to verify a few things about the commits that are about to be merged to the current branch.</p>
<p>However, it seems that neither the reference <code>MERGE_HEAD</code> nor the file <code>.git/MERGE_HEAD</code> exist at the time when the hook is running.</p>
<p>How can I get the merge head revision in my hook?</p>
",5,3052438,,
39154743,1385272,8/25/2016 21:07,0,441,<git><github><bitbucket><branching-and-merging><githooks>,Use Git Hooks to detect a file change and push change to all branches (Bitbucket/Git),"<p>---<strong>Updated</strong>---</p>

<p>Is there a way to have global files amongst all branches such as using Git Hooks to detect a file change and push change to all branches?</p>

<p>For example:</p>

<ol>
<li>We have 5 different branches that all have different commits in
them.</li>
<li>They all contain a readme file.</li>
<li>They are all based off of the master branch.</li>
</ol>

<p>We would like that when the readme file is changed anywhere it updates in all branches other branches.</p>

<p>I get the idea behind branches being separate, but it sucks to update 6 readmes.</p>

<p>From the comments it seems like this might be possible with git hooks...  So how would you create a hook to detect if the README file is changed from any branch and commit/push to all other branches?</p>
",7,1385272,,
22335692,232082,3/11/2014 20:15,1,949,<git><repository><gruntjs><npm><githooks>,Grunt; Warning: uncommitted changes in working directory,"<p>I'm trying to setup a Grunt to commit to a repository on Github.</p>

<p>In Gruntjs I have;</p>

<pre><code> buildcontrol: {
            options: {
                dir: 'dist',
                commit: true,
                push: true,
                message: 'Built %sourceName% from commit %sourceCommit% on branch %sourceBranch%'
            },
            pages: {
                options: {
                    remote: 'git@github.com:numediaweb/test.git',
                    branch: 'gh-pages'
                }
            },
            local: {
                options: {
                    remote: '../',
                    branch: 'build'
                }
            }
        },
</code></pre>

<p>But when I do the command <code>grunt buildcontrol:pages</code> I recieve this warning;</p>

<pre><code>Running ""buildcontrol:pages"" (buildcontrol) task
Warning: There are uncommitted changes in your working directory.
Please commit changes to the main project before you commit to
the built code.
</code></pre>

<p>I followed <a href=""http://yeoman.io/deployment.html"" rel=""nofollow"">this tutorial</a> and <a href=""https://github.com/robwierzbowski/grunt-build-control"" rel=""nofollow"">this one</a> but couldn't get it working.. Am I missing something?</p>
",0,232082,0,0
43520978,1403082,4/20/2017 13:29,0,351,<regex><git><bash><sed><githooks>,can't extract a substring with regex,"<p>I'm trying to write a prepare-commit-msg hook for git. The script should do following steps :</p>

<ol>
<li>Get the current git branch name (working)</li>
<li>Extract the <code>issue-id</code> (not working)</li>
<li>Check if the <code>issue-id</code> is already in the commit msg</li>
<li>If not, insert <code>[issue-id]</code> before the commit message</li>
</ol>

<p>The <code>issue-id</code> has this pattern <code>[a-zA-Z]+-\d+</code> and the branch name should be something like <code>feature/issue-id-my-small-description</code>.</p>

<p>But for now, the extraction part is not ok...</p>

<p>Here is my prepare-commit-msg script :</p>

<pre><code># Regex used to extract the issue id
REGEX_ISSUE_ID=""s/([a-zA-Z]+-\d+)//""

# Find current branch name
BRANCH_NAME=$(git symbolic-ref --short HEAD)

# Extract issue id from branch name
ISSUE_ID= $BRANCH_NAME | sed -r $REGEX_ISSUE_ID

# Check if the issue id is already in the msg
ISSUE_IN_COMMIT=$(grep -c ""\[$ISSUE_ID\]"" $1)

# Check if branch name is not null and if the issue id is already in the commit msg
if [ -n ""$BRANCH_NAME"" ] &amp;&amp; ! [[ $ISSUE_IN_COMMIT -ge 1 ]]; then 
  # Prefix with the issue id surrounded with brackets
  sed -i.bak -e ""1s/^/[$ISSUE_ID] /"" $1
fi
</code></pre>

<p><strong>Edit to add in-/output example</strong></p>

<p>Input <code>$1</code> is the git commit message which is something like</p>

<pre><code>fix bug on login
</code></pre>

<p>or</p>

<pre><code>fix MyIssue-234 which is a bug on login
</code></pre>

<p>Output should be the input with the issue id i.e. :</p>

<pre><code>[MyIssue-123] fix bug on login
</code></pre>
",3,1403082,,
64208900,10901966,10/5/2020 12:46,0,135,<git><grep><pcre><githooks>,Conditional matching with Grep using PCRE regex not matching conditional part as expected,"<p>I'm trying to implement a <em>Git hook</em> that will check that the commit message complies with a commit template. To do this I thought of using regular expressions (which seems obvious). The rules are the following:</p>
<ol>
<li>The title must contain one or more tags in relation to the nature of the commit. Each of this tags are surrounded by &quot;[ ]&quot; and there are an specific set of them.</li>
<li>The title must be under 72 characters.</li>
<li>The title must be at least a word (not a single character).</li>
<li>The body of the message, if included, must be separated of the title by an empty line (this would mean two line jumps).</li>
<li>The body of the message, if included, must be more than a single character.</li>
</ol>
<p>Having these said rules I came up with the following regex: <code>(?=(?:\[(?:feat|fix|style)\])+\s\w{2,}).{8,72}(?(?=.*\n{2})\n{2}\w{2,})</code>. The regex works fine when I test it in <a href=""https://regexr.com/"" rel=""nofollow noreferrer"">RegExr</a> but it does not work as expected when I test it with <strong>grep</strong> (I test it out just in my terminal with a sample file).</p>
<p>This would be the command line instruction with grep: <code>$ grep -P &quot;(?=(?:\[(?:feat|fix|style)\])+\s\w{2,}).{8,72}(?(?=.*\n{2})\n{2}\w{2,})&quot; holas.txt</code>. Where the file &quot;holas.txt&quot; just contains the following: <em>[feat] Hola\n\nHola</em>. Running this command returns just one match with the first line (<em>[feat] Hola</em>) and not with the text in the body of the message which should be matched by the <strong>conditional part of the regex</strong>. If I just delete the line in the body it also matches the first line, but this shouldn't be like that, it shouldn't match (I have tested it out with the mentioned online tool).</p>
<p>I have also tried using <strong>pcregrep</strong> but the result is the same.</p>
<p>Thanks in advance.</p>
",1,10901966,,
35775835,750103,3/3/2016 15:10,3,1364,<git><githooks><versionone>,Integration between any git repository and versionone commitstream,"<p>Our tool, <a href=""https://deveo.com"" rel=""nofollow"">Deveo</a>, is a code hosting and collaboration platform that supports Git, Subversion and Mercurial. We have a customer case, where they utilise <a href=""https://www.versionone.com/"" rel=""nofollow"">VersionOne</a>. In VersionOne there's a <a href=""https://community.versionone.com/Help-Center/Administration/CommitStream"" rel=""nofollow"">commitstream</a> functionality that allows them to link commits in Git repositories to tasks in VersionOne.</p>

<p>Currently VersionOne commitstream only support GitHub, Gitlab and Bitbucket. Is there any way to integrate arbitrary Git repositories to VersionOne Commitstream? My initial idea is to setup a proxy that would forward the requests from the links in VersionOne commitstream to Deveo counterparts.</p>
",0,750103,0,0
70172374,16653891,11/30/2021 16:02,0,2692,<git><docker><githooks><git-config>,how to change git config in docker,"<p>After cloning my git repo, I'm trying to change hook path in the docker container and here's my simple Dockerfile</p>
<pre><code>FROM node:lts-alpine

WORKDIR '/app'

COPY package.json .
RUN npm install

COPY . .

RUN apk update &amp;&amp; \
    apk add git

RUN git config core.hooksPath .husky
RUN git config --list
CMD [&quot;npm&quot;, &quot;run&quot;, &quot;start&quot;]
</code></pre>
<p>While building, <code>git config --list</code> prints out the changed hookPath. But after the build is done, <code>git config --list</code> shows no change when I run the command manually in the container.</p>
<p>Can you explain why this happens and is there no way to change git config in the container?</p>
",2,16653891,,
53489240,5790214,11/26/2018 21:20,0,137,<bash><git><server-side><devops><githooks>,Git server-side pre-receive hook,"<p>I am working on enforcing git pre-commit hook as a server-side pre-receive or an update hook and unable to find proper examples on achieving it. </p>

<p>I was able to successfully implement/test the pre-commit hook</p>

<pre><code>#!/bin/bash

echo ""Running pre-commit hook"" 
checks=($APPSETTING_DEVPASSWORD $APPSETTING_DEVUSER $APPSETTING_DEVPASS_ELMAH) # create an array

git diff --cached --name-status | while read flag file; do
    if [ ""$flag"" == 'D' ]; then continue; fi

for word in ${checks[@]}
do
    if egrep -q ""$word"" ""$file""; then
        echo ""ERROR: Disallowed expression \""${word}\"" in file: ${file}"" &gt;&amp;2
        exit 1
    fi
done
done
</code></pre>

<p>I am trying to translate the same into server-side hook where the hook should look for the checks array and exit with 1 if the diff contains the values in the checks array. </p>

<blockquote>
  <p>Information Found online</p>
</blockquote>

<p>Bitbucket server contains only the base repository and doesn't contain the files from the local repository, Hence the diff of the commit sha needs to be evaluated while pushing. </p>

<p>Can someone please help translate the same into a server-side git hook. </p>
",2,5790214,,
73688149,18007266,9/12/2022 10:53,0,437,<bash><shell><githooks>,Get commit message in Git hooks,"<p>I would like to create commit-msg hook to check the commit message with some regex. So I wrote this bash script in the hooks folder:</p>
<pre><code>#!/bin/sh

valid_commit_msg_regex=&quot;^[0-9]+:[a-zA-Z0-9-_ ]{20,150}$&quot;

message=&quot;This commit violates the commit message rules. Please rename your commit.&quot;

if [[ ! $(cat $1) =~ $valid_commit_msg_regex ]]
then
    echo &quot;$message&quot;
    exit 1
fi

exit 0
</code></pre>
<p>But when I try to write <code>git commit -m &quot;9: texttexttexttexttexttexttexttext&quot;</code> it doesn't work properly and I get the error message from script. <br>
Does anyone has an idea what's gone wrong?</p>
",1,18007266,,
74217449,12811196,10/27/2022 6:04,0,112,<git><gitlab><hook><githooks>,How to restrict branch release branch creation only from develop branch,"<p>I'd like to restrict developers from creating release branches from some other branches. Basically, release branches should be allowed to create only from develop branch.</p>
<p>I am working on gitlab and i don't see an option to achieve this from gitlab side.</p>
<p>Is there any way to do that using some hooks?</p>
",1,12811196,,
74218354,20345823,10/27/2022 7:33,1,84,<bash><git><visual-studio-code><githooks>,Git hooks output & prompts in VSCode,"<p>I have problem with outputing git hook script to terminal in VSCode. I've set up pre-push hook which executes and prompts user to write in some details just like this:</p>
<pre><code>$ git push
Pick from options: 

1) Major update
2) Minor update
4) Exit
</code></pre>
<p>Thing is, this works <strong>only</strong> if I use command line with &quot;git push&quot; command.
And what i want to achieve is that when you use VSCode source control button &quot;sync changes&quot; it will prompt user to input somewhere.
Currently it is stuck on syncing changes waiting for input.</p>
<p>The simplified pre-hook script looks like this</p>
<pre><code>select type in &quot;Major update&quot; &quot;Minor update&quot; Exit
    do
        case $type in
            &quot;Major update&quot;)
                MAJOR_NUMBER=$((MAJOR_NUMBER+1))
                break;;
            &quot;Minor update&quot;)
                MINOR_NUMBER=$((MINOR_NUMBER+1))
                break;;
            &quot;Exit&quot;)
                exit 1
                break;;
        esac
    done
# ..some more code..
</code></pre>
<p>I couldn't find any solution yet. I was thinking if there is some way to pop new terminal and prompt there but I have no idea how to do it.</p>
",2,20345823,,
74224176,2056779,10/27/2022 14:58,0,25,<eslint><githooks>,How to exit a git commit in a hook with eslint?,"<p>I try to find a solution to exit my code when the linter is linting a warning line or error line using ESLINT.</p>
<p><strong>My code in my package.json :</strong></p>
<pre><code>&quot;eslint&quot;: &quot;npx eslint ./checkOnly.js --fix --exit-on-fatal-error --max-warnings 1&quot;,
</code></pre>
<p><strong>Hook &quot;commit-msg&quot; :</strong></p>
<pre><code>#!/bin/sh
cd src/main/webapp
npm run eslint
if [ $? -ne 0 ]; then
    echo &quot;Linting&quot;
    echo &quot;============================================================&quot;
    exit 1
fi
</code></pre>
<p>When I try to execute the command <code>npm run eslint</code>, the linter clean my code and everything is ok. But when I'm using the command <code>git commit -a -m &quot;testcommit&quot;</code>, the linter find a line to clean, clean the line but don't exit the commit...</p>
",2,2056779,,
57472371,977890,8/13/2019 6:40,10,7171,<node.js><reactjs><eslint><githooks>,husky+lint-staged runs on unstaged files,"<p>I'm trying to add a pre-commit git hook that will run my linter only on touched (staged) files. My project is based on Create React App.</p>

<p>I added the following to my <code>package.json</code>:</p>

<pre><code>  ""scripts"": {
    ""lint"": ""eslint 'src/**/*.js'"",
    ""lintfix"": ""eslint 'src/**/*.js' --fix""
  },
  ""husky"": {
    ""hooks"": {
      ""pre-commit"": ""lint-staged""
    }
  },
  ""lint-staged"": {
    ""*"": [""npm run lintfix --"", ""git add""]
  }
</code></pre>

<p>The reason I run it on <code>""*""</code> is because I'm expecting the script itself (lintfix) to enforce it's configuration (<code>src/**/*.js</code>).</p>

<p>The problem is that I'm getting plenty of eslint errors on my entire codebase and not only on staged files as I wished. </p>

<p>What's the configuration I need for running my eslint <strong>only on staged files</strong>?</p>
",0,977890,0,0
74257458,15427299,10/30/2022 23:30,0,67,<html><ejs><githooks><prettier><pre-commit>,EJS formatting tool to use with pre-commit,"<p>I'm building a website with <a href=""https://ejs.co/"" rel=""nofollow noreferrer"">EJS</a> and while doing so I tried to add a <a href=""https://pre-commit.com/hooks.html"" rel=""nofollow noreferrer"">pre-commit hook</a> to add a formatter and linter. The files I'd like my formatter and linter to work on are <code>.ejs</code> (which are basically <code>.html</code>) and <code>.js</code>. In previous proyects I used <a href=""https://prettier.io/"" rel=""nofollow noreferrer"">Prettier</a> as a formatter and <a href=""https://eslint.org/"" rel=""nofollow noreferrer"">ESLint</a> as a linter. The problem I'm currently having is that both of this tools don't work on <code>.ejs</code> files and I've not been able to find any good alternatives on the internet.</p>
<p>I'm thinking it's possible to configure Prettier to read <code>.ejs</code> files as if they where regular <code>.html</code> files, but I've not found any good leads on this either. Hope someone knows of a way to do this or has a reference to some good tools to format and linter EJS code.</p>
<p>I found <a href=""https://stackoverflow.com/questions/56141931/using-prettier-for-formatting-ejs-files-in-vs-code"">this question</a> in which they make the VSCode formatter interpret <code>.ejs</code> files as <code>.html</code> files if it's of any help.</p>
<p>I've already tried to run Prettier with <code>.ejs</code> files through the pre-commit hook, but it didn't catch any errors I added on purpose. In my pre-commit config file I have the following code:</p>
<pre class=""lang-yaml prettyprint-override""><code># See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
  # Generic pre-commit validations.
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: check-yaml
      - id: check-added-large-files
      - id: end-of-file-fixer
        exclude: ^server/secrets/
      - id: trailing-whitespace

  # Formatter to fix code formats (https://prettier.io/).
  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v2.7.1
    hooks:
      - id: prettier
</code></pre>
<p>This is the result of running my pre-commit hook on one <code>.ejs</code> file that had two errors in its tag declaration and a missing end-of-line to see if the other pre-commit checks worked.</p>
<p><a href=""https://i.stack.imgur.com/YXML5.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/YXML5.png"" alt=""enter image description here"" /></a></p>
<p>The code in this file I'm talking about (<code>views/error.ejs</code>) has the following:</p>
<pre class=""lang-js prettyprint-override""><code>&lt;%- layout('layouts/boilerplate') %&gt;

&lt;div class=&quot;text-center&quot;&gt;
    h1&gt;&lt;%= err.statusCode %&gt;&lt;/h1&gt;
&lt;/div&gt;
&lt;div class=&quot;row&quot;&gt;
    &lt;div class=&quot;col-6 offset-3&quot;&gt;
        &lt;div class=&quot;alert alert-danger&quot; role=&quot;alert&quot;&gt;
            &lt;h4 class=&quot;alert-heading&quot;&gt;&lt;%= err.message %&gt; &lt;/h4&gt;
            &lt;p&gt;&lt;%= err.stack %&gt;&lt;/p&gt;
            &lt;hr&gt;
            &lt;p class=&quot;mb-0&quot;&gt;Read lines above to see error stack trace.&lt;/p&gt;
        &lt;/div&gt;
    &lt;/div&gt;
&lt;/div
</code></pre>
<p>As you can see, this code has an error in the <code>&lt;h1&gt;</code> tag and in the final <code>&lt;div&gt;</code> tag which Prettier didn't catch. To proove Prettier works on HTML files I added the following code and ran the same pre-commit hook configuration on it.</p>
<pre class=""lang-html prettyprint-override""><code>&lt;!DOCTYPE html&gt;
&lt;html lang=&quot;en&quot;&gt;

&lt;head&gt;
    &lt;meta charset=&quot;UTF-8&quot;&gt;
    &lt;meta http-equiv=&quot;X-UA-Compatible&quot; content=&quot;IE=edge&quot;&gt;
    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;
    &lt;title&gt;Example&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
    &lt;div&gt;
        &lt;p&gt;Voluptates, voluptate tempora. Sed accusantium sapiente necessitatibus tempora molestias fugit nesciunt
            maiores, praesentium tempore? Tempore architecto eveniet consequuntur iusto repudiandae quibusdam fuga animi
            illum nihil deserunt autem libero, adipisci dolores!&lt;/p&gt;
    &lt;/div &lt;/body&gt;
</code></pre>
<p>As you can see there are two errors in this code (no closing tag for the final <code>&lt;div&gt;</code> tag and no closing <code>&lt;html&gt;</code> tag), but in this case Prettier did catch the first error.</p>
<p><a href=""https://i.stack.imgur.com/pgdyn.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/pgdyn.png"" alt=""enter image description here"" /></a></p>
<p>Hope someone has any good advice on this. I'm using EJS because the web development BootCamp I'm taking uses this tool, in other projects I've built the stack has been different and thus the tools I previously mentioned (Prettier and ESLint) worked.</p>
",0,15427299,,
74278147,13593365,11/1/2022 15:25,0,14,<shell><githooks>,Git hook post-push not executing .bat file,"<p>i want to make a continuos delivery for my EC2 instance in every git push.</p>
<p>For this i write the &quot;update_server.bat&quot; that works perfectly when manually executed:</p>
<pre><code>scp -i &quot;my-pem-file.pem&quot; update.sh ec2-user@ec2-xxx-xxx-xxx-xxx.compute-1.amazonaws.com:/home/ec2-user/.
ssh -i &quot;my-pem-file.pem&quot; ec2-user@ec2-xxx-xxx-xxx-xxx.compute-1.amazonaws.com &quot;sudo bash ./update.sh&quot;
</code></pre>
<p>as you see, it executes &quot;update.sh&quot; in the EC2 instance after uploading it.</p>
<pre><code>cd portfolio
git pull
sudo -H pip3 install -r requirements.txt
sudo kill $(pgrep -f 'main.py')
nohup sudo python3 main.py &amp;&gt; /dev/null &amp;
exit
</code></pre>
<p>now i just want the &quot;.git/hooks/post-push&quot; to execute my &quot;update_server.bat&quot; but NOTHING i tried worked (I've done 18 pushes with different codes and nothing works, not even the echo tests). take a look at some codes that i tested:</p>
<pre><code>#!/bin/sh
cmd.exe /c ./update_server.cmd
</code></pre>
<pre><code>#!/bin/sh
REPO_DIR=&quot;$(git rev-parse --show-toplevel)&quot;
UPDATE_SCRIPT_PATH=&quot;$REPO_DIR/aws_access/update_server.cmd&quot;
cmd.exe /c &quot;$UPDATE_SCRIPT_PATH&quot;
</code></pre>
<pre><code>#!/bin/sh
C:\Windows\System32\cmd.exe /c ./update_server.cmd
</code></pre>
<pre><code>#!/Windows/System32/cmd
./update_server.cmd
</code></pre>
<pre><code>#!/Windows/System32/cmd.exe
./update_server.cmd
</code></pre>
<p>i tried renaming .bat to .cmd and removed &quot;@echo off&quot; from my script, and many many many other adjusts, but with no success. I really need help with this, what is the problem here? I'm using Windows 11.</p>
",1,13593365,,
74309392,3692201,11/3/2022 20:49,0,325,<reactjs><git><visual-studio-code><githooks><husky>,Husky and Git Hooks Guards not respected in IDEs,"<p>I have <code>husky</code> and <code>lint-staged</code> setup in a repository I am a main contributor to, and these guards consist of ensuring correct <code>commitlint</code> messages, proper branch naming patterns, and checking for linting errors on all commits.</p>
<p>This all works great when creating/committing/pushing branches from the command line, but when using any IDE's integrated Git UI, the checks are completely ignored, and anything can make it to the repo (<em>incorrect commit messages, incorrect branch names, linting errors, etc.</em>). Not sure why, nor do I know how to avoid this.</p>
<p>Here are some of the relevant pieces of code that is within this web of guards (<em>obviously with irrelevant code omitted for clarity</em>):</p>
<p><code>package.json</code>:</p>
<pre class=""lang-json prettyprint-override""><code>&quot;scripts&quot;: {
  &quot;lint&quot;: &quot;eslint app/&quot;
},
&quot;devDependencies&quot;: {
  &quot;@commitlint/cli&quot;: &quot;^16.2.3&quot;,
  &quot;@commitlint/config-conventional&quot;: &quot;^16.2.1&quot;,
  &quot;enforce-branch-name&quot;: &quot;^1.0.1&quot;
},

...

&quot;husky&quot;: {
  &quot;hooks&quot;: {
    &quot;commit-msg&quot;: &quot;commitlint -E HUSKY_GIT_PARAMS&quot;,
    &quot;pre-push&quot;: &quot;enforce-branch-name '^(branch-name-regex-rules)$'&quot;
  }
},
&quot;lint-staged&quot;: {
  &quot;*.js&quot;: &quot;npm run lint&quot;
}

</code></pre>
<p>And then I have my <code>.husky</code> folder at the project root, with my <code>commit-msg</code>, <code>pre-commit</code>, and <code>pre-push</code> hook scripts:</p>
<p><code>commit-msg</code>:</p>
<pre class=""lang-bash prettyprint-override""><code>#!/bin/sh
. &quot;$(dirname &quot;$0&quot;)/_/husky.sh&quot;

npx --no -- commitlint --edit $1
</code></pre>
<p><code>pre-commit</code>:</p>
<pre class=""lang-bash prettyprint-override""><code>#!/bin/sh
. &quot;$(dirname &quot;$0&quot;)/_/husky.sh&quot;

npx lint-staged
</code></pre>
<p><code>pre-push</code>:</p>
<pre class=""lang-bash prettyprint-override""><code>#!/bin/sh
LC_ALL=C

local_branch=&quot;$(git rev-parse --abbrev-ref HEAD)&quot;
valid_branch_regex=&quot;^(branch-name-regex-rules)$&quot;
message=&quot;Error message for incorrect branch naming&quot;

if [[ ! $local_branch =~ $valid_branch_regex ]]
then
  echo &quot;$message&quot;
  exit 1
fi

exit 0
</code></pre>
<p>I think that should cover all the relevant code pieces that I have. Like I said, when using the command line to make commits and push branches to the remote, these rules come into play and work, informing developers of incorrect patterns.</p>
<p>But any developer that uses like, VSCode's integrated Git feature to commit and/or push (<em>or even just stage the files</em>), none of the guards work, and it's as if someone just added <code>--no-verify</code> to a command line Git declaration to force the commit/push despite failing hooks/guards.</p>
<p>Not sure what I need to do to get <code>husky</code> and <code>lint-staged</code> to work appropriately for any method of staging files, making commits, branch naming, etc. etc.</p>
<p>Does anyone know what I'm doing wrong, or can point me somewhere that might explain what I'm doing wrong? Thanks in advance!</p>
",6,3692201,,
56910251,2160440,7/5/2019 23:58,1,29,<continuous-integration><gitlab><githooks>,How to set up Gitlab to post data to an authenticated service?,"<p>I'm hosting a gitlab. For some of the repos (maybe from different users), I would like to create a tarball for the code and post to a REST API of another service A on each git push.</p>

<p>However, my service A's api requires authentication for access. So I'm using A as an OAuth server to log into gitlab.</p>

<p>Now my question is, how to upload the file properly.</p>

<hr>

<p>A few approaches I am now considering. But I'm not sure if my understandings are correct.</p>

<ol>
<li>Server side git hook. But it seems hooks are purely executable scripts without token or login session information.</li>
<li>Webhook. This might work around service A's authentication (or not?), but fails to create a tarball to upload. And it seems users can only control the URL, but are not able to customize the payload?</li>
<li>Plugin. Same issue with (1). Authenticated state is lost.</li>
<li>CI/CD. Again, same with (1).</li>
</ol>
",0,2160440,,
56940591,9373781,7/8/2019 18:21,1,311,<git><githooks>,How to prevent the skipping of Git Hooks,"<p>Is there some config you can set to make git strict where it is not possible to skip hooks. I've set up some hooks to lint and fix my teammates javascript code, but some of them keep skipping the hooks with <code>--no-verify</code> option because they think it's an error.</p>

<p>Is it possible to prevent the skipping of hooks?</p>
",3,9373781,,
73799175,17468470,9/21/2022 10:25,-2,232,<git><shell><git-bash><githooks>,shell script to detect change in file permissions,"<p>Git is able to detect change in file permissions (for your reference <a href=""https://medium.com/@tahteche/how-git-treats-changes-in-file-permissions-f71874ca239d"" rel=""nofollow noreferrer"">https://medium.com/@tahteche/how-git-treats-changes-in-file-permissions-f71874ca239d</a>).
below is my code for pre-commit (git hooks).</p>
<pre><code>git diff --summary | grep &quot;mode change&quot;
if [ $? -eq 0 ]
then
  echo &quot;file permission changed. please verify and restore the permissions&quot;
  exit 1
else
  echo &quot;no file permissions changed. Good to proceed. Keep it up&quot;
fi
</code></pre>
<p>I want to detect before commit if any file permission have been changed. If file permission change is detected, then it should not commit the changes ad should throw an error.</p>
",3,17468470,,
73824882,2056779,9/23/2022 8:19,0,100,<githooks>,Git commit-msg exec npm test,"<p>I'd like to verify my commit message using git hook and exec <code>npm test</code>.</p>
<p>For the commit message everythink works but it seems not working for <code>npm test</code> if the test fail.</p>
<p><strong>Commit message that I want to accept :</strong></p>
<pre><code>[FIX-A1325] KEYWORDS : Word1 word2
[FIX-D1325-P4556] KEYWORDS : Word1 word2
[NEW] KEYWORD : Word1 word2
[UPD] KEYWORD : Word1 word2
[DOC] Word1 word2
TMP
[REF] KEYWORD : Word1 word2
[GIT] Word1 word2
[DEL] Word1 word2
</code></pre>
<p><strong>My code :</strong></p>
<pre><code>#!/bin/sh

commitMessage=$(cat $1)

pattern=&quot;TMP|\[FIX-A[0-9]+\]\s[A-Z]+\s:\s.+|\[FIX-D[0-9]+-P[0-9]+\]\s[A-Z]+\s:\s.+|\[NEW\]\s[A-Z]+\s:\s.+|\[REF\]\s[A-Z]+\s:\s.+|\[DOC\]\s.+|\[UPD\]\s[A-Z]+\s:\s.+|\[GIT\]\s.+|\[DEL\]\s.+&quot;

if [[ ! &quot;$commitMessage&quot; =~ $pattern ]]; then
    echo &quot;Commit message invalid =&gt; $commitMessage&quot;
    exit 1
fi

npm test
</code></pre>
",1,2056779,,
73829835,2236231,9/23/2022 15:14,0,245,<gitlab><githooks>,Prevent merge requests (MRs) using GitLab hooks,"<p>There is allegedly a way to completely block merges from a source branch in Git, as illustrated <a href=""https://bl.ocks.org/slattery/5eea0d6ca64687ecba6b"" rel=""nofollow noreferrer"">here</a>.</p>
<p>I attempt to enable this possibility in a GitLab repository. However, the documentation for GitLab hooks is <a href=""https://docs.gitlab.com/ee/administration/server_hooks.html"" rel=""nofollow noreferrer"">quite scarce</a>.
After unsuccessfully getting the logs (There are no logs for GitLab hooks anywhere in the Gitaly component, as I am deploying it through Kubernetes. Perhaps this can be modified, but this is currently not documented), I started piping the output into files as a mean to have some logs available.</p>
<p>This is the &quot;logging&quot; <code>pre-receive</code> hook I created under the <code>custom_hooks</code> folder:</p>
<pre><code>#!/bin/bash

printenv &gt; env.txt
echo &quot;$@&quot; &gt; args.txt
</code></pre>
<p>Yet, the context available to the hook seems fairly limited. The environment doesn't provide any information about branches, not even commits. And there are no arguments appended to the call of this script (unlinke in git hooks), it seems.</p>
<p>The final goal I am pursuing is to block a source branch <code>main</code> from merging into a target branch that follows the regular expression <code>^release.*</code>, in order to avoid merging untested features into production (this is our Git-Flow implementation). This policy should be applied regardless of the permissions given to any user.</p>
",0,2236231,,
73831997,11966906,9/23/2022 19:07,-1,144,<git><github><githooks>,run git hook before adding files to staging area,"<p>I have a project that uses prettier for formatting. I want my remote code repository to have files that have a consistent format. For this reason, I added a script in <code>package.json</code> file that will format the whole code base in one line of command(<code>npm run format</code>)</p>
<p><a href=""https://i.stack.imgur.com/Rcpys.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Rcpys.png"" alt=""package.json file"" /></a></p>
<p>This works! But the problem is that I may sometimes forget to format my code before <code>git push</code> to a remote repository. And I am not okay with cluttering my git history with unnecessary commits for the sake of formatting the code.</p>
<p>I resolved to automation and opting for <strong>git hooks</strong> that will format my code base with the command: <code>npm run format</code> every time I add file(s) to the staging area.
But I seem not to find a git hook for my use case.</p>
<p>Is there a hook that can run before staging files?</p>
",2,11966906,,
57054113,11791011,7/16/2019 9:27,0,60,<git><hook><githooks>,Apply git hooks in template folder to specific remote repos,"<p>I know that the hooks in the git template folder will be installed in all future repositories that I clone. What I need is to install these hooks automatically when cloning the repositories that come from a specific bitbucket user.</p>

<p>Examples:</p>

<ul>
<li>git clone git@bitbucket.org:user-1/project-1.git --> Install hooks</li>
<li>git clone git@bitbucket.org:user-2/project-2.git --> NO install hooks</li>
</ul>

<p>Is there a way to achieve that? Is it possible to filter different projects from the same user?</p>
",0,11791011,,
57055679,2943162,7/16/2019 10:56,0,93,<git><githooks>,Git pre-receive hook newRev issue,"<p>While executing pre-receive hook <code>git show $newrev</code> shows diff in <code>$newRev</code> but if while executing <code>pre-receive</code> hook I will go to repo and execute the same command <code>git show $newrev</code> it will return error <code>fatal: bad object {newRev}</code>.</p>

<p>Git version: 2.22.0. On Git 2.7.4 executing <code>git show</code> in repo doesn't return error.</p>

<p><code>pre-receive hook script</code> when <code>git show</code> works correctly</p>

<pre><code>#!/usr/bin/env bash
read oldrev newrev refname

git show $newrev
</code></pre>

<p><code>pre-receive hook script</code> with sleep and manually run <code>git show</code> in repo</p>

<pre><code>#!/usr/bin/env bash
read oldrev newrev refname

sleep 999
</code></pre>

<pre><code>cd /repo
git show ae435ae1f9de55620d306cc82799ff20870f4238
</code></pre>

<p>fatal: bad object ae435ae1f9de55620d306cc82799ff20870f4238</p>
",0,2943162,,
73869424,20101738,9/27/2022 14:36,1,32,<git><githooks>,Run git hook as remote user in a shared repository,"<p>I have a setup where there are two users on my Linux server: alice and bob. Alice has a clone of a shared bare repository that is in Bob's home folder. I have a hook on the bare repo in Bob's home folder that needs to be run as the user bob, but when Alice pushes to the bare, the hook is run as alice. Is there a way to make git run the hook as Bob without Alice needing Bob's password?</p>
",3,20101738,,
57077740,4464551,7/17/2019 14:02,3,1515,<git><githooks><flake8>,Flake8 config not being applied in git hook,"<p>I have a <code>pre-commit</code> git hook that is supposed to hinder the commit if the added lines don't follow the specified style-guide.</p>

<p>So in the root folder of my repo I have a <code>.flake8</code> file that looks like: </p>

<pre><code>[flake8]

########## FORMATTING ##########
# Print the total number of errors.
#count =
## Print the source code generating the error/warning in question.
#show-source =
## Count the number of occurrences of each error/warning code and print a report.
#statistics =

########## OPTIONS ##########
# Set the maximum length that any line (with some exceptions) may be.
max-line-length = 90
# Set the maximum allowed McCabe complexity value for a block of code.
max-complexity = 10

########## RULES ##########
ignore = D102,D103,E265

########## TARGETS ##########
# Redirect all output to the specified file.
#output-file = 
## Also print output to stdout if output-file has been configured.
#tee = 
</code></pre>

<p>And my git hook that is under <code>.git/hooks/pre-commit</code> with full rights: <code>rwxrwxrwx</code> (I know not the safest).</p>

<pre><code>#!/bin/sh
#
# Checks so that the file is correctly linted, before commiting.
# Using the same linter settings as defined in the repo root .flake8
#

LINT=$(git diff -- '***.py' | py -3 -m flake8 --diff --config=""../../.flake8"")
#LINT=$(git diff -- '***.py' | py -3 -m flake8 --diff --max-line-length=90)

if [ -z ""$LINT"" ]
then
        exit 0
else
        echo ""$LINT""
        exit 1
fi
</code></pre>

<p>The hook works if I change the <code>LINT</code> variable to the out commented one. Then it marks the row that is to long. But If I specify my config file instead then it does not mark it.</p>

<p>I think that the error is either that the <code>--config=""../../.flake8</code> is somehow not correct. I'm running this on a windows machine under cygwin (so the path should be formatted correct, no?).</p>

<p>Or that somehow my config file is wrong and thus it doesn't get applied.</p>
",0,4464551,,
73898636,1147859,9/29/2022 16:10,0,98,<git><shell><githooks>,Why does my Git hooks shell script result in a parse error?,"<p>I do little shell scripting so hopefully I am doing something obviously wrong!</p>
<p>This hook is intended to run whenever you push. If you are on the designated branch, in this case 'githook', it should run <code>npm run testbuild</code> and if that fails, stop the push.</p>
<p>If you are on another branch it should not interfere, and if you are on that branch and that test completes without error, it should let the push go ahead.</p>
<p>Here is the content of the script <code>pre-push</code>:</p>
<pre><code>#!/bin/zsh

current_branch=$(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')

CMD=&quot;npm run testbuild&quot;

if [[ $current_branch = &quot;githook&quot;]]; then
    eCHO &quot;You are on $branch, running build test&quot;
    eval $CMD
    RESULT=$?
    if [ $RESULT -ne 0 ]; then
        echo &quot;failed $CMD&quot;
        exit 1
    fi
fi
exit 0
</code></pre>
<p>Currently, when I push from that branch, I get this:</p>
<blockquote>
<p>.git/hooks/pre-push:7: parse error near `;'~</p>
</blockquote>
<p>But I don't see anything obviously wrong there?</p>
",7,1147859,,
57100070,779570,7/18/2019 17:45,5,1024,<git><jupyter-notebook><bitbucket><githooks>,Sanitizing output and formatting Jupyter notebooks files during git commits,"<p>I'm tying to write git hook that automatically sanitizes Jupyter Notebook outputes files using <a href=""https://github.com/kynan/nbstripout"" rel=""nofollow noreferrer"">nbstripout</a> (you can see it as a source file formater).</p>
<p>That's needed because notebooks outputs can disclose confidential information that must not be committed. These portions to be stripped out are basically nodes in a JSON file.</p>
<p>I tried different hooks, but the pre-commit option is mainly used to <a href=""https://medium.com/zyseme-technology/code-formatting-scalafmt-and-the-git-pre-commit-hook-3de71d099514"" rel=""nofollow noreferrer"">check if files are formatted</a>, and doesn't seem suited to iterate over the committed files and execute a command like <code>nbstripout</code>.</p>
<p>A bonus would be a hook that kept the original workspace files while formatting the committed files only on the remote repo (I don't even know if that would be possible due to potential conflicts).</p>
",1,779570,0,0
57102293,11461760,7/18/2019 20:35,1,2856,<githooks><husky>,"How to create a husky ""hook"" precommit that check if there is any console.log() in the files","<p>I can't get the right way to create a hook for husky that prevents the debug lines in my code before a commit.</p>

<p>I've been reading the docs, and a some questions about the same topic, but neither of them could help me.</p>

<p>I want to use Husky to prevent the debug lines in my code, I'm using eslint and prettier as well, but neither of them with my current rules check if there is any debug line in the code, and I want to they stay this way, since I only want to be prevented in the precommits.</p>
",0,11461760,,
57104138,5953419,7/19/2019 0:31,0,1000,<regex><git><github><jira><githooks>,Jira pre-receive hook on GitHub server not working for git commit pushes,"<p>i just added the <a href=""https://github.com/github/platform-samples/blob/master/pre-receive-hooks/require-jira-issue.sh"" rel=""nofollow noreferrer"">https://github.com/github/platform-samples/blob/master/pre-receive-hooks/require-jira-issue.sh</a></p>

<p>script to one of my github remote repos and was able to successfully configure a pre-receive hook at the org level and enabled it for one of my sample repos. Now when i push to that sample repo from local, it always results in the below error :-</p>

<pre><code>remote: jira-commit-hook.sh: failed with exit status 1
remote: grep: Invalid range end
remote: ERROR
remote: ERROR: Your push was rejected because the commit
remote: ERROR: e9b0dd4695a51beb51e6fc1a8d16f01fa7dd13b8 in master
remote: ERROR: is missing the JIRA Issue
remote: ERROR:
remote: ERROR: Please fix the commit message and push again.
 ! [remote rejected] master -&gt; master (pre-receive hook declined)
error: failed to push some refs to 'https://************'
</code></pre>

<p>The commit regex I'm using is <code>msg_regex='[DST\-[0-9]+\]'</code> since DST is the project key in our jira for one of the projects. All the commits i am pushing has the string <code>DST-***</code> in their message where <code>***</code> is a number and <code>DST-***</code> is some actual issue key for the jira project here. Any idea why the remote server hook is rejecting the push. Looks like its not validating the regex. Any idea why?</p>
",0,5953419,,
57113880,1159763,7/19/2019 13:48,0,55,<git><githooks>,How can I have a git pre-commit hook modify a file and include that file in the commit?,"<p>I have a pre-commit hook which modifies some files before they are committed; however when the hook runs, the files that it modifies do not get committed! How can I have the files included? I need this to work both for staged commits and unstaged ""commit all modified files"" commits, so I don't think staging the modified file will work here because that would exclude the original files in the latter case (since they are not staged).</p>

<p>Here's a simple reproduction case:</p>

<pre><code>#!C:/Program\ Files/Git/usr/bin/sh.exe
echo ""Test file"" &gt; testfile.txt
</code></pre>

<p>If I change a file and commit, the <code>testfile.txt</code> never gets committed; if I change a file, stage it, and commit, the same thing happens - <code>testfile.txt</code> is sitting there as a pending change.</p>
",2,1159763,,
57120843,3577115,7/20/2019 0:22,2,319,<git><gitlab><githooks>,"Git: trigger a ""robot"" commit when a master branch is merged","<p>I have <code>master</code> branch and other branches from my team members. <code>master</code> is sync with the product. I want to have another additional commit that upgrading version (change a file content say 'release.md') when an MR is merged into master from other branches, no matter what changes have been made.</p>

<p>This is for a gitlab v11.10.4, running on ubuntu 16.04 system. 
At the beginning, I want to set a git hook (update hook) on gitlab server-side. In the script, I need to do: 1) check if target merge branch is master 2) if it does, check the commit's message is not like ""upgrading version"" 3) if not then add an additional commit before merge. </p>

<pre class=""lang-sh prettyprint-override""><code>touch release.md
git commit -a -m ""upgrade version""
</code></pre>

<p>I know that in an update hook I could get args which are ""refname"", ""oldrev"" and ""newrev"", theoretically I could parse info from this to finish step 1) and step 2). but I have no idea how to add additional commit to this branch.</p>

<p>It is easy to have it in local hook (git add . blahblah), but in that way every developer in my team gonna need to maintain a hook file in .git of any repo. Which is error prune. Any idea and suggestions?</p>
",0,3577115,0,0
74024491,20211228,10/11/2022 7:31,0,550,<git><github><githooks>,Changing base branch of pull request on GitHub to merge into?,"<p><strong>Lets say I have a scenario:</strong></p>
<p>I have 2 branches: master(<strong>default</strong>) and patch and both are live branches
I created a topic branch from patch branch and wants to create a PR. When I create a PR, it tries to merge into master, as it is default.</p>
<p>Manually, I can change this, which has been answered in many post.</p>
<p><a href=""https://stackoverflow.com/questions/9135913/merge-pull-request-to-a-different-branch-than-default-in-github"">Merge pull request to a different branch than default, in Github</a></p>
<p><a href=""https://github.blog/2016-08-15-change-the-base-branch-of-a-pull-request/"" rel=""nofollow noreferrer"">https://github.blog/2016-08-15-change-the-base-branch-of-a-pull-request/</a></p>
<p><a href=""https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/changing-the-base-branch-of-a-pull-request"" rel=""nofollow noreferrer"">https://docs.github.com/en/pull-requests/collaborating-with-pull-requests/proposing-changes-to-your-work-with-pull-requests/changing-the-base-branch-of-a-pull-request</a></p>
<p>But I wanted to know is there any way I can automate this; can <strong>using hooks</strong> will be useful in this case. so whenever I create a  PR, it will automatically will try to merge PR into its specific base branch instead of manually trying to overwrite it by edit the base branch.</p>
",4,20211228,,
74037606,10540286,10/12/2022 6:55,0,26,<php><apache><composer-php><laravel-8><githooks>,Composer doesn't autoload php packages,"<p>I'm currently running under a VBox machine 2 laravel sites (SO: Ubuntu 20.04).
In these 2 sites I have created 2 githooks so every time I execute a git pull these commands are called:</p>
<pre><code>#!/bin/bash
export COMPOSER_ALLOW_SUPERUSER=1
composer install
npm install
npm run prod
php artisan migrate
php artisan optimize
php artisan config:cache
php artisan config:clear
</code></pre>
<p>Since when I started using these githooks I noticed that I had some problems after some days with composer.
In fact I always have to call again composer install even if it says <strong>&quot;Nothing to install, update or remove&quot;</strong>.</p>
<p>If I don't execute that command then when I try to open the websites I got an HTTP error 500.</p>
<p>After I executed the git hook and rebooted the VM.
<a href=""https://i.stack.imgur.com/zarzy.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/zarzy.png"" alt=""enter image description here"" /></a></p>
<p>Then I execute composer install as sudo.
<a href=""https://i.stack.imgur.com/qu0fz.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/qu0fz.png"" alt=""enter image description here"" /></a></p>
<p>And now the website is working.
<a href=""https://i.stack.imgur.com/UEowk.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/UEowk.png"" alt=""enter image description here"" /></a></p>
<p>I wonder if I am doing something wrong. May it be some problems with Apache?
For me it seems that composer is not autoloading the packages correctly at the startup of the machine.</p>
",0,10540286,,
57297444,652528,7/31/2019 19:09,17,3658,<git><githooks><husky>,How husky works?,"<p><a href=""https://github.com/typicode/husky"" rel=""noreferrer"">https://github.com/typicode/husky</a> has the ability to run git hooks automatically in a way that they can be shared between teams in the repository it self.</p>
<p>How can this even work? Since the hooks need to be in <code>.git/hooks</code> which is not added to repository.</p>
<p>Does it wraps <code>git</code> command and intercept commands, running hooks when they happen?</p>
<p>I want to reproduce this behavior for python and php projects without the need to depend on npm or node.</p>
",3,652528,0,0
57322925,1642126,8/2/2019 8:48,1,51,<android><android-gradle-plugin><githooks><gradlew>,Git hooks - ./gradlew test works on Mac but doesn't work on Windows,"<p>I need to write a pre-push hook that starts tests on pre-push (gradlew test). 
And it works on mac with <strong>./gradlew test</strong> while on windows it fails. 
On Windows, it works with <strong>gradlew test</strong>. </p>

<p>Our team uses both Windows and Mac OS. 
How can I put both cases in the pre-push hook, so that it works on both OS-es. </p>

<p>Right now my hook looks like this: </p>

<pre><code>echo ""Starting pre push hook...""

# run the tests 
./gradlew testDebugUnitTest

# store the exit code in a RESULT
RESULT=$?

# return result
exit $RESULT
</code></pre>
",0,1642126,,
74163261,304209,10/22/2022 11:47,2,210,<git><githooks><pre-commit-hook><git-cherry-pick><git-rewrite-history>,How to recreate git commit history but with applying pre-commit hook?,"<p>I'm trying to rewrite git repository history and apply new <code>pre-commit</code> hook:</p>
<ol>
<li>Take every commit</li>
<li>Apply <code>pre-commit</code> hook</li>
<li>Keep the original metadata (author, date, message)</li>
<li>Resolve conflicts manually, if any (the hook can alter the commit)</li>
<li>Commit to a new repo</li>
</ol>
<p>The end state is a new repo with a different commit history.</p>
<p>What I already found:</p>
<ul>
<li><code>cherry-pick</code> doesn't run <code>pre-commit</code> hook.</li>
<li>I can do</li>
</ul>
<pre><code>git cherry-pick --no-commit
git commit --no-edit
</code></pre>
<p>But it doesn't preserve the commit date. Also, not sure how to do that for each commit in history (unless I write a e.g. Python script for that).</p>
<p>Any ideas on how to do that efficiently?</p>
",2,304209,,
57427819,7490697,8/9/2019 10:06,0,112,<linux><git><devops><webhooks><githooks>,How to do a git post-push?,"<p>I have a git server where many of my repositories are being handled. I have a Raspberry Pi (which is globally accessible) setup in testing department. What I want to do is, I want to push the code from my PC to git server and that Raspberry Pi would automatically detect the push and do a subsequent git pull to update its repository.</p>

<p>I have used GitHub and it is VERY easy to do that in Github as it has a builtin Webhook page where I added a link of one of the php files in my Pi. That php file contains nothing but <code>git pull</code> so whenever I push something from my PC to GitHub, it executes that php file in Pi and it does a git pull and updates itself automatically.</p>

<p>I have also used a githook post-receive but it needs to setup on server and client both and it was a lot of work but I finally did it. still the repo was not being updated as I pushed the code.</p>

<p>I want to do the same exact thing which Github is doing but with Git. I am using Gitolite for managing Git on my server</p>
",3,7490697,,
74385167,3917391,11/10/2022 6:55,1,37,<githooks>,using git checkout without using hooks,"<p>I'm working on multiple repositories and one has some commit policies forced by client side hooks.<br />
When I work in this repo and switch to the <code>devel</code> branch, it takes some time for the &quot;hook preparations&quot;.</p>
<p>Can I somehow switch the current branch and forcefully ignore the hook stuff?<br />
I know the option <code>--no-verify</code> for commit, but it is not working on checkout.</p>
<p>Environment: Windows, but this should be irrelevant</p>
<p>I tried the following:</p>
<pre><code>git.exe checkout --no-verify develop -- 
-&gt; 
error: unknown option `no-verify'
usage: git checkout [&lt;options&gt;] &lt;branch&gt;
</code></pre>
",1,3917391,,
74394013,19574558,11/10/2022 18:52,0,582,<github><githooks><branching-and-merging><trunk>,Github private repository master branch protection,"<p>we had an incident one of our devs merged into master branch directly which shouldn't have happened.</p>
<p>We use &quot;feature&quot; branch that goes in &quot;rc&quot; branch directly - which will be QA'ed then merged into &quot;master&quot; after deployment.</p>
<p>I'd like to see if there is a way to restrict only &quot;rc&quot; branches can be merged into master and reject all other push.</p>
<p>Since we are using private repo, branch protection via github setting might not work, so I was looking into pre push hook, but will above scenario be possible?</p>
<p>Thank you.</p>
<ol>
<li>looked into github setting -&gt; branch protection : it wasn't available for private repo</li>
<li>looked into usage for pre push hook.. wasn't able to find good example for our usage so far.</li>
</ol>
",0,19574558,,
74542799,8840729,11/23/2022 6:52,-1,38,<github><github-actions><githooks>,"how to allow only certain people to push to "".github/wokflows"" directory in github for all branches","<p>I came across an issue with working GitHub actions,
I have  built multiple central workflows for the ci-cd process and called this workflow in application repositories and building apps but some of the developers writing their own workflows to build applications and not following certain standards, so to make them use only central workflows I need to restrict any push to &quot;.github/workflows&quot; and allow only specified people to push to &quot;.github/workflows&quot;</p>
",2,8840729,,
74797692,8916474,12/14/2022 11:36,0,538,<python><githooks><pre-commit-hook><tox><pre-commit.com>,"Tox and pre-commit hook ""error: unrecognized arguments"" or not running test envs","<p>Everything is inside a docker container.
Tox works fine separately inside docker. What I'm trying to do is to add Tox to the pre-commit hook to run it for files with changes to be committed.</p>
<p><strong>.pre-commit-config.yaml</strong></p>
<pre><code>-   repo: local
    hooks:
    -   id: tox-project
        name: tox
        entry: tox
        language: system
        types: [python]
        args: [-c, path_inside_docker/tox.ini,--workdir=path_inside_docker, -e, &quot;fix,pylint,[other_tests]&quot;]
</code></pre>
<p>When tox runs as a part of a pre-commit hook (defined as above), it generates an error that refers to the file with changes that I want to commit:</p>
<pre><code>tox......................................................................Failed
- hook id: tox-project
- exit code: 2

usage: tox [-h] [--colored {yes,no}] [-v | -q] [--exit-and-dump-after seconds] [-c file] 
[--workdir dir] [--root dir] [--runner {virtualenv}] [--version] [--no-provision [REQ_JSON]] 
[--no-recreate-provision] [-r] [-x OVERRIDE]
{run,r,run-parallel,p,depends,de,list,l,devenv,d,config,c,quickstart,q,exec,e,legacy,
le} ... 

tox: error: unrecognized arguments: path/to/file/to/be/commited/main.py hint: if you tried to pass 
    arguments to a command use -- to separate them from tox ones
</code></pre>
<p>What I tried:</p>
<p><strong>1st solution.</strong>
To add &quot;--&quot; to args for tox, to pass files from commit.
Which I found here: <a href=""https://stackoverflow.com/questions/51741320/tox-throws-tox-error-unrecognized-arguments-for-a-seemingly-valid-command"">Add -- as argument for tox</a></p>
<pre><code>args: [-c, path_inside_docker/tox.ini,--workdir=path_inside_docker, -e,&quot;fix,pylint,[other_tests]&quot;,--]
</code></pre>
<p>Now tox runs as a hook, but it doesn't work properly. Hook pass tox with success, and commit is done. But the tox is not generating any results as supposed to (when the same file is tested by a separate tox outside hook, it generates a list of errors).</p>
<p><strong>2nd solution.</strong>
Turn off passing filenames.</p>
<p>I've found this solution for a similar issue, solved by: <a href=""https://stackoverflow.com/questions/64036351/pre-commit-for-local-hook-gives-error-unrecognized-arguments-pre-commit-conf"">pass_filenames: false</a>.
I tried this as well. But then tox is (as I understand) not getting any files from the commit to process and finish everything with success - again not generating any results that it suppose to generate.</p>
<p>Any ideas?</p>
",3,8916474,,
74830992,20797931,12/17/2022 0:28,0,240,<php><git><composer-php><githooks>,How to run a shell script with composer.json for a pre-commit git hook,"<p>I am using <a href=""https://github.com/BrainMaestro/composer-git-hooks"" rel=""nofollow noreferrer"">composer-git-hooks</a>.
Anything I'll add to <code>pre-commit</code> array would be copied to <code>.git/hooks/pre-commit</code></p>
<pre><code>&quot;extra&quot;: {
    &quot;hooks&quot;: {
        &quot;pre-commit&quot;: ['./pre_commit_hook_shell.sh']
    }
}
</code></pre>
<p>Since my shell command is rather large and wouldn't look to good in the json file, I decided to have it in a separate file (<code>pre_commit_hook_shell.sh</code> which sits in the root of the project), yet nothing is being copied into <code>.git/hooks/pre-commit</code>.</p>
<p>I doubt I'm the only one trying to go at it this way and after investing time searching around for this issue and also looking into the source code of the package, I couldn't find a solution.</p>
<p>This is my new work account I just opened but I'll set the correct answer as an answer so you won't waste your time.
Thank you.</p>
",1,20797931,,
74912148,15589858,12/25/2022 8:02,1,138,<.net><bash><visual-studio><nunit><githooks>,git pre-push hook doesn't work with visual studio git interface,"<p>I have created a pre-push hook that runs all the unit tests (NUint) if a project that contains the string &quot;NDI&quot; has changed.</p>
<pre><code>#!/bin/bash

# Get the current branch
branch=$(git rev-parse --abbrev-ref HEAD)

# Get the remote repository and branch
remote=$(git config --get branch.$branch.remote)
remote_branch=$(git config --get branch.$branch.merge | sed 's#^refs/heads/##')

# Check if any project containing &quot;NDI&quot; in its name has changed
if git diff --name-only $remote/$remote_branch HEAD | grep -q &quot;NDI&quot;; then
  # Run all NUnit tests
  dotnet test
fi

# If the tests failed, cancel the push
if [ $? -ne 0 ]
then
  echo &quot;Tests failed. Push cancelled.&quot;
  exit 1
fi
</code></pre>
<p>The problem is when I try to use the visual studio git interface to push the new code to the remote repository I get the error message: <em>&quot;Failed to push to the remote repository. See the Output window for more details.&quot;</em> <br> The output window doesn't have any special message about the problem, just about the successful build from the commit. When I try to use the VS terminal with <code>git push</code> it does work and runs the unit tests successfully if an NDI project has changed. <br> Side note: it works as expected for the pre-commit hook.</p>
",5,15589858,,
74952160,5640517,12/29/2022 14:08,-1,222,<windows><git><windows-subsystem-for-linux><githooks>,Set environment variable on branch checkout/switch,"<p>I'm using the post-checkout hook to try and set environment variables when switching branches.</p>
<pre class=""lang-bash prettyprint-override""><code>#!/bin/sh

echo &quot;Updating environment variables...&quot;

OLD_IFS=$IFS
IFS=$'\n'

for x in $(cat .env | sed -e '/^#/d;/^\s*$/d' -e &quot;s/'/'\\\''/g&quot; -e &quot;s/=\(.*\)/='\1'/g&quot;)
do
    var_name=$( cut -d '=' -f 1 &lt;&lt;&lt; &quot;$x&quot; )
    export $x
    pwsh.exe -c &quot;\$env:$x&quot;
    pwsh.exe -c &quot;echo 1; echo \$env:$var_name&quot;
    export $x
done

IFS=$OLD_IFS
</code></pre>
<p>The problem is that git hook is executed with WSL so the variables I set are lost after the post-hook</p>
<p>I assume this is because of the shebang?</p>
<p>I've tried <code>#!/usr/bin/env pwsh</code> but I get the error <code>Processing -File '.git/hooks/post-checkout' failed because the file does not have a '.ps1' extension. Specify a valid PowerShell script file name, and then try again.</code></p>
<p>Is this something that can be done? I want to automatically change the DB connection when I switch branches.</p>
",1,5640517,,
74955158,2715716,12/29/2022 19:08,0,139,<git><visual-studio-code><githooks>,Preserve COMMIT_EDITMSG between `git commit` runs when using pre-commit hooks,"<p>My team is using Git pre-commit hooks to validate commit messages for formatting rule compliance. This means whenever I go and run <code>git commit</code>, then fill in <code>COMMIT_EDITMSG</code> and save and close the file, a script will run that will check its contents against a set of rules and put out a respective exit code which either fails the commit creation process or allows it to pass.</p>
<p>I tend to need multiple passes at making my Git commit messages comply with all of the rules as the rule checking is non-interactive so I only learn whether my commit message is compliant after I've saved and closed <code>COMMIT_EDITMSG</code>.</p>
<p>I also tend to write expansive commit message bodies with multiple paragraphs of context which greatly increases the likelihood of running afoul of the lint rules as well as the time required to author a commit in case I am not able to preserve the commit message draft in between <code>git commit</code> invocations and need to rewrite the commit message each time or craft it in a temporary file until <code>git commit</code> passes and I can discard the temporary file.</p>
<p>I am hoping to find a solution to preserving the commit message without having to use a temporary file between the multiple <code>git commit</code> invocations only the last of which results in the commit being created.</p>
<p>I have found a related questions concerning Vim here: <a href=""https://stackoverflow.com/q/9133526/2715716"">Git: Recover failed commit&#39;s message</a>. However, the solutions there are either to use submodules (we aren't) or to configure Vim to keep the backup file.</p>
<p>I am using VS Code as the configured Git editor for authoring commit messages so I am hoping to find a VS Code-compatible solution. I have set it up like so:</p>
<p><code>git config --global core.editor &quot;code --wait&quot;</code></p>
<p>When I go and run <code>git commit</code> from the VS Code integrated terminal, a new tab will open with the <code>COMMIT_EDITMSG</code> file and when I close that tab, Git will take notice and run the pre-commit hooks for me. I don't have to close VS Code as a whole for this even though it is not a separate instance of VS Code.</p>
<p>Is there a way to make Git preserve <code>COMMIT_EDITMSG</code> whenever the commit creation fails due to a hook returning a non-zero exit code?</p>
<p>Alternatively, is there a way to make VS Code preserve contents of a file at a path I saved <em>and</em> closed and that got deleted externally later?</p>
<p>There are a few VS Code settings which feel in the ballpark, like <code>workbench.action.keepEditor</code>, but nothing like what I need.</p>
<p>Is my only hope adjusting the pre-commit hook such that it stores the commit message draft in a separate file not known to Git before exiting and then recovers the message the next time around I go to run <code>git commit</code>? Can you even pre-fill a suggested commit message from a hook when <code>git commit</code> is ran?</p>
",2,2715716,,
74988032,11909157,1/2/2023 23:57,1,97,<git><shell><npm><githooks>,npm run build script not working inside Git post-merge hook,"<p>I'm trying to run an npm script inside a <strong>post-merge</strong> <em>Git hook</em>, but the npm script isn't working. The hook is being triggered on a git pull.</p>
<p>Here is what my post-merge file looks like:</p>
<pre><code>#!/bin/sh
/home/jt/nvm/versions/node/v18.12.0/bin/npm run build --prefix /home/jt/project/frontend
touch /home/jt/project/backend/backend/wsgi.py
</code></pre>
<p>The post-merge file is correctly located in the hooks directory within the .git directory:</p>
<pre><code>23:44 ~/project/.git/hooks (hosting)$ tree
.
├── applypatch-msg.sample
├── commit-msg.sample
├── fsmonitor-watchman.sample
├── post-merge
├── post-update.sample
├── pre-applypatch.sample
├── pre-commit.sample
├── pre-merge-commit.sample
├── pre-push.sample
├── pre-rebase.sample
├── pre-receive.sample
├── prepare-commit-msg.sample
└── update.sample
0 directories, 13 files
23:44 ~/project/.git/hooks (hosting)$ 
</code></pre>
<p>When I run the <strong>npn run build</strong> command in a shell script, it runs perfectly.</p>
<pre><code>23:38 ~/project (hosting)$ nano test.sh
23:38 ~/project (hosting)$ ls
LICENSE  README.md  backend  frontend  test.sh
23:38 ~/project (hosting)$ source test.sh
&gt; frontend@0.0.0 build
&gt; vite build
vite v3.2.5 building for production...
✓ 241 modules transformed.
../backend/static/assets/react.35ef61ed.svg                   4.03 KiB
../backend/static/assets/map-pin-icon-default.2555d711.svg    0.22 KiB
../backend/static/assets/map-pin-icon-selected.0e940bf1.svg   0.23 KiB
../backend/static/assets/map-pin-icon-home.bc73a24c.svg       0.23 KiB
../backend/static/assets/bg_image.90202fe6.png                1671.34 KiB
../backend/static/index.html                                  1.00 KiB
../backend/static/assets/index.a062f1f9.css                   192.35 KiB / gzip: 27.36 KiB
../backend/static/assets/index.fd1f092a.js                    263.23 KiB / gzip: 87.69 KiB
../backend/static/assets/index.fd1f092a.js.map                1010.80 KiB
23:39 ~/project (hosting)$ 
</code></pre>
<p>Why is the <strong>npm run build</strong> script not working inside the git post-merge hook?</p>
",0,11909157,,
75017632,3349686,1/5/2023 11:19,0,147,<gitlab><githooks>,gitlab : prevent push to a public branch without MR approval,"<p>We are using <strong>gitlab</strong> free version along with <strong>jenkins</strong> for cicd</p>
<p>In our context, 'development' is the public (and protected) branch which is sane at anytime</p>
<p>I tried looking at a few related questions but didnt find. We have a development branch from where users create branches for features and bugfixes (the usual workflow)
Users create MR and link it to a branch they created (say, bugfix-xxxxx)
Once the MR is approved, this will be merged to develop.
So, normal workflow has no problem
However, when a user accidentally pushes from development branch, theis is also getting pushed directly to develop .</p>
<p>What is the best way to prevent such commits (to development branch) which are not approved and not part of any approved MR?
Is it a git admin push pre-hook? any resources to refer to ? any scripts to do achieve this? etc</p>
",0,3349686,,
75033201,1721136,1/6/2023 15:55,0,26,<git><git-merge><githooks>,How to get parent names in git's prepare-commit-msg hook,"<p>When creating your own git hook for prepare-commit-msg, how can you determine the list of parents?</p>
<p>It's not included in the args passed in.  Is there possibly a git command to run on the cli that will tell you the parents of an in-progress merge?</p>
",0,1721136,,
75047065,11922237,1/8/2023 10:34,1,112,<git><githooks><dvc>,How to disable DVC git hooks,"<p>DVC has Git hooks which are installed with <code>dvc install</code>. The hooks were working fine but after an error with <code>dvc push</code> and the DVC remote, I cannot <code>git push</code> because before <code>git push</code> gets executed, <code>dvc push</code> runs and generates an error. Which means I can't push.</p>
<p>How can I disable DVC Git hooks so that I won't face the issue anymore?</p>
",1,11922237,,
75135526,6259019,1/16/2023 14:18,0,80,<bash><githooks><husky>,Husky: git commit --amend and push inside a pre-push hook,"<p>In order to make a continuous improvement script, inside my <code>pre-push</code> hook, I am trying to add a <code>jest.config.js</code> when it is changed, <code>git commit --amend</code> it, and push it:</p>
<pre class=""lang-bash prettyprint-override""><code>git add ${PROJECT_ROOT}/jest.config.js
git commit --amend -C HEAD
git pull
git push --no-verify
</code></pre>
<p>However, because this code is in a pre-push hook, that means that the push that should happen afterwards will fail because:</p>
<pre><code>remote: error: cannot lock ref 'my/branch': is at 'updatedHash' but expected 'formerHash'
</code></pre>
<p>Is there a recommended way to push inside a pre-push hook?</p>
",0,6259019,,
75139806,373091,1/16/2023 21:20,0,44,<git><githooks>,Git hooks how to make sure you have latest commits before creating new branch?,"<p>We frequently have this issue:
<a href=""https://medium.com/devops-with-valentine/gitlab-merge-blocked-fast-forward-merge-is-not-possible-7f86bf79e58b"" rel=""nofollow noreferrer"">https://medium.com/devops-with-valentine/gitlab-merge-blocked-fast-forward-merge-is-not-possible-7f86bf79e58b</a></p>
<p>And it seems the culprit, may be due to sometimes after doing a work in feature branch merging into <code>master</code>, the next feature is branched off master locally, without first ensuring to fetch the merged commits from origin.</p>
<p>And then, a week or so later, there's the problem mentioned above.</p>
<p>I'd like to avoid this, by adding a hook - whenever you do <code>git checkout -b</code> or <code>git branch</code>, a script would run, to pull the current branch off <code>origin</code> - thus ensuring that a developer's local head for the source branch, is indeed the latest at the time of creating the feature branch.</p>
<p>I was searching and reviewing the various hooks, none seem to be suitable.</p>
<p>I believe on another repo where we do <code>feature</code>-&gt;<code>development</code>-&gt;<code>master</code> branches, we encounter similar issues as well.</p>
<p>Thanks.</p>
",2,373091,,
75143171,20050180,1/17/2023 7:35,1,87,<gitlab><githooks>,Enabling pre-receive server hook to get PR/MR approval before pushing to dev branch,"<p>Use case: I have code on my local machine and If I try to push it to remote server, a <code>pre-receive</code> hook in remote [GitLab] server should get triggered and ask for respective author approval to merge that code onto Gitlab repo.<br />
After [code review] if author approves MR then code from my local repo will be pushed to remote server else push needs to be halted.</p>
<p>I am sure that I was asked to enable <code>pre-receive</code> hook on GitLab server side and not on client side.<br />
I think it is not possible because code exists in developer's local machine and hence approver may not be able to do code review but not sure about <code>pre-receive</code> working.</p>
<p>Can <code>pre-receive</code> hook able to notify approver before code push? If it is possible need to know how?<br />
If not, I want a strong valid point to negotiate😒</p>
",0,20050180,,
75147884,4852132,1/17/2023 14:24,0,54,<git><bitbucket><devops><githooks><pre-commit-hook>,How to write default hooks for a multi users repo on bitbucket?,"<p>I have a git repo on bitbucket cloud and a dozen users working on him.
I wish to define/write hooks for pre-commit checks for every user cloning the repo to his local workspace without every user needed to define or drag the hooks himself.</p>
<p>As far as I understand no such option is available via bitbucket option (exists only for bitbucket server services which are self-hosted).</p>
",2,4852132,,
75269737,9557666,1/28/2023 17:59,0,89,<bash><git><githooks>,commit-msg hook reads all the data to commit_msg when amending,"<p>In my <code>commit-msg</code> hook git passes commented lines from <code>amend</code> prompt to the script hook.</p>
<pre><code>msg=&quot;$(cat &quot;$1&quot;)&quot;
</code></pre>
<p>When I am doing <code>git commit --amend</code> the output of the msg is</p>
<pre><code>GRP-0903 CHANGE OTHER - Enhance commit-msg hook to restrict commit messages # Please enter the commit message for your changes. Lines starting # with '#' will be ignored, and an empty message aborts the commit. # # Date: Sat Jan 28 19:41:37 2023 +0400 # # On branch fix/GRP-0903-Button-icons-visibility-issue # Your branch is up to date with 'origin/fix/GRP-0903-Button-icons-visibility-issue'. # # Changes to be committed: # modified: .husky/commit-msg # deleted: tools/git-hooks/pre-commit.sh #
</code></pre>
<p>This is my original commit message - <code>GRP-0903 CHANGE OTHER - Enhance commit-msg hook to restrict commit messages</code>. The rest is coming from the amending prompt.
This is the content of my editor when I am using amend.</p>
<pre><code>GRP-0988 CHANGE OTHER - Enhance commit-msg hook to restrict commit messages

# Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
#
# Date:      Sat Jan 28 19:41:37 2023 +0400
#
# On branch fix/GRP-0903-Button-icons-visibility-issue
# Your branch is up to date with 'origin/fix/GRP-0903-Button-icons-visibility-issue'.
#
# Changes to be committed:
#   modified:   .husky/commit-msg
#   deleted:    tools/git-hooks/pre-commit.sh
#
</code></pre>
<p>When I do a normal commit without amending, it works fine.
How can I make git pass only commit message to the hook ?</p>
",1,9557666,,
75296593,16385850,1/31/2023 11:41,0,20,<git><githooks>,Check in git hook that working copy is updated,"<p>I have a git repo that has many branches. There are branches <code>master</code> and <code>dev</code>. And there are two sites: mysite.example (working copy of master branch) and dev.mysite.example (working copy of dev branch).
For autodeploy after <code>git push</code> hook <code>post-received</code> is written:</p>
<pre><code>cd /var/www/mysite.example
unset GIT_DIR
git pull origin master
./deploy.sh

cd /var/www/dev.mysite.example
unset GIT_DIR
git pull origin dev
./deploy.sh
</code></pre>
<p>deploy.sh performs some actions which can take a lot of time. After each push (even if master and dev branches are not updated) the hook run deploy.sh twice.</p>
<p>How can I check that working copy was updated by git pull? I can't <code>git pull &amp;&amp; ./deploy.sh</code> as <code>git pull</code> returns 0 for both &quot;Already up to date&quot; and update.</p>
",0,16385850,,
75356705,13423756,2/6/2023 1:46,-1,270,<bash><git><githooks><git-server>,"Why all the script in my git hooks (pre-commit, post-commit, pre-receive, pre-push etc) do not run?","<p>Why all the script in my git hooks (pre-commit, post-commit, pre-receive, pre-push etc) do not run?</p>
<p>Note:
this question is not a duplicate;</p>
<p>I have try the answer to each of the other questions but none of them work.</p>
<p>I did <code>chmod +x</code>, added the path to hook. rename script, neither of them solve my issue.</p>
<blockquote>
<p>Inside my git</p>
</blockquote>
<p><code>branches  config  description  HEAD  hooks  info  objects  refs</code></p>
<blockquote>
<p>Inside hooks:</p>
</blockquote>
<pre><code>applypatch-msg.sample  fsmonitor-watchman.sample  post-update.sample     pre-commit         prepare-commit-msg.sample  pre-rebase.sample  update.sample
commit-msg             post-merge.sh              pre-applypatch.sample  pre-commit.sample  pre-push                   pre-receive
</code></pre>
<p>I run them manually and they are all working fine.:</p>
<pre><code>$ bash pre-commit
  You are about to commit to master
  Do you really want to do this? [y/n] y
</code></pre>
<p>pre-commit script</p>
<pre><code>#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by &quot;git commit&quot; with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to &quot;pre-commit&quot;.

echo &quot;You are about to commit&quot; $(git diff --cached --name-only --diff-filter=ACM)
echo &quot;to&quot; $(git branch --show-current)

while : ; do
    read -p &quot;Do you really want to do this? [y/n] &quot; RESPONSE &lt; /dev/tty
    case &quot;${RESPONSE}&quot; in
        [Yy]* ) exit 0; break;;
        [Nn]* ) exit 1;;
    esac
done
</code></pre>
<p>But when i git commit and git push to the repository none of the scripts work.</p>
<pre><code>$git commit -m &quot;Test hooks&quot;
[master] Test hooks  1 file
changed, 1 insertion(+)
</code></pre>
<p>My git version is <code>2.39.1</code></p>
<p>I created the repository on a VM with Ubuntu 18.04.6 LTS installed
Here was the procedure fro creating the repo.</p>
<pre><code>mkdir project1.git
cd project1.git
git init --bare
</code></pre>
<p>After the creation i clone the repo to my local computer (windows).</p>
<p>Clone the git repository</p>
<p><code>git clone git@{ip}:/home/git/git_repositories/project1.git/</code></p>
",7,13423756,,
75385330,11448162,2/8/2023 11:44,-1,169,<githooks><pnpm><husky><asdf>,Cannot install commit-msg-linter with pnpm: sh: .git/hooks/commit-msg: No such file or directory,"<h2>Description</h2>
<p>I can't install commit-msg-linter, all other hooks work fine.</p>
<h2>Reproduce</h2>
<pre class=""lang-bash prettyprint-override""><code>git init

pnpm init
pnpm add -D husky
pnpm add -D git-commit-msg-linter

pnpm exec husky install

git add .
git commit -m &quot;hello&quot;
</code></pre>
<h2>Result</h2>
<p>sh: .git/hooks/commit-msg: No such file or directory
husky - commit-msg hook exited with code 127 (error)
husky - command not found in PATH=/home/zau/.asdf/shims:/home/zau/.asdf/bin:/usr/lib/git-core:/home/zau/.local/share/pnpm:/opt/sonar-scanner/bin:/home/zau/.gem/ruby/3.0.0/bin:/home/zau/.yarn/bin:/home/zau/.config/yarn/global/node_modules/.bin:/home/zau/.pyenv/shims:/home/zau/.pyenv/bin:/usr/share/pyenv/plugins/pyenv-virtualenv/shims:/home/zau/bin:/usr/local/bin:/home/zau/.npm-global/bin:/home/zau/.pyenv/bin:/opt/sonar-scanner/bin:/home/zau/.nix-profile/bin:/nix/var/nix/profiles/default/bin:/home/zau/.nix-profile/bin:/nix/var/nix/profiles/default/bin:/usr/local/bin:/usr/bin:/var/lib/snapd/snap/bin:/usr/local/sbin:/var/lib/flatpak/exports/bin:/usr/lib/jvm/default/bin:/usr/bin/site_perl:/usr/bin/vendor_perl:/usr/bin/core_perl:/home/zau/.local/bin:/home/zau/.local/share/gem/ruby/3.0.0/bin</p>
<h2>Specs</h2>
<p>Using asdf*</p>
<ul>
<li><p>git: 2.39.1</p>
</li>
<li><p>pnpm: 7.26.3</p>
</li>
<li><p>node: 19.6.0</p>
</li>
<li><p>package.json</p>
</li>
</ul>
<pre class=""lang-json prettyprint-override""><code>{
  &quot;name&quot;: &quot;husky-test&quot;,
  &quot;version&quot;: &quot;1.0.0&quot;,
  &quot;description&quot;: &quot;&quot;,
  &quot;main&quot;: &quot;index.js&quot;,
  &quot;scripts&quot;: {
    &quot;test&quot;: &quot;echo \&quot;Error: no test specified\&quot; &amp;&amp; exit 1&quot;
  },
  &quot;keywords&quot;: [],
  &quot;author&quot;: &quot;&quot;,
  &quot;license&quot;: &quot;ISC&quot;,
  &quot;devDependencies&quot;: {
    &quot;git-commit-msg-linter&quot;: &quot;^4.5.0&quot;,
    &quot;husky&quot;: &quot;^8.0.3&quot;
  }
}
</code></pre>
<h2>Trying</h2>
<ul>
<li>remove node_modules</li>
<li>remove .git/hooks</li>
</ul>
<p>Expect is:</p>
<pre class=""lang-bash prettyprint-override""><code>git commit -m &quot;hello&quot;

  ************* Invalid Git Commit Message **************
  commit message: hello
  Invalid length: Length 5. Commit message cannot be longer than 100 characters or shorter than 10 characters
  correct format: &lt;type&gt;[scope]: &lt;subject&gt;
  example: docs: update README to add developer tips

  type:
    feat     A new feature.
    fix      A bug fix.
    docs     Documentation only changes.
    style    Changes that do not affect the meaning of the code (white-space, formatting, missing semi-colons, etc).
    refactor A code change that neither fixes a bug nor adds a feature.
    test     Adding missing tests or correcting existing ones.
    chore    Changes to the build process or auxiliary tools and libraries such as documentation generation.
    perf     A code change that improves performance.
    ci       Changes to your CI configuration files and scripts.
    build    Changes that affect the build system or external dependencies (example scopes: gulp, broccoli, npm).
    temp     Temporary commit that won't be included in your CHANGELOG.

  scope:
    Optional, can be anything specifying the scope of the commit change.
    For example $location, $browser, $compile, $rootScope, ngHref, ngClick, ngView, etc.
    In App Development, scope can be a page, a module or a component.

  subject:
    Brief summary of the change in present tense. Not capitalized. No period at the end.
  
husky - commit-msg hook exited with code 1 (error)
</code></pre>
",0,11448162,,
75392922,14360302,2/9/2023 0:02,-1,37,<git><git-submodules><symlink><githooks><repo>,How do I add symlinks of submodules in project,"<p>Hi All is there a way to create symlinks from submodules .
Meaning If I have RepoA and RepoB.</p>
<p>RepoB is a git submodule of RepoA .
with normal git submodule I can achieve this repo structure .</p>
<pre><code>RepoA
|______RepoB
|_folder1
|_folder2
|_folder3
</code></pre>
<p>Now I want to symlink files from RepoB into another folder in repoA ,so
to achieve this repo structure</p>
<pre><code>RepoA
|______RepoB
|______folder1
|        |_(symlink files from RepoB)   
|
|______folder2
|         |_(symlink files from RepoB) 
| 
|______folder3
         |_(symlink files from RepoB)  
</code></pre>
<p>To add to the complexity its not only repoB there are multiple of other repos to symlink from .</p>
<p>This was achievable before with <a href=""https://gerrit.googlesource.com/git-repo/+/master/docs/manifest-format.md#Element-linkfile"" rel=""nofollow noreferrer"">repo-git linkfile</a> ,but we are changing tools in the company but its a requirement to keep the repo structures the same .</p>
",3,14360302,,
75427362,14446071,2/12/2023 13:38,0,228,<java><git><github><devops><githooks>,Pre-commit hook for Java Project,"<p>is it possible to set pre-commit hook for java &amp; pom based project? I came across blog <a href=""https://dwmkerr.com/conventional-commits-and-semantic-versioning-for-java/"" rel=""nofollow noreferrer"">https://dwmkerr.com/conventional-commits-and-semantic-versioning-for-java/</a> and able setup commit-msg and he mentioned the command &quot;git config core.hooksPath .githooks&quot; it will work but each developer needs to manually run the command. is there any other way to make automated process?</p>
",0,14446071,,
75450343,8713172,2/14/2023 16:00,0,38,<bash><git><git-bash><githooks><git-push>,Is it possible to extract a message from the commit and put it as a topic in the pre-push?,"<p>I have almost 3 days thinking about it and I can't find a way to make me add a topic without having to do a git push.</p>
<p>Is there any way to modify your push after doing a git push?</p>
<p>Let me explain:</p>
<p>I'm trying to make a pre-push extract a specific value from the message and put it as a topic so I can do this:</p>
<pre><code>git commit -m &quot;CELL:ANT-1234 Testing pre-push&quot;

git push master
</code></pre>
<p>Be equal to:</p>
<pre><code>git commit -m &quot;CELL:ANT-1234 Testing pre-push&quot;

git push master -o topic=ANT-1234
</code></pre>
<p>I have managed to prepare everything and have the topic and message prepared without problems but I can't find a way to put it in the push without having to do another git push inside the pre-push, this makes me do the push 2 times and... although it works, in the terminal I get an error because when it is executed 2 times it tells me that there are no changes.</p>
<p>I have managed to get this far:</p>
<pre><code>#!/bin/sh

while read local_ref local_sha remote_ref remote_sha
do
  FULL_COMMIT_MESSAGE=$(git log -1 --pretty=%B $local_sha)
  MESSAGE=$(echo &quot;$FULL_COMMIT_MESSAGE&quot; | awk '{print $1}')
  TOPIC=$(echo &quot;$remote_ref&quot; | awk -F 'topic=' '{print $2}')

  # If the value of the topic is not specified in the flag, we obtain it from the CELL identifier
  echo &quot;Validating if topic are set&quot;

  if [ -z &quot;$TOPIC&quot; ]; then
    if echo &quot;$MESSAGE&quot; | grep -iE '^CELL:(ANT|JDRL)' &gt; /dev/null; then
      TOPIC=$(echo &quot;$MESSAGE&quot; | awk -F ':' '{print $2}')
      echo &quot;The topic are set with value -&gt; ${TOPIC}&quot;
      # PROBLEM HERE
      git push --push-option=topic=$TOPIC origin &quot;$local_sha:$remote_ref$TOPIC&quot;
      exit 0
    fi
  fi

  echo &quot;Validating that the commit set message is correct&quot;
  echo $MESSAGE
  if ! echo &quot;$MESSAGE&quot; | grep -iE '^CELL:(ANT|JDRL)' &gt; /dev/null; then
    echo &quot;ERROR: Commit message must start with 'CELL:ANT' or 'CELL:JDRL'&quot;
    exit 1
  fi

  echo &quot;Validate if exist a topic in this commit&quot;
  if [ -z &quot;$TOPIC&quot; ]; then
    echo &quot;ERROR: Flag not found -o topic=XXX or commit message does not start with 'CELL:ANT' or 'CELL:JDRL'&quot;
    exit 1
  fi
done
</code></pre>
<p>my problem is in:</p>
<pre><code>git push --push-option=topic=$TOPIC origin &quot;$local_sha:$remote_ref$TOPIC&quot;
</code></pre>
<p>isn't there another way to add the topic just to the first push I did in the terminal instead of the pre-push?</p>
",0,8713172,,
75458332,10391554,2/15/2023 10:20,0,202,<intellij-idea><githooks><pre-commit.com>,IntelliJ pre-commit.com integration,"<p>I'm using <a href=""https://pre-commit.com/"" rel=""nofollow noreferrer"">pre-commit hooks</a> in my project.</p>
<p>When I'm doing my commits from the <code>command-line</code> everything is great and the hooks are working but when I try to commit from the IDE it failed with the message:</p>
<blockquote>
<p>0 file committed, 2 files failed to commit: dummy commit <code>pre-commit</code> not found. Did you forget to activate your virtualenv?</p>
</blockquote>
<p>My <code>virtualenv</code> is active:</p>
<p><a href=""https://i.stack.imgur.com/2ffJZ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/2ffJZ.png"" alt=""activate your virtualenv"" /></a></p>
<p>What am I missing?</p>
<p>##Edit 1</p>
<p>Ubuntu 20.04.4 LTS</p>
<p><code>grep ^INSTALL .git/hooks/pre-commit</code> -&gt; <code>INSTALL_PYTHON=/home/lioriz/anaconda3/envs/py36/bin/python</code></p>
<p><code>which pre-commit</code> -&gt; <code>/home/lioriz/anaconda3/envs/py36/bin/pre-commit</code></p>
<p><code>head -1 $(which pre-commit)</code> -&gt; <code>#!/home/lioriz/anaconda3/envs/py36/bin/python</code></p>
<p><code>pre-commit --version</code> -&gt; <code>pre-commit 2.17.0</code></p>
<p>##Edit 2</p>
<p><strong>.pre-commit-config.yaml:</strong></p>
<pre><code># See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v3.2.0
    hooks:
    -   id: trailing-whitespace
    -   id: end-of-file-fixer
    -   id: check-yaml
    -   id: check-added-large-files
</code></pre>
<p><strong>.git/hooks/pre-commit:</strong></p>
<pre><code>#!/usr/bin/env bash
# File generated by pre-commit: https://pre-commit.com
# ID: 138fd403232d2ddd5efb44317e38bf03

# start templated
INSTALL_PYTHON=/home/lioriz/anaconda3/envs/py36/bin/python
ARGS=(hook-impl --config=.pre-commit-config.yaml --hook-type=pre-commit)
# end templated

HERE=&quot;$(cd &quot;$(dirname &quot;$0&quot;)&quot; &amp;&amp; pwd)&quot;
ARGS+=(--hook-dir &quot;$HERE&quot; -- &quot;$@&quot;)

if [ -x &quot;$INSTALL_PYTHON&quot; ]; then
    exec &quot;$INSTALL_PYTHON&quot; -mpre_commit &quot;${ARGS[@]}&quot;
elif command -v pre-commit &gt; /dev/null; then
    exec pre-commit &quot;${ARGS[@]}&quot;
else
    echo '`pre-commit` not found.  Did you forget to activate your virtualenv?' 1&gt;&amp;2
    exit 1
fi
</code></pre>
<p><code>test -x /home/lioriz/anaconda3/envs/py36/bin/python; echo $?</code> -&gt; <code>0</code></p>
<p>##Edit 3</p>
<p>The IntelliJ runs on <code>Windows 11</code> with <code>WSL2</code>, and the <code>pre-commit</code> is installed in the <code>wsl2</code> - <code>Ubuntu 20.04.4 LTS</code></p>
",11,10391554,,
75480611,8253303,2/17/2023 5:34,0,41,<git><githooks>,Git before merge hook,"<p>I am looking for a hook that triggers before every merge in git.
I tried the pre-merge-commit hook with the following code:
<code>echo &quot;pre-merge commit hook triggered&quot;</code></p>
<p>But nothing is triggered or shown in the log file when I merge dev into main for example.</p>
",3,8253303,,
75500530,18109053,2/19/2023 13:41,0,340,<git><githooks>,How to avoid disabling a pre-commit hook?,"<p>I am sure it is a repeated question and apologies to bother. I didn't find solution to my usecase yet. I created a pre-commit hook that prevents commit when newly developed code has sonar issues. Since it is a pre-commit hook there might be a chance that developer can disable this hook using <strong><code>--no-verify</code></strong> option and I want to avoid it.</p>
<p><strong>NOTE</strong>: I can't use pre-receive hook in this usecase because newly developed code will be on developer's machine and hence the hook should be triggered as client-side hook.</p>
<p>Is there anyway to enforce this hook to be executed before commit (out of developer control) without skipping it?
I found a similar stack overflow question where the answers suggests to use pre-receive hook which works on <strong>push</strong> event not on <strong>commit</strong> event. Now I just want to run pre-commit hook without developer control. If this is not possible, Is there any alternative? so that I can confirm the hook execution before pushing the code.</p>
<p>I know that <strong><code>--no-verify</code></strong> option is git internal command and we have less chances to control it. I want to know if pre-receive hook can help me in ensuring the execution of pre-commit hook before push event.
Thanks in advance</p>
",9,18109053,,
75517105,7822155,2/21/2023 6:51,1,29,<windows><git><githooks>,"Git post-commit hook on Windows results in "".git/index.lock: No such file or directory""","<p>I want to copy my work tree to a different location after each commit on Windows. I added a post-commit hook with following contents:</p>
<pre class=""lang-bash prettyprint-override""><code>#!/bin/bash

# the work tree, where the checkout/deploy should happen
TARGET=&quot;C:\Users\...\copy&quot;

# the location of the .git directory
GIT_DIR=&quot;C:\Users\...\repo\.git&quot;

BRANCH=&quot;master&quot;

echo &quot;Do something&quot;
git --work-tree=&quot;${TARGET}&quot; --git-dir=&quot;${GIT_DIR}&quot; checkout -f ${BRANCH}
</code></pre>
<p>When doing a git commit from command line it results in following output:</p>
<pre><code>warning: in the working copy of 'test.html', LF will be replaced by CRLF the next time Git touches it
Do something
fatal: Unable to create 'C:/Users/.../copy/.git/index.lock': No such file or directory
[master c68d639] asdasd
 2 files changed, 4 insertions(+), 2 deletions(-)
</code></pre>
<p>Executing the script manually from command line works just fine and copies the work tree just as requested.</p>
<pre><code>MINGW64 ~/.../repo/.git/hooks (GIT_DIR!)
$ ./post-commit
Do something
Already on 'master'
</code></pre>
<p>After the manual execution of this script there is no <code>.git</code> directory in the end result directory either as it should be. So why does the automatic execution not work?</p>
",0,7822155,,
75560194,20684750,2/24/2023 18:34,0,36,<git><github><githooks>,Example of a git hook that prevents old history falsely restored?,"<p>In this link
<a href=""https://stackoverflow.com/questions/6754937/prevent-unwanted-commit-from-re-entering-git-history-when-doing-pulls"">Prevent unwanted commit from re-entering git history when doing pulls</a></p>
<p>The accepted answer describes generally the solution of a git pre-push hook that accomplishes the reporter's request.</p>
<p>But I cannot find any good example.</p>
<p>Question 1: are these old commits visible in a PR?
Question 2: A git hook only checks only the new commits in PR, or also all the previous ones?</p>
<p>I have checked the refering link: <a href=""https://git-scm.com/docs/githooks"" rel=""nofollow noreferrer"">https://git-scm.com/docs/githooks</a>
but it's not clear how to prevent old commits reentering.</p>
",0,20684750,,
75567206,9557666,2/25/2023 17:34,1,40,<git><githooks><husky>,git doesn't read environment variables when merging with --no-ff,"<p>I have a <code>commit-msg</code> where I use <code>GIT_AUTHOR_NAME</code> for whitelisting specific developers for certain commit message standards.
In normal scenarios, <code>GIT_AUTHOR_NAME</code> is always defined and shows the correct author of the commit.
When I am doing a release with these steps below</p>
<pre><code>git checkout -b release/1.2.0 develop
git checkout master
git merge --no-ff release/1.2.0
</code></pre>
<p>git opens an internal message prompt for the merges.</p>
<pre><code>Merge branch 'release/1.2.0'
# Please enter a commit message to explain why this merge is necessary,
# especially if it merges an updated upstream into a topic branch.
#
# Lines starting with '#' will be ignored, and an empty message aborts
# the commit.
</code></pre>
<p>After I save it and exit, inside my <code>commit-msg</code> hook the <code>GIT_AUTHOR_NAME</code> and <code>GIT_COMMITTER_NAME</code> are both empty. And not only those values, but also the email, date, and any other author-related variable.</p>
<p>What's the problem here?</p>
",3,9557666,,
75607041,15937765,3/1/2023 17:24,0,44,<git><cron><githooks>,git | how to sync local repo with remote repo?,"<p>I have my local git repo that and I want to attach it to a remote git repo in a way that the remote will be like a read only version of the local git repo and will present everything in the local git repository automaticlly, without the need to push from local to remote.
Meaning, if I add a new file in the local repo I will be able see the change immedietly in my remote repo before I commited or push.</p>
<p>I tried git hooks, but it seems that none of them fits.
Actually the action I need to do is on every file that is removed or added to my local git folder to run this set of commands:
&quot;git add &lt;file_name&gt; ; git commit -m &quot;auto commit&quot; ; git push&quot;</p>
<p>what is the best way to implement this solution?</p>
<p>thank you!</p>
",3,15937765,,
75614075,16927902,3/2/2023 10:19,-1,41,<node.js><git><npm><githooks><husky>,"When using npm scripts, how can I tell if I am currently running windwos or mac","<p>Since it is a multi-person development, in mac environment, it is required to set chmod + x.usky /pre-commit for projects, but many people may deliberately leave it unset in an attempt to submit the wrong code to the repository</p>
<p>I know you can do this, but this command does not exist on windows. How can I do this command only on mac</p>
<pre><code>scripts:{
  &quot;prepare&quot;: &quot;husky install &amp;&amp; chmod +x .husky/*&quot;`
}
</code></pre>
",0,16927902,,
75651715,6878997,3/6/2023 13:56,1,81,<git><githooks>,git hooks: get list of files changed after a pull,"<p>I'm trying to create a git hook that checks if there were any updates to a specific folder in the repository. For instance, let's say I am interested in the <code>/public</code> folder. Some colleague makes a change to that folder and that change is on the master branch. I still had not pulled those changes and go ahead and run <code>git pull</code> on master. I'd want a hook that prints a message notifying that changes were made to the <code>/public</code> folder.</p>
<p>I guessed the right hook would be <code>post-merge</code>, but I am not quite sure how to check which files changed, since we do not know how many new commits there were. If I was able to process git's output from <code>git pull</code>, that'd be quite straightforward but I don't think hooks have access to the output of the command that fired them.</p>
",4,6878997,,
75741821,21396750,3/15/2023 7:50,0,46,<hook><githooks>,"Commit msg hook, how active?","<p>I want use commit msg hook to validate my commit msgs, without node, commitlint and husky. I think that it is possible only with hooks, properly commit-msg hook.</p>
<p>I´m using window environment. I'm try use commit-msg hook, in my folder hooks of my repo, i clean .sample and changes de scrit with code that i want to validade commit msg. After verify and accert hooksPath with:</p>
<pre><code>git config core.hooksPath .hooks 
</code></pre>
<p>and</p>
<pre><code>git config --get core.hooksPath
</code></pre>
<p>i see in same cases that it is necessary run command:</p>
<pre><code>chmod +x commit-msg
</code></pre>
<p>to turn the script executable but isn´t possible in windows.
so my problem is:</p>
<pre><code>git hook run .git\hooks\commit-msg
error: cannot find a hook named .git\hooks\commit-msg
</code></pre>
<p>the hook not are runnig with git commit command.
can you Help me please.</p>
",2,21396750,,
75759106,11385411,3/16/2023 16:38,0,31,<git><githooks>,Can I get the string from a git command return?,"<p>I'm using git hooks and want to pull before pushing, so, I create the pre-push file. Also, I want to guarantee that my pull return is &quot;Already up to date.&quot;. Can I get that string to create an if or something?</p>
<p>I expect to push to my repo if the return from pull is &quot;Already up to date.&quot;</p>
",2,11385411,,
75759907,293195,3/16/2023 17:49,2,69,<git><githooks>,Githooks run inside docker with `git add` leads to `index.lock` troubles,"<p>I am running a Git hooks (with <a href=""https://github.com/gabyx/Githooks"" rel=""nofollow noreferrer"">Githooks</a>) where I run my <code>pre-commit</code> hook over a docker container:</p>
<pre><code>#!/bin/bash
docker run -rm -v &quot;$(pwd):/workspace&quot; -w &quot;/workspace&quot; myimage:1.0.0 bash script.sh
</code></pre>
<p>the <code>script.sh</code> basically does some <code>git add .</code> at the end.</p>
<p>When running <code>git commit ...</code> this leads to an error saying <code>.git/index.lock</code> cannot be created. My hook can run <code>git add .</code> when not dispatched over a docker container successfully.</p>
<p>Is there a way to allow the <code>git</code> process inside the docker container to also successfully execute <code>git add .</code> I mean I cannot simply delete the <code>.git/index.lock</code> that would be stupid.</p>
",1,293195,,
75853025,11201729,3/27/2023 7:18,0,50,<githooks><phpcodesniffer><phpcs>,How to call php code sniffer in git hook if some developers work in docker in windows(wsl) and some don't?,"<p>I have a git hook that looks something like this:</p>
<pre class=""lang-bash prettyprint-override""><code>PHPCS_BIN=vendor/bin/phpcs
...
OUTPUT=$($PHPCS_BIN $STAGED_FILES)
RETVAL=$?
exit $RETVAL
</code></pre>
<p>Before many switched to docker, everything was fine, since everyone had php installed on their operating systems.
Now, some people, have php installed inside docker and calling vendor/bin/phpcs does not work. They change line <code>PHPCS_BIN=vendor/bin/phpcs</code> to <code>PHPCS_BIN=&quot;docker exec php /var/www/vendor/bin/phpcs&quot;</code>.</p>
<p><strong>Perhaps someone knows the secret best practices how to solve this problem?</strong></p>
<p>Now, this hook is installed with a special command(<code>composer install-hooks</code>) that simply copies the contents of the file from the project to the .git/hooks folder.
I'm thinking to add some interactivity to this command and let the developer decide how to call phpcs.
I also thought about using this utility: <a href=""https://pre-commit.com"" rel=""nofollow noreferrer"">https://pre-commit.com</a>
Although I'm not sure if it will solve the problem</p>
",0,11201729,,
75929661,12749028,4/4/2023 12:57,-1,155,<git><githooks><pre-commit-hook><pre-commit><pre-commit.com>,Pre-commit hooks always fails with index.lock already exists,"<p>When running the hooks in the pre-commit-config.yaml the hook fix-encoding-pragma e debug-statements fails (remove the <code># -*- coding: utf-8 -*-</code> for example, but fails) and then i can't proceed to the commit. If i try to commit again i get the same error.</p>
<p>I tried adding: <code>bash -c 'fix-encoding-pragma --remove &quot;$@&quot;; git add -u'</code> to execute the hook and then add back the file to the staged area, but doesn't seems to work. Any solution to make the hook run and add the files back?</p>
<pre><code>pre-commit --version
2.20.0
</code></pre>
<pre><code>.pre-commit-config.yaml
repos:
  - repo: https://github.com/psf/black
    rev: 22.12.0
    hooks:
      - id: black
        name: Run black on staged py files
        entry: bash -c 'black &quot;$@&quot;; git add -u' --
  - repo: local
    hooks:
      - id: pretty-quick
        name: Prettify staged js/ts/yml files
        language: system
        entry: bash -c &quot;if [ -d &quot;frontend&quot; ]; then cd frontend; yarn pretty-quick; else echo 'Skipped'; fi&quot;
  - repo: https://github.com/IamTheFij/docker-pre-commit
    rev: v2.1.1
    hooks:
      - id: docker-compose-check
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.4.0
    hooks:
      - id: check-toml
      - id: requirements-txt-fixer
      - id: fix-encoding-pragma
        entry: bash -c 'fix-encoding-pragma --remove &quot;$@&quot;; git add -u' -- 
      - id: debug-statements
        entry: bash -c 'debug-statements &quot;$@&quot;; git add -u' --

</code></pre>
<pre><code>Output:
fix python encoding pragma...............................................Failed
- hook id: fix-encoding-pragma
- exit code: 128

Removed encoding pragma from xxx1.py
Removed encoding pragma from xxx2.py
Removed encoding pragma from xxx3.py
fatal: Unable to create 'xxx/.git/index.lock': File exists.

Another git process seems to be running in this repository, e.g.
an editor opened by 'git commit'. Please make sure all processes
are terminated then try again. If it still fails, a git process
may have crashed in this repository earlier:
remove the file manually to continue.

</code></pre>
",2,12749028,,
76038081,14416751,4/17/2023 18:13,0,38,<bash><git><ubuntu><githooks>,Post Update Git Hook On Local Machine Not Executing,"<p>I have an Ubuntu server that runs a production build. Every time I push to the main branch, I want my Ubuntu to pull and run some commands. I created a file called &quot;post-update&quot; in &lt;repo-root&gt;/.git/hooks. In there, I wrote a simple command:</p>
<pre><code>#!/bin/sh
echo &quot;POST-UPDATE&quot; &gt;&gt; post-update.log
</code></pre>
<p>Nothing happens when I push to the main branch. The log is empty no matter what I try. This seems like a simple problem but I have been at it for 4 hours now, I've got to be missing something.</p>
<p>I tried editing the permissions of the log file.</p>
<p>I tried changing ownership of the repo.</p>
<p>I tried running the script itself and it runs perfectly fine.</p>
",7,14416751,,
76075872,17658518,4/21/2023 18:32,1,55,<git><github-actions><githooks>,How to push multiple branchs to multiple repository via vscode,"<p>I have a repo with 3 branches named 1,2,3, and a public GitHub repository named A, a private GitHub repository named B, a GitLab repository named C.<br />
The branch 3 is private.</p>
<p>So I want VSCode do this for me when I click the push button.</p>
<ul>
<li>push branch 1,2 to A,B,C</li>
<li>push branch 3   to B,C</li>
</ul>
<p>GitHub marketplace provides a lot of sync action, but the <code>.workflow</code> folder will also be synced to public repository, or commit SHA from different repository will not match if I exclude the folder in action.</p>
<p>It works just fine through <code>git remote set-url --add --push</code> except branch 3 is also pushed.</p>
<p>I think git pre-push hook might work, but how to distinguish which branch is current branch and what will happen if I use <code>git push --all</code>?</p>
",0,17658518,,
57851420,7055769,9/9/2019 9:38,0,93,<bash><git><shell><githooks>,Finding part of string in windows bash,"<p>I need to add the task code from the branch name to every commit. We figured out that this should be done with a hook.</p>

<p>Here's the code:</p>

<pre class=""lang-sh prettyprint-override""><code>#!/bin/bash
# Include any branches for which you wish to disable this script
if [ -z ""$BRANCHES_TO_SKIP"" ]; then
BRANCHES_TO_SKIP=(master develop)
fi
# Get the current branch name and check if it is excluded
BRANCH_NAME=$(git symbolic-ref --short HEAD)
BRANCH_EXCLUDED=$(printf ""%s\n"" ""${BRANCHES_TO_SKIP[@]}"" | grep -c ""^$BRANCH_NAME$"")
# Trim it down to get the parts we're interested in
TRIMMED=$(echo $BRANCH_NAME | sed -e 's:\([a-z]\+\/\)*\([A-Z]\+-[0-9]\+\).\+:\2:')
# If it isn't excluded, preprend the trimmed branch identifier to the given message
if [ -n ""$BRANCH_NAME"" ] &amp;&amp;  ! [[ $BRANCH_EXCLUDED -eq 1 ]]; then
sed -i.bak -e ""1s,^,$TRIMMED: ,"" $1
fi
</code></pre>

<p>Right now what's happening is this:</p>

<blockquote>
  <p>LG-132: LG-132: LG-132: LG-132: LG-132: LG-132: LG-132: Merge branch 'develop' of <a href=""https://git.dw.com/scm/lg/webapp"" rel=""nofollow noreferrer"">https://git.dw.com/scm/lg/webapp</a> into develop</p>
</blockquote>

<p>So the branch code gets added every time I do an amend. Now, I am trying to check if the branch code is included in the commit message, and if so just break/return 0.</p>

<p>This is what I have so far:</p>

<pre><code>#!/bin/bash
# Include any branches for which you wish to disable this script
if [ -z ""$BRANCHES_TO_SKIP"" ]; then
  BRANCHES_TO_SKIP=(master develop)
fi
# Get the current branch name and check if it is excluded
BRANCH_NAME=$(git symbolic-ref --short HEAD)
BRANCH_EXCLUDED=$(printf ""%s\n"" ""${BRANCHES_TO_SKIP[@]}"" | grep -c ""^$BRANCH_NAME$"")
# Trim it down to get the parts we're interested in
TRIMMED=$(echo $BRANCH_NAME | sed -e 's:\([a-z]\+\/\)*\([A-Z]\+-[0-9]\+\).\+:\2:')
# If it isn't excluded, preprend the trimmed branch identifier to the given message
if [ -n ""$BRANCH_NAME"" ] &amp;&amp; ! [[ $BRANCH_EXCLUDED -eq 1 ]]; then
  set BRANCH_NAME|find ""$TRIMMED"" &gt;nul &amp;&amp; shouldAddCode=true || shouldAddCode=false
  if $shouldAddCode; then
    echo ""test""
  else
    sed -i.bak -e ""1s,^,$TRIMMED: ,"" ""$1""
  fi
fi
</code></pre>

<p>I am getting this in the console:</p>

<blockquote>
  <p>find: ‘LG-132’: No such file or directory</p>
</blockquote>

<p>Now this code just doesn't work. I was using this code as reference:</p>

<pre><code>set ""i=hello world""
set i|find ""world"" &gt;nul &amp;&amp; set test=yes || set test=no
echo %test%
pause
</code></pre>

<p>What am I missing?</p>
",0,7055769,,
5769568,325418,4/24/2011 8:39,37,31916,<git><githooks>,"How to set up a Git hook so that after pushing to ssh://peter@foo.com/~/bar.com.git, it will go to ~/bar.com and do a git pull?","<p>I was advised to set up on a remote server</p>

<pre><code>foo.com/~/bar.com       # live webpage content
foo.com/~/bar.com.git   # a bare repo
</code></pre>

<p>so, from my local machine, I can do a </p>

<pre><code>git push
</code></pre>

<p>and it will push to <code>foo.com/~/bar.com.git</code> on the remote machine  (the full path is <code>ssh://peter@www.foo.com/~/bar.com.git</code></p>

<p>How can a <strong>hook</strong> be added, so that after the push, the remote server will <code>cd ~/bar.com</code> and do a <code>git pull</code> so that all content is updated (the same as the local machine)?  (no need to run <code>git update</code> like for Mercurial?)</p>

<p>(this is related to <a href=""https://stackoverflow.com/questions/5703324/cannot-git-clone-a-folder-on-a-server-and-then-edit-and-git-push"">Cannot git clone a folder on a server and then edit and git push?</a>  right now I can ssh to <code>foo.com</code> and <code>cd ~/bar.com</code> and wait there and do a <code>git pull</code> whenever after a <code>git push</code> from the local machine, but it'd be nice to have it done automatically)</p>

<p><strong>Update</strong>: please only post an answer if you know specific details and how to do it.  If you google and post the first or second google result here, it is not going to help.</p>

<p><strong>Update 2</strong>: I went to <code>~/bar.com.git/hooks</code> and add a new file <code>post-receive</code> with the content:</p>

<pre><code>#!/bin/bash

cd ~/bar.com
git pull ../bar.com.git master
</code></pre>

<p>and also <code>chmod 755 post-receive</code>, and if I edit a file on the local machine, and then <code>git com -m ""ok""</code> and <code>git push</code>, it doesn't make the change go into the remote machine's folder <code>~/bar.com</code></p>
",0,325418,0,0
44140075,4130619,5/23/2017 16:14,2,990,<git><automation><githooks>,Is there way to run git hook before/after 'git add' command?,"<p>I checked <code>git help hooks</code> and either it is impossible or I missed this.</p>

<p>I want this rather than <code>pre-commit</code> as program in repository generates files, as result my current workflow is</p>

<p><code>git add -A
ruby script_stored_in_repository_that_generates_something.rb
&lt;checking generated work that is not tracked in the repository&gt;
git commit -m ""what was changed""
</code></p>

<p>and I want to eliminate manual script run as pointless.</p>

<p>I know I can use <code>pre-commit</code> hook, but I prefer to edit work while code is staged rather than reverting/undoing/amending commits.</p>
",0,4130619,,
7365204,32816,9/9/2011 17:21,0,345,<ruby-on-rails><git><git-submodules><githooks><braid>,How to write an update hook for git submodules?,"<p>I would like to copy some files in the submodules in my ""vendor/assets"" directory to another directory -- ""public/assets."" I heard about update hooks but I am not sure if they work for submodules. I wrote a simple hook and ran update from commandline, but it didn't work. </p>

<p>My update hook looks like this:</p>

<pre><code>#.git/gooks/update.rb

#!/usr/bin/env ruby

puts ""Copying files...""
</code></pre>

<p>So is this even possible?</p>

<p>btw, I'm using Braid to manage my submodules.</p>
",0,32816,,
25570841,526664,8/29/2014 14:52,10,1946,<git><githooks>,git hook execution order,"<p>I see GIT provides a pre-commit and a commit-message hook...which is great...but I find it annoying that when I do a commit I have to wait for <strong>all</strong> my files to get linted and <strong>all</strong> my tests to run <strong><em>BEFORE</em></strong> I get told ""sorry, you don't have JIRA-XXX in our commit message"".</p>

<p>From what I read on the docs you can't change this order and the pre-commit hook doesn't have access to the commit message which hasn't been created yet.</p>

<p>is anybody else annoyed by this?  If so, what are others doing?</p>
",0,526664,,
25590267,1275237,8/31/2014 8:33,6,1422,<git><git-branch><githooks>,Retrieving branch names from within a post-checkout hook,"<p>When switching from one branch to another in Git, is there any way to retrieve the names of both branches from within the post-checkout hook?</p>

<p>So assuming I were to run the following two commands:</p>

<pre><code>$ git branch
* branch_a
  branch_b
  master

$ git checkout branch_b
Switched to branch 'branch_b'
</code></pre>

<p>I'd be looking for the following two strings (in the post-checkout hook): </p>

<pre><code>""branch_a""
""branch_b""
</code></pre>
",0,1275237,,
25591942,1169306,8/31/2014 12:23,1,82,<git><git-branch><githooks>,How can I get our commit-message policy to stop preventing me from deleting branches?,"<p>We have a Git commit-message policy in our repository: every commit message should include a ""<code>Reviewer:</code>"" field.</p>

<p>The problem is that, when I try to delete a branch with the <code>git push --delete</code> command, I get the following error:</p>

<pre><code>remote: fatal: git cat-file 0000000000000000000000000000000000000000: bad file
remote: fatal: bad object 0000000000000000000000000000000000000000
remote: fatal: bad object 0000000000000000000000000000000000000000
remote: The commit message must include Reviewer: The reviewer name
remote: Please use commit --amend to add Reviewer: The reviewer name
remote: error: hook declined to update refs/heads/versions/oldDesign
</code></pre>

<p>Any idea how to solve that?</p>
",1,1169306,,
7695731,970468,10/8/2011 8:44,2,259,<git><githooks>,Copy unversioned file after git push,"<p>I have a local repository where I work daily and a remote bare repository where I push my result. I would like after every push to copy some local files that are not under version control (like .exe and .dll files) into a separate directory (bin directory for example) on the same server, is it possible?
I tried with hooks but those work server-side, hence I don't know how to tell where the files to copy are.</p>
",0,970468,,
44420219,6394734,6/7/2017 18:27,0,1414,<git><bash><githooks><pre-commit-hook><pre-commit>,How do i add linting to pre-commit hook,"<p>hi everyone i have a git repo that house 3 folders (individual js projects).</p>

<p>here's my <code>pre-commit</code> hook</p>

<pre><code>#!/bin/bash
echo -e ""\033[1;92m Linting Staged Files . . . ""

files=$(git diff --diff-filter=d --cached --name-only | grep -E '\.(js|jsx)$')
path=(${files[0]//// })


if [[ $files = """" ]] ; then
  echo -e ""\033[1;31m You have no staged file, exiting . . ""
  exit 1
fi

for file in $files
do
git show "":$file"" | $(""./$path/node_modules/.bin/eslint --stdin --stdin-filename $file"")
 if [ $? -ne 0 ]; then
   echo -e ""\033[1;31m ESLint failed on staged file '$file'. \n Code will not be committed, Please fix your code and try again.""
exit 1
 fi
done

BRANCH=`git rev-parse --abbrev-ref HEAD`

if [[ ""$BRANCH"" == ""master"" || ""$BRANCH"" == ""develop"" ]]; then
 echo ""\033[1;31m commiting to $BRANCH is illegal.""
 echo ""\033[1;31m If you really know what you're doing, then add the argument '-n' to skip this git hook.""
 exit 1
fi

exit 0
</code></pre>

<p>but it keeps failing at this line <code>git show "":$file"" | $(""./$path/node_modules/.bin/eslint --stdin --stdin-filename $file"")</code></p>

<p>with an error</p>

<p><code>.git/hooks/pre-commit: line 17: ./node_modules/.bin/eslint --stdin --stdin-filename sfa/src/SFAApp.js: No such file or directory
</code></p>

<p>i have no idea what i'm doing wrong please help.</p>
",0,6394734,,
7705040,554022,10/9/2011 16:58,5,1912,<git><hook><environment><githooks>,using git hook after commit,"<p>I have just started writing a web application.</p>

<p>I am using GIT for version control and I have git and web server in the same computer.</p>

<p>Application has 3 environments: dev, test and production</p>

<p>I want to use git hook after every commit to update dev, test or production application.</p>

<p>what is the best practice for this?</p>

<p>I need something like this:</p>

<ol>
<li>when I commit, dev must automatically be updated</li>
<li>when commit message contains ""test: "" in front of message - dev and test must be updated.</li>
<li>when commit message contains ""production: "" in front of message - production, dev and test must be updated.</li>
</ol>

<p>Thanks!</p>
",1,554022,0,0
44424098,1241791,6/7/2017 23:02,1,149,<githooks><phpcs>,How to specify custom standard with bruli/php-git-hooks library,"<p>I am using this PHP Library here <a href=""https://github.com/bruli/php-git-hooks"" rel=""nofollow noreferrer"">https://github.com/bruli/php-git-hooks</a>, this library uses phpcs (<a href=""https://github.com/squizlabs/PHP_CodeSniffer"" rel=""nofollow noreferrer"">https://github.com/squizlabs/PHP_CodeSniffer</a>)</p>

<p>I have a <code>php-git-hooks.yml</code> config file like this</p>

<pre><code>pre-commit:
  enabled: true
  execute:
    phpcs:
        enabled:     true
        standard:    my-custom-cs.xml
</code></pre>

<p>I am trying to use a custom standards file. I get this error</p>

<pre><code> [PhpGitHooks\Module\Configuration\Contract\Exception\InvalidPhpCsStandardException]  
 Invalid phpcs standard &lt;my-custom-cs.xml&gt;
</code></pre>

<p>Specifying a built in standard such as <code>standard: PSR2</code> does work.</p>

<p>How can I specify a custom file? Judging by the libraries code at <a href=""https://github.com/bruli/php-git-hooks/blob/528a9a4c5905e9f5ca7bdb55f5111dd4fe22ca9c/src/PhpGitHooks/Module/Configuration/Domain/PhpCsStandard.php#L22"" rel=""nofollow noreferrer"">https://github.com/bruli/php-git-hooks/blob/528a9a4c5905e9f5ca7bdb55f5111dd4fe22ca9c/src/PhpGitHooks/Module/Configuration/Domain/PhpCsStandard.php#L22</a> this may not even be possible?</p>
",1,1241791,,
44427458,4074201,6/8/2017 5:41,5,1179,<git><githooks>,How can I find out what files have changed in the post-checkout hook in git?,"<p>I'm only new to git and I'm looking at the post-checkout hook.<br>
As I understand it the following command will restore ""filename"" from the latest commit:</p>

<pre><code>git checkout -- filename
</code></pre>

<p>When I get control in post-checkout I get 3 arguments, namely 2 SHAs and a type.<br>
Both the SHAs are the same, namely the SHA of the last commit and type has a value of 0 which means a checkout of a file occurred.<br>
But home do I find out what file was checked out? </p>
",1,4074201,0,0
63094588,11838133,7/25/2020 23:26,0,495,<git><github><initialization><githooks>,Error encountered while pushing branch to the remote repository: rejected master -> master (pre-receive hook declined),"<p>I have a fresh repository on a github organization page where I'm trying to do an initial push of an existing code base. When I do, I get the following error:</p>
<blockquote>
<p>Opening repositories: <br>
D:\OneDrive\MyOrg\DevTeam\myFeature <br>
Commit abcd123 created locally in repository D:\OneDrive\MyOrg\DevTeam\myFeature <br>
Pushing master <br>
Enumerating objects: 12310, done. <br>
Delta compression using up to 8 threads <br>
POST git-receive-pack (chunked) <br>
Total 12310 (delta 8123), reused 0 (delta 0) <br>
Pushing to <a href=""https://github.com/MyOrg/myOrganization.git"" rel=""nofollow noreferrer"">https://github.com/MyOrg/myOrganization.git</a> <br>
To <a href=""https://github.com/MyOrg/myOrganization.git"" rel=""nofollow noreferrer"">https://github.com/MyOrg/myOrganization.git</a> <br>
failed to push some refs to 'https://github.com/MyOrg/myOrganization.git' <br>
Error encountered while pushing branch to the remote repository: rejected master -&gt; master (pre-receive hook declined)</p>
</blockquote>
<p>I've changed the names for obvious reasons, and I'm not too familiar with hooks. I did read from the following link on pre-receive server side hooks and what they are though:
<a href=""https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks#Server-Side-Hooks"" rel=""nofollow noreferrer"">https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks#Server-Side-Hooks</a>
and it appears to be a thing that the server side changes the rights or requirements to being able to push I believe? However, the github page and repo in itself are both fresh and untouched, so I'm not sure how these hooks would even be adjusted (even if I could, which idk if I can).</p>
<p>Thanks to anyone who can help!</p>
",0,11838133,,
26175565,846432,10/3/2014 8:19,1,438,<symfony><installation><composer-php><githooks>,proper way to deploy symfony project with composer,"<p>We have git hook to deploy new branches (or update old ones) for symfony 2 project to the dev server. <code>composer.lock</code> is added to git repository so that <code>composer install</code> would install same version of vendor libs. <code>/app/bootstrap.php.cache</code> is not included in git rep.</p>
<p>Hook steps:</p>
<ol>
<li>composer install</li>
<li>./app/console doctrine:migrations:migrate --no-interaction</li>
<li>clear cache</li>
</ol>
<h1>Problem</h1>
<p>If there are database problems (changed database schema, login credentials are not working etc.) <code>composer install</code> fails on `Updating the &quot;app/config/parameters.yml&quot; file.<br />
If switch 1-2 steps and run migrations first it would not run because vendor libs must be installed first.</p>
<h1>Question</h1>
<p>How should I deploy app properly?</p>
",7,846432,,
8418071,279259,12/7/2011 15:42,2,4173,<git><hook><githooks>,Is there a way to check that a git tag matches the content of the corresponding commit?,"<p>In the company I work for, some projects have an <code>project.info</code> file which contains the current version of the program/library/whatever.</p>

<p>Actually, when someone wants to tag a version, he must first ensure that the <code>project.info</code> file (which is versionned) is up-to-date and contains the same version than the name of the tag he is about to create. No need to say that this is error prone.</p>

<p>We work on a clients-server workflow for git (all commits go to the same central repository) so I wonder: is there a way (a hook perhaps ?) to make this central repository refuse tags for which the <code>project.info</code> <strong>does not</strong> match ?</p>

<p>What should I look for to get started ?</p>

<p>Thank you very much.</p>
",3,279259,0,0
44716289,763021,6/23/2017 8:09,2,954,<git><merge><githooks>,Git automatic merge through branches,"<p>I am trying to implement a hook that automatically merges through some branches that we currently have.</p>

<p>Let's say we have 4 branches: <code>project-1.0</code>, <code>project-1.1</code>, <code>project-1.2</code>, <code>master</code>.</p>

<p>The goal is, that if we have to fix an issue at some at let's say <code>project-1.0</code> that change to automatically propagate to the rest of the branches.</p>

<p>I was reading <a href=""https://www.atlassian.com/blog/git/git-automatic-merges-with-server-side-hooks-for-the-win"" rel=""nofollow noreferrer"">https://www.atlassian.com/blog/git/git-automatic-merges-with-server-side-hooks-for-the-win</a>, which seems like a good start, however is there a better way to accomplish something like that?</p>

<p>Since the <code>update</code> server side hook, is executed once a pusher is trying to update. Since it's called before anything is updated, wouldn't that merge the previous commit and <em>NOT</em> the actual? </p>
",4,763021,,
63358384,9366835,8/11/2020 12:42,0,2058,<git><docker><jenkins><repository><githooks>,how to git commit inside docker container and execute post-commit hook,"<p>I have Jenkins in a docker container and inside the container I have a local git repository, I added a post-commit file which runs a build in Jenkins each time a commit is made but the file doesn't run,
what is the problem?</p>
<p><a href=""https://i.stack.imgur.com/DYE3I.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/DYE3I.png"" alt="""" /></a></p>
<p>this is the post commit file (it's in the container)</p>
<p><a href=""https://i.stack.imgur.com/aBuHL.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/aBuHL.png"" alt="""" /></a></p>
<p>Jenkins which is running inside the docker container on localhost</p>
",0,9366835,,
9107320,737455,2/2/2012 4:50,27,35146,<git><bitbucket><githooks>,Create a BitBucket git commit hook?,"<p>I just ported over a repo from GitHub to BitBucket. Although it does many of necessities, I'm finding it surprisingly difficult to find documentation for creating a git commit hook.</p>

<p>Originally I had a ruby app on a CentOS server that was triggered by a GitHub hook. Does anyone know how to achieve the same in the BitBucket environment?</p>

<p>Thanks!</p>

<p><strong>Edit:</strong> here's what the ruby app simply looks like if it helps:</p>

<pre><code>post '/' do
  `rm -rf repofolder`
  `git clone https://user@bitbucket.org/user/repo.git`
  `sh fast_deploy.sh`
end
</code></pre>
",1,737455,0,0
26886363,1978945,11/12/2014 11:53,24,11078,<git><githooks><git-stage>,Git: How to re-stage the staged files in a pre-commit hook,"<p>I'm writting a git pre-commit hook.<br>
The script could reformat some code, so it could modify the staged files. </p>

<p>How can I re-stage all files that are already staged ?</p>
",3,1978945,0,0
45136394,7267263,7/17/2017 5:14,0,795,<bitbucket><hook><githooks><bitbucket-server>,bitbucket hook not working,"<p>I am working with buctbucket version 4.4.1. When i am trying to run by custom pre-commit hook with stash it gives me error stating that failed to push some references. the hook is written in shell format placed inside pre-receive.d directory of repository. the script when placed inside this directory is executing file but at the end getting failed with below error</p>

<p>! [remote rejected] master -> master (pre-receive hook declined)
error: failed to push some refs to 'http://@/scm/ht/pre-commit.git'</p>

<p><strong>here is the debug log of my script</strong><code>enter code here</code></p>

<pre><code>http://mishrav@vklnld1156:7990/scm/ht/pre-commit.git  ! [remote
rejected] master -&gt; master (pre-receive hook declined) error: failed
to push some refs to
'http://mishrav@vklnld1156:7990/scm/ht/pre-commit.git'
#!/bin/bash
#set -x

OSType=$(uname -s)
echo $OSType

if [ $OSType == ""Linux"" ]; then
    exec &lt; /dev/tty

    echo -n ""Enter Project Name : ""
    read PName

    echo -n ""Enter Fix Version : ""
    read Version
    FVersion=$(echo $Version | sed -e 's/^/\%22/'| sed -e 's/$/\%22/')

    echo -n ""Enter Jira issue Number : ""
    read JNumber

elif [ $OSType != ""Linux"" ]; then
    PName=$(git gui--askpass ""Enter Project Name : "")
    echo $PName
    Version=$(git gui--askpass ""Enter Fix Version : "")
    echo $Version
    FVersion=$(echo $Version | sed -e 's/^/\%22/'| sed -e 's/$/\%22/')
    JNumber=$(git gui--askpass ""Enter Jira Issue Number : "")
    echo $JNumber
fi


checkVersion(){

    if [[ $(git rev-parse --symbolic --abbrev-ref $(git symbolic-ref HEAD) | awk -F ""/"" '{print $1}') == master ]]; then
        echo ""On master branch ""
        return 1

    elif [[ $(git rev-parse --symbolic --abbrev-ref $(git symbolic-ref HEAD) | awk -F ""/"" '{print $1}') != master ]]; then

        echo ""On feature branch""

        branchVersion=$(git rev-parse --symbolic --abbrev-ref $(git symbolic-ref HEAD) | awk -F ""/"" '{print $2}')   

    else
        echo ""Branch not present ""
    fi


}

pomVersion(){
    if [ $OSType == ""Linux"" ]; then
        PomVersion=$(git show :pom.xml | xml_grep 'version' --text_only)
    elif [ $OSType != ""Linux"" ]; then
        PomVersion=$(git show :pom.xml | sed -n 's:.*&lt;version&gt;\(.*\)&lt;/version&gt;.*:\1:p')
    fi 

}

checkTotal(){

checkVersion
pomVersion

if [ $OSType == ""Linux"" ]; then

    TotalIssueLabel=$(curl -u gituser:gituser http://jira:9090/rest/api/2/search?jql=project=$PName+AND+Labels=$FVersion+AND+Key=$JNumber | python -mjson.tool | jq '.total' | sed 's/null/0/' )
        TotalIssuesFix=$(curl -u gituser:gituser http://jira:9090/rest/api/2/search?jql=project=$PName+AND+fixVersion=$FVersion+AND+Key=$JNumber | python -mjson.tool | jq '.total' | sed 's/null/0/')

if [ $TotalIssueLabel -gt 0 ]
then
    JiraValue=$(curl -u gituser:gituser http://xxxxxx/rest/api/2/search?jql=project=$PName+AND+Labels=$FVersion+AND+Key=$JNumber | python -mjson.tool | jq '.issues[].fields.labels[]'| sed 's/\""//g')


    if [ ""$PomVersion"" == ""$JiraValue"" ] &amp;&amp; [ ""$branchVersion"" == ""$JiraValue"" ]; then
                echo ""Commit Successfull on $branchVersion 1""
            return 1

    elif [ $(git rev-parse --symbolic --abbrev-ref $(git symbolic-ref HEAD)| awk -F ""/"" '{print $1}' ) == master ]; then
            echo ""commet successful on master branch 1""
    fi

elif [ $TotalIssue -gt 0 ]
    then
    JiraValue=$(curl -u gituser:gituser http://xxxxx/rest/api/2/search?jql=project=$PName+AND+Labels=$FVersion+AND+Key=$JNumber | python -mjson.tool | jq '.issues[].fields.fixVersions[]' | sed 's/\""//g')


    if [ ""$PomVersion"" == ""$JiraValue"" ] &amp;&amp; [ ""$branchVersion"" == ""$JiraValue"" ]; then
                echo ""Commit Successfull on $branchVersion 2""
                return 1

    elif [ $(git rev-parse --symbolic --abbrev-ref $(git symbolic-ref HEAD)| awk -F ""/"" '{print $1}' ) == master ]; then 
            echo ""commet successful on feature branch 2""
        return 1

    else 
        echo ""No vaules mached 2""
        return 1
    fi

fi



elif [ $OSType != ""Linux"" ]; then
            TotalIssueLabel=$(curl -u gituser:gituser http://xxxxxxx/rest/api/2/search?jql=project=$PName+AND+Labels=$FVersion+AND+Key=$JNumber | python -mjson.tool | C:/jq/jq.exe '.total' | sed 's/null/0/' )

         TotalIssueFix=$(curl -u gituser:gituser http://jira:9090/rest/api/2/search?jql=project=$PName+AND+fixVersion=$FVersion+AND+Key=$JNumber | python -mjson.tool | C:/jq/jq.exe '.total' | sed 's/null/0/')

if [ $TotalIssueLabel -gt 0 ]
then
            JiraValue=$(curl -u gituser:gituser http://xxxxxx/rest/api/2/search?jql=project=$PName+AND+Labels=$FVersion+AND+Key=$JNumber | python -mjson.tool | C:/jq/jq.exe '.issues[].fields.labels[]'| sed 's/\""//g')

    if [ ""$PomVersion"" == ""$JiraValue"" ] &amp;&amp; [ ""$branchVersion"" == ""$JiraValue"" ]; then
            echo ""Commit Successfull on $branchVersion 1""
        exit 1

    elif [ $(git rev-parse --symbolic --abbrev-ref $(git symbolic-ref HEAD)| awk -F ""/"" '{print $1}') == master ]; then
            echo ""commet successful on master branch 1""
    fi

elif [ $TotalIssueFix -gt 0 ]
then
        JiraValue=$(curl -u gituser:gituser http://jira:9090/rest/api/2/search?jql=project=$PName+AND+Labels=$FVersion+AND+Key=$JNumber | python -mjson.tool | C:/jq/jq.exe '.issues[].fields.fixVersions[]' | sed 's/\""//g')


        if [ ""$PomVersion"" == ""$JiraValue"" ] &amp;&amp; [ ""$branchVersion"" == ""$JiraValue"" ]; then
            echo ""Commit Successfull on $branchVersion 2""
            exit 1

               elif [ $(git rev-parse --symbolic --abbrev-ref $(git symbolic-ref HEAD)| awk -F ""/"" '{print $1}') == master ]; then
                    echo ""commet successful on feature branch 2""                                    
            exit 1

            else
                     echo ""No vaules mached 2""
                     exit 1
                 fi
  else 
        echo ""no issues mached""
    exit 1

  fi
fi

}

checkTotal


#def get_git_revision_hash():
#    return subprocess.check_output(['git', 'rev-parse', 'HEAD'])
# In *nix systems, an ""exit code"" of 0 means
# that execution happened sucessfully, whereas a nonzero
# exit code indicates an error.
#
# In python, you can return an exit code with sys.exit(CODE)
#sys.exit(-1)
</code></pre>
",6,7267263,,
45169546,26859,7/18/2017 14:23,1,342,<git><cygwin><githooks><gitkraken>,Git hook within Gitkraken ignores exit code,"<p>I try to set up a first simple pre-commit hook on a project on windows but I don't manage to stop the commit using exit code. I use Gitkraken and it runs cygwin as shell.<br>
The pre-commit file contains the following script:</p>

<pre><code>#!/bin/sh
echo ""OK THAT line works..."" &gt; test.log
exit 1
</code></pre>

<p>When commiting, it generates the log file but the commit is not blocked by the return code.<br>
What am I doing wrong?</p>
",0,26859,,
45170268,884502,7/18/2017 14:53,0,686,<git><githooks><git-checkout><pre-commit-hook><pre-commit>,(How) can I run git checkout from within the pre-commit hook?,"<p>There is a file that should be in our git repository so that it is in any checkout.
It <em>may</em> be changed by users, but <em>usually</em> the changes should not be checked back in.
Neither --assume_unchanged nor --skip_work_tree provide the required flexibility, and the file is too cumbersome to reasonably be 'modified' with smudge/clean filters.</p>

<p>So I've written a pre-commit hook that successfully asks the user if they're sure they want to commit the changes to this file. If they say yes, the file is checked in (hook returns 0, commit continues), if not, the commit is aborted.</p>

<p>Instead of aborting, I'd like to give the user the option to revert changes to the file and continue with the commit.</p>

<p>To revert the file to an unchanged state, I'm using <code>git checkout -- file/in/question</code>.</p>

<p>Given that the file is modified and staged for commit, I run the following pre-commit hook:</p>

<pre><code>#!/bin/bash
echo ""git checkout -- file/in/question""
git checkout -- file/in/question
echo ""git status""
git status
exit 1 #would be 0 if the hook worked as expected
</code></pre>

<p>And I get the following output:</p>

<pre><code>git checkout -- file/in/question
git status
On branch blah
Changes to be committed:
  (use ""git reset HEAD &lt;file&gt;..."" to unstage)

        modified:   file/in/question
</code></pre>

<p>Why does git status report that the git checkout has had no effect? (it's correct - returning 0 from the hook causes the file to be incorrectly committed)</p>
",6,884502,,
27317635,3955847,12/5/2014 14:05,7,608,<git><githooks><git-post-receive>,Git post-receive hook loop though all commits,"<p>I am trying to do a post-receive hook on server side that will run some Python script once for each commit in push.</p>

<p>I have a loop:</p>

<pre><code>while read oldrev newrev refname
do
    python /local/Git/util.py $newrev $oldrev $refname
done
</code></pre>

<p>But this runs script only for last commit that was given in push.</p>

<p><strong>There is any way to run script for all commits pushed to the server in one push?</strong></p>
",0,3955847,0,0
9592908,528396,3/6/2012 22:26,11,7003,<git><apache><hook><githooks>,Error in sideband demultiplexer with a git post-receive hook,"<p>I have set up one of my EC2 instances with git and using a post-receive hook I have it deploying to my server with <a href=""http://caiustheory.com/automatically-deploying-website-from-remote-git-repository"">this tutorial</a>.  This is the output from my console:</p>

<pre><code>$ git push production master
git@example.com's password:
Counting objects: 26, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (19/19), done.
Writing objects: 100% (19/19), 2.51 KiB, done.
Total 19 (delta 14), reused 0 (delta 0)
fatal: The remote end hung up unexpectedly
error: error in sideband demultiplexer
To git@184.169.147.123:halftown.git
   5d5e809..eb30e51  master -&gt; master
error: failed to push some refs to 'git@example.com:git_application.git'
</code></pre>

<p>Please let me know if you need anything else to help me resolve this issue.</p>
",2,528396,0,0
63559476,4381476,8/24/2020 10:42,0,154,<git><githooks>,git serverside hook - pre-receive or update for checking code formatting for Java - How to use it?,"<p>I am trying to add a server-side check which will be triggered from git push - to check if the committed code / difference is properly formatted or not.
Code formatter (Eclipse Code Formatter) exists on client side and this is a final check.
So far, I came across pre-receive hook and update hook with very few examples.</p>
<pre><code>#!/usr/bin/env bash
# Git update hook servers side, also doing and checking formatting of code
# check each branch being pushed
# Exit status 0 = all OK
# Exit status 1 = Problem, commit will be rejected

echo &quot;update hook initiated&quot;
# get different values (They are default - from update hook)
ref_name=$1
old_rev=$2
new_rev=$3

# only check branches, not tags or bare commits
#if [ -z $(echo $ref_name | grep &quot;refs/heads/&quot;) ]; then
#  exit 0
#fi

# don't check empty branches
if [ &quot;$(expr &quot;${new_rev}&quot; : '0*$')&quot; -ne 0 ]; then
  exit 0
fi
</code></pre>
<p>Only executing this fails:</p>
<pre><code>remote: : Permission denied
remote: error: hook declined to update refs/heads/master
</code></pre>
<p>Any pointers would be great!</p>
",2,4381476,,
45207397,58678,7/20/2017 6:56,2,1287,<git><bash><githooks>,"Error ""No such device or address"" in git hook for user input","<p>I have a git hook that does some <code>work</code> in a loop till the user input is <code>y/Y</code> (other than <code>n/N</code>). </p>

<p>This works fine for all (commits, merges, amends, etc). Except for rebase, I get </p>

<pre><code>.git-hooks/commit-msg: line xx: /dev/tty: No such device or address
</code></pre>

<p>error when I reword/edit a merge commit.</p>

<p>Example: If I <code>rebase -i head~4 -p</code> and reword all commits (that include merge commits) then I get this error on the merge commits.</p>

<p><strong>hook:</strong></p>

<pre><code>#!/bin/sh

# git hook

work() {
    echo ""working...""
}

user_input() {
    while true; do
        work ""$@""
        echo -e -n ""done?""
        read -p '' ans
        case $ans in
            [nN] )
                ;;
            * )
                break ;;
        esac        
    done
}

exec &lt; /dev/tty
user_input ""$@""
exec &lt;&amp;-
</code></pre>
",0,58678,,
27392172,496046,12/10/2014 1:58,2,773,<git><version-control><githooks>,"Git: In pre-push hook, ignore commits which are already on any branch on the remote","<p>I have a pre-push hook (which very closely resembles the example pre-push commit which comes with git) which checks for a specific string in commit messages and doesn't push if it's found.</p>

<p>If I make a new branch (let's say I branch off of master, and call it feature), make a few commits (not containing the string I want to avoid pushing) and try to push this to a remote, it will fail if some commit in ancient history of this branch contains that string.</p>

<p>How can I have git only consider commits which are not in any remote branch? Is there a way to do it without checking the reachability of each commit against each remote branch?</p>

<p>One way which might work is to step back from the tip of the branch being pushed one commit at a time and check if there is a remote branch pointing to it, and as soon as one is found, truncate the range being considered here. Am I along the right lines, or is there a better way?</p>

<p>Below is the hook.</p>

<pre><code>#!/bin/sh

# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   &lt;local ref&gt; &lt;local sha1&gt; &lt;remote ref&gt; &lt;remote sha1&gt;

remote=""$1""
url=""$2""

z40=0000000000000000000000000000000000000000

IFS=' '
while read local_ref local_sha remote_ref remote_sha
do
    if [ ""$local_sha"" = $z40 ]
    then
        # Handle delete
        exit 0
    else
        if [ ""$remote_sha"" = $z40 ]
        then
            # New branch, examine all commits
            range=""$local_sha""
        else
            # Update to existing branch, examine new commits
            range=""$remote_sha..$local_sha""
        fi

        # Check for bad commit message
        commit=`git rev-list -n 1 --grep '\bbad string\b' ""$range""`
        if [ -n ""$commit"" ]
        then
            echo ""Found commit with bad string in $local_ref, not pushing""
            exit 1
        fi
    fi
done

exit 0
</code></pre>
",0,496046,0,0
27395520,3554338,12/10/2014 7:33,0,80,<ruby><git><bash><githooks><git-bash>,git hook suitable for checking changes in pull code,"<p>As mentioned in the question, after or at the time of pulling modified code to my production base i want to notify others about changes are going to be done to my production base or changes took place in production base through emails. </p>

<p>git-hooks mentioned <a href=""http://git-scm.com/docs/githooks"" rel=""nofollow"">here</a> doesn't match with my criteria. </p>

<p>Can any one suggest me a hook/script/gem that can do my job with example?</p>

<p>Thanks a lot in advance.</p>

<p><strong>EDIT:</strong> Can any one give me a sample of post-merge hook</p>
",2,3554338,,
45267049,7870791,7/23/2017 15:55,1,449,<git><bash><github><git-bash><githooks>,Git hook on bash to check prefix,"<p>I need some help with a bash script that automatically add prefix in commit -m message ,it's not a server side ,just repo, i need to add message ""User:..."" , and if a user type commit message name for example ""Jhon"" , it will be User:Jhon . Maybe who can help to write a script for it ? </p>
",2,7870791,,
27421233,3554338,12/11/2014 10:59,3,5801,<git><github><merge><githooks>,why post-merge git hook not running?,"<p>I just wanted to run a git hook(post-merge) to verify what are all the changes happened in the recent pull.</p>

<p>this is my post-merge script</p>

<pre><code>#/usr/bin/env bash

echo ""======&gt; following are changes made to local repo &lt;======""

git fetch &amp;&amp; git log ..origin/master --pretty=format:""%s - %ar by %an (%h)""

echo ""=======&gt; ****************** &lt;========""
</code></pre>

<p>I have given necessary file permission <code>chmod +x post-merge</code></p>

<p>command <code>git fetch &amp;&amp; git log ..origin/master --pretty=format:""%s - %ar by %an (%h)""</code> runs perfectly when i ran it manually. </p>

<p>But when i do a <code>git pull origin master</code> it is showing only </p>

<pre><code>echo ""======&gt; following are changes made to local repo &lt;======""
echo ""=======&gt; ****************** &lt;========"" 
</code></pre>

<p>Because <code>git pull</code> performs both <code>git fetch</code> and <code>git merge</code> i tried with </p>

<pre><code>#/usr/bin/env bash

    echo ""======&gt; following are changes made to local repo &lt;======""

    git log ..origin/master --pretty=format:""%s - %ar by %an (%h)""

    echo ""=======&gt; ****************** &lt;========""
</code></pre>

<p>Where i am going wrong?</p>

<p>git version 1.9.1</p>

<p>Thanks</p>
",0,3554338,,
63670475,9486907,8/31/2020 12:03,0,977,<windows><git><githooks>,Git post-checkout hook on windows,"<p>I installed <strong>git 2.28.0</strong> on windows.
In fact, i can't find <code>post-checkout.sample</code> hook in the hooks repository under <code>/.git</code> repository.
Is <code>post-checkout.sample</code> hook supported on windows ?
When i installed the same version of git on linux i found the <code>post-checkout.sample</code> hook.
I even tried with the <strong>git 2.23.0</strong> version and i had the same problem.
<a href=""https://i.stack.imgur.com/lNI0F.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/lNI0F.png"" alt=""hooks on windows"" /></a></p>
<p>I tried to create <code>post-checkout</code> that print a simple message &quot;hello&quot;. But it doesn't work. However when I copied this file in <code>pre-commit</code> it works.
Any suggestions?</p>
",0,9486907,0,0
63671250,8969489,8/31/2020 12:56,0,425,<git><githooks>,How to push the Git Hook to server,"<p>I have created a custom Git Hook for &quot;<strong>commit-msg</strong>&quot; which says I should add a specific text for the commit message, I want this hook to be a part of my git repo centrally so that whoever clones the repo should get this hook in his local.
<a href=""https://i.stack.imgur.com/LtBsE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/LtBsE.png"" alt=""enter image description here"" /></a>
I am not able to push this hook as part of the git add/commit/push command, could anyone let me know if it possible to add hook? how to push git hook to remote repo?</p>
<p>Thanks,
Abhishek</p>
",1,8969489,,
45721633,2490003,8/16/2017 19:34,2,3436,<git><githooks>,`git diff` does not work when run from a git pre-commit hook,"<p>I have a git pre-commit hook that does some style checking on any modified files before committing. </p>

<p>The implementation is irrelevant, but it starts by calling <code>git diff</code>. Here's what i have in <code>(repo)/.git/hooks/pre-commit</code>. </p>

<pre><code>#!/bin/sh


echo ""=== Running script...""
git diff
echo ""=== Done running script...""

# Other stuf
# ....

# Always exit with 1 so pre-commit hook always fails.
# Useful for testing
exit 1
</code></pre>

<p>When I actually try committing something, the <code>pre-commit</code> hook correctly fires, but the <code>git diff</code> command doesn't output anything (there are definitely modified files)</p>

<pre><code>&gt; git commit --all -m ""foo""
=== Running script...
=== Done running script...
</code></pre>

<p>However if I run the <code>pre-commit</code> hook script directly/manually, it <em>does</em> work</p>

<pre><code>&gt; ./.git/hooks/pre-commit
=== Running script...
(... outputs git diff ...)
=== Done running script...
</code></pre>

<p>What's different about git calling the hook versus me manually calling it? It runs as the same user either way (my username)</p>

<p>I've also tried suggestions from <a href=""https://stackoverflow.com/questions/20435593/git-diff-during-pre-commit-hook-results-in-not-a-git-repository#20435742"">this thread</a>, but <code>unset GIT_DIR</code>, <code>--git-dir=</code>, and <code>work-tree=</code> didn't fix anything.</p>

<p>Thanks!</p>
",0,2490003,0,0
27797580,2223974,1/6/2015 11:22,1,983,<git><apache><githooks><git-post-receive><smart-http>,Git on windows over HTTP. post-receive hook not working,"<p>I have configured msysgit on Windows as a server over HTTP. I have configured Apache server to forward the requests to <code>git-http-backened.exe</code>. When I cloned and tried to push to the server from remote PC, everything worked perfectly. But the <code>post-receive</code> hook is not working.</p>

<p>I have added to post-receive</p>

<pre><code>#!/bin/sh
echo ""Hook got triggered.."" &gt; c:/Repos/logs.txt
</code></pre>

<p>When I manually execute the script, I see the log getting printed.</p>

<p>But when I push it from a remote system, files are getting updated. Push is working fine but the hook is not being invoked it seems, as the log is not printed.</p>

<p>Permissions for <code>post-receive</code> are <code>-rwxr-xr-x</code></p>

<p>My <code>post-receive</code> used to send mails without any problem, when I configured git over SSH. After changing git to work over HTTP, I am facing issues. I have no clue, what extra changes need to be done to make the hook work.</p>
",2,2223974,0,0
63715189,11625800,9/3/2020 0:31,0,1566,<ruby-on-rails><amazon-web-services><bundle><githooks>,Could not find aws-eventstream-1.1.0 in any of the sources,"<p>I have four error messages mentioned below:</p>
<ol>
<li>Could not find aws-eventstream-1.1.0 in any of the sources</li>
<li>Failed to install gems via Bundler</li>
<li>Push rejected, failed to compile Ruby app</li>
<li>[remote rejected] user-microposts -&gt; master (pre-receive hook declined)</li>
</ol>
<p>I think number one is the cause of the latter. But I can't find any proper information about how to get the gem aws-eventstream-1.1.0 in &quot;the sources&quot;. I just follow the Ruby-on-Rails course of Michael Hartl.
Michael Hartl thinks it has to do with the AWS configuration.
So it would be very convenient if there a way to check wether the configuration is good before deploying. Does this exist?</p>
<p>Since I will only use this AWS-account for the sake of this course I will share the configuration data:</p>
<p>cli:</p>
<pre><code>➜  sample_app git:(following-users)$ heroku config:set \
        AWS_ACCESS_KEY_ID=AKIAXOOFOGFFI62ZSAJR \
        AWS_SECRET_ACCESS_KEY=WI2ez9rn16SgqmKFcV9CsUt9hqLkpf49iktsKpa+ \
        AWS_REGION=eu-central-1 \
        AWS_BUCKET=rails-tutorial-josufst-1
</code></pre>
<p>storage.yml</p>
<pre><code>test:
  service: Disk
  root: &lt;%= Rails.root.join(&quot;tmp/storage&quot;) %&gt;

local:
  service: Disk
  root: &lt;%= Rails.root.join(&quot;storage&quot;) %&gt;

amazon:
  service: S3
  access_key_id:     &lt;%= ENV['AWS_ACCESS_KEY_ID'] %&gt;
  secret_access_key: &lt;%= ENV['AWS_SECRET_ACCESS_KEY'] %&gt;
  region:            &lt;%= ENV['AWS_REGION'] %&gt;
  bucket:            &lt;%= ENV['AWS_BUCKET'] %&gt;
</code></pre>
<p>Below I posted the Gemfile and Gemfile.lock and the .gitignore.</p>
<p>The aws-eventstream-1.1.0 seems to be present in the Gemfile.lock.</p>
<p>I tried to do:</p>
<pre><code>bundle install
bundle update
git add -A
git commit -m &quot;whatever I tried&quot;
git push heroku user-microposts:master
</code></pre>
<p>Also I run the app locally and run all tests locally. Everything works fine.
As far as I know I followed all the steps in the Ruby on Rails Tutorial.</p>
<p>And now I tried the <code>git push -f heroku user-microposts:master</code> (force) to see if it has something to do with the &quot;hook&quot;. Although, as a newbie I don't understand the concept of hook.</p>
<pre><code>➜  sample_app git:(user-microposts) git push -f heroku user-microposts:master
Enumerating objects: 1525, done.
Counting objects: 100% (1525/1525), done.
Delta compression using up to 4 threads
Compressing objects: 100% (1307/1307), done.
Writing objects: 100% (1394/1394), 4.90 MiB | 65.00 KiB/s, done.
Total 1394 (delta 310), reused 0 (delta 0)
remote: Compressing source files... done.
remote: Building source:
remote:
remote: -----&gt; Ruby app detected
remote: -----&gt; Installing bundler 2.0.2
remote: -----&gt; Removing BUNDLED WITH version in the Gemfile.lock
remote: -----&gt; Compiling Ruby/Rails
remote: -----&gt; Using Ruby version: ruby-2.6.3
remote: -----&gt; Installing dependencies using bundler 2.0.2
remote:        Running: bundle install --without development:test --path vendor/bundle --binstubs vendor/bundle/bin -j4 --deployment
remote:        Some gems seem to be missing from your vendor/cache directory.
remote:        Could not find aws-eventstream-1.1.0 in any of the sources
remote:        Bundler Output: Some gems seem to be missing from your vendor/cache directory.
remote:        Could not find aws-eventstream-1.1.0 in any of the sources
remote:
remote:  !
remote:  !     Failed to install gems via Bundler.
remote:  !
remote:  !     Push rejected, failed to compile Ruby app.
remote:
remote:  !     Push failed
remote: Verifying deploy...
remote:
remote: !   Push rejected to rails-tutorial-josufst.
remote:
To https://git.heroku.com/rails-tutorial-josufst.git
 ! [remote rejected] user-microposts -&gt; master (pre-receive hook declined)
error: failed to push some refs to 'https://git.heroku.com/rails-tutorial-josufst.git'
</code></pre>
<p>Gemfile</p>
<pre><code>source 'https://rubygems.org'
git_source(:github) { |repo| &quot;https://github.com/#{repo}.git&quot; }

gem 'rails',                      '6.0.3.2'
gem 'image_processing',           '1.9.3'
gem 'mini_magick',                '4.9.5'
gem 'active_storage_validations', '0.8.9'
gem 'bcrypt',                     '3.1.13'
gem 'faker',                      '2.11.0'
gem 'will_paginate',              '3.3.0'
gem 'bootstrap-will_paginate',    '1.0.0'
gem 'bootstrap-sass',             '3.4.1'
gem 'puma',                       '4.3.5'
gem 'sass-rails',                 '6.0.0'
gem 'webpacker',                  '4.2.2'
gem 'turbolinks',                 '5.2.1'
gem 'jbuilder',                   '2.10.0'
gem 'bootsnap',                   '1.4.6', require: false

group :development, :test do
  gem 'sqlite3', '1.4.2'
  gem 'byebug',  '11.1.3', platforms: [:mri, :mingw, :x64_mingw]
end

group :development do
  gem 'web-console',           '4.0.2'
  gem 'listen',                '3.2.1'
  gem 'spring',                '2.1.0'
  gem 'spring-watcher-listen', '2.0.1'
end

group :test do
  gem 'capybara',                 '3.32.2'
  gem 'selenium-webdriver',       '3.142.7'
  gem 'webdrivers',               '4.3.0'
  gem 'rails-controller-testing', '1.0.4'
  gem 'minitest',                 '5.11.3'
  gem 'minitest-reporters',       '1.3.8'
  gem 'guard',                    '2.16.2'
  gem 'guard-minitest',           '2.4.6'
end

group :production do
  gem 'pg',         '1.2.3'
  gem 'aws-sdk-s3', '1.46.0', require: false
end

# Windows does not include zoneinfo files, so bundle the tzinfo-data gem
# Uncomment the following line if you're running Rails
# on a native Windows system:
# gem 'tzinfo-data', platforms: [:mingw, :mswin, :x64_mingw, :jruby]
</code></pre>
<p>Gemfile.lock</p>
<pre><code>GEM
  remote: https://rubygems.org/
  specs:
    actioncable (6.0.3.2)
      actionpack (= 6.0.3.2)
      nio4r (~&gt; 2.0)
      websocket-driver (&gt;= 0.6.1)
    actionmailbox (6.0.3.2)
      actionpack (= 6.0.3.2)
      activejob (= 6.0.3.2)
      activerecord (= 6.0.3.2)
      activestorage (= 6.0.3.2)
      activesupport (= 6.0.3.2)
      mail (&gt;= 2.7.1)
    actionmailer (6.0.3.2)
      actionpack (= 6.0.3.2)
      actionview (= 6.0.3.2)
      activejob (= 6.0.3.2)
      mail (~&gt; 2.5, &gt;= 2.5.4)
      rails-dom-testing (~&gt; 2.0)
    actionpack (6.0.3.2)
      actionview (= 6.0.3.2)
      activesupport (= 6.0.3.2)
      rack (~&gt; 2.0, &gt;= 2.0.8)
      rack-test (&gt;= 0.6.3)
      rails-dom-testing (~&gt; 2.0)
      rails-html-sanitizer (~&gt; 1.0, &gt;= 1.2.0)
    actiontext (6.0.3.2)
      actionpack (= 6.0.3.2)
      activerecord (= 6.0.3.2)
      activestorage (= 6.0.3.2)
      activesupport (= 6.0.3.2)
      nokogiri (&gt;= 1.8.5)
    actionview (6.0.3.2)
      activesupport (= 6.0.3.2)
      builder (~&gt; 3.1)
      erubi (~&gt; 1.4)
      rails-dom-testing (~&gt; 2.0)
      rails-html-sanitizer (~&gt; 1.1, &gt;= 1.2.0)
    active_storage_validations (0.8.9)
      rails (&gt;= 5.2.0)
    activejob (6.0.3.2)
      activesupport (= 6.0.3.2)
      globalid (&gt;= 0.3.6)
    activemodel (6.0.3.2)
      activesupport (= 6.0.3.2)
    activerecord (6.0.3.2)
      activemodel (= 6.0.3.2)
      activesupport (= 6.0.3.2)
    activestorage (6.0.3.2)
      actionpack (= 6.0.3.2)
      activejob (= 6.0.3.2)
      activerecord (= 6.0.3.2)
      marcel (~&gt; 0.3.1)
    activesupport (6.0.3.2)
      concurrent-ruby (~&gt; 1.0, &gt;= 1.0.2)
      i18n (&gt;= 0.7, &lt; 2)
      minitest (~&gt; 5.1)
      tzinfo (~&gt; 1.1)
      zeitwerk (~&gt; 2.2, &gt;= 2.2.2)
    addressable (2.7.0)
      public_suffix (&gt;= 2.0.2, &lt; 5.0)
    ansi (1.5.0)
    autoprefixer-rails (9.8.6.3)
      execjs
    aws-eventstream (1.1.0)
    aws-partitions (1.364.0)
    aws-sdk-core (3.105.0)
      aws-eventstream (~&gt; 1, &gt;= 1.0.2)
      aws-partitions (~&gt; 1, &gt;= 1.239.0)
      aws-sigv4 (~&gt; 1.1)
      jmespath (~&gt; 1.0)
    aws-sdk-kms (1.37.0)
      aws-sdk-core (~&gt; 3, &gt;= 3.99.0)
      aws-sigv4 (~&gt; 1.1)
    aws-sdk-s3 (1.46.0)
      aws-sdk-core (~&gt; 3, &gt;= 3.61.1)
      aws-sdk-kms (~&gt; 1)
      aws-sigv4 (~&gt; 1.1)
    aws-sigv4 (1.2.2)
      aws-eventstream (~&gt; 1, &gt;= 1.0.2)
    bcrypt (3.1.13)
    bindex (0.8.1)
    bootsnap (1.4.6)
      msgpack (~&gt; 1.0)
    bootstrap-sass (3.4.1)
      autoprefixer-rails (&gt;= 5.2.1)
      sassc (&gt;= 2.0.0)
    bootstrap-will_paginate (1.0.0)
      will_paginate
    builder (3.2.4)
    byebug (11.1.3)
    capybara (3.32.2)
      addressable
      mini_mime (&gt;= 0.1.3)
      nokogiri (~&gt; 1.8)
      rack (&gt;= 1.6.0)
      rack-test (&gt;= 0.6.3)
      regexp_parser (~&gt; 1.5)
      xpath (~&gt; 3.2)
    childprocess (3.0.0)
    coderay (1.1.3)
    concurrent-ruby (1.1.7)
    crass (1.0.6)
    erubi (1.9.0)
    execjs (2.7.0)
    faker (2.11.0)
      i18n (&gt;= 1.6, &lt; 2)
    ffi (1.13.1)
    formatador (0.2.5)
    globalid (0.4.2)
      activesupport (&gt;= 4.2.0)
    guard (2.16.2)
      formatador (&gt;= 0.2.4)
      listen (&gt;= 2.7, &lt; 4.0)
      lumberjack (&gt;= 1.0.12, &lt; 2.0)
      nenv (~&gt; 0.1)
      notiffany (~&gt; 0.0)
      pry (&gt;= 0.9.12)
      shellany (~&gt; 0.0)
      thor (&gt;= 0.18.1)
    guard-compat (1.2.1)
    guard-minitest (2.4.6)
      guard-compat (~&gt; 1.2)
      minitest (&gt;= 3.0)
    i18n (1.8.5)
      concurrent-ruby (~&gt; 1.0)
    image_processing (1.9.3)
      mini_magick (&gt;= 4.9.5, &lt; 5)
      ruby-vips (&gt;= 2.0.13, &lt; 3)
    jbuilder (2.10.0)
      activesupport (&gt;= 5.0.0)
    jmespath (1.4.0)
    listen (3.2.1)
      rb-fsevent (~&gt; 0.10, &gt;= 0.10.3)
      rb-inotify (~&gt; 0.9, &gt;= 0.9.10)
    loofah (2.7.0)
      crass (~&gt; 1.0.2)
      nokogiri (&gt;= 1.5.9)
    lumberjack (1.2.8)
    mail (2.7.1)
      mini_mime (&gt;= 0.1.1)
    marcel (0.3.3)
      mimemagic (~&gt; 0.3.2)
    method_source (1.0.0)
    mimemagic (0.3.5)
    mini_magick (4.9.5)
    mini_mime (1.0.2)
    mini_portile2 (2.4.0)
    minitest (5.11.3)
    minitest-reporters (1.3.8)
      ansi
      builder
      minitest (&gt;= 5.0)
      ruby-progressbar
    msgpack (1.3.3)
    nenv (0.3.0)
    nio4r (2.5.2)
    nokogiri (1.10.10)
      mini_portile2 (~&gt; 2.4.0)
    notiffany (0.1.3)
      nenv (~&gt; 0.1)
      shellany (~&gt; 0.0)
    pg (1.2.3)
    pry (0.13.1)
      coderay (~&gt; 1.1)
      method_source (~&gt; 1.0)
    public_suffix (4.0.6)
    puma (4.3.5)
      nio4r (~&gt; 2.0)
    rack (2.2.3)
    rack-proxy (0.6.5)
      rack
    rack-test (1.1.0)
      rack (&gt;= 1.0, &lt; 3)
    rails (6.0.3.2)
      actioncable (= 6.0.3.2)
      actionmailbox (= 6.0.3.2)
      actionmailer (= 6.0.3.2)
      actionpack (= 6.0.3.2)
      actiontext (= 6.0.3.2)
      actionview (= 6.0.3.2)
      activejob (= 6.0.3.2)
      activemodel (= 6.0.3.2)
      activerecord (= 6.0.3.2)
      activestorage (= 6.0.3.2)
      activesupport (= 6.0.3.2)
      bundler (&gt;= 1.3.0)
      railties (= 6.0.3.2)
      sprockets-rails (&gt;= 2.0.0)
    rails-controller-testing (1.0.4)
      actionpack (&gt;= 5.0.1.x)
      actionview (&gt;= 5.0.1.x)
      activesupport (&gt;= 5.0.1.x)
    rails-dom-testing (2.0.3)
      activesupport (&gt;= 4.2.0)
      nokogiri (&gt;= 1.6)
    rails-html-sanitizer (1.3.0)
      loofah (~&gt; 2.3)
    railties (6.0.3.2)
      actionpack (= 6.0.3.2)
      activesupport (= 6.0.3.2)
      method_source
      rake (&gt;= 0.8.7)
      thor (&gt;= 0.20.3, &lt; 2.0)
    rake (13.0.1)
    rb-fsevent (0.10.4)
    rb-inotify (0.10.1)
      ffi (~&gt; 1.0)
    regexp_parser (1.7.1)
    ruby-progressbar (1.10.1)
    ruby-vips (2.0.17)
      ffi (~&gt; 1.9)
    rubyzip (2.3.0)
    sass-rails (6.0.0)
      sassc-rails (~&gt; 2.1, &gt;= 2.1.1)
    sassc (2.4.0)
      ffi (~&gt; 1.9)
    sassc-rails (2.1.2)
      railties (&gt;= 4.0.0)
      sassc (&gt;= 2.0)
      sprockets (&gt; 3.0)
      sprockets-rails
      tilt
    selenium-webdriver (3.142.7)
      childprocess (&gt;= 0.5, &lt; 4.0)
      rubyzip (&gt;= 1.2.2)
    shellany (0.0.1)
    spring (2.1.0)
    spring-watcher-listen (2.0.1)
      listen (&gt;= 2.7, &lt; 4.0)
      spring (&gt;= 1.2, &lt; 3.0)
    sprockets (4.0.2)
      concurrent-ruby (~&gt; 1.0)
      rack (&gt; 1, &lt; 3)
    sprockets-rails (3.2.1)
      actionpack (&gt;= 4.0)
      activesupport (&gt;= 4.0)
      sprockets (&gt;= 3.0.0)
    sqlite3 (1.4.2)
    thor (1.0.1)
    thread_safe (0.3.6)
    tilt (2.0.10)
    turbolinks (5.2.1)
      turbolinks-source (~&gt; 5.2)
    turbolinks-source (5.2.0)
    tzinfo (1.2.7)
      thread_safe (~&gt; 0.1)
    web-console (4.0.2)
      actionview (&gt;= 6.0.0)
      activemodel (&gt;= 6.0.0)
      bindex (&gt;= 0.4.0)
      railties (&gt;= 6.0.0)
    webdrivers (4.3.0)
      nokogiri (~&gt; 1.6)
      rubyzip (&gt;= 1.3.0)
      selenium-webdriver (&gt;= 3.0, &lt; 4.0)
    webpacker (4.2.2)
      activesupport (&gt;= 4.2)
      rack-proxy (&gt;= 0.6.1)
      railties (&gt;= 4.2)
    websocket-driver (0.7.3)
      websocket-extensions (&gt;= 0.1.0)
    websocket-extensions (0.1.5)
    will_paginate (3.3.0)
    xpath (3.2.0)
      nokogiri (~&gt; 1.8)
    zeitwerk (2.4.0)

PLATFORMS
  ruby

DEPENDENCIES
  active_storage_validations (= 0.8.9)
  aws-sdk-s3 (= 1.46.0)
  bcrypt (= 3.1.13)
  bootsnap (= 1.4.6)
  bootstrap-sass (= 3.4.1)
  bootstrap-will_paginate (= 1.0.0)
  byebug (= 11.1.3)
  capybara (= 3.32.2)
  faker (= 2.11.0)
  guard (= 2.16.2)
  guard-minitest (= 2.4.6)
  image_processing (= 1.9.3)
  jbuilder (= 2.10.0)
  listen (= 3.2.1)
  mini_magick (= 4.9.5)
  minitest (= 5.11.3)
  minitest-reporters (= 1.3.8)
  pg (= 1.2.3)
  puma (= 4.3.5)
  rails (= 6.0.3.2)
  rails-controller-testing (= 1.0.4)
  sass-rails (= 6.0.0)
  selenium-webdriver (= 3.142.7)
  spring (= 2.1.0)
  spring-watcher-listen (= 2.0.1)
  sqlite3 (= 1.4.2)
  turbolinks (= 5.2.1)
  web-console (= 4.0.2)
  webdrivers (= 4.3.0)
  webpacker (= 4.2.2)
  will_paginate (= 3.3.0)

BUNDLED WITH
   2.1.4
</code></pre>
<p>.gitignore</p>
<pre><code># See https://help.github.com/articles/ignoring-files for more about ignoring files.
#
# If you find yourself ignoring temporary files generated by your text editor
# or operating system, you probably want to add a global ignore instead:
#   git config --global core.excludesfile '~/.gitignore_global'

# Ignore bundler config.
/.bundle

# Ignore the default SQLite database.
/db/*.sqlite3
/db/*.sqlite3-journal
/db/*.sqlite3-*

# Ignore all logfiles and tempfiles.
/log/*
/tmp/*
!/log/.keep
!/tmp/.keep

# Ignore pidfiles, but keep the directory.
/tmp/pids/*
!/tmp/pids/
!/tmp/pids/.keep

# Ignore uploaded files in development.
/storage/*
!/storage/.keep

/public/assets
.byebug_history

# Ignore master key for decrypting credentials and more.
/config/master.key

/public/packs
/public/packs-test
/node_modules
/yarn-error.log
yarn-debug.log*
.yarn-integrity

# Ignore vendor/bundle
/vendor/bundle
</code></pre>
",0,11625800,,
27800512,256793,1/6/2015 14:14,29,9701,<git><git-submodules><githooks>,bypass pre-commit hook for merge commits,"<p>I setup some git hooks to run some <code>gulp</code> commands on pre-commit.  I basically run <code>jshint</code>/<code>plato</code>.  I basically want to bypass these for two cases:</p>

<ol>
<li>hotfix branches (master / hotfix)</li>
<li>git merge  (or find a way to do it in a way that doesn't crash on the merge commit case)</li>
</ol>

<p>The plato gulp command runs analysis on the source and produces a /reports/ directory that tracks complexity over time.   If we do this on the hotfix branch it will result in merge conflicts when merging them back into development.  Enough talking here is the simple hook:</p>

<pre><code>#!/bin/sh

if git diff --cached --name-only --diff-filter=ACM | grep '.js$' &gt;/dev/null 2&gt;&amp;1
then
  git stash -q --keep-index
  ./node_modules/.bin/gulp jshint
  RESULT=$?
  git stash pop -q
  [ $RESULT -ne 0 ] &amp;&amp; exit 1
  git stash -q --keep-index
  ./node_modules/.bin/gulp plato
  git add report/
  git stash pop -q
fi

exit 0
</code></pre>

<p>Issue right now is if i have a merge conflict on ""reports"" and I resolve the merge <code>All conflicts fixed but you are still merging.</code> and then commit it runs the analysis again and stages the commit and when it commits it throws an error:</p>

<blockquote>
  <p>/Users/Nix/work/project/.git/modules/somesubmodule/MERGE_HEAD' for reading: No such file or directory.</p>
</blockquote>

<p>The directory does exist but there is no merge head...</p>
",0,256793,0,0
45749689,790301,8/18/2017 6:14,-1,733,<git><githooks>,git pre-commit hook not running when running git commit -a,"<p>I have a local pre-commit hook which executes, and stops the commit as expected when I run 
<code>git commit</code></p>

<p>Also, as expected, I can bypass the hook when I run <code>git commit -n ...</code></p>

<p>However, running <code>git commit -am ""My message""</code> or indeed, just <code>git commit -a</code> seems to bypass the hook and allow the commit to be processed.</p>

<p>Any idea why this may be happening?</p>

<p><strong>Edit</strong>: Hook below.</p>

<pre><code>PROJECT_ROOT=`git rev-parse --show-toplevel`
CHANGED=`git diff --stat -- $PROJECT_ROOT/myProj/myfile.ext | wc -l`
if [ $CHANGED -gt 0 ];
then
    echo ""myfile.ext file has changed, are you sure you want to commit""
    echo ""Use the -n parameter to process this commit.""
    exit 1
fi
</code></pre>
",2,790301,,
63728255,6521009,9/3/2020 16:50,0,388,<git><githooks><bonobo>,Can't make a hook work in bonobo git server,"<p>I added <a href=""https://bonobogitserver.com/"" rel=""nofollow noreferrer"">bonobo git server</a> to a windows server so that i can store the repos of the  company projects in the server. I also want to make automatic deployments using git hooks. As bonobo git server is a web application i thought i couldn't use git hooks. I did some research and found out it is possible to run them. (<a href=""https://blog.dangl.me/archive/configure-git-hooks-on-bonobo-git-server-in-windows/"" rel=""nofollow noreferrer"">someone's blog</a> , <a href=""https://stackoverflow.com/questions/26323632/bonobo-git-not-firing-post-receive-hook#:%7E:text=Bonobo%20Git%20Server%20itself%20doesn,do%20it%20on%20the%20server."">stackoverflow post</a> which leads to <a href=""https://groups.google.com/g/bonobo-git-server/c/Eg5MOe9sYkc"" rel=""nofollow noreferrer"">here</a>). I created the hook but apparently it is not working.</p>
<p>My hook is stored at <code>C:\inetpub\wwwroot\Bonobo.Git.Server\App_Data\Repositories\test\hooks</code> with name <code>post-update</code> (no file type specified) :</p>
<pre><code>#!/bin/sh

echo post-update
</code></pre>
<p>In my PC, i added the new remote using  <code>git remote add dev &lt;url to repo&gt;</code></p>
<p>When i run <code>git push dev master</code> the changes are pushed to the server but the hook is not run.</p>
<p>I followed the <a href=""https://bonobogitserver.com/install/"" rel=""nofollow noreferrer"">installation instructions</a> from bonobo.</p>
<p>I'm not sure if the problem might be that  apparently i used IIS v.6 instead of v.8 to configure the app
(i'm not sure about this but i suspect that the version is the 6th)</p>
<p><a href=""https://i.stack.imgur.com/6M6XT.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/6M6XT.png"" alt=""enter image description here"" /></a></p>
<p>The permissions <code>App_data folder</code> within <code>bonobo.git.server folder</code>
<a href=""https://i.stack.imgur.com/VWN9S.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/VWN9S.png"" alt=""enter image description here"" /></a></p>
<p>I opened IIS ,converted bonobo.git.server to an application and configured the authentication:
<a href=""https://i.stack.imgur.com/YFdDL.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/YFdDL.png"" alt=""enter image description here"" /></a></p>
<p>all of the above as specified in bonobo installation.</p>
<p>To see if what was wrong was the hook itself, i created a bare repo within my computer.
<a href=""https://i.stack.imgur.com/Db0tM.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Db0tM.png"" alt=""enter image description here"" /></a></p>
<p>The result i get when pushing to the server using the same hook is :</p>
<p><a href=""https://i.stack.imgur.com/jwOvP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jwOvP.png"" alt=""enter image description here"" /></a></p>
<p>Any idea of what is wrong ?</p>
",2,6521009,,
63731706,356904,9/3/2020 21:12,0,155,<bash><git><macos><githooks>,Bash git-hook runs correctly on linux but fails on mac,"<p>I'm trying to write my first git hook for <code>prepare-commit-msg</code> , I've put this together which behaves exactly as I want it on my Fedora box:</p>
<pre><code>#!/usr/bin/bash
COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3
TRELLO_ID='XXX' # our trello project id
branchName=`git rev-parse --abbrev-ref HEAD`
IFS=/ read commitType issueNumber commitDesc &lt;&lt;&lt; $(echo $branchName)
if [[ -z $issueNumber ]]; then
  exit 1
fi
firstLine=$(head -n1 $1)
if [ -z &quot;$firstLine&quot;  ] ;then #Check that this is not an amend by checking that the first line is empty
        sed -i'.bak' -e &quot;1s/^/Issue $issueNumber: \n/&quot; $COMMIT_MSG_FILE
        sed -i'.bak' -e &quot;2a\
                Issue link: https://trello.com/c/$TRELLO_ID/$issueNumber \n&quot; $COMMIT_MSG_FILE
fi
</code></pre>
<p>I've shared this with a team member who's running on a mac and this keeps failing. Extra info about the mac setup is that it is running zsh but I dont know if that is relevant. I'm not familiar with macs so I wasn't able to help other that echoing a lot in this file when running <code>git commit</code>. For the record I'm also not that experience with bash.</p>
<p>At first I thought it was an issue with <code>sed</code> compatibility as other questions I found here revolve around it but after further testing it seems this already fails when splitting the branch name (we're using the convention <code>&lt;type&gt;/&lt;ticket-number&gt;/&lt;desc&gt;</code> ). I've also noticed some importance in syntax using single and double quotes around the file.</p>
<p>One last curiosity, on his mac if we run <code>$ which bash</code> on his terminal we get <code>/bin/bash</code>, does that mean the shebang is also wrong? how do people keep scripts like this compatible between linux and mac with so many little details? I also considered rewriting this on python which could bring easier compatibility but I really would like to understand what's needed to make this work on both systems.</p>
<p>Thanks!</p>
",7,356904,,
63738834,11578113,9/4/2020 9:53,0,618,<git><githooks>,Git doesn't clone content of template directory,"<p>I want to have something like a post-clone hook.
So my idea was to create a template directory in my remote origin which contains a &quot;hooks&quot; folder and a &quot;post-checkout&quot;-script within.</p>
<p>So my &quot;post-checkout&quot;-script is located in the remote origin at:</p>
<pre><code>[remote-repo-path]/template/hooks/post-checkout
</code></pre>
<p>Next, I configure the template directory in the remote origin:</p>
<pre><code>git config init.templatedir '[remote-repo-path]/template'
</code></pre>
<p>But... when I clone from the repository I only get the stuff from the default templatedir on my local machine.</p>
<p>How can I clone the template directory from my remote origin?</p>
",3,11578113,,
63754205,12264478,9/5/2020 13:01,4,2031,<npm><githooks><pre-commit-hook><pre-commit><husky>,Husky failed to install cannot read property of 'toString' of null,"<p>I have an issue installing husky (with lint-staged) for a while now and I would very much appreciate any help. My project setup is: node JS, npm with eslint, prettier set-up and now trying to add husky with lint-staged.</p>
<p><strong>THE MAIN ISSUE:</strong></p>
<p>When installing husky &quot;npm install husky --save-dev&quot; the pre-commit file (in &quot;.git/hooks&quot; folder) is not being modified with Husky code! The installation message:</p>
<pre><code>husky &gt; Setting up git hooks
Cannot read property 'toString' of null
husky &gt; Failed to install
</code></pre>
<p>System details:
OS: Windows 10
Git: git version 2.28.0
node -v
v12.16.1
husky: 4.2.5</p>
<p>I have tried the following:
(1 Git is registered as an env PATH variable
(2 There is no hooksPath set in the global gitconfig file that would point to another directory than .git/hooks in the local workspace
(3 Installing/uninstalling Husky
(4 Making the pre-commit file executable by removing .sample
(5 Deleting .git/hooks/pre-commit file altogether
(6 Adding the necessary script in the &quot;package.json&quot; file as below</p>
<pre><code>&quot;husky&quot;: {
    &quot;hooks&quot;: {
      &quot;pre-commit&quot;: &quot;lint-staged&quot;
    }
  },
  &quot;lint-staged&quot;: {
    &quot;src/**/*.js&quot;: &quot;eslint --fix&quot;,
    &quot;*.{html,md,json}&quot;: &quot;prettier --write&quot;
  }
</code></pre>
<p>I have still no luck.</p>
<p>As a consequence, when committing changes, husky does NOT run at all!</p>
<p>Thanks for any help in advance!</p>
",1,12264478,,
63783271,5131139,9/7/2020 19:30,0,96,<git><githooks><pre-commit-hook>,Are changes made to .git/hooks/pre-commit part of the repo after push ? Or are they just present in my local?,"<p>I want to run my tests before every commit.
So under .git/hooks/pre-commit file, I write the code to run my tests.
This works fine in my local. However, I don't find the changes I made to the pre-commit file present in the git stage. Nor is it part of the PR.
Will this be available to anyone who clones or pulls the branch?
If now how can I make this global to the project?</p>
",2,5131139,,
63795014,10825966,9/8/2020 13:32,1,44,<git><github><merge><git-merge><githooks>,What is the best way to allow user merge only specific branch?,"<p>We have several teams which are working on multiple branches, I want to allow them only to merge from master and develop and not from each other, because we had an issue in which someone merge another team's branch and pushed to master (that was a hell of a weekend)</p>
<p>So naturally I've try to play with the Pre-Merge-Commit hook, but it seems to have its own problem and I can't be sure what is the branch to merge from (correct me if I'm wrong)</p>
<p>What is the best way to keep it simple and allow them to only merge from the branches I choose?</p>
<p>Thanks :)</p>
",5,10825966,,
63843552,4984564,9/11/2020 8:33,2,73,<git><githooks><lint><git-stash>,Pop from stash without indexing changes,"<p><em>Context:</em></p>
<p>I want to run rubocop in a git pre-commit hook, but I assuming I have a stashed change that would cause it to complain, and an unstashed change that somehow fixes this, the offending change would slip by rubocop.</p>
<p><em>My solution so far:</em></p>
<p>Before running rubocop, run <code>git stash --keep-index -u</code> to stash all unstaged changes before running rubocop</p>
<p><em>The problem:</em></p>
<p>After running rubocop, <code>git stash pop</code> restores the working tree to its previous state, but stages all those changes (which were previously unstaged)</p>
<p><em>My question:</em></p>
<p>Is there an option to pop the stash without automatically staging any of the popped changes?</p>
<p><em>or</em></p>
<p>Is there some other way to run a program on the project as it would be committed, instead of the working tree with possible unstaged changes?</p>
<hr />
<p>To reproduce the situation:</p>
<pre class=""lang-sh prettyprint-override""><code># Set up a dummy repo
  git init
  echo foo &gt; file
  git add foo &amp;&amp; git commit -m &quot;Initial&quot;
# Make a change and stage it
  echo bar &gt;&gt; file
  git add file
# Make another change and *don't* stage it
  echo baz &gt;&gt; file
# This is what I later want to restore:
  git status &amp;&amp; git diff &amp;&amp; git diff --cached
# Stash only unstaged changes (and ignored / untracked files)
  git stash --keep-index -u
# So far everything is as it should be
  git status &amp;&amp; git diff &amp;&amp; git diff --cached
# Run whatever script on the code
  rubocop .
# This is where things go wrong though:
  git stash pop
# Both changes are now staged to be committed 💢
  git status &amp;&amp; git diff &amp;&amp; git diff --cached
</code></pre>
",3,4984564,,
63845972,5530553,9/11/2020 11:13,0,57,<git><githooks><git-push><pre-commit.com>,Installing hooks as pre-push instead of pre-commit,"<p>I have a pre-commit hook defined as follows in a <code>pre-commit-config.yaml</code> file located in the root of my repository -</p>
<pre><code>repos:
-   repo: https://gitlab.com/pycqa/flake8
    rev: 3.7.9
    hooks:
    - id: flake8
</code></pre>
<p>This works as expected and blocks any commit if I am now following flake8 rules. However, I want to do this for a <code>git push</code> and not for a <code>git commit</code>. One way I found is to add a <code>pre-push</code> file inside <code>.git/hooks/</code> and do <code>flake8 .</code> from inside. This does the job but now I can't share that file with anyone through git since the <code>.git</code> folder is not tracked by git.</p>
<p>Is there any file/config that I can put in the root of the repo that will act as a pre-push hook?</p>
",2,5530553,,
45907945,2022724,8/27/2017 18:12,9,6352,<git><githooks>,Server Side Hooks on Bitbucket,"<p>I'm new to creating git hooks. I've successfully created a local git hook but I am having a hard time figuring out how to install a server side hook on Bitbucket.</p>

<p>I've tried using a plugin called External Hooks and making a External Pre Receive Hook, but that results in my push to Bitbucket being rejected with:</p>

<p>remote: Hook external-pre-receive-hook blocked the push
 ! [remote rejected] master -> master (pre-receive hook declined).</p>

<p>I've tried putting the hook in the .git folder on the server. But there's not a .git folder that I can find. I did find ApplicationData/Bitbucket/bin/git-hooks. I tried putting a pre-receive hook file in there but that was not successful. It did not prevent a push to the repo but the file also did not execute.</p>

<p>The hook/file that I'm using is as simple as can be so I don't think thats the problem. It has this text:</p>

<pre><code>#!/bin/sh
#

echo 'hi there soldier'
</code></pre>
",0,2022724,0,0
45913567,172690,8/28/2017 7:12,1,39,<git><git-merge><githooks>,How do I allow certain git commits to a branch but prevent them being merged into master?,"<p>Sometimes I branch out to write a feature but need an initial <em>local</em> commit which tweaks certain files in a way for me to work locally. These changes are not to be merged back into master, so when the branch is ready I rebase it and remove the initial commit, which typically starts with the log message ""<strong>DONT MERGE</strong>"". But from time to time I still manage to merge that into master.</p>

<p>Looking through the git hooks folder I see pre/post commit hooks, but nothing seems to look ideal for merges. Is any of those hooks able to look at commits before them being merged too? I want this to work locally on my machine, so I'm not looking for solutions which involve pushing to an external server like GitHub or Bitbucket.</p>
",3,172690,0,0
45931921,,8/29/2017 6:16,3,1595,<git><gitlab><githooks>,how to add the pre-receive hook in server side in GitLab?,"<p>I am trying to restrict the binary file (EXE, DLL, PDF) committing in our gitlab. So I need to add the hook to restrict it in globally. How can I do this? Is Pre-receive hook is suitable for this?</p>

<p>Is this place is correct to add the hook?</p>

<blockquote>
  <p>/opt/gitlab/embedded/service/gitlab-shell/hooks/pre-receive</p>
</blockquote>

<p>Any helps appreciated! </p>
",5,,0,0
45934453,1766548,8/29/2017 8:42,-1,222,<git><gitlab><githooks>,Introducing Push Notifications when Merge Request updated,"<p>Cases exist when a Merge Request (from now on <code>MR</code>) that is being under review is updated by a new push.
Is there a way to introduce push notifications (or any type of notifications besides email) that the <code>MR</code> under review has been updated?</p>

<p>Basically, if you have the <code>MR</code> open in a browser and reviewing it, to get a notification that it has changed, so you can refresh and review the latest code.</p>

<p><strong>EDIT</strong> </p>

<p>When I say push notifications, I mean <a href=""https://en.wikipedia.org/wiki/Push_Notification"" rel=""nofollow noreferrer"">this</a> not notifications for every push. Live notifications as I have the <code>MR</code> open (just like a hangouts message, or a facebook notification)</p>
",0,1766548,,
45954367,8536397,8/30/2017 7:22,-1,67,<git><gitlab><githooks><git-clone>,How to Cloning Gitlab Project by Using Hook?,"<p>i have my own gitlab server. I had created new-project, and i want to clone that project repositories to gitrepo on my local machine after doing first commit, can i do that automatically by using hook? if yes which hook i must use? </p>

<p>regards</p>
",0,8536397,,
27969297,3632000,1/15/2015 17:23,0,26,<git><heroku><jenkins><githooks><webhooks>,Launch remote builds in Jenkins with Heroku,"<p>I'm trying to launch a test suite when I push to my development branch in Heroku. 
I can do this when I deploy my application but I need to in my development branch.</p>

<p>Anybody know what can I do?</p>
",2,3632000,,
64460259,8024327,10/21/2020 9:05,0,137,<gerrit><githooks>,Gerrit Change-ID missing in commit message,"<ul>
<li>commit-msg hook in hooks folder downloaded correctly (calssic scp)</li>
<li><code>chmod +x .git/hooks/commit-msg</code> done</li>
<li>change-id still missing in commit message</li>
</ul>
<p>Thank you in advance for your help!</p>
",3,8024327,,
64460390,7487509,10/21/2020 9:13,3,772,<jenkins><github><jenkins-pipeline><githooks>,Self Signed Certificate in GitHub Webhook,"<p>I have got Jenkins server setup in Azure VM with self-signed certificate, when I tried to setup a webhook from GitHub server I getting error <code>&quot;We couldn’t deliver this payload: certificate signed by unknown authority&quot;</code>.</p>
<p>Do we have any way to import my CA file into GitHub trusted entry? I have tried searching in different forums but could see any response.</p>
<p>Thanks,</p>
",1,7487509,,
46256239,7949923,9/16/2017 16:52,0,370,<git><environment-variables><gitlab><githooks>,Reading GitLab GL_REPOSITORY environment variable,"<p>I'm creating a server side hook (pre-receive) on GitLab 9.5. I need to know what repo is updated by push command.</p>

<p>The command <code>echo $GL_REPOSITORY</code> is executed by hook, but returns blank/empty on output. My hook was edited in a shell script.</p>

<p>These are my questions:
How can I read this environment variable?
Is there some configuration needed on the GitLab server?</p>

<p>Thanks.</p>
",0,7949923,,
46833796,725937,10/19/2017 15:42,1,48,<git><githooks>,Whole amend diff with pre-commit hook,"<p>I am working on a pre-commit trigger. This trigger should analyze the whole diff.
For that I do:</p>

<pre><code>git diff-index --cached HEAD | myprogram
</code></pre>

<p>Now I noticed, that this fails for amending (e.g. with git gui). In this scenario, the diff between index and HEAD can be empty (when no changes were done) or only partial. This is because HEAD has not been reset. Probably in this scenario I would need to do HEAD - 1, which seems hacky (and I have not yet found a way to distinguish amend).</p>

<p>Is there a general way to handle this properly?</p>
",2,725937,0,0
28608504,3483197,2/19/2015 14:10,1,77,<git><github><githooks><git-post-receive>,Git workflow: what to do about changes from another developer that is not using Git,"<p>I have set up Git on the production server with a post receive hook.  This allows me to use ‘git push production master’ to deploy the master branch to production.</p>

<p>This project also has a web developer that is modifying pages, but she is using dreamweaver/ftp to deploy those pages to production. She is not using git or github.</p>

<p>We discovered today that my deployment post-receive hook is overwriting the files that she changed. This was unexpected as I was thinking that the hook would only overwrite/merge changed files.</p>

<p>There are number of fixes to this that I think of and I am looking for more ideas:</p>

<ol>
<li>She gets me a list of changed files and I pull those down from production and update the repo (kludgy)</li>
<li>We use github and give her access to the private repo (Not really an option as this developer is not an employee of my company - security issues)</li>
<li>Untrack (and add to .gitignore) all of the files/directories that she might touch, or makes changes to.  This may be viable as I am really only responsible for a few areas. Also she is updating just a few files, 10 at the most. UPDATE: This does not work.  If I untrack and gitignore the files in question they get deleted from the production server on 'git push production master'</li>
<li>Modify the post receive hook to ignore files on the server that have been changed.</li>
</ol>

<p>As I type this, I am thinking that option 3 is the best. I would simply untrack and add to .gitignore all files she makes changes to - she would provide me a list of those files.  I would have to test this with the post-receive hook. UPDATE -Nope this was not a solution.  See #3 above.</p>

<p>If there is better way to address this, let me know.</p>

<p>Here is the post-receive hook code:</p>

<pre><code>#!/usr/bin/env ruby
# post-receive

# 1. Read STDIN (Format: ""from_commit to_commit branch_name"")
from, to, branch = ARGF.read.split "" ""

# 2. Only deploy if master branch was pushed
if (branch =~ /master$/) == nil
    puts ""Received branch #{branch}, not deploying.""
    exit
end

# 3. Copy files to deploy directory
deploy_to_dir = File.expand_path('../')
`GIT_WORK_TREE=""#{deploy_to_dir}"" git checkout -f master`
puts ""DEPLOY: master(#{to}) copied to '#{deploy_to_dir}'""
</code></pre>
",11,3483197,,
65393472,6885729,12/21/2020 13:16,2,6197,<git><githooks><ubuntu-20.04>,Git hook permission denied,"<p>When I am trying to run <code>git commit -m 'message here'</code> I am getting following error.</p>
<p><code>fatal: cannot exec '.git/hooks/prepare-commit-msg': Permission denied</code></p>
<p>This issue started after when I created a new partition on my ubuntu and cloned the repo in it.</p>
",2,6885729,,
65394693,14545081,12/21/2020 14:38,-1,17121,<git><github><githooks>,Git's --no-verify option,"<p>I was having an issue committing my work to GitHub (the pre-commit check was failing), so I saw in one of the fixes suggested by Git to add <code>--no-verify</code> to bypass the pre-commit check and it worked. My question is will all future pre-commits be bypassed? Or is it just a one time thing?</p>
",3,14545081,,
65403132,8162779,12/22/2020 4:05,4,463,<git><githooks><git-filter>,Git zip/tar file implementation pre-commit and post-checkout hooks,"<p>I regularly use a tool (Amesim) that packages its files in an uncompressed tar file. For versioning, I've typically named files as file1_Rev01.ame, and iterated up with changes. This works when I'm the only user, but lately I'm sharing files/models more regularly. Trying to share these models is painful, they often include results which are quite large (gbs of data), and keeping track of changes between versions if difficult unless rigorously adding text within the model on each change. (Amesim is a tool like Simulink.)</p>
<p>I've been reading up on git hooks and git filters, but I'm not sure what to do to better manage versioning of a tarball.</p>
<p>Let's say I have the file &quot;my_file.tar&quot; and it consists of a.txt, b.model, c.data, and d.results.</p>
<p>From the application side, I would stage &quot;my_file.tar&quot; and submit a commit &quot;Updates to model.&quot; With no changes to git, this tracks the changes to a binary file. This isn't readable and consumes significant space. If results are included, the file is quite large. Cloning the repo will be challenging if results are continually stored.</p>
<p>For my first attempt, I tried to use pre-commit and post-checkout hooks.</p>
<p>At commit, my pre-commit hook untars &quot;my_file.tar&quot; into a directory &quot;my_file_tar.&quot; It removes the *.results file which comes from running the model. It is unnecessary to track this and saves significant space (gbs).</p>
<p>When I pull the model, post-checkout will search for any folders with _tar and tar them, renaming them to my_file.tar.</p>
<p>Now generally this works. But, how should I handle my_file.tar and uncompressed folder? If I auto-delete the uncompressed folder after check-out, git states that I have significant changes to track. Do I need to add/remove the folder to .gitignore every time? Additionally, the tar file will never show that it is tracked, because I removed it in the pre-commit code. What can I do to clean up this process? How should I handle this differently?</p>
<p>References:</p>
<ul>
<li><a href=""https://stackoverflow.com/questions/8001663/can-git-treat-zip-files-as-directories-and-files-inside-the-zip-as-blobs"">Git Zip Files</a></li>
<li><a href=""https://stackoverflow.com/questions/17501146/uncompressing-zipped-data-files-before-committing-to-repository"">Smudge and Clean</a></li>
<li><a href=""https://paulhammant.com/2015/07/30/git-storing-unzipped-office-docs/"" rel=""nofollow noreferrer"">Git Office Docs</a></li>
<li><a href=""https://bitbucket.org/sippey/zippey/src/master/"" rel=""nofollow noreferrer"">Zippey</a></li>
<li><a href=""https://www.xltrail.com/git-xl"" rel=""nofollow noreferrer"">XLTrail</a></li>
</ul>
<p>For this code, the .ame is a tar file.</p>
<p>pre-commit</p>
<pre><code>#!/usr/bin/env python

import argparse
import os
import tarfile
import zipfile
import subprocess

def parse_args():
    pass

def log_file(log_item):
    cwd = os.getcwd()
    file = open(&quot;MyFile.txt&quot;, &quot;a&quot;) # Open file in append mode
    file.write(log_item + '\n')
    return 1
    
def get_staged_ame_files():
    '''Request a list of staged files from git and return a list of *.ame files

    This function opens a subprocess with git, requests a list of names in the git staged list. It will return a list of strings.
    '''
    out = subprocess.Popen(['git', 'diff', '--staged', '--name-only'], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
    stdout, stderr = out.communicate()
    # Separate output by newlines
    # staged_files = stdout.split(b'\n') # split as bytes
    
    # filter for files with .ame 
    staged_files = stdout.decode('utf-8').split('\n') # split as strings
    # Create list of *just* amesim files
    staged_ame_files = []
    for entry in staged_files:
        if entry.endswith(&quot;.ame&quot;):
            staged_ame_files.append(entry)
    
    if not staged_ame_files:
        return None
    else:
        return staged_ame_files

def extract_ame_files(file_list):
    folder_list = []
    for list_item in file_list:
        # If file exists, extract it. Else continue.
        if os.path.isfile(list_item):
            tar = tarfile.open(list_item, &quot;r:&quot;)
            folder_name = list_item[0:-4] + &quot;_ame&quot;
            folder_list.append(folder_name)
            tar.extractall(path = folder_name)
            tar.close()
            log_file(folder_name)
        else:
            print(&quot;File {} does not exist.&quot;.format(list_item))
            
    return folder_list
    

def cleanup_ame_ignored_files(folder_list):
    '''Removes unecessary files from the folder. 
    
    '''
    for folder in folder_list:
        file_list = os.listdir(folder)
        for file in file_list:
            if item.endswith(&quot;.results&quot;):
                os.remove(item)
            if item.endswith(&quot;.exe&quot;):
                os.remove(item)
    return 1


def git_add_ame_folders(folders):
    # Add *_ame folders to git stage
    for folder in folders:
        out = subprocess.Popen(['git', 'add', folder + '/'], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
        stdout, stderr = out.communicate()
        # The -u will capture removed files?
        out = subprocess.Popen(['git', 'add', '-u', folder + '/'], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
        stdout, stderr = out.communicate()
        
        log_file(stdout.decode('utf-8'))
    return 1
    
def remove_ame_from_staging(file_list):
    # Loop through any staged ame files.
    for file in file_list:
        out = subprocess.Popen(['git', 'rm', '--cached', file], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
        stdout, stderr = out.communicate()
    return 1

def main(args=None):
    # if file name is *.ame
    # extract *.ame as a tar of the same name into a folder of the same name + _ame
    # delete .results file
    # don't commit .ame file 
    
    # Search for files we want to process in the staged list
    # These will only be *.ame files.
    staged_ame_files = get_staged_ame_files()
    if not staged_ame_files:
        # If its empty, there's nothing to do. End the function.
        return 0
    
    # We're not empty, lets extract each one.
    folder_list = extract_ame_files(staged_ame_files)
    
    # Delete all .results files in each extracted folder  path
    
    # Stage all files in each folder path 
    git_add_ame_folders(folder_list)
    
    # Unstage the .ame file
    remove_ame_from_staging(staged_ame_files)
    return 1

if __name__ == &quot;__main__&quot;:
    args = parse_args()
    main(args)
</code></pre>
<p>and post-checkout</p>
<pre><code>#!/usr/bin/env python

import argparse
import os
import tarfile
import zipfile
import subprocess
import shutil
#from shutil import rmtree # Delete directory trees

def parse_args():
    pass

def log_file(log_item):
    cwd = os.getcwd()
    file = open(&quot;MyFile2.txt&quot;, &quot;a&quot;) # Open file in append mode
    file.write(log_item + '\n')
    return 1
    
def compress_ame_files(folder_list):
    for list_item in folder_list:
        log_file(&quot;We're on item {}&quot;.format(list_item))
        file_name = list_item[0:-4] + &quot;.ame&quot;
        log_file(&quot;Tar file name {}&quot;.format(file_name))
        # Delete the file if it exists first.
        os.remove(file_name)
        with tarfile.open(file_name, &quot;w:&quot;) as tar:
            tar.add(list_item, arcname=os.path.basename('../'))
    return 1
    

def cleanup_ame_ignored_files(folder_list):
    '''Removes unecessary files from the folder. 
    
    '''
    for folder in folder_list:
        file_list = os.listdir(folder)
        for file in file_list:
            if item.endswith(&quot;.results&quot;):
                os.remove(item)
            if item.endswith(&quot;.exe&quot;):
                os.remove(item)
    return 1


def git_add_ame_folders(folders):
    # Add *_ame folders to git stage
    for folder in folders:
        out = subprocess.Popen(['git', 'add', folder + '/'], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
        stdout, stderr = out.communicate()
        # The -u will capture removed files?
        out = subprocess.Popen(['git', 'add', '-u', folder + '/'], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
        stdout, stderr = out.communicate()
        
        #log_file(stdout.decode('utf-8'))
    return 1
    
def remove_ame_from_staging(file_list):
    # Loop through any staged ame files.
    for file in file_list:
        out = subprocess.Popen(['git', 'rm', '--cached', file], stdout=subprocess.PIPE, stderr=subprocess.STDOUT)
        stdout, stderr = out.communicate()
    return 1

def fast_scandir(dirname):
    # https://stackoverflow.com/questions/973473/getting-a-list-of-all-subdirectories-in-the-current-directory?rq=1
    subfolders= [f.path for f in os.scandir(dirname) if f.is_dir()]
    for dirname in list(subfolders):
        subfolders.extend(fast_scandir(dirname))
    return subfolders

def delete_ame_folders(folders):
    for folder in folders:
        try:
            shutil.rmtree(folder)
        except OSError as e:
            print(&quot;Error: %s : %s&quot; % (dir_path, e.strerror))
    return 1
    
#def main(args=None):
def main(lines):
    print(&quot;Post checkout running.&quot;)
    # find folders with the name _ame
    #log_file(&quot;We're running.&quot;)
    folder_list = []
    for folder in fast_scandir(os.getcwd()):
        if folder.endswith(&quot;_ame&quot;):
            #log_file(&quot;Found folder {}.&quot;.format(folder))
            folder_list.append(os.path.join(os.getcwd(), folder))
    # tar each folder up and rename with .ame
    compress_ame_files(folder_list)
    
    # Delete the folders
    #delete_ame_folders(folder_list)

    return 1

if __name__ == &quot;__main__&quot;:
    args = parse_args()
    main(args)
</code></pre>
",1,8162779,0,0
46858512,3217013,10/20/2017 23:14,0,218,<git><rebase><githooks>,Weird behavior with git post-checkout hook and rebase,"<p>About a week ago, for the sake of convenience, I put <code>git rebase</code> into my post-checkout hook. It was working fine until today when whenever I checkout any branch (regardless of whether it is behind or ahead any number of commits from the branch it's tracking), I end up on a detached state. When I remove the <code>git rebase</code> from the hook and manually do rebase after the checkout, the rebase succeeds without any issues. What could possibly be causing this weird behavior? How is what the hook is doing different than what I do manually?</p>
",4,3217013,0,0
11054194,1459145,6/15/2012 15:53,2,2347,<git><gitolite><githooks><git-post-receive>,"Per-branch, per-repo commit hook in gitolite","<p>I want to add a commit hook that works when a push is received on a gitolite/git server for a given branch and repo combination only (branch 'cat' on repo 'dog').</p>

<p>My environment:
git version 1.7.4.1, </p>

<p>What I have done so far:</p>

<ol>
<li><p>Touched a file at <code>/home/git/repositories/dog.git/hooks/post-receive.secondary</code> on the git/gitolite server.</p></li>
<li><p>Edited the file with the contents:</p>

<pre><code>#!/bin/sh
#
refname=""$1""
oldrev=""$2""
newrev=""$3""
if [ ""$refname"" == ""refs/heads/cat"" ]
then
   touch /tmp/test
fi
</code></pre></li>
<li><p>Set the owner of the file to the 'git' user</p></li>
<li><p>Set the file permissions to 700</p></li>
<li><p>Done a commit to ""cat"" branch of ""dog"" repo</p></li>
</ol>

<p>Results:
the test file is not created</p>
",5,1459145,,
47201157,2194805,11/9/2017 11:52,1,318,<git><githooks><repo>,git server side hook - only specific branches will be pushed,"<p>i' m very newbie to git hooks. I' d like to make sure that to the repository only branches will be pushed / updated which starts with BT. So no update is possible to master / current branch. How can i achieve that? I guess it should be part of the update script, right?</p>
",0,2194805,,
28978605,4490242,3/11/2015 4:29,0,92,<githooks><bitbucket-server>,local atlassian stash server error debugging plugin,"<p>Im trying to setup a dev environment to create a git hook plugin for Atlassian stash server. When I run atlas-debug to start the web server then browse to localhost:port The Stash home page doesn't display and I get this error in the console...</p>

<pre><code>[INFO] [talledLocalContainer] 2015-03-10 21:09:51,279 WARN  [threadpool:thread-15]  c.a.s.i.s.g.t.DefaultTranscodeServer GET /stash HTTP/1.1
[INFO] [talledLocalContainer] Host: localhost:52883
[INFO] [talledLocalContainer] Connection: keep-alive
[INFO] [talledLocalContainer] Pragma: no-cache
[INFO] [talledLocalContainer] Cache-Control: no-cache
[INFO] [talledLocalContainer] Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
[INFO] [talledLocalContainer] User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.76 Safari/537.36
[INFO] [talledLocalContainer] Accept-Encoding: gzip, deflate, sdch
[INFO] [talledLocalContainer] Accept-Language: en-US,en;q=0.8
[INFO] [talledLocalContainer]
[INFO] [talledLocalContainer]  could not be transcoded; ignoring request
[INFO] [talledLocalContainer] java.lang.IllegalArgumentException: The specified path, GET /stash HTTP/1.1
[INFO] [talledLocalContainer] Host: localhost:52883
[INFO] [talledLocalContainer] Connection: keep-alive
[INFO] [talledLocalContainer] Pragma: no-cache
[INFO] [talledLocalContainer] Cache-Control: no-cache
[INFO] [talledLocalContainer] Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/webp,*/*;q=0.8
[INFO] [talledLocalContainer] User-Agent: Mozilla/5.0 (Macintosh; Intel Mac OS X 10_9_5) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/41.0.2272.76 Safari/537.36
[INFO] [talledLocalContainer] Accept-Encoding: gzip, deflate, sdch
[INFO] [talledLocalContainer] Accept-Language: en-US,en;q=0.8
[INFO] [talledLocalContainer]
[INFO] [talledLocalContainer] , does not belong to Stash and cannot be transcoded.
[INFO] [talledLocalContainer]   at com.atlassian.stash.internal.scm.git.transcode.DefaultTranscoder.transcode(DefaultTranscoder.java:52) ~[stash-scm-git-3.7.1.jar:na]
[INFO] [talledLocalContainer]   at com.atlassian.stash.internal.scm.git.transcode.DefaultTranscodeServer$TranscodeChannelHandler.transcode(DefaultTranscodeServer.java:162) [stash-scm-git-3.7.1.jar:na]
[INFO] [talledLocalContainer]   at com.atlassian.stash.internal.scm.git.transcode.DefaultTranscodeServer$TranscodeChannelHandler.run(DefaultTranscodeServer.java:138) [stash-scm-git-3.7.1.jar:na]
[INFO] [talledLocalContainer]   at com.atlassian.stash.internal.concurrent.StateTransferringExecutor$StateTransferringRunnable.run(StateTransferringExecutor.java:71) [stash-platform-3.7.1.jar:na]
[INFO] [talledLocalContainer]   at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471) [na:1.7.0_75]
[INFO] [talledLocalContainer]   at java.util.concurrent.FutureTask.run(FutureTask.java:262) [na:1.7.0_75]
[INFO] [talledLocalContainer]   at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:178) [na:1.7.0_75]
[INFO] [talledLocalContainer]   at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:292) [na:1.7.0_75]
[INFO] [talledLocalContainer]   at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145) [na:1.7.0_75]
[INFO] [talledLocalContainer]   at java.lang.Thread.run(Thread.java:745) [na:1.7.0_75]
[INFO] [talledLocalContainer]   ... 1 frame trimmed
</code></pre>

<p>I'm running on Mac OSX 10.9.5 with javac 1.7.0_75</p>

<p>I installed the Atlassian plugin SDK with brew</p>

<pre><code>brew install atlassian/tap/atlassian-plugin-sdk
</code></pre>

<p>created an empty plugin with</p>

<pre><code>atlas-create-stash-plugin
</code></pre>

<p>created a default post repository hook with </p>

<pre><code>atlas-create-stash-plugin-module
</code></pre>

<p>then started the server with </p>

<pre><code>atlas-debug
</code></pre>

<p>and when I browse to localhost I get the error above</p>
",0,4490242,,
11081520,143979,6/18/2012 11:06,1,794,<git><trac><githooks><bitnami>,Automatically sync Trac and git on post-receive (using Bitnami on windows),"<p>So I have trac installed with the trac-git plugin on Bitnami trac stack on windows. All is working fine however whenever I commit to my git repo I have to open <code>use_trac.bat</code> and then call <code>trac-admin ProjectName repository resync</code> before I can see the changes in trac.</p>

<p>Now what I want to do is call this line in the <code>post-receive</code> hook of the repository but I'm struggling with how to call this from a bat file.</p>

<p>Anyone have any ideas how I can do this?</p>

<p>EDIT:
So far I have this in my post-receive</p>

<pre><code>echo ""Resync repo""
""C:/path/to/repos/resync_git.bat""
</code></pre>

<p>Calling this bat file I wrote manually works but this isn't calling. I wonder if its because the hook isn't setup right for win?</p>

<p>Here's the contents of that file:</p>

<pre><code>@echo off
CALL ""C:\PROGRA~1\Trac\scripts\setenv.bat""
cd ""C:\Program Files\Trac""
START ""BitNami Trac Stack Environment"" cmd
trac-admin C:/path/to/project changeset added ""prjname""
</code></pre>

<p>I may use <code>trac-admin C:/path/to/project repository resync ""prjname""</code> here later...</p>

<p>This is what happens when that calls:</p>

<pre><code>remote: Resync repo
remote: ./resync_git.bat: line 1: @echo: command not found
remote: ./resync_git.bat: line 2: CALL: command not found
remote: ./resync_git.bat: line 5: trac-admin: command not found
</code></pre>
",0,143979,,
29005288,1929798,3/12/2015 8:49,1,80,<python><git><githooks>,Pre receive hook with non bare remote repo,"<p>I'm writing a pre-receive hook in a particular situation.
My remote repo is non bare (I know it's not recommended).</p>

<p>I want to check if the pushed files (from other repo) have been modified in the the remote one, so I wrote a Python script but I have the following problem:</p>

<p>I use <code>sh.git('ls-files', '-m')</code> but I can't understand why the output of this command is different if I execute it in the terminal.
In the script, It seems that the output is the same of <code>git ls-files</code> without the <code>-m</code> option.</p>
",0,1929798,0,0
11149541,467284,6/22/2012 2:41,8,1815,<git><githooks><git-log>,Get Git repository's last commit,"<p>I have a central Git bare repository.  When a push is made to that repo I want to run a post-receive hook.  What that hook will do is create a message on a Basecamp project (using their API).  I want info on the update that was just performed.  Right now I think <code>git log -2 --stat</code> is good enough but would like a little more info (branch that was updated, file created, files removed).  Can anyone help with the command(s) I need to do to get all the info? Performing multiple commands is fine with with me, there probably isn't a single command that will get me all the information.</p>
",0,467284,0,0
47600390,9038440,12/1/2017 19:41,2,3830,<git><github><jenkins><githooks>,Trigger Specific Jenkins Job on Github Push to specific Directory,"<p>I have several Jenkins Job running which Deploy's code to application server. These jobs run automatically whenever there is Commit in Github repository configured through Jenkins Plugin in Github and webhook. Jenkins is running on a Windows system.</p>

<p>We have several applications in the repository, represented by a directory containing the code, each of these applications have a corresponding Jenkins Job which deploy's the code to server when the Job is run.
Since all the applications are in the same repository, so change in any one of the application creates a Push event and thus trigers all the Jobs.</p>

<p>Suppose there are three Applications <strong>App1</strong>, <strong>App2</strong> and <strong>App3</strong> and their corresponding Jobs are <strong>J1</strong>, <strong>J2</strong>, <strong>J3</strong>
and  there is a change in App1 and a commit is made in Github repository it causes all the Jobs <strong>J1</strong>,<strong>J2</strong>,<strong>J3</strong> to trigger and Deploys <strong>App1</strong>, <strong>App2</strong>, <strong>App3</strong> in server. </p>

<p>It causes unnecessary confusion since <strong>App2</strong>, <strong>App3</strong> do not have any changes in repository but still gets deployed to server.
Is there any way that i can trigger specific Jenkins job build based on Directory level Changes/Commits in the Github repository. Can we use any git hooks somehow to achieve this?</p>
",0,9038440,,
29401077,2941070,4/1/2015 21:21,0,39,<gruntjs><bower><githooks>,Bower_components in grunt and Git,"<p>Hello all I'm after general opinions here. </p>

<p>My scenario is that when I'm building websites or web apps I tend to use grunt or gulp as a task runner. I drop in my dev dependencies via the help of bower and I'm using GIT for my version control. </p>

<p>In my repo I have a post-receive hook that exports repo to another folder on server that is accessible for previewing via http. </p>

<p>During the development phase I have all files/folders etc split into a nice MVC pattern but these can get compiled/minified into a single file with a task I have listed in my grunt file. I do this at staging/production, but for development /debugging i keep it all separated. </p>

<p>What's the best way to cater for the bower_components folder with GIT. I want them exported onto server but not sure that I need to be tracking them through GIT as they are maintained by their own authors. </p>

<p>Any thoughts or ideas would be great. </p>
",0,2941070,,
11549357,50385,7/18/2012 20:04,6,594,<git><binaryfiles><githooks>,How to protect against pushing large binary blobs in git?,"<p>I have a central git repository which myself and several collaborators regularly push and pull from. In the past I have committed a large binary blob by accident, which requires rebasing to fully delete and is a pain for everyone, so I'd like to protect against this happening in the future. Is it possible to setup a hook in the remote repository that will check the file size of files being pushed (whether they are being added new or an existing file is updated) and reject pushes with files above a threshold size, say 2MB?</p>

<p>Importantly I want existing files already greater than 2MB that are untouched to be tolerated (so a push shouldn't be rejected if a 2MB file is already in the repository, only if the push adds a 2MB file or grows an existing file to be 2MB). Also, I want the hook to execute on the remote side so I don't have to worry that clients don't have to have a hook setup.</p>

<p>Edit: Since a push can contain multiple commits, and even one commit with a large file gets it stuck in the repo, I want to protect against pushes that contain /any commit/ that grows to or adds a >=2MB file.</p>
",0,50385,,
11569263,219604,7/19/2012 21:03,3,381,<git><gitolite><githooks>,Git hook to detect file changes that contain a certain string,"<p>I want to warn a user if their code includes a certain string and alert people via email.</p>

<p>Right now I'm using a post-receive hook because the detection needs to be done on the server side.</p>

<p>I am updating a server-side repository and running something like <code>git diff-tree -r --name-only --no-commit-id $2 | xargs grep foo</code> to detect bad string ""foo.""</p>

<p>Problems with this approach:</p>

<ul>
<li>I don't like maintaining and entire working version of the repository server-side</li>
<li>It scans the entire file, not just the changes. <strong>edit</strong> I solved this problem replacing the above with: <code>git show $2 | grep ^+ ...</code></li>
</ul>

<p>Is there a better way to do this?</p>
",2,219604,0,0
29418611,1191028,4/2/2015 17:10,2,1778,<git><github><version><git-submodules><githooks>,tracking version numbers of subfolders in git,"<p>My team is using github to manage a private repo full of cms themes. We have them all within the same repo and keep track of them with subfolders, labels and keeping our branchs and commits prefixed with the theme name</p>

<p>IE<br>
Commit message: <code>""[Super Theme] upgraded Navigation to include hover effect""</code> <br>
Branch <code>super_theme-upgrade-navigation-hover</code></p>

<p>Now we want to introduce semantic versioning into the theme's settings page so if you click about, you get the version number, but I'm not sure the best way to implement this</p>

<p>We could use git tags and git describe to check the number of commits but this only works if each folder is its own repo. We want to keep them together because it makes discussions on github easier since an issue affecting one theme often affects another. They're all different, but very closely related. </p>

<p>I thought about adding a script for us to check the current version of in the theme's json file and incrementing it, but I'm not sure if this is automatic enough. I really want to be sure that we don't run into version conflicts with everyone on the team. Not sure if submodules would work here since we want them always up to date. </p>

<p>I want a way to update the version number for a subfolder only when a branch working on that folder is merged into master. </p>

<p>Stumped. I'm not even sure if thats a clear question, so please ask for clarification. </p>
",2,1191028,,
29424480,452332,4/3/2015 0:11,0,88,<git><git-submodules><githooks>,Git post-receive hook for the repository and finding out which submodule is pushed,"<p>I have a main module in my application (say Module A) and a lot of sub-modules for it (say B,C and D). I need to create a post-receive hook for the main module (which is easy to do) but will it be invoked when any of its sub-modules are pushed? If yes, how do I find which sub-module is pushed ?</p>

<p>I need to know the sub-module name as I need to trigger a Jenkins build for whichever module that has been pushed. Any help appreciated. </p>
",0,452332,0,0
11636192,169801,7/24/2012 17:30,1,2000,<git><githooks>,How to force GIT post-receive hook not to be executed by the client,"<p>New to GIT trying to implement a workflow.</p>

<p>Our local office setup uses a shared Debian Samba disk with Apache, Linux, etc. We therefore clone projects from a ""local path"" of type <code>w:/webs/site.com/site.git</code> This are BARE repos.</p>

<p>We've created a bash script as a ""post-receive"" hook located on <strong>w:/webs/site.com/site.git/hooks/post-receive</strong> wich we thought would be executed by the ""linux"" git at something like `/home/samba/webs/site.com/hooks... that includes a conditional script depending on the branch commited to checkout similar to:</p>

<pre><code>GIT_WORK_TREE=/home/samba/webs/site.com/html git checkout -f $BRANCH
</code></pre>

<p>The problem is that when we PUSH from our tortoiseGIT local copy to the origin branch the hook fails with a:</p>

<blockquote>
  <p>remote: fatal: Could not switch to 'C:/Program Files
  (x86)/Git/home/samba/webs/site.com/html': No such file or
  directory To w:/webs/site.com/site.git</p>
</blockquote>

<p>Which we understand means the WORK_TREE or whole hook script is being executed by the clients GIT.</p>

<p>The problem is that we plan to open SSH and other access to the repos, so if we used Windows local paths those would fail when we push from a non Windows local network client. The alternative might be to PULL the repos via SSH even if locally but we feel this is rather inefficient and would only be required for this hook issue.</p>

<p>Any suggestions and/or GIT variables we could use that can be compatible with both? Thanks.</p>
",2,169801,0,0
11682852,1554278,7/27/2012 6:54,2,280,<git><push><githooks><pull>,How to automatically run another application after pull on repository?,"<p>I have 2 Git repository. After push in my main repository automatically pulling another (by hook). What <strong>command</strong> can help me run external application for doing additional work?</p>
",0,1554278,,
11686833,1062276,7/27/2012 11:27,5,2628,<ssh><githooks><git-push><post-commit>,How can I open a TTY for interaction with git-push hooks?,"<p>I am using the git-deploy Ruby gem to deliver an application to the staging server. The deployment is performed with SSH keys.</p>

<p>In my <code>after_push</code> script I want to run a command with <code>sudo</code>, which subsequently asks for my password, since sudo rights are limited (can't run sudo without password).</p>

<p>Effectively my sudo command fails with:</p>

<pre><code>sudo: no tty present and no askpass program specified
</code></pre>

<p>I've tried adding an askpass program and specifying it according to the git manual.</p>

<p>How can I open a TTY in the <code>git-push</code> process for interactive commands in my <code>after_push</code> script?</p>
",0,1062276,,
66181428,4351750,2/13/2021 2:54,1,197,<git><github><gitlab><githooks>,Git Post Commit hook get changed file into a variable,"<p>Git Hook newbie here</p>
<p>I've a git post-commit hook and I'm getting changed file in. I want to get the filepath+filename (minus extension) in a variable. then pass this variable to a converter</p>
<pre><code>#!/bin/bash
#.git/hooks/post-commit
# An example hook script that is called after a successful
# commit is made.
#
# To enable this hook, rename this file to &quot;post-commit&quot;.

echo &quot;post-commit started&quot;
IFS=$'\n'
git diff --name-only HEAD^ HEAD | grep '\.json$' |
while read file; do
   echo &quot;$file&quot;
   A=&quot;$file&quot; | cut -d'.' -f 1
   #Don't get anything in A
   echo &quot;$A&quot;
   B=&quot;$A&quot; +&quot;.html&quot;
   #Don't get anything in B
   echo &quot;$B&quot;
   ## Python to convert goes here
   ## generate-schema-doc $A $B
 done
 echo &quot;post-commit finished&quot;
</code></pre>
",0,4351750,0,0
11701496,871434,7/28/2012 13:37,2,580,<git><githooks><git-post-receive>,Git: Understanding post-receive,"<p>I'm fairly new to the Git world after moving from SVN recently and I'm trying to understand the <code>post-receive</code> hook.</p>

<p>Hopefully I'm correct in saying that this is a server-side hook but how would I use the <code>post-receive</code> hook to run a command client-side or is there another hook to achieve this?</p>

<hr>

<p>Eg.</p>

<p><code>post-receive</code> hook runs on server. Sends command to client/committer and that command runs on their computer (eg. echo Commit received.)</p>

<hr>

<p>And sorry if I got this all completely wrong - I'm new to Git.</p>
",2,871434,,
63417074,4994684,8/14/2020 17:00,6,1657,<java><git><maven><githooks><checkstyle>,How to run Maven Checkstyle plugin on modified files only,"<p>I am running Maven Checkstyle plugin through pre-commit githook written in python (I think that the same question applies to running it directly from terminal).</p>
<p>The command is:</p>
<pre><code>mvn checkstyle:checkstyle
</code></pre>
<p>However, I would like to run Maven Checkstyle only on files modified by git. For instance, I could run it once for each file. If I want to run it on a specific file, I may define the following pattern (I am not sure why do I need the pattern of stars and dashes in front):</p>
<pre><code>mvn checkstyle:checkstyle -Dcheckstyle.includes=**\/*File.java
</code></pre>
<p>However, I am not able to pass <strong>file path and file name</strong>, for instance:</p>
<pre><code>mvn checkstyle:checkstyle -Dcheckstyle.includes=src/main/java/File.java
</code></pre>
<p>Or, following the above mentioned pattern:</p>
<pre><code>mvn checkstyle:checkstyle -Dcheckstyle.includes=**\/*src/main/java/File.java
</code></pre>
<p>I have tried many other combinations as well, but nothing works. I found this <a href=""https://issues.apache.org/jira/browse/MCHECKSTYLE-394"" rel=""noreferrer"">issue</a> which is about the same thing, so I am wondering if someone has found a solution to this.</p>
<p>I have also read:</p>
<p><a href=""https://stackoverflow.com/questions/34453774/how-to-run-maven-checkstyle-plugin-on-incremental-code-only"">How to run maven checkstyle plugin on incremental code only</a></p>
<p><a href=""https://stackoverflow.com/questions/50016710/is-there-a-maven-git-checkstyle-plugin-that-runs-checkstyle-goal-on-git-staged-f"">Is there a maven-git-checkstyle plugin that runs checkstyle goal on git staged files alone?</a></p>
<p><a href=""https://stackoverflow.com/questions/24208568/how-to-check-style-arbitrary-list-of-java-files-from-command-line"">How to check style arbitrary list of java files from command line?</a></p>
<p>but they do not solve my problem.</p>
",2,4994684,0,0
63418209,13810665,8/14/2020 18:27,1,2926,<python><githooks><pre-commit-hook><pre-commit><pre-commit.com>,How do I fix CalledProcessError problem with precommit and hook prospector?,"<p>details:
-Python 3.7.5
-Precommit 2.6.0
-prospector 1.1.7
-VScode editor</p>
<p>I have a problem with the hook <strong>prospector</strong>.I have installed <strong>pre-commit</strong> using pip, and when I use its CLI without hook <strong>prospector</strong> in the config .yaml, everything goes fine:</p>
<pre><code>(env) C:\Users\Manuel\Desktop\solution&gt;pre-commit run --all-files
Trim Trailing Whitespace.................................................Passed
Fix End of Files.........................................................Passed
Check Yaml...........................................(no files to check)Skipped
Check for added large files..............................................Passed
Check python ast.........................................................Passed
Check JSON...........................................(no files to check)Skipped
Check for case conflicts.................................................Passed
Check for merge conflicts................................................Passed
Detect Private Key.......................................................Passed
Debug Statements (Python)................................................Passed
Mixed line ending........................................................Passed
mypy.....................................................................Passed
</code></pre>
<p>finally when I append the hook prospector in the last four lines at the <strong>.pre-commit-config.yaml</strong> as it's shown bellow:</p>
<pre><code>repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v2.4.0
    hooks:
    -   id: trailing-whitespace
    -   id: end-of-file-fixer
    -   id: check-yaml
    -   id: check-added-large-files
    -   id: check-ast
    -   id: check-json
    -   id: check-case-conflict
    -   id: check-merge-conflict
    -   id: detect-private-key
    -   id: debug-statements
    -   id: mixed-line-ending
-   repo: https://github.com/pre-commit/mirrors-mypy
    rev: 'v0.782'  # Use the sha / tag you want to point at
    hooks:
    -   id: mypy
-   repo: https://github.com/PyCQA/prospector
    rev: &quot;1.1.7&quot; # The version of Prospector to use, at least 1.1.7
    hooks:
    -   id: prospector
</code></pre>
<p>when I run it again, show the next message:</p>
<pre><code>    (env) C:\Users\Manuel\Desktop\solution&gt;pre-commit run --all-files
[INFO] Initializing environment for https://github.com/PyCQA/prospector.
An unexpected error has occurred: CalledProcessError: command: ('C:\\Program Files\\Git\\cmd\\git.EXE', 'checkout', '1.1.7')
return code: 1
expected return code: 0
stdout: (none)
stderr:
    error: cannot stat 'tests/finder/testdata/venvs/long_path_not_a_venv/long_path_not_a_venv/long_path_not_a_venv/long_path_not_a_venv/long_path_not_a_venv/long_path_not_a_venv/long_path_not_a_venv/long_path_not_a_venv/long_path_not_a_venv': Filename too long
    error: The following untracked working tree files would be overwritten by checkout:
        .coveragerc
        .gitignore
        .pre-commit-config.yaml
        .pre-commit-hooks.yaml
        .prospector.yml
        .travis.yml
        CHANGELOG.md
        CONTRIBUTORS.md
        LICENSE
        MANIFEST.in
        README.rst
        docs/Makefile
        docs/conf.py
        docs/contrib.rst
        docs/index.rst
        docs/profiles.rst
        docs/requirements.txt
        docs/supported_tools.rst
        docs/suppression.rst
        docs/usage.rst
        prospector/__init__.py
        prospector/__main__.py
        prospector/__pkginfo__.py
        prospector/autodetect.py
        prospector/blender.py
        prospector/blender_combinations.yaml
        prospector/config/__init__.py
        prospector/config/configuration.py
        prospector/config/datatype.py
        prospector/encoding.py
        prospector/exceptions.py
        prospector/finder.py
        prospector/formatters/__init__.py
        prospector/formatters/base.py
        prospector/formatters/emacs.py
        prospector/formatters/grouped.py
        prospector/formatters/json.py
        prospector/formatters/pylint.py
        prospector/formatters/text.py
        prospector/formatters/vscode.py
        prospector/formatters/xunit.py
        prospector/formatters/yaml.py
        prospector/message.py
        prospector/pathutils.py
        prospector/postfilter.py
        prospector/profiles/__init__.py
        prospector/profiles/profile.py
        prospector/profiles/profiles/default.yaml
        prospector/profiles/profiles/doc_warnings.yaml
        prospector/profiles/profiles/flake8.yaml
        prospector/profiles/profiles/full_pep8.yaml
        prospector/profiles/profiles/member_warnings.yaml
        prospector/profiles/profiles/no_doc_warnings.yaml
        prospector/profiles/profiles/no_member_warnings.yaml
        prospector/profiles/profiles/no_pep8.yaml
        prospector/profiles/profiles/no_test_warnings.yaml
        prospector/profiles/profiles/strictness_high.yaml
        prospector/profiles/profiles/strictness_low.yaml
        prospector/profiles/profiles/strictness_medium.yaml
        prospector/profiles/profiles/strictness_none.yaml
        prospector/profiles/profiles/strictness_veryhigh.yaml
        prospector/profiles/profiles/strictness_verylow.yaml
        prospector/profiles/profiles/test_warnings.yaml
        prospector/run.py
        prospector/suppression.py
        prospector/tools/__init__.py
        prospector/tools/base.py
        prospector/tools/dodgy/__init__.py
        prospector/tools/frosted/__init__.py
        prospector/tools/mccabe/__init__.py
        prospector/tools/mypy/__init__.py
        prospector/tools/pep257/__init__.py
        prospector/tools/pep8/__init__.py
        prospector/tools/profile_validator/__init__.py
        prospector/tools/pyflakes/__init__.py
        prospector/tools/pylint/__init__.py
        prospector/tools/pylint/collector.py
        prospector/tools/pylint/indent_checker.py
        prospector/tools/pylint/linter.py
        prospector/tools/pyroma/__init__.py
        prospector/tools/utils.py
        prospector/tools/vulture/__init__.py
        setup.py
        tests/__init__.py
        tests/config/__init__.py
        tests/config/test_datatype.py
        tests/finder/__init__.py
        tests/finder/test_file_finder.py
        tests/finder/testdata/test1/package1/__init__.py
        tests/finder/testdata/test1/somedir/package2/__init__.py
        tests/finder/testdata/test2/module.py
        tests/finder/testdata/test2/package/__init__.py
        tests/finder/testdata/test2/package/subpackage/__init__.py
        tests/finder/testdata/test3/package/a/__init__.py
        tests/finder/testdata/test3/package/b/__init__.py
        tests/finder/testdata/test3/package/c/__init__.py
        tests/finder/testdata/test3/package/d/__init__.py
        tests/finder/testdata/venvs/is_a_venv/Scripts/README.txt
        tests/finder/testdata/venvs/is_a_venv/bin/README.txt
        tests/finder/testdata/venvs/is_a_venv/include/README.txt
        tests/finder/testdata/venvs/is_a_venv/lib/README.txt
    Please move or remove them before you switch branches.
    Aborting

Check the log at C:\Users\Manuel\.cache\pre-commit\pre-commit.log
</code></pre>
<p>What do I have to do in order to fix this?. Thank you in advance.</p>
",3,13810665,,
8808164,982238,1/10/2012 18:05,3,2368,<github><zip><githooks>,Set the name of a ZIP downloadable from GitHub or Other ways to enroll Google Transit project on GitHub,"<p>I wan to start a Google Transit project (a city transport feed for google maps) and for the purpose of collaboration I want to use GitHub. Now one great thing is that GitHub is offering a ZIP file download that contains all your repository, and Google wants a ZIP with a required data, but that file should have name: <code>google_transit.zip</code>.</p>

<p>So my question is:
Can I somehow give Google a link that will give it a file called <code>google_transit.zip</code>, that will contain all the stuff that's in the master branch? Maybe this can be done with standard ""download zip"" option or with some hooks or something else…</p>
",0,982238,0,0
8819298,223852,1/11/2012 12:32,1,1100,<git><githooks><git-post-receive>,git post-receive not executed,"<p>I have setup the following post-receive:</p>

<pre><code>$ cat .git/hooks/post-receive
#!/bin/env sh
git checkout -f
</code></pre>

<p>which is executable:</p>

<pre><code>$ l .git/hooks/post-receive
-rwx--x--x 1 nils nils 30 11. Jan 13:17 .git/hooks/post-receive
</code></pre>

<p>So when I push into it from my local machine it should checkout and have the changes I made locally. But that is not the case:</p>

<p>Local:</p>

<pre><code>$ cat &gt; testfile
hello world

$ git add testfile &amp;&amp; git commit -m ""added testfile"" &amp;&amp; git push production master
[master 9f5232d] added testfile
 1 files changed, 1 insertions(+), 0 deletions(-)
 create mode 100644 testfile
Counting objects: 4, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 290 bytes, done.
Total 3 (delta 1), reused 0 (delta 0)
To ssh://[…]/
   88ce501..9f5232d  master -&gt; master
</code></pre>

<p>Afterwards on the remote machine:</p>

<pre><code>$ git status --short
 D testfile
</code></pre>

<p>So it does not have the testfile in its working tree</p>

<pre><code>$ git checkout -f 

$ git status
# On branch master
nothing to commit (working directory clean)
</code></pre>

<p>Any Ideas what could be possibly wrong?</p>
",0,223852,,
26624368,4137312,10/29/2014 6:57,49,19884,<git><githooks>,Handle multiple pre-commit hooks,"<p>I have a need to use multiple pre-commit hook scripts. Not sure how to handle them. Should all of them be combined into one single large pre-commit script ? if not, how to handle multiple pre-commit scripts ?</p>
",1,4137312,0,0
44792601,5036018,6/28/2017 2:15,2,197,<git><githooks><git-tag>,Git tag checkout and git hook,"<p>The application is written in angular js. I want to be able to update the ver={%tag%} to ver=v1 where v1 is the git tag.</p>

<p>for example in index file like this.</p>

<pre><code>&lt;script src=""js/controllers/AController.js?ver={%tag%}""&gt;&lt;/script&gt;
&lt;script src=""js/controllers/BController.js""?ver={%tag%}&gt;&lt;/script&gt;
</code></pre>

<p>I want to achieve this functionality when checking out tag in production. So that I don't have to manually update the version number for each file to stay in sync with git tag.
If there is a way to do this with git hook. I'll accept that also. But please provide example.
This will allow users to get the latest version of the files instead of cached version and will prevent users from manually clearing the cache for changes.
Just to let you know I am using bitbucket.</p>
",0,5036018,0,0
8897166,647037,1/17/2012 15:23,0,2633,<ruby-on-rails><git><redmine><githooks><gitolite>,Setting up git commit hook for Redmine,"<p>I am trying to migrate the setup here at the office from SVN to Git and am setting up Redmine as the host for our projects and issue management (Currently we use a version of Gforge + SVN).  I should preface by saying that I'm an embedded C software developer by day and have basically zero experience with Rails or web apps, but I like trying new things so I volunteered to set up the project management tools which will take us into the future.</p>

<p>I have Redmine setup and am using Gitolite as the Git repo manager.  Additionally, I am using the <a href=""https://github.com/ericpaulbishop/redmine_git_hosting"" rel=""nofollow"">ericpaulbishop/redmine_git_hosting</a> plugin to facilitate automatic public ssh key pushing to Gitolite and automatic repo creation when we register a new project.  Everything seems to work except the repo view within the project does not keep track of the changesets.  (The ""History"" is just empty, although when you view the files, it does show the latest version correctly)</p>

<p>I copied the post-receive hook from the plugin's contrib directory to the .gitolite/ common hooks, but again I know little about Ruby and how these gitolite hooks work so I don't know how to debug this.  I notice there are log messages and things in the hook, but I have no idea where those are printed, etc...</p>

<p>I even tried the Howto on the Redmine wiki, <a href=""http://www.redmine.org/projects/redmine/wiki/HowTo_setup_automatic_refresh_of_repositories_in_Redmine_on_commit"" rel=""nofollow"">HowTo setup automatic refresh of repositories in Redmine on commit</a>:</p>

<pre><code>#!/bin/sh

curl ""http://&lt;redmine url&gt;/sys/fetch_changesets?key=&lt;your service key&gt;""
</code></pre>

<p>Any ideas on where I start debugging?  I've been able to resolve every problem up to this point, but I'm a little stuck now.  The plugin doesn't make it obvious how this is supposed to work, and to be honest, I'm not even sure if this is a problem with Redmine not reading the repo correctly (or at all), or gitolite not communicating as Redmine expects, etc...</p>
",3,647037,,
26680781,361836,10/31/2014 17:58,0,52,<git><githooks>,Is there such a thing as a post-branch git hook?,"<p>I'm aware of the post-checkout git hook, but I'm looking for something that will fire the first time I create a new branch.  In a special case when I'm running <code>git checkout -b</code> the post-checkout might be appropriate in this one case, but I'd like to some how capture the event where I've just created a new branch.</p>

<p>I've taken a look at the <a href=""https://www.kernel.org/pub/software/scm/git/docs/githooks.html"" rel=""nofollow"">git-hooks</a> doc page, but nothing stands out to me that will work for this case.</p>

<p>Is there such a thing as a post-branch git hook?</p>
",6,361836,,
8937783,261718,1/20/2012 6:53,1,119,<git><githooks><gitolite>,"For remote hook, like post-receive, how to get the permission list for wildcard repository in gitolite?","<p>Working on the remote hook, <strong>post-receive</strong>, to send out notification emails by <strong>post-receive-email</strong>, and I am wondering if we can get the permission list just in <strong>post-receive</strong> for wildcard repositories instead of setting <strong>hooks.mailinglist</strong>?</p>
",0,261718,0,0
26745194,2913206,11/4/2014 21:17,6,2047,<git><git-branch><githooks>,"git ""pre-branch"" hook possible?","<p>I would like to create a ""pre-branch"" hook that blocks users from creating a branch with a name that matches a given regex expression if another branch already exists with a name that matches that same expression. </p>

<p>Optimally, this could be hosted locally and trigger before the user ever touches the remote repo, but I am open to any method that would prevent a branch with the undesired name from being created on the remote (pre-push or pre-receive hooks maybe?)</p>

<p>Just moving over to git, so please treat my knowledge of git hooks as extremely novice.</p>

<p>Thanks!</p>
",0,2913206,0,0
8981152,443793,1/24/2012 1:51,3,1876,<php><git><githooks>,git post-receive hook in php,"<p>I want to be able to execute a php hook on post-receive hook, to copy files from the git repo to web folder on the same server and only run if it was pushed was made on a master branch ignoring other branches. Below is what I've got so far.</p>

<pre><code>!/usr/bin/php
&lt;?php

exec(""git archive master | tar -x -C /var/www/"", $output);

?&gt;
</code></pre>

<p>Basically, im not sure how to access git arguments using php.</p>
",5,443793,,
26768923,3288855,11/5/2014 23:10,-1,209,<git><githooks>,Git Hook for git pull,"<p>I am trying to write a git hook after we run git pull, irrespective of whether there is a change or not. The <code>post-merge</code> was the only one which does that, but it does in case if there is a merge. 
Any ideas ? </p>
",1,3288855,,
26796839,781765,11/7/2014 8:11,4,1092,<git><groovy><githooks><gitblit>,Post receive pull hook on gitblit server,"<p>I need to set up post-receive hook script on Gitblit server that will pull changes to a website on the same server. In a bash script, command would look something like this:</p>

<pre><code>sudo git --work-tree=/var/www/html/mysite --git-dir=/var/www/html/mysite/.git pull
</code></pre>

<p>But as I understand, Gitblit uses groovy hooks scripts, and I'm completely new to this. Can someone please help me with creating a groovy script for this, or at least direct me to some good examples or tutorial for Groovy.</p>

<p>Thanks</p>
",2,781765,0,0
19754163,2551894,11/3/2013 14:45,0,552,<git><version-control><githooks>,Git - how to get all commit messages from last merge?,"<p>I am currently working on a git post-merge hook. Now in this hook I need all commit messages that came in with the merge.</p>

<p>Does anybody have a clue how to solve this?</p>

<p>Cheers!</p>
",0,2551894,,
19806789,554819,11/6/2013 8:01,0,146,<ruby><git><githooks>,#!/usr/bin/env ruby ignored from within a Git hook,"<p>I'm trying to write a Git hook (<code>commit-msg</code>) in Ruby, but it seems my script is not run under Ruby, but under SH.</p>

<p>For example:</p>

<pre><code>#!/usr/bin/env ruby
require 'rubygems'
</code></pre>

<p>Throws me a node.js error because of node's require command under SH.</p>

<p>Or:</p>

<pre><code>#!/usr/bin/env ruby
puts 'hello'
</code></pre>

<p>Tells me there's no command <code>puts</code>. </p>

<p>I'm running OSX 10.8.5, using RVM with ZSH. Everything seems to be configured alright since if I run the script from my terminal without the git hook it runs alright.</p>

<p>What is the problem then?</p>
",0,554819,,
57851882,6911192,9/9/2019 10:08,0,143,<git><git-submodules><githooks>,How to automatically stage commits from a submodule,"<p>I am working on a project containing a submodule and a submodule at the same time.
As they are continually build locally, I need to update the submodule at least on every commit I make inside of it.</p>

<p>Here is a <code>post-commit</code> hook inspired by <a href=""https://stackoverflow.com/questions/54895559/git-hook-to-update-superproject-on-submodule-change"">this post on hooks</a> and <a href=""https://stackoverflow.com/questions/7359204/git-command-line-know-if-in-submodule"">this post on submodules</a> and also by <a href=""https://stackoverflow.com/questions/21058363/git-failing-to-find-the-index-when-in-submodule-index-file-open-failed-not-a"">this for cleaning the env</a> and <a href=""https://stackoverflow.com/questions/5084100/post-commit-hook-not-running"">for the debugging</a></p>

<p>this is already a working solution, but if there is a better way I will accept an answer.</p>

<pre class=""lang-sh prettyprint-override""><code>#!/bin/sh

### functions

exec_push()
{
ping -c 1 heise.de 2&gt;&amp;1 &gt;&gt; /dev/null # check connectivity
PING_RESULT=$?
if [ $PING_RESULT -eq ""0"" ]
then
    git push --recurse-submodules=on-demand --quiet
else
    echo ""sorry no internet connectivity""
    exit 1
fi
}

### end functions

echo ""post-commit started""
branch=""$(git rev-parse --abbrev-ref HEAD)""
echo ""running on branch $branch""
superproject=""$(git rev-parse --show-superproject-working-tree)""
echo ""running for superproject $superproject""
current_submodule=""$(pwd)""
echo ""adding submodule $current_submodule""

if [ ""$branch"" = ""master"" ]
then
    exec_push
    env -i git -C ""$superproject"" add .
fi

echo ""post-commit finished""

</code></pre>

<p>instead of commiting the change, it only stages them, so they are commited with the next full commit.</p>
",0,6911192,,
57855192,7554194,9/9/2019 13:38,1,1358,<git><githooks>,How to use git hooks to bump version number when creating release branch?,"<p>I'm following the gitflow model for a data science project, and I would like to automatically change the version number inside one file and commit it, after creating a new release branch. The new version name should just be the name of the release branch.</p>

<p>I think the git hook for post-checkout is probably the best option, but I can't understand how to use the arguments it receives to check if the checkout was a branch creation or a checkout to an existing branch, nor how to get the name of the newly create release branch.</p>
",7,7554194,,
20222174,2905045,11/26/2013 16:09,2,48,<ruby><git><github><githooks><github-api>,Refuse any push to origin which contains changes outside certain files,"<p>I am managing a repo of student work.  Students have access to each others work, but should only make changes within their own folders in the repo.  I am looking to write a githook, preferably in ruby, that will refuse any pushes to the remote origin repo that contain changes outside their own files.  </p>

<p>Could anyone point me in the right direction?  I'm finding that documentation is relatively sparse when it comes to this topic.  </p>

<p>Thanks!</p>
",3,2905045,0,0
20278573,2986573,11/29/2013 4:51,1,1865,<ruby><githooks>,Git pre-commit hook,"<p>I'm new to git hooks. I'm not able to understand below pre-commit hook. Can anyone tell me how this works please.Here my doubt is how  grep will be happened in committed files as we are not taking those files anywhere. Sorry if am asking wrong question but please help me in understanding git hooks..</p>

<pre><code>#!/usr/bin/env ruby
if `grep -rls ""require 'ruby-debug'; raise"" *` != """"
  puts ""You twit, you've left a debugger in!""
  exit(1)
end
</code></pre>
",6,2986573,0,0
39332407,1621232,9/5/2016 14:08,32,42337,<git><githooks>,Git hooks : applying `git config core.hooksPath`,"<p>I have a git repository with a pre-commit hook set up :</p>

<pre><code>my-repo
|- .git
   |- hooks
      |- pre-commit     # I made this file executable
</code></pre>

<p>Until there, everything works. The hook is running when I commit.</p>

<p>=================================</p>

<p>I now run <code>git config core.hooksPath ./git-config/hooks</code> in <code>my-repo</code>.  </p>

<p>The folder structure is this one : </p>

<pre><code>my-repo
|- .git
   |- hooks
|- git-config
   |- hooks
      |- pre-commit     # I made this file executable as well
</code></pre>

<p>What happens is :</p>

<ul>
<li>the new pre-commit script doesn't run on commit</li>
<li>the old pre-commit script still runs on commit if I leave it in <code>my-repo/.git/hooks</code></li>
<li>running <code>git config --get core.hooksPath</code> in <code>my-repo</code> outputs <code>./git-config/hooks</code></li>
</ul>

<p><strong>How can I make the new pre-commit hook run on commit ?</strong></p>

<p>Here's the link to the docs I apparently don't understand well :<br>
<a href=""https://git-scm.com/docs/git-config"" rel=""noreferrer"">https://git-scm.com/docs/git-config</a><br>
<a href=""https://git-scm.com/docs/githooks"" rel=""noreferrer"">https://git-scm.com/docs/githooks</a>  </p>
",2,1621232,0,0
20329548,1777613,12/2/2013 13:31,2,325,<windows><git><git-merge><githooks><gitstack>,"Merge staging repository bare repository after push via hooks (GIT, Windows, GitStack)","<p>I have installed GitStack on Windows Server 2008, and for a given project created a bare repository to which I push from my local development environment.  I'd like to set up a hook that causes my staging environment to merge the pushed changes automatically on every push.</p>

<p>I'd posted a previous bash script but have now updated this to the below:</p>

<pre><code>#!/bin/sh
export GIT_WORK_TREE=F:\\inetpub\\project_name\\staging\\
export GIT_DIR=F:\\inetpub\\project_name\\staging\\.git
git pull origin master
</code></pre>

<p>And get the following error message:</p>

<p>remote: bash.exe: warning: could not find /tmp, please create!<br>
remote: From F:/GitStack/repositories/project_name<br>
remote:  * branch            master     -> FETCH_HEAD<br>
remote: error: unable to create directory for f:/inetpub/project_name/staging/.git/refs/remotes/origin/master<br>
remote:  ! c8f4278..80cbe73  master     -> origin/master  (unable to update local ref)<br>
To <a href=""http://me@mydomain.com:9999/project_name.git"">http://me@mydomain.com:9999/project_name.git</a>
   c8f4278..80cbe73  master -> master
updating local tracking ref 'refs/remotes/origin/master'</p>

<p>I'm not sure where to go from here - any tips?</p>
",0,1777613,,
39419360,1102835,9/9/2016 20:37,7,5193,<git><bash><shell><githooks>,git pre receive hook to check commit message,"<p>I am trying to write a pre-receive hook to check the pattern of the commit messages using bash/shell. </p>

<p>I want to reject the entire push if any commit has issues. How to retrieve the commit messages?</p>
",0,1102835,,
58295748,10541642,10/9/2019 1:02,6,14537,<python-3.x><anaconda><githooks><miniconda><pre-commit.com>,pre-commit hook failing for a Python project,"<p>I have a <code>Python</code> project that when I try to commit (through miniconda) with:</p>

<pre><code>$ git add -A &amp;&amp; git commit -m `test`
</code></pre>

<p>I get the following failure:</p>

<pre><code>(base) D:\machinelearning.com-python&gt;git commit -m 'test'
[WARNING] Unstaged files detected.
[INFO] Stashing unstaged files to C:\Users\anon/.cache\pre-commit\patch1570560215.
Trim Trailing Whitespace.................................................Passed
Check for added large files..............................................Passed
Check python ast.........................................................Passed
Check JSON...........................................(no files to check)Skipped
Check for merge conflicts................................................Passed
Check Xml............................................(no files to check)Skipped
Check Yaml...........................................(no files to check)Skipped
Debug Statements (Python)................................................Passed
Fix End of Files.........................................................Passed
Fix requirements.txt.................................(no files to check)Skipped
Mixed line ending........................................................Passed
Flake8...................................................................Passed
isort....................................................................Failed
hookid: isort

Files were modified by this hook. Additional output:

Fixing D:\machinelearning.com-python\scripts\train_model.py

[INFO] Restored changes from C:\Users\anon/.cache\pre-commit\patch1570560215.
</code></pre>

<p>The last line failed.</p>

<p>Any idea on how to solve this issue?</p>

<p>Thanks!</p>
",0,10541642,0,0
39420794,1102835,9/9/2016 22:59,0,325,<git><github><githooks>,Git rev list empty branch until current commit,"<p>I am writing a pre-receive hook. My remote branch doesn't have any commits yet. My local branch has several commits. </p>

<p>In the hook, I am not able to get all the commits from empty branch until recent commits. I tried 
<code>git rev-list &lt;recent-commit&gt;</code>
<code>git rev-list 4b825d..&lt;recent-commit&gt;</code></p>

<p>as per <a href=""https://gist.github.com/lucaswerkmeister/08eb5e54db95d17f42b1"" rel=""nofollow"">link</a> (line #32).</p>
",3,1102835,0,0
20479794,156767,12/9/2013 20:13,28,11420,<git><githooks><git-stash>,How do I properly git stash/pop in pre-commit hooks to get a clean working tree for tests?,"<p>I'm trying to do a pre-commit hook with a bare run of unit tests and I want to make sure my working directory is clean.  Compiling takes a long time so I want to take advantage of reusing compiled binaries whenever possible.  My script follows examples I've seen online:</p>

<pre><code># Stash changes
git stash -q --keep-index

# Run tests
...

# Restore changes
git stash pop -q
</code></pre>

<p>This causes problems though.  Here's the repro:</p>

<ol>
<li>Add <code>// Step 1</code> to <code>a.java</code></li>
<li><code>git add .</code></li>
<li>Add <code>// Step 2</code> to <code>a.java</code></li>
<li><code>git commit</code>
<ol>
<li><code>git stash -q --keep-index</code> # Stash changes</li>
<li>Run tests</li>
<li><code>git stash pop -q</code> # Restore changes</li>
</ol></li>
</ol>

<p>At this point I hit the problem.  The <code>git stash pop -q</code> apparently has a conflict and in <code>a.java</code> I have</p>

<pre><code>// Step 1
&lt;&lt;&lt;&lt;&lt;&lt;&lt; Updated upstream
=======
// Step 2
&gt;&gt;&gt;&gt;&gt;&gt;&gt; Stashed changes
</code></pre>

<p>Is there a way to get this to pop cleanly?</p>
",0,156767,0,0
58398995,119775,10/15/2019 16:24,50,29937,<git><githooks><pre-commit><pre-commit.com><python-black>,black as pre-commit hook always fails my commits,"<p>I'm trying to use <a href=""https://pre-commit.com/"" rel=""noreferrer"">pre-commit</a> to manage <a href=""https://github.com/psf/black/blob/master/README.md"" rel=""noreferrer"">Black</a> as a Git pre-commit hook, but I must be doing it wrong.</p>
<p>In my pre-commit config file I have:</p>
<pre><code>-   repo: https://github.com/psf/black
    rev: 19.3b0
    hooks:
    -   id: black
</code></pre>
<p><strong>What I'm expecting to happen</strong> is for Black to just modify the staged file, and for the commit to succeed. Because the whole point of Black is that it auto-enforces Python code style rules, no questions asked.</p>
<p><strong>What actually happens</strong> when I stage a (non-black-compliant) file and try to commit: Black goes ahead and modifies the file to make it compliant, as intended... But the problem is that it returns a &quot;fail&quot;. So the commit fails. And then I have to unstage the file, then restage it before committing again... and only then does the commit succeed.</p>
<p>This is a huge annoyance and can't possibly be the intended workflow?</p>
<p>What am I doing wrong?</p>
",1,119775,0,0
39537830,610585,9/16/2016 18:20,9,2102,<git><whitespace><githooks><jestjs>,exclude Jest snapshots from git whitespace check,"<p>I am trimming whitespace from git commits using <code>git diff-index --check --cached HEAD --</code>.  I want to add Jest tests using snapshots, but the snapshot files include whitespace and my tests will always fail if I remove it.  So I want to exclude the <code>*.js.snap</code> files from the whitespace check.  How do I tell git to exclude <code>*.js.snap</code> (or, alternatively, <code>**/__snapshots/*</code>) files from <code>git diff-index</code>?  I'm using bash on OSX.</p>

<p>In the meantime, I'm working around the problem by changing my commit hook to be interactive:</p>

<pre><code># If there are whitespace errors, print the offending file names and fail.
git diff-index --check --cached HEAD --
if [ $? -ne 0 ]; then
    # Allows us to read user input below, assigns stdin to keyboard
    exec &lt; /dev/tty

    while true; do
        echo ""Your commit introduces trailing whitespace.  Are you sure you want to commit? y/n""
        read yn
        case $yn in
            y ) exit 0;;
            n ) exit 1;;
        esac
    done
fi
</code></pre>
",0,610585,0,0
58452501,12237365,10/18/2019 14:04,4,53,<java><github><commit><githooks>,How to prohibit commits if they do not contain some Issue(s),"<p>Good morning, everyone,
For a project in Java on github, I have to use github functions like ""issues"". For this purpose all ""commits"" must contain at least one exit. To prevent my team from making dead-end commits I must therefore check before each commits.
GitHooks is the perfect tool for this work. Only, to implement a Windows compatible script.</p>

<p>On a linux environment, I know how to interrupt the commit but I don't know how to get the content of the commit that will be able to check the condition.</p>
",0,12237365,0,0
58501060,187964,10/22/2019 9:24,2,38,<git><githooks>,How to provide the commit-msg hook message back to the user?,"<p>I'm using <strong>husky</strong> and <strong>commitlint</strong> to enforce a style on git commits.</p>

<p>I'm a CLI guy so I can read the stderr directly in the terminal to know what I messed up in the commit message.</p>

<p>Other contributors prefer to avoid the terminal using different tools to interact with git.</p>

<p>How can I let them know why their commit is rejected?</p>

<p>I'm thinking about adding the output of the hook to <code>.git/COMMIT_MSG</code> so I can edit my message while reading at the reason it failed with a simple <code>git commit -eF .git/COMMIT_MSG</code>. I'm just not sure this flow is supported by other tools/IDE.</p>
",0,187964,,
20609816,1578653,12/16/2013 11:29,54,74629,<windows><git><version-control><githooks>,Git pre-commit hook is not running on Windows,"<p>I'm just starting to look into Git hooks, but I can't seem to get them to run.</p>
<p>I set up a local repository, so there is now a '.git' directory in my project folder. I have added a '.cmd' file into the C:/path/to/my/project/.git/hooks directory named 'pre-commit.cmd'. Here is the contents of this file:</p>
<pre><code>echo &quot;HOOK RUNNING&quot;
echo. 2&gt;C:/path/to/my/project/.git/hooks/EmptyFile.txt
</code></pre>
<p>This should echo the text &quot;HOOK RUNNING&quot; and create an empty text file in that directory. However, if I commit changes through my IDE (<a href=""https://en.wikipedia.org/wiki/NetBeans"" rel=""noreferrer"">NetBeans</a>) or use <a href=""https://superuser.com/questions/1053633/what-is-git-bash-for-windows-anyway"">Git Bash</a> to commit, neither of them seem to run my pre-commit hook, as no file is created.</p>
<p>My understanding is that all you have to do to get a hook to run is add an executable with the name of the hook (as I have done). Am I doing something wrong?</p>
<p>Note: This is on a Windows 7 PC.</p>
",1,1578653,0,0
39710788,2054629,9/26/2016 19:24,1,213,<git><push><githooks>,git prepush hook: get branches pushed to,"<p>How can I get a list of the branches that are being pushed to in the context of a pre push hook? I know how to get the current branch, but it can differ from the one/many branches being pushed to.</p>

<p>I've thought of parsing the command, but I'm worried I might forget about some cases. Like <code>git push</code>, <code>git push origin master</code> will both push to master etc.</p>
",0,2054629,0,0
58558054,1321643,10/25/2019 11:54,2,778,<git><bitbucket><git-merge><githooks>,Squash some commits in the pull request but not all of them on Bitbucket,"<p>Is there a way to merge some of the commits when merging a pull request but not all of them?</p>

<p>I know that one of the merge strategies is to squash all of the commits into one when merging. However, what I am looking for is to be able to squash all commits that have a specific template for the message e.g ""update something *"" into one commit which is the latest commit.  How can I achieve that?</p>

<p>Is it a server side git hook? or a custom merge strategy? Is that even possible?</p>
",7,1321643,,
58560171,8087112,10/25/2019 14:08,1,286,<git><notifications><slack><slack-api><githooks>,Generate Slack notification for certain files using GIT,"<p>Is there any way to send notifications in Slack when there are commits on certain files?
I am migrating a system but the system being migrated is still evolving. I would like to receive a message from the files I have already migrated that were changed in the previous project, so I can keep my code always up to date.</p>

<p>The stack is Git + GitLab, but I'd like to use Git's own hooks.</p>

<p>Can anyone help me with this?</p>
",0,8087112,,
58621257,4571173,10/30/2019 8:30,1,189,<git><gitlab><githooks>,How to prevent 'develop' from beeing merged into 'release'?,"<p>We're using GitFlow and have several branches (develop, release/x.xx and master). We create release/x.xx branch from develop in a week before release. This week we work on 2 versions: we do bugfix (in release) and develop new features (in develop). The normal flow is to make a branch from develop and then merge it back to develop or to make a branch from release and then merge it back to release. But sometimes the developers forget this and accidentally make a branch from develop and merge it into release... We need some protection from such accidental merges.  What is the best way to prevent such a merge (develop -> feature -> release)?</p>

<p>We've got version.data file in repository and it's different in develop and release branches. Maybe writing some server-side hook that allows to change version.data only in develop will solve the problem?</p>

<p>We use GitLab Community edition as a git server.</p>
",1,4571173,,
20813385,3141668,12/28/2013 10:17,3,1141,<git><githooks>,Git hooks - How to copy files from one folder to another folder within same git branch,"<p>I am creating/updating files under ""locales/US/en/"" folder. These files should be auto copied and commit into another folder ""content/en-US"" with in same branch during git push/post-commit. Could you share your inputs about how to write git hooks for above requirement?</p>
",2,3141668,,
39841026,2092842,10/3/2016 21:56,3,1786,<git><jenkins><githooks>,How to remotely trigger just one build at a time in Jenkins?,"<p>This is an extension or variant of <a href=""https://stackoverflow.com/questions/12794568/how-to-configure-git-post-commit-hook"">How to configure Git post commit hook</a></p>

<p>The problem I have is that I <em>do not</em> want one build per commit. What I want instead is trigger a single instance of a build at a time. While that single instance is running, new requests can accumulate, but they should be consolidated into a single new build once the current build completes.</p>

<p>Obviously, the triggering should be on git revisions which are meaningfully related, usually from the same branch, and the build should always execute on the triggering revision closest to HEAD (does that make sense?).</p>

<p>So, for the sake of this question, assume everyone is pushing to master, and I place a git hook to trigger the build. How do I make it so that pending requests are merged into a single requests instead of queuing up as separate builds?</p>

<p>This behavior is trivially configurable by using polling, but I don't want to use polling for a variety of unrelated reasons (large number of jobs + need to poll multiple repos consumed by a single job).</p>

<p><a href=""https://stackoverflow.com/questions/8974170/jenkins-parameterized-job-that-only-queues-one-build"">Jenkins parameterized job that only queues one build</a> offers one possibility: Use a ""launcher"" job which terminates quickly and launches the actual working job with ""Combine Queued git hashes"". The problem with this approach is that the launcher job needs to check out the repo prior to launching the working job. Given a large git repo, this introduces an unacceptable delay.</p>
",3,2092842,0,0
39912814,607874,10/7/2016 8:29,1,61,<git><githooks><git-commit>,Git enforce commit of file pairs,"<p>In my git repository I have a file <code>workflow.vsd</code> that represents a diagram created in Microsoft Visio.  </p>

<p>Since not everybody in our team has Visio installed, whoever changes the <code>workflow.vsd</code> must also generate a correspondent <code>workflow.png</code>.  </p>

<p>The problem is that quite often, people commit a new version of the <code>vsd</code> file and forget to commit the <code>png</code>, making the image outdated.</p>

<p>Is there some way for git to allow a commit only if both <code>workflow.vsd</code> and <code>workflow.png</code> are added under the same commit hash?</p>

<p>In other words, I want to commit the Visio project only and only if png is also commited:</p>

<pre><code>git add workflow.vsd worflow.png
git commit
</code></pre>

<p>and this should fail:</p>

<pre><code>git add workflow.vsd
git commit
</code></pre>
",1,607874,,
20894126,41613,1/2/2014 23:51,2,654,<git><shell><unix><vagrant><githooks>,How does git show the pre-commit hook a different index?,"<p>Change your <code>.git/hooks/pre-commit</code> to the following:</p>

<pre><code>#!/bin/bash
git status
sleep 10000
</code></pre>

<p>Change some file, but do not stage it with <code>git add</code>. Then run <code>git commit -a</code>.</p>

<p>You should see something like:</p>

<pre><code># On branch master
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#   modified:   somefile.txt
</code></pre>

<p>And then it will wait on the <code>sleep</code> call. In the meantime, open up another shell window and run <code>git status</code>. You should see:</p>

<pre><code># On branch master
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   somefile.txt
</code></pre>

<p>The different git calls are seeing a different index, with pre-commit hook seeing the index as it is about to be committed according to whether commit was invoked with -a/--all or not, but the same git commands in other shells are not affected.</p>

<p>My problem is <strong>I have a script that sees the index as if git were running in another shell</strong> when it's installed as the pre-commit hook, instead of seeing the index that pre-commit hooks are supposed to see. I would like to get it to see the 'pre-commit index', or at least understand how it works that the index looks different in different shells.</p>

<p>The script does something (with vagrant) wherein it would not be seen as having the same parent PID or environment, and perhaps that's related.</p>

<hr>

<p>update: Possibly has something to do with index vs index.lock?</p>
",2,41613,,
20894496,856498,1/3/2014 0:32,3,2141,<github><githooks>,Is there a GitHub issue webhook?,"<p>So I am unclear on GH docs as to whether their webhook supports issue notification. It sounds like it support webhooks. However when I set up test endpoints nothing comes, even when I test payload.</p>

<p>I am using ultrahook.com as well as requestb.in to catch requests but nothing comes. </p>

<p>Are github webhooks even working? Has anyone got it to work?</p>
",3,856498,0,0
39977618,2192137,10/11/2016 12:48,2,109,<linux><git><githooks>,Enforcing and creating Git policies,"<p>I have been tasked with changing Git a bit, and have failed to find anything of relevance on the interwebs - and I am in dire need of directions.</p>

<p>What we have:
a bunch of branches, with the main being <code>test</code> (basically <code>develop</code>) and <code>master</code> branches. <code>master</code> is untouched most of the times.</p>

<p>Now, I have created a continuous integration environment using TeamCity, Jira and Crucible as well as a service written by myself.</p>

<p>What we want to achieve:</p>

<ol>
<li>disallow pushing to <code>test</code> - unless it's TeamCity</li>
<li>reject push on feature branch if the Jira issue of id==branchName is in wrong state</li>
</ol>

<p>Now, 
ad1) I have no clue how is such a thing achieved. I might be simply misunderstanding what Git helpers were saying to me, but as I read, I can either disallow completely, or allow completely.</p>

<p>ad2) is nominally easy, as I understand a pre-push hook script has to be used, but it also has to be placed on each dev's local git repository, or can I enforce that somehow?</p>
",3,2192137,,
2022438,115504,1/7/2010 17:58,8,1962,<git><perl><githooks>,Disallow deletion of master branch in git,"<p>I’m trying to setup a git hook that will disallow anyone to delete the <code>master</code>, <code>alpha</code>, and <code>beta</code> branches of our repository. Can anyone help with this? I have never done a git hook, so I don’t want to try my luck in developing my own without a little help.</p>
",0,115504,0,0
40054798,2179275,10/15/2016 4:00,1,97,<git><openshift><githooks>,Sync bitbucket branch with Openshift,"<p>How can I sync Bitbucket branch with <code>openshift:master</code> ?</p>

<p>I develop on my local desktop and I push my work into a branch named <code>bitbucket:uat</code>. Each time I push on <code>bitbucket:uat</code> I need after to run :
<code>git push openshift uat:master</code></p>

<p>Is there a way to automatically push into <code>openshift:master</code> at the same time I push into <code>bitbucket:uat</code> ?</p>

<p>(I use Openshift v2)</p>
",0,2179275,0,0
58905328,5017647,11/17/2019 21:22,1,311,<bash><git><ssh><environment-variables><githooks>,Export doesn't work when called from ssh session created through post-receive hook,"<p>I have this Git post-receive hook in a remote repository that runs a bunch of commands in an SSH session:</p>

<pre><code>#!/bin/bash
ssh -q admin@node-one &lt;&lt; EOF
    export GOPATH=~/go
    export PATH=$GOPATH/bin:$PATH
    echo $PATH
    echo $GOPATH
    cd ~/portfolio
    ./kill.sh
    git pull
    make build
    ./run.sh
EOF

</code></pre>

<p>And I am getting an error related to goimports not being found because <code>export</code> does not seem to work in this situation. </p>

<pre><code>remote: /usr/lib/git-core:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games
remote: 
</code></pre>

<p>I can manually run the hook and it works just fine, but for some reason, it doesn't work when I run it through a <code>git push</code> from a remote repository.</p>
",0,5017647,0,0
21117814,260528,1/14/2014 15:52,2,963,<git><githooks>,git hook for git stash apply?,"<p>Is there a git hook that gets applied after I run <code>git stash apply</code>? If so, what is it? More generically, is there a single commit hook that gets run after a merge,rebase,stash, etc. Basically any time a file changes due to a git operation. In lieu of a single hook, I'd accept a list of hooks for the following: post merge, post rebase, post checkout, post stash apply.</p>
",1,260528,,
21119293,1665365,1/14/2014 16:57,2,74,<git><githooks>,Git setting to allow force update of certain branches,"<p>On our git server we have a git config of</p>

<pre><code>[receive]
    denyDeletes = true
    denynonfastforwards = true
</code></pre>

<p>This is a very sensible setting as it stops mistaken force updates on the <em>important</em> branches. However there are many branches that it would be useful to force update. </p>

<p>Rather than having this global setting is there an easy way to achieve this functionality.</p>

<p>I assume it possible through a git pre-recieve hook, however I am not sure how I would check whether the push is a forced non fast forward.</p>

<p>I'm aware there are complete solutions through Git hosting software such as gitolite, but I'm looking to achieve this on a simple ssh based server.</p>
",0,1665365,,
58972724,293195,11/21/2019 10:29,1,165,<git><githooks>,What all git hooks can be called in a bare repository?,"<p>Am I mistaken that only <code>pre-receive</code>, <code>update</code> and <code>post-receive</code> hooks can ever be called inside a <code>bare</code> git repository created with <code>git init --bare</code> ? Are there other hooks which might become relevant?</p>
",3,293195,0,0
21125079,18149,1/14/2014 22:12,1,79,<git><githooks>,Do git hooks push and pull?,"<p>If I have a local repository pulled from a remote one, and I add <a href=""http://githooks.com/"" rel=""nofollow"">git hooks</a> to my local repository before I push it back to the remote one, do the hooks go to the remote repo with the code?  </p>
",0,18149,0,0
2314500,2933,2/22/2010 21:50,12,11571,<git><bash><gitosis><githooks><git-post-receive>,Git post-receive hook not working,"<p>We're using git with a central repo (using Gitosis). I've created a post-receive hook to generate an email to the dev mailing list whenever changes are pushed to the central repo, and to generate documentation from the documentation folder in the git repo.</p>

<p>Therefore, in ~git/ I've got a directory, we'll call it 'a' that contains a clone of the git repo. The post-receive hook looks like:</p>

<pre><code>#!/bin/bash
cd ~git/repositories/a.git
. ~git/post-receive-email &amp;&gt; /dev/null
( cd ~git/a &amp;&amp; git pull &amp;&gt; ~git/pull_log.log &amp;&amp; php ~git/a/scripts/generate_markdown_documentation.php &amp;&gt; ~git/doc_log.log )
</code></pre>

<p>The email script is working, but the documentation generation is not. The content of pull_log.log is:</p>

<pre><code>fatal: Not a git repository: '.'
</code></pre>

<p>Which makes me think that it's not changing to the correct directory in line 5 of the above script. Am I wrong? How can I get this to work?</p>

<p><strong>Edit:</strong> I've updated the post-receive hook as suggested in the responses. The script is now:</p>

<pre><code>#!/bin/bash
function die {
  echo ""$*"" &gt;&amp;2; exit 1
}

function checkgit {
  [ -d ""$1/.git"" ] || die ""$1 could not possibly be a git repo; $1/.git is not a dir""
}


cd ~git/repositories/a.git
. ~git/post-receive-email &amp;&gt; /dev/null
( set -x
checkgit ~git/a
cd ~git/a
checkgit .
pwd
git pull
php ~git/a/scripts/generate_markdown_documentation.php )
</code></pre>

<p>And I get the following output from git push:</p>

<pre><code>+ checkgit /var/git/a
+ '[' -d /var/git/a/.git ']'
+ cd /var/git/a
+ checkgit .
+ '[' -d ./.git ']'
+ pwd
/var/git/a
+ git pull
fatal: Not a git repository: '.'
+ php /var/git/a/scripts/generate_markdown_documentation.php
</code></pre>

<p>Any more help?</p>

<p>Oh, and if I run the script myself, it works (I run it by saying hooks/post-receive)</p>

<p>Discovered the problem, thanks to <a href=""https://serverfault.com/questions/107608/git-post-receive-hook-with-git-pull-failed-to-find-a-valid-git-directory"">serverfault</a> -- basically, environment variables <code>GIT_DIR</code> and <code>GIT_WORK_TREE</code> are set when the hook runs, and these affect git pull adversely.  Unsetting the variables fixes the problem.</p>
",3,2933,0,0
21211887,165103,1/19/2014 0:53,3,652,<git><githooks>,Removing files from commit in pre-commit hook,"<p>I have the following git pre-commit hook</p>

<pre><code>#!/bin/sh
cd ""$(git rev-parse --show-toplevel)""
make clean
git rm $(git ls-files --deleted)
</code></pre>

<p>However when I commit, the deleted files are unstaged.</p>

<p>And when I abort the commit, the files are gone from both the index and the working tree.</p>

<p>Is there a way to delete the files from the commit as well?</p>
",0,165103,,
59058809,683905,11/26/2019 20:22,1,552,<git><githooks>,Prevent post-commit hook after cherry-pick,"<p>Is there a way to prevent running post-commit hook after cherry pick? I would like to run post commit hook specifically only after <code>git commit</code>. Or is there a way to figure out inside the hook that the commit has been cherry-picked? This is possible for <a href=""https://stackoverflow.com/questions/3921409/how-to-know-if-there-is-a-git-rebase-in-progress"">example for rebase</a>, but that's a different case.</p>
",0,683905,0,0
21304977,228660,1/23/2014 10:07,1,342,<git><bash><githooks><uglifyjs>,Bash Script -exec syntax,"<p>I’m trying to make a Git hook bash script that minifies my JavaScript code. 
So far I have come up with this, it just prints the minified JavaScript when I run the script:</p>

<pre><code>#!/bin/sh
find js/ -type f -maxdepth 3 -name \*.js -exec uglifyjs {} +
exit
</code></pre>

<p>I’m not sure how to give the <code>uglifyjs</code> any commands and what the output filename should be.</p>

<p>In the terminal it would be:</p>

<pre><code>uglifyjs -o js/app.js js/app.js
</code></pre>

<p>So I’m not sure how to reference the file names etc?</p>
",0,228660,,
59215855,630780,12/6/2019 15:20,0,94,<git><commit><githooks>,Git commit hook for when editor closed,"<p>I have implemented a commit hook to check the commit message and abort the commit if the message isn't formatted correctly. I've done this with the <code>commit-msg</code> hook. </p>

<p>However, this will only work if you commit with the <code>-m</code> flag. If you omit that flag (because you want to use your editor to add the message), then the commit hook will fail (no message).</p>

<p>From what I have read, both the <code>pre-commit</code> and <code>commit-msg</code> hook are fired before the editor is opened. Is there a way to do something similar that waits for the editor to be closed?</p>
",0,630780,,
40414978,3044139,11/4/2016 3:49,1,209,<github><jenkins><jenkins-plugins><githooks>,How to config Jenkins to build any branch whenever it committed to GitHub,"<p>I'd like to config jenkins that builds any branch whenever it committed to GitHub.
I did as below:</p>

<ul>
<li>At Source Code Management, I chose Git and Branch Specifier was **</li>
<li>At Build Triggers, I chose <code>Build when a change is pushed to GitHub</code></li>
</ul>

<p>I tried to commit to branch (ex: fixBugAAA), but jenkins built all branches.
What did I do wrong? I just need to build only one branch I committed (ex: in this case fixBugAAA). How to do that?
Thanks.</p>
",2,3044139,,
59229611,2066083,12/7/2019 19:51,0,1296,<git><github><hook><githooks>,How can I use a pre-push git hook to check whether certain files or directories different between the local and the remote branch?,"<p>... and more specifically, why can't I programmatically fetch a file?</p>

<p>I am new to writing git hooks.  I want to be able to perform action X if a configuration file is changed since the last push. I have thought of two approaches:</p>

<p>1) get the relevant file from github and run diff.</p>

<p>2) scan the commit history since the last push for the presence of the file, using the information you get for free in a pre-push git hook (looks like this when I log it):</p>

<pre><code>Name of the remote to which the push is being done: origin
URL to which the push is being done: git@github.com:&lt;me&gt;/&lt;myrepo&gt;.git
local ref: refs/heads/&lt;mybranch&gt;
local sha1: c83288a9e0b2a5c9f7b1940360e052b2d4468222
remote ref: refs/heads/&lt;mybranch&gt;
remote sha1: 164c55a9af0abee06bc03e91e162301ebf2bb097
</code></pre>

<p>Right now I'm trying (1) because it feels more obvious to me. I'm not sure how to use that information to inspect all the commits for changes to the relevant file. But I'm stuck because
<code>curl https://raw.githubusercontent.com/&lt;repo-owner&gt;/&lt;repo&gt;/docs-and-config/config/config.yml</code>as well as trying a GET command in Postman both return 404s -- I would understand not authorized, but I get not found.  If I visit the same url in my browser, I can reach it (and GitHub attaches some kind of token to it).  </p>

<p>So I have two questions: </p>

<p>(1) why is this happening and can you tell me how I can fetch the remote file?
(2) do you have better ideas for how I can approach this task?</p>
",0,2066083,,
59303165,1404324,12/12/2019 11:05,2,186,<git><ssh><synchronization><githooks>,Syncing code between local and remote computer,"<p>I am trying to find a efficient way of syncing a project of mine that I am coding on my Mac and running on a Linux server which I login via SSH using a password. Also I need to login to a VPN to be able to connect to server. The project is about deep learning and that's why I am using the server. But the problem is I am having issues when it comes to share the folder between those systems. I have looked through internet for a solution and find some, however I am not sure whether if they would work. </p>

<p>Here is a timeline of my work to give better insight;</p>

<ol>
<li>Develop some code on laptop and test it whether it works. </li>
<li>Send the code to the server.</li>
<li>Run it real this time for different parameters on server. </li>
<li>After execution save the models to server. </li>
<li>Send the models and other information that has been saved on the server to the laptop. </li>
</ol>

<p>Previously, I was using git to those all things. However I have been facing merge conflicts occasionaly.</p>

<p>A solution with git that automatically pulls the code from github to server when I pushed a commit from laptop would work great for me, I think. However I do not know how to automatically send the models to my laptop with that way. Any help is appreciated. </p>
",0,1404324,,
57861133,11835391,9/9/2019 21:01,2,514,<git><githooks><bitbucket-server><bitbucket-api>,Is there a way to cherrypick in BitBucket Server API or BitBucket rest api?,"<p>I am trying to create a BitBucket hook that would get triggered when a PR is merged to one of the release branches. After that it would identify which release branches are newer, open a feature branch for each of the newer release branches. After, it would cherry-pick commits from the PR to each of 
the new feature branches.
This is a similar workflow to Auto-Merge in BitBucket. Unfortunately automated merge doesn't work for our repository.</p>

<p>I am using Custom Hook in BitBucket setting it to trigger on PR merge. However I can't find any way to cherry-pick a commit using <a href=""https://docs.atlassian.com/bitbucket-server/javadoc/4.0.7/api/reference/com/atlassian/bitbucket/commit/Commit.html"" rel=""nofollow noreferrer"">BitBucket Server API</a>
Neither do I see a way using <a href=""https://docs.atlassian.com/bitbucket-server/rest/5.16.0/bitbucket-rest.html"" rel=""nofollow noreferrer"">BitBucket REST API</a></p>

<p>I don't even see a way to create a commit which could work, If I could provide a changeset.</p>

<p>The only way, I can figure out this can be done, is to use <code>gitCommandBuilderFactory</code> to checkout the repository and cherry-pick afterwards. But that seems like a very expensive operation for BitBucket server to run, especially  if there are multiple release branches to work with.</p>
",2,11835391,,
19924981,2545680,11/12/2013 9:07,2,466,<git><githooks>,post-receive hook fails - any chance to see why?,"<p>I'm implementing <a href=""http://toroid.org/ams/git-website-howto"" rel=""nofollow"">this</a> approach to send updates to my website:</p>

<p>created bare repository to push to</p>

<pre><code>$ mkdir website.git &amp;&amp; cd website.git
$ git init --bare
</code></pre>

<p>And added the following hook:</p>

<pre><code>$ mkdir /var/www/example.com
$ cat &gt; hooks/post-receive
#!/bin/sh
GIT_WORK_TREE=/var/www/example.com git checkout -f
$ chmod +x hooks/post-receive
</code></pre>

<p>when I push to website.git from local repository, the update works fine. But no files are added into <code>/var/www/example.com</code>. How can I investigate what could be wrong here? Any kind of log or something?</p>

<p>EDIT ----------------------</p>

<p>The problem is fixed if I push to <code>master</code> branch on <code>repoRemote</code>, not <code>demo</code>. Why is so?</p>
",0,2545680,0,0
57914909,11899547,9/12/2019 21:48,1,452,<git><version-control><githooks>,How to make a update hook that prevents non-UTF-8 file encoding,"<p>I need to prevent server-side non-UTF-8 files from being pushed into the repository. I wrote the script below, but at line 12 the command <code>file -bi &lt;file&gt;</code> does not work because the file is not found.
I want to check the encoding of versions of files that are ""coming"" in push.</p>

<p>My intention is: First I list the files that are in diff, then I go one by one and check encoding and lastly if it's UTF-8 ok ...if not i reject a push and send msg error</p>

<pre class=""lang-sh prettyprint-override""><code>#!/bin/sh -xv

refname=""$1""
oldrev=""$2""
newrev=""$3""
filesDiff=""`git diff-tree --no-commit-id -r ${newrev} | awk '{print $6}'`"" 
numFiles=""`git diff-tree --no-commit-id -r ${newrev} | wc -l`""

for (( i=1; i&lt;=$numFiles; i++ ))  
    do
        arquivo=`echo $filesDiff | awk '{print $'$i'}'`
        encoding=`file -bi $arquivo | awk '{print $2}'`
        if $($encoding | grep -q 'utf-8'); then
            exit 0
        else
            echo ""O arquivo $arquivo precisa estar com encoding UTF-8""
            echo ""Atualmente o ${encoding}.""
            echo ""Verifique maiores informações em:""
            echo ""https//:site.com.br/etc/etc""
            exit 1
        fi
    done
</code></pre>

<p>The out of <code>file -bi &lt;file&gt;</code> is open...</p>
",0,11899547,0,0
39006695,3262003,8/17/2016 21:39,4,1026,<git><hash><githooks>,How to get ALL hashes that are being committed in a pre-receive hook?,"<p>I am writing a pre-receive hook for Git. This is the one where if multiple commits are pushed, and any one of them fail, then the whole push fails. Which is what I want.</p>

<p>My problem is that not all the hashes from all commits are passed in. Only the most recent commit hash is, e.g.</p>

<p>2 commits are being pushed to a repo:</p>

<pre><code>Commit 1 - 4b5w&lt;br&gt;
Commit 2 - 6gh7 -------------&gt; passed in to pre-receive hook, 
                               but I want the previous hash too.
</code></pre>

<p>I can't use the update hook which is called for each ref, because I don't want any commits to go through if any one of them fails, e.g. commit 1 passing and commit 2 failing is not acceptable, as I would have to somehow rollback commit 1 when commit 2 fails.</p>

<p><strong>How do I get the hashes from ALL commits being passed to the pre-receive hook?</strong></p>
",0,3262003,0,0
39007911,353137,8/17/2016 23:48,0,120,<git><githooks>,How to program git to do things before commit?,"<p>I have been looking at git hooks but haven't been able to figure this out: When the user commits a file to my git repository, I want to automatically update another file in the repo and add those changes to that same commit, and also run some commands based on what is in the commit message. Is there a way to do this? The <code>pre-commit</code> git hook seems to run before the commit message is produced.</p>
",0,353137,,
57917520,7232907,9/13/2019 5:00,2,3535,<git><visual-studio-code><githooks><husky>,How do i make Visual Studio Code save changes in files before commit?,"<p>I have often made a commit, and then noticed that one of the files i was working on wasn't saved, and therefore were left out of the commit.</p>

<p>I have my current project set up with Husky, and have automated things like testing / linting before commit or push. </p>

<p>Here is the current Husky setup, just to give an idea of where a script could fit in.</p>

<pre class=""lang-js prettyprint-override""><code> ""husky"": {
    ""hooks"": {
      ""pre-commit"": ""pretty-quick --staged &amp;&amp; ng lint"",
      ""pre-push"": ""ng test --browsers ChromeHeadless --watch=false &amp;&amp; testcafe -c 4 chrome:headless test""
    }
  }
</code></pre>

<p><strong>Is there any way to make visual studio or Husky save all open files pre-commit?</strong></p>
",1,7232907,,
19962392,1107376,11/13/2013 19:13,1,47,<git><githooks>,Git hook that prevents branch from ever being up-to-date,"<p>I'm writing a git based deployment solution, which supports multiple users and multiple repos.  I would prefer it if, every time a user pushes a ref, the update hook would be called, regardless of whether the remote version is up to date.</p>

<p>The rationale is that deployments can often fail for reasons outside of the code, and I would rather users not have to modify a file in order to retry a deployment.</p>

<p>How can I ensure that the ref is never up-to-date, and an update hook is always called.</p>

<p>I should add that simply failing (non-zero return) the update after deploying isn't desirable, since that causes the client to receive a non-zero error code, and the objects that were sent would need to be resent (i.e. nothing gets cached)</p>
",2,1107376,,
19988972,1525241,11/14/2013 21:40,0,1752,<git><vim><githooks><ctags>,Effortless Ctags in Vim,"<p>I followed Tim Pope's blog post on <a href=""http://tbaggery.com/2011/08/08/effortless-ctags-with-git.html"" rel=""nofollow"">effortless ctags with git</a> however it doesn't seem to work. </p>

<p>The output of <code>git ctags</code></p>

<pre><code>fatal: cannot exec '.git/hooks/ctags': Permission denied
</code></pre>

<p>I have followed the instructions as he as explained. 
My <code>~/.git_template/hooks</code> folder has the following files. </p>

<pre><code>ctags  post-checkout  post-commit post-merge post-rewrite 
</code></pre>

<p>I have tried reinitializing a repository and committing but neither seems to generate the ctags. </p>
",0,1525241,,
19991294,2438080,11/15/2013 0:32,2,531,<git><tsql><sql-server-2005><githooks><git-post-receive>,GIT hook updated T-SQL database on commit,"<p>I have googled this for an hour now and have yet to find a solution.  Is there a way to write a GIT hook that will put the git message from a commit into a SQL Server database on postreceive? What I'd like to do is store a table in my database with all my commits, and much like bitbuckets issue tracker, I would like to close issues in another table if the commit message is something like ""close issue #2"". </p>
",2,2438080,0,0
39133970,2272598,8/24/2016 22:29,0,16,<git><githooks>,How to commit remote files on git pull?,"<p><strong>The problem:</strong></p>

<p>There is a php script on my server changing some files in a dir called ""example/"". This changed files are ""uncommitted"", ok. So, to bring this changes I need to:</p>

<ul>
<li>login in the server</li>
<li>go to site directory</li>
<li>set git bare=false</li>
<li>add and commit all</li>
<li>set bare=true</li>
<li>finally git pull the changes to work in local!</li>
</ul>

<p>This is a very boring work and I would to know if there is a way or script to do it automatic. Maybe the git hooks could help to do this tasks but I can't find anything about this problem.</p>

<p>Or (if exists) some git command to remote update from local.</p>

<p>Sorry my english. ^^</p>
",0,2272598,,
1011557,62871,6/18/2009 8:50,55,37984,<git><githooks>,Is there a way to trigger a hook after a new branch has been checked out in Git?,"<p>Is there a way to trigger a hook after a new branch has been checked out in Git?</p>
",0,62871,0,0
39252692,6638357,8/31/2016 14:43,2,648,<git><drools><githooks><kie>,git hook doesn't work with kie drools workbench,"<p>I am trying to sync a gitlab repository with the local git repository of my kie workbench project. 
I have created a project @ github to test automatic syncing with a post-commit hook and managed to get it to work when committing changes of a local repo but when I try the same with my workbench git repo it doesn't sync changes.
The steps I followed were:</p>

<ol>
<li>I created a new repository and project in workbench</li>
<li>I set the origin url for my gitlab repository in <code>C:\jboss-eap-7.0\bin\.niogit\project.git</code> using <code>git remote set-url origin https://username:password@gitlab_URL/project_owner/project.git</code></li>
<li>I added the post-commit file from my other project (the one I have tested on github)</li>
<li>Added a rule in order to have something in the project change and saved changed in order to commit (so that the post commit would execute)</li>
</ol>

<p>Nothing happened. post-commit has the following lines:</p>

<pre><code>#!/bin/sh

exec git push -u origin master
</code></pre>

<p>Do you have any idea why this happens?</p>
",0,6638357,0,0
20232695,1064824,11/27/2013 2:16,1,121,<git><githooks>,git pre-push hook leaves local branch ahead of origin by 1 commit,"<p>I'm trying to commit an automatic ""build"" file when doing a regular <code>git push</code>. So far I've tried to add the following to my git <code>pre-push</code> hook:</p>

<pre><code>git add build.js
git commit -m ""automatic build file""
</code></pre>

<p>It works in a sense that the push goes through, and I see 2 commits as expected: one is whatever I previously committed, and another is the one from the hook: ""automatic build file"".</p>

<p>The problem is when I do <code>git status</code> immediately after the push, I see the following:</p>

<pre><code>Your branch is ahead of 'origin/master' by 1 commit.
</code></pre>

<p>Even though this is a little strange (because when I <code>git checkout staging</code> and <code>git merge master</code>, I see the automated commit there as well). When I remove the hook and do a <code>git push</code> in master after that, I don't think anything changes - it just fixes my local branch and the message is gone.</p>

<p>Is there a more proper way to sneak in an automated commit before the push? Or if I'm already doing it the right way, how do I get rid of the message?</p>
",0,1064824,0,0
58180202,296427,10/1/2019 7:45,1,493,<git><githooks>,How to install new git hook to all existing (cloned) repositories?,"<p>I have ~50 repositories on my machine. I would like to install newly created git hook to all of them. </p>

<p>I've already created <code>.git-templates</code> folder and put hooks there, then <code>git config --global init.templatedir ~/.git-templates</code> - it works for new repositories but what about existing ones?</p>
",0,296427,,
39298706,462291,9/2/2016 18:27,1,53,<git><push-notification><githooks>,Git is Ignoring Configured Values,"<p>I'd been using git 1.7.1 on a CentOS 6-based box but I needed to update to 1.7.12.4. To do this I had to compile and install from source, which went without a (reported) hitch.</p>

<p>However, now whenever I push anything I get the following error:</p>

<pre><code>remote: *** hooks.mailinglist is not set so no email will be sent
</code></pre>

<p>This is strange, because the server's /etc/gitconfig has:</p>

<pre><code>[hooks]
    mailinglist = foo@bar.com
</code></pre>

<p>but when I did <code>git config --global --list</code>, it didn't show up.</p>

<p>I added it manually via <code>git config --global hooks.mailinglist ""foo@bar.com""</code> and now it shows up when I do <code>git config --global --list</code>:</p>

<pre><code>hooks.mailinglist=foo@bar.com
</code></pre>

<p>but pushes still get the same error: <code>remote: *** hooks.mailinglist is not set so no email will be sent</code></p>

<p>Is my system-wide configuration being overridden somewhere?</p>

<p><strong>Edit</strong></p>

<p>If I create a symlink from the server's git user's <code>~/.gitconfig</code> to <code>/etc/gitconfig</code>, things behave as expected. But I'm still unsure as to why the global/system settings are being ignored.</p>
",4,462291,,
20435593,156767,12/6/2013 23:46,4,773,<git><bash><githooks>,git diff during pre-commit hook results in Not a git repository,"<p>I'm trying to build a pre-commit script in git.  In that script I plan on running tasks if a certain folder has changed.  To test, in my script I have</p>

<pre><code>git diff --cached | grep -q ""^my/folder""
</code></pre>

<p>This results in...</p>

<pre><code>Not a git repository
To compare two paths outside a working tree:
usage: git diff [--no-index] &lt;path&gt; &lt;path&gt;
</code></pre>

<p><code>pwd</code> says I'm in the correct directory and <code>$GIT_DIR</code> is <code>.git</code>.  I was lead to belive that <code>--cached</code> was the special sauce to get this working in a hook.  Is there a way to do this?</p>
",0,156767,0,0
39489274,1293303,9/14/2016 11:26,2,1244,<python><git><githooks><post-receive-email>,How to debug / correctly setup git-multimail,"<p>I would like to use <a href=""https://github.com/git-multimail/git-multimail"" rel=""nofollow"">git-multimail</a> as post receive hook in one of my git repositories (no gitolite used). Unfortunately, I cannot get it work, and I have hardly any experience using Python.</p>

<h2>What I did so far:</h2>

<ol>
<li>I added the following block to the <code>project.git/config</code> file:</li>
</ol>

<p>&nbsp;</p>

<pre><code>[multimailhook]
    mailingList = email@example.com
    from = email@example.com
    envelopeSender = email@example.com
    mailer = smtp
    smtpServer = smtp.mydomain.com
    smtpUser = myUser
    smtpPass = myPassword
</code></pre>

<p>Please note that I do not know whether ""smtp"", which is defined in the <code>mailer</code> variable, is installed on my machine.</p>

<ol start=""2"">
<li>I copied the current <code>git_multimail.py</code> file into <code>project.git/hooks</code>.</li>
<li>I created a <code>project.git/hook/post-receive</code> file with the following content. The file is executable, I copied this from <a href=""https://github.com/git-multimail/git-multimail/blob/master/git-multimail/post-receive.example"" rel=""nofollow"">https://github.com/git-multimail/git-multimail/blob/master/git-multimail/post-receive.example</a></li>
</ol>

<p>&nbsp;</p>

<pre><code>#! /usr/bin/env python

import sys
import os
import git_multimail

config = git_multimail.Config('multimailhook')

try:
    environment = git_multimail.GenericEnvironment(config=config)
    #environment = git_multimail.GitoliteEnvironment(config=config)
except git_multimail.ConfigurationException:
    sys.stderr.write('*** %s\n' % sys.exc_info()[1])
sys.exit(1)

mailer = git_multimail.choose_mailer(config, environment)

git_multimail.run_as_post_receive_hook(environment, mailer)
</code></pre>

<h2>What happens:</h2>

<p>When I push a change, a file <code>project.git/hooks/git_multimail.pyc</code> is created, but no email is sent.</p>

<p>Doing a configuration test using <code>GIT_MULTIMAIL_CHECK_SETUP=true python git_multimail.py</code> as described on <a href=""https://github.com/git-multimail/git-multimail/blob/master/doc/troubleshooting.rst"" rel=""nofollow"">https://github.com/git-multimail/git-multimail/blob/master/doc/troubleshooting.rst</a> tells me that <code>git-multimail seems properly set up</code></p>

<p>Is there a way to log something like an output of the script? What can I do to find out what is not working? Are there even errors in my files?</p>

<p>Thanks in advance.</p>
",1,1293303,,
39490150,584405,9/14/2016 12:11,21,22992,<git><jenkins><githooks><multibranch-pipeline>,How to remotely trigger Jenkins multibranch pipeline project build?,"<p>Title mostly says it. How can you trigger a Jenkins multibranch pipeline project build from a remote git repository?</p>

<p>The ""Trigger builds remotely"" build trigger option does not seem to work, since no tokens that you set are saved.</p>
",0,584405,0,0
58358733,287436,10/12/2019 21:33,0,1734,<git><vue.js><nginx><githooks><vue-cli>,Pushing the `dist` directory of a vue-cli project to a subfolder of an nginx server using git hooks,"<p>I created a Vue project with vue-cli. My production code gets built to a <code>dist</code> folder locally. Currently, when I commit that code and push to its origin, there is a post-receive hook set up to deploy the contents of that <code>dist</code> folder to the root of a server - <code>http://site_name.com</code>. What I want to do is have that <code>dist</code> folder go to a subfolder of the server, <code>http://site_name.com/highlights</code>. How do I do this?</p>
",0,287436,,
58359369,1869192,10/12/2019 23:19,0,307,<git><githooks><lint>,"How to keep track of debug code in DEV branch, but remove it on MASTER","<p>I have a problem related with GIT.
Imagine this branch schema:</p>

<pre><code> MASTER
   |
  DEV
   |
FEATURE1
</code></pre>

<p>Where ""<strong>DEV</strong>"" is the branch where we review the code, and the debug code (in this case, <code>console.log</code> and similar) should NOT be included there, and 'FEATURE1' is where I do my work, and for that I want to keep debug code tracked.</p>

<p>I'm using 2 hooks (pre-commit &amp; post-commit):</p>

<p><a href=""https://pastebin.com/jhDVQhES"" rel=""nofollow noreferrer"">pre-commit</a></p>

<p><a href=""https://pastebin.com/yNQJK6an"" rel=""nofollow noreferrer"">post-commit</a></p>

<p>This works if I commit the changes in the ""<strong>DEV</strong>"" branch, since it basically clones the changes, stashes them before the commit and un-stashes them after, but that misses the point of having a ""<strong>FEATURE</strong>"" branch, and will only allow me to have the debug code locally (I might need to full checkout the project in a different device and I want to be able to recover my debug code...)</p>

<p>The workflow I got until now is basically commiting normally to the FEATURE branch, and then cherrypick it in the DEV branch like so:
<code>git cherry-pick -x COMMITid --no-commit; git commit --reuse-message=COMMITid</code></p>

<p><strong>---- TD;DR ----</strong></p>

<p>I'm looking for a way to remove console.log when commiting/merging to specific branches (<em>master</em> &amp; <strong>dev</strong>, in this case)</p>
",4,1869192,0,0
20551613,500270,12/12/2013 18:42,6,3135,<git><githooks><git-tag>,"git pre-push hook, don't run if is --tags","<p>I have a prepush hook that tests my code, however, it also runs when I do a <code>git push --tags</code>.  Is there any way to avoid this?</p>

<p>Maybe there's some way to check if its a regular push or if its a <code>--tags</code> push?</p>

<p><strong>Update</strong> - These are the only arguments I was able to find:</p>

<ul>
<li>$1 is the name of the remote</li>
<li>$2 is url to which the push is being done</li>
</ul>
",0,500270,,
39667727,2501747,9/23/2016 18:54,1,128,<git><babeljs><githooks>,Babel not working in git hook,"<p>I want to babel some project files after pushing on the server.
Therefore I use a <code>post-receive</code> hook which calls the following line</p>

<pre><code>/usr/bin/gulp babel --branch $branch --path $i
</code></pre>

<p>where $branch is <code>devel</code> and $i is <code>server/server.js</code></p>

<p>This is my gulp file:</p>

<pre><code>var gulp = require('gulp'),
    gprint = require('gulp-print'),
    notify = require('gulp-notify'),
    babel = require('gulp-babel'),
    gWatch = require('gulp-watch');
var argv = require('yargs').argv;


gulp.task('default', ['watch-js', 'watch-all']);

// run with gulp babel --branch devel --path server/server.js
gulp.task('babel', function() {
    console.log('argv path: ',argv.path);
    console.log('argv branch: ',argv.branch);
    if (argv.path.indexOf('server/') == 0) {
        return gulp.src(argv.path, { base: './' })
                .pipe(babel()) 
                .pipe(gulp.dest('../wikaike-'+argv.branch+'-deployed'))
                .pipe(gprint(function(filePath){ return ""File processed: "" + filePath; }));
    } else {
        return;   
    }
});
</code></pre>

<p>If I run the command this way I get this output:</p>

<pre><code>[18:35:11] Using gulpfile /var/www/wikaike-devel/gulpfile.js
[18:35:11] Starting 'babel'...
argv path:  server/server.js
argv branch:  devel
[18:35:15] File processed: ../wikaike-devel-deployed/server/server.js
[18:35:15] Finished 'babel' after 4.36 s
</code></pre>

<p>but if I push I get this one:</p>

<pre><code>remote: [18:47:20] Using gulpfile /var/www/wikaike-devel/gulpfile.js
remote: [18:47:20] Starting 'babel'...
remote: argv path:  server/server.js
remote: argv branch:  devel
remote: abort: 0��� ������$0������
remote: 
remote: ==== Stack trace ============================================
remote: 
remote: Security context: 0x3733462d &lt;JS Object&gt;#0#
remote:     1: /* anonymous */ [/var/www/wikaike-devel/node_modules/is-utf8/is-utf8.js:~2] (this=0x373346d5 &lt;JS Global Object&gt;#1#,bytes=0x57528e71 &lt;a Buffer&gt;#2#)
remote:     2: /* anonymous */(aka /* anonymous */) [/var/www/wikaike-devel/node_modules/vinyl-fs/node_modules/strip-bom/index.js:9] (this=0x37308091 &lt;undefined&gt;,arg=0x57528e71 &lt;a Buffer&gt;#2#)
remote:     3: /* anonymous */(aka /* anonymous */) [/var/www/wikaike-devel/node_modules/vinyl-fs/lib/src/getContents/bufferFile.js:11] (this=0x37308091 &lt;undefined&gt;,err=0x37308081 &lt;null&gt;,data=0x57528e71 &lt;a Buffer&gt;#2#)
remote:     4: /* anonymous */ [fs.js:266] (this=0x373346d5 &lt;JS Global Object&gt;#1#,er=0x37308081 &lt;null&gt;)
remote:     5: /* anonymous */ [/var/www/wikaike-devel/node_modules/vinyl-fs/node_modules/graceful-fs/graceful-fs.js:102] (this=0x373346d5 &lt;JS Global Object&gt;#1#,er=0x37308081 &lt;null&gt;)
remote:     7: oncomplete [fs.js:107] (this=0x575292e9 &lt;an Object&gt;#3#)
remote:     8: arguments adaptor frame: 1-&gt;0
remote: 
remote: ==== Details ================================================
remote: 
remote: [1]: /* anonymous */ [/var/www/wikaike-devel/node_modules/is-utf8/is-utf8.js:~2] (this=0x373346d5 &lt;JS Global Object&gt;#1#,bytes=0x57528e71 &lt;a Buffer&gt;#2#) {
remote:   // stack-allocated locals
remote:   var i = 11629
remote:   // expression stack (top to bottom)
remote:   [02] : 0
remote:   [01] : 2019638
remote: --------- s o u r c e   c o d e ---------
remote: function (bytes)?{?    var i = 0;?    while(i &lt; bytes.length)?    {?        if(     (// ASCII?                    bytes[i] == 0x09 ||?                    bytes[i] == 0x0A ||?                    bytes[i] == 0x0D ||?                    (0x20 &lt;= bytes[i] &amp;&amp; bytes[i] &lt;= 0x7E)?                )?          ) {?    ...
remote: 
remote: -----------------------------------------
remote: }
remote: 
remote: [2]: /* anonymous */(aka /* anonymous */) [/var/www/wikaike-devel/node_modules/vinyl-fs/node_modules/strip-bom/index.js:9] (this=0x37308091 &lt;undefined&gt;,arg=0x57528e71 &lt;a Buffer&gt;#2#) {
remote:   // expression stack (top to bottom)
remote:   [02] : 0x57528e71 &lt;a Buffer&gt;#2#
remote:   [01] : 0x373346d5 &lt;JS Global Object&gt;#1#
remote:   [00] : 0x44fecad1 &lt;JS Function&gt;#4#
remote: --------- s o u r c e   c o d e ---------
remote: function (arg) {??if (typeof arg === 'string') {???return arg.replace(/^\ufeff/g, '');??}???if (Buffer.isBuffer(arg) &amp;&amp; isUtf8(arg) &amp;&amp;???arg[0] === 0xef &amp;&amp; arg[1] === 0xbb &amp;&amp; arg[2] === 0xbf) {???return arg.slice(3);??}???return arg;?}
remote: -----------------------------------------
remote: }
remote: 
remote: [3]: /* anonymous */(aka /* anonymous */) [/var/www/wikaike-devel/node_modules/vinyl-fs/lib/src/getContents/bufferFile.js:11] (this=0x37308091 &lt;undefined&gt;,err=0x37308081 &lt;null&gt;,data=0x57528e71 &lt;a Buffer&gt;#2#) {
remote:   // expression stack (top to bottom)
remote:   [03] : 0x57528e71 &lt;a Buffer&gt;#2#
remote:   [02] : 0x37308091 &lt;undefined&gt;
remote:   [01] : 0x44fecaf5 &lt;JS Function&gt;#5#
remote:   [00] : 0x57524f79 &lt;a File&gt;#6#
remote: --------- s o u r c e   c o d e ---------
remote: function (err, data) {?    if (err) {?      return cb(err);?    }?    file.contents = stripBom(data);?    cb(null, file);?  }
remote: -----------------------------------------
remote: }
remote: 
remote: [4]: /* anonymous */ [fs.js:266] (this=0x373346d5 &lt;JS Global Object&gt;#1#,er=0x37308081 &lt;null&gt;) {
remote:   // expression stack (top to bottom)
remote:   [03] : 0x57528e71 &lt;a Buffer&gt;#2#
remote:   [02] : 0x37308081 &lt;null&gt;
remote:   [01] : 0x37308091 &lt;undefined&gt;
remote:   [00] : 0x57527ca9 &lt;JS Function&gt;#7#
remote: --------- s o u r c e   c o d e ---------
remote: function (er) {?      if (size === 0) {?        // collected the data into the buffers list.?        buffer = Buffer.concat(buffers, pos);?      } else if (pos &lt; size) {?        buffer = buffer.slice(0, pos);?      }??      if (encoding) buffer = buffer.toString(encoding);?      return callback(er, buffer);?...
remote: 
remote: -----------------------------------------
remote: }
remote: 
remote: [5]: /* anonymous */ [/var/www/wikaike-devel/node_modules/vinyl-fs/node_modules/graceful-fs/graceful-fs.js:102] (this=0x373346d5 &lt;JS Global Object&gt;#1#,er=0x37308081 &lt;null&gt;) {
remote:   // expression stack (top to bottom)
remote:   [02] : 0x37308081 &lt;null&gt;
remote:   [01] : 0x373346d5 &lt;JS Global Object&gt;#1#
remote:   [00] : 0x57529081 &lt;JS Function&gt;#8#
remote: --------- s o u r c e   c o d e ---------
remote: function (er) {?    onclose()?    cb(er)?  }
remote: ---------------/var/opt/gitlab/git-data/repositories/root/wikaike.git/hooks/deploy-hook: line 42: 26701 Bus error               /usr/bin/gulp babel --branch $branch --path $i
</code></pre>

<p>To make it short: Babel is not working if starting using my post-receive hook. But the script works on the server (started with the git user)</p>

<p>Any idea what's happening?</p>
",4,2501747,0,0
58575177,5017647,10/26/2019 22:21,2,1042,<linux><git><githooks><git-commit>,Git hooks not getting pushed to bare repository,"<p>I have a bare repository on a host machine and a local repository on my laptop.
I have 2 hooks: one pre-commit and one post-receive hook. Both are in my local hook folder:</p>

<pre><code>malek@laptop:~/Desktop/portfolio-website/.git/hooks$ ls
post-receive  pre-commit
</code></pre>

<p>And of course, I push my local repository to the remote repository (my local pre-commit hook works fine) but my hooks are not updated on my bare remote repository.</p>

<pre><code>malek@laptop:~/Desktop/portfolio-website/.git/hooks$ git push -u origin --all
Branch 'master' set up to track remote branch 'master' from 'origin'.
Branch 'production' set up to track remote branch 'production' from 'origin'.
Everything up-to-date
</code></pre>

<p>As you can see below:</p>

<pre><code>malek@localhost:~/portfolio-website/hooks$ ls
applypatch-msg.sample      pre-applypatch.sample      pre-rebase.sample
commit-msg.sample          pre-commit.sample          pre-receive.sample
fsmonitor-watchman.sample  prepare-commit-msg.sample  update.sample
post-update.sample         pre-push.sample
</code></pre>

<p>The <code>git log master</code> command returns</p>

<pre><code>commit 3403657fc4d08f406416711255cf04390a2df070 (HEAD -&gt; master)
Author: “Malek &lt;“myemail@gmail.com”&gt;
Date:   Sat Oct 26 18:06:06 2019 -0400

    Write Makefile and hooks

commit 484c283a9faf0afed14328c9b71e635338c86187 (production)
Author: “Malek &lt;“myemail@gmail.com”&gt;
Date:   Tue Oct 22 00:17:11 2019 -0400

    Master branch creation
</code></pre>

<p>Why aren't my hooks updated on my remote repository if the commit was sent successfully?</p>
",3,5017647,0,0
20689608,455301,12/19/2013 19:00,1,53,<git><svn><githooks><dcommit>,how can I create an archive before git svn dcommit?,"<p>I'm trying to create a zip archive of my project when I push to the svn server. My old setup would use a post-receive hook on the remote git repo to do this. However, I'm now using svn and I don't own the svn server so I can't put anything over there. I've set up the following pre-push hook but this isn't running on <code>git svn dcommit</code>:</p>

<pre><code>$cat .git/hooks/pre-push
#!/bin/sh
git archive -o foo_bar.zip --prefix foo_bar/ master
</code></pre>

<p>Any ideas on which hook I could use?</p>

<p>Thanks!</p>
",0,455301,,
20745414,1737273,12/23/2013 14:19,1,984,<git><jenkins><githooks>,How to trigger jenkins build when some developer push changes to GIT,"<p>I would like to know how to tell jenkins to trigger a build only when someone from team pushed changes to a project.</p>

<p>i tried :enabled polling in Jenkins(did not mention any polling time/no value) and enabled post-receive hook.
 And pushed changes to the same repository from a developer box(In this developer bix, we did not configure any hooks).
This did not work.</p>

<p>when ""post-receive"" git hook get called?.</p>
",1,1737273,,
20903548,3046550,1/3/2014 12:20,1,105,<git><github><githooks><github-pages>,Automatically updating files from another branch,"<p>My situation is the following: I have two branches, master and gh-pages. There are some files that are common between those branches, and I have to manually sync them with <code>git cherry-pick</code>.</p>

<p>That's a tedious and error-prone task, so I wanted to know if there is a way to do this automatically, for example using some git hook(maybe verifying if those common files are exclusively present, or using some command-line flag.</p>

<p>One example of my workflow would be:</p>

<pre><code>git checkout master
... 
git add common-file1.txt
git commit -m ""did something with that file""
git checkout gh-pages
git cherry-pick master's HEAD
</code></pre>

<p>To clarify, only some of the files are ""shared"" between those branches, they are not the same branch, and each have some files that the other doesn't. When I do <code>git cherry-pick</code>, I'm getting a commit that only have some of these common files in it.</p>
",4,3046550,0,0
2039773,247748,1/11/2010 3:38,11,5316,<git><git-push><githooks>,Have remote git repository refuse merge commits on push,"<p><strong>What I want to do:</strong></p>

<p><em>I want to <strong>disallow</strong> any <strong>merge commits</strong> to be <strong>pushed</strong> to the central repository.  The <strong>only exception</strong> being if the merge is between branches that exist in the central repository.  I want to enforce this at the central repository.</em></p>

<p><strong>Explanation of why I want to do this:</strong></p>

<p><em>Note: If this explanation throws you off the trail of what I want to do, then ignore the explanation.  Of course I'm happy to hear other ways to solve the issue I explain below, but the answer I'm interested in is to what I want to do as stated above.</em></p>

<p>I have a central git repository with a branch that several developers track.  Each developer has a remote configured for that central repository's branch.</p>

<p>We follow a synchronous commit policy for this project, so each developer must always rebase their latest work on top of the remote branch HEAD before pushing.  I would like to enforce this policy by disallowing any merge commits to ever be pushed to the central repository.  The only exception being if the merge is between branches that exist in the central repository.</p>

<p>To simplify, I do not want developer's local tracking branches to ever be merged with the remote branch.  But rather always be rebased on the remote branch.</p>

<p>We've partly enforced this on the developer's machine by setting branch.NAME.rebase = true which helps avoiding problems if the developer uses git pull, however we need a solution to enforce this on the central repository side.</p>

<p>A very base solution would be to refuse commits with the comment: ""Merge branch 'NAME' of GITURL"", however, something more along the lines of checking if all parents of a commit exist in the central repository's branch paths would be more interesting.</p>

<p>Suggestions? Solutions?</p>

<p><strong>Edit:</strong></p>

<p>This is what I have so far:</p>

<pre><code>#!/bin/sh
read sha1old sha1new refname

# check if this is merge commit
merge_commit=""`git rev-list --parents --merges --no-walk $sha1new 2&gt; /dev/null`""
if test -n ""$merge_commit""
then
  # this was a merge commit
  # $merge_commit contains: sha1new sha1parent_1 ... sha1parent_n
fi
exit 0
</code></pre>

<p>The place it gets troublesome is determining whether the ancestry of any two parents originate from a single branch.  Also, because pre-receive hook is called before any refs are updated, if a push contains commits for two branches that exist in the remote, including a merge between those two branches, then I have no idea what the solution would be here...</p>
",2,247748,0,0
40002577,2965993,10/12/2016 15:30,5,386,<python><git><githooks>,Prevent pdb or pytest set_trace from being committed using a pre commit hook,"<p>I'd like to create a git pre commit hook that prevents an uncommented <code>pytest.set_trace()</code> or a <code>pdb.set_trace()</code> and other <code>.set_trace()</code>. This is because I debug from the command line often and sometimes forget that I left the debug statement in the code. By using a pre commit hook, I should be able to avoid this in the future.</p>

<p><a href=""http://blog.keul.it/2013/11/no-more-pdbsettrace-committed-git-pre.html"" rel=""noreferrer"">Keul's Blog</a> has a solution for this but the session has to be in the root directory of the git repo for it to work or it will complain.</p>

<p>I basically want the <code>not</code> equivalent of this to work in <code>grep</code></p>

<pre><code>#(\s+)?.*\.set_trace\(\)
</code></pre>

<p>See the <a href=""http://regexr.com/3ee33"" rel=""noreferrer"">regexr</a> test</p>

<p>Thanks</p>
",0,2965993,0,0
40003498,131227,10/12/2016 16:17,0,35,<git><continuous-integration><githooks>,"How do I update & commit a file in a checkout hook, and should I?","<p><strong>Some background:</strong><br>
I have a beef with CI systems in that they are triggered on a pull request, but not on target branch updates.</p>

<p>Consider 2 pull requests with no merge conflicts, but they have logical conflicts with each other. Each passes the CI push &amp; pr tests.</p>

<p>The first is merged to master. Now merging the second with master would cause a logical problem. However, there are no merge conflicts and the CI status says we are good to go because the tests were run on older code.<br>
In short: It looks good, but is bad.</p>

<p><strong>My thoughts on a fix:</strong><br>
Force a conflict.
On any branch of off master, have a git-checkout hook update a timestamp file. Now that timestamp can be merged into master if it's the next merge, but will conflict with anyone else doing work.</p>

<p>Now, a branch that has no conflicts and passes CI builds is guaranteed good to go.
Does that sound right? </p>

<p><strong>Requirement:</strong><br>
I need a hook that updates the timestamp file and commits it locally on any branch off of master. How would I do that?</p>

<p>Thanks.</p>
",0,131227,,
2050450,6236,1/12/2010 16:25,27,8144,<git><githooks>,Git hooks management,"<p>We use custom-written Git hooks in our project. </p>

<p>Hooks are stored in a project's repository, and, when they do change, to get a new version each user must copy them manually in his .git/hooks directory. This is rather inconvenient.</p>

<p>One way to improve this is to make .git/hooks a symlink into worktree. But this would imply that each branch (even user's local feature branches under development) should have the most current version of hooks. This is not convenient as well.</p>

<p>How would you solve the problem?</p>
",0,6236,0,0
40087406,178728,10/17/2016 13:15,1,564,<git><github><githooks><webhooks>,Github hooks: creating a branch triggers both create and push,"<p>I have configured a couple of github webhooks for working with my team:</p>

<ol>
<li>One for when a member of the team pushes to a branch</li>
<li>Another one for when someone on the team creates a new branch</li>
</ol>

<p>The problem is with (2); After I create a new branch like below:</p>

<pre><code>git checkout -b test master
git push -u origin test
</code></pre>

<p>both <code>create</code> <strong>and</strong> <code>push</code> hooks are triggered. However in this case I only need <code>create</code> to be triggered. Is there something I am doing wrong here? </p>

<p>My hooks are the following:</p>

<pre><code>{
  ""name"": ""web"",
  ""active"": true,
  ""events"": [
    ""create""
  ],
  ""config"": {
    ""url"": ""http://myurl/create"",
    ""content_type"": ""json""
  }
}
</code></pre>

<p>and </p>

<pre><code>{
  ""name"": ""web"",
  ""active"": true,
  ""events"": [
    ""push""
  ],
  ""config"": {
    ""url"": ""http://myurl/push"",
    ""content_type"": ""json""
  }
}
</code></pre>

<p>Thanks</p>
",0,178728,0,0
40156102,6329667,10/20/2016 13:38,12,5246,<git><githooks>,Git hook automatic installation,"<p>I am working in big project with many repositories with many branches and people who works with them. We have commit message standard but people are people and sometimes make this commit massages incorrect. That's why i create a git commit hook and now i need some how to install it on all users local repositories. </p>

<p>So the question is it possible to install this commit hook automatically not to ask users about it?  </p>
",4,6329667,0,0
21154380,599813,1/16/2014 6:00,3,108,<git><bash><githooks><git-remote>,How can I reject git pushes on an origin repo from a local repo if it does not pass unit tests?,"<p>I have an origin repo that I have full access to and I don't want code to be pushed successfully to this repo unless the code being pushed successfully passes my unit tests. I saw many examples of .git/hooks/update scripts and they seem to break down into a few categories that do not fit my use case.  </p>

<p>For example, in (<a href=""http://git-scm.com/book/en/Customizing-Git-An-Example-Git-Enforced-Policy"" rel=""nofollow"">http://git-scm.com/book/en/Customizing-Git-An-Example-Git-Enforced-Policy</a>), the script accesses files locally in the <code>.git/hooks/</code> directory (ACL example) or <strong>individual</strong> files in the new or old SHAs.</p>

<p>I need to do an entire build process on all the new files as if I were in the directory of the new commit and were running  </p>

<h1>.git/hooks/update</h1>

<pre><code>#!/usr/bin/bash
mvn test
exit $?
</code></pre>
",0,599813,0,0
40166200,5133552,10/20/2016 23:40,2,1067,<git><github><jira><githooks><webhooks>,Git hook: once a branch is merged into master - update JIRA status,"<p>I am new to writing git hooks. 
Here's what I'd like to do:</p>

<p>Once a branch XYZ is merged into master (on remote); write a hook that changes the status of a JIRA ticket associated with branch XYZ from ""pending approval"" to ""prod ready"".</p>

<p>My research into this so far:</p>

<ol>
<li>I've figured JIRA Rest API can allow me to do this (using <code>POST</code>
transaction + <code>OAuth API</code>). </li>
<li>Git hooks can be written in many languages
    (and I figured python would be the easiest for me as I am well
    versed in it) .  </li>
<li>I should be implementing either <code>post-merge</code> or
        <code>post-receive</code> git hook to do this. The hook would essentially get the
        Branch name (my branch name is enforced to be the same as Jira name)
        ; and then do a POST using JIRA API to change the status as
        mentioned above. </li>
<li>There is such a thing as ""web hooks"" that are also
            an option for folks using github. My repo at the moment is github
            deployed into the organization..but we might be moving toward
            bitbucket; in which case I am concerned that webhooks will no longer be useful...</li>
</ol>

<p>My questions:</p>

<ol>
<li>Is it possible to accomplish this task? </li>
<li><p>If so, what githook should I
    be using? <code>post-merge</code> or <code>post-receive</code>? </p></li>
<li><p>Should I be using web hooks or
        githook? </p></li>
<li><p>Can anyone point me to an example to get me started?</p></li>
</ol>

<p>Thanks</p>
",2,5133552,0,0
59003027,7808889,11/22/2019 23:19,1,52,<linux><git><ssh><githooks>,post-receive hook cannot execute some commands if I push changes from local machine,"<p>I have a problem with <code>post-receive</code> hook. The hook's task is to deploy just received code to webserver directory and send only latest commit message to PHP script.
Hook's code (in bare repo at server machine):</p>

<pre><code>#!/bin/sh

# prod dir
TARGET=""/var/www/html/repo""

# temp dir
TEMP=""/srv/tmp/repo""

# git repo
REPO=""/srv/git/repo.git""

mkdir -p $TEMP
git --work-tree=$TEMP --git-dir=$REPO checkout -f

cd $TEMP

cd /
rm -rf $TARGET
mv $TEMP $TARGET

cd $REPO
read oldrev newrev _branch
tail=$(git log -1 --pretty=format:'%s%b' $newrev)
curl -G 'http://example.com/phpscript.php' -d ""msg=$tail""
</code></pre>

<p>There are two machines in local network:</p>

<ul>
<li>""server"" machine with Ubuntu 18.04 LTS; </li>
<li>local machine Windows 10, using ""git-bash"" to manage repository</li>
</ul>

<h3>""server"" machine (Ubuntu)</h3>

<p>There is a bare repo configured in <code>/srv/git/repo.git</code> directory AND that repo cloned into <code>/home/bob/projects/repo</code>. Group <code>gitusers</code> owns <code>/srv/git</code> directory and has rwx permissions. <code>bob</code> also is member of <code>gitusers</code> group.</p>

<p>While I push changes from local repo on this machine, there is no problem. Hook is executing, pushed code is deployed to webserver, php script is called, latest commit message added to DB. Fine.</p>

<p>Problem is with local machine with Windows.</p>

<h3>local machine (Windows)</h3>

<p>There is a <code>repo</code> cloned via SSH. I SSH'ed as <code>bob</code> who is member of <code>gitusers</code> and have permissions. (The fact <code>bob</code> wasn't member of <code>gitusers</code> was my earlier problem with SSH connection). Also remote is added as <code>ssh://bob@servermachineip/srv/git/repo.git</code>.</p>

<p>And at this moment I get a following error (I've pushed sample changes):</p>

<pre><code>Enumerating objects: 7, done.
Counting objects: 100% (7/7), done.
Delta compression using up to 8 threads.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (4/4), 474 bytes | 474.00 KiB/s, done.
Total 4 (delta 2), reused 0 (delta 0)
remote: mkdir: cannot create directory '/srv/tmp/repo': Permission denied
remote: fatal: this operation must be run in a work tree
remote: hooks/post-receive: 15: cd: can't cd to /srv/tmp/repo
remote: rm: cannot remove '/var/www/html/repo/index.html': Permission denied
remote: mv: cannot stat '/srv/tmp/repo': No such file or directory
remote:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
remote:                                  Dload  Upload   Total   Spent    Left  Speed
remote: 100    19    0    19    0     0    106      0 --:--:-- --:--:-- --:--:--   106
remote: Logged to remote db
To ssh://servermachineip/srv/git/repo.git
   24d56db..ab886dd  master -&gt; master
</code></pre>

<p>So it seems hook for some reason cannot execute commands while executed remotely via ssh? I don't know how to solve this problem. Searched two days for answer, tried with settings permissions but I guess I definitely miss some details :/</p>

<p>Also, hook cannot execute linux commands like mkdir, rm or move, but it executes curl command and latest commit message is sent to DB properly :O</p>

<p>How can I solve given problem? </p>

<p>Thank you in advance</p>

<p>EDIT: </p>

<p><strong><code>/srv</code> permissions</strong></p>

<pre><code>total 8
drwxr-xr-x 4 root users 4096 lis 21 23:33 git
drwxr-xr-x 2 root users 4096 lis 22 23:31 tmp
</code></pre>

<p><strong><code>/srv/tmp</code> exists but is empty</strong></p>

<pre><code>total 0
</code></pre>

<p><strong><code>/var/www/html/repo</code> permissions</strong></p>

<pre><code>total 1780
drwxr-xr-x 5 root root    4096 lis 22 23:31 assets
-rw-r--r-- 1 root root     702 lis 22 23:31 index.html
drwxr-xr-x 3 root root    4096 lis 22 23:31 js
</code></pre>
",2,7808889,,
40234910,1928380,10/25/2016 8:23,0,427,<git><git-merge><githooks>,git post-merge hook doesn't seems to work,"<p>I have a post-merge hook defined. I just want to test it, so I simply wrote</p>

<pre><code>#! /bin/sh
echo ""just merged""
</code></pre>

<p>But I don't have any unusual output when merging.</p>

<p>Thanks ahead.</p>
",2,1928380,,
21243316,2152181,1/20/2014 20:16,1,87,<php><wordpress><git><githooks><bitbucket-server>,Git hook and wordpress git pull page not found,"<p>So I was searching and can't find how to set up git hook with wordpress</p>

<p>I added a deploy.php to my public_html directory where is my wordpress blog!</p>

<p>so when I commit to git stuff, something server doesn't pull it and when I type www.example/depoly.php</p>

<p>it shows error 404 page not found its there any way to make wordpress avoid that file and just execute content:<code>&lt;pre&gt;
&lt;?php system(""git pull"");?&gt;
&lt;/pre&gt;</code></p>

<p>ANY HELP THANKS:) </p>
",0,2152181,,
40328438,104380,10/30/2016 11:10,1,1152,<javascript><windows><git><githooks>,Git pre-commit hook to run `npm test` on CMD (Windows),"<p>I've created a <code>.bat</code> (<code>pre-commit-tests.bat</code>) file with the content:</p>
<pre><code>cd ../../BUILD
npm test
</code></pre>
<p>in the project's <code>.git\hooks</code> directory.</p>
<p>when I do commit, it seems to show the CMD window for a brief second and close it, I don't know why my tests are not running or how to keep the CMD window open even after it finishes, so at least maybe read any output (if there's a problem).</p>
<p>If I manually run <code>npm test</code> (which is a task configured in my <code>package.json</code> file, then it does work and the tests are running (takes about 4 seconds to run). <br>
<em>(complex mocha tests running on slimerjs)</em>.</p>
<h3>I'm using TortoiseGit to configure Git hooks like so:</h3>
<p><a href=""https://i.stack.imgur.com/wLVxD.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/wLVxD.png"" alt=""enter image description here"" /></a></p>
<p>Why doesn't it run the command using the hook correctly?<br>
Did I write the hook file wrong?</p>
",4,104380,0,0
21334493,931156,1/24/2014 13:55,34,7922,<git><githooks>,git commit in pre-push hook,"<p>I have added something like that in <code>pre-push</code> hook:</p>

<pre><code>gs0=$(git status)
pip-dump
gs1=$(git status)
if [ ""gs0"" != ""gs1"" ]
then
    git commit -m ""pip-dump""
fi
</code></pre>

<p>(this is updating my pip requirements file)</p>

<p>It seems that the push is not pushing the new commit, but the one which the HEAD was on at the beginning of the script.</p>

<p>How to fix that?</p>
",1,931156,0,0
21335220,394663,1/24/2014 14:31,1,3974,<git><githooks><pre-commit><gjslint>,Does GIT cache pre-commit hooks,"<p>Due to gJSLint spewing out errors because of missing member documentation.  We updated our  pre-commit hook tasked with linting JavaScript.  The edit included gJSLint rule 220 (ignore missing member documentation).  However when performing a commit GIT still complains that the JavaScript is invalid.  Running the gJSLint on its own produces no errors.</p>

<blockquote>
  <p>gjslint --strict --disable=5,6,110,220 app/pits/modules/api.js</p>
</blockquote>

<p>We have removed the staged files and then added them back to staging with no luck.</p>

<p>Does GIT cache pre-commit hooks?</p>

<p><strong>Pre-Commit Hook</strong></p>

<pre class=""lang-sh prettyprint-override""><code>#!/bin/sh

files=$(git diff --cached --name-only --diff-filter=ACM | grep "".js$"") if [ ""$files"" = """" ]; then 
    exit 0  fi

pass=true

echo ""\nValidating JavaScript:\n""

for file in ${files}; do
    result=$(gjslint --strict --disable=5,6,110,220 ${file} | grep ""${file} is OK"")
    if [ ""$result"" != """" ]; then
        echo ""\t\033[32mJSLint Passed: ${file}\033[0m""
    else
        echo ""\t\033[31mJSLint Failed: ${file}\033[0m""
        pass=false
    fi done

echo ""\nJavaScript validation complete\n""

if ! $pass; then
    echo ""\033[41mCOMMIT FAILED:\033[0m Your commit contains files that should pass JSLint but do not. Please fix the JSLint errors and try again.\n          try: gjslint --strict --disable=5,6,110,220 file.js\n""
    exit 1 else
    echo ""\033[42mCOMMIT SUCCEEDED\033[0m\n"" fi
</code></pre>

<p><strong>Result of git commit -m""....""</strong></p>

<blockquote>
  <p>Validating JavaScript:</p>
  
  <p>JSLint Failed: app/pits/modules/api.js</p>
  
  <p>JSLint Failed: app/pits/modules/State.js</p>
  
  <p>JSLint Failed: app/pits/modules/table.js</p>
  
  <p>JavaScript validation complete</p>
  
  <p>COMMIT FAILED: Your commit contains files that should pass JSLint but</p>

<pre><code>              do not. Please fix the JSLint errors and try again.

              try: gjslint --strict --disable=5,6,110,220 file.js
</code></pre>
</blockquote>

<p><strong>Environment</strong></p>

<p>git       version 1.8.1.2</p>

<p>gjslint   version  2.3.13</p>

<p>lubuntu   version   13.04</p>
",3,394663,,
59420744,12128167,12/20/2019 6:26,-1,299,<python><git><githooks>,"How to stop ""git push all"" using git hook?","<p>As the title says, how do I stop this ""git push all"" command. My config file is altered to contain two urls (as shown below) and therefore will git push to two servers upon ""git push all"".</p>

<p><strong>Part of config file:</strong></p>

<pre><code>[remote ""all""]
    url = C:\\Users\\user1\\Desktop\\Machine1\\Server1
    url = C:\\Users\\user1\\Desktop\\Machine2\\Server2
    fetch = +refs/heads/*:refs/remotes/all/*
</code></pre>

<p>I've created a pre-push git hook that will basically create a lock.txt file in each of the servers, if it detects the presence of a similar lock file, everything retracts. Upon retract, I'll return an exit code of ""1"" to stop it from git pushing. A small part of the code is shown below.</p>

<p><strong>Part of git hook pre-push file:</strong></p>

<pre><code>LockFileExist = False
for serverpath in cleanurls:
    for file in os.listdir(str(serverpath)):
        if ""lock.txt"" in file:
            LockFileExist = True
    if LockFileExist == False:
        Create_Lock(serverpath)
    else:
        print (""Stopped pushing, starting revert process.."")
        exitcode = Revert_Process(createdlockfiles)
        if exitcode == 0:
            print (""Revert process has failed. Nothing to revert."")
        else:
            print (""Revert process is successful"")
        print(""Stopping the whole git process.."")
        exit(1)
</code></pre>

<p>So, this is what is shown (below), pre-push file ran twice because git push all is treated as two separate commands when pushing to two separate servers. <strong>However, what I wish for is for the command to end, the moment the first exit code is sent out.</strong> </p>

<p><a href=""https://i.stack.imgur.com/ryN4w.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ryN4w.png"" alt=""Results""></a></p>

<p>Is this even possible? I'm open to any suggestions. One more way I can think of is to stop the whole command line window but I'm not sure if it's the right way to do it. If you need any more codes for testing, do let me know! Thank you in advance for your help.</p>
",1,12128167,,
39012261,6086316,8/18/2016 7:27,0,873,<github><push><hook><githooks>,How to execute a client-side Git hook?,"<p>I am having problem while implementing a <strong>pre-push</strong> hook. The developers need to run a static code analyzer before they push the code to the git repo. But usually they don't and hence break the build.</p>

<p>Thus, I have written a <strong>pre-push</strong> hook; which is a shell script to execute the static code analysis ( and copied to .git/hooks) directory but it is not working correctly. This has to be a <strong>client-side</strong> hook but it is not working as expected. And I dont want to implement this functionality in a pre-commit or post-commit hook since I want static code analysis to be done on the developer's machine before he/she pushes the code (and not when he/she) commits the code.</p>

<p>Thus, please provide your insight as to how I can execute a task (static code analysis) on the client machine before <strong>git push</strong> command.</p>
",4,6086316,,
12222186,66289,8/31/2012 20:38,117,44593,<git><githooks>,Are git hooks pushed to the remote when I 'git push'?,"<p>If I create a new hook script in my local repository in repo/.git/hooks/post-commit and then I run ""git push"" are the hooks pushed to the remote?  Then, when the other developers run ""git pull"" from the same origin will they get my new hooks? </p>
",2,66289,0,0
39040410,885540,8/19/2016 13:33,4,327,<git><bash><githooks>,How to open terminal editor from within `commit-msg` git hook,"<p>I have a <code>commit-msg</code> hook that validates the contents of the commit message.</p>

<p>If that check fails I want to re-open the commit message file my terminal editor so that I can correct the mistake.</p>

<p>I have the following, which prompts the user when the validation fails.</p>

<pre class=""lang-bash prettyprint-override""><code>#!/usr/bin/env bash

COMMIT_MSG_FILE=""$1""

# If we have a STDIN, use it, otherwise get one
if tty &gt;/dev/null 2&gt;&amp;1; then
  TTY=$(tty)
else
  TTY=/dev/tty
fi

while true; do

  # read lines from file
  COMMIT_MSG_LINES=()
  while IFS= read -r; do
    COMMIT_MSG_LINES+=(""$REPLY"")
  done &lt; &lt;(cat $COMMIT_MSG_FILE)

  # validate - limit the subject to 50 characters
  test ""${#COMMIT_MSG_LINES[0]}"" -le 50 &amp;&amp; break;

  echo -n ""Validation failed. Proceed with commit [y/n]? ""
  read REPLY &lt; ""$TTY""

  case ""$REPLY"" in
    Y*|y*) exit 0 ;;
    N*|n*) exit 1 ;;
    *)     $EDITOR $COMMIT_MSG_FILE; continue ;;
  esac

done
</code></pre>

<p>Any response other than <code>YyNn</code> should re-open the editor.</p>

<p>However instead, I'm getting the following error:</p>

<pre><code>Received SIGHUP or SIGTERM
</code></pre>

<p>When I call the hook manually the script works correctly, so I assume this is something to do with the context in which the hooks are invoked.</p>

<p>How can I get the editor to open from within a <code>commit-msg</code> hook like this?</p>
",0,885540,,
29867001,2998522,4/25/2015 15:18,2,142,<javascript><git><gruntjs><githooks>,Modifying files in pre-commit hook without having to restage them,"<p>I just started to use a pre-commit hook in a project, in that script I run some grunt tasks like jshint and jsbeautifier.</p>

<p>The thing is that jsbeautifier does modify the files, so when it does, I have to restage the modified files.</p>

<p>Would it be possible to only have to stage those files only once?</p>
",2,2998522,0,0
29868031,2364090,4/25/2015 16:51,3,187,<git><github><hook><gitlab><githooks>,Having issue while implementing custom gitlab hook,"<p>I am implementing a custom gitlab hook. While some one pushes in master, I want to update a specific file. Then commit this change and push it to remote origin. The hook looks like below:</p>

<pre><code>clone_repo(){
     //cloning a specifc branch on my_app dir 
      export GIT_WORK_TREE=""path/my_app""
    }
cd_app(){
    cd my_app
}
update_file(){
  // updating random.java
}
commit_file(){
    git commit -m ""commit from hook"" random.java
}


while read oldrev newrev refname
do
 if [ ${refname} = ""refs/heads/master"" ]
 then
     clone_repo
     cd_app &amp;&amp; update_file
     commit_file &amp;&amp; push_it
     exit 0
 fi
done
</code></pre>

<p>The hook is running but <code>cd_app &amp;&amp; update_file</code> is not doing what is suppose to do (not updating update_file). I assuming <code>cd_app</code> is not changing the dir (via shell print). </p>

<p>But for testing when I set <code>refname=""refs/heads/master""</code> just before the <code>if</code> checking, it works fine!</p>

<p>Could not find where gitlab logs for custom_hooks. And it seems I am missing something. Can you guys give me further reference or identify what I am doing wrong?</p>
",0,2364090,0,0
47750455,6597389,12/11/2017 10:07,0,37,<git><zip><sh><githooks>,Zipping files in a post-commit hook not working,"<p>I have written script to ZIP last commit on <code>post-commit</code> hook:  </p>

<pre><code>#!/bin/sh

echo ""[post-commit] Commit done!""

exec &lt; /dev/tty

while true; do
    read -p ""[post-commit] Archive this commit? (Y/n) "" yn
    if [ ""$yn"" = """" ]; then
        yn='Y'
    fi
    case $yn in
        [Yy] ) exec git archive -o $(git log -1 --pretty=%B).zip $(git rev-parse HEAD) $(git diff --name-only $(git rev-parse HEAD)^..$(git rev-parse HEAD)); break;;
        [Nn] ) exit;;
        * ) echo ""Please answer Yy or Nn for yes or no."";;
    esac
done
</code></pre>

<p>It's creating a ZIP file but .. empty, it's not storing changed files...<br>
Anyone see where is bad?</p>
",0,6597389,,
12279795,213759,9/5/2012 10:50,2,2519,<php><git><phpstorm><githooks>,How create right git hook in PhpStorm on PHP?,"<p>If add git hook to pre-commit with following code then you get error ""Error!"" in PHPStorm.</p>

<pre><code>#!/usr/bin/sh
echo ""Error!""
exit 1
</code></pre>

<p>But if implement this on PHP you cannot get this error message in PHPStorm.</p>

<pre><code>#!/usr/bin/php
&lt;?php
echo ""Error!"";
exit(1);
</code></pre>

<p>PHPStorm return not understandable error:</p>

<blockquote>
  <p>error: cannot spawn .git/hooks/pre-commit: No such file or directory</p>
</blockquote>

<p>Any ideas how to resolve this problem?</p>

<p>P.S. In command prompt all is ok.</p>
",6,213759,0,0
39173787,3162189,8/26/2016 19:52,1,394,<git><rebase><git-rebase><githooks>,Check if there were conflicts in post-rewrite hook,"<p>In the context of a <code>post-rewrite</code> hook, is there any way to know if the rebase that caused the hook to fire had conflicts that needed to be resolved, or did it simply replay changes?</p>
",1,3162189,,
30495382,2946797,5/28/2015 0:39,0,295,<python><git><githooks>,Convert a git pre-commit hook to a git pre-receive hook,"<p>I want to write a git pre-receive hook that will check for PEP-8 code compliance on all new .py files. </p>

<p>There are already some git <em>pre-commit</em> hooks <a href=""https://github.com/cbrueffer/pep8-git-hook/blob/master/pre-commit"" rel=""nofollow"">that do exactly that</a>-- but I need a <em>pre-receive</em> hook. </p>

<p>If I just use the given pre-commit hooks as is, I get errors like: <code>remote: fatal: This operation must be run in a work tree</code>. My explanation for this error is that the hook is looking for committed python files, since it was written as a pre-commit hook. But since we're using it as a server-side pre-receive hook, it's looking in the wrong place for those .py files.</p>

<p>How can I make use of the already existing pre-commit hooks and use them on the server-side as pre-receive hooks?</p>
",3,2946797,,
30502297,4948068,5/28/2015 9:19,4,754,<git><githooks><git-post-receive>,git post-receive hook and multiple commits in one push,"<p>I'm trying to understand what happens in a git post-receive hook when multiple commits are pushed together. From the documentation and the examples I've seen, I would expect it to accept a list of references from STDIN, allowing me to take action on every separate commit, but it doesn't seem to work that way? Here's what I have:</p>

<p>My post-receive hook, obviously this is just for testing:</p>

<pre><code>#!/usr/bin/perl

use Data::Dumper;
my @input = &lt;STDIN&gt;;    
print STDERR Dumper(\@input);
</code></pre>

<p>I edit two files, and commit them separately:</p>

<pre><code>nelson% git log origin/master..HEAD
commit 93f96201f2cfd3e83a9a609ec644dc873aefeb17
Author: cecukemon &lt;cecukemon@...&gt;
Date:   Thu May 28 11:09:19 2015 +0200

    commit 2

commit 8bbcc8370101d44c8a7302fb365f257e62a61e9d
Author: cecukemon &lt;cecukemon@...&gt;
Date:   Thu May 28 11:09:09 2015 +0200

    commit 1
</code></pre>

<p>Push them as one:</p>

<pre><code>nelson% git push
Counting objects: 6, done.
Delta compression using up to 12 threads.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (6/6), 542 bytes | 0 bytes/s, done.
Total 6 (delta 0), reused 0 (delta 0)
remote: $VAR1 = [
remote:           'fa45b972bb59fbe92d7331cfad5d2933a53414ce 93f96201f2cfd3e83a9a609ec644dc873aefeb17 refs/heads/master
remote: '
remote:         ];
To /home/cecukemon/hooktest
   fa45b97..93f9620  master -&gt; master
</code></pre>

<p>Both commits have been successfully pushed:</p>

<pre><code>nelson% git log origin/master..HEAD
nelson%
</code></pre>

<p>and the post-receive hook was successfully executed, but I only see one of the commits in the reference list ($VAR1 in the push output).</p>

<p>Am I fundamentally misunderstanding something about how post-receive hooks work?</p>
",0,4948068,0,0
30503110,2521043,5/28/2015 9:53,5,1859,<git><github><githooks><webhooks><payload>,How to block specific pushes with github webhooks?,"<p>I am trying to protect my github repo from some specific pushes (e.g. pushes with conflict markers like <code>&lt;&lt;&lt;&lt;&lt;</code>).</p>

<p>At first, I tried to write a pre-commit git hook to block those specific commits. Then realized github repositories doesn't accept pre-commit hooks and I have to install them on client side for every contributor.</p>

<p>This is not a neat solution because someone might forget to install hooks after clone. It is also possible to override pre-commit hooks.</p>

<p>Then I learned about <a href=""https://developer.github.com/webhooks"" rel=""noreferrer"">github webhooks</a>. They can notify via payloads during pushes on the repository.</p>

<p>Is it possible to examine and block pushesh through webhooks?</p>
",2,2521043,,
30518603,4811873,5/28/2015 23:16,69,22563,<git><bitbucket><githooks><git-push>,"When I ""git push"" git now says ""Create pull request for ..."". Why?","<p>I am making changes to a project in a branch that, so far, is known to no one else but me.  However, starting recently, when I <code>git push</code> to this project, I now receive this as part of the response:</p>

<pre><code>remote: Create pull request for &lt;&lt;my branch&gt;&gt;:
remote:   https://bitbucket.org/...
</code></pre>

<p>I have no idea why Git is giving me this message, which I have never seen before.</p>

<p>Even if I <em>delete</em> the remote branch (with ""<code>git push origin :&lt;&lt;my branch&gt;&gt;</code>"" I now <em>still</em> get this message! (I successfully <strong>deleted</strong> the branch on the remote, but the message remains)</p>
",7,4811873,0,0
47872605,7669110,12/18/2017 16:30,0,1315,<git><githooks><pre-commit>,Git hook fails ONLY on commit,"<h1>Executive summary</h1>

<p>I have a project with a custom pre-commit hook, with a tree that looks something like this:</p>

<pre><code>parent
|
- .git - hooks - pre-commit
|
- smoketests - argument_tests.sh
|
- bitshuffle.py
</code></pre>

<p>When I run .git/hooks/pre-commit, it runs perfectly, and every test passes. However, when I run <code>git commit</code>, some tests fail. My index is exactly the same as my working tree. I have no idea what's going wrong.</p>

<p>Thanks for your help.</p>

<h1>Details</h1>

<h2>Status</h2>

<pre><code>$ git status
On branch staging
Your branch is up-to-date with 'origin/staging'.
Changes to be committed:
(use ""git reset HEAD &lt;file&gt;..."" to unstage)

        new file:   smoketest/argument_tests.sh
        renamed:    smoketest/do_test.sh -&gt; smoketest/library_tests.sh
</code></pre>

<h2>Traceback</h2>

<pre><code>$ git commit
Running tests...

When run with no args, prints help... PASSED
When run with '-h', prints help... PASSED
When given bad compresstype, prints help... PASSED
When given bad editor, prints editor not found... FAILED

'Editor /nonexistent not found' does not match logfile

        Nothing to decode or nothing matched spec. Aborting.


When given bad input, prints file not found... PASSED

1 tests failed.
</code></pre>

<h2>Runnning pre-commit on its own</h2>

<pre><code>$ .git/hooks/pre-commit
Running tests...

When run with no args, prints help... PASSED
When run with '-h', prints help... PASSED
When given bad compresstype, prints help... PASSED
When given bad editor, prints editor not found... PASSED
When given bad input, prints file not found... PASSED

0 tests failed.
</code></pre>

<h2>Contents of pre-commit</h2>

<pre><code>#!/bin/sh

## custom
# smoketesting
if ! smoketest/library_tests.sh; then exit 1; fi;
# arguments
if ! smoketest/argument_tests.sh; then exit 1; fi;
# codestyle 
if ! pycodestyle *.py; then exit 1; fi;
</code></pre>

<h2>Diff</h2>

<pre><code>$ git diff --cached
diff --git smoketest/argument_tests.sh smoketest/argument_tests.sh
new file mode 100755
index 0000000..0133819
--- /dev/null
+++ smoketest/argument_tests.sh
@@ -0,0 +1,90 @@
+#!/bin/bash
+
+# .SHELLDOC
+
+# Smoketests for argument handling. Exit code is # of failed tests.
+# Heavily influenced by existing smoketests.
+
+# .ENDOC
+
+TEST_DIR=""`readlink -e $(dirname ""$0"")`""
+BITSHUFFLE=""$TEST_DIR/../bitshuffle.py""
+TESTS_FAILED=0
+
+if [ ! -x ""$BITSHUFFLE"" ] ; then
+        echo ""FATAL: '$BITSHUFFLE' does not exist""
+        exit 9999
+fi
+
+# Note: of necessity, the following can only test non-interactive
+# situations. Interactive tests are not a priority at the current moment.
+
+print_log_file() {
+# takes 1 parameter, a text file
+        while read -r line; do
+                printf ""\t$line\n""
+        done &lt; $1
+        printf ""\n\n""
+}
+
+
+expect_usage_error () {
+        LOG_FILE=""/tmp/`uuidgen`""
+        $BITSHUFFLE $@ &gt; ""$LOG_FILE"" 2&gt;&amp;1
+        if grep -q ""usage: .*"" $LOG_FILE; then
+                echo ""PASSED""
+        else
+                printf ""FAILED\n\n""
+
+                printf ""\t'usage: .*' does not match logfile\n\n"" 
+                print_log_file $LOG_FILE
+                TESTS_FAILED=`echo ""$TESTS_FAILED + 1"" | bc`
+                rm -f $LOG_FILE
+        fi
+}
+
+printf ""Running tests...\n\n""
+
+printf ""When run with no args, prints help... ""
+expect_usage_error
+
+printf ""When run with '-h', prints help... ""
+expect_usage_error -h
+
+printf ""When given bad compresstype, prints help... ""
+expect_usage_error -t gmander
+
+printf ""When given bad editor, prints editor not found... ""
+LOG_FILE=""/tmp/`uuidgen`""
+$BITSHUFFLE --editor /nonexistent &gt; ""$LOG_FILE"" 2&gt;&amp;1
+if [ ""`cat $LOG_FILE`"" = ""Editor /nonexistent not found"" ]; then
+        echo ""PASSED""
+else
+        printf ""FAILED\n\n""
+
+        printf ""'Editor /nonexistent not found' does not match logfile\n\n""
+
+        print_log_file $LOG_FILE
+        TESTS_FAILED=""`echo $TESTS_FAILED + 1 | bc`""
+        rm -f $LOG_FILE
+fi
+
+LOG_FILE=""/tmp/`uuidgen`""
+printf ""When given bad input, prints file not found... ""
+$BITSHUFFLE --input /nonexistent/nope &gt; ""$LOG_FILE"" 2&gt;&amp;1
+if [ ""`cat $LOG_FILE`"" = ""Error: Input file not found"" ]; then
+    echo ""PASSED""
+else
+    printf ""FAILED\n\n""
+
+    printf ""\t'Error: Input file not found' \
+             does not match logfile\n\n""
+
+    print_log_file $LOG_FILE
+    TESTS_FAILED=`echo $TESTS_FAILED + 1 | bc`
+    rm -f $LOG_FILE
+fi
+
+printf ""\n$TESTS_FAILED tests failed.\n""
+exit $TESTS_FAILED
+
diff --git smoketest/do_test.sh smoketest/library_tests.sh
similarity index 100%
rename from smoketest/do_test.sh
rename to smoketest/library_tests.sh
</code></pre>
",0,7669110,,
58194458,3281861,10/2/2019 2:26,4,312,<git><githooks>,Is there a git hook for `git add`?,"<p>I been researching but haven't had any exact luck on:</p>

<ol>
<li>knowing where exactly to look for these answers</li>
<li>what to search on google beyond variations of ""Is there a git hook for <code>git add</code>?""</li>
</ol>

<p>So, here I am, wondering if there is a way I can have a pre-add, during-add, or post-add hook to add a linter. My work currently has one for post-commit which is pretty annoying because I have to amend each time something changes.</p>
",0,3281861,0,0
12937471,1002355,10/17/2012 15:08,2,123,<github><ssh><ftp><sftp><githooks>,Pushing Git repo through SSH chain,"<p>I just started a new job, which is trying to start using Git for version control. I am trying to help them with the process but it is turning out to be more complicated than anticipated. </p>

<p>Currently, all new files are uploaded to the dev server via SSH FTP as follows: </p>

<p>SSH into first machine, then SSH from here into the actual Dev server. </p>

<p>Ideally, we'd like to be able to be able to enter ""git push dev"" and have git skip through both SSH to push the files to the Dev server... However, I'm not sure how to add a sequence of origins to Git... </p>

<p>Does anyone know if this is possible, or how one might go about doing this? </p>

<p>Thanks in advance. </p>
",3,1002355,,
66404361,1873872,2/27/2021 23:16,1,200,<ruby-on-rails><ruby><git><ubuntu><githooks>,Creating a file that becomes executable chmod 777 gihook file,"<p>I'm working in rails on UBUNTU</p>
<p>IM triggering an initializer that writes a githook file into the git directory, all good, file gets created code is good, but on the commit trigger I get</p>
<pre><code>hint: The '.git/hooks/commit-msg' hook was ignored because it's not set as executable.
hint: You can disable this warning with `git config advice.ignoredHook false`.
</code></pre>
<p>The file is created with executable rights.... I think?</p>
<pre><code>new_file = File.new(file, File::CREAT|File::TRUNC|File::RDWR, 777)
</code></pre>
<p>However, I think I'm doing something wrong or missing a permission step?</p>
<p>Secondly, how do I access the variables in the commit from the githook? is there good documentation somewhere?</p>
",0,1873872,,
30544625,1459729,5/30/2015 9:45,6,8110,<python><git><gitlab><githooks>,remote: ImportError: No module named gitlab,"<p>I wrote gitlab hook with python. And added to post-receive hooks in gitlab server. When i push to remote origin server from my laptop, i get following error. But it works when i run script manually in gitlab server. How can i solve problem?</p>

<pre><code> Counting objects: 3, done.
 Writing objects: 100% (3/3), 240 bytes | 0 bytes/s, done.
 Total 3 (delta 0), reused 0 (delta 0)
 remote: Traceback (most recent call last):
 remote:   File ""push.py"", line 4, in &lt;module&gt;
 remote:     import gitlab
 remote: ImportError: No module named gitlab
</code></pre>
",0,1459729,0,0
20296392,922727,11/30/2013 4:10,3,1790,<python><git><githooks><flake8>,git hook flake8: error: input not specified,"<p>Flake8's <code>pre-commit</code> hook for git raises <code>flake8: error: input not specified</code> whenever I do git commit.</p>

<p>The hook file is identical to the <a href=""https://flake8.readthedocs.org/en/2.0/vcs.html#git-hook"" rel=""nofollow"">official example</a> : </p>

<pre><code>#!/usr/bin/python
import sys
from flake8.run import git_hook

COMPLEXITY = 10
STRICT = False

if __name__ == '__main__':
    sys.exit(git_hook(complexity=COMPLEXITY, strict=STRICT, ignore='E501'))
</code></pre>
",3,922727,0,0
12977998,537500,10/19/2012 15:54,3,1138,<git><ubuntu><file-permissions><gitolite><githooks>,git ignore filemode config isn't working,"<p>I am using gitolite git server on a ubuntu linux server. I used a hook that will be called on every push and will update a server's directory(which include live site's source code).</p>

<p>Now, whenever I change something on my local pc and push the changes to server, the hook is being called and the pull request are being executed fine. But, problem is, the files which were updated, are now having changed permission. Like:</p>

<pre><code>rwxrwxr_x (before)
rwx_____x (After)
</code></pre>

<p>After few searches, I did came up with <a href=""https://stackoverflow.com/questions/1580596/how-do-i-make-git-ignore-mode-changes-chmod"">this solution</a> . I did tried it with both my global git config and repository specific config settings. after setting the config, whenever I am trying to push from my local pc, the same issue is happening again like above, thus seems, for some reason, the solution isn't working.</p>

<p>Does anybody have any idea, what can be the reason plz? Do I have to do anything additionally besides the config settings? Any suggestions are welcome. Thanks in advance.  </p>
",2,537500,0,0
12984499,605356,10/20/2012 1:35,12,2288,<git><permissions><githooks><git-pull><ownership>,How to prevent root from running git pull?,"<p>Have need to prevent root from updating a git (working) directory.  Reasoning includes but not limited to: preventing undersired file-system ownership changes.</p>

<p>None of the git hooks seem to <em>prevent</em> a fetch/merge/pull before it happens, similar to pre-commit hook.  Or at least, nothing I see here (or in man page): 
<a href=""http://www.analysisandsolutions.com/code/git-hooks-summary-cheat-sheet.htm"">http://www.analysisandsolutions.com/code/git-hooks-summary-cheat-sheet.htm</a></p>

<p>Thoughts?</p>
",7,605356,0,0
30590260,2194137,6/2/2015 7:45,1,1047,<regex><windows><git><githooks><git-bash>,Executing git-hooks on windows errors out,"<p>So, </p>

<p>I have written a simple git-hooks for pre-push which works just fine on Linux or Mac, but doesn't work on Windows. </p>

<p>Script:
Tries to match the commit message with a regular expression, and should return 0 if matches or else exit. </p>

<p>Based on the articles I read, they say that the hook should just work. </p>

<p>Command:</p>

<pre><code>if [[ ""$message"" =~ ""$regular_expression"" ]]; 
</code></pre>

<p>Error:</p>

<pre><code>.git/hooks/pre-push: line 6: conditional binary operator expected
.git/hooks/pre-push: line 6: syntax error near `=~'
.git/hooks/pre-push: line 6: `  if [[ ""$message"" =~ ""$regular_expression"" ]]; then'
</code></pre>

<p>So apparently it seems to be failing on ""[["" and ""]]"". </p>

<p>Now I have also tried removing the double brackets and keep only one. </p>

<p>Command:</p>

<pre><code>if [ ""$message"" =~ ""$regular_expression"" ];
</code></pre>

<p><em>Error:</em></p>

<pre><code>.git/hooks/pre-push: line 6: [: =~: binary operator expected
This message is flawed: TRY-1 Sample
</code></pre>

<p>Does anybody know how to solve this issue ? </p>
",3,2194137,0,0
30609480,1280075,6/3/2015 1:45,5,4492,<macos><git><bash><githooks><pre-commit-hook>,Stop git commit in pre-commit hook with exit,"<p>I'm trying to stop a git commit from continuing with a pre-commit hook. From reading the manual, it should stop when you return an exit code other than 0. I'm testing to see if the csscomb command returns an error, and if it does then break the loop and exit, but the git commit still continues on to entering a message via <code>git commit (-a)</code>.</p>

<p>I've forked and modified the script below from <a href=""https://github.com/filtercake/git-pre-commit-csscomb"" rel=""noreferrer"">https://github.com/filtercake/git-pre-commit-csscomb</a></p>

<pre class=""lang-bash prettyprint-override""><code>#!/bin/bash

# pre-commit hook to comb staged .sass and .scss files
# save as .git/hooks/pre-commit
# make executable: chmod +x .git/hooks/pre-commit

# sources:

# http://www.hagenburger.net/BLOG/Using-Git-Commit-Hooks-to-Autocompile-Sass-to-CSS.html
# http://stackoverflow.com/questions/8470755/git-pre-commit-hook-add-file-into-index/8471009#8471009
# http://stackoverflow.com/questions/592620/how-to-check-if-a-program-exists-from-a-bash-script/677212#677212
# https://gist.github.com/openam/8406343

# check if sass/scss files are staged for commit

# diff-lines from http://stackoverflow.com/a/12179492/3019532
# takes the line
function diff-lines() {
    local path=
    local line=
    while read; do
        esc=$'\033'
        if [[ $REPLY =~ ---\ (a/)?.* ]]; then
            continue
        elif [[ $REPLY =~ \+\+\+\ (b/)?([^[:blank:]$esc]+).* ]]; then
            path=${BASH_REMATCH[2]}
        elif [[ $REPLY =~ @@\ -[0-9]+(,[0-9]+)?\ \+([0-9]+)(,[0-9]+)?\ @@.* ]]; then
            line=${BASH_REMATCH[2]}
        elif [[ $REPLY =~ ^($esc\[[0-9;]+m)*([\ +-]) ]]; then
            echo ""Line $line:$REPLY""
            if [[ ${BASH_REMATCH[2]} != - ]]; then
                ((line++))
            fi
        fi
    done
}

if ! git diff --quiet --cached -- **/*.{sass,scss}; then

            echo """"
            echo ""--&gt; you checked in sass/scss files. lets comb them...""
            echo """"

            # check if csscomb is installed

            if hash csscomb 2&gt;/dev/null; then

                echo -e ""\033[1;32m--&gt; found csscomb\033[0m""

                # TODO: check for csscomb update once a week

                # check if configfile exists

                if [ ! -f ./.csscomb.json ]; then
                    echo ""--&gt; no config file, using defaults""
                else
                    echo -e ""\033[1;32m--&gt; found .csscomb.json\033[0m""
                fi

                echo """"

                # Necessary check for initial commit
                against=""4b825dc642cb6eb9a060e54bf8d69288fbee4904""
                git rev-parse --verify HEAD &gt;/dev/null 2&gt;&amp;1 &amp;&amp; against=""HEAD""
                EXITCODE=0

                # (A)dded (C)opied or (M)odified
                # encapsulate the loop in {} http://stackoverflow.com/a/13665483/3019532
                git diff-index --cached --full-index --diff-filter=ACM $against | \
                {
                    while read -r line; do
                      FILE_PATH=""$(echo ${line} |cut -d' ' -f6-)""
                      EXTENSION=""${FILE_PATH##*.}""
                      # EXTENSION=${EXTENSION,,} # Convert to lowercase
                      REGEX=""""

                      # Select discouraged words based on extension

                      if [ ""${EXTENSION}"" = ""sass"" ] || [ ""${EXTENSION}"" = ""scss"" ]; then
                        echo ""--&gt; staged sass/scss file: "" $FILE_PATH
                        echo ""--&gt; combing...""
                        if csscomb $FILE_PATH; then
                            echo ""--&gt; adding combed file""
                            git add $FILE_PATH
                            echo ""--&gt; done""
                        else
                            echo ""Check your CSS file for combing errors or alternatively add '-n' to your git commit to bypass this hook""
                            break
                            exit 1 # Should stop the git commit from continuing
                        fi
                      fi
                    done
                }
            else
                echo -e ""\033[0;31m--&gt; Oh noes, CSS Comb is not installed. Do:""
                echo ""--&gt; npm install csscomb -g""
                echo -e ""\033[0m""
                echo ""--&gt; (you need to change and stage a sass/scss file again to see it work on the next commit...)""
                echo """"
            fi
fi

# Necessary check for initial commit
against=""4b825dc642cb6eb9a060e54bf8d69288fbee4904""
git rev-parse --verify HEAD &gt;/dev/null 2&gt;&amp;1 &amp;&amp; against=""HEAD""
EXITCODE=0

exit 0
</code></pre>
",2,1280075,,
58419084,2368351,10/16/2019 17:53,0,251,<git><githooks>,"How can I ""resume"" a post-merge hook that was aborted due to merge conflicts?","<p>I have a <code>post-merge</code> git hook that is based in part on <a href=""https://gist.github.com/sindresorhus/7996717"" rel=""nofollow noreferrer"">https://gist.github.com/sindresorhus/7996717</a>. As expected, the hook fails to run if a pull introduces merge conflicts.</p>

<p>How might I go about handling the merge conflicts so that my hook can run as desired? My hook relies on diffs. If I manually resolve the conflicts and commit the updates, I no longer have any diffs so the logic in my hook is no longer relevant.</p>

<p>here's the hook (though I imagine it wouldn't really matter what is in here, if there are conflicts to begin with)</p>

<pre><code>#!/bin/sh
echo ""[post-merge] Commit done.""
DIFFS=""$(git diff-tree -r --name-only --no-commit-id HEAD@{1} HEAD)""
BLUE='\033[0;34m'
GRN='\033[0;32m'
NC='\033[0m' # No Color
# Git hooks are not designed to be interactive. By default they don't have access to $stdin. 
# which meant that normal use of `read` was not working when used within the context of a git hook.
# This line restores keyboard access to stdin so that the dev can respond to the prompt that appears while the hook
# is running.
# Alternatively, we could forgo the confirmation and make package installation automatic, 
# though it seems better to allow dev to decide.

exec &lt; /dev/tty

check_incoming() {
    # $1 is package.json 
    # $2 is handle_package_json
    echo ""$DIFFS"" | grep --quiet ""$1"" &amp;&amp; eval ""$2""
    exit 0
}

handle_package_json() {
    while true; do
    echo -e ""${BLUE}[post-merge] PACKAGE.JSON UPDATED:${NC}""
    read -p ""[post-merge] File may contain dependency updates. Run yarn install? (y/n) "" yn
    if [ ""$yn"" = """" ]; then
        yn='Y'
    fi
    case $yn in
        [Yy] ) yarn install; break;;
        [Nn] ) echo ""[post-merge] Installation deferred. You may need to manually update dependencies at a later point.""; exit;;
        * ) echo ""[post-merge] Please answer y or n for yes or no."";;
    esac
    done
}

if [[ -n ""$DIFFS"" ]]; then
    check_incoming package.json handle_package_json;    
fi
</code></pre>
",0,2368351,,
30640210,2235673,6/4/2015 9:34,1,987,<git><githooks>,Git post-receive hook for push-to-deploy only works with master,"<p>I have a remote bare git repository created following:</p>

<pre><code>@server:~$ mkdir -p /home/myuser/domain.git &amp;&amp; chmod 770 /home/myuser/domain.git &amp;&amp; cd /home/myuser/domain.git &amp;&amp; git init --bare
</code></pre>

<p>With a post-receive hook:</p>

<pre><code>@server:~$ nano hooks/post-receive
</code></pre>

<p>The hook script is:</p>

<pre><code>#!/bin/sh
git --work-tree=/var/www/domain --git-dir=/home/myuser/domain.git checkout -f
</code></pre>

<p>It has permission to execute:</p>

<pre><code>@server:~$ chmod +x hooks/post-receive
</code></pre>

<p>However, it only changes the website when I push to the <em>master</em> branch.</p>

<p>Why? The remote <em>HEAD</em> is always <em>master</em>, even if I push to another branch. </p>
",0,2235673,0,0
30647829,4917558,6/4/2015 15:18,1,746,<git><powershell><github><githooks><pre-commit-hook>,Local Git Hook Pre-Commit/Pre-Push does not run (Windows),"<p>I have a repo set up which is supposed to run a fairly simple pre-push/pre-commit powershell script (It doesn't really matter when the script executes). However, for the life of me I cannot get it to run. 
I have tried to use <code>chmod +x .git/hooks/*</code> and <code>chmod ug+x .git/hooks/*</code>
I have tried editing the <code>#!/bin/...</code> and even removing it all together as I have read it is not supported in Windows.
I know the script works because when I call it via <code>&amp; C:\Users\...\.git\hooks\pre-commit.ps1</code> it works.</p>

<p>For what it's worth here is my script to be run:</p>

<pre><code>#!/bin/bash
echo ""Script Running""
&amp; 'C:\Users\Ian Pennebaker\Desktop\RevisionDate.vbs'
Start-Sleep -s 30
&amp; 'C:\Users\Ian Pennebaker\Desktop\MovePDF.vbs'
cd 'C:\Users\Ian Pennebaker\desktop\Test2'
pdftk *.pdf cat output ECMWC.pdf
&amp; 'C:\Users\Ian Pennebaker\Desktop\DeleteAllButFinal.vbs'
</code></pre>

<p>It is currently named pre-push.ps1 but like I said earlier it could also be used at pre-commit or any other hook location. 
Does anybody have any idea what is wrong here?</p>
",1,4917558,,
13059991,632968,10/25/2012 0:40,278,217740,<git><node.js><npm><githooks>,update package.json version automatically,"<p>Before I do a small release and tag it, I'd like to update the package.json to reflect the new version of the program.</p>

<p>Is there a way to edit the file <code>package.json</code> automatically?</p>

<p>Would using a <code>git pre-release hook</code> help?</p>
",3,632968,0,0
47892714,773263,12/19/2017 17:59,0,1112,<git><githooks>,Git pre-commit running after commit?,"<p>I'm trying to run a format command on code before it's committed. I ether want it to not allow commit if unformatted or automatically do it before committing. </p>

<p>What happens now is the commit happens and the formatting is applied after the commit as unstaged changes.</p>

<p>Here is my <code>.git/hooks/pre-commit</code>:</p>

<pre><code>#!/bin/bash

go fmt src/*.go
</code></pre>
",1,773263,,
58471191,5017647,10/20/2019 8:22,-1,72,<git><githooks><git-push>,Pushing to checked out branch and executing git hook after,"<p>I have been setting up some Git hooks on my remote GitHub and it seems like I ran into a dilemma. </p>

<p>I have a hook that calls a Makefile to deploy my web application in my Git repository and that hook executes post-update when a push to master is detected. However, pushing to the checked out branch of a remote repository is no good to do and otherwise fails. It is rather recommended to have a bare repository when pushing. However, if the repository is bare then my Git hooks cannot be executed properly since all the files are essentially blobs. </p>

<p>What are my options for fixing this issue? I can always push a branch and merge it into master (have a post-merge hook instead of a post-update hook) but that would entail having to SSH into my server to do the merge and defies the whole point of the hook... </p>
",0,5017647,,
66423969,1725836,3/1/2021 14:30,1,2983,<git><visual-studio-code><githooks>,VSCode local git hooks,"<p>I have a project that sits in a monorepo. That monorepo is been shared among a lot of projects with different types. I have a React project with NPM in this monorepo.</p>
<p>We are using VSCode for the development of this repo, since there are verity of people (experts and less experts) that touch the code, I want to make the process as easy as possible to prevent issues for everyone. For example, run <code>npm install</code> if the <code>package.json</code> file has changed.</p>
<p>Since it is a monorepo, no one is allowed to create git hook for a specific sub project. So I search for a solution of &quot;local git hooks&quot; that will not impact other projects.</p>
<p>Since we are using VSCode and open the root <strong>project</strong> directory in it, is there any way to create &quot;local&quot; git hooks in VSCode? For example, if someone run <code>git pull</code> in the VSCode the VSCode will execute additional command after like a hook?</p>
",2,1725836,,
20569645,1202703,12/13/2013 15:07,0,92,<git><githooks><git-post-receive><kudu>,Local Kudu post-recieve pull not working,"<p>I have a Kudu project hosted locally on a server. I'm trying to modify the post-receive hook to cd into another directory and then perform a git pull. In the directory I'm switching to I have the repository set up with the correct remote but I receive </p>

<pre><code>remote: .............................................................fatal: prot
ocol error: bad line length character: &lt;!DO
ferror: error in sideband demultiplexer
atal: write error: Invalid argument
</code></pre>

<p>Is there something I need to change or some other way I could update this other site with the latest push into my repository?</p>
",2,1202703,,
13077081,1260055,10/25/2012 20:52,2,200,<git><githooks><git-push>,Push code to more then one origin,"<p>I want to do a <em>git push</em>, and the changes should be push to two different origin. Is there a way to push to more than one origin with one command with git? A nice hook maybe?</p>
",1,1260055,,
30669057,2647442,6/5/2015 14:26,1,65,<git><githooks>,Is there a way to make a git repository commit a directory before a pull/clone?,"<p>Sorry if I am completely wrong or anything, I am really new to Git and I am trying to write up a way for my work (website development/hosting) to implement it. Everybody here has been here for like 15 years and they really haven't changed how they do anything. Lately a coworker and I have been trying to get things up to day and I think we would really, REALLY benefit from using git. The problem is that everybody is against change so I have to make it easy...</p>

<p>From a little googling I found a way (<a href=""http://toroid.org/ams/git-website-howto"" rel=""nofollow"">http://toroid.org/ams/git-website-howto</a>) that looks like it might almost work without really messing up every bodies workflow, but there is a problem with it.</p>

<p>Right now the setup is<br>
Website repos on local network drive, <code>W:\Git\</code> (maybe on the server root later?)<br>
And websites on a server running windows over VPN, <code>\\172.16.xxx.xxx\data_www</code> </p>

<p>This works fine (except for being a little slow) but it looks like if anybody makes a change to the actual website files then we would lose them.</p>

<p>My idea was reject the push if the pushing repository is being in commits and to intercept git pull/git clone and automatically commit the contents of the website folder before continuing with the pull/clone. This way people can still make changes, but we wont lose any data accidentally... but I don't see any hooks where I could use just <code>git commit -m ""Add live site changes""</code> that look like they might work and I am a little stumped. </p>

<p>I liked the concept of just sending out an email that says </p>

<p>To make changes to websites  </p>

<p>Run <code>git clone W:\Git\Domain.tld.git C:\Git</code> in a command line<br>
make any changes to the website in <code>C:\Git\Domain.tld</code>,<br>
save the changes with <code>git commit -m ""Description""</code><br>
update the live website with <code>git push</code>  </p>

<p>Is there a correct way to do this? If not is there any other way to set things up that keeps people from having to alter their workflow too much?<br>
Thanks!!</p>
",4,2647442,0,0
13087625,744734,10/26/2012 13:13,4,4972,<git><hook><gitolite><githooks>,git gitolite (v3) pre-receive hook for all commit messages,"<p>I am trying to enforce a policy where each push gets rejected when even one of the commit messages does not satisfy a rule. I've distributed a hook to the devs in order for them to use it in their local repos but I also want to enforce this when they push to the origin.</p>

<p>I have two questions:</p>

<ol>
<li><p>Should I use the update hook or the pre-receive hook? (I've tried to setup an update.secondary hook but it seems to me it doesn't get fired, while a pre-receive does).</p></li>
<li><p>How can I get the message for each commit contained in the push? More specifically, I want each commit message to have a specific ""valid"" (for my needs) prefix. So I would like to scan for every commit in this push the commit message and validate it before I accept the push.</p></li>
</ol>

<p>I am using simple bash to code the hooks.</p>

<p>Thanks!</p>
",1,744734,0,0
13099761,462865,10/27/2012 11:29,2,275,<git><gitolite><githooks>,Bypassing gitolite restrictions for specific commits,"<p>In a gitolite setup, is there a way to allow some commits to bypass some restrictions?</p>

<p>More specifically, I want to deny some actions (like creating a branch) to prevent doing so by accident, these restrictions are done in gitolite.conf file and I know how to do so, but additionally I want users to be able to bypass some of these restrictions if they are really sure (e.g. by including --force in commit message).</p>

<p>Is this possible trough gitolite configuration itself or a plugin? If not, how can I modify gitolite hooks to enable such feature?</p>
",3,462865,0,0
47907124,5758097,12/20/2017 13:27,1,193,<git><githooks>,How to add a few comments to the repository files before commitment,"<p>Every commit I should add to file few lines, for example</p>

<p><code>// Author - John Doe</code></p>

<p><code>// email - john@example.com</code></p>

<p>Is there any possibility to make this routine via git hooks? I've found a solution to add these lines with pre-commit hook, but after hook fires, files move to unstaged</p>
",3,5758097,,
30713404,2465760,6/8/2015 15:34,1,116,<git><githooks>,Git post-update hook for every branch,"<p>From docs: </p>

<blockquote>
  <p><code>update</code></p>
  
  <p>The <code>update</code> script is very similar to the <code>pre-receive</code> script, except
  that it’s run once for each branch the pusher is trying to update</p>
</blockquote>

<p>I need <strong>multi-branch equivalent to post-receive</strong>, not pre-receive.</p>

<p>Thank you very much.</p>
",0,2465760,,
30714621,4917558,6/8/2015 16:36,3,16505,<git><github><vbscript><githooks>,"Git hook pre-commit error: ""command not found""","<p>I have a simple Git hook that calls some other (VBScript) scripts. The script runs correctly when I call it from the command line. However, when the hook is executed, it gives me the following error(s):</p>
<pre class=""lang-none prettyprint-override""><code>./RevisionDate.vbs: line 1: syntax error near unexpected token `('
./RevisionDate.vbs: line 1: `Set copyFSO = CreateObject (&quot;Scripting.FileSystemObject&quot;)'
.git/hooks/pre-commit: line 8: Start-Sleep: command not found
test
./MovePDF.vbs: line 1: unexpected EOF while looking for matching `''
./MovePDF.vbs: line 6: syntax error: unexpected end of file
</code></pre>
<p>Here is the VBScript that gets called in the hook.</p>
<pre><code>Set copyFSO = CreateObject (&quot;Scripting.FileSystemObject&quot;)
copyFSO.copyFile &quot;C:\Users\Ian\Desktop\Test\*.pdf&quot;, &quot;C:\Users\Ian\Desktop\Test2&quot;
copyFSO.moveFile &quot;C:\Users\Ian\Desktop\Test\*.pdf&quot;, &quot;C:\Users\Ian\Desktop\Temp&quot;

'------ Microsoft Excel -------

inputPrefix = cint(inputbox(&quot;Please enter two digit prefix for file you would like updated.&quot;, &quot;File Update&quot;))
Set objExcel = CreateObject(&quot;Excel.Application&quot;)
objExcel.Visible = False
sFolder = &quot;C:\Users\Ian\Desktop\Test&quot;
Set oFSO = CreateObject(&quot;Scripting.FileSystemObject&quot;)

For Each oFile In oFSO.GetFolder(sFolder).Files
    fileName = oFile
    Set objWorkbook = nothing
    Set objSelection = nothing
    Set objWorksheet = nothing

    If UCase(oFSO.GetExtensionName(oFile.Name)) = &quot;XLSX&quot; Then
        Prefix = left(oFile.Name, 2)
        filePrefix = cint(Prefix)
        Set objWorkbook = objExcel.Workbooks.Open(fileName)
        Set objSelection = objExcel.Selection
        Set objWorksheet = objWorkbook.Worksheets(1)
        objExcel.DisplayAlerts = False
        myYear = Year(Now())
        myMonth = Month(Now())
        myDay = Day(Now())
        myDate = myYear &amp; &quot;/&quot; &amp; myMonth &amp; &quot;/&quot; &amp; myDay
        myDateFile = myYear &amp; &quot;-&quot; &amp; myMonth &amp; &quot;-&quot; &amp; myDay

        If (filePrefix = inputPrefix) then
            objWorksheet.PageSetup.RightFooter = &quot;Revision Date: &quot; &amp; myDate &amp; &quot; C&quot;
            objWorkbook.Save
        End If

        fileName = Replace(oFile.Name, &quot;.xlsx&quot;, &quot;&quot;)
        saveAndCloseXlsx objWorkbook
    End if
Next

Function saveAndCloseXlsx(objWorkbook)
    objWorkbook.ExportAsFixedFormat xiTypePDF, &quot;C:\Users\Ian\Desktop\Test\&quot; &amp; fileName
    objWorkbook.Close
end Function


'------ Microsoft Word -------

Set objWord = CreateObject(&quot;Word.Application&quot;)
objWord.Visible = False
sFolder = &quot;C:\Users\Ian\Desktop\Test&quot;
Set oFSO = CreateObject(&quot;Scripting.FileSystemObject&quot;)

For Each oFile In oFSO.GetFolder(sFolder).Files

    If UCase(oFSO.GetExtensionName(oFile.Name)) = &quot;DOCX&quot; Then
        fileName = oFile
        Set objDoc = objWord.Documents.Open(fileName)
        Set objSelection = objWord.Selection

        If objDoc.Bookmarks.Exists(&quot;RevisionDate&quot;) = True Then
            Set objRange = objDoc.Bookmarks(&quot;RevisionDate&quot;).Range
            myYear = Year(Now())
            myMonth = Month(Now())
            myDay = Day(Now())
            myDate = myYear &amp; &quot;/&quot; &amp; myMonth &amp; &quot;/&quot; &amp; myDay
            myDateFile = myYear &amp; &quot;-&quot; &amp; myMonth &amp; &quot;-&quot; &amp; myDay
            Prefix = left(oFile.Name, 2)
            filePrefix = cint(Prefix)

            If (inputPrefix = filePrefix) then
                objRange.text = &quot;Revision Date: &quot; &amp; myDate &amp; &quot; C&quot;
                objDoc.Bookmarks.Add &quot;RevisionDate&quot;, objRange
            End If

            wdFormatPDF = 17
            SaveAndCloseDocx objDoc
        End If
    End if
Next

set oFSO = Nothing
objWord.Quit

Function SaveAndCloseDocx(objDoc)
    fileName = Replace(oFile.Name, &quot;.docx&quot;, &quot;&quot;)
    objDoc.SaveAs &quot;C:\Users\Ian\Desktop\Test\&quot; &amp; fileName &amp; &quot;.pdf&quot;, wdFormatPDF
    objDoc.Close
End Function
</code></pre>
<p>And finally the hook itself:</p>
<pre><code>#!/bin/sh
#
#
echo &quot;Script Running&quot;
cd 'C:\Users\Ian\desktop\QMS_Manual'
&quot;./RevisionDate.vbs&quot;
Start-Sleep -s 30
&quot;./MovePDF.vbs&quot;
cd 'C:\Users\Ian\desktop\Test2'
pdftk *.pdf cat output ECMWC.pdf
cd 'C:\Users\Ian\desktop\QMS_Manual'
DeleteAllButFinal.vbs
</code></pre>
<p>Why does this happen? I've read it may have something to do with the <a href=""https://en.wikipedia.org/wiki/PATH_(variable)"" rel=""nofollow noreferrer""><code>PATH</code></a> environment variable.</p>
",7,4917558,0,0
1704360,5387,11/9/2009 22:27,6,3468,<git><hook><githooks>,Git Hook: Take action when a branch is advanced,"<p>I'm looking to build and publish a latex document every time I advance the tip of a specific branch.</p>

<p>I'm looking at what hook I should be putting my build script and which conditions I need to check for.</p>
",2,5387,0,0
30726016,2745321,6/9/2015 7:49,1,307,<git><github><push><githooks>,How to trigger git hooks without pushing to the repo,"<p>I'm writing a web editor plugin for a code repository web application. My editor edits the file on the remote branch, and commits it there. To the user it looks like they committed changes on there local machine and pushed the changes, where in reality the file was edited on the remote branch and committed. </p>

<p>The issue with this approach is that I am bypassing all the hooks that are triggered with a push. I dont want to clone the repository on the server and push because that could take a lot of time if the repository is large. Is there any way for me to change the remote branch on the server and trigger the git hooks without making a clone of the repository and pushing the changes?</p>
",1,2745321,0,0
20045363,428692,11/18/2013 10:21,7,3076,<git><githooks>,Git: how to check out the currently pushed branch in the pre-push hook?,"<p>In my project I have a pre-push git hook that runs unit tests on every push.</p>

<p>But when I try to push changes from one branch while staying at another one, the unit tests will be run for the active branch, not for the currently pushed one. </p>

<p>For example, if I try to push changes from my new_feature branch while my working directory reflects the structure of the develop branch, the pre-push hook will run the unit tests for the develop branch, not for the new_feature.</p>

<p>The basic idea to get rid of this is to make a checkout of the currently pushed branch in the pre-push hook. But I have no idea how to get information about currently pushed branch inside the hook: this information is not contained in the hook arguments.</p>
",0,428692,0,0
20048015,520162,11/18/2013 12:38,4,319,<git><windows-7><githooks>,Which user executes the post-receive hook on a Windows machine?,"<p>So I have that <code>post-receive</code> hook in my bare repo that shall update tickets in my trac installation (hook taken from <a href=""http://trac.edgewall.org/attachment/wiki/TracGit/post-receive-hook.py"" rel=""nofollow"">http://trac.edgewall.org/attachment/wiki/TracGit/post-receive-hook.py</a>).</p>

<p>The git repo is located on drive <code>G:</code> while the trac database is stored on <code>F:\user\trac\myproject</code>. I customized the original hook so that the paths are correct:</p>

<pre><code>TRAC_ENV = 'F:\\User\\Trac\\myproject'
GIT_PATH = ""C:\\Program Files (x86)\\Git\\bin\\git.exe""
</code></pre>

<p>Before I uploaded the hook to my server, I verified the correct syntax (backslashes and so on) on my local machine where everything works fine.</p>

<p>Now, I uploaded the hook to <code>G:\git\myproject.git\hooks\post-receive</code> and I push some refs. But this gives me an error message:</p>

<pre><code>remote: Traceback (most recent call last):
remote:   File ""hooks/post-receive"", line 190, in &lt;module&gt;
remote:     env = open_environment(TRAC_ENV)
remote:   File ""build\bdist.win-amd64\egg\trac\env.py"", line 846, in open_environment
remote:   File ""build\bdist.win-amd64\egg\trac\core.py"", line 124, in __call__
remote:   File ""build\bdist.win-amd64\egg\trac\env.py"", line 283, in __init__
remote:   File ""build\bdist.win-amd64\egg\trac\env.py"", line 392, in verify
remote: trac.core.TracError: No Trac environment found at f:\user\trac\myproject
remote: [Errno 2] No such file or directory: 'f:\\user\\trac\\myproject\\VERSION'
</code></pre>

<p>So I guess it's an access rights related problem and the user that executes the <code>post-receive</code> hook has no access to the trac directory.</p>

<p>In order to overcome this: <strong>which user do I need to give access to the trac database so that the hook gets executed successfully?</strong></p>
",4,520162,,
58050750,8613138,9/22/2019 15:37,0,524,<jenkins><gitlab><githooks>,No valid crumb was included in the request Jenkins 2.192 git hooks,"<p>I tried many solutions in the internet and still unable to fix this. In jenkins Global security I tick Prevent Cross Site Request Forgery exploits with enable proxy compatibility. I also tried without Prevent Cross Site Request Forgery exploits and it causes to creating crumb. My jenkins URL is also correct.</p>

<p>My post-receive file looks like this,</p>

<pre><code>#!/bin/bash
# Get branch name from ref head

if ! [ -t 0 ]; then
  read -a ref
fi
IFS='/' read -ra REF &lt;&lt;&lt; ""${ref[2]}""
branch=""${REF[2]}""

if [ ""$branch"" == ""master"" ]; then
crumb=$(curl -u ""jenkins:1234"" -s 'http://jenkins:8080/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,"":"",//crumb)')
curl -u ""jenkins:1234"" -H ""$crumb"" -X POST http://jenkins:8080/job/maven/build?delay=0sec

  if [ $? -eq 0 ] ; then
    echo ""*** Ok""
  else
    echo ""*** Error""
  fi
fi
</code></pre>

<p>Error msg is 
<a href=""https://i.stack.imgur.com/gtk3k.png"" rel=""nofollow noreferrer"">HTTP ERROR 403</a></p>
",2,8613138,,
58051923,12103576,9/22/2019 17:52,5,565,<githooks>,How to check if commit first letter is uppercase with githooks,"<p>I have validation statement (full githooks commit-msg):
    #!/bin/sh</p>

<pre><code>read -r message&lt;$1

if [[ $text =~ ^[a-z] ]]
then
    printf ""$warning Check commit message.\n""
    exit 1
fi
</code></pre>

<p>When I make commit with text: ""This is my test commit"", githooks responds with:</p>

<pre><code>[WARNING] Check commit message.
</code></pre>

<p>But when I make it with something like this: ""this is my test commit"", I get tge same result.</p>

<p>What an I doing wrong?</p>

<p>I am using Wind10, Git version 2.20.1.windows.1 and GitBash.</p>
",1,12103576,0,0
39147452,3162189,8/25/2016 14:03,4,447,<git><git-rebase><githooks>,Git post-rewrite not executed,"<p>I have an executable <code>.git/hooks/post-rewrite</code> file, which for testing purposes
has the following lines in it:</p>

<pre><code>#!/bin/bash

echo ""Notice: post-rewrite hook is running""
</code></pre>

<p>My understanding is that the <code>post-rewrite</code> hook runs after operations that rewrite commit history, such as <code>rebase</code> and <code>git commit --amend</code>. </p>

<p>Indeed, running <code>git commit --ammend</code> will print the message to <code>stdout</code> after commiting. However, when I do <code>git rebase master</code> from a branch that is behind <code>master</code>, or <code>git pull --rebase</code>, nothing is printed to <code>stdout</code>.</p>

<p>Am I missing something?</p>
",0,3162189,,
39148206,3162189,8/25/2016 14:37,6,1186,<git><git-rebase><githooks><git-pull>,Executing a git-hook after pull --rebase,"<p>I'd like to have a hook run after doing <code>git pull --rebase</code> in order to check if a certain file was changed. Something along the lines of <a href=""https://gist.github.com/sindresorhus/7996717"" rel=""noreferrer"">this</a> hook.</p>

<p>I initially thought of using the <code>post-rewrite</code> hook, however that only works when commits are being rewritten, and won't run when the <code>pull</code> operation simply fast-forwards the branch, which is very often.</p>

<p>Any ideas will be appreciated.</p>
",0,3162189,0,0
58240452,504717,10/4/2019 16:54,0,355,<git><githooks><pre-commit-hook>,Git pre-commit isn't commiting,"<p>I have written a <code>pre-commit</code> hook to run <code>golinter</code> before the commit</p>

<pre><code>#!/bin/bash

REV_NUMBER=$(git rev-list --max-count=1 HEAD)

if [[ ""$REV_NUMBER"" = """" ]]; then
  exit 0
fi

echo ""golangci-lint run --new-from-rev $REV_NUMBER""
golangci-lint run --new-from-rev $REV_NUMBER

exit 1
</code></pre>

<p>The pre-commit files lies in my <code>&lt;project&gt;\.git\hooks\pre-commit</code>. </p>

<p>When i do <code>git commit -m ""Message""</code>, The pre-commit hook runs and does the linting part. But even after successful completion, the <code>git commit</code> never happens. I mean the files still remain in staging area. </p>

<p>Why?</p>
",0,504717,0,0
50980516,512100,6/22/2018 4:04,2,495,<git><shell><virtualenv><githooks>,Shell script for post-commit hook gives - Not a git repository error,"<p>I have written a post-commit hook which requires creating the virtual environment for the python script to run when a commit happens.</p>

<p>Following is my script:</p>

<pre><code>#!/bin/bash
# Teamcity-build trigger

echo ""Executing post-commit hook""

BASEDIR=$(dirname $(readlink -f $0))
VENV=venv
ACTIVATE=$VENV/bin/activate
STATUS=false
CIDIR=teamcity

# Username
machine=$(uname -n)

echo ""Notifying Teamcity Server to execute a Build on "" $machine
# Logic to check if commit is done or merged to a particular branch / master branch

cd $BASEDIR
# Change directory to parent directory, since current directory is `.git/hooks/`
cd ../..
# Go in teamcity directory
cd $CIDIR

# Check if venv folder exists, if it does not then create it
if [ ! -d ""$VENV"" ]; then
  # Control will enter here if $VENV doesn't exist.
  virtualenv -p python $VENV
  STATUS=true
fi

# Source virtual environment
source $ACTIVATE

# Install required dependencies if not yet installed
if [ ""$STATUS"" = true ]; then
    # if status is true, means need to install all the required libraries
    pip install --upgrade pip
    pip install -r requirements.txt
fi

# check current git branch
# $(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')
BRANCH=$(git rev-parse --symbolic-full-name --abbrev-ref HEAD)
if [ ""$BRANCH"" = ""rahul"" ]; then
    # if branch is master, then only proceed.
    # Start processing teamcity jobs
    python last_dir_processed.py
else
    echo ""Current Branch $BRANCH, Nothing to execute.""
fi

# Deactivate virtual environment
deactivate
</code></pre>

<p>On line 43,</p>

<pre><code>BRANCH=$(git rev-parse --symbolic-full-name --abbrev-ref HEAD)
</code></pre>

<p>the script tries to know name of the current branch. </p>

<p>But it gives error as:</p>

<pre><code>fatal: Not a git repository: '.git'
</code></pre>

<p>I chacked the folder path with pwd command before that line and it shows <code>.git</code> folder exists. </p>

<p>Also, When I ran following command manualy, it worked:</p>

<pre><code>git rev-parse --symbolic-full-name --abbrev-ref HEAD
</code></pre>

<p>This gave me a current branch name.</p>

<p><strong>EDIT:</strong> Following is my directory structure:</p>

<pre><code>--root_dir
    --teamcity
        -last_dir_processed.py
    --.git
        --hooks
            -post-commit
</code></pre>

<p>So, ideally the script should execute properly, but still it gives the error. Not sure what could be the reason.</p>
",0,512100,0,0
20311851,1195099,12/1/2013 11:59,1,296,<git><githooks>,Pre-push and post-push hooks involving remote checkout,"<p>I have a remote repository for a website which I am developing on my local machine.</p>

<p>I use <code>git flow</code> for neat branching model, so my branches are:</p>

<ul>
<li>master</li>
<li>develop</li>
<li>feature/one</li>
<li>feature/two</li>
<li>release/one</li>
<li>release/two</li>
<li>etc</li>
</ul>

<p>The simplified work flow is as follows:</p>

<ul>
<li>make changes in <code>develop</code></li>
<li>push develop to backup server</li>
<li>checkout to <code>master</code></li>
<li>merge <code>master</code> with develop`</li>
<li>push <code>master</code> to live server</li>
</ul>

<p>What I want to achieve, is that when I push <code>master</code> branch to live server, I should be able to instantly see changes when accessing website by URL.</p>

<p>The problem is that I can't really push <code>master</code>, because it is checked out on live server.</p>

<p>Can I write a pre-push hook which will do a checkout to <code>dummy</code> branch on remote, and a post-push hook which will do a checkout back to <code>master</code>? The point is that these hooks involves execution of git commands on remote and I'm not sure how to do this.</p>

<p>Would appreciate any examples very much!</p>
",0,1195099,0,0
58288499,2175231,10/8/2019 14:32,2,3181,<git><hook><githooks>,"Git pre-commit/pre-push hook to run unit tests on commits, with uncommited changes on the working tree","<p>I currently have a simple <code>pre-commit</code> hook for my project (in R, though that's incidental to this question) which runs unit tests:</p>

<pre><code>#!/bin/sh
a=$(Rscript tests/testthat.R)
exit $a
</code></pre>

<p>Where <code>tests/testthat.R</code> is a wrapper file that handles all the tests.</p>

<p>This hook has a problem, though: if I make partial commits (such that there are still changes which remain uncommitted), the tests will run on the current state of the working tree, including the uncommitted changes.</p>

<p>So, let's say I finish ""Step 1"" of something I'm doing but forget to commit it. I then start on ""Step 2"", but then realize I forgot to commit ""Step 1"". If ""Step 2"" is currently in a broken state due to my unfinished changes, I won't be able to do a partial commit for ""Step 1"" because the tests will detect that ""Step 2"" is defective.</p>

<p>So, is there a way for the hook to run on the version which is actually being committed? My thought would be a hook which effectively temporarily checks out a commit, runs the tests on that checkout, deletes the checkout, and then defines whether to allow the commit to go through. But given that this hook triggers before the commit is done, I'm assuming it's impossible to check it out.</p>

<p>I'd also be open to a <code>pre-push</code> hook. This seems more plausible since the hook receives the SHA's for the commits being pushed, so my idea above seems more reasonable: get the latest SHA, create a temporary directory, checkout that SHA, run the tests, delete the directory. But then my question becomes whether that's actually the suggested method or if I'm overcomplicating things due to my ignorance.</p>
",0,2175231,,
20410235,1050685,12/5/2013 20:41,0,81,<php><git><githooks>,PHP Git Hook works directly when test execution but not when executing via git,"<p>I created the following git hook to automate some tasks for me and to pipe it back down when I push a commit to my server. The code works fine when I run it directly. When the git push pushes to the server and the server executes the hook it says </p>

<pre><code>remote: Deployment [BETA]: updating.
remote: git fatal not a git repository.
remote: Deployment [BETA]: complete.
remote: git fatal not a git repository.
</code></pre>

<p>My hook code is:</p>

<pre><code>#!/usr/bin/php
&lt;?php

chdir(""/var/www"");

echo ""Deployment [BETA]: updating."" . PHP_EOL;
exec(""git pull"");
echo ""Deployment [BETA]: complete."" . PHP_EOL;

// Get the last commit message.
$log = shell_exec(""git log -n 1 HEAD"");

if (stripos($log, ""[trigger:composer]""))
{
    echo ""Composer: starting."" . PHP_EOL;
    system(""php /home/root/bin/composer.phar update"");
    echo ""Composer: completed."" . PHP_EOL;
}

if (stripos($log, ""[trigger:phpunit]""))
{
    system(""./vendor/bin/phpunit"");
}
</code></pre>

<p>If anyone can help me that would be really appreciated.</p>
",2,1050685,,
35127683,246568,2/1/2016 10:04,0,1595,<githooks><atlassian-sourcetree>,Git hook that runs when you start the commit process in sourcetree?,"<p>Is there a git hook that runs when I hit the ""Commit"" button in SourceTree?</p>

<p>What I am trying to do is add everything. I've tried the following, in the file ./git/hooks/pre-commit:</p>

<pre><code>#!/bin/sh
git add .
echo ""hook added everything!""
</code></pre>

<p>It runs all right, but the timing is wrong -- it appears to run as a part of actually performing the commit. So what happens is that git first decides that that nothing has been added, so the commit needs to fail. THEN it runs the hook and adds everything. Lastly, the commit fails. If I repeat the commit, it will succeed the second time. But that's wrong on several levels. What I really want is to add everything before it opens up the window for the commit message. Then if I want to un-add some stuff, I should be able to do that in that window. Lastly, when I tell SourceTree to go ahead with the commit, I don't actually want a hook at that point, as I've already configured add/remove the way I want it to be.</p>
",1,246568,,
58380126,2175231,10/14/2019 15:48,1,292,<windows><git><githooks><gitkraken>,GitKraken ignoring server-side pre-receive hooks?,"<p>Does GitKraken bypass server-side pre-receive hooks?</p>

<p>I have a commit I want to push to the server.</p>

<p>However (for testing purposes), I've set a trivial <code>pre-receive</code> hook on the server which rejects any and all pushes and creates a file (as a signal the hook's running):</p>

<pre><code>#!/bin/bash

echo tests &gt; $PWD/../x.txt
exit 1
</code></pre>

<p>If I use Git Bash (for Windows), my push obviously gets rejected, but file <code>x.txt</code> is created out of the server repo:</p>

<pre><code>$ git push
[...]
To server/repo.git
 ! [remote rejected] master -&gt; master (pre-receive hook declined)
error: failed to push some refs to 'server/repo.git'
</code></pre>

<p>However, if I perform the push via GitKraken, the push goes through, and <code>x.txt</code> is not created! Running <code>git log</code> on the server confirms that the push went through, so GitKraken isn't lying.</p>

<p>How's this possible? These hooks aren't shown on the <a href=""https://support.gitkraken.com/working-with-repositories/githooks/"" rel=""nofollow noreferrer"">relevant GitKraken support page</a>, but I assume that's because those are all local hooks (<code>pre-commit/rebase</code>, etc). I can't understand how it gets the server to ignore its own hooks...</p>

<p>As a reproducible example, in Git Bash:</p>

<pre><code>cd /testdir
mkdir repo.git
cd repo.git

git init --bare
# Initialized empty Git repository in /testdir/repo.git/

cat &gt; hooks/pre-receive &lt;&lt; EOF
  #!/bin/bash
  echo Nope!
  echo x &gt; ../x.txt
  exit 1
EOF

cd ..
git clone repo.git
# Cloning into 'repo'...
# warning: You appear to have cloned an empty repository.
# done.

cd repo
touch .gitignore
git add .
git commit -m ""test""
# [master (root-commit) e9b25d3] test
# Committer: Wasabi &lt;wasabi@email.local&gt;
# Your name and email address were configured [...]
# 1 file changed, 0 insertions(+), 0 deletions(-)
# create mode 100644 .gitignore

git push
# Enumerating objects: 3, done.
# Counting objects: 100% (3/3), done.
# Writing objects: 100% (3/3), 214 bytes | 53.00 KiB/s, done.
# Total 3 (delta 0), reused 0 (delta 0)
# remote: Nope!                          # shows the hook is working
# To testdir/repo.git
#  ! [remote rejected] master -&gt; master (pre-receive hook declined)
# error: failed to push some refs to 'testdir/repo.git'

ls ..
# repo/  repo.git/  x.txt

rm ../x.txt

# Confirming the push really didn't go through
cd ../repo.git
git log
# fatal: your current branch 'master' does not have any commits yet
</code></pre>

<p>The <code>remote: Nope!</code> and presence of <code>x.txt</code> mean the hook was called and the <code>git log</code> shows we successfully rejected the push.</p>

<p>However, if I now open <code>repo</code> in GitKraken, I can simply click ""Push"", tell it to use the default origin/master branch, and get the notification ""Push Successful: master to origin"".</p>

<p>Confirming the push truly went through with Git Bash:</p>

<pre><code>cd ../repo.git
git log
# Author: Wasabi &lt;wasabi@email.local&gt;
# Date:   Mon Oct 14 15:00:49 2019 -0300
# 
#     test
</code></pre>
",0,2175231,,
20522843,1533046,12/11/2013 15:17,0,257,<git><githooks><git-commit>,How do I make git block commits that do not include a certain file?,"<p>I have one repo containing several directories which are essentially broken down into separate apps down the folder path, like this:</p>

<pre><code>repo/foo/app1
        /app2
        /app3
    /bar/app1
        /app2
        /app3
    /red/app1
        /app2
        /app3
</code></pre>

<p>I now have a need to provide version info (metadata.rb) for app2. I want to configure git to block any commits for any app2 folder that does not include a change to app2/metadata.rb. I don't have root access to the repo, so I need to do this all locally. I know I can use a hook, but I don't know how to configure the hook. Thanks!</p>
",4,1533046,,
39571480,4547075,9/19/2016 10:56,11,9614,<git><github><githooks>,How to add git hook to the remote repository?,"<p>I've created a pre-commite hook and it works on my local machine, but I don't know how can I share this hook with my collegs  </p>

<p>I will be grateful for any help.</p>

<p>Thanks in advance Denis</p>
",1,4547075,0,0
39630661,5353461,9/22/2016 5:05,3,1458,<git><githooks>,Skip some or all git hooks,"<p>I've got a <code>post-checkout</code> hook that takes some time to run, and I want to skip it if I'm bouncing around between branches doing fix-ups.</p>

<p>How can I generically skip the execution of some or all <code>git</code> hooks?</p>
",1,5353461,,
39759814,2630028,9/29/2016 1:07,0,299,<git><githooks>,Git server-side hooks sometimes do not execute on the server side?,"<p>I understand that the script is ran on the remote repo, but which context does the script execute in? Does it use the resources of the client machine or the resources of the server machine? Or does it change depending on how the client repo communicates with the remote repo. I can't seem to find this information officially documented anywhere. </p>

<p>Edit:</p>

<p>I should've probably formulated my question differently. Anyway, I just ran into this:</p>

<p><a href=""https://superuser.com/questions/974337/when-i-run-a-git-hook-in-a-repo-on-a-network-share-which-binaries-are-used"">https://superuser.com/questions/974337/when-i-run-a-git-hook-in-a-repo-on-a-network-share-which-binaries-are-used</a></p>

<p>which mentions that ""If it’s a regular (SMB/CIFS) network share, it’s executed on the client."" When doing <code>git remote -v</code> from within the local repo it shows the local protocol (file://) mapped to origin, and pushing to the remote on the network share ends up using the Perl on my client, instead of the Perl on the server, verified with <code>perl --version</code>. So what I really wanted to ask is given this information, how can this be if they're ""server-side"" hooks? Shouldn't they ALWAYS run on the server regardless? This is on Windows btw.</p>
",4,2630028,,
39768542,2470628,9/29/2016 11:05,1,123,<git><githooks>,How to use POST_UPDATE git hook on windows,"<p>I'm trying to deploy my project on remote window server by initializing post-update hook file on server repository.
I've created a ""git init --bare"" repository and renamed post-update-sample hook file to post-update.(i'm using bonobo for git server)
Then i've created my stage repository somewhere else on server and added following line to post-update hook file on bare-git repository :
GIT_WORK_TREE=C:\projects\myproject git checkout -f</p>

<p>on local machine i've added bare-git repo as a remote repository and pushed my project to that server.pushing process done successfully but it seems hook not worked at all..</p>

<p>Now i need help on post-update hook file initializing...</p>
",0,2470628,0,0
39770937,1501285,9/29/2016 12:54,4,586,<git><githooks><git-tower>,How to get the Git Commit message in Git Tower?,"<p>I am using this script in the githook <code>commit-msg</code>.</p>

<pre><code>#!/usr/bin/python
import sys
import re
ret = 1
try:
    with open(sys.argv[1]) as msg:
      res = re.match(""^fix gh-[0-9]+.*$"", msg.readline())
      if res != None: 
          ret = 0
except:
    pass
if (ret != 0):
    print(""Wrong commit message. Example: 'fix gh-1234 foo bar'"")
sys.exit(ret)
</code></pre>

<p>The problem is that Git Tower doesn't seem to include any arguments inside <code>argv</code>. How to solve this in a way that I can use git both from the command line as in a GUI like Git Tower?</p>
",3,1501285,,
58657023,11060885,11/1/2019 9:41,1,778,<git><eslint><githooks><eslintrc>,How to make eslint work in git-hook pre-commit (it works only in terminal)?,"<p>I try to set up easy eslint check on pre-commit hook.</p>

<p>There is a folder with git repo and project-folders inside:</p>

<pre><code>test3/
—.git
—project1/
——node_modules/
——src/
———js/
————1.js
——.eslintrc.json
</code></pre>

<p>I set up eslint locally and <a href=""https://github.com/standard/eslint-config-standard"" rel=""nofollow noreferrer"">eslint-config-standard</a>:</p>

<pre><code>npm install --save-dev eslint-config-standard eslint-plugin-standard eslint-plugin-promise eslint-plugin-import eslint-plugin-node
npm install --save-dev eslint
</code></pre>

<p>Create config .eslintrc.json:</p>

<pre><code>{ ""extends"": ""standard""}
</code></pre>

<p>Launch it in terminal - it works perfect:</p>

<pre><code>./node_modules/.bin/eslint src/js
</code></pre>

<p>Try to make git-hook, go to <code>.git/hooks</code>, rename <code>pre-commit.sample</code> in <code>pre-commit</code>. Remove all inner code and insert my own:</p>

<pre><code>path=""$(git rev-parse --show-toplevel)""
""$path/project1/node_modules/.bin/eslint"" ""$path/project1/src/js/""
</code></pre>

<p>Try to commit changes in js-file, and get error:</p>

<pre><code>[notebook@NOTEBOOKs-MacBook-Pro project1 (master +)]$ git commit -m ""T""
Oops! Something went wrong! :(
ESLint: 6.6.0.

ESLint couldn't find the plugin ""eslint-plugin-import"".

(The package ""eslint-plugin-import"" was not found when loaded as a Node module from the directory ""/Users/notebook/Documents/Projects/test3"".)
It's likely that the plugin isn't installed correctly. Try reinstalling by running the following:
npm install eslint-plugin-import@latest --save-dev
The plugin ""eslint-plugin-import"" was referenced from the config file in ""project1/.eslintrc.json » eslint-config-standard"".

If you still can't figure out the problem, please stop by https://gitter.im/eslint/eslint to chat with the team.
</code></pre>

<p><b>It looks like local eslint doesn't see his own local plugins. How can i show it him? Where should i write correct paths to plugins?</b></p>
",0,11060885,,
1797074,211626,11/25/2009 13:58,73,53267,<git><githooks>,Local executing hook after a git push? (post-push),"<p>I've looked at <a href=""http://git-scm.com/docs/githooks"" rel=""noreferrer"">the githooks manpage</a> but unless I'm missing something I don't see an option for local, post-push git hooks.  I'd like to have one that updates the api docs on my web server (for which I already have a script) after I push the master branch to the GitHub repo.  Of course I could just write my own script that combines the git push and the api docs run, but that feels somewhat inelegant.</p>
",1,211626,0,0
58661511,5918836,11/1/2019 15:07,1,56,<git><githooks><git-init>,Create custom directories when initializing a Git repo,"<p>I want to have the same structure in all new Git repos, for example:</p>

<pre><code>repo
|- .git (created by git-init)
|- src
|- doc
|- README
</code></pre>

<p>Of course, in *nix I can have something like <code>alias ginit=""git init &amp;&amp; mkdir ... &amp;&amp; touch ...""</code></p>

<p>Can I have some kind of hook for git-init to create the dirs and a file only by means of Git itself?
As far as I understand, <code>--template=</code> changes the structure of <code>.git</code> only.</p>
",3,5918836,,
35190847,5880778,2/4/2016 1:19,0,532,<python><git><variables><hook><githooks>,How to get access to git commit variables (python)?,"<p>I am new to git, and am starting to understand how it works.</p>

<p>I am trying to create a personal pre-commit hook to train myself, and I would like to get access to variables such as the username of the committer, number of files committed, their names, titles etc.</p>

<p>How can I do that?</p>

<p>I read this thread <a href=""https://git-scm.com/book/en/v2/Git-Internals-Environment-Variables"" rel=""nofollow"">https://git-scm.com/book/en/v2/Git-Internals-Environment-Variables</a> and I know some of the variables that interest me exist, but as I said, my problem is not knowing how to access them.</p>

<p>Oh, and I am writing my hooks in python.</p>
",0,5880778,,
58665382,4034025,11/1/2019 20:16,1,180,<git><github><push><zsh><githooks>,Check if current user is owner of GitHub remote in zsh,"<p>I'm trying to write a <code>git pre-push</code> hook that performs some actions prior to pushing to <code>origin</code> <em>if</em> the person pushing is the repo's owner. Is there a way to check this in <code>bash</code>/<code>zsh</code>?</p>
",4,4034025,,
20795592,154142,12/27/2013 5:56,5,752,<.net><windows><git><bash><githooks>,exit code from windows console app not available in git hook script,"<p>I have the following git pre-commit hook in Windows:</p>

<pre><code>#!/bin/sh
./bin/Verification.exe
if [ $? -ne 0 ]
then 
    echo ""Failed verfication: canceling commit""
    exit 1
fi
exit 0
</code></pre>

<p>Verification.exe is a .Net console app the I boiled down to this for testing purposes:</p>

<pre><code>static int Main(string[] args)
{
    return -1;
}
</code></pre>

<p>The issue is that the bash script does not seem to make the exit code from the console app (i.e. -1) available in the $? variable. The exe runs, but the if-condition is always true in the script. I tried running Verification.exe from a Windows batch file with an ""echo %errorlevel%"" and it returns -1 as expected.</p>

<p>How do I test for the exit code inside the pre-commit script?</p>
",0,154142,0,0
58726496,8954551,11/6/2019 9:07,0,951,<git><github><ftp><githooks>,CallBack after push to GitHub,"<p>I want to push to an FTP server after I have pushed a commit to GitHub. Does Git have some kind of callback to call after a push went ok/</p>

<p>Can git hooks do this kind of job?</p>
",1,8954551,,
18722417,1362977,9/10/2013 15:01,1,449,<git><githooks>,Is it possible for githooks to execute in parallel?,"<p>Currently I'm concerned just about pre-receive hook and post-receive hook but it would be nice to have a complete list of hooks for which it is possible to execute in parallel (if there are any).</p>

<p>I'm asking this because it is important to know if you need to take care to write the code so there may run multiple instances without steping on each other toes.</p>

<p>I'm thinking the hooks get executed for actions that manipulate the internal state of the repository, therefore there can be only one ""writer"" at a time and if there is eg. multiple pushes happening at the same time, they are queued and processed in serial.</p>

<p>But that's just my guess and I'd like to see some authoritative answer. I don't see an answer to this in <code>man githooks</code> and don't know where else to look (besides the source).</p>
",0,1362977,,
18723219,2765564,9/10/2013 15:37,1,1875,<git><hook><githooks>,View commits on a new branch in the update hook,"<p>I wrote an update hook (server-side) which checks all commit messages (To check if there is an Issue Id)</p>

<p>There is an extract of my python code (update.py):</p>

<pre><code>[...]
if newrev == ""0000000000000000000000000000000000000000"":
  newrev_type = ""delete""
elif oldrev == ""0000000000000000000000000000000000000000"":  
  newrev_type = ""create""

  # HERE IS MY QUESTION, I want to get the commits SHA-1 :-)

else:
  POPnewrev_type = os.popen(""git cat-file -t "" + newrev)
  newrev_type = POPnewrev_type.read()[0:-1]
  # get the SHA-1
  POPanalyzelog = os.popen(""git log "" + oldrev + "".."" + newrev + "" --pretty=#%H"")
  analyzelog = POPanalyzelog.read().split('#')
[...]
</code></pre>

<p>So, here, in case of newrev_type = ""delete"", the user wants to delete a branch => No problem.<br>
In case of pushing in an existing branch, we get the SHA-1 of the commits => OK<br>
But when the user creates a branch, I don't know how to get the SHA-1...</p>

<p>Do you have any ideas?</p>
",0,2765564,0,0
20936008,2777322,1/5/2014 16:27,1,202,<git><githooks>,"How to avoid ""git post-receive hook - remote: git: 'pull' is not a git command. See 'git --help'""?","<p>I wrote a <code>post-receive</code> hook to pull from central when somebody else is pushing.<br>
My problem is that I see:</p>

<pre><code>remote: git: 'pull' is not a git command. See 'git --help'.
</code></pre>

<p>However, when I pull manually, everything goes ok.<br>
There's my hook:</p>

<pre><code>dir=${PWD##*/}
cd ""/cygdrive/d/repos/.non-bare/$dir""
unset GIT_DIR
git pull
</code></pre>

<p>How would you fix that hook in order to avoid the error message?</p>
",0,2777322,0,0
35212713,4284929,2/4/2016 22:15,3,1023,<git><bash><shell><githooks><nohup>,"How to make ""nohup ./script.sh & disown"" working in post-receive git hook?","<p>I expect that the script called with<BR></p>
<pre><code>nohup ./script.sh &amp; disown
</code></pre>
<p>will be executed in background and it's output won't be seen while pushing.
But I see the output and I have to wait a delay. Here are the contents of the called script:<BR></p>
<pre><code>#!/bin/bash
echo 'test'
sleep 5
</code></pre>
<p>How to make it run as a detached process from my git hook script?<BR>
Thanks</p>
<h1>Update</h1>
<p>I've understood that I need no <code>nohup</code>... For some reason it prevented running my script in background (and maybe disowning it too). So I've got the following string in my hook, and it's working now:</p>
<pre><code>./script.sh &gt; /dev/null 2&gt;&amp;1 &amp; disown
</code></pre>
<p>Thanks to @CharlesDuffy for pointing out uselessness of nohup (in this particular case) to me.</p>
",4,4284929,,
39963695,6006686,10/10/2016 17:30,137,116829,<git><githooks>,How to remove git hooks,"<p>I had set up a git hook in pre-commit file to run <code>git pull</code> before any commit. Now I have deleted that file and restarted my computer multiple times, but that hook is still running before my commits.  </p>

<p>How can I remove  or disable that completely?</p>
",0,6006686,0,0
1997916,208525,1/4/2010 6:58,2,1899,<git><githooks><git-post-receive>,Git post-receive - how to check if pushed branch is merged with master,"<p>In our team we are usually pushing all tasks into separate branches, and after that release-manager review those branches and merge them into 'master' branch</p>

<p>Sometimes team-members forget to merge their branches with master branch(before pushing) - so what I'm trying to do is - output a message ""Please merge with master"" after user push - I assume I need to check something on post-receive hook on remote.. is there some examples?.. or what I should basically do ?</p>

<p>update: main reason for this - minimize number of potential conflicts (since committer(not release-manager) will resolve them)</p>
",0,208525,0,0
35219160,4742108,2/5/2016 8:09,2,2051,<git><githooks>,git hook to refuse adding files with certain extension,"<p>How to refuse pushing of *.bak files for example?</p>

<p>So new files with this extension and renaming to *.bak is blocked by the git server.</p>
",0,4742108,,
2087216,49376,1/18/2010 15:47,40,11974,<python><unit-testing><git><githooks>,Commit in git only if tests pass,"<p>I've recently started using git, and also begun unit testing (using Python's <code>unittest</code> module). I'd like to run my tests each time I commit, and only commit if they pass.</p>

<p>I'm guessing I need to use <code>pre-commit</code> in <code>/hooks</code>, and I've managed to make it run the tests, but I can't seem to find a way to stop the commit if they tests fail. I'm running the tests with <code>make test</code>, which in turn is running <code>python3.1 foo.py --test</code>. It seems like I don't get a different exit condition whether the tests pass or fail, but I may be looking in the wrong place.</p>

<p><strong>Edit:</strong> Is this something uncommon that I want to do here? I would have thought it was a common requirement...</p>

<p><strong>Edit2:</strong> Just in case people can't be bothered to read the comments, the problem was that <code>unittest.TextTestRunner</code> doesn't exit with non-zero status, whether the test suite is successful or not. To catch it, I did:</p>

<pre><code>result = runner.run(allTests)
if not result.wasSuccessful():
    sys.exit(1)
</code></pre>
",3,49376,0,0
40047188,2923135,10/14/2016 15:44,0,568,<git><githooks>,Git hook to check presence of code,"<p>I have limited knowledge in git to understand the documentation on <code>git-hooks</code>. I wanted to know if there is a way to add a <code>git-hook</code> or some other construct such that it can check whether some code is present/commented out in one of the files. My workflow is that I have a configuration file <code>globalConfig.js</code> which contains two set of configurations <code>development</code> and <code>production</code>. When I am developing, I uncomment out the <code>development</code> configuration and comment out <code>production</code> configuration but when I commit any code to my repo, I want to make sure that the <code>production</code> configuration is uncommented and <code>development</code> configuration is commented.</p>

<p><strong>Excerpt from globalConfig.js file</strong></p>

<p><strong>Development</strong></p>

<pre><code>  // Production config - Always uncomment it before commiting
  // const firebaseConfig = {
  //   apiKey: ""prod"",
  //   authDomain: ""prod"",
  //   databaseURL: ""prod"",
  //   storageBucket: ""prod"",
  //   messagingSenderId: ""prod""
  // };

  // Dev config - Always comment out before commiting
  const firebaseConfig = {
    apiKey: ""dev"",
    authDomain: ""dev"",
    databaseURL: ""dev"",
    storageBucket: ""dev"",
    messagingSenderId: ""dev""
  };
</code></pre>

<p><strong>Production</strong></p>

<pre><code>  // Production config - Always uncomment it before commiting
  const firebaseConfig = {
   apiKey: ""prod"",
   authDomain: ""prod"",
   databaseURL: ""prod"",
   storageBucket: ""prod"",
   messagingSenderId: ""prod""
  };

  // Dev config - Always comment out before commiting
  // const firebaseConfig = {
  //  apiKey: ""dev"",
  //  authDomain: ""dev"",
  //  databaseURL: ""dev"",
  //  storageBucket: ""dev"",
  //  messagingSenderId: ""dev""
  //};
</code></pre>

<p>Is it possible to achieve it via <code>git-hook</code>or some other git construct?</p>
",1,2923135,0,0
40111541,5935343,10/18/2016 14:52,0,19,<git><permissions><githooks><git-config>,"Git:User->Server->hook post rec->push to Live Server ""Fatal: empty ident <push@blabla.(none)) not allowed"" when push despite having identity set","<p>I'm getting this error:</p>

<p>The architecture and workflow is like this:</p>

<p>1)developer pushes to remote repo(dev server) through ssh-> 
2)Dev server has a post receive hook that invoques a bash script on a live server through ssh-></p>

<pre><code>#!/bin/bash
while read oldrev newrev refname
do


    branch=$(git rev-parse --symbolic --abbrev-ref $refname)

    # Use this if-sentence to only update live server if branch is the wanted branch, e.g. master or stable
    if [[ ""desarrollo"" == ""$branch"" ]]; then
            # Fetch this branch from live-server
            ssh push@mpdvsweb-test.jusbaires.gov.ar '/bin/gitmirror'
    fi
done
</code></pre>

<p>3)Live server executes the script that fetches data from the dev server-></p>

<pre><code>#!/bin/bash

cd /var/www/penal_test_git
git fetch git-repo
git merge -m 'Overwriting live server' -s recursive -X theirs git-repo/desarrollo
</code></pre>

<p>4)I get the the following error on the machines of every developer(the git config --global is set for us but it's not working, I also tried setting it for the repository and it doesn't work either) </p>

<p><a href=""https://i.stack.imgur.com/CZiIB.png"" rel=""nofollow""><img src=""https://i.stack.imgur.com/CZiIB.png"" alt=""enter image description here""></a></p>

<p>what could be failing?</p>

<p><code>git config --local -l</code>   returns the user.name and the user.email  and  <code>git config -l</code> returns the user.name and user.email twice , maybe one is the local and the other the global. On another developer machine the global is the only one set and is not working either</p>
",0,5935343,,
21107190,2250435,1/14/2014 6:19,1,86,<git><bundler><githooks><middleman>,What's different about the git hook environment? (Running Middleman in a post-receive hook),"<p>Is there something different about the environment that a Git Hook SSHs into, compared to one that you SSH into manually?  I'm trying to run Middleman as part of a post-receive hook, and can't get it to work properly.  Even after the script runs Bundler, which should ensure that Middleman and any other gems are installed, the script can't find any of the gems that were just installed, and the rest of the post-receive hook never gets executed.  If I SSH into the server and run Middleman from there, there are no issues.  I already have the post-receive hook running <code>source ~/.bash_profile</code>, so I figured that all the paths for RVM should be getting loaded properly, but I just can't get it all to work.  Any tips on working with git hooks would be greatly appreciated!</p>
",1,2250435,0,0
40118623,284865,10/18/2016 21:45,2,384,<git><github><githooks>,Is there a way to have git pre-push hooks on GitHub? Or Workarounds?,"<p>Goal:  I need to enforce a pre-push hook on my GitHub-hosted repository branches, which have collaborators, and unfortunately I can't find a way to get that hook to find its way into my collaborators' and my own .git/hooks directory.</p>

<p>I've spent time researching this issue and I've come across the following blockers:</p>

<ul>
<li>No GitHub server-side hooks so that's not an option. Not using GitHub Enterprise, we're using the hosted version.</li>
<li>Cannot add .git/hooks/pre-push, because .git is an illegal directory to track.  GitHub of course won't let you create that directory, and if you try to add it locally git says that it's an invalid path. </li>
</ul>

<p>Popular wisdom wants me to: push out the pre-push script in a different directory, and kindly ask my collaborates to symlink it.  No!  I need this to automatically populate.</p>

<p>I know myself better than git knows me.  How do I override the nanny protections so I can do what I need to do here?  Is there some magic with templates?</p>

<p>EDIT:  or any other creative solutions (services, integrations, webhooks, assuming they don't require setting up a server to talk back to!).</p>
",2,284865,0,0
40123529,6881926,10/19/2016 6:12,0,2571,<git><gitlab><githooks><gitlab-omnibus>,Remote GitLab API is not accessible,"<p>Yesterday I installed GitLab Community Edition on my server. Installation went fine, but this error occurs when we push data or files to the GitLab server:</p>

<pre><code>Password for 'http://naman550.dx@gmail.com@112.196.23.228': 
Counting objects: 6, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (6/6), 431 bytes | 0 bytes/s, done.
Total 6 (delta 0), reused 0 (delta 0)
remote: GitLab: API is not accessible
To http://112.196.23.228/Naman/mt-test.git
 ! [remote rejected] master -&gt; master (pre-receive hook declined)
error: failed to push some refs to 'http://112.196.23.228/Naman/mt-test.git'
</code></pre>
",3,6881926,,
2293498,184609,2/19/2010 1:24,318,94712,<git><hook><githooks>,Applying a git post-commit hook to all current and future repositories,"<p>I've written a Git post-commit hook and it works correctly.  However, I want to add this hook to apply to all current (and future) Git repositories I am working on.  I tried adding the hook to my <code>~/.git/hooks/</code> directory instead of in the hooks directory in the project directory, however, this did not seem to work.</p>
<p>Is there a way to create global Git hooks that will apply to all repositories on my system (without having to copy them into each project directory)?  If not, what would be the best solution going forward -- perhaps a git-init template?</p>
",3,184609,0,0
2296921,42223,2/19/2010 14:22,3,913,<git><scripting><shebang><githooks>,is there a hack for fully functional cross-platform shebang line?,"<p><strong>Problem:</strong> apparently the scripts in the .git/hooks directory depend on the filename matching one of:</p>

<pre><code>post-commit
pre-commit
pre-rebase
</code></pre>

<p>etc ...</p>

<p>No concept of ""file extension"" is required because the ""shebang line"" indicates how the file should run, as long as it is executable and running on your Linux box.</p>

<p>The problem is when you have some scripts that you want to run on a Windows box.</p>

<p><strong>Question:</strong> Is there a way to execute the hook scripts that can be understood on a Windows machine?</p>
",0,42223,0,0
21197761,378170,1/17/2014 23:15,0,33,<git><githooks>,Can git hooks be used on a custom web app setup?,"<p>I often clone some basic barebones applications to start new web projects.
But I often have to edit the same files each time that happen and that's really time consuming.</p>

<p>I'm not even sure if this option makes sense, or if there's something better but:</p>

<p>Is there any proper use of git hooks that may run immediately after clone, that may allow us to, somehow, edit those files, by given (or finding) certain parameters?</p>

<p>Or are we trying to use the wrong tool for the job?</p>
",0,378170,,
18804552,111683,9/14/2013 17:37,7,2503,<git><githooks>,Using GIT to deploy website,"<p>I have followed this excellent write up <a href=""http://toroid.org/ams/git-website-howto"" rel=""noreferrer"">http://toroid.org/ams/git-website-howto</a> to deploy code to my server using Git's post-hooks strategy.</p>

<p>I have a <strong>post-update</strong> file that looks like this:</p>

<pre><code>GIT_WORK_TREE=/home/rajat/webapps/&lt;project name&gt; git checkout -f
</code></pre>

<p>Everytime I push code to <strong>master</strong> branch, it gets auto deployed. What I want to do now is to make this support multiple branches, so that:</p>

<ol>
<li>git push origin master -----> deploys code to production (/home/rajat/webapps/production)</li>
<li>git push origin staging ----> deploys code to staging (/home/rajat/webapps/staging)</li>
<li>git push origin test ----> deploys code to test (/home/rajat/webapps/test)</li>
</ol>

<p>For this, the <strong>post-update</strong> hook needs to understand which branch got updated. Is this possible ?</p>
",0,111683,0,0
21286002,228660,1/22/2014 14:43,0,719,<git><githooks>,Git pre-commit hook gist,"<p>I found this snippet of code <a href=""https://gist.github.com/wrboyce/786460"" rel=""nofollow"">https://gist.github.com/wrboyce/786460</a></p>

<pre><code>#!/usr/bin/zsh

COMPRESSOR=$(whence -p yui-compressor)
[ -z $COMPRESSOR ] &amp;&amp; exit 0;

function _compress {
        local fname=$1:t
        local dest_path=$1:h
        local min_fname=""$dest_path/${fname:r}.min.${fname:e}""
        $COMPRESSOR $1 &gt; $min_fname
        git add $min_fname
}

for file in $(find . -regextype posix-extended -iregex '.+\.(css|js)$' -and -not -iregex '.+\.min\.(css|js)$'); _compress $file
</code></pre>

<p>On my osx machine it says:</p>

<blockquote>
  <p>.git/hooks/pre-commit: line 2: whence: command not found</p>
</blockquote>

<p>I believe this is for linux only? Could anyone help to do this on a mac? I want to minify my css and javascript before it is sent to the remote production server.</p>
",0,228660,,
35295509,5122955,2/9/2016 15:12,1,210,<php><git><phpunit><phpstorm><githooks>,Run PHPUnit test when saving file in PHPStorm,"<p>I have configured PHPUnit on PhpStorm Version 8.0.3 and I was asking myself if it would be possible to run a Test each time I save a file or push it with git.</p>

<p>I searched on Google but didn't find any info about this.</p>

<p>I know it's possible to run the test manually after pushing it with git, but that's not what I'm looking for.</p>
",1,5122955,,
40384322,1700429,11/2/2016 15:55,0,521,<regex><git><shell><githooks>,Git commit-msg hook: prefix commit based on part of branch name,"<p>My branch name pattern is as following 
ticketId_ticketDescription
e.g
<strong>MIT-1018</strong>-make-goto-redirection-smarter</p>

<p>so i want each commit to be prefixed by ticketId in this case it is 
[<strong>MIT-1018</strong>]</p>

<p>So if i commit </p>

<p>git commit -am""<strong>This is a commit message</strong>""
so message should be ""<strong>MIT-1018: This is a commit message</strong>"" </p>

<p>This is my try</p>

<pre><code>#!/bin/bash
ticket=`git rev-parse --abbrev-ref HEAD | sed -e 's/MIT-[0-9]+//'`
echo $ticket
comment=`cat $1`
search=`grep ""$ticket"" $1`
if [ -n ""$ticket"" ] &amp;&amp; [ -z ""$search"" ]
then
echo ""$ticket: $comment"" &gt; $1
fi
</code></pre>

<p>but this add the whole branch name as a prefix not the TicketId only</p>
",5,1700429,,
35301476,3329866,2/9/2016 20:24,1,328,<git><deployment><githooks><git-post-receive>,Git 'post-receive' deploy hook - exclude directory on server,"<p>I'm trying to store images locally on my server and can't figure out how to prevent my deploy script from overriding the directory they are stored in (/public/local-images).</p>

<p>The --exclude= tag doesn't seem to work, or I'm writing the path/expression incorrectly.</p>

<p>If I add (local-images/) to my local .gitignore file then every deploy will replace the entire remote file system, deleting the /public/local-images directory on the server. </p>

<pre><code>#!/bin/sh

WEB_DIR=/opt/erinauc

# remove any untracked files and directories
git --work-tree=${WEB_DIR} clean -fd --exclude=/opt/erinauc/public/local-images/

# force checkout of the latest deploy
git --work-tree=${WEB_DIR}  checkout -f

pm2 restart erinauc
</code></pre>

<p>I think this should be simple. I'm confused, and frustrated.</p>

<p>Thanks for any help!</p>
",2,3329866,,
31602068,1401475,7/24/2015 4:13,10,10613,<git><github><githooks><pull-request>,How to create a tag on GitHub when a PR is merged?,"<p>My current workflow requires a version Bump on every PR, so I would like to take advantage of that and automatically create a tag on GitHub on every PR merge, so it appears in the ""release"" section.</p>

<p>I've seen that I can write a post-merge hook. My doubt is if that hook runs locally in my machine, remotely on GitHub, or both (given that I merge the PR on GitHub, and not locally. What's the case?</p>
",0,1401475,0,0
31605091,3992444,7/24/2015 7:56,0,25,<git><githooks>,Githooks with two remote servers,"<p>Is it possible to make a githook (or something else) to connect two remote servers?</p>

<p>Here is how it looks now: </p>

<ol>
<li>I'm working on a local copy of git repository that is on <code>vps#1</code>. </li>
<li>We have <code>vps#2</code> which contains a webpage. </li>
</ol>

<p>what I want is a solution which gives me an option to update the git repository to webserver when I want.</p>

<p>I am wondering if making another ""local copy"" on remote server is good idea? </p>

<p>Any sugestions?</p>
",1,3992444,,
18859815,1185242,9/17/2013 21:01,2,91,<git><githooks>,How do I automatically reject long GIT commits?,"<p>Ideally I'd like to check the number of lines changed and reject is it's greater than some number. I think I understand the commit-hooks are the right way to go about it but I've struggled to get it working or get the number of lines that the commit changes. </p>
",3,1185242,0,0
45038458,7507731,7/11/2017 15:15,1,268,<git><githooks>,Call git hook after git reset --hard,"<p>Hoping someone can help,
From the documentation it looks like there is no git hook called after a ""git reset --hard"". Is this correct? Searching here the only work around I can see is placing an overriding function in your .bashrc ( something like shown below ).</p>

<pre><code>git() {
    if [ ""$1"" = ""reset"" ] &amp;&amp; [ ""$2"" = ""--hard"" ]; then
        DO SOMETHING
    fi
}
</code></pre>

<p>Instead of doing something like this is there an alternative? Can you create a ""custom"" hook or something?</p>
",5,7507731,,
9437063,350278,2/24/2012 19:47,18,3896,<git><githooks>,How to add a file to the index in a git pre-commit hook,"<p>I've looked around for duplicates and while some of them have similar titles, I haven't found anyone having the same issue as I am, so here goes.</p>

<p>I've written a script that runs on <code>pre-commit</code> and uses the output of <code>git status --porcelain</code> to compile any LESS file in my project that has changed. This part works fine. But I want the .css files to be included in the current commit. So in addition to running the compiler, my script runs <code>git add &lt;filename&gt;</code>. And here's where things get tricky.</p>

<p>The file <em>is</em> added to the index, but it's not the index of the current commit. So if I modify <code>style.less</code>, and run <code>git commit -a</code> (or manually <code>git add style.less</code>) the compiler should generate <code>style.css</code> and <code>style.min.css</code> and add them to the current commit. But the behavior I've noticed is only <code>style.less</code> is committed, despite the two <code>.css</code> files being added to the index for the next commit.</p>

<p>So my question is: is there a way to add files to a commit in a pre-commit hook so that they take effect for that commit? Note that before the pre-commit hook is run, those two <code>.css</code> files aren't modified, so I can't just add them before that. I also know I can exit the hook with a non-zero status so the commit is cancelled but the files are added, but I hope to avoid that. Any better ideas?</p>
",0,350278,0,0
63532986,8816796,8/22/2020 5:48,0,1313,<git><githooks><pre-commit-hook>,skip pre-commit hook conditionally from within commit-msg hook,"<p>I have a precommit hook that ensures topic branch is always rebased with devel before any commits. However, sometimes in the middle of my work I'd like to commit my unfinished work as opposed to stashing it just in case and reset before resuming. The commit message has to be exactly the same for such work-save commits, say 'worksave commit'. I'd like commit-msg hook to check for such condition and skip precommit hooks if it's a work-save commit. precommit hook listens to environment variable '<code>override_hooks</code>' at all times so I tried to alter that within commit-msg but that didn't work. I understand that I can set override_hooks manually but I was hoping I won't have to do that every time. I'd appreciate any help.</p>
",0,8816796,,
45067130,632495,7/12/2017 20:40,11,15423,<git><githooks>,Determine If Any File Changed In Directory For Latest Git Commit,"<p>I'm writing a <code>post-commit</code> hook for <code>git</code>. I would like to know if the latest commit changed any of the files in a particular directory. If there were any changes I can then proceed and call some expensive code, otherwise I can just skip it.</p>

<p>So, <a href=""https://gist.github.com/dciccale/5560837"" rel=""noreferrer"">far I'm getting the short hash like so</a>:</p>

<pre><code># get last commit hash prepended with @ (i.e. @8a323d0)
function parse_git_hash() {
  git rev-parse --short HEAD 2&gt; /dev/null | sed ""s/\(.*\)/@\1/""
}
</code></pre>

<p>Now, I need to determine if there were any changes to the specified directory. But I'm not sure how to go about that. I've looked at and played with <code>git-log</code> and <code>git-show</code> but without success so far.</p>

<p>So, I need to do something like this.</p>

<pre><code>if [directory-changed()] {
  echo ""start expensive operation""
}
</code></pre>

<p><strike>This actually gets me part way there:</strike> Actually it grabs the last commit not the one specified.</p>

<pre><code>git log  -U a79851b -1 my/directory/path
</code></pre>

<p>Thanks in advance.</p>
",1,632495,0,0
9480662,630443,2/28/2012 11:00,13,6641,<git><github><nginx><bitbucket><githooks>,POST hook on Bitbucket,"<h1>How to use the POST url in bitbucket on private Jenkins?</h1>
<p>I have been experiencing problems with <a href=""http://bitbucket.org"" rel=""noreferrer"">bitbucket</a> and their post commit.</p>
<h2>Description :</h2>
<p><code>http://username:password@myjenkins.instance/job/myproject/build?token=mytoken</code></p>
<p>I have a jenkins instance I would like to trigger on push on certain repositories. Since the jenkins is accessible from the outside (the world wide web), it is protected through the typical user/password system.</p>
<p>When working with Github, I can define the usename and password directly in the URL. When checking the nginx logs, it is clear that github is able to convert that url to login the user. Bitbucket is not.</p>
<p>Here are some nginx logs showing the problem.</p>
<p><strong>Bitbucket post logs :</strong></p>
<pre><code>- - &quot;POST /job/myproject/build?token=mytoken HTTP/1.1&quot; 403 216 &quot;-&quot; &quot;Bitbucket.org&quot;
</code></pre>
<p>The interesting part is the 403 error. Acces refused.</p>
<p><strong>Same logs for the Github post hook</strong>:</p>
<pre><code>- github - &quot;POST /job/myproject/build?token=mytoken HTTP/1.1&quot; 302 0 &quot;-&quot; &quot;-&quot;
</code></pre>
<p>AS the logs show, github is the name of the user I created with the good rights for launching builds.</p>
<p>What can I possibly do to enable the post hook?</p>
",1,630443,0,0
27608078,1660944,12/22/2014 18:04,0,613,<ruby-on-rails><git><githooks>,Is there a way to run `rake routes > doc/routes.txt` when a git commit contains routes.rb?,"<p>I like to keep the full set of routes in our Rails app in a text file to allow for east Diff's between releases (allows for a sanity check to see if we've blown away a route commonly bookmarked or perhaps used in a marketing email)</p>

<p>Running <code>rake routes &gt; doc/routes.txt</code> makes this easy, but it is still an extra step developers have to take.</p>

<p>Does anyone have an idea of how to integrate this into git so that the text file is automatically updated whenever routes.rb is updated?</p>
",1,1660944,,
45495061,1456509,8/3/2017 21:48,6,3178,<git><bash><githooks>,How to ask for user input in a Git hook?,"<p>I have been trying to write a simple bash script as a <code>pre-push</code> hook, in which I check for missing test files when pushing Java code.</p>

<p>The problem is: the <code>read</code> command isn't waiting for user input, it proceed as if no input has been entered.</p>

<pre><code>has_java=""git diff --stat --cached origin/master | grep \""src\/main.*\.java\""""
has_test=""git diff --stat --cached origin/master | grep \""src\/test.*\.java\""""

exit_val=0

if eval $has_java; then
    if eval $has_test; then
        :
    else
        echo ""*** NO TESTS WERE FOUND WHILE PUSHING JAVA CODE ***""
        read -n1 -p ""Do you want to CONTINUE pushing? [Y/n]"" doit
        case $doit in  
            n|N) exit_val=1 ;; 
            y|Y) exit_val=0 ;;
            *) exit_val=0 ;;
        esac
    fi
fi
</code></pre>
",8,1456509,0,0
45495155,5031762,8/3/2017 21:55,2,2055,<git><githooks>,How to exit a git hook script if a git command fails?,"<p>I have a <code>post-receive</code> git hook:</p>

<pre><code>#!/bin/bash

while read oldrev newrev refname
do
    branch=$(git rev-parse --symbolic --abbrev-ref $refname)
    if [ -n ""$branch"" ] &amp;&amp; [ ""master"" == ""$branch"" ]; then
       working_tree=""/path/to/working/dir""
       GIT_WORK_TREE=$working_tree git checkout $branch -f
       GIT_WORK_TREE=$working_tree git pull
       &lt;more instructions&gt;
    fi
done
</code></pre>

<p>How can I check the status of a git command and stop the script from continuing if it fails?</p>

<p>Something like the following:</p>

<pre><code>#!/bin/bash

while read oldrev newrev refname
do
    branch=$(git rev-parse --symbolic --abbrev-ref $refname)
    if [ -n ""$branch"" ] &amp;&amp; [ ""master"" == ""$branch"" ]; then
       working_tree=""/path/to/working/dir""
       GIT_WORK_TREE=$working_tree git checkout $branch -f
       GIT_WORK_TREE=$working_tree git pull
       if [ &lt;error conditional&gt; ]
           echo ""error message""
           exit 1
       fi
    fi
done
</code></pre>
",4,5031762,,
9726086,3191,3/15/2012 18:41,1,2697,<windows><git><githooks>,How can I install custom git commands (like git hooks) on Windows?,"<p>I am trying to use the <a href=""https://github.com/icefox/git-hooks"" rel=""nofollow"">git-hooks</a> tool on Windows. But, I cannot figure out how to install the <code>git-hooks.sh</code> file such that I can type <code>git hooks --install</code> in Git Bash.</p>

<p>I tried putting it in <code>C:\Program Files (x86)\Git\git</code>, where a lot of other <code>git-*.sh</code> files seem to live. But no luck.</p>

<p>What's the secret?</p>
",0,3191,,
63632453,4381476,8/28/2020 10:57,-1,959,<git><githooks>,pre-receive hook to block no-verify,"<p>I am new to git concept.
I am trying to enforce users to use the provided client side hooks (a pre-commit hook that formats code before committing). But as we know, pre-commit hook check can be skipped with <strong>--no-verify</strong> option.
I am trying to create possibly a flag somewhere in git commit that can be checked in pre-receive hook, and if the flag is not there, the commit is going to be rejected.
I find the idea of adding a verification token in commit message itself from here:
<a href=""https://stackoverflow.com/a/54639396/4381476"">https://stackoverflow.com/a/54639396/4381476</a>
But this can be added manually as well!</p>
<p>My question would be, is there any way to add invisible flag to commit (rather than appending to commit message) which can be checked in pre-receive hook in the server side?</p>
<p>Due to severe lack of documentation on this, some pointers/ help would be great!</p>
",1,4381476,,
9730937,38947,3/16/2012 2:14,9,3954,<git><githooks>,Conditional pre-commit hook controlled from command line for GIT: Is it possible?,"<p>We have a nice pre-commit hook for GIT, as well as a nice commit-msg. The pre-commit hook does a syntax validation and the commit-msg does some other business logic. It all works well.</p>

<p>However, I'd like to add Coding Standards validation to the pre-commit hook. In fact, it's already added. However, I don't want to strictly enforce our developers to match up with the coding standards, by default I'd like to validate the code for standards but if they would like to pass Coding Standards Validation, I'd like to let them pass by adding a parameter during commit. </p>

<p>Is it possible to capture/interpret any command line parameter which was given during commit to git at the pre-commit hook level in order to skip coding standard validation in the pre-commit hook (optionally?) </p>

<p>Or is it possible only in the pre-commit message hook by analyzing the commit message for a specific substring?</p>

<p>Please share your best practices about how (and where) to create command line controlled conditional code using git pre-commit hook (or other git hooks).</p>
",0,38947,0,0
45572728,6838730,8/8/2017 15:45,0,31,<github><githooks><myget>,MyGet - Double build every time with Github Hooks,"<p>In my MyGet account, I have setup an automated build using Github Hooks. Every time I push on the master branch of my Github repo, the build on MyGet is executed twice. This bothers me because I want to use the auto-tag feature but the double build means that the tag is added twice to my git repo, and the build counter is incremented twice.</p>

<p>Is there any setting that I might have missed somewhere that somehow fires the Github hook event twice ?
<a href=""https://i.stack.imgur.com/hkT5f.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/hkT5f.png"" alt=""enter image description here""></a></p>
",0,6838730,,
27764857,3959387,1/4/2015 11:03,9,12977,<git><gerrit><githooks><git-review>,How does git-review work?,"<p>I want to know, how exactly does <code>git review</code> command work? I mean does it use <code>git push</code> command (internally) or something else to upload the changes to gerrit. This information would be useful for me while writing git hooks for <code>git review</code>.</p>
",1,3959387,0,0
45637879,3723993,8/11/2017 14:38,7,2661,<node.js><git><webstorm><githooks><nvm>,Git Hooks error when using NVM in WebStorm and SourceTree,"<p>I'm using <code>nvm</code> with the <code>--no-use</code> flag as that was causing my terminal to start massively slow 🐌. That means than I always need to run <code>nvm use &lt;NODE_VERSION&gt;</code> on new terminal tabs in order to be able to use <code>node</code> or <code>npm</code>.</p>

<p>I have a project with some Git Hooks configured using <code>ghooks</code>, so each time I move to a different branch or commit something, I get different type of errors in both WebStorm and SourceTree, all pointing oout that <code>node</code> could not be found. These are some of them:</p>

<p><em>SourceTree <code>checkout</code></em>:</p>

<pre><code>git -c diff.mnemonicprefix=false -c core.quotepath=false -c 
credential.helper=sourcetree checkout BRANCH
Switched to branch 'BRANCH'
M   ...
M   ...
...
env: node: No such file or directory
Completed with errors, see above
</code></pre>

<p><em>WebStorm <code>commit</code></em>:</p>

<pre><code>Commit failed with error
0 files committed, 3 files failed to commit: COMMIT_MESSAGE env: node: No such file or directory
</code></pre>

<p>In WebStorm, I thought that manually setting the <code>node</code> version to use (under <code>Preferences &gt; Languages &amp; Frameworks &gt; Node.js and NPM &gt; Node interpreter</code>) would fix the issue, but it didn't.</p>

<p>I'm using WebStorm <code>2016.1.3, Build #WS-145.1616</code>.</p>

<p>Removing the <code>--no-use</code> flag would fix it of course, but that's not an option as then the terminal becomes super slow at startup. Any other way to get around that? 🙏</p>
",2,3723993,0,0
64410142,14463228,10/18/2020 5:49,0,619,<angular><karma-jasmine><githooks><husky>,GITHook Husky Angular,"<p>In our angular application we want to run &quot;ng test&quot; before we push the code to GIT. So do this we integrated with husky for GIT hook.</p>
<pre><code>{ &quot;hooks&quot;: { &quot;pre-push&quot;: &quot;npm run git-hook&quot; } }
</code></pre>
<p>In <code>package.json</code>, below is mentioned <code>&quot;git-hook&quot;: &quot;npm run test-headless&quot;</code>.</p>
<p>I want to push the code to the rep only if all the test cases execute successfully but currently even if the test cases fail the code push is happening.</p>
",0,14463228,,
27961419,675100,1/15/2015 10:31,2,2229,<git><gitlab><githooks><git-post-receive>,Gitlab post-receive/update hook to forward a commit to another git repo,"<p>In a team we have a gitlab set up that is avialable only to our team and is meant for development purposes, pushing, branching etc and we have an official git repo to which we would like to mirror commits only from master branch (stable).</p>

<p>I know that this can be done with use of server-side git hooks but how specifically can I do that so that the developers won't have to type anything extra and the hook will be set on gitlab (no on developers' machines - local repos) ? </p>
",2,675100,0,0
64423110,569544,10/19/2020 7:46,0,274,<git><github><devops><github-api><githooks>,Git Commit Message Linting as a gateway and not after it was already pushed,"<p>I want to verify a specific commit message structure across organisation, I want it to not be possible to merge/push to master/main commits <strong>unless the message fits a very certain format</strong>.</p>
<p>Commit message is linting is covered via a simple regular expression, expected format is something like:</p>
<pre><code>\[[A-Z]{2}-(\d){5,7}\]\-(.|\r|\n)*
</code></pre>
<p>Adding commits to master/main happens in few ways:</p>
<ol>
<li>Commit locally on master, push to remote.</li>
<li>Commit locally on branch, merge locally to master, push to remote.</li>
<li>Commit locally to branch, open pull request (case of github) <em>merge PR from the github UI</em>.</li>
</ol>
<p>I can easily cover the case of #1 with a <em>git-commit</em> hook, to cover both 2 and 3, I can use a CI hook, but this will <em>AFTER the fact</em> e.g. at this point fixing the commit format is too late.</p>
<p>For 2, I can probably also add a a <em>pre-push hook</em>, but for 3, given that the operation happens on the server side I can't seem to find a straight forward solution that will not execute the linting process after the commit is already on the master/main branch.</p>
",6,569544,,
10299966,97595,4/24/2012 14:24,1,1119,<git><githooks><gitolite>,"With a git hook, how do I force or check user identity?","<p>I'm trying to setup a gitolite server. One problem that I find annoying in git is the username is not checked when committing code.</p>

<p>This can lead to a possible ""identity phishing"" where user1 can commit some bogus code and set user2 as username. Then we'll blame user2.</p>

<p>I'm looking for a way to check or force the username to be consistent with the committer's identity.</p>
",4,97595,0,0
46557365,1204344,10/4/2017 5:04,1,596,<regex><bash><git-bash><githooks><git-commit>,Git multiple lines commit message validate with regex,"<p>I'm working on git commit-msg and I created regex which should validate commit message. When I create regex for one line it works. When I have message in multiple lines it doesn't. I'm working on Windows. This is code I created (regex was checked at regex101.com):</p>

<pre><code>#!/usr/bin/env bash

commit_regex='^(TASK([0-9]+))\ \-\ ([A-Z](.*))[\n\r]{2}(\-\ (.+))(([\n\r]{1}-\ (.+))?)$'
error_msg=""Commit message invalid""
if ! grep -iqE ""$commit_regex"" ""$1""; then
    echo ""$error_msg"" &gt;&amp;2
    exit 1
fi
</code></pre>

<p>Sample text to validate:</p>

<pre><code>TASK123 - Task description

- commit description
- additional info (optional)
</code></pre>

<p>Some suggestions how to correct this script? I'm not familiar with git hooks that much and creating bash.</p>

<p>Edit:
When I add z option to like this -izqE it still doesn't work.</p>
",4,1204344,,
46559807,8718662,10/4/2017 8:00,-1,273,<git><gitlab><githooks>,Git hook common to all repositories on my server machine,"<p>How to configure a git server side hook that runs on every push to any repository on my gitlab server?</p>

<p>I have hosted gitlab locally on my machine and I want to run a script when any changes are made to any of my repository.</p>

<p>Thanks in advance :)</p>
",1,8718662,,
46561330,5595164,10/4/2017 9:21,0,405,<git><mercurial><githooks><mercurial-hook>,hg client and server side hooks,"<p>What is hg equivalent for git client and server side hooks?</p>

<p>I was trying to find the two different types of hooks for hg like in git, but only found lot of hooks not specific of client or server side. I think hooks cannot be setup on the client side, but I am not sure.</p>
",3,5595164,,
28318599,1095675,2/4/2015 10:07,315,816979,<gitlab><githooks>,Git push error pre-receive hook declined,"<p>I have run gitlabhq rails server on virtual machine, following 1-6 steps from this tutorial <a href=""https://github.com/gitlabhq/gitlab-recipes/blob/master/install/centos/README.md"">https://github.com/gitlabhq/gitlab-recipes/blob/master/install/centos/README.md</a> and starts rails server executing command <code>sudo -u git -H bundle exec rails s -e production</code>. After that I created user, using admin tools and created new project under this user. Then I'm trying to push the existing project to this repo as always. But in the last step, <code>git push origin master</code> fails with the error </p>

<blockquote>
  <p>[remote rejected] master -> master (pre-receive hook declined)</p>
</blockquote>

<p>Additional info:</p>

<p>1) I haven't activated user (project owner) via email activation link, because I haven't configured post service on server-side and I didn't find instructions how to do that in this manual.</p>

<p>2) Gitlab server generates tips how to push project to repo and there is not <code>repositories/</code> in path. I mean it generates <code>git@mygitlabhost:user/repo.git</code> instead of <code>git@mygitlabhost:repositories/user/repo.git</code> which is correct.</p>

<p>3) When i tried to debug it, I opened <code>pre-receive</code> script inside repo on server and tried to output variables (there is 3 of them): <code>refs = ARGF.read</code>, <code>key_id  = ENV['GL_ID']</code> and <code>repo_path = Dir.pwd</code> and found, that key_id is always empty. Maybe the problem is here... If so, please give me suggestions on how to fix that. Thanks</p>
",3,1095675,0,0
28325195,67579,2/4/2015 15:32,12,1150,<git><wildcard><gitignore><githooks>,Gitignore a file if file with different extension exists,"<p>In a project where for instance a parser is involved, some source code is the product of a program. For instance <code>yacc</code> generates - based on a <code>.yy</code> file - a source code file that implements the parser.</p>

<p>Since small modifications in the <code>.yy</code> file can lead to large changes in the corresponding source code file after compilation and since  the resulting source code is (almost) never altered after it is generated. Such source code files are perfect candidates for the <code>.gitignore</code> list.</p>

<p>Now one can of course write such files manually to the list:</p>

<pre><code>lexer1.cpp
parser1.cpp
lexer2.cpp
parser2.cpp
</code></pre>

<p>But it is likely when one builds a new parser, he/she will forget to add the file to the list.</p>

<p>Is there a way to <em>specify</em> a pattern that acts as follows:</p>

<blockquote>
  <p>Given a file <code>foo.ext1</code> exists, ignore <code>foo.ext2</code>.</p>
</blockquote>

<p>Where one thus provides <code>ext1</code> and <code>ext2</code>. In the case of the lexer/parser, this would mean applying this pattern for <code>.xx</code>/<code>.cpp</code> and <code>.yy</code>/<code>.cpp</code>.</p>

<p>This is probably not possible by <code>.gitignore</code> directly, but perhaps there are some hooks already implemented for this?</p>
",4,67579,0,0
46576888,984465,10/5/2017 2:18,1,746,<git><continuous-integration><githooks>,Test server side git-hooks in --dry-run mode,"<p>We enabled server-side git hooks to enforce GIT based integration policy where we check for commit message format that is pushed. When 'git push' is invoked in the --dry-run mode, the git hooks are not invoked. How can I test the git hooks without actually pushing the code into the repository?</p>
",0,984465,0,0
46584041,7616540,10/5/2017 10:59,0,93,<tfs><azure-devops><githooks>,Supervise Project changes within Git,"<p>My team leader wants to get notified whenever changes are made to a specific Project.</p>

<p>Is there a possibility within Git to supervise specific Folders or Files and get notifications if the code changes?</p>
",1,7616540,,
28337981,3897954,2/5/2015 7:01,2,1814,<git><github><chef-infra><githooks>,Git pull on multiple servers,"<p>I have a web app on Github whose servers are provisioned with Hosted Chef server and Cloudformation.  After searching the net for the last couple of hours with no luck, can someone give some insight how to do a git pull for the app directed to  multiple servers(all redundant) using Chef.  Essentially, the apps master branch pulled into each server where the number of servers is known by chef server.</p>

<p>Any guidance would be highly appreciated.</p>
",0,3897954,0,0
28340924,2922986,2/5/2015 9:56,0,916,<macos><git><bash><phpstorm><githooks>,Git hooks in PHPStorm on Mac,"<p>I've got problem with commiting in PHPStorm with <code>pre-commit</code> hook enabled.</p>

<pre><code>#!/bin/sh

cd ""$(git rev-parse --show-toplevel)""

# Message
message () {
    if [ $2 -ne 0 ]
    then
        echo ""${1}: Error""
        exit 1
    else
        echo ""${1}: Success""
    fi
}

# JSHint
grunt lint:js &amp;&gt; /dev/null
message ""JSHint"" $?

# Unit tests
grunt test:unit:frontend &amp;&gt; /dev/null
message ""Unit tests"" $?
</code></pre>

<p>Code is pretty simple, it just fire Grunt tasks one by one and show short message for commit that it failed or not.</p>

<p>The problem is that when I run it in terminal - it works correctly, when I try to run it in PHPStorm I get information <code>grunt: command not found</code>.</p>

<p>It occurs only on Mac, as I tried on Ubuntu and it works. Also I tested which user is running this script with <code>whoami</code> and it's the same user which is logged in.</p>

<p>Do you have any ideas what's wrong, or maybe someone just had same issue?</p>

<p>Thanks in advance for help.</p>
",4,2922986,,
65437162,8273908,12/24/2020 10:39,2,5771,<git><githooks><lerna><monorepo><husky>,Husky hooks not running in Lerna monorepo,"<p>I am working on a MonoRepo and one of the last things I am trying to automate is all my linting/formatting on code commits.</p>
<p>Currently I have most of my config in the root folder and I am extending them into the packages. If I run <code>npm run precommit</code> in the <em>root directory</em> I can see my packages being linted successfully.</p>
<p>The problem occurs when I stage and commit the code, <strong>husky hooks do not run</strong> and the commit goes through without following checks successfully</p>
<p><strong>Folder Structure</strong></p>
<pre><code>- packages
  - bar/
    - dist
    - src
    package.json
    tsconfig.json
  - foo/
    - dist
    - src
    package.json
    tsconfig.json
.eslintrc
.prettierrc
package.json
tsconfig.json
</code></pre>
<p><strong>Root Package.json</strong></p>
<pre><code>{
  &quot;scripts&quot;: {
    &quot;precommit:bar&quot;: &quot;cd packages/bar &amp;&amp; npm run precommit&quot;,
    &quot;precommit:foo&quot;: &quot;cd packages/foo &amp;&amp; npm run precommit&quot;,
    &quot;precommit&quot;: &quot;npm-run-all precommit:*&quot;
  },
  &quot;husky&quot;: {
    &quot;hooks&quot;: {
      &quot;pre-commit&quot;: &quot;npm run precommit&quot;
    }
  },
  &quot;lint-staged&quot;: {
    &quot;**/*.{ts,tsx}&quot;: [
      &quot;eslint --fix&quot;,
      &quot;prettier --write&quot;
    ]
  }
}
</code></pre>
<p>Inside each of the packages there is this script</p>
<pre><code>&quot;script&quot;: {
   &quot;precommit&quot;: &quot;lint-staged&quot;
}
</code></pre>
",1,8273908,0,0
46899526,2805004,10/23/2017 22:35,2,946,<git><bash><powershell><github><githooks>,Can one re-stage files in a pre-commit git hook?,"<p>I've made a powershell script that adds a header to certain files within my project. I want to run it whenever code is in the process of being pushed to GitHub so that all such files in the GitHub repository have the header attached, removing the need to run the script manually.</p>

<p>The issue is that when I modify the files in my pre-commit git hook, those changes aren't restaged, so I essentially have to stage, commit and then stage again for the headers to be committed. </p>

<p>Is there a good way to deal with this, or is it better practice to separate the execution of that powershell script from the git flow?</p>
",0,2805004,,
46901295,4963463,10/24/2017 2:33,2,1928,<bash><laravel><githooks><laravel-artisan>,Create simple auto deploy using git hooks + laravel artisan command,"<p>Im trying to make a simple auto deploy using git hooks post-receive and i found this <a href=""https://gist.github.com/noelboss/3fe13927025b89757f8fb12e9066f2fa"" rel=""nofollow noreferrer"">link</a>.That link gave me idea and modified it myself.
It is working well when the BRANCH Variable is ""master"". but when i am changing it to other branch, let say ""phase2"", it always stays in ""master"" branch when the time of running the artisan commands. So my cache route came from master branch.</p>

<p>This is my post-receive hook file :</p>

<pre><code>#!/bin/sh
TARGET=""/usr/local/apache2/htdocs/project_uat""
GIT_DIR=""/home/user0001/www/project_name/.git""

BRANCH=""phase2"" # I want this changable to phase3,phase4 or what ever branch

while read oldrev newrev ref
do
        # only checking out the master (or whatever branch you would like to deploy)
        if [[ $ref = ""refs/heads/${BRANCH}"" ]];
        then
                echo ""Ref $ref received. Deploying ${BRANCH} branch to UAT...""
                git --work-tree=$TARGET --git-dir=$GIT_DIR checkout -f
        else
                echo ""Ref $ref received. Doing nothing: only the ${BRANCH} branch may be deployed on this server.""
        fi
done

cd /usr/local/apache2/htdocs/project_uat
php artisan cache:clear
php artisan config:cache
php artisan route:cache
php artisan optimize
</code></pre>

<p>When i try to navigate to my target dir. It stays in phase2 branch but theres is a lot of changes when i try to ""git status"". These changes came from master.</p>

<p>Basically, all i wanted is to automate the deployment everytime i ""git push"" from my local without logging in to remote server just to run the following commands:</p>

<ul>
<li>cd to/project/path </li>
<li>git pull origin phase2 </li>
<li>php artisan cache:clear </li>
<li>php artisan config:cache </li>
<li>php artisan route:cache </li>
<li>php artisan optimize</li>
</ul>

<p>And the only think i can make it is trough GIT HOOKS</p>
",1,4963463,0,0
27983784,294873,1/16/2015 12:17,0,52,<git><githooks>,git commit -a bypasses git hook when it shouldn't,"<p>I have a git hook for commit-msg which works quite happily when I run</p>

<pre><code>git commit -m ""MSG HERE""
</code></pre>

<p>but if I run</p>

<pre><code>git commit -a
</code></pre>

<p>Which triggers committing using your text editor it skips the hook.</p>

<p>Any suggestions on how to fix this?</p>

<p>My hook is as follows</p>

<pre><code>#!/bin/bash
if ! egrep -q 'DAVE-[0-9]+' $1 ; then
     echo ""No Jira Issue Number found"" &gt;&amp;2
     exit 1
fi

if [[ ""$(wc -c $1 | awk '{print $1}')"" -le 20 ]] ; then
     echo ""Commit message too short"" &gt;&amp;2
     exit 1
fi
</code></pre>
",3,294873,,
27991759,2307611,1/16/2015 19:53,2,69,<php><git><githooks>,Can't run peridot test suite from a git hook,"<p>I have made the following pre-commit git hook:</p>

<pre><code>#/usr/bin/env bash
echo ""Running pre-commit hooks... ""
vendor/bin/peridot -c OS/Specs/peridot.php OS/Specs/
echo ""Done.""
</code></pre>

<p>When I simply enter this command into terminal, it runs all my tests.  However, when the git hook is triggered, I get this:</p>

<pre><code>Running pre-commit hooks...
PHP Parse error:  parse error in /path/to/repo/vendor/peridot-php/peridot/bin/peridot on line 9
Done.
</code></pre>

<p>The offending line contains a bracketed array []. When I change to the old array() syntax, the error goes away (and is replaced with another one farther down).  Furthermore, when I run <code>php -v</code> in both places, I get:</p>

<p><strong>Terminal</strong><br>
PHP 5.4.24 (cli) (built: Jan 30 2014 10:18:21)</p>

<p><strong>pre-commit</strong><br>
PHP 5.3.28 (cli) (built: Jan 23 2014 18:02:48)</p>

<p>Why is my Git hook using the wrong version of PHP?  How can I fix this?  Thanks!</p>
",5,2307611,,
64539007,290957,10/26/2020 14:22,1,586,<amazon-web-services><github><githooks><aws-codecommit>,Push from Private GitHub Enterprise to CodeCommit Automatically,"<p>The company I work for has GitHub Enterprise setup on an internal server, so it is not accessible outside of the network. The application inside the repository is hosted on AWS, and we would like to automate the deployment.</p>
<p>Because AWS cannot access the GitHub Enterprise repository (as it is only accessible on the network) I was thinking I could create a hook on the GitHub Enterprise repository to push to an AWS CodeCommit repository whenever changes are merged into the master branch, essentially keeping them both synced up, and then auto-deploying from the CodeCommit repository.</p>
<p>Is this possible?</p>
",0,290957,,
46282427,4417740,9/18/2017 14:56,2,163,<git><githooks>,How to run command on each file modified in the local commits after git push?,"<p>I have many local commits which contains several modified files.</p>

<p>I need to run a specific command on each file modified after pushing to the repository, and this has to be done on the client side itself.</p>

<p>How do I configure git to do the same?</p>

<p><code>git log --name-only --format="""" --author xxxx origin/master..HEAD | sort | uniq</code></p>

<p>The above command gives me all my committed files but with path relative to my repo. I need either the absolute path from the root or one which is relative to my current directory.</p>
",0,4417740,,
64564706,6555374,10/28/2020 0:15,0,738,<bash><git><githooks>,git hook pre-push bash script validate tag,"<p>I'm trying to validate a git tag using the pre-push git hook but whenever I execute <code>git push origin &lt;tag-name&gt;</code> it takes the previous tag as the latest from /refs/tags.</p>
<p>To replicate the issue:</p>
<pre><code>Step 1. git commit 
step 2. git tag V1.0.0-US123-major
step 3. git push origin V1.0.0-US123-major
</code></pre>
<p>So when step 3 executes the pre-push script should take <em><strong>&quot;V1.0.0-US123-major&quot;</strong></em> tag and validates against the below regex. If the tag matches with regex then it is a valid tag else abort git push.</p>
<pre><code>#!/bin/sh
read_tag=&quot;$(git describe --abbrev=0 --tags)&quot;
if [[ $read_tag =~ (^v[0-9]{1}.[0-9]{1}.[0-9]{1}-[a-zA-Z]+-[a-zA-Z]+$) ]]; then
    echo &quot;matched&quot;
    
else
    echo &quot;not matched&quot;
    exit 1
fi
</code></pre>
<p>My expectation is when I use <code>git push origin 2.2.2.2</code>, the pre-push script does not return exit1 rather it accepts the tag and pushing to origin which is not correct.</p>
<pre><code>git push origin 2.2.2
latest tag: v5.5.5-abcd-tues
matched
</code></pre>
<p>Can someone help me with this, please?</p>
",0,6555374,,
10018496,1193367,4/4/2012 20:08,5,10984,<github><jenkins><githooks>,Run tests in Jenkins automatically after each commit (change),"<p>I an using jenkins and I would like my tests to run automatically after each commit.</p>

<p>I followed the instructions in the following link:</p>

<p><a href=""http://blog.cloudbees.com/2012/01/better-integration-between-jenkins-and.html"">http://blog.cloudbees.com/2012/01/better-integration-between-jenkins-and.html</a></p>

<p>I clicked Let Jenkins auto-manage hook URLs in global configuearion/ Githup Web Hook and I added my username and password for githup but still after changes and pushing to the repo, my tests do not run!</p>

<p>Github Hook Log: Polling has not run yet.</p>

<p>Is there anything that I forgot?</p>

<p>P.S. I can run my tests manually (Click on Build now) and I can see my commits (changes) when I build my test. </p>
",0,1193367,,
10021987,1062679,4/5/2012 2:41,1,278,<git><github><githooks><travis-ci>,Exclude commits from Git hooks?,"<p>Is it possible to exclude certain commits from being pushed to a service hook on Github? For example, if I only edit the Readme file of a project, it makes no sense to re-test the entire application on Travis. Is there a way I can tell Git that that particular commit should not be sent to the Travis hook?</p>
",0,1062679,,
28357163,1809762,2/6/2015 1:32,4,1434,<wordpress><git><githooks>,Can a pre-commit Git hook zip a directory and add it to the repository?,"<p>I'm doing development on a Wordpress plugin. My development directory contains a lot of development-specific stuff (e.g. Grunt files, Sass files, the git repository itself, etc.).</p>

<p>Obviously, I don't want to distribute this folder containing all of those development files; people don't want a few MB of Grunt files when they download my Wordpress plugin.</p>

<p>Up until now, though, my ""release"" process has been cumbersome:</p>

<ol>
<li>Commit the Git changes</li>
<li>Zip the entire folder</li>
<li>Open the zip file and delete the .git folder, grunt files, and all the other development-specific files</li>
<li>Release the new zip</li>
</ol>

<p>I don't know the best way to accomplish this, but I'm <em>very</em> vaguely familiar with Git hooks, and I had this thought: <strong>could I set up a Git hook that would zip ONLY the needed production files into a ZIP file and store it with the repo?</strong> That way, every time I commit it would automatically create a new release ZIP.</p>

<p>Is that possible? If so, could someone point me in the right direction?</p>

<p>Oh also, I'm on Windows (・_・;). So I'm hoping that there's a way to do it on Windows.</p>
",0,1809762,,
10414887,801042,5/2/2012 13:35,4,1198,<git><githooks><gitolite>,Tracking Gitolite (common) hooks in Git,"<p>The only thing I found in Gitolite's <a href=""http://sitaramc.github.com/gitolite/cust.html#hooks"">manual</a> on hooks, was:</p>

<blockquote>
  <p>If you want to add your own hook, it's easy as long as it's not the
  'update' hook. Just add it to $HOME/.gitolite/hooks/common and run
  gitolite setup.</p>
</blockquote>

<p>However, I would also like to <em>track the changes</em> made to these hooks, with the possibility to revert to an older version if needed (auditing functionality is <a href=""http://sitaramc.github.com/gitolite/why.html"">cited</a> as one of the big advantages of using Gitolite). So, basically, I was expecting something like having to add a <code>hooks</code> folder in my gitolite-admin clone, and then pushing the hooks to the server (like you do with the config or adding a public key). </p>

<p>Does this make sense? Is it possible?</p>
",0,801042,0,0
10415723,801042,5/2/2012 14:23,5,841,<git><githooks>,Git plumbing command to find out which files have been changed in a given revision,"<p>I've created a hook that sends out notification emails when a developer pushes an update to his shared repository. This email includes a list of changed files, example:</p>

<pre><code>A   __classes/Page/Activity.php
M   __config/Scheme.php
</code></pre>

<p>that I generate using the following bit of bash:</p>

<pre><code>$(git diff ""$newrev""^ ""$newrev"" --name-status)
</code></pre>

<p>This works fine. However, I'm trying to port all this now to the well-known <a href=""http://git.kernel.org/?p=git/git.git;a=blob_plain;f=contrib/hooks/post-receive-email;hb=HEAD"" rel=""noreferrer"">post-receive-email hook</a>. This hook does have a <code>hooks.showrev</code> configuration directive, but this I think this only allows for the revision number (<code>%s</code>) to be used <em>once</em> in the command. So this doesn't work:</p>

<pre><code>showrev = ""git diff %s^ %s --name-status""
</code></pre>

<p>There must be a 'plumbing' command that does just this. Can anyone point me in the right direction? :)</p>
",0,801042,0,0
46644739,3739382,10/9/2017 10:54,1,682,<sonarqube><bitbucket><githooks><sonarqube-scan>,Is there any way to connect Bitbucket with SonarQube using githook to automatically check pull requests without Jenkins/Bamboo?,"<p>I want to connect Bitbucket server (4.14) with SonarQube (6.3.1) to launch a sonar execution when any user create a pull request in Bitbucket. </p>

<p>Is there any way to connect Bitbucket with Sonar and launch the Sonar build scan using githook?</p>

<blockquote>
  <p>I know that that the best practice is to launch Sonar from Bamboo or Jenkins but I need a workaround before my company updates Bamboo for support pull request feature.</p>
</blockquote>

<p>Thanks!</p>
",2,3739382,0,0
46645485,8745474,10/9/2017 11:35,2,695,<git><bash><githooks><git-diff>,fatal: This operation must be run in a work tree on pre-receive hook,"<p>In the process of <a href=""https://github.com/github/platform-samples/blob/master/pre-receive-hooks/block_file_extensions.sh"" rel=""nofollow noreferrer"">pre-receive</a>, I get the <code>fatal: This operation must be run in a work tree</code> exception while hit the <code>pre-receive</code> hook. I am sure the hook is hitting, Becasue I can print my own message by that hook.</p>

<pre><code>#!/usr/bin/env bash

FILES=`git diff --name-only --diff-filter=d HEAD~1`
for COMMIT in $FILES;
  do
      case $COMMIT in
      *.txt|*.pdf|*.docx)
        echo ""Hello there! We have restricted committing that filetype.
        exit 1
        ;;
      esac
done
exit 0
</code></pre>

<p>Whether my hook code is wrong or any other issue? but <a href=""https://github.com/github/platform-samples/blob/master/pre-receive-hooks/block_file_extensions.sh"" rel=""nofollow noreferrer"">this hook</a> is running perfecly. </p>
",1,8745474,,
65195421,1635906,12/8/2020 8:21,4,1069,<git><githooks><git-lfs>,git-lfs: how to enforce git lfs installation?,"<p>I work on a git-lfs repository. Some colleagues occasionally need to update large binary files in this repository (hence git-lfs). Not all colleagues have git-lfs installed. They will not do it unless they need to. But once they want to commit/push, they have forgotten they need git-lfs... Which leads to &quot;pollution&quot; of the repository with actual files.</p>
<p>Is there a way to enforce the use of git-lfs by software? So I can only commit/push to the repo if I have git-lfs installed?</p>
<p>Edit:
This question is similar <a href=""https://stackoverflow.com/questions/54213052/azure-devops-server-side-git-hooks"">Azure devops - server-side git hooks</a> but I hoped there was a client-side solution. I thought the pre-commit hook could also be used for this.</p>
<p>Update:
I see how git-hooks won't help because again I my collegues would need actively do something - which they probably won't. This explicit action is necessary because git-hooks would introduce massive security holes if not enabled with the users explicit consent. (<a href=""https://stackoverflow.com/a/23771013/1635906"">https://stackoverflow.com/a/23771013/1635906</a>)</p>
<p>Update:
So I am ready to create a branch-policy which makes sure a CI build is executed. The build should fail if there are files that should be pointers.
There is &quot; <a href=""https://stackoverflow.com/questions/42963854/list-files-not-tracked-by-git-lfs"">List files not tracked by Git LFS</a> &quot; but it aims at bash. My Azure DevOps (on-premise) runs on windows and therefore cmd/powershell. I need a command that is similar to the behavior of the message I get on clone: &quot;Encountered 11 file(s) that should have been pointers, but weren't&quot; And then it should either print to STDERR or result in a non-zero exit code.</p>
",5,1635906,,
46659541,1121841,10/10/2017 5:57,0,25,<git><githooks><rm>,How to know the system account user that will execute the hooks of a GIT repository?,"<p>Let's say we have this Git repository with path <code>/home/derp/projects/example.git</code>. This repository has a <strong>post-receive</strong> hook <code>/home/derp/projects/example.git/hooks/post-receive</code> which allows <em>derp</em> (git owner) to remove files from other location when someone pushes to it.</p>
<h3>post-receive</h3>
<pre><code>#!/bin/bash
while read oldrev newrev ref
do
  branch=`echo $ref | cut -d/ -f3`
  if [ &quot;master&quot; == &quot;$branch&quot; ]; then
    git --work-tree=/home/derp/outputs/example/ checkout -f $branch
    rm /home/derpina/Pictures/*.jpg
  fi
done
</code></pre>
<p>Let's just say the <strong>rm</strong> failed because of derp's insufficient privileges. How to know the system account user that will execute the hooks of a GIT repository?</p>
",4,1121841,,
28414640,976880,2/9/2015 16:35,7,6608,<git><githooks><git-remote>,Access the changed files path in git pre-receive hook,"<p>I'm writing a git pre-receive hook on the remote repo to make sure pushed code is consistent with our company's internal guidelines.</p>

<p>I'm able to find all the files that are to be checked when a pre-receive hook is fired, however, I don't have the path to these files to open them using normal file operations(e.g. <code>cat git_working_directory/file_name</code> would throw <code>No such file or directory</code> error). <strong>The application which validates the code requires the file path</strong> as an argument so that it can open the file and run its checks.</p>

<p>Consider this scenario: the developer created a new file and pushed it to the server and the pre-receive hook is triggered. At this stage the new file is not saved on to the remote's working directory because the pre-receive hook is still running.  </p>

<p><em>I'm wondering if there is a temporary location where the files are saved in git as soon as they are pushed so that I can pass that directory to the application to run the checks?</em></p>

<p>Update:</p>

<p>I could checkout to a temporary location and run the checks there, this could be an option but considering the fact that developers frequently push, sometimes even at the same time and the repo being very big, this option doesn't seem to be feasible. I'm looking more for a solution where I can just use the path to the file if it is somehow available.</p>
",5,976880,0,0
10445686,99834,5/4/2012 8:53,1,35,<version-control><githooks><mercurial-hook>,How to implement a custom rules for pushing changes on hg or git in a way that is easy to deploy?,"<p>Use case: you want to prevent people from pushing to trunk when trunk is in marked as red - in this case you want to ask them to confirm before accepting this.</p>

<p>The problem is local <code>.hg/hgrc</code> hooks is that only you are getting them and this is not an acceptable approach when you want to implement something like this for all developers.</p>

<p>How is possible to implement such thing in a way that would work for everybody.</p>
",0,99834,,
28420418,2408321,2/9/2015 22:12,0,548,<git><bash><githooks>,Post-receive cd no such file or directory,"<p>I have a <code>post-receive</code> hook in which I perform some git checkouts based on the branch being pushed. Before proceeding to do some more business logic, I need to change the working directory to a directory stored in a variable. However, I keep getting a ""No such file or directory"" error despite the directory being existent...</p>

<pre><code>#!/bin/sh

dir=/home/username/directory
cd $dir
</code></pre>

<p>The git folder itself is located at /home/username/git/project</p>

<p>I'd like to keep the cd command as generic as possible using a fully qualified path (this path is fixed, the git directory can be anywhere), so no <code>cd ../../directory</code> stuff please...</p>

<p>Anyone got ideas why this isn't working?</p>
",8,2408321,,
46669455,8134201,10/10/2017 14:36,4,8033,<git><bash><shell><terminal><githooks>,Pre-Commit Hook Unit Test,"<p>I am trying to run a pre-commit hook that prevents me from committing if my unit tests don't run. Right now I have a shell script that  runs the tests and my terminal tells me that they have failed, which is good. But I am not sure what to put in my Shell Script to actually stop my commit once my terminal detects that I have failing tests. 
Like this:
<a href=""https://i.stack.imgur.com/SxtS5.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/SxtS5.png"" alt=""enter image description here""></a></p>

<p>I am inclined to think that all I am missing is a simple if statement which checks if the tests fail then stop the commit and if the tests pass then complete the commit. But I could be completely wrong about that, and this is my first time working with shell scripts so I am not really sure how to go about doing that. Thanks.</p>
",1,8134201,,
46688879,8439175,10/11/2017 13:01,1,360,<java><git><maven><githooks>,Git not using staged sources in pre-commit hook,"<p>I use this script in pre-commit hook to make some checks before I push the changes to git.</p>

<pre><code>#!/bin/bash
mvn clean compile -DskipTests &amp;&gt; $TEMP/cc.txt &amp;
A=$!
wait $A
A=$?

if test ""$A"" != ""0""
then
  cat $TEMP/cc.txt
  exit 1
fi

mvn javadoc:javadoc -T 8 &amp;&gt; $TEMP/jd.txt &amp;
B=$!

mvn pmd:cpd-check &amp;&gt; $TEMP/pmd.txt &amp;
C=$!

mvn org.jacoco:jacoco-maven-plugin:prepare-agent test org.jacoco:jacoco-maven-plugin:report -T 8 &amp;&gt; $TEMP/jcc.txt &amp;
D=$!

mvn checkstyle:checkstyle -Dcheckstyle.config.location=https://XXXX &amp;&gt; $TEMP/cs.txt &amp;
E=$!

wait $B
B=$?

wait $C
C=$?

wait $D
D=$?

wait $E
E=$?

mvn sonar:sonar -Dsonar.host.url=https://sonarcubeXXXX &amp;&gt; $TEMP/cq.txt &amp;
F=$!
wait $F
F=$?

echo ""compile $A, javadoc $B, pmd $C, jacoco $D, checkstyle $E, sonar $F""
if test ""$A$B$C$D$E$F"" != ""000000""
then
  if test ""$D"" != ""0""
  then
    cat $TEMP/jcc.txt
  fi

  if test ""$F"" != ""0""
  then
    cat $TEMP/cq.txt
  fi
  exit 1
fi
exit 0
</code></pre>

<p>But as long as the pre-commit-hook is running (5 minutes), I can not work and change sourcefiles.</p>

<p>I use Sourcetree to commit, sourcetree makes a difference between staged and unstaged files. While commiting files sourcetree executes this command:</p>

<pre><code>git -c diff.mnemonicprefix=false -c core.quotepath=false commit -q -F C:\Users\XXXX\AppData\Local\Temp\fbox5amv.k5f
</code></pre>

<h2>Question:</h2>

<p>How to access the intended codebase (what is currently pushed + what I have staged and try to commit) only but not the changes that are not staged in Sourcetree?</p>

<p>I have used subversion-commit-hooks before, they are server-side and they was able to extract the prospective codebase only.</p>

<p>Any idea?</p>
",4,8439175,,
47001032,7559664,10/29/2017 14:00,0,37,<git><githooks>,Pulling all content on from new Git --Bare,"<p>This is what we have</p>

<ol>
<li>Existing website, fully functional and working</li>
<li>Added a new --bare repo to a folder outside of public_html (for example deploy.git)</li>
<li>We use hooks and can push to the public_html using post-recieve</li>
<li>I can't pull all files, only the ones added after the --bare was created (this makes perfect sense to me)</li>
</ol>

<p><em>Question</em></p>

<p>What would be the process to add all of our production files to the repo?</p>

<p>Or have we made a cascade of errors?</p>
",8,7559664,,
10840196,435471,5/31/2012 19:39,8,4488,<git><bash><githooks>,aborting git pre-commit hook when var_dump present,"<p>I am trying (but failing miserably) to make a git pre-commit hook that checks for the presence of a var_dump in my modified files and exits if it finds one. The problem that I'm having is that it appears to always be aborting the commit. Here is the contents of my pre-commit file:</p>

<pre><code>VAR=$(git diff | grep -w ""var_dump"")
if [ -z $VAR ]; then
  echo ""You've left a var_dump in one of your files! Aborting commit...""
  exit 1
fi
</code></pre>
",0,435471,0,0
47003084,3283425,10/29/2017 17:22,4,1038,<php><docker><continuous-integration><githooks>,Best practice to implement a Git hook on dockerized application with PHP,"<p>I am pretty new to Docker and just dockerized my PHP application.</p>

<p>On my local computer when I push all the new commits I run some tests with PHPUnit on the pre-push hook.</p>

<p>What is the best practice for implementing this hook with docker environment?</p>

<p>I thought about copule options,</p>

<h2>Option 1:</h2>

<p>Creating an 'App' container that is linked to the PHP container and only commit code through it.</p>

<p>The disadvantage of this option is that I have to only handle the commits with a container terminal, could be quite annoying and limiting.</p>

<h2>Option 2:</h2>

<p>Using in the hook script the <code>docker exec</code> syntax on the PHP container.</p>

<p><strong>What is the best practice for this situation?</strong></p>
",1,3283425,0,0
10865880,7894,6/2/2012 20:54,1,503,<git><githooks><pre-commit-hook>,Check if commit is first commit in pre-commit hook,"<p>Currently I'm using the pre-commit hook to disallow committing to the master branch (forces me to work on other branches and merge in changes).  This doesn't allow me to do an initial commit on a newly created repo.  I want to add a check to allow a commit on master if it's the first commit.</p>

<p>I've tried multiple versions of this with no luck...</p>

<pre><code>if [[ `git shortlog | grep -E '^[ ]+\w+' | wc -l | tr -d ' '` == 0 -a `git symbolic-ref HEAD` == ""refs/heads/master"" ]]
then
    echo ""You cannot commit in master!""
    echo ""Stash your changes and apply them to another branch""
    echo ""git stash""
    echo ""git checkout branch""
    echo ""git stash apply""
    exit 1
fi
</code></pre>
",0,7894,,
10905990,730569,6/5/2012 22:38,5,630,<git><bash><amazon-ec2><terminal><githooks>,Bash command within a git post-update hook is not found,"<p>I have the following code in a git post-update hook that <code>cd</code>'s into my working directory and pulls from the bare git repo where this git hook lives:   </p>

<pre><code>cd $HOME/www/firefly

unset GIT_DIR

git pull hub master

combine

npm rebuild

exec git update-server-info
</code></pre>

<p>The problem is that when it runs <code>combine</code>, I get:</p>

<pre><code>hooks/post-update: line 14: combine: command not found
</code></pre>

<p>The weird thing is that if I manually cd into my working directory and run <code>combine</code> it successfully executes the file. What am I doing wrong?</p>
",1,730569,,
10921050,247730,6/6/2012 19:42,2,1283,<git><githooks>,JSHint on Git Push (Update Hook),"<p>When a client pushes to a remote git repository (bare) I want a hook that automatically runs JSHint on the incoming changed files and rejects the commit if JSHint returns errors. I only care to make sure the master branch is conforming to our JSHint configuration. So I have this script:</p>

<pre><code>#!/bin/bash

# --- Command line
refname=""$1""
oldrev=""$2""
newrev=""$3""
branch=${refname#refs/heads/}

echo ${refname}
echo ${oldrev}
echo ${newrev}
echo ${branch}

if [ ""$branch"" == ""master"" ]
then
  echo ""Need to JSHint"" &gt;&amp;2
  exit 1
fi

# Not updating master
exit 0
</code></pre>

<p>I guess I have two questions:</p>

<ol>
<li>How do I get the list of files that have been changed in the push?</li>
<li>How can I pass those files to JSHint?</li>
</ol>
",1,247730,0,0
47384417,584979,11/20/2017 2:52,2,505,<git><vim><githooks><pre-commit-hook><pre-commit>,Execute vim command as git pre-commit hook,"<p>I use the following command in vim to batch auto-format a specific filetype:</p>

<pre><code>:args ~/someDirectory/**/*.filetype | argdo execute ""normal gg=G"" | update
</code></pre>

<p>I am trying to figure out how I would run this command as a pre-commit hook to ensure all files of the filetype I care about are auto-formatted before being committed.</p>

<p>How would I accomplish this?</p>

<p>Thanks in advance.</p>
",0,584979,0,0
47386056,7789526,11/20/2017 6:18,0,724,<git><jenkins><azure-devops><webhooks><githooks>,Facing Issue while configuring Service-hook for Jenkins build job : Jamal Hartnett pushed updates to Fabrikam-Fiber-Git:master,"<p>I am working on configuring the Jenkins Build-job from VSTS-Service Hooks.</p>

<p>I have completed below for configuring the Build-Job with Service Hooks.</p>

<p><a href=""https://i.stack.imgur.com/ALr3z.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ALr3z.png"" alt=""Step 1""></a></p>

<p><a href=""https://i.stack.imgur.com/XHYkq.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/XHYkq.png"" alt=""Step 2""></a></p>

<p><a href=""https://i.stack.imgur.com/G0qom.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/G0qom.png"" alt=""Step 3""></a></p>

<p>The Url which I configure in Jenkin Base URL is below</p>

<pre><code>http://username:password@jcibts-build-jenkins.some.com:9080/job/jcibts-swm-dev-admin-portal-bd/build?token=sometoken
</code></pre>

<p><strong>If I hit the same URL from browser my Jenkins Build job get triggered. On the other hand if I configure this URL in Service Hook I am getting below exception</strong>.</p>

<p><a href=""https://i.stack.imgur.com/Wobiz.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Wobiz.png"" alt=""Exception""></a></p>

<p>Kindly advice if I configure some steps wrong or Is there any way to overcome this exception ??</p>
",0,7789526,,
11289809,562752,7/2/2012 8:03,0,111,<python><git><hook><githooks>,New working copy created on git push hook,"<p>I tried to write a hook with Python. I have a problem while executing it after a push. For example after a push the working copy should be reset. Reseting is executed but on the wrong folder. I get a new working copy after the push in the "".git"" folder and not on the repo-folder. Can someone explain what happend?</p>

<pre><code>process = subprocess.Popen(""git reset --hard"".split(), stdout=subprocess.PIPE)
</code></pre>

<p>I am using the above code to reset the repo on the server side</p>
",0,562752,,
47410129,1783632,11/21/2017 9:57,3,3588,<git><githooks>,How to get my branch name from a pre-receive hook?,"<p>I am working with GitHub enterprise and I don't have permissions to upload new pre-receive hooks to our repo.</p>

<p>I tried to test my hook as a pre-push hook and it was working like a charm,
but when I sent my hook to our admin he said: <strong>""The GitHub pre-receive-hook script is different with git pre-receive-hook script. The git symbolic-ref --short HEAD may not work as your expected""</strong></p>

<p>So I need to find a way to replace this command:</p>

<pre><code>current_branch=$(git symbolic-ref --short HEAD) || exit 1
</code></pre>

<p>To a command that will save my current branch inside ""current_branch"" parameter?</p>

<p>How do I do that without the ability to test it?</p>
",0,1783632,0,0
11307920,248082,7/3/2012 9:18,2,556,<git><githooks>,Git post-receive-email: Unknown type of (commit),"<p>I'm having an issue with Git's post-receive-email hook script. Here is what I did:</p>

<ol>
<li>On my server, I initialized a bare repository using: <code>git --bare init myrepo.git</code>. My server's Git config file says <code>core.bare = true</code></li>
<li>Did the setup using the guides for Git email for post receive</li>
<li>On my client, clones the repository using <code>git clone URL</code>. On my client, Git config is <code>core.bare = false</code>.</li>
<li>Did some work, added the new files, committed to the local Git </li>
<li>Pushed the changes to the remote repository using: <code>git push origin master</code> which issues the generated ref-ids for the commits done</li>
<li>But I do not receive emails; so tried to run the post-receive hook script on the server in <code>hooks</code> directory with <code>./post-receive &lt;oldrev&gt; &lt;newrev&gt; refs/heads/master</code></li>
</ol>

<p>The following error is constantly returned:</p>

<blockquote>
  <p>Unknown type of update to c9c047af (commit) <br/>
  no email generated</p>
</blockquote>

<p>Any clues what could be wrong? </p>
",2,248082,,
11317623,1492105,7/3/2012 19:14,1,155,<php><git><branch><githooks><git-post-receive>,Git Post-Receive Hook is Inconsistently Adding Changes,"<p>I am trying to write a post-receive hook which will pull in all new branches pushed to a bitbucket account. Then, if the person who pushed those changes is a designated user of a particular development site, the branch should automatically be checked out.</p>

<p>This is the code:</p>

<p><code></p>

<pre><code>$payload = stripslashes(($_POST['payload']) ? $_POST['payload'] : $_GET['payload']);
$obj = json_decode($payload);

$commits = $obj-&gt;commits;
$head_commit = $commits[0];

for ($i=0; $i&lt;sizeof($commits); $i++) {
    $commit = $commits[$i];
    $head_date = strtotime($head_commit-&gt;timestamp);
    $comm_date = strtotime($commit-&gt;timestamp);

    if ($comm_date &gt; $head_date) {
        $head_commit = $commit;
    }
}

$branch = $head_commit-&gt;branch;
$author = $head_commit-&gt;raw_author;

$msgs = array();                                
$ini = parse_ini_file('pull_settings.ini',true);
define (""CURRENT_SITE"",$_SERVER[""SERVER_NAME""]);

foreach ($ini as $server) {
    if (CURRENT_SITE==$server[""site_name""]) {
        if ($server[""type""]==""master"") {
            $users = $server[""users""];
            if (in_array($author,$users) &amp;&amp; $branch == ""master"") {
                exec(""git pull"",$msgs);
            } else $users = array();
        }
        if ($server[""type""]==""dev"") {
            exec(""git stash"",$msgs);
            exec(""git fetch --all"",$msgs);
            $users = $server[""users""];
            if (in_array($author,$users)) {
                exec(""git checkout -f $branch"",$msgs);
                exec(""git merge origin/$branch"",$msgs);
            } else $users = array();
        }
    }
}
</code></pre>

<p></code></p>

<p>The problem is this:</p>

<p>It doesn't always work! Sometimes it won't checkout the branch even if it should. Also, sometimes it leaves files behind when it checks out new branches. This results in git saying a whole bunch of files were modified that weren't within the branch it is in.</p>

<p>Please Help! Very stuck.</p>

<p>Thanks</p>
",0,1492105,0,0
11322356,780799,7/4/2012 4:18,3,3074,<git><githooks>,how to process files on a branch in post-receive hook in git,"<p>I have a remote server on which I have created a bare git repository. </p>

<p>I would like to create a hook so that a given script is run on the latest code received on any given branch. </p>

<p>I know the <code>post-receive</code> hook can be used for it. However I want to do the following:</p>

<ol>
<li>Get hold of the branch on which code was received.</li>
<li>Checkout the code in a temp location and run an operation on it.</li>
</ol>

<p>How do I do the above?</p>
",0,780799,0,0
65974198,10502146,1/30/2021 23:28,2,145,<git><githooks>,Get information that my local feature branch is not out-of-date with the remote master branch,"<p>Intro: We are a team of 10 people actively working on one project. Updates are released very often and it happens that after the changes are published to our GitHub repository, the branch immediately becomes out-of-date with remote master branch, there is no need to run CI/CD and everything else on it, before it gets updated.</p>
<p>For example, I'm working on a <strong>feature</strong> branch, pushing it to a remote repository, and opening a new pull request. But I cannot know in advance whether my branch is updated according to the master or not. Before each push, I need to manually update the local master branch and do a rebase.</p>
<p>To reduce actions I would like to set up a <code>git pre-push hook</code> that automatically checks if the current branch that I want to push is <strong>out of date</strong> relative to the master - if so, cancel the push.</p>
<p>On the GitHub page it shows this message: <code>This branch is out-of-date with the base branch</code></p>
<p>Any ideas how to get this information and cancel pushing to remote? Thanks.</p>
",1,10502146,0,0
11326895,1414448,7/4/2012 10:07,5,9960,<git><githooks>,How to apply client-side hook to all local repositories in git?,"<p>I create a commit-msg hook in <code>myrepo/.git/hooks</code>.</p>

<pre><code>#!/bin/sh
message=`cat $1`
c=`echo $message|grep -c 'fff'`
if[ $c -gt 0 ];then
  echo ""Error""
  exit 1
fi
exit 0
</code></pre>

<p>When I try to commit like so, an error occurs and it blocks the commit.</p>

<pre><code>$ git commit -m ""reffrffffeffff fffeef""
Error
</code></pre>

<p>I then do the following:</p>

<pre><code>$ cd myrepo
$ mkdir .hooks
$ mv .git/hooks/commit-msg .hooks/commit-msg
$ ln -s .hooks/commit-msg .git/hooks/commit-msg
</code></pre>

<p>and try to commit again with the same message.
The commit succeeds. I guess I may have done something wrong in the above steps?</p>

<p>Can anyone tell me how to make a client-side hook, and have each developer get restrictions from this hook?</p>
",3,1414448,0,0
29229247,274350,3/24/2015 9:40,16,2526,<git><githooks>,How can I allow git merge commits to master but prevent non-merge commits?,"<p>I have a Git pre-commit hook that prevents me from committing to master unless overridden, in order to encourage developing on branch.</p>

<p>However I would like to automatically allow merge commits to master.  Is there a way to identify a merge commit from my pre-commit hook script?  The script looks like this:</p>

<pre class=""lang-bash prettyprint-override""><code>#!/bin/bash

BRANCH=`git branch --color=never| grep '^*'|cut -c3-`

if [ ""${BRANCH}D"" == ""masterD"" -a ""${GIT_COMMIT_TO_MASTER}D"" != ""trueD"" ]
then
  echo ""Commit directly to master is discouraged.""
  echo ""If you want to do this, please set GIT_COMMIT_TO_MASTER=true and then commit.""
  exit 1
fi
</code></pre>

<p><strong>SOLVED:</strong> For anyone looking for a cut-and-paste, the working version of this hook script is:</p>

<pre class=""lang-bash prettyprint-override""><code>#!/bin/bash

BRANCH=$(git rev-parse --abbrev-ref HEAD)

if [ ""${BRANCH}"" == ""master"" -a ""${GIT_COMMIT_TO_MASTER}"" != ""true"" ]
then
  if [ -e ""${GIT_DIR}/MERGE_MODE"" ]
  then
    echo ""Merge to master is allowed.""
    exit 0
  else
    echo ""Commit directly to master is discouraged.""
    echo ""If you want to do this, please set GIT_COMMIT_TO_MASTER=true and then commit.""
    exit 1
  fi
fi
</code></pre>
",5,274350,0,0
29260551,4185100,3/25/2015 15:56,0,76,<git><githooks><bitbucket-server>,Is it possible to use GIT hooks in .git/hooks/ with Atlassian Stash?,"<p>Is it possible to use GIT hooks in .git/hooks/ with Stash?</p>

<p>It would like to know if I can write a simple shell/perl script for the post-commit hook to be run by the server on a git push. It should check out a branch to another location.</p>
",0,4185100,,
11367722,491510,7/6/2012 18:27,11,1636,<git><githooks><post-commit-hook>,Git post commit: skip --amend and rebase,"<p>I have a post-commit hook that does stuff in ruby. It works very well but in some cases I would like to skip the code execution when I do a <code>git rebase</code> or <code>git commit --amend</code>.</p>
<p>Does someone have an idea how I could not trigger the post-commit hook in these cases or any work around?</p>
",2,491510,0,0
47477766,5003256,11/24/2017 17:22,0,285,<ruby><git><githooks><popen3><ruby-thread>,Git Hook - Ruby Code - Interactive Input,"<p>I am trying to take input from git hook execution code(commit-msg hook). But the ruby is not able to stop at the input point. And its executing the code as if input is like a puts statement. Here is the code I tried and failed.</p>

<pre><code>#!/usr/bin/env ruby
require 'open3'

def take_input_here

  Open3.popen3(""pwd"", :chdir=&gt;""/"") {|stdin, stdout, stderr, thread|
    p stdout.read.chomp #=&gt; ""/""
  }

  input_val = gets.chomp
  puts input_val
  puts 'Hellow World!'
end
take_input_here
puts ""Commit Aborted.""
Process.exit(1)
</code></pre>

<p>Somebody please help my take this interactive input or else suggest me a good language for writing git hooks. Thanks in advance.</p>
",0,5003256,,
11375924,689990,7/7/2012 14:40,4,1286,<git><githooks>,merging in git post-receive hook,"<p>I use the following post-receive hook:</p>

<pre><code>GIT_TOP=`git rev-parse --show-toplevel`

while read oldrev newrev refname
do
        echo ""=== $oldrev""
        echo ""=== $newrev""
        echo ""=== $refname""

        echo ""=== 01. checkout -- $GIT_TOP/*""
        git checkout -- ""$GIT_TOP/*""

        echo ""=== 02. merging $refname""
        git merge $refname

        echo ""=== 03. checkout -- $GIT_TOP/*""
        git checkout -- ""$GIT_TOP/*""

done
</code></pre>

<p>The idea is clear enough: I want the current branch to be merged with a pushed one.</p>

<ul>
<li><p>Then I execute: <code>git status</code> and it show me that my local tree differs from the branch!</p></li>
<li><p>Than I execute ones more <code>git checkout -- *</code> in the top of git dir - and now this command do what I want: <code>git status</code> shows now no differences anymore.</p></li>
</ul>

<p>Why this command <code>git checkout -- ""$GIT_TOP/*""</code> didn't work in hook, and works only by direct call? How to run this command in hook?</p>

<p>P.S.</p>

<p>I've found that <code>git rev-parse --show-toplevel</code> called from within the hook returns <code>&lt;myrepo&gt;/.git</code> path, but from the shell  its value is just <code>&lt;myrepo&gt;</code>. May be this can help to solve the problem.</p>
",0,689990,0,0
12320220,465384,9/7/2012 14:36,16,5477,<git><githooks><pre-commit-hook><pre-commit><git-index>,Testing what is about to be committed in a pre-commit hook,"<p>When a <code>pre-commit</code> hook runs, the repository might not be clean. So if you naively run your tests, they will not be against what you're committing, but whatever happens to be in your working tree.</p>
<p>The obvious thing to do is to <code>git stash --keep-index --include-untracked</code> at the start of the <code>pre-commit</code> and <code>git pop</code> at the end. That way you are testing against the (pure) index, which is what we want.</p>
<p>Unfortunately, this generates merge conflict markers if you use <code>git add --patch</code> (especially if you edit hunks), since the contents of <code>stash@{0}</code> might not match up against the work tree after commit.</p>
<p>Another common solution is to clone the repository and run the tests in a new temporary one. There are two issues with that:</p>
<ol>
<li>we haven't committed yet, so we can't easily get a copy of the repository in the state we're about to commit; and</li>
<li>my tests might be sensitive to the location of the current working directory, for example because of local environment configuration.</li>
</ol>
<p>How can I restore my work-tree to whatever state it was in before the <code>git stash --keep-index --include-untracked</code>, without introducing merge conflict markers, and without modifying the post-commit <code>HEAD</code>?</p>
",10,465384,0,0
29969093,433570,4/30/2015 13:30,4,1589,<git><githooks>,exit 1 in pre-commit doesn't abort git commit?,"<p>I'm aborting git commit if a certain condition is met.</p>

<p><a href=""https://stackoverflow.com/questions/21298044/check-if-my-commit-has-import-pdb-in-emacs-git"">check if my commit has &#39;import pdb&#39; in emacs/git?</a></p>

<pre><code>#!/bin/sh

git diff --cached --no-renames --name-status --diff-filter=AM |
  while read st file; do
    case ""$file"" in
    *.py)
        if git show "":$file"" |
          grep -E ""^[^#]*\bimport[[:space:]]+pdb\b""; then
            echo ""$file: has import pdb""
            exit 1
        fi;;
    esac
done

git diff --cached --name-status --diff-filter=ACM | while read st file; do
    if grep ""#[[:space:]]*@test"" ""$file""; then
        echo ""$file: has @test""
        exit 1
    fi
done
</code></pre>

<p>The code runs fine and I can see the log ""... has import pdb""
But the next line <code>exit 1</code> won't abort the git commit. </p>

<p>It used to work fine, but it stopped working at some point. 
I'm on git 1.9.1</p>

<hr>

<p>output </p>

<pre><code>$ GIT_TRACE=2 git commit
trace: built-in: git 'commit'
trace: run_command: '.git/hooks/pre-commit'
trace: built-in: git 'diff' '--cached' '--no-renames' '--name-status' '--diff-filter=AM'
trace: built-in: git 'show' ':momsite/apps/custom_push_notifications/utils.py'
    import pdb; pdb.set_trace()
momsite/apps/custom_push_notifications/utils.py: has import pdb
trace: built-in: git 'diff' '--cached' '--name-status' '--diff-filter=ACM'
trace: run_command: 'emacs' '/home/eugenekim/Documents/zibann/.git/COMMIT_EDITMSG'
trace: exec: 'emacs' '/home/eugenekim/Documents/zibann/.git/COMMIT_EDITMSG'
</code></pre>
",5,433570,0,0
12357392,282112,9/10/2012 18:24,1,49,<git><githooks>,Is it possible to run a Git hook after adding a file to a project?,"<p>Is it pssobile to run a git hook after adding a file?  For example, after running:</p>

<pre><code>git add someFile.php
</code></pre>

<p>a script would be triggered.</p>
",3,282112,,
12377250,512652,9/11/2012 20:16,1,154,<git><shell><githooks>,Git post-receive auto-building,"<p>I'd line to install a post-receive hook in a git repository to build and install the module to some custom testing area. The idea is that the testing area will always reflect the most current code in the repo.</p>

<p>The hook will:</p>

<ol>
<li>clone/pull the code to tmp space</li>
<li>build the module</li>
<li>install the module to the testing area</li>
</ol>

<p>Developers connect to the repo through SSH via gitosis. Is there any way to let the user disconnect after the data has been pushed so they don't need to stick around for the build?</p>

<p>I've tried something like this:</p>

<pre><code>install(){
    unset GIT_DIR

    BARE_PATH=$PWD
    REPO_BASENAME=$(basename ""$BARE_PATH"")
    REPO_BASENAME=${BARE_PATH%.git}

    cd /my/scratch/space/

    if [ ! -d $REPOSITORY_BASENAME ] ; then
        git clone file://$BARE_PATH
    fi
    cd $REPO_BASENAME

   git pull
   ./install.sh

}

install &amp;
</code></pre>

<p>This doesn't quite do it. In the above hook, it doesn't exit until after <code>install</code> finishes. Is there any way to let the hook exit before the install is finished?</p>
",0,512652,0,0
12403616,388585,9/13/2012 9:50,2,778,<django><git><ide><githooks>,Pycharm (or Aptana Studio 3) and git pre-commit hook,"<p>I have a <strong>pre-commit</strong> hook in my project - just for not commiting broken code:</p>

<pre><code>python manage.py test some_app
</code></pre>

<p>It works okay from command prompt, but not from IDE's (not PyCharm, nor Aptana Studio 3).</p>

<p>What setting do I need to setup to make IDE work with hooks?</p>

<p><strong>update:</strong> I tried latest versions of PyCharm - it does support git hooks.</p>
",1,388585,,
30037384,2920855,5/4/2015 18:31,1,69,<git><hook><server-side><githooks>,Git server - prevent all incoming pushes from any computer except one,"<p>I want the git server to reject any incoming pushes that aren't from one particular machine on the local network for a specific branch (or branches).</p>

<p>I'm wondering if there is a solution to this or not as I've been looking around a bit about git hooks, however as far as I can tell there is very little information sent with the ""git push"" command to the server.</p>

<p>I have a solution by putting the pre-commit and pre-push hooks onto every machine that will be pushing to the repo, however I'm wanting to find a server-side solution instead, if it exists.</p>

<p>Thanks!</p>
",0,2920855,,
12410796,537500,9/13/2012 16:30,3,1282,<git><githooks>,Git post-receive hook error on server,"<p>I am trying to have a git 'post-receive' on my server. I am using the following code on the hook file:</p>

<pre><code>#!/bin/bash
#CONFIG
LIVE=""/home/ubuntu/public_html/testing""

read oldrev newrev refname
if [ $refname = ""refs/heads/master"" ]; then
  echo ""===== DEPLOYING TO LIVE SITE =====""
  unset GIT_DIR  
  cd $LIVE
 # ssh-agent $BASH
 # ssh-add /home/ubuntu/.ssh/ubuntu
  git pull --verbose origin  master || echo ""git-pull: returned error code""     
  echo ""===== DONE =====""
fi
</code></pre>

<p>It is showing the following error mesasge whenever I am trying to push something from my local pc to server:</p>

<pre><code>===== DEPLOYING TO LIVE SITE =====
remote: error: cannot open .git/FETCH_HEAD: Permission denied
remote: 
remote: git-pull: returned error code
remote: ===== DONE =====
</code></pre>

<p>Can anyone please help what can be the issue?</p>

<p>Just to confirm, I have tried with the same user credential to run the command via ssh terminal and it worked fine.</p>

<p>Thanks in advance.</p>
",4,537500,,
47786287,5909283,12/13/2017 5:43,0,37,<github><githooks>,Git Hooks to send value to Jira,"<p>Im using githooks post commit. Whenever I make a commit I want the post commit to execute in such a way that it sends values or information to the Jira server (URL address) which  will receive JSON values through post commit scripts.</p>
",0,5909283,,
30903906,1022935,6/17/2015 23:01,-1,114,<linux><git><permissions><githooks>,Git post-receive hook stopped copying files to web directory,"<p>Disclaimer: I'm a git newbie.</p>

<p>I followed the following post: <a href=""https://stackoverflow.com/a/12527839/1022935"">Setting up your git repos the normal way (here on stackoverflow)</a> to get a --bare repo set up at <code>/home/www-data/themename.git</code> and a post-receive hook working that copied everything to my <code>/var/www/domain.com/htdocs/wp-content/themes/themename/</code> folder. (I followed the instructions on that post exactly). Everything was working perfectly. </p>

<p>However, today I wanted to take a look inside that <code>post-receive</code> hook and ran <code>cat  /home/www-data/themename.git/hooks/post-receive</code>. If you didn't notice, I accidentally placed two spaces after <code>cat</code> instead of one. Which overwrote everything in the file rather than displaying it. Looking back, I should have just used <code>nano</code>. So I opened the post again, and copied the code snipped from the post and pasted it into my <code>post-receive</code> hook again. But now it doesn't do anything. The files aren't copied. </p>

<p>Thinking that maybe it was a permissions issue, I ran <code>chown -R www-data:www-data</code> on <code>/var/www</code> and that didn't work. I also ran <code>chown -R www-data:www-data</code> on <code>/home/www-data</code> and that also didn't work. Lastly I ran <code>chmod +x /home/www-data/themename.git/hooks/post-receive</code> to make the file executable in case it stopped being, and that also doesn't work. </p>

<p>Also, <code>git pull</code> still works correctly in the <code>/var/www/domain.com/htdocs/wp-content/themes/themename/</code> directory. </p>

<p>Any suggestions to fix this? Or should I just create the repos and directories from scratch again?</p>
",0,1022935,,
13375380,1171133,11/14/2012 8:35,1,149,<git><sh><githooks><pre-commit>,git pre-commit code modifications are applied after commit instead before,"<p>I wrote a pre-commit hook to increment the version number in the source. Why are the changes applied <strong>after</strong> the commit? What can I do to do that prior to the commit?</p>

<pre><code>#!/bin/sh
# Hook to increment version number before checkin

REPO_DIR=$(cd `dirname $0`/../.. &amp;&amp; pwd)
VERS_FILE=""${REPO_DIR}/version.php""
CUR_DATE=`date -u '+%Y-%m-%d %H:%M:%S'`
HOOK=`basename $0`

if [ -w ${VERS_FILE} ]; then
    # increment last digit of version string
    perl -i -pe 's/(\$version\s?=\s?['\''|""][\d\.]+)(\d+)/""$1"".($2+1)/e' ""${VERS_FILE}""
    RV=$?
    if [ 0 -ne ${RV} ]; then
        echo ""ERROR: Updating version in ${VERS_FILE} failed""
        exit $RV
    fi
    echo ""INFO: Increment version in file ${VERS_FILE}""
fi

echo ""Finish $HOOK at $CUR_DATE""
exit 0
</code></pre>

<p>I'm aware that such automatic changes aren't recommended. But technically this should be possible anyway. I'm using git 1.6.3.3 on Ubuntu 9.10.</p>
",0,1171133,0,0
13381105,718403,11/14/2012 14:47,1,2263,<git><githooks><git-push>,"GIT hook to prevent an experimental branch pushed to a release, or master branch","<p>We have three main branches in our workflow.</p>

<p>TEST (experimental), RELEASE (features going to next release), and MASTER (released only)</p>

<p>We take feature branches from RELEASE, merge feature branches first to TEST and if they are ok, merge those approved feature branches to RELEASE.</p>

<p>My problem is: as TEST branch contains some commits/features that we will not be releasing ever, we don't want it to merged into RELEASE or MASTER by mistake (or intentionally).</p>

<p>I read somewhere that it is not possible or feasible to prevent merges in local repositories, and i don't think it would solve my problem.</p>

<p>So, probably it is better to prevent updates to MASTER or RELEASE branch refs in main repository (by pushing to origin) when the new ref contains a specific commit ID of TEST branch in its commit log.</p>

<p>So i'll make a specific commit only to TEST branch, and record its Commit ID.</p>

<p>Whenever someone wants to push to master or release branch, i'll check if that push will update my refs/heads/master or refs/heads/RELEASE to a commit ref which contains that bad Commit ID in its history and abort.</p>

<p>As i'm no BASH or GIT master, does anybody have such an update hook that we can apply to our main repository?</p>
",0,718403,0,0
13397757,435627,11/15/2012 12:43,0,342,<git><git-submodules><githooks>,Git pre-receive hook and submodules,"<p>I have a pre-receive hook on a remote bare Git repo that will run tests, compress some files and generate a build ID when I do from my laptop:</p>

<pre><code> $ git push production master
</code></pre>

<p>The simplified version of the pre-receive hook is something likje this: </p>

<pre><code>while read oldrev newrev refname
do
# Export deployed branch to build directory
mkdir -p $BUILD_DIR
git archive $newrev | tar -x -C $BUILD_DIR 
cd $BUILD_DIR
the_build_script.sh 
done
</code></pre>

<p>Now, I've added two submodules to the repo, and I can't find any documentation or example about how to handle this. I know that I should run before the build script:</p>

<pre><code># git submodule init
# git submodule update
</code></pre>

<p>But, as far as I know, that will get the submodules referred by the old revision code and not the ones referenced in the new pushed code still not committed to the remote repo.</p>

<p>Any idea or example on how to handle this?</p>

<p>Thanks a lot.</p>
",0,435627,0,0
48405121,2754599,1/23/2018 15:19,1,854,<git><githooks><pre-commit-hook><phpcodesniffer>,git pre-commit hook under Windows run PHP_CodeSniffer against staged files,"<p>I try to use <a href=""https://github.com/squizlabs/PHP_CodeSniffer"" rel=""nofollow noreferrer"">CodeSniffer</a> in combination with a pre-commit git hook. I can run <code>phpcs --standard=PSR2 PhpFile.php</code> so the installation of CodeSniffer seems to work fine.</p>

<p>I try to use <a href=""https://github.com/ekino/git-hooks/tree/master/php/phpcs"" rel=""nofollow noreferrer"">this piece of code</a> as premade git hook. However I'm pretty sure this code is not compatible with Windows and I don't know how much effort it takes to port it. So maybe it is better to write my own code for parsing the staged (PHP) files with CodeSniffer. I just could use some help how to do this. </p>

<p><strong>Tried</strong></p>

<p>Well I knew I had to start with getting the staged files like this:</p>

<pre><code>git diff --cached --name-only
</code></pre>

<p>But I cannot use <code>grep</code> to only get the .php files. So I think we need an equivalent in Windows?</p>
",0,2754599,,
32982937,1424877,10/7/2015 2:41,1,161,<python><git><diff><githooks><git-diff>,Git pre-commit hook to regenerate a file and reject the commit if there are diffs,"<p>My situation is (roughly analogous to) the following:</p>

<p>We have the directory structure</p>

<pre><code>my-repo/
  input.txt
  output-1.bin
  output-2.bin
  output-3.bin
  converter.py
</code></pre>

<p>For simplicity, let's say that <code>converter.py</code> looks like this:</p>

<pre><code>#/usr/bin/env python
from shutil import copyfile
copyfile('input.txt', 'output-1.bin')
copyfile('input.txt', 'output-2.bin')
copyfile('input.txt', 'output-3.bin')
</code></pre>

<p>We version-control <em>both</em> <code>input.txt</code> <em>and</em> <code>output-*.bin</code>. I know, I know, you're going to say that there's no reason to version-control the generated files... but this is non-negotiable in our case. We use the .bin files a lot, they're mission-critical, and we can't risk a subtle bug in <code>converter.py</code> screwing them up. Version-controlling both the <code>converter.py</code> script <em>and</em> the outputs makes sure that the ramifications of any script change are super obvious in the git history.</p>

<p>But this leads us to a problem. We can modify <code>input.txt</code> and commit that diff without ever running <code>converter.py</code> to update the .bins!</p>

<p>This is a perfect job for a <a href=""http://githooks.com"" rel=""nofollow noreferrer"">git pre-commit hook</a>.</p>

<p>We can get the list of changed files via <code>git diff --cached --name-only --diff-filter=ACM</code>. If that list includes <code>input.txt</code> or <code>converter.py</code>, then we want to run <code>converter.py</code> and then diff the output against the .bin files being committed.</p>

<p>So I have two problems/questions:</p>

<ul>
<li><p>How can I run <code>converter.py</code> from within the pre-commit hook, without clobbering whatever uncommitted changes the user might have in his local checkout? This is basically <a href=""https://stackoverflow.com/questions/20479794/how-do-i-properly-git-stash-pop-in-pre-commit-hooks-to-get-a-clean-working-tree"">How do I properly git stash/pop in pre-commit hooks to get a clean working tree for tests?</a></p></li>
<li><p>How can I then, <em>after</em> running <code>converter.py</code>, ask git ""Are there now any uncommitted diffs in the working tree?"" I mean I hope the answer is simply <code>git diff</code>, but I'm unsure what exactly <code>git diff</code> means when executed from <em>inside a pre-commit hook</em>.</p></li>
</ul>

<p>The reason this problem is non-trivial is that <code>converter.py</code> mutates the state of the working tree, instead of just spitting its output to stdout. Sadly this, too, is a non-negotiable axiom of the problem.</p>

<p>Thoughts? Working code snippets? :)</p>
",3,1424877,,
16407389,1792814,5/6/2013 21:14,3,102,<git><workflow><githooks>,"git workflow with multiple, different remotes","<p>At work, we developed scripts and extensions to Nagios. We provide a supervision service to ~30 customers (each customer having a Nagios server). Some customers have specific configuration (new modules to check something very specific, yet to be included in mainline... or not).</p>

<p>Right now, the Nagios servers versions differs a lot (some servers are 2 years old, and no updates planned).</p>

<p>I'm wondering about switching to git to automate deployments, and using continuous integration to be sure we don't break something on a client's Nagios.</p>

<p>Here is my idea :</p>

<pre><code>                        1 single server
                                    \___________________________________________________
                                     |                                                 |
 dev1 -----\               /---------|---&gt; remote1 (bare) ----&gt; remote1 (nagios etc/)  |
            \             /          |_________________________________________________|
             \           /
              \         /
 dev2 ---- main server (bare) -----------&gt; remote2 (bare) ----&gt; remote2 (nagios etc/)

 ...
</code></pre>

<p>The devs, and main server are located at the office, when the bare remotes + remotes are located at the customers'.</p>

<p>I've already managed to automagically push to remotes using the post receive hook.</p>

<p>From remote1 (bare) to remote1, I could use another hook that would cd to remote1, and git pull. Then I could test the configuration via a simple Nagios command, and revert to previous commit in case something goes wrong.</p>

<p>About the files are are different between remotes, I could just gitignore them for the moment or use different branches on the main server (so I can push customer1 branch to remote1).</p>

<p>What do you think about it ? I'm open to any advice, or suggestion :-)</p>

<p>The bare + non bare repositories seems a little bit weird, and also I'm unsure about the roll back if some commit doesn't work as expected.</p>
",1,1792814,,
16427238,2214709,5/7/2013 19:43,0,305,<git><bash><ubuntu><githooks>,Not being able to pull in a git hook (bash script),"<p>I am working on a website, on an Ubuntu 12.04 server. When I push code to my website, I want my hook to automatically <code>pull</code> the code in my apache folder. The following commands update my website to the repository's current master without any issues:</p>

<pre><code>cd /var/www/www.foo.net
git pull
</code></pre>

<p>My <code>post-update</code> hook is what should automatically do this, but I keep getting the same error every time I to push. Note that the push is executing correctly every time. The script looks like this (irrelevant code left out):</p>

<pre><code>#!/bin/bash
BRANCH=$(git rev-parse --symbolic --abbrev-ref $1)
case ""$BRANCH"" in
""somebranch"")
        echo ""You are pushing to somebranch!""
        cd /var/www/www.foo.net
        pwd
        git pull
        ;;
esac
</code></pre>

<p>In my opinion, this looks like it should work, especially considering that the debug output is what I am expecting it to be. Yet it does not work. I always get the following output:</p>

<pre><code>remote: You are pushing to somebranch!
remote: /var/www/www.foo.net/
remote: fatal: Not a git repository: '.'
</code></pre>

<p>Note how it reports that it is in the correct directory and that, as I said above, I am able to pull in that directory without issue. <code>/var/www/www.foo.net/</code> <strong>is</strong> a git repository.</p>

<p>I have also tried using <code>( cd /var/www/www.foo.net/ ; git pull )</code> but to no avail. I also don't think it can have anything to do with permissions; I am using Gitolite, and am able to pull to the local repository by using the account that's setup with Gitolite.</p>

<p>Any ideas? I'm having no joy at all.</p>
",0,2214709,,
68877105,4313189,8/21/2021 22:10,0,341,<git><githooks>,up-to-date commit message template after pre-commit hook,"<p>I want to set up my git hooks so that when I commit something, an artifact is automatically produced if not up-to-date with the codebase, then staged and committed together with the rest of the manually staged files.</p>
<p>I know it's not necessarily a best practice, but I'm still experimenting at this point and I would like to have this option; another option would be to make the <code>pre-commit</code> hook fail if the artifact is outdated and then manually stage it, but since the artifact is only needed by the CI pipeline this would be a probably useless additional step.</p>
<p>I'm currently producing the artifact and staging it (by <code>git add artifact</code>) in the <code>pre-commit</code> hook. It's working.</p>
<p>The issue is that the commit message template (the one that pops out when I edit a new commit message in my editor) does not reflect the updated index (after the <code>pre-commit</code> hook modified it by staging the new artifact).</p>
<p>Any idea on how to keep that message up-to-date?</p>
<p>I was looking into <code>prepare-commit-msg</code>: I can manipulate the outdated message there. Is there a command that output the whole content of the file <code>COMMIT_EDITMSG</code>? Maybe I could rerun it somehow and replace the file content...</p>
<p><strong>EDIT:</strong> I'm looking at the source code. It seems that the message is composed in the code, not by a command (inside the <a href=""https://github.com/git/git/blob/e5a14ddd2d93da4d951fd63d4f78fe2410debe68/builtin/commit.c#L713"" rel=""nofollow noreferrer"">prepare_to_commit</a> function, half hard-coded half output of <code>status_printf</code> and <code>status_printf_ln</code>). <a href=""https://github.com/git/git/blob/e5a14ddd2d93da4d951fd63d4f78fe2410debe68/builtin/commit.c#L731"" rel=""nofollow noreferrer"">The pre-commit is called</a> before <a href=""https://github.com/git/git/blob/e5a14ddd2d93da4d951fd63d4f78fe2410debe68/builtin/commit.c#L888"" rel=""nofollow noreferrer"">the message is composed</a>, but from the same function, which could explain why the message is outdated (my <code>git add</code> command does not modify that function state). This does not bode well.</p>
",6,4313189,,
33046615,2328541,10/9/2015 20:28,2,96,<git><hook><githooks>,Git Push To Staging Server - Error message,"<p>I want to push from my local machine to a staging server via post-receive hook.</p>

<p>I did the following steps:</p>

<p><strong>Remote Machine</strong></p>

<ul>
<li><code>mkdir /var/www/mfserver.git</code></li>
<li><code>git init --bare</code></li>
<li><code>mkdir /var/www/mfserver</code></li>
<li><code>sudo chmod -R ug+w /var/www/mfserver/.git</code></li>
<li><code>sudo chown -R root:root /var/www/mfserver/.git</code></li>
<li><code>git config core.sharedRepository group</code></li>
</ul>

<p><strong>Local Machine</strong></p>

<ul>
<li><code>git remote add staging user@serverip:/var/www/mfserver.git</code></li>
</ul>

<p>When I then do: <code>git push staging master</code> I get still the error:</p>

<pre><code>Delta compression using up to 8 threads.
Compressing objects: 100% (182/182), done.
Writing objects: 100% (206/206), 55.54 KiB | 0 bytes/s, done.
Total 206 (delta 69), reused 0 (delta 0)
remote: fatal: Unable to create temporary file '/var/www/mfserver.git/./objects/pack/tmp_pack_XXXXXX': Permission denied
error: unpack failed: index-pack abnormal exit
To admin@SERVERIP:/var/www/mfserver.git
 ! [remote rejected] master -&gt; master (unpacker error)
</code></pre>

<p><strong>Hook</strong></p>

<pre><code>#!/bin/bash
while read oldrev newrev ref
do
        if [[ $ref =- .*/master$ ]];
        then
                echo ""Master ref received. Deploying master branch to Staging...""
                git --work-tree=/var/www/mfserver --git-dir=/var/www/mfserver.git checkout -f
        else
                echo ""Ref $ref successfully received. Doing nothing: only the master branch may be deployed to the server.""
        fi
done
</code></pre>

<p>This is my git hook: post-receive</p>

<p>I don't see why the error is coming up?</p>
",2,2328541,,
30753328,1018226,6/10/2015 10:10,0,54,<git><push><githooks><gitattributes>,Push dfferent variants to different remotes,"<p>I have a repository with two remotes (or even better: one remote with two <code>pushurl</code>s). One of these should receive the unaltered commits, as Git does regularly, but the other one should receive a slightly altered version.</p>

<p>For the purpose of this question, let us assume I want to run <code>sed '/\s*#/d'</code> over the files to remove all comments.</p>

<p>I do not have direct access to both remotes and thus can place no server side <a href=""https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks"" rel=""nofollow"">hooks</a>. Is it possible to send out different variants to different remotes with Git?</p>
",6,1018226,,
30759944,361089,6/10/2015 14:53,2,13068,<git><jenkins><githooks>,Unable to trigger build using 'Poll SCM' and Git notifyCommit option,"<p>We use Jenkins (1.614) and have Git as version control tool. The Git plugin version is 2.3.5. I am trying to trigger build <em>only</em> after every check-in since <em>continuously</em> polling is too expensive. I tried the following method described in various links but it’s not working:</p>

<ol>
<li>Enabled ‘Poll SCM’ and assigned a dummy value. I also tried without assigning any value.</li>
<li>Added following line in post-receive hook:</li>
</ol>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-css lang-css prettyprint-override""><code>curl http://jenkins_url:9099/jenkins/git/notifyCommit?url=ssh://gitolite@git_server/TestRepo</code></pre>
</div>
</div>
</p>

<ol start=""3"">
<li>Now if I commit some changes, I get the following message during push:</li>
</ol>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-css lang-css prettyprint-override""><code>$ git push origin release-test
Counting objects: 20, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 308 bytes | 0 bytes/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: Commit ID: 3a9cddadasd
remote: Returning result 0
remote:   % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
remote:                                  Dload  Upload   Total   Spent    Left  Speed
remote: 124   124  124   124    0     0     30      0  0:00:04  0:00:04 --:--:--   497
remote: Scheduled polling of Poll_Job
remote: No Git consumers using SCM API plugin for: ssh://gitolite@git_server/TestRepo</code></pre>
</div>
</div>
</p>

<ol start=""4"">
<li>When I see the Git Polling Log, I notice the following:</li>
</ol>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-css lang-css prettyprint-override""><code>Started on Jun 10, 2015 6:42:04 PM
No existing build. Scheduling a new one.
Done. Took 0 ms
Changes found</code></pre>
</div>
</div>
</p>

<p>I do see the build # getting incremented after every such poll for few seconds but 'Build History' remains empty as shown below. No steps that are part of the build are executed.</p>

<p><img src=""https://i.stack.imgur.com/VO9F6.png"" alt=""enter image description here""></p>

<p>Any inputs why the build is not getting triggered as expected?</p>
",2,361089,,
47920732,4153163,12/21/2017 8:20,0,823,<python><git><githooks>,Implement Git hook - prePush and preCommit,"<p>Could you please show me how to implement git hook?</p>

<p>Before committing, the hook should run a python script. Something like this:</p>

<pre><code>cd c:\my_framework &amp; run_tests.py --project Proxy-Tests\Aeries \
   --client Aeries --suite &lt;Commit_file_Name&gt; --dryrun
</code></pre>

<p>If the dry run fails then commit should be stopped.</p>
",0,4153163,0,0
58777585,8703153,11/9/2019 8:24,1,37,<git><githooks>,How to write a git hook to pull every push?,"<p>How can I create a git-hook so that whenever I push my local repo, another local repo, at some other machine, will pull it right away?  </p>

<p>I want to update the other repo automatically on every push I make.<br>
Should I use a 3rd party software for that?  </p>
",2,8703153,,
1977610,163815,12/29/2009 23:38,45,35881,<git><githooks>,change default git hooks,"<p>Not sure if this is possible in git (I haven't found it but I may be using the wrong vocabulary in my searches), but it be would useful to be able to modify and enable hooks as the defaults for all new repositories (at the time of creation I mean) so these don't have to be customized each time a new repository is created.  It seems the easy way to do this is write a wrapper that sets my hooks and chmods them when I create a new repository, but if there's a way built into git I would rather use that instead of having unnecessary wrapper scripts however little lying around.</p>

<hr>

<p><em>Clarification copied up from a comment to a now-deleted answer:</em></p>

<p>My question is whether the default behavior for ALL new repositories can be changed, so they don't need to be customized in the same way each time for each new repository. The easy answer is write a wrapper for creating and customizing the repos (it generates the hook scripts and chmods them), but it seems like this default behavior should also be customizable without having to do that.</p>
",2,163815,0,0
2060035,217325,1/13/2010 20:34,4,2463,<git><githooks>,Using the pre-commit hook to clean code,"<p>Is it good form to scrub development code from my source files during a  pre-commit hook?</p>

<p>For example, I have code that is calling xdebug_break() and I want to remove the calls to that function from any files that have it before committing my code to the repository.  I would rather not check for the function before calling it because I am the only one that wants that function call there.</p>
",0,217325,,
58867861,7176651,11/14/2019 23:03,12,9788,<javascript><git><githooks><husky>,Run a husky git hook manually (without triggering it w/git command),"<p>I'm setting up a node project with <a href=""https://github.com/typicode/husky"" rel=""noreferrer""><code>husky</code></a> and I want to have a git-hook script run manually, without having to trigger it in git.</p>

<p>Example:</p>

<p>My package.json has the following:</p>

<pre><code>{
...
    ""scripts"": {
        ""precommit"": // something goes here
    }
...
    ""husky"": {
        ""hooks"": {
            ""pre-commit"": ""lint-staged""
        }
    },
...
}
</code></pre>

<p>If I run <code>npm run precommit</code>, the <code>lint-staged</code> hook step runs, <em>WITHOUT</em> the commit actually occurring in git.</p>

<p>Is this possible?</p>
",2,7176651,0,0
13242451,1077893,11/6/2012 0:07,2,129,<haskell><reload><githooks><yesod>,Reloading the content of a yesod website with SIGUSR1,"<p>To reload the content of the yesodweb.com website, a reload route has been added. Anybody can initiate a reload by using wget with POST. This does not seem really secure. </p>

<p>Would it be possible to initiate a reload with a git hook instead? Pushing new content to the server would trigger a reload of the blog content etc.</p>

<p>I was thinking of installing a SIGUSR1 handler instead of listening to a specific route. Would this be doable, or would there be a risk of some sort of race condition? If this is doable, where should I add my handler?</p>
",0,1077893,,
30822050,2580686,6/13/2015 18:19,1,491,<git><gitlab><githooks><git-post-receive>,"git diff not working on a bare repo, post-receive hook","<p>I am working on a post-receive hook on a bare repo.
I want to get the file names that are changed and pushed in this bare repo (only the latest one).
To get it i am using this command.</p>

<p><code>git diff --name-only HEAD^</code></p>

<p>This gives me error when I push to bare repo.</p>

<pre><code>remote: fatal: This operation must be run in a work tree
</code></pre>

<p>I got that there is no worktree in bare repo so this command fails but how to get this run?</p>
",0,2580686,0,0
13271643,934836,11/7/2012 14:22,8,3426,<git><sqlite><githooks>,Git hook for diff sqlite table,"<p>I have a Sqlite db in a Git repository. Today I wanted to do a diff of a view in two different commits. I did it this way:</p>

<pre><code>$ sqlite3 -list file.sqlite ""SELECT * FROM contact_list_detailed"" &gt;/tmp/newlist
$ git checkout 51c24d13c file.sqlite
$ sqlite3 -list file.sqlite ""SELECT * FROM contact_list_detailed"" &gt;/tmp/oldlist
$ git checkout -- file.sqlite
$ diff /tmp/oldlist /tmp/newlist
</code></pre>

<p>It works and I could script it if I want. But are there any ""nice"" ways of doing this with hooks?</p>
",0,934836,0,0
30840378,2107724,6/15/2015 8:18,0,1033,<node.js><git><gruntjs><githooks><gitbook>,"""Arguments to path.resolve must be strings"" when calling 'gitbook build' from a Git hook","<p>I am trying to run <code>gitbook build</code> within a post-receive Git hook on my (Gitlab, Debian 7, virtual private) server.</p>

<p>Basically I want to:</p>

<ul>
<li>checkout the bare repository to a temporary dir</li>
<li>run <code>gitbook build</code> in that temporary dir</li>
<li>sync with the webspace through <code>rsync</code></li>
</ul>

<p>The <code>post-receive</code> script runs something like:</p>

<pre><code>git --work-tree=/home/git/temp-checkout /
--git-dir=/home/git/repositories/my/repo.git checkout -f

gitbook build /home/git/temp-checkout

rsync ...
</code></pre>

<p>Running these commands from the server's command line works perfectly.<br>
Running the script from the server's command line works well too.<br>
But when the script is invoked from the Git hook the <code>gitbook</code> call produces the following error: </p>

<pre><code>remote: path.js:439
remote:       throw new TypeError('Arguments to path.resolve must be strings');
remote:             ^
remote: TypeError: Arguments to path.resolve must be strings
remote:     at Object.posix.resolve (path.js:439:13)
remote:     at Object.&lt;anonymous&gt; (/usr/lib/node_modules/gitbook-cli/lib/config.js:5:24)
remote:     at Module._compile (module.js:460:26)
remote:     at Object.Module._extensions..js (module.js:478:10)
remote:     at Module.load (module.js:355:32)
remote:     at Function.Module._load (module.js:310:12)
remote:     at Module.require (module.js:365:17)
remote:     at require (module.js:384:17)
remote:     at Object.&lt;anonymous&gt; (/usr/lib/node_modules/gitbook-cli/bin/gitbook.js:11:14)
remote:     at Module._compile (module.js:460:26)
</code></pre>

<p>Searching for that error message seems to point to Grunt, but I just have <em>no idea</em> what is happening here. I suspected something about invocation/permissions, but neither the user (in both cases <code>whoami</code> returns the <code>git</code> user) nor the working directory seem to make a difference.</p>

<p>But in any case <code>gitbook</code> behaves differently when invoked ""locally"" (i.e. from the server's command line) or from the Git hook.</p>
",0,2107724,,
47936560,789757,12/22/2017 6:00,-1,41,<git><deployment><githooks>,"Git hooks, pulling from git hub","<p>Is it possible to push to GitHub from your computer then have a git hook that automatically pulls from GitHub on the server without having to ssh into the server?  </p>

<p>Or am I misunderstanding git hooks?</p>
",2,789757,0,0
21162578,165547,1/16/2014 13:02,1,774,<git><githooks>,git pre-commit: modify files in pre-commit script,"<p>Is it possible to modify changed files(I want to tidy up xmls) in git pre-commit hook script? If yes, how to do it? Now I have such script:</p>

<pre><code>files=`git diff --name-only --cached`


was_xml=false
for file in $files
do
    extension=""${file##*.}""
    xml=""xml""
    if [ ""$extension"" = ""$xml"" ]
    then
        tmp_file=$file""_xmlint""
        echo $tmp_file &gt;&gt; fuck
        xmllint --format --encode utf8 $file &gt; $tmp_file
        rm $file
        mv $tmp_file $file
        git add $file
        was_xml=true
    fi
done

if $was_xml ; then
    git commit -m 'Xml cleanup'
fi
</code></pre>

<p>But it doesn't work...</p>
",0,165547,,
30847329,2544016,6/15/2015 14:08,-1,256,<linux><git><githooks><git-post-receive>,Git post-receive hook is not executed,"<p>The following <code>post-receive</code> hook:</p>

<pre><code>#!/bin/bash
echo ""-&gt; Post-receive test""
</code></pre>

<p>is <strong>not executed</strong> when pushing to my remote repository.</p>

<p>The remote is <code>ssh://user@server:2222/home/git/repo.git</code> (it's a VM) and works, as when I manually checkout it I see the modifications I've made.</p>

<p>Some additional informations ...</p>

<pre><code>$ ls -al /home/git
drwxr-xr-x  7 git  git  4096 juin  15 15:40 repo.git

$ ls -al /home/git/repo.git/hooks
-rwxr-xr-x  1 git  git  117  juin  15 15:40 post-reveive
</code></pre>

<p>Everything seems in place and yet, when I push to the remote, there's no trace of the <code>post-receive</code> being executed:</p>

<pre><code>Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 301 bytes | 0 bytes/s, done.
Total 3 (delta 2), reused 0 (delta 0)
To ssh://user@server:2222/home/git/repo.git
   6c385f4..d368bf9  master -&gt; master
</code></pre>

<p><strong>Why wouldn't the <code>post-receive</code> hook be executed?</strong></p>
",7,2544016,,
30881127,1485752,6/17/2015 2:01,0,759,<githooks><pre-commit-hook><git>,Get the list of unstaged files in git pre-commit hook,"<p><br>
I've spent a whole lot of time on stackoverflow/google trying to figure out a solution for this problem. May be the solution is simple and I am missing something.<p>So I have a pre-commit hook(shell script) which runs few tests on committed files. If a committed file fails a test, it is removed from the stage. I want to printout all the unstated files from inside the script. Here's what I have tried so far from inside the script. </p>

<blockquote>
  <ol>
  <li>git diff --name-only --diff-filter=M <br></li>
  <li>git ls-files -m</li>
  <li>git diff --name-only</li>
  </ol>
</blockquote>

<p>All of them throw the same error as shown below:</p>

<blockquote>
  <p>fatal: This operation must be run in a work tree</p>
</blockquote>

<p>P.S. I am running this inside .git folder(since hooks reside there) and hence the error.
<p> Any suggestions would be really helpful.</p>
",0,1485752,,
59095073,8870505,11/28/2019 19:15,0,449,<git><version-control><githooks>,How to update global git hooks for the repo?,"<p>When I update global git hooks, and make <code>git init</code> in repo hooks don't get updated. How to update them?</p>
",0,8870505,,
48116711,9178002,1/5/2018 15:33,0,102,<git><gerrit><githooks><gerrit-trigger>,"In a Hook, pull a diff for the first commit in a pushed branch against the SHA it was created against","<p>I have on the surface what appears to be a simple issue to handle but under the covers things get sticky quick.  I am still at the straw man stage so there isn't any functional code to share.</p>

<p>The Desired Behavior:<br>
We attach diffs for commits to our bug tracking application using bug IDs contained within the commit comments. The attachment occurs using a script called from an post-recieve hook in Git, and change-merged in Gerrit. </p>

<p>The Problem:<br>
When a new branch is initially pushed the first commits $oldrev value is 00000000000000000.  This occurs for every new branch and in Gerrit it occurs for every branch you push to HEAD:refs/for/$branch. This results in the diff not being attached for the first commit of a new branch or in the case of Gerrit, diffs do not attach for every first commit within every code review. </p>

<p>My current proposed fix is complex and ugly.  I was hoping that someone might know of a more elegant way to determine the originating SHA for a given branch:</p>

<p>Step1: 
Determine the parent branch of the current branch.</p>

<p>I unabashedly stole the commands to retrieve a parent branch from this GitHub gist: <a href=""https://gist.github.com/joechrysler/6073741"" rel=""nofollow noreferrer"">https://gist.github.com/joechrysler/6073741</a></p>

<p>my $branch = <code>git rev-parse --abbrev-ref HEAD</code>;
my $parent = <code>git show-branch -a 2&gt;/dev/null | grep '\*' | grep -v ""$branch"" | head -n1 | sed 's/.*\[\(.*\)\].*/\1/' | sed 's/[\^~].*//'</code>;</p>

<p>Those two shell commands pull in the parent branch nicely and give me no output if the branch is parentless so that makes for an easy scripted check for parentage. The problem is that the process falls apart when the branch was created off of a tag that was generated from a branch that no longer exists using a SHA that no other branch references.  In Git terms that means the new branch is parentless so logically all is well but in practice I still want to diff the changes from the SHA that the branch was pulled from.</p>

<p>Step2: (Assuming there is a parent branch)</p>

<p>Run Git cherry to pull only the commits associated with my branch, excluding the commits from parent:</p>

<p>my $parent = git cherry -v $parent $refs;</p>

<p>The commit order is reversed from normal git log output so the oldest SHA is at the top of the list allowing me to pull the first value that contains letters and numbers from an array.  Pull that first committed SHA and determine it's parent using a simple git log command:</p>

<p>my @oldrevs=<code>git log -n 2 --pretty=format:%H $first_sha</code>;</p>

<p>Final Steps:
Remove all entries in the @oldrev array that do not contain letters or numbers using a for loop and set </p>

<p>$oldrev = $oldrevs[-1]; </p>

<p>since git log output shows the oldest commit last.  This gets rid of the null SHA value for the purposes of diff attachment in 99% of cases but it's a lot of hoops to jump through.  Can anyone suggest a cleaner method that might also be able to pull in the originating SHA for a branch generated from a tag that references a commit no longer references in any branches within the repo?</p>
",2,9178002,,
59103897,1293303,11/29/2019 11:25,0,148,<git><githooks>,Git hook to automatically rename files after updating repository,"<p>My team and I have set up a git repository containing a PHP web application on a Linux server that we regularly push to. We already use a post receive hook to inform the whole team via email whenever someone pushes something, which works just fine.
Additionally, we checked out this repo to a different location on the same server and use this as ""staging area"" for other colleagues. The web application needs to load a ""config.php"" file that contains machine specific information (e.g. absolute paths), so its contents depends on the server and location it runs on. Therefore, there are several config files inside the repo:</p>

<ul>
<li>config.sample.php (for developer machines)</li>
<li>config.live.php (for the live server)</li>
<li>config.staging.php (for the staging area)</li>
</ul>

<p>The file ""config.php"" was added to .gitignore, so it is not part of the repo.
What we want to achieve is the following automation: whenever someone pulls the staging repo, the existing file ""config.php"" gets deleted and the file ""config.staging.php"" is copied as ""config.php"". This way, we want to make sure that changes to the config files are automatically updated in the staging area.</p>

<p>Do we have to set up a hook in the ""main repo"" or in the ""staging repo""? Which hook (e.g. post-receive) do we have to use?</p>
",2,1293303,,
13887310,38947,12/14/2012 22:46,18,9659,<git><github><githooks><pivotaltracker>,How can I automate Pivotal Tracker & Github Integration?,"<p>Pivotal Tracker and Github have great integration: Once it's set up, each commit which is prefixed by the Pivotal Tracker ID will appear under the corresponding Pivotal Ticket automatically, for an example:</p>

<pre><code>git commit -am '[#1234567] my new changes'
git push origin
</code></pre>

<p>will add the comment 'my new changes' automatically to the 1234567 Pivotal Ticket among with the github commit link.</p>

<p>However, it's easy to forget to add the ticket ID each time. How could it be simplified / automated?</p>
",0,38947,0,0
31405235,1141095,7/14/2015 11:24,1,263,<git><githooks>,git hook allowing merge only of branch with a single commit,"<p>In the repository I use only a single commit per branch is allowed. In case of multiple commits, rebase is needed before merging.. since failing is human I use to forget this.</p>

<p>I would like to implement a git-hook that checks on a merge request whether the branch which is merged into development has a single commit or not.</p>

<p>Thanks in advance.</p>
",3,1141095,,
48135161,506522,1/7/2018 7:23,12,4827,<git><security><githooks>,How to globally disable git hooks,"<p>For security reasons I would like git hooks to be disabled by default.</p>

<p>More specifically, when I run a git command in any git repository on my (Kubuntu) OS account, no git hooks should be executed, unless somehow specified.</p>

<p>In run all my code in Vagrant or Docker and the attack I want to avoid is the one where malicious code in the VM writes to the git hooks directory and thus gets itself onto the host machine. Disabling git hooks by default is a line of defense against this.</p>

<p>I'm looking for a solution that does not require per repository work and state. In my search I ran into <a href=""https://gist.github.com/MrSwed/4bb4e0a8c2a2f35827e6d9b410642582"" rel=""noreferrer"">this script</a> which breaks both those requirements.</p>

<p>Ideally there is a simple solution such as putting this in <code>.bash_aliases</code>:</p>

<pre><code>alias git='/usr/bin/git --no-hooks'
</code></pre>
",12,506522,0,0
40355267,4850916,11/1/2016 6:44,1,762,<node.js><githooks><npm-shrinkwrap><package-lock.json>,How check consistency npm-shrinkwrap.json and package.json,"<p>Sometimes my team members forgot to update npm-shrinkwrap.json after update package.json. I know <a href=""https://github.com/uber/npm-shrinkwrap"" rel=""nofollow"">this package</a> from uber, but it can not be used with npm v3. So now it is not solution.</p>

<p>Do have I possibility to auto check consistency for npm-shrinkwrap.json and package.json? I want to do this in git-hook or/and continuous. </p>
",0,4850916,0,0
40370232,2155605,11/1/2016 23:33,0,128,<python><git><githooks>,Cannot use 3rd party libraries in git hooks,"<p>I have implemented a pre-commit git hook in python which uses <a href=""https://github.com/c2nes/javalang"" rel=""nofollow noreferrer"">javalang</a>.</p>

<p>I have installed javalang using <code>pip install javalang</code> on my machine. However, when I commit something and my pre-commit script hook executes - I get an import error when the script attempts to import javalang.</p>

<p>Why am I getting this error? I have already checked in my terminal that I can use javalang so why can't the script see it?</p>

<p>UPDATE:</p>

<p>My shebang is <code>#!/usr/bin/env python</code></p>

<p>When I type <code>which python</code> I get <code>/usr/local/bin/python</code></p>

<p>The full error is: <code>ImportError: No module named javalang</code></p>

<p>Output when I do a <code>echo $PATH</code> in my terminal: <code>/usr/local/bin:“/usr/local/bin:/usr/bin:/bin:/usr/sbin:/sbin:/usr/local/munki:“/Users/&lt;my_name&gt;/Applications/apache-ant-1.9.6”/bin/""</code></p>
",6,2155605,,
31435822,2708750,7/15/2015 16:19,0,835,<git><gitlab><githooks>,gitlab pre-receive hook is executed for all repositories though defined only for one,"<p>We have gitlab v7.10.5
While testing server-side pre-receive hooks I noticed some strange behavior. Hook defined for only one repository somehow getting executed for all repositories on the server.</p>

<p>I've written the test script that only outputs ""Hello world"" smile message.
I've got it installed as the pre-receive hook for just ONE repository, say test.git. works fine.</p>

<p>When I push to the other repo, I get the ""Hello world"" message.
The other repo has no connections to the test repo.
Is that a bug?</p>
",0,2708750,,
13929778,800011,12/18/2012 9:22,1,208,<git><apache><.htaccess><mod-rewrite><githooks>,Change Mod RewriteBase depending on domain/url,"<p>I want to change the RewriteBase depending on the domain. In a perfect world I would do this in the .htaccess itself. But my understanding is that this is impossible.</p>

<p>The problem is that I have a local git repo and a repo on our dev server. The repo on the dev server is within a subfolder (example.com/mysite) while localy its just example.lo.</p>

<p>So on the server I have to set the RewriteBase to /mysite</p>

<p>My question then is, what is the best sollution to solve this? We can use git hooks to trigger a bash script on the bare server repo.  </p>

<p>Will it work to add the .htaccess to the .gitignore when the repo is --bare and using this post receive hook?:</p>

<pre><code>#!/bin/sh
GIT_WORK_TREE=/Users/Admin/Sites/mysite git checkout -f
</code></pre>

<p>Drop in a comment if Im unclear about anything. All help is appreciated!</p>
",0,800011,0,0
48166391,6081820,1/9/2018 10:43,0,94,<git><push><githooks><git-post-receive>,How can i select the comitted files in a post-receive hook in git?,"<p>I need to get the file names, which are comitted withhin the post-receive hook.</p>

<pre><code>#!/bin/bash

while read oldrev newrev refname
do
   /* If updated-file == ""myFile"", then do a specific task */
done
</code></pre>

<p>How can i get a reference to the changed files?</p>
",0,6081820,,
66572943,9180342,3/10/2021 21:13,0,526,<windows><shell><batch-file><githooks>,Batch file executed in shell script not waiting for user input,"<p>I've stumbled upon git-hooks and been trying to create one to run on Windows. So I've decided upon using batch files to do so because it seemed easy enough.</p>
<p>First, I renamed the pre-commit sample to pre-commit and called my bat steps there:</p>
<pre class=""lang-sh prettyprint-override""><code>#!/bin/sh
$(pwd)/git-hooks/hooks/unit_test.bat &amp;&amp;
$(pwd)/git-hooks/hooks/integration_test.bat
</code></pre>
<p>The <em>unit_test.bat</em> only shows some messages and runs the unit tests task, but the <em>integration_test.bat</em> prompts the user on if they want to run these tests or not because they are generally slower.</p>
<p><strong>The problem is that the prompt (done with either '<em>choice</em>' or '<em>set /p</em>') doesn't get the user input</strong>:</p>
<ul>
<li>'<em>set /p</em>' doesn't wait for user input</li>
<li>'<em>choice</em>' freezes and doesn't allow any user input</li>
</ul>
<p>I've tried adding <em>start</em> to call the .bat files but it opens them on another cmd so it makes it impossible to stop the commit.</p>
<h3>Files referenced</h3>
<ul>
<li><p><em>unit_test.bat</em></p>
<pre><code>@echo off
echo ^&gt; Testes unitários
call gradlew testReport || (echo(&amp; echo Testes unitários falharam! Acesse o relatório de testes para conferir.&amp; exit 1))
</code></pre>
</li>
<li><p><em>integration_test.bat</em></p>
<pre><code>@echo off

echo(echo ^&gt; Testes integrados
%SystemRoot%\System32\choice.exe /C sn /M &quot;Esses testes geralmente são mais lentos. Quer rodar os testes integrados&quot;
if ERRORLEVEL 2 goto nao
call gradlew integrationTests || (echo(echo Testes integrados falharam! Acesse o relatório de testes para conferir.) &amp;&amp; exit 1)

:nao
echo(echo Não se esqueça de confirmar que os testes integrados passam antes de fazer o 'git push'!)
exit /B
</code></pre>
</li>
</ul>
",6,9180342,,
13942116,237808,12/18/2012 21:54,1,855,<git><msysgit><githooks>,Post-Update Git Hook Not Finding Directory,"<p>I am setting up an environment where I can push changes done locally on my workstation to ""Hub"" repository (which is a remote) and then a post-update hook will automatically update my staging web site, which is the ""Prime"".  I'm doing this so that I can see my changes get automatically reflected in my staging site when I push to my remote hub.</p>

<p>This set up is based on <a href=""http://joemaller.com/990/a-web-focused-git-workflow/"" rel=""nofollow"">this</a> article.  My server is Windows 2012 and I'm using MSysGit on both the server and my workstation (Windows 7).</p>

<p>Everything is working fine when I do everything manually -- push from my local repo to the hub and then manually fetch/merge into the prime.  My problem is when I try to have the fetch/merge be done by a post-update hook.</p>

<p>When I commit a change to my hub, the output I get is:</p>

<pre><code>c:\Code4X\GIT\stage&gt;git push stage master
Counting objects: 11, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (6/6), done.
Writing objects: 100% (6/6), 518 bytes, done.
Total 6 (delta 5), reused 0 (delta 0)
remote:
remote: **** Pulling changes into Live [Stage's post-update hook]
remote:
remote: hooks/post-update: line 12: cd: /c/websites/myproject.staging: No
such file or directory
To w:/stage.git
   ce1e2ea..93e11f4  master -&gt; master
</code></pre>

<p>My post-update hook is:</p>

<pre><code>#!/bin/sh

echo
echo ""**** Pulling changes into Live [Stage's post-update hook]""
echo

cd /c/websites/myproject.staging || exit
unset GIT_DIR
git pull stage master

exec git update-server-info
</code></pre>

<p>I'm able to fire up a bash cmd shell and cd to the directory without problem, so I'm not sure what the problem is.</p>

<p>I've also tried:</p>

<ul>
<li>including git\cmd in my PATH </li>
<li>enclosing the path I'm trying to cd to in quotes ("") </li>
<li>having my shebang point to #!/c/progra~1/git/bin/sh</li>
</ul>

<p>Hopefully it's something obvious.  Any thoughts as to what the problem is?</p>
",0,237808,,
40550477,1150534,11/11/2016 14:49,6,2637,<git><githooks>,Update pre_commit hook file on version control,"<p>I recently updated my <code>pre_commit.sample</code> file to run rubocop upon a commit (renamed to pre_commit). </p>

<pre><code>#!/bin/sh
#
# Check for ruby style errors
rake run:rubocop
</code></pre>

<p>Mistakingly I thought this would update on other developers machines when pulling the changes. How can i ensure that anyone who pulls the change has their pre_commit file updated</p>

<p>Thanks</p>
",0,1150534,0,0
59352729,8231110,12/16/2019 8:17,1,796,<c#><git><githooks><fxcop><pre-commit-hook>,How to call/run fxcop analyzer from pre-commit git hook? C#,"<p>I'm Fxcop Analyzer style checker.
I want to run/call Fxcop from pre-commit, so if Fxcop finds any error or fields so Git Hook pre-commit should stop commit process.<br>
I had never programmer in Bash and it is the first time I am working with git hook.</p>

<p>Any suggestions that I could use to set this up would be great.</p>
",0,8231110,,
21556589,3271445,2/4/2014 15:31,12,3207,<git><git-branch><githooks>,How to get remote branch name in git pre-push hook,"<p>The documentation says:</p>

<blockquote>
  <p>Information about what is to be pushed is provided on the hook's
  standard input with lines of the form:</p>
  
  <p>&lt; local ref> SP &lt; local sha1> SP &lt; remote ref> SP &lt; remote sha1> LF</p>
  
  <p>For instance, if the command +git push origin master:foreign+ were run
  the hook would receive a line like the following:</p>
  
  <p>refs/heads/master 67890 refs/heads/foreign 12345</p>
</blockquote>

<p>how do I access those lines in the pr-hook script?</p>
",4,3271445,0,0
59357934,11810473,12/16/2019 13:46,1,97,<python><git><autocomplete><githooks>,"autocomplete does not work within git hook, tty problem?","<p>I am implementing autocomplete feature in one of the git hooks (prepare-commit-msg) in python. It works when I call it as a normal python script, i.e., <code>python auto_complete_hook.py</code>. However, it does not work (pressing TAB does not show options) when its called within the git hook environment. In the git hook I have a tty attached, i.e., <code>sys.stdin = open('/dev/tty', 'r')</code> before calling <code>input()</code> function.</p>

<p>What am I missing? I would appreciate any pointers on how to solve this.</p>

<p>Git hook code:</p>

<pre><code>sys.stdin = open('/dev/tty', 'r')
autocompleter = MyCompleter(keywords_list)
readline.set_completer(autocompleter.complete)
readline.parse_and_bind('tab: complete')
input()
</code></pre>

<p><code>autocompleter.complete</code> function returns a list of possible matches.</p>
",0,11810473,0,0
13953976,330867,12/19/2012 13:58,1,318,<git><bash><githooks>,Git post-receive hook fails : operation not allowed,"<p>I have a post-receive hook that call a bash script of mine (which will pull the local repo and restart the Java server).</p>

<p>Here's the owner info of the post-receive hook :</p>

<pre><code>-rwsr-x--x 1 cyril devs   676 19 dec.  14:45 post-receive
</code></pre>

<p>As you can see, I set the <code>setuid bit</code> on this script in order to be run as <code>cyril/devs</code> also for other users.</p>

<p>The content of this script is rather simple :</p>

<pre><code>echo ""Running post-receive hook""
echo ""Server will be up and running in about 1 minute""
/home/project/start_dev restart &amp;
</code></pre>

<p>My script <code>start_dev</code> has those rights :</p>

<pre><code>-rwsr-x---  1 cyril devs 1515 19 dec.  14:41 start_dev
</code></pre>

<p>Note: also the <code>setuid.</code></p>

<p>If I push something to the server with the account <code>cyril</code>, it works perfectly.</p>

<p>If someone else, with an other account, push to the server, they got :</p>

<pre><code>remote: /home/project/start_dev: line 52: kill: (11490) - Operation not allowed
</code></pre>

<p><em>(The kill is used to stop the instance.)</em></p>

<p>Why they have this errors, the script should be run as <code>cyril</code>, not the user, thus they should have the right to kill this instance, right?</p>

<p>What am I doing wrong?</p>
",0,330867,,
21567518,468472,2/5/2014 2:28,2,1161,<git><github><githooks>,"local git hook for ""git remote update""?","<p>I have a local git repository, created with:</p>

<pre><code>git clone --mirror git://github.com/&lt;user&gt;/&lt;project&gt;.git
</code></pre>

<p>Occasionally changes will get pushed to github, and this machine will pull them with:</p>

<pre><code>git remote update --prune
</code></pre>

<p>This all works fine, but after the update, I want to run a hook, and I'm not sure which to run. I have tried ""post-receive"" and ""post-merge"", but neither seems to execute after the update. In both cases, the contents of the hook file are:</p>

<pre><code>#!/bin/sh 
echo foo &gt; foo.log
</code></pre>

<p>When I run them from the command-line via bash.exe (yes, on Windows), a foo.log file is created, so that works. But nothing happens as a result of the ""git remote update"". Between each ""git remote update"" I am pushing a useless change to make sure there's something to pull.</p>
",4,468472,,
66579161,2489037,3/11/2021 8:53,1,167,<regex><grep><githooks>,Regex with grep,"<p>I want to add a githook which checks that when changes in a file contain a TODO, it should be followed by a ticket number. For example, this is correct <code>// TODO PK-123456</code> but this one should match and prevent a commit: <code>// TODO do it later</code>.</p>
<p>This is my Regex:</p>
<pre><code>\/\/ +TODO (?!PK-[0-9]{6})
</code></pre>
<p>However when I try to use this (on Mac OS)</p>
<pre><code>git diff --cached | grep  -E '\/\/ +TODO (?!PK-[0-9]{6})'
</code></pre>
<p>I get the following error:</p>
<p><strong>grep: repetition-operator operand invalid</strong></p>
<p>Any ideas?</p>
",2,2489037,,
48204307,5903497,1/11/2018 10:03,0,291,<git><githooks><git-push><encryption-symmetric><ecryptfs>,"Git: how does git push handle an encrypted folder when ""push""","<p>Scenario: using git to push to a remote repo. Local and remote are regular git repos, not encrypted. Putting a possible ecryptfs filesystem within a folder within the repo to be pushed.</p>

<p>If: a git pre-hook would assure unmounting the folder(umount ~/encrypted_folder/), and echo to command line something like "" the folder containing an encrypted ecrypfs file system was closed"", then git would push the repo to it's remote location including the folder that contains the encrypted filesystem after having assured the folder was unmounted, so the encryption stands. To ""umount"" no password is asked for. No technical complications to regular git functionality to be observed.</p>

<p>What would be the undesirable consequences?</p>

<p>One is evident: version controlling an encrypted file or folder would be irrelevant. That is acceptable.</p>

<p>Second: instead of git being frugal, would every push write the whole of the encrypted folder to the remote, and bloat the remote repository?</p>

<p>Third: would git ""corrupt"" in any way the encrypted folder?</p>

<p>Incentive: copying a folder containing an encrypted ecryptfs filesystem is trivial, tarring also, using rsync or scp is the evident suggestion, excluding that folder from being inside the repo, using "".gitignore"" also ...</p>

<p>but for workflow reasons: git being used for backup, disregarding the versioning of the folder that contains encrypted filesystem, not having to recourse to anything else and keep things user trivial. One single git push to multiple remote locations for now takes care of all desired data backup per user. For workflow reasons, per user, it would be nice to keep it that way.</p>

<p>White paper: one single backup blob, mostly versioned, and being able to have some encrypted data within the repo and it's remote clones. Prohibiting the folder concerned from being ""open"" by the git pre-hook. Everything in one single git operation. Ecryptfs contains within the encrypted part of the data, anything needed to ""open and close"" the data but the passphrase. This would make for high mobility, needing to clone the remote repo to any git-ecryptfs enabled device, in any remote location and have access to the encrypted data.</p>
",8,5903497,,
40654573,3690336,11/17/2016 12:12,5,5306,<git><githooks>,Git : How to disable the --no-verify option while doing a git commit?,"<p>I have some code quality checks in the git's pre-commit hook, which the developers can easily bypass using <code>git commit -m ""My commit message"" --no-verify</code>.</p>

<p>I would like to disable the <code>--no-verify</code> option. Is there a way to do this?</p>
",2,3690336,,
48206515,648138,1/11/2018 11:57,0,70,<git><shell><deployment><githooks><continuous-deployment>,post-receive hook not responding to the push from my local machine,"<p>I have the following script as a <code>post-receive</code> git hook on the server. It is meant to automate the deployment whenever a git push is made.</p>

<pre><code>#!/bin/bash

DEPLOYMENT_BRANCH=dev
WORKING_DIR=/300gb/project
while read oldrev newrev refname
do
    # there can be multiple branches but we're only interested in deploy
    branch=$(git rev-parse --symbolic --abbrev-ref $refname)
    if [ ""$DEPLOYMENT_BRANCH"" == ""$branch"" ]; then
      echo ""**** pulling changes from $branch ****""

      # change directory to the working copy
      cd $WORKING_DIR
      unset GIT_DIR
      git fetch
      git reset --hard origin/$DEPLOYMENT_BRANCH

      # at this point you have the latest source in WORKING_DIR.
      # time to start your build process and deployment scripts
      # grunt, for instance
      yarn install
      yarn run doc
      forever restartall
    fi
done
</code></pre>

<p>But when I made the push from my local machine to the <code>dev</code> branch, nothing happened. The script was never invoked. What could be the reason for this? I have changed the permission of the hook to <code>777</code>.</p>
",6,648138,,
48226355,9208934,1/12/2018 12:31,2,1308,<githooks><tslint><pre-commit-hook><pre-commit><git-husky>,tslint precommit hook shows all the linting errors before but also allows to commit the code,"<p>I am using angular-seed &amp; husky to add a precommit hook for git. My package.json has</p>

<pre><code>""scripts"": {
    ""precommit"": ""npm test &amp;&amp; npm run lint"",
  }
</code></pre>

<p>When I commit the code, husky runs ""npm test"" &amp; ""npm run lint"" fine. When npm test fails, it shows me the errors on the console &amp; doesn't allow me to commit. But when there are errors on ""npm run lint"" then the console displays all the error messages but also allows to commit. How can avoid the commit to when there are linting errors? Any help is appreciated. Thank you in advance!
This is how my .git\hooks\pre-commit looks:</p>

<pre><code>#!/bin/sh
#husky 0.14.3

command_exists () {
  command -v ""$1"" &gt;/dev/null 2&gt;&amp;1
}

has_hook_script () {
  [ -f package.json ] &amp;&amp; cat package.json | grep -q ""\""$1\""[[:space:]]*:""
}

cd "".""

# Check if precommit script is defined, skip if not
has_hook_script precommit || exit 0

# Node standard installation
export PATH=""$PATH:/c/Program Files/nodejs""

# Check that npm exists
command_exists npm || {
  echo &gt;&amp;2 ""husky &gt; can't find npm in PATH, skipping precommit script in package.json""
  exit 0
}

# Export Git hook params
export GIT_PARAMS=""$*""

# Run npm script
echo ""husky &gt; npm run -s precommit (node `node -v`)""
echo

npm run -s precommit || {
  echo
  echo ""husky &gt; pre-commit hook failed (add --no-verify to bypass)""
  exit 1
}
</code></pre>
",0,9208934,,
31520591,5134004,7/20/2015 15:33,3,658,<git><bash><matlab><shell><githooks>,bash git pre-commit hook running MatLab function does not wait for a result,"<p>I have a MatLab project on Win-7.</p>

<p>Its version controled with Git-Extension.</p>

<p>I have a matlab function that runs a kind of self-test.  </p>

<p>It's named <code>pre_push_test_suit</code>, and it exits with either code 0 (OK) or 1 (there is a problem).</p>

<p>I want to implement the pre-commit git hook, that will prevent pushing to the central repo if the self-test function fails.</p>

<p>my script starts like this:</p>

<pre><code>#!/bin/sh
res_file=pre_push_test_log.txt
resultcode=$(matlab -automation -minimize -r pre_push_test_suit -logfile $res_file)
if [ ""$resultcode"" -eq ""0"" ]
...
</code></pre>

<p><strong>Expected result</strong>: I wanted the script to lunch MatLab and wait for exit value.</p>

<p><strong>Actual result</strong>: the script lunches MatLab process, and continues with empty value in <code>$resultcode</code>.</p>

<p>If I got it correctly, the script is run on a bash-like shell that is installed with git on windows, but I'm not sure it is a real bash.</p>

<p>Typing ps did not show the matlab process.</p>

<p>Also tried, but with no change of result:</p>

<ul>
<li>to replace the $(...) with <code>...</code></li>
<li>to add ""wait"" after the third line</li>
<li>google it.</li>
</ul>

<p>I did not try scripts in any other language but bash (I do not know many scripting languages).</p>

<p>I thought about the ugly solution of infinite loop with ""wait"", waiting for a file to contain some output, but i prefer something more decent.</p>

<p>Any better solution to wait for the result, in any language, is welcome.</p>
",2,5134004,,
28704891,339698,2/24/2015 19:47,2,137,<git><github><hook><githooks>,git push --force/-f - how to get each branch,"<p>This has to do with using git's <code>push.default</code> <code>matching</code> setting from git &lt; 2.0. Also, forking the repo in this particular instance is not applicable. We use github at work and since it does not allow a <code>pre-receive</code> hook, we have to try and mitigate this via <code>pre-push</code> hook (somewhat of a half-measure if you ask me, but it's something).</p>

<p>Anyway, I'm trying to write a <code>pre-push</code> hook that will prevent someone from accidentally force updating our <code>master</code> branch (or any branch we want). However, when I tried doing a simple test of trying to get the branch name, I can only seem to get the currently checked out branch. I've used these three git ""methods"" to do so:</p>

<ol>
<li><code>$(git branch 2&gt; /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/\1/')</code></li>
<li><code>$(git symbolic-ref HEAD)</code></li>
<li><code>$(git rev-parse --abbrev-ref HEAD)</code></li>
</ol>

<p>and all three give me the same result. Here is an example:</p>

<pre><code>[dude (master)] $ git rebase -i head^
# reword a commit to get into a force-push state
[dude (master)] $ git checkout test3
[dude (test3)] $ git push 
branch 2&gt;: test3 # output by the hook
symbolic-ref: refs/heads/test3 # output by the hook
rev-parse: test3 # output by the hook
--- pre-push: nothing to check # output by the hook
To git@github.com:dude/stuff.git
 ! [rejected]        master -&gt; master (non-fast-forward)
error: failed to push some refs to 'git@github.com:dude/stuff.git'
hint: bla bla bla
</code></pre>

<p>now apply a force update:</p>

<pre><code>[dude (test3)] $ git push -f
branch 2&gt;: test3 # output by the hook
symbolic-ref: refs/heads/test3 # output by the hook
rev-parse: test3 # output by the hook
--- pre-push: nothing to check # output by the hook
Counting objects: 1, done.
Writing objects: 100% (1/1), 185 bytes | 0 bytes/s, done.
Total 1 (delta 0), reused 0 (delta 0)
To git@github.com:dude/stuff.git
 + 060fa0b...763516d master -&gt; master (forced update)
</code></pre>

<p>As you can see, only <code>test3</code> branch is being referenced. I want to know when git is about to push the <code>master</code> branch instead. Does anyone know what a force-update does behind the scenes here?</p>
",4,339698,0,0
28716375,2607581,2/25/2015 10:17,-1,54,<git><git-rebase><githooks><git-amend>,Modifying last n commits and appending a line to all of them through hook,"<p>I have a local code-review process wherein a reviewer adds an empty commit on top of a branch that its been reviewed and send s back to developer.</p>

<p>The developer then pushes it to canonical.</p>

<p>I want to write a pre-push hook which will see if last commit says that the code is reviewed and then append a ""PEER-REVIEWED"" word to the commit message of all commits on the branch and then push it to Canonical!</p>

<p>(Use: I can see any commit in my canonical and see if it is reviewed or not. If its reviewed then it will have ""PEER-REVIEWED"" word in it.)</p>

<ol>
<li>How practical is the approach?</li>
<li>How do I automatically append the word in commit messages of all the commits getting pushed.</li>
</ol>

<p>Thanks!</p>
",3,2607581,,
28716451,313192,2/25/2015 10:21,3,538,<git><gitlab><githooks><git-post-receive><post-commit-hook>,Can I trigger a git hook after a commit from Gitlab web editor?,"<p>I use git, specially in conjunction with Gitlab (7.7.1 + shell 2.4.1), to wire together a bunch of parts of my development workflow. The post important part of this is the post-receive hooks that happen on the server end that run various tests and builds. The <a href=""https://github.com/gitlabhq/gitlabhq/blob/667c0a909bde1cf71f21d8ec9768e98b1c489030/doc/hooks/custom_hooks.md"" rel=""nofollow"">introduction of custom hooks</a> has made this a lot easier as I no longer have to monkey with the Gitlab code to recover the hook positions it was previously hijacking.</p>

<p>The <code>post-receive</code> hook in this location works great for all commits coming in via SSH. The problem I have is that these hooks do not seem to be called when the web interface built in editor is used to make a commit. I've tried putting a <code>post-commit</code> hook in the custom_hooks folder of my repo but it does not seem to get called. It seems like this lack of hook calling is also the case if I use the HTTPS address for connecting to git rather than SSH.</p>

<p>Is there a way to configure Gitlab or a place to put my hooks such that it will be called for all commits that hit the repository, not just remote pushes via SSH?</p>
",0,313192,0,0
28716765,253186,2/25/2015 10:35,1,408,<git><githooks>,Reading from STDIN in prepare-commit-msg hook,"<p>I'm implementing a prepare-commit-msg hook script that automatically fills out some values in the commit. It works fine, however it depends on a local file, which may not be present, or may not contain the value I'm looking for. In this case, I would like to offer the developer an option of manual input, which is then saved to the local file for re-use. It is also possible that on some branches the extra values are not needed at all.</p>

<p>What happens if I read from STDIN in the hook script? It might work if I commit from the command line, however what if I use some UI (such as Eclipse) to do the commit? Is it possible to solve this problem in any way other than to refuse the commit?</p>
",3,253186,,
46953553,8433383,10/26/2017 11:49,0,661,<git><githooks>,Need to validate local and remote branch before push,"<p>I am trying to create a checkpoint using Pre-push hook in GIT where i am checking if the local branch and the remote branch name is same or not.</p>

<p>And allow the push only if local and remote branches are same. I was trying something like this in pre push sample hook file but its not working. Please suggest.</p>

<pre><code>while read local_ref local_sha remote_ref remote_sha
do
if [ ""$local_ref"" != ""$remote_ref"" ]
then
        echo "" Please check Remote and local branch names"";
        exit 1

else
        exit 0
fi
done
</code></pre>

<p>UPDATE: My local branch is <em>Mybranch</em> in ""git push command"" and remote branch is <em>refs/for/Mybranch</em></p>

<p>So even if my branch names are same its giving me error, How can I extract only branch name from remote excluding /refs/for?</p>

<p>Git push command:</p>

<pre><code>git push origin Mybranch:refs/for/Mybranch
</code></pre>
",4,8433383,,
10791486,,5/28/2012 23:33,10,2098,<git><githooks>,How to replace local git hooks with updated versions with git init?,"<p>I have exactly the same question as this user here:</p>

<p><a href=""https://stackoverflow.com/questions/3007051/git-init-template-replacing-modified-hooks"">git init template, replacing modified hooks</a></p>

<p>I have a new template file in my global git hooks. However, the original template file was already loaded, so <code>git init</code> does not overwrite. I read the same here, this appears to be the correct git behaviour:</p>

<p>From <a href=""http://www.cs.potsdam.edu/cgi-bin/man/man2html?1+git-init"" rel=""nofollow noreferrer"">http://www.cs.potsdam.edu/cgi-bin/man/man2html?1+git-init</a>:</p>

<blockquote>
  <p>Running git init in an existing repository is safe. It will not
  overwrite things that are already there. The primary reason for
  rerunning git init is to pick up newly added templates.</p>
</blockquote>

<p>So what is a good way to force reloading new git template hooks? I have many hooks in many git repos, on several computers and used by a variety of users. The most practical way is to have the users run a specific command, rather than telling them to remove the hook first and then run the git init command. Is there a way of doing this? </p>
",0,,0,0
28727795,2785792,2/25/2015 19:22,0,708,<git><bash><githooks>,How to Append String to End of Same Line of Git Commit Message with Git Commit Hook,"<p>I'm trying to append a string to the end of a Git commit message and <a href=""https://stackoverflow.com/questions/7932092/can-i-add-a-string-to-my-commit-messages-before-sending-them-to-svn-in-git-svn"">this SO post</a> was a very helpful step in the right direction.</p>

<p>So far, this is working in .git/hooks/prepare-commit-msg but appending my string on a new line:</p>

<pre><code>echo ""foo"" &gt;&gt; ""$1""
</code></pre>

<p>with output: </p>

<pre><code>""Initial commit
 foo""
</code></pre>

<p>I was looking into how to append on the same line with <code>echo</code> but I'm unable to successfully pass the <code>-n</code> argument to echo in a commit hook. In addition to <code>echo</code>, I also tried <code>printf</code> to no avail as well.</p>

<p>I'm looking to have the my commit message look like: </p>

<pre><code>""Initial commit foo""
</code></pre>

<p>Does anyone have any idea on how to accomplish this? </p>
",4,2785792,,
10796776,519912,5/29/2012 9:53,2,3397,<git><githooks><git-pull><git-post-receive>,git pull in hooks/post-receive failed,"<p>On the server, /home/git/xxx/hooks/post-receive:</p>

<pre><code>#!/bin/bash

cd /var/www/xxx
git pull
</code></pre>

<p>On the server, /var/www/xxx was created like this:</p>

<pre><code>cd /var/www
git clone /home/git/repositories/xxx.git
</code></pre>

<p>When I run ""git push"" on the client, got this message:</p>

<pre><code>remote: fatal: Not a git repository: '.'
</code></pre>

<p>Any ideas?</p>
",2,519912,,
47287230,1783632,11/14/2017 13:35,3,2817,<git><githooks>,How can I test my pre-receive hook?,"<p>I need to create a pre-receive hook that rejects push from any client from any branch which is not master, So I wrote this script:</p>

<pre><code>     #!/bin/bash

    refname=""$0""
    oldrev=""$1""
    newrev=""$2""

    alowed_branch='master'
    current_branch=$(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')

    if [ $alowed_branch = $current_branch ]
    then
      echo ""you are pushing to master branch""
      exit 0
    else
      echo Branch $current_branch is Locked.
     exit 1
    fi
</code></pre>

<p>Now I don't know how can I test it...</p>

<p>When tested on a 'pre-commit' hook on my local git repo I get what I want:</p>

<p><a href=""https://i.stack.imgur.com/dNibH.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/dNibH.png"" alt=""enter image description here""></a></p>

<p>But when trying to test it as a pre-push or pre-receive hook as suggested it doesn't take any effect and I can commit and push with no interference.</p>

<p>is there a way to test it on GitHub?</p>
",6,1783632,,
29074572,2885270,3/16/2015 10:30,8,3175,<git><git-merge><githooks><git-commit>,Git: pre-receive hook to allow only merges and not direct commits into master,"<p>I have a problem creating a <code>pre-receive</code> hook on a git remote branch, doing what I want.</p>

<p><strong>What's the problem?</strong></p>

<p>Direct commits to the master branch should be not allowed. Only merges into the master branch should be allowed.</p>

<p><strong>Solution</strong></p>

<p>My solution until now is to check, if there are changes in the push from a user, where the master is affected. But the problem is that I can't differentiate if the change is a direct commit or a merge.</p>

<pre><code>#!/bin/sh
while read oldrefid newrefid refname
do
if [ ""$refname"" = ""refs/heads/master"" ]; then
        echo $(git merge-base $oldrefid $newrefid)
        echo ""---- Direct commit to master branch is not allowed ----""
        echo ""Changes only with a merge from another branch""
        exit 1
fi
done
</code></pre>

<p>Has anyone an idea, how to check if the change is a merge?</p>

<p>Thank you!</p>
",0,2885270,0,0
47301203,2194805,11/15/2017 6:58,0,269,<git><git-branch><githooks>,git hooks / pre-receive - how to get all the commit messages on a newly created branch?,"<p>i' d like to get all the commit messages (like with git log --format=%s) on a newly created branch. Let' s suppose i' ve 2 commits:</p>

<pre><code>abcd - from yesterday
bcde - from today
</code></pre>

<p>. With this code:</p>

<pre><code>while read old new ref; do
    ....
done
</code></pre>

<p>old will be 40 zeros, and new will be bcde. How can i get all the commit messages in this case?</p>

<p>Usecase:</p>

<pre><code>git checkout master
git checkout -b new_branch
some_work
git add; git commit
some_other_work
git add; git commit
git push origin new_branch
</code></pre>

<p>.</p>

<p>Many thanks.</p>
",0,2194805,,
11206118,1002758,6/26/2012 11:14,3,1608,<drupal><drupal-7><ubercart><githooks>,Ubercart and Drupal 7 - hook_add_to_cart,"<p><a href=""http://www.ubercart.org/docs/api/hook_add_to_cart"" rel=""nofollow"">http://www.ubercart.org/docs/api/hook_add_to_cart</a></p>

<p>I am trying to hook into the add cart functionality of ubercart. I have created stock_control.module and stock_control.info files and enabled the module. In my .module file I have</p>

<p>The first is output but the 2nd is not.</p>

<pre><code>&lt;?php
   dsm('hello1');
     function stock_control_add_to_cart($nid, $qty, $data) {
    dsm('hello2');
     if ($qty &gt; 1) {
    $result[] = array(
  '        success' =&gt; FALSE,
  'message' =&gt; t('Sorry, you can only add one of those at a time.'),
);
  }
  return $result;
 } 
</code></pre>
",0,1002758,0,0
11211950,340688,6/26/2012 16:35,2,5850,<git><hook><push><gitolite><githooks>,"post-receive hook permission denied ""unable to create file"" error","<p>Just got <code>gitolite</code> installed on my webserver and am trying to get a <code>post-receive</code> hook that can point the <code>git dir</code> in apache's direction.</p>

<p>This is what my <code>post-receive</code> hook looks like. Got this script from the <a href=""http://toroid.org/ams/git-website-howto"" rel=""nofollow"">Using Git to manage a web site</a>.</p>

<pre><code>#!/bin/sh
echo ""post-receive example.com triggered""
GIT_WORK_TREE=/srv/sites/example.com/public git checkout -f
</code></pre>

<p>I've also tried:</p>

<pre><code>#!/bin/sh
echo ""post-receive example.com triggered""
unset GIT_INDEX_FILE
export GIT_WORK_TREE=/srv/sites/example.com/public
export GIT_DIR=/home/git/repositories/example.com.git
git checkout -f
</code></pre>

<p>This is the error response i'm getting back from <code>git push origin master</code> from my local workstation. These are files from within my repository.</p>

<pre><code>remote: post-receive example.com triggered
remote: error: unable to create file .htaccess (Permission denied)
remote: error: unable to create file .tm_sync.config (Permission denied)
remote: fatal: cannot create directory at 'application': Permission denied
</code></pre>

<p>Standalone script error</p>

<pre><code>remote: sudo: no tty present and no askpass program specified
remote: Sorry, try again.
remote: sudo: no tty present and no askpass program specified
remote: Sorry, try again.
remote: sudo: no tty present and no askpass program specified
remote: Sorry, try again.
remote: sudo: 3 incorrect password attempts
</code></pre>

<p>Update:</p>

<pre><code>git@vannevar:~$ sudo -l
Matching Defaults entries for git on this host:
    env_reset, secure_path=/usr/local/sbin\:/usr/local/bin\:/usr/sbin\:/usr/bin\:/sbin\:/bin

User git may run the following commands on this host:
    (root) NOPASSWD: /usr/local/sbin/prgetsimpleappscom
git@vannevar:~$ /usr/local/sbin/prgetsimpleappscom
-su: /usr/local/sbin/prgetsimpleappscom: Permission denied
git@vannevar:~$ sh /usr/local/sbin/prgetsimpleappscom
post-receive getsimpleapps.com triggered
error: unable to unlink old 'application/config/development/database.php' (Permission denied)
error: unable to unlink old 'application/config/production/database.php' (Permission denied)
error: unable to unlink old 'application/config/quickbooks.php' (Permission denied)
git@vannevar:~$ sudo sh /usr/local/sbin/prgetsimpleappscom
[sudo] password for git: 
Sorry, user git is not allowed to execute '/bin/sh /usr/local/sbin/prgetsimpleappscom' as root on vannevar.
git@vannevar:~$ sudo /usr/local/sbin/prgetsimpleappscom
[sudo] password for git: 
sudo: /usr/local/sbin/prgetsimpleappscom: command not found
git@vannevar:~$ nano /usr/local/sbin/prgetsimpleappscom
git@vannevar:~$ 
</code></pre>
",11,340688,0,0
29124836,1091402,3/18/2015 14:32,1,177,<mercurial><githooks><pre-commit-hook><hgrc>,Prepare commit message hook in Mercurial,"<p>What is Mercurial's equivalent to the <code>prepare-commit-message</code> hook in Git?</p>

<p>Basically what I'm looking for is any hook that runs as part of a commit but before the commit message has been edited by the user. The hook will edit the commit message and the generated message will be shown to the user so it can be validated.</p>
",1,1091402,,
29162398,2923406,3/20/2015 8:35,0,91,<git><githooks>,How can I checkout a Git repot *to* a remote folder?,"<p>Given a bare repository, I can use <code>git --work-tree=/path/to/folder --git-dir=/path/to/bare.git checkout -f</code> in the <code>post-receive</code> hook to checkout the head to <code>folder</code> without having the .git folder inside. How can I do achieve this when the <code>folder</code> sits in on a remote machine?</p>

<p>I am aware of <code>git clone --depth=1</code> but I cannot use this because the remote folder may already exist. <code>rsync [--delete]</code> is not an option neither because I want files that are local to each folder but not in the repo (e.g. all folders contain a different confi.local.ini).</p>
",0,2923406,,
65920453,12046060,1/27/2021 13:45,0,1437,<linux><git><fatal-error><githooks><git-push>,git pre-push no such file or directory,"<p>Just created a new pre-push file with the name &quot;pre-push&quot; under the path &quot;myProjDir/.git/hooks&quot;</p>
<p>While trying to <code>git push --dry-run</code> i'm getting the next error:</p>
<pre><code>fatal: cannot run .git/hooks/pre-push: No such file or directory
</code></pre>
<p>What can I do to solve it?</p>
",3,12046060,,
47649249,8708511,12/5/2017 8:38,3,1606,<git><bash><githooks>,Git hook to check File name,"<p>I'm working on a new pre-receive git hook that checks commited files names, if they don't respect the naming convention the push is stopped and the developers need to change the file name. I tried changing the file name this way :</p>

<pre><code>git mv oldName NewName
git commit --amend
git push -u origin master
</code></pre>

<p>here's the hook :</p>

<pre><code>zero_commit=""0000000000000000000000000000000000000000""
RED='\033[0;31m'

while read oldrev newrev refname
do

    if [ ""$oldrev"" = $zero_commit ]
    then
        list_commits=`git rev-list $newrev --not \ $(git for-each-ref refs/heads/ --format='%(refname)')`
    else
        list_commits=`git rev-list $oldrev..$newrev`
    fi

    for commit in $list_commits
    do


            list_files=`git diff-tree --no-commit-id --name-only -r $commit`
            branches=$(git branch | sed -n -e 's/^\* \(.*\)/\1/p')
            for full_file in $list_files
                do

                file=""${full_file##*/}"" 
                extension=""${file##*.}""
                file=""${file%.*}""
                error_upper=""${RED} Error: File $full_file  must be in upper case in commit : $commit ""
                error_length=""${RED} Error: File $full_file is over 40 character in commit : $commit""               
                    error_extension=""${RED} Error: $full_file doesn't respect the naming convention please provide a valid file extension (.PSK | .PBK) in commit : $commit ""
                    error_sqlext=""${RED} Error: $full_file doesn't respect the naming convention please provide a valid file extension (.sql) in commit : $commit""
                    error_FK=""${RED} Error: $full_file doesn't respect the naming convention , file sould start with NonFK_ in commit : $commit""            

                    if [[ $full_file == ""DB/""* ]]
                    then                    
                    prefix=""NonFK_""
                    if [[ $full_file == ""DB/Dev_DB_Repository/004_Constraints_NonFK/""* ]] ; then                        
                        if [[ $file == ${file#$prefix} ]]
                        then
                        echo -e ""$error_FK"" &gt;&amp;2
                                    exit 1;
                        else file=${file#$prefix}
                        fi
                    fi

                    let ""chrlen=${#file}""

                    if [ ""$chrlen"" -gt  ""40"" ] || [[ ""$file"" =~ [a-z] ]] 
                    then

                        if [ ""$chrlen"" -gt  ""40"" ]
                        then                        
                        echo -e ""$error_length"" &gt;&amp;2                     
                        fi
                        if [[ ""$file"" =~ [a-z] ]]
                        then
                        echo -e ""$error_upper"" &gt;&amp;2
                        fi
                        exit 1;
                    fi  
                        if [[ $full_file == ""DB/Dev_DB_Repository/013_Packages/""* ]]  
                        then
                            if  [ ""$extension"" == ""PSK"" ] ||  [ ""$extension"" == ""PBK""  ]
                            then
                            echo "" Validating Files ...""
                            else 
                            echo -e ""$error_extension"" &gt;&amp;2
                                exit 1;
                            fi
                        elif [ ""$extension"" != ""sql"" ] 
                        then 
                                echo -e ""$error_sqlext"" &gt;&amp;2
                                exit 1;

                        fi
                    fi                      
                done        
        commit_msg=$(git log --format=%B -n 1 $commit)
        issue_key=$(curl -u name:mdp -X GET -H ""Content-Type: application/json"" http://127.0.0.1:8080/rest/api/2/issue/$commit_msg | grep -w $commit_msg)            
        issue_status=$(curl -u name:mdp -X GET -H ""Content-Type: application/json"" http://127.0.0.1:8080/rest/api/2/issue/$commit_msg?fields=status | grep -E ""Open|Reopened"")
        error_msg=""${RED} ERROR: No issue with key '$commit_msg' has been found, please provide a commit message with a valid jira issue.""
        status_error=""${RED}ERROR: the issue $commit_msg isn't opened""
        if [ -z ""$issue_key"" ]
        then    
            echo -e ""$error_msg"" &gt;&amp;2
            exit 1;
        elif [ -z ""$issue_status"" ]
        then
            echo -e ""$status_error"" &gt;&amp;2
            exit 1;
        fi

    done

done
</code></pre>

<p>This works perfectly for a new file ( after rename git considers it as a new file) but if there's already a file in repository that i try to change the hook stops it because git considers the new name and the old name. Is there a way to change file name in Repository without having it stopped by pre-receive hook ?</p>
",2,8708511,,
47657510,2269535,12/5/2017 15:46,-1,741,<git><perl><hook><githooks>,"Git ""push --delete"" blocked remotely by update hook","

<p>I need a way to delete Git repository branches more conveniently cause an `update hook' is blocking them:</p>

<h3>Command</h3>

<pre class=""lang-none prettyprint-override""><code>git push -v -f --no-verify --delete origin test_branch
</code></pre>

<h3>Output</h3>

<pre class=""lang-none prettyprint-override""><code>remote: fatal: Not a valid commit name 0000000000000000000000000000000000000000
remote: error: hook declined to update refs/heads/test_branch
</code></pre>

<p>I'm currently disabling the update hook temporarily, performing the delete, and then restoring the hook, so I'm looking for suggestions for something better, even perhaps altering the Perl Git hook.</p>

<p>I don't know anything about Perl or Git hooks, so I have these questions</p>

<ol>
<li><p>I can't give a message to the <code>push</code> action. What is the best way to achieve something like this?</p></li>
<li><p>Is there any way to get the <code>push --delete</code> event from the hook?</p>

<p>Something like </p>

<pre class=""lang-none prettyprint-override""><code>if ${push --delete} then skip hook checks
</code></pre></li>
<li><p>Is there any way to create a custom parameter to the <code>push</code> operation in order to skip the hook? Something like</p>

<pre class=""lang-none prettyprint-override""><code>if command line contains --imgod then skip hook checks
</code></pre></li>
</ol>

<p>I'm totally groping in the dark.</p>

<p>This is the <code>update</code> hook definition from the Git documentation</p>

<blockquote>
  <p><strong>UPDATE HOOK</strong> 
  This hook is invoked by git-receive-pack on the remote repository, which happens when a git push is done on a local
  repository. Just before updating the ref on the remote repository, the
  update hook is invoked. Its exit status determines the success or
  failure of the ref update.</p>
  
  <p>The hook executes once for each ref to be updated, and takes three
  parameters:</p>
  
  <ul>
  <li><p>the name of the ref being updated,</p></li>
  <li><p>the old object name stored in the ref,</p></li>
  <li><p>and the new object name to be stored in the ref</p></li>
  </ul>
  
  <p>A zero exit from the update hook allows the ref to be updated. Exiting
  with a non-zero status prevents git-receive-pack from updating that
  ref.</p>
  
  <p>This hook can be used to prevent forced update on certain refs by
  making sure that the object name is a commit object that is a
  descendant of the commit object named by the old object name. That is,
  to enforce a ""fast-forward only"" policy.</p>
  
  <p>It could also be used to log the old..new status. However, it does not
  know the entire set of branches, so it would end up firing one e-mail
  per ref when used naively, though. The post-receive hook is more
  suited to that.</p>
  
  <p>In an environment that restricts the users' access only to git
  commands over the wire, this hook can be used to implement access
  control without relying on filesystem ownership and group membership.
  See git-shell[1] for how you might use the login shell to restrict the
  user’s access to only git commands.</p>
  
  <p>Both standard output and standard error output are forwarded to git
  send-pack on the other end, so you can simply echo messages for the
  user.</p>
  
  <p>The default update hook, when enabled—​and with hooks.allowunannotated
  config option unset or set to false—​prevents unannotated tags to be
  pushed.</p>
</blockquote>

<p><strong>ANSWER:</strong></p>

<p>i found a way to catch the branch deletion event into the update hook and to skip the logic of the hook in all the other cases:</p>

<pre class=""lang-none prettyprint-override""><code>zero=""0000000000000000000000000000000000000000""
if [ ""$refname"" == ""refs/heads/*""] &amp;&amp; [ ""$newrev"" == ""$zero"" ]; 
then
      exit 0
else
      perform_your_checks()
fi
</code></pre>

<p>more info can be found in the update.sample GIT template.</p>
",8,2269535,0,0
29476411,288135,4/6/2015 17:38,7,535,<git><github><githooks><sourceforge>,How can I automatically synchronize a Github repository to a SourceForge repository,"<p>I have a git repository at SourceForge and now I need to move the repository from SourceForge to Github. I did it using Github import option given in following link.</p>

<p><a href=""https://import.github.com/new"" rel=""nofollow noreferrer"">https://import.github.com/new</a></p>

<p><img src=""https://i.stack.imgur.com/s7hUJ.png"" alt=""enter image description here""></p>

<p>Going forward I'm going to use the Github repository as the main repository where changes will push but I don't want to discontinue my SourceForge repository. Even though I will not push to SourceForge repository I want to setup an automated mechanism to synchronize changes for each push from Github to SourceForge. I found a Git option which can achieve this called “post-update” hooks and it works without any issue for repositories hosted in my internal servers.</p>

<p><a href=""http://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks"" rel=""nofollow noreferrer"">http://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks</a></p>

<p>But Github seems not supporting for post-update hooks for security reasons and instead of that it supports for “Webhooks”</p>

<p><a href=""https://stackoverflow.com/questions/19041220/how-to-run-post-receive-hook-on-github"">How to run post-receive hook on GitHub</a></p>

<p>But if I use Webhooks, I may have to setup an intermediate server which listen for these Webhook notifications and push the changes to SourceForge.</p>

<p><strong>Question:</strong></p>

<p><strong>Is there any other setup I can follow to achieve directly synchronize a Github repository to a SourceForge repository without maintaining an intermediate repository as I explained with Webhooks?</strong></p>

<p><strong>Note:</strong> Setting up Github repo and the SourceForge repo both as remotes in the developers local repository won't work in my case because there will be dozens of developers involve in contributing to the project and we don't have control over it.</p>
",3,288135,,
29479452,1335527,4/6/2015 20:50,7,1345,<amazon-elastic-beanstalk><gitlab><githooks><git-push>,Hook or something in Gitlab to do a git aws.push to AWS Elastic Beanstalk,"<p>We are using Gitlab.com as our central GIT repo. In the same way, to deploy the app to AWS Elastic Beanstalk it is pushed using <em>git aws.push</em>, it in the background do a normal <em>git push</em> to Amazon. I want a way to push to gitlab  and <strong>Gitlab</strong> do the push to Elastic Beanstalk. I know about git alias, using it I'm able to execute git push and git aws.push using one command, but, what I want is push only to gitlab and from gitlab to AWS.</p>

<p>I'm thinking in <a href=""https://gitlab.com/help/web_hooks/web_hooks"" rel=""noreferrer"">Gitlab Web Hooks</a>, maybe some already translate it to PHP or some server language to implement the Web Hook? or any other solution to deploy from Gitlab to AWS Elastic Beanstalk.</p>

<p>There is the code in Power Shell used by git aws.push to do a git push to Elastic Beanstalk:</p>

<pre><code>$awsSource = @""
using System;
using System.Globalization;
using System.Text;
using System.Security.Cryptography;

namespace Amazon.DevTools
{
    public class AWSUser
    {
        public string AccessKey
        {
            get;
            set;
        }

        public string SecretKey
        {
            get;
            set;
        }

        protected internal void Validate()
        {
            if (string.IsNullOrEmpty(this.AccessKey))
            {
                throw new InvalidOperationException(""[AccessKey]"");
            }
            if (string.IsNullOrEmpty(this.SecretKey))
            {
                throw new InvalidOperationException(""[SecretKey]"");
            }
        }
    }
}

namespace Amazon.DevTools
{
    public abstract class AWSDevToolsRequest
    {
        protected const string METHOD = ""GIT"";
        protected const string SERVICE = ""devtools"";

        DateTime dateTime;

        public AWSDevToolsRequest()
            : this(DateTime.UtcNow)
        {
        }

        public AWSDevToolsRequest(DateTime dateTime)
        {
            if (dateTime == null)
            {
                throw new ArgumentNullException(""dateTime"");
            }
            this.dateTime = dateTime.ToUniversalTime();
        }

        public string DateStamp
        {
            get
            {
                return this.dateTime.ToString(""yyyyMMdd"", CultureInfo.InvariantCulture);
            }
        }

        public string DateTimeStamp
        {
            get
            {
                return this.dateTime.ToString(""yyyyMMddTHHmmss"", CultureInfo.InvariantCulture);
            }
        }

        public abstract string DerivePath();

        protected internal abstract string DeriveRequest();

        public string Host
        {
            get;
            set;
        }

        public string Region
        {
            get;
            set;
        }

        public string Service
        {
            get
            {
                return AWSDevToolsRequest.SERVICE;
            }
        }

        protected internal virtual void Validate()
        {
            if (string.IsNullOrEmpty(this.Host))
            {
                throw new InvalidOperationException(""[Host]"");
            }
            if (string.IsNullOrEmpty(this.Region))
            {
                throw new InvalidOperationException(""[Region]"");
            }
        }
    }
}

namespace Amazon.DevTools
{
    public class AWSElasticBeanstalkRequest : AWSDevToolsRequest
    {
        public AWSElasticBeanstalkRequest()
            : base()
        {
        }

        public AWSElasticBeanstalkRequest(DateTime dateTime)
            : base(dateTime)
        {
        }

        public string Application
        {
            get;
            set;
        }

        public override string DerivePath()
        {
            this.Validate();

            string path = null;

            if (string.IsNullOrEmpty(this.Environment))
            {
                path = string.Format(""/v1/repos/{0}/commitid/{1}""
        , this.Encode(this.Application)
        , this.Encode(this.CommitId));
            }
            else
            {
                path = string.Format(""/v1/repos/{0}/commitid/{1}/environment/{2}""
        , this.Encode(this.Application)
        , this.Encode(this.CommitId)
        , this.Encode(this.Environment));
            }
            return path;
        }

        protected internal override string DeriveRequest()
        {
            this.Validate();

            string path = this.DerivePath();
            string request = string.Format(""{0}\n{1}\n\nhost:{2}\n\nhost\n"", AWSDevToolsRequest.METHOD, path, this.Host);
            return request;
        }

        public string Environment
        {
            get;
            set;
        }

    public string CommitId
    {
       get;
       set;
    }

        protected internal override void Validate()
        {
            base.Validate();
            if (string.IsNullOrEmpty(this.Application))
            {
                throw new InvalidOperationException(""[Application]"");
            }
            if (string.IsNullOrEmpty(this.Host))
            {
                throw new InvalidOperationException(""[Host]"");
            }
        }

    protected internal string Encode(string plaintext)
    {
        StringBuilder sb = new StringBuilder();
        foreach (byte b in new UTF8Encoding().GetBytes(plaintext))
        {
        sb.Append(b.ToString(""x2"", CultureInfo.InvariantCulture));
        }
        return sb.ToString();
    }

    }
}

namespace Amazon.DevTools
{
    public class AWSDevToolsAuth
    {
        const string AWS_ALGORITHM = ""HMAC-SHA256"";
        const string HASH_ALGORITHM = ""SHA-256"";
        const string HMAC_ALGORITHM = ""HMACSHA256"";
        const string SCHEME = ""AWS4"";
        const string TERMINATOR = ""aws4_request"";

        AWSUser user;
        AWSDevToolsRequest request;

        public AWSDevToolsAuth(AWSUser user, AWSDevToolsRequest request)
        {
            this.user = user;
            this.request = request;
        }

        static byte[] DeriveKey(AWSUser user, AWSDevToolsRequest request)
        {
            string secret = string.Format(""{0}{1}"", AWSDevToolsAuth.SCHEME, user.SecretKey);
            byte[] kSecret = Encoding.UTF8.GetBytes(secret);
            byte[] kDate = AWSDevToolsAuth.Hash(AWSDevToolsAuth.HMAC_ALGORITHM, kSecret, Encoding.UTF8.GetBytes(request.DateStamp));
            byte[] kRegion = AWSDevToolsAuth.Hash(AWSDevToolsAuth.HMAC_ALGORITHM, kDate, Encoding.UTF8.GetBytes(request.Region));
            byte[] kService = AWSDevToolsAuth.Hash(AWSDevToolsAuth.HMAC_ALGORITHM, kRegion, Encoding.UTF8.GetBytes(request.Service));
            byte[] key = AWSDevToolsAuth.Hash(AWSDevToolsAuth.HMAC_ALGORITHM, kService, Encoding.UTF8.GetBytes(AWSDevToolsAuth.TERMINATOR));
            return key;
        }

        public string DerivePassword()
        {
            this.user.Validate();
            this.request.Validate();

            string signature = AWSDevToolsAuth.SignRequest(this.user, this.request);
            string password = string.Format(""{0}Z{1}"", this.request.DateTimeStamp, signature);
            return password;
        }

        public Uri DeriveRemote()
        {
            this.request.Validate();

            string path = this.request.DerivePath();
            string password = this.DerivePassword();
            string username = this.DeriveUserName();
            UriBuilder remote = new UriBuilder()
            {
                Host = this.request.Host,
                Path = path,
                Password = password,
                Scheme = ""https"",
                UserName = username,
            };
            return remote.Uri;
        }

        public string DeriveUserName()
        {
            this.user.Validate();

            return this.user.AccessKey;
        }

        static byte[] Hash(string algorithm, byte[] message)
        {
            HashAlgorithm hash = HashAlgorithm.Create(algorithm);
            byte[] digest = hash.ComputeHash(message);
            return digest;
        }

        static byte[] Hash(string algorithm, byte[] key, byte[] message)
        {
            KeyedHashAlgorithm hash = KeyedHashAlgorithm.Create(algorithm);
            hash.Key = key;
            byte[] digest = hash.ComputeHash(message);
            return digest;
        }

        static string SignRequest(AWSUser user, AWSDevToolsRequest request)
        {
            string scope = string.Format(""{0}/{1}/{2}/{3}"", request.DateStamp, request.Region, request.Service, AWSDevToolsAuth.TERMINATOR);
            StringBuilder stringToSign = new StringBuilder();
            stringToSign.AppendFormat(""{0}-{1}\n{2}\n{3}\n"", AWSDevToolsAuth.SCHEME, AWSDevToolsAuth.AWS_ALGORITHM, request.DateTimeStamp, scope);
            byte[] requestBytes = Encoding.UTF8.GetBytes(request.DeriveRequest());
            byte[] requestDigest = AWSDevToolsAuth.Hash(AWSDevToolsAuth.HASH_ALGORITHM, requestBytes);
            stringToSign.Append(AWSDevToolsAuth.ToHex(requestDigest));
            byte[] key = AWSDevToolsAuth.DeriveKey(user, request);
            byte[] digest = AWSDevToolsAuth.Hash(AWSDevToolsAuth.HMAC_ALGORITHM, key, Encoding.UTF8.GetBytes(stringToSign.ToString()));
            string signature = AWSDevToolsAuth.ToHex(digest);
            return signature;
        }

        static string ToHex(byte[] data)
        {
            StringBuilder hex = new StringBuilder();
            foreach (byte b in data)
            {
                hex.Append(b.ToString(""x2"", CultureInfo.InvariantCulture));
            }
            return hex.ToString();
        }
    }
}

""@

Add-Type -Language CSharpVersion3 -TypeDefinition $awsSource

# -*-powershell-*-

#
# Sets the AWS.push configuration values
#
# Will read values from the pipeline input if none are present the values are read from the console input instead.
#
function Edit-AWSElasticBeanstalkRemote
{
    $data=@($input)
    $used=0

    $config = Read-Config $False $True
    $awsAccessKey = Lookup-Setting $config ""global"" ""AWSAccessKeyId"" (""cred"",""git"")
    if (!$awsAccessKey -and (ShouldWrite-Credentials $config $false))
    {
        $awsAccessKeyInput = ($data[$used++] | Input-Data ""AWS Access Key"")
    }
    if ($awsAccessKeyInput)
    {
        $config = Write-Setting $config ""cred"" ""global"" ""AWSAccessKeyId"" $awsAccessKeyInput
    }

    $awsSecretKey = Lookup-Setting $config ""global"" ""AWSSecretKey"" (""cred"",""git"")
    if (!$awsSecretKey -and (ShouldWrite-Credentials $config $false))
    {
        $awsSecretKeyInput = ($data[$used++] | Input-Data ""AWS Secret Key"")
    }
    if ($awsSecretKeyInput)
    {
        $config = Write-Setting $config ""cred"" ""global"" ""AWSSecretKey"" $awsSecretKeyInput
    }

    $awsRegion = Lookup-Setting $config ""global"" ""Region"" (""eb"",""git"")
    if (-not $awsRegion)
    {
        $awsRegion = ""us-east-1""
        $config = Write-Setting $config ""eb"" ""global"" ""Region"" $awsRegion
    }
    $awsRegionInput = ($data[$used++] | Input-Data ""AWS Region [default to $($awsRegion)]"")
    if ($awsRegionInput)
    {
    $awsRegion = $awsRegionInput
        $config = Write-Setting $config ""eb"" ""global"" ""Region"" $awsRegionInput
    }

    $awsHost = Get-Endpoint $awsRegion
    if ($awsHost)
    {
        $config = Write-Setting $config ""eb"" ""global"" ""DevToolsEndpoint"" $awsHost
    }
    else
    {
        $awsHostInput = ($data[$used++] | Input-Data ""AWS Host [default to git.elasticbeanstalk.us-east-1.amazonaws.com]"")

        if ($awsHostInput)
        {
            $config = Write-Setting $config ""eb"" ""global"" ""DevToolsEndpoint"" $awsHostInput
        }
        else
        {
            $config = Write-Setting $config ""eb"" ""global"" ""DevToolsEndpoint"" ""git.elasticbeanstalk.us-east-1.amazonaws.com""
        }
    }

    $awsApplication = Lookup-Setting $config ""global"" ""ApplicationName"" (""eb"",""git"")
    if ($awsApplication)
    {
        $awsApplicationInput = ($data[$used++] | Input-Data ""AWS Elastic Beanstalk Application [default to $($awsApplication)]"")
    }
    else
    {
        $awsApplicationInput = ($data[$used++] | Input-Data ""AWS Elastic Beanstalk Application"")
    }
    if ($awsApplicationInput)
    {
        $config = Write-Setting $config ""eb"" ""global"" ""ApplicationName"" $awsApplicationInput
    }

    $awsEnvironment = Lookup-Setting $config ""global"" ""EnvironmentName"" (""eb"",""git"")
    if ($awsEnvironment)
    {
        $awsEnvironmentInput = ($data[$used++] | Input-Data ""AWS Elastic Beanstalk Environment [default to $($awsEnvironment)]"")
    }
    else
    {
        $awsEnvironmentInput = ($data[$used++] | Input-Data ""AWS Elastic Beanstalk Environment"")
    }
    if ($awsEnvironmentInput)
    {
        $config = Write-Setting $config ""eb"" ""global"" ""EnvironmentName"" $awsEnvironmentInput
    }

    Write-Config $config
}

#
# Looks up the endpoint for a region
#
# @params $region
# @return The endpoint
#
function Get-Endpoint
{
    Param($region)
    switch ($region)
    {
        ""us-east-1"" { $endpoint = ""git.elasticbeanstalk.us-east-1.amazonaws.com"" }
        ""ap-northeast-1"" { $endpoint = ""git.elasticbeanstalk.ap-northeast-1.amazonaws.com"" }
        ""ap-southeast-1"" { $endpoint = ""git.elasticbeanstalk.ap-southeast-1.amazonaws.com"" }
        ""ap-southeast-2"" { $endpoint = ""git.elasticbeanstalk.ap-southeast-2.amazonaws.com"" }
        ""eu-west-1"" { $endpoint = ""git.elasticbeanstalk.eu-west-1.amazonaws.com"" }
        ""sa-east-1"" { $endpoint = ""git.elasticbeanstalk.sa-east-1.amazonaws.com"" }
        ""us-west-1"" { $endpoint = ""git.elasticbeanstalk.us-west-1.amazonaws.com"" }
        ""us-west-2"" { $endpoint = ""git.elasticbeanstalk.us-west-2.amazonaws.com"" }
    }
    $endpoint
}
#
# Gets the remote URL used for AWS.push
#
# @param $e environment that is deployed too. 
# @param $c commit to deploy
# @return The URL
#
function Get-AWSElasticBeanstalkRemote
{
    Param([string] $e,
          [string] $c,
          [bool] $toPush = $FALSE )
    trap [System.Management.Automation.MethodInvocationException]
    {
        if ($_.Exception -and $_.Exception.InnerException)
        {
            $awsOption = $_.Exception.InnerException.Message
            switch ($awsOption)
            {
                ""[AccessKey]"" { $awsOption = ""aws.accesskey"" }
                ""[Application]"" { $awsOption = ""aws.elasticbeanstalk.application"" }
                ""[Host]"" { $awsOption = ""aws.elasticbeanstalk.host"" }
                ""[Region]"" { $awsOption = ""aws.region"" }
                ""[SecretKey]"" { $awsOption = ""aws.secretkey"" }
            }
            Write-Host ""Missing configuration setting for: $($awsOption)""
        }
        else
        {
            Write-Host ""An unknown error occurred while computing your temporary password.""
        }
        Write-Host ""`nTry running 'git aws.config' to update your repository configuration.""
        Exit
    }

    $config = Read-Config
    $awsAccessKey = Lookup-Setting $config ""global"" ""AWSAccessKeyId"" (""cred"",""git"")
    $awsSecretKey = Lookup-Setting $config ""global"" ""AWSSecretKey"" (""cred"",""git"")
    $awsRegion = Lookup-Setting $config ""global"" ""Region"" (""eb"",""git"")
    $awsHost = Lookup-Setting $config ""global"" ""DevToolsEndpoint"" (""eb"",""git"")
    $awsApplication = Lookup-Setting $config ""global"" ""ApplicationName"" (""eb"",""git"")

    if ($e)
    {  
      $awsEnvironment = $e
    }
    else
    {
      $branchName = &amp;git rev-parse --abbrev-ref HEAD
      $defaultEnv = Lookup-Setting $config ""branches"" $branchName (""eb"")
      if ($defaultEnv)
      {
        $awsEnvironment = $defaultEnv 
      }
      else
      {
        $awsEnvironment = Lookup-Setting $config ""global"" ""EnvironmentName"" (""eb"",""git"")  
      }
    }

    $gitCommitId = $c

    $awsUser = New-Object -TypeName Amazon.DevTools.AWSUser
    $awsUser.AccessKey = $awsAccessKey
    $awsUser.SecretKey = $awsSecretKey

    $awsRequest = New-Object -TypeName Amazon.DevTools.AWSElasticBeanstalkRequest
    $awsRequest.Region = $awsRegion
    $awsRequest.Host = $awsHost
    $awsRequest.Application = $awsApplication
    $awsRequest.Environment = $awsEnvironment
    $awsRequest.CommitId = $gitCommitId

    $awsAuth = New-Object -TypeName Amazon.DevTools.AWSDevToolsAuth $awsUser,$awsRequest
    $awsRemote = $awsAuth.DeriveRemote()
    if($toPush) {
       Write-Host ""Pushing to environment: $awsEnvironment""  
    }  
    return $awsRemote.ToString()
}

#
# Performs the aws.push
#
# @param $e environment that is deployed too. 
# @param $c commit to deploy
#
function Invoke-AWSElasticBeanstalkPush
{
    Param([string] $e, [string] $c)
    $remote = Get-AWSElasticBeanstalkRemote $e $c $TRUE
    $src = $c
    $dst = ""refs/heads/master""
    $commit = $src + "":"" + $dst
    &amp;git push -f $remote $commit
}

#
# Adds the git aliases for aws.push and aws.config to the git repository.
#
function Initialize-AWSElasticBeanstalkRepository
{
    $command = 'Import-Module AWSDevTools; $e, $c = Get-Options $args; Get-AWSElasticBeanstalkRemote $e $c'
    &amp;git config alias.aws.elasticbeanstalk.remote ""!powershell -noprofile -executionpolicy bypass -command '&amp; { $command }'""

    $command = 'Import-Module AWSDevTools; $e, $c = Get-Options $args; Invoke-AWSElasticBeanstalkPush $e $c'
    &amp;git config alias.aws.push ""!powershell -noprofile -executionpolicy bypass -command '&amp; { $command }'""

    $command = 'Import-Module AWSDevTools; Edit-AWSElasticBeanstalkRemote'
    &amp;git config alias.aws.config ""!powershell -noprofile -executionpolicy bypass -command '&amp; { $command }'""
}

#
# Read in data
#
# Will used pipeline data if present, otherwise reads from the console
#
# @param $message The text to display as a prompt
# @return The data collected
#
function Input-Data
{
    Param([string] $message)
    Write-Host -NoNewline ""$($message): ""
    if (($input.MoveNext()) -and ($input.Current))
    {
        Write-Host $input.Current
        $input.Current
    }
    else
    {
        [Console]::In.ReadLine() 
    }
}

#
# Gets the values for the aws.push and aws.config command options
#
# @param $arr The command line options passed to the command
# @return The options values
#
function Get-Options
{
    Param([string[]] $arr)

    $e = $null;
    $c = $null;

    $optionmappings = @{
        '--environment' = 'environment';
        '-e' = 'environment';
        '--commit' = 'commit';
        '-c' = 'commit';
        '--help' = 'help';
        '-h' = 'help'
    }

    $options = @{}

    for ($i=0; $i -lt $arr.count; $i++)
    {
        $optname = $arr[$i]
        $mappedoption = $optionmappings[$optname]
        if (!$mappedoption) {
            Write-Host(""Unknown Option: {0}"" -f $arr[$i])
            Write-Help
            Exit
        }
        if ($mappedoption -eq ""help"") {
            Write-Help
            Exit
        }

        $value = $arr[++$i]
        if (($value -eq $null) -or $optionmappings[$value]) {
            Write-Host(""You must provide a value for {0}"" -f $optname)
            Write-Help
            Exit
        }
        if ($options[$mappedoption]) {
            Write-Host(""--{0} specified twice"" -f $mappedoption)
            Exit
        }
        $options[$mappedoption] = $value
    }

    $e = $options[""environment""]
    $c = $options[""commit""]

    if ($c -eq $null) {
        $c = ""HEAD""
    }
    $c = Parse-CommitOption $c
    $result = $e, $c
    $result
}
</code></pre>
",0,1335527,0,0
29489037,3265472,4/7/2015 10:10,0,527,<git><deployment><githooks><git-push>,Git post-receive hook for push-to-deploy .. I want to checkout last pushed branch,"<p>I am able to implement push-to-deploy with Git by creating a bare repo on the server, and pushing to that from my dev. Below is my post-receive which handles updating the live site:</p>

<pre><code>#!/bin/sh

echo
echo ""*** Checking out branch [post-receive hook]""
echo

git --work-tree=/var/www/myproject checkout -f master
</code></pre>

<p>Notice that it checkouts ""master"" branch this works great in most cases. ""master"" is the branch I push (e.g. <code>git push staging master</code> when pushing to live to the staging server). However, I sometimes like to push a branch only without merging my changes to master (e.g. <code>git push staging new-register-form</code>). Can I change my post-receive hook script to checkout ""the last pushed branch""? Is this possible?</p>
",0,3265472,,
11867427,1321587,8/8/2012 15:02,3,698,<git><tdd><githooks><git-bare>,"Git main repository update only if all tests pass, how to do?","<p>I am trying to create git hook on update in main git repository. I want to prevent pushes that break any tests. How to get in bare repository code of project that will be after update to run tests for it?</p>

<p>P.S.: It's possible, of course to use pre-commit hook instead of update, in that case hook should be on  commiters PCs, but I believe that should be a way to make verification on the server.</p>
",0,1321587,0,0
29545972,741850,4/9/2015 18:15,14,7701,<git><push><githooks>,Skip githooks on git push,"<p><strong>Intro:</strong> I recently installed some software which fires on the git <code>pre-push</code> hook. Unfortunately there is a mistake in the software, and it crashes on very large commits.</p>
<h1>Is it possible to run an <code>git push</code> without triggering the githooks?</h1>
<p>That way I don't have to uninstall the githook?</p>
",0,741850,,
11912747,609712,8/11/2012 7:06,1,983,<git><bash><deployment><githooks>,Git deployment with post-receive hook,"<p>I want to develop my websites per git, but I have some sort of chicken and egg problem. There is one server with an git --bare repository (the main repo; /var/dev.git) one clone for the doc-root (var/www) of the apache webserver and for each user one local repository. </p>

<p>Ok, this works really nice, but now I want to add a ""special"" feature. If someone adds an .less file and pushes it to the main-repo it should be ""compiled"" into a css file and added to the repository. Furthermore the www-clone should pull all new files (including the new css-styles) back into the main-repo.</p>

<p><strong>My first attempt</strong></p>

<p>First I force the www-root-repo to pull the newest changes, then I try to find all less files and fire the less compiler.</p>

<pre><code>lessc [input] [output]
</code></pre>

<p>The problem is that git seems to trigger the post-receive on a pull and a push and recalls-itself in the fashion of an infinit loop (it stops with a <code>error building trees</code>)</p>

<pre><code>#!/bin/sh

git --git-dir /var/www/.git reset --hard HEAD
git --git-dir /var/www/.git pull /var/dev.git master

echo ""###### fire LESS Compiler #####""
find /var/www -name *.less -exec sh -c 'lessc {} $(dirname {})/
    $(echo $( basename {} .less)$( echo "".css"" )) &gt;&gt; $(dirname {})
    /less_error.log 2&gt;&amp;1 ' \;

echo ""###### add new less-out files to repo #####""
git --git-dir /var/www/.git add .
git --git-dir /var/www/.git commit -am ""css style added""
git --git-dir /var/www/.git push /var/dev.git master

echo ""########### END #############""
</code></pre>

<p>To get the less error messages I pipe the stderr to the stdout (because AFAIK appending isn't possible with the stderr-pipe-redirection) and append it to an error_less-file. (second question:) How can I fore it to create the file only if an error occours? (At the moment its created on every lessc-call)</p>
",9,609712,0,0
29568414,222403,4/10/2015 18:31,1,4027,<regex><linux><git><bash><githooks>,Git hook commit-msg to ensure the commit message contains a string that conforms to a regex,"<p>I'm trying to make bash script to be used as a git commit-msg hook. Essentially I want to ensure that the commit message contains a string which matches the regex. My regex is correct, but i'm not sure how to check if the message contained in <code>.git/COMMIT_EDITMSG</code> matches the regex.</p>

<pre><code>#!/bin/sh
#
# This hook verifies that the commit message contains a reference to a tfs item

RED=$(tput setaf 1)
NORMAL=$(tput sgr0)
# Regex to validate a string contains ""#"" followed by 4 or 5 digits anywhere in the commit message
regex=""#[0-9]{4,5}($|[^0-9])""

# I NEED TO FIGURE OUT HOW TO READ THE CONTENTS OF THIS FILE AND ENSURE IT MATCHES THE REGEX
echo ""MSG = $1"" # This prints ""MSG = .git/COMMIT_EDITMSG""

# If the commit message does not match the regex
if ! [[ $1 =~ $regex ]]; then
  echo ""${RED}ERROR - Missing tfs item in commmit message.$NORMAL""
  exit 1
else
  echo ""MESSAGE IS GOOD?""
fi

exit 0
</code></pre>
",2,222403,,
66228019,2182021,2/16/2021 16:08,16,6673,<git><github><gitlab><git-commit><githooks>,How to configure git hooks for all developers,"<p>I want to apply consistent commit message rule globally for all developers to have jira issue in commit message.</p>
<p>Using enterprise github.</p>
<p>As found, it can be achieve using, <code>.git/hooks/commit-msg</code> file to updated accordingly.</p>
<p>Issue: How to apply this updated git hooks to available for all the developers.
I don't see any changes appear on <code>git status</code>.
Not sure if it has to configure different way so, <code>commit-msg constrain</code> will apply for all developers instead of locally one.
Can you please guide on this.</p>
",2,2182021,,
47698015,9062837,12/7/2017 15:07,1,755,<gitlab><githooks>,Gitlab does not automatically run post-receive hook,"<p>Gitlab is hosted locally on my server. When I push a commit, the post-receive hook doesn't work. I made the owner of the hook <code>git:git</code> and made it executable. When I execute the file manually, it works.</p>
",2,9062837,,
11974172,1597771,8/15/2012 17:33,0,174,<git><github><branch><githooks>,Restricting user's push commands privileges,"<p>How can I not allow the users to make pushes that are going to create a new branch in remote repository?<br>
And is there anyway not to let the user push to a certain remote branch in github ,e.g restrict him/her from pushing to the origin/master branch? ( Considering the account is not an organization account. I was used to do this using gitolite, but since it's github , i don't seem to know how's that done )</p>
",0,1597771,,
12042507,1612127,8/20/2012 17:50,4,1769,<git><githooks>,git pre-receive hook - getting the newest code,"<p>I am trying to write a <code>pre-receive hook</code> for git that will pull the latest version of the code being pushed and run unit tests against it.  My code is below, but when it gets to ""git checkout $newrev"", I get:</p>

<blockquote>
  <p>remote: fatal: reference is not a tree: 188de39ca68e238bcd7ee9842a79397f39a5849e</p>
</blockquote>

<p>What do I need to do to get a checkout of the code being pushed before the receive has happened?</p>

<pre><code>#!/bin/bash
while read oldrev newrev refname
do
  echo ""Preparing to run unit tests for $newrev""
  TEST_DIR=/opt/git/sommersault-push-tests/sommersault

  # check out this version of the code
  unset GIT_DIR
  echo $refname
  cd $TEST_DIR
  git checkout $newrev

  ...do more stuff...
done
</code></pre>
",4,1612127,0,0
12093748,961353,8/23/2012 14:17,22,24110,<python><regex><git><githooks>,How do I check for valid Git branch names?,"<p>I'm developing a <a href=""https://github.com/alexchamberlain/githooks/blob/master/post-receive.d/jekyll-build""><code>git</code> <code>post-receive</code> hook in Python</a>. Data is supplied on <code>stdin</code> with lines similar to</p>

<pre><code>ef4d4037f8568e386629457d4d960915a85da2ae 61a4033ccf9159ae69f951f709d9c987d3c9f580 refs/heads/master
</code></pre>

<p>The first hash is the old-ref, the second the new-ref and the third column is the reference being updated.</p>

<p>I want to split this into 3 variables, whilst also validating input. <strong>How do I validate the branch name?</strong></p>

<p>I am currently using the following regular expression</p>

<pre><code>^([0-9a-f]{40}) ([0-9a-f]{40}) refs/heads/([0-9a-zA-Z]+)$
</code></pre>

<p>This doesn't accept all possible branch names, as set out by <a href=""http://www.kernel.org/pub/software/scm/git/docs/git-check-ref-format.html"">man git-check-ref-format</a>. For example, it excludes a branch by the name of <code>build-master</code>, which is valid.</p>

<h3>Bonus marks</h3>

<p>I actually want to exclude any branch that starts with ""build-"". Can this be done in the same regex?</p>

<h3>Tests</h3>

<p>Given the great answers below, I wrote some tests, which can be found at
<a href=""https://github.com/alexchamberlain/githooks/blob/master/miscellaneous/git-branch-re-test.py"">https://github.com/alexchamberlain/githooks/blob/master/miscellaneous/git-branch-re-test.py</a>.</p>

<p><strong>Status: All the regexes below are failing to compile. This could indicate there's a problem with my script or incompatible syntaxes.</strong></p>
",3,961353,0,0
12573883,608952,9/24/2012 22:36,2,2484,<git><bash><synchronization><mysql><githooks>,Howto sync database with git and git hooks and howto debug if it doesn't work,"<p>On OS: Ubuntu 12.04  </p>

<p>I've got a drupal deployment (live website) and a staging environment (test website) on my server. Each time I pull changes from my staging website I want to synchronize the database automatically, as instructed here: <a href=""http://ben.kulbertis.org/2011/10/synchronizing-a-mysql-database-with-git-and-git-hooks/"" rel=""nofollow"">http://ben.kulbertis.org/2011/10/synchronizing-a-mysql-database-with-git-and-git-hooks/</a></p>

<p>The setup I use is exactly the same (with settings and paths according to my setup of course). </p>

<p><strong>Quote from the website:</strong></p>

<blockquote>
  <p>Let’s start with pre-commit. The pre-commit hook will run a script directly before a commit is executed. To edit your pre-commit hook:</p>

<pre><code>[your editor] /path/to/your/repo/.git/hooks/pre-commit
</code></pre>
  
  <p>Now, lets write the pre-commit script. We are going to tell the system to dump our MySQL database to our git repository and add it to be committed.</p>

<pre><code>#!/bin/sh
mysqldump -u [mysql user] -p[mysql password] --skip-extended-insert [database] &gt; /path/to&gt; /your/repo/[database].sql
cd /path/to/your/repo
git add [database].sql
</code></pre>
  
  <p>Now, lets write the post-merge script. We are going to tell the system to restore the MySQL dump to the local database for the latest changes. Edit the post-merge hook with:</p>

<pre><code>[your editor] /path/to/your/repo/.git/hooks/post-merge
</code></pre>
  
  <p>And write:</p>

<pre><code>#!/bin/sh
mysql -u [mysql user] -p[mysql password] [database] &lt; /path/to/your/repo/[database].sql
</code></pre>
</blockquote>

<p>But when I do a commit and then a pull, nothing seems to happen. The post-merge and pre-commit hooks reside in my hooks dir of the deployment repository from which I conduct the commit and pull. Both have execution rights: <code>chmod +x /path/to/hook</code></p>

<p>I have tested the commands I have placed in the hooks. They should work correctly.</p>

<p>Any way to debug what's wrong?</p>
",1,608952,,
66353804,8018988,2/24/2021 15:19,1,107,<git><githooks>,How to detect a squash operation in git post-rewrite hook?,"<p>I want to perform some operations after a rebase from master, but not upon an interactive rebase (squashes, rewords, etc)</p>
<p>How do I detect what kind of rebase is invoking the <code>post-rewrite</code> hook (I already check if it is a &quot;rebase&quot; and not &quot;amend&quot;)?</p>
<p>I can get a list of commits in STDIN, but then what?</p>
",2,8018988,0,0
30235053,4239613,5/14/2015 10:30,0,1110,<git><jenkins><githooks><git-push>,Redirecting a git push,"<p>I am currently playing with hooks to get our repositories to tell Jenkins to build, etc. I have been looking for information on how I would be able to redirect a push to another repo, or even if this is possible? So for example developer pushes to Dev repo, pre-push hook or maybe pre-receive hook redirects it to Testing repo. So basically any changes wouldn't go to the Dev repo until they have passed tests keeping the Dev build from being broken</p>

<p>Any information or documentation would be greatly appreciated.</p>
",0,4239613,,
59374832,6094030,12/17/2019 13:02,0,28,<git><githooks><tmux>,Running a Git hook for emptying dir with each commit,"<p>I use <a href=""https://github.com/tmux-plugins/tmux-resurrect"" rel=""nofollow noreferrer"">tmux Resurrect</a> to keep my sessions. It works by each time that I save my sessions, they are saved into a <code>txt</code> file with a date stamp, and a symlink called <code>resurrect-backup/last</code> is pointed to the newly created file.</p>

<p>I've set tmux Resurrect to save the files in my dot files directory, that is a Git repo. The backup files looks like this. </p>

<pre class=""lang-sh prettyprint-override""><code>Untracked files:
  (use ""git add &lt;file&gt;..."" to include in what will be committed)
        resurrect-backup/tmux_resurrect_20191211T131212.txt
        resurrect-backup/tmux_resurrect_20191212T091834.txt
        resurrect-backup/tmux_resurrect_20191212T091958.txt
        resurrect-backup/tmux_resurrect_20191216T143039.txt
        resurrect-backup/tmux_resurrect_20191217T134720.txt
</code></pre>

<p>I'd like the following to happen: When checking in my dot files (or at any other appropriate time), I'd like to automatically delete all <code>tmux_resurrect_{date}.txt</code> files, except the latest one (that <code>resurrect-backup/last</code> is pointing at). </p>

<p>The effect would be that for each commit including changes in the tmux session, one <code>txt</code> file gets deleted, one gets inserted, and the symlink is pointed to the newly inserted <code>txt</code> file.</p>
",2,6094030,0,0
18872197,189134,9/18/2013 12:24,3,668,<python><django><git><virtualenv><githooks>,Using git post-receive hook to deploy python application in virtualenv,"<p>My goal is to be able to deploy a Django application to one of two environments (DEV or PROD) based on the Git branch that was committed and pushed to a repository. This repository is hosted on the same server as the Django applications are being run on.</p>

<p>Right now, I have two <code>virtualenv</code>s set up. One for each environment. They are identical. I envision them only changing if the <code>requirements.txt</code> is modified in my repository. </p>

<p>I've seen tutorials around the internet that offer deployments via <code>git</code> by hosting the repository directly in the location where the application will be deployed. This doesn't work for my architecture. I'm using RhodeCode to host/manage the repository. I'd like to be able to use a post-receive (or other if it's more appropriate) hook to trigger the update to the appropriate environment.</p>

<p>Something similar to this <a href=""https://stackoverflow.com/questions/7351551/writing-a-git-post-receive-hook-to-deal-with-a-specific-branch/13057643#13057643"">answer</a> will allow me to narrow down which environment I want to focus on. </p>

<p>When I put <code>source activate</code> command in an external script (ie. my hook), the script stops at that command. The <code>virtualenv</code> is started appropriately, but any further actions in the script (ie. <code>pip install -r requirements.txt</code> or <code>./manage.py migrate</code>) aren't executed.</p>

<p>My question, is how can I have that hook run the associated <code>virtualenv</code>? Or, if it is already running, update it appropriately with the new <code>requirements.txt</code>, <code>South</code> migrations, and application code? </p>

<p>Is this work flow overly complicated? Theoretically, it should be as simple as <code>git push</code> to the appropriate branch. </p>
",1,189134,,
18873047,446709,9/18/2013 13:04,1,549,<git><githooks><sh>,How do I create a blacklist or whilelist of branches for git hooks?,"<p>I am trying to add some functionality to git's post-recieve-email hook to either ignore specific branches or to only email on specific branches (obviously these options would be mutually exclusive).  I would like to not hard-code a list of branches into the hook itself, but instead make use of the [hooks] section of a repository's config file.  </p>

<p>Where I'm struggling is in keeping the shell bourne shell compatible while still being able to see if a branch name is part of the whitelist or blacklist.</p>

<p>I think that I could do something like this:</p>

<pre><code>whitelist=$(git hooks.branch_whitelist)
while read oldrev newrev refname
do
  branch_name=${refname#refs/heads/}
  for wl_branch in $whitelist
  do
    if [ $branch_name = $wl_branch ] 
      ... send email ...
      break # prevents multiple emails on malformed whitelist string
  done
done
</code></pre>

<p>For some reason, the above seems just wrong.  Does anyone have a better way of checking if a string is a member of a list (not a supported data structure in bourne if I understand correctly)?</p>

<p>Edit: It would also be nice to be able to do partial string matching (e.g. blacklist all that -dev branches), but the only answer I find over and over is the double bracket method from bash.</p>
",0,446709,,
48486942,3652569,1/28/2018 13:37,0,556,<git><githooks><tortoisegit>,How to count non-ASCII characters with Git commit-msg hook on Windows?,"<p>I work with Git on Windows via TortoiseGit and currently I'm trying to use <a href=""https://gist.github.com/agnivade/67b42d664ece2d4210c7"" rel=""nofollow noreferrer"">this commit-msg hook</a> to check length of commit messages' lines.</p>

<p>All is fine when i write messages exclusively with ASCII characters. But when I write a message in Russian, a character counter produces a result two times greater than actual length. It looks like the counter uses a default Windows encoding or something like that while a message is being saved as UTF-8 file.</p>

<p>Some highlights:</p>

<ul>
<li><code>.git/COMMIT_EDITMSG</code> has UTF-8 encoding;</li>
<li><code>echo $line</code> in my hook displays non-ASCII characters correctly;</li>
<li><code>${#line}</code> returns a value equal to <code>actual_length * 2</code>;</li>
<li>I tried different ways of iterating over characters in a line and each time iterator treated each byte as a separate character.</li>
</ul>

<p><em>Update 1</em>: I want to achieve my goal without adding environmental dependencies (that is, without installation of additional interpreters like Python).</p>
",0,3652569,,
48524221,1025311,1/30/2018 14:49,0,321,<git><githooks><git-flow>,git flow (avh edition) hooks are not executed,"<p>I had the problem, that hooks that reside in my global hook directory <code>~/git-hooks</code> are not executed.</p>

<p>Namely the git-flow dependent hook <code>post-flow-release-start</code> just wasn't called, while the hook <code>pre-commit</code> was called without any problems.</p>
",0,1025311,,
35383560,4880675,2/13/2016 18:16,2,260,<git><githooks>,Best way to process only new commits in an update hook,"<p>I am writing a server side update hook, and want to process only the commits of a push that were not in the repository before the push, i.e. the commits that are being introduced by the push. At first I was going to do <code>git rev-list &lt;oldrefvalue&gt;..&lt;newrefvalue&gt;</code>, but that can include existing commits if one of the new commits is a merge of an existing branch. I've come up with a couple ways of doing it, none of which thrill me:</p>

<ol>
<li>For each commit in <code>git rev-list &lt;oldrefvalue&gt;..&lt;newrefvalue&gt;</code>, do <code>git rev-list --all | grep &lt;commit&gt;</code> to see if it is an existing commit (obviously I would cache the results of <code>git rev-list --all</code>).</li>
<li>Do <code>git for-each-ref --format=""^%(objectname)"" refs/heads | xargs git rev-list &lt;newrefvalue&gt;</code> to get all commits reachable by the pushed ref but not reachable through any of the existing branches</li>
</ol>

<p>Are either of these approaches preferable to the other, or is there a better way to go about this?</p>
",0,4880675,,
40692848,484558,11/19/2016 12:24,0,318,<git><bash><githooks>,"Use server side git hook to prevent CSS (compiled from SASS) from being pushed, but allow other CSS files to be pushed","<p>We are transitioning a project to replace some CSS files with SASS.</p>

<p>During development when working with <code>.scss</code> files, <code>.css</code> files are generated automatically, but we don't want these committed in the repository.</p>

<p>Say we have a module named <code>loginModule</code> which resides in the folder <code>login</code>. Inside <code>login</code> we currently have these two CSS files: <code>login.css</code> and <code>ux-theme.css</code>. I want to replace <code>login.css</code> with <code>login.scss</code>. When pushing my code, I should not be able to push <code>login.css</code> if <code>login.scss</code> exists.</p>

<p>What would be the best way to ensure that a <code>.scss</code> and a <code>.css</code> file with the same names do not exist in the same directory?</p>
",2,484558,,
40702087,4914742,11/20/2016 8:31,3,3400,<git><gitlab><githooks>,Lock branch but allow gitlab merge request,"<p>We are using GitLab version 8.5.0. I am writing a custom server side update hook to lock specific branches. It works great, however, I would like to allow GitLab merge requests to be processed. All GitLab merge requests will usually  have ""See Merge request"" comment in the commit description. Hence, I thought to allow only those commits, which contains commit message ""See Merge request"". However, it doesnt work the way I thought. </p>

<p>Any other possible ways to allow only gitlab merge requests?</p>

<pre><code>#!/usr/bin/env bash

GIT_COMMIT_MSG=`git log -1 HEAD --pretty=format:%s`

if [[ ""$1"" == refs/heads/master ]]; then
if [[ ""$GIT_COMMIT_MSG"" =~ *""See Merge request""* ]]; then
    echo ""This is GitLab Merge Request""
else
    echo $GIT_COMMIT_MSG
    echo ""ERROR:  you are not allowed to update master"" &gt;&amp;2
    exit 1
fi

fi
</code></pre>
",2,4914742,0,0
21807407,1020588,2/16/2014 4:45,1,126,<git><githooks><git-stash>,"How to hook ""stash save"" to require a custom stash message?","<p>Often when doing <code>git stash</code> I forget to supply a custom message.  How would I go about making a hook which would reject stash creation unless there was a custom message?</p>
",1,1020588,,
48604350,815481,2/4/2018 3:20,7,1382,<git><automation><githooks><version-numbering>,How can I update my project version numbers using Git?,"<p>Say I have two branches: <code>develop</code> and <code>feature</code>.</p>

<p>Assume I also have a file called <code>VersionNumber</code> which has the following content:</p>

<blockquote>
  <p>BUILD_NUMBER 1</p>
</blockquote>

<p>I want to use Git hooks so that, when I merge <code>feature</code> into <code>develop</code>, the <code>BUILD_NUMBER</code> field gets incremented automatically. </p>

<p>I thought about the following process using the <code>post-merge</code> hook:</p>

<ol>
<li>Check that branch being merged into is <code>develop</code></li>
<li>Update the <code>VersionNumber</code> file by incrementing <code>BUILD_NUMBER</code> by 1</li>
<li>Add the updated file: <code>git add VersionNumber</code></li>
<li>Amend the commit: <code>git commit --amend -C HEAD --no-verify</code></li>
</ol>

<p>It all works fine until the final command. Git says I can't amend the commit in the middle of a merge (which is surprising to me, since I thought this was <code>post-merge</code>). </p>

<p>Any advice on how I can do this (using <code>post-merge</code> or any other hook for that matter)? </p>
",0,815481,0,0
18967006,312929,9/23/2013 19:14,0,315,<git><githooks><changeset>,git hook getting changeset after an auto commit,"<p>I have a hook that takes the changed files and copies them to a directory it works for standard commits but the auto-commit of a merge breaks it as the last two commits doesn't contain any changed files</p>

<p>Here is my current code</p>

<pre><code>generateChangeSet() {
    if [ ! -d $WORKDIR ];then
        mkdir $WORKDIR
    fi

    CHANGESET=$(git log -1 --name-status $oldrev $newrev | grep -v -e ""^Merge"" -e ""^commit"" -e ""^Author"" -e ""^Date"" -e ""^ "" -e ""^$"")
    if [ -z $CHANGESET ]; then
      echo Could not detect any files in the change set, aborting push
      exit $RETVAL
    fi

    # Get a list of deleted files
    DELFILES=$WORKDIR/deletedFiles.sh
    if [ -f $DELFILES ];then
        rm -rf $DELFILES
    fi

    for dFile in $(echo $CHANGESET | grep ""^D"" | awk '{print $2}'); do
        echo deleted file $dFile
        echo rm -f $dFile &gt;&gt; $DELFILES
    done
    if [ -f $DELFILES ];then
        sed -i '1s/^/#!\/bin\/bash\n/' $DELFILES
        chmod +x $DELFILES
        echo find . -depth -type d -empty &gt;&gt; $DELFILES
        echo rm deletedFiles.sh &gt;&gt; $DELFILES
    fi

    echo ""Generating diff between $newrev and $oldrev""
    git archive HEAD $(echo $CHANGESET | grep -v ""^D"" | awk '{print $2}') | (cd $WORKDIR &amp;&amp; tar xf -)
}
</code></pre>

<p>Any ideas on how get the script to get the latest changed files at all times?</p>

<p>Thanks</p>
",0,312929,,
40809978,3225108,11/25/2016 17:27,2,832,<linux><git><githooks>,Can't remove / find git hook,"<p>Once upon a time I installed some git hooks a la these instructions:</p>

<blockquote>
  <p>Clone this directory, then run <code>git config --global init.templatedir $template_dir</code>. Afterward new repositories will use this directory for templates.</p>
</blockquote>

<p>Now I want to remove these hooks. I've unset the template in my <code>.gitconfig</code>, I've deleted the <code>.git-templates</code> folder, but no matter what the hooks still run.</p>

<blockquote>
  <p>File "".git/hooks/pre-commits/security-scan"", line 49, in check_code_diff
      code = code.decode()
  UnicodeDecodeError: 'ascii' codec can't decode byte 0xe2 in position 113: ordinal not in range(128)</p>
</blockquote>

<p>But I can't seem to find this file <em>anywhere</em> on my machine! Only the sample hooks are in my repository's hooks folder</p>

<pre><code>applypatch-msg.sample       pre-push.sample
commit-msg.sample           pre-rebase.sample
post-update.sample          prepare-commit-msg.sample
pre-applypatch.sample       update.sample
pre-commit.sample
</code></pre>
",0,3225108,0,0
35439327,1794662,2/16/2016 17:36,3,652,<git><githooks>,Git hook commit-msg git add file,"<p>I've found myself working with a group that has a tedious change-log format. I've decided I'd like to automate creating a change-log entry based on the commit message details. The process is you supply a formatted commit message, I then adjust a change log file on the fly, and try to add it to the current commit.</p>

<p>I've got a commit-msg hook:</p>

<pre><code>#!/bin/bash

GIT_BRANCH=`git branch`

# Only run this hook on the master branch
if [ ""$GIT_BRANCH"" = '* master' ]
then
  # set some variables we'll need
  SAMPLE_COMMIT_MESSAGE=""minor: #ws-666 Brings the devil back to life""
  COMMIT_MESSAGE_FILE=$1
  FULL_COMMIT_MESSAGE=$(cat $COMMIT_MESSAGE_FILE)
  CURRENT_DATE=$(date +""%Y-%m-%d"")

  # let's do some pattern matching on the commit to set more variables
  [[ $FULL_COMMIT_MESSAGE =~ (ws-[0-9]+)[:space:]*(.*) ]]
  JIRA_ISSUE=${BASH_REMATCH[1]^^}
  COMMIT_MESSAGE=${BASH_REMATCH[2]}

  [[ $FULL_COMMIT_MESSAGE =~ ^(M) ]]
  if [ -n ""${BASH_REMATCH[1]}"" ]
  then
    CHANGE_IMPACT=""_Major_""
  fi

  [[ $FULL_COMMIT_MESSAGE =~ ^(m) ]]
  if [ -n ""${BASH_REMATCH[1]}"" ]
  then
    CHANGE_IMPACT=""_minor_""
  fi

  [[ $FULL_COMMIT_MESSAGE =~ ^([pP]) ]]
  if [ -n ""${BASH_REMATCH[1]}"" ]
  then
    CHANGE_IMPACT=""_patch_""
  fi

  #echo Full Commit Message ""$FULL_COMMIT_MESSAGE""
  #echo Jira issue $JIRA_ISSUE
  #echo Change Type $CHANGE_IMPACT 
  #echo Commit Message ""$COMMIT_MESSAGE""

  if [ -z $JIRA_ISSUE ]
  then
    echo ""You failed to specify a jira issue, your commit must look like:""
    echo ""$SAMPLE_COMMIT_MESSAGE""
    exit 1
  fi

  if [ -z $CHANGE_IMPACT ]
  then
    echo ""You failed to specify a change impact, your commit must look like:""
    echo ""$SAMPLE_COMMIT_MESSAGE""
    exit 1
  fi

  if [ -z $COMMIT_MESSAGE ]
  then
    echo ""You failed to specify an actual commit message, your commit must look like:""
    echo ""$SAMPLE_COMMIT_MESSAGE""
    exit 1
  fi

  sed -i -e "":a;N;s/\(# Change log.*\)\n/\1\n\n\* next ($CURRENT_DATE)\n  $JIRA_ISSUE\n    \* $CHANGE_IMPACT: $COMMIT_MESSAGE/"" change-log.md

  `git add change-log.md`

  echo Running $BASH_SOURCE
  set | egrep GIT
  echo PWD is $PWD

fi

# For testing, always exit
echo ""Exiting, no commit made""
exit 1
</code></pre>

<p>I then run the following command:</p>

<pre><code>git checkout -- ../change-log.md ; git commit ../fake -m""Major #ws-123 WeeeeeeEE"" ; git status
</code></pre>

<p>In git status I see:</p>

<pre><code>Changes not staged for commit:
  (use ""git add &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

    modified:   ../change-log.md
</code></pre>

<p>Is it not possible for git to add a file at this stage in the commit process? Other thoughts on how best to do this? I'm thinking I could check if the particular change log entry exists, if not, add it, then exit, asking for that file to be added.</p>

<p>-j</p>
",6,1794662,,
59586334,5306152,1/3/2020 23:00,1,2965,<python><git><python-unittest><githooks><pre-commit.com>,Python pre-commit unittest skipped,"<p>I would like to use <a href=""https://pre-commit.com/"" rel=""nofollow noreferrer"">pre-commit</a> to handle git hooks for my git project. However, when I use it, the <code>git commit</code> command keeps to skip the <code>unittest</code> execution:</p>

<pre><code>(smartexchange) trnbook:SmartExchange ale$ git commit -m ""add pre-commit yaml config""
autopep8.............................................(no files to check)Skipped
unittest.............................................(no files to check)Skipped
[hook_precommit da26d1e] add pre-commit yaml config
1 file changed, 14 insertions(+)
create mode 100644 .pre-commit-config.yaml
</code></pre>

<p>Same result on pre-commit hook manual execution:</p>

<pre><code>(smartexchange) trnbook:SmartExchange ale$ pre-commit install &amp;&amp; python .git/hooks/pre-commit
pre-commit installed at .git/hooks/pre-commit
autopep8.............................................(no files to check)Skipped
unittest.............................................(no files to check)Skipped
</code></pre>

<p>What am I missing? The manual execution of <code>python -m unittest discover</code> it's ok and it executes 4 unittest:</p>

<pre><code>(smartexchange) trnbook:SmartExchange ale$ python -m unittest discover -s smartexchange/
....
----------------------------------------------------------------------
Ran 4 tests in 0.001s

OK
</code></pre>

<p>I already read the pre-commit user docs and this answer:</p>

<p><a href=""https://stackoverflow.com/questions/59358182/python-pre-commit-unittest-faild"">Python pre-commit unittest faild</a></p>

<p>Here is my <code>.pre-commit-config.yaml</code> file.</p>

<pre><code>repos:
-   repo: https://github.com/pre-commit/mirrors-autopep8
    rev: ''  # Use the sha / tag you want to point at
    hooks:
    -   id: autopep8
-   repo: local
    hooks:
    -   id: unittest
        name: unittest
        entry: python -m unittest discover 
        language: python
        'types': [python]
        additional_dependencies: []
        pass_filenames: false
</code></pre>

<p>I use <a href=""https://pre-commit.com/"" rel=""nofollow noreferrer"">miniconda</a> as environment manager. Here my <code>conda list</code> output:</p>

<pre><code>(smartexchange) trnbook:SmartExchange ale$ conda list
# packages in environment at /Users/ale/bin/miniconda3/envs/smartexchange:
#
# Name                    Version                   Build  Channel
aspy.yaml                 1.3.0                      py_0    conda-forge
ca-certificates           2019.11.27                    0  
cached-property           1.5.1                      py_1  
certifi                   2019.11.28               py37_0  
cfgv                      2.0.1                      py_0    conda-forge
editdistance              0.5.3            py37h0a44026_0    conda-forge
identify                  1.4.9                      py_0    conda-forge
importlib_metadata        1.3.0                    py37_0  
libcxx                    4.0.1                hcfea43d_1  
libcxxabi                 4.0.1                hcfea43d_1  
libedit                   3.1.20181209         hb402a30_0  
libffi                    3.2.1                h475c297_4  
more-itertools            8.0.2                      py_0  
ncurses                   6.1                  h0a44026_1  
nodeenv                   1.3.3                      py_0    conda-forge
openssl                   1.1.1d               h1de35cc_3  
pip                       19.3.1                   py37_0  
pre-commit                1.21.0                   py37_0    conda-forge
python                    3.7.5                h359304d_0  
pyyaml                    5.2              py37h1de35cc_0  
readline                  7.0                  h1de35cc_5  
setuptools                42.0.2                   py37_0  
six                       1.13.0                   py37_0  
sqlite                    3.30.1               ha441bb4_0  
tk                        8.6.8                ha441bb4_0  
toml                      0.10.0           py37h28b3542_0  
virtualenv                16.7.5                     py_0  
wheel                     0.33.6                   py37_0  
xz                        5.2.4                h1de35cc_4  
yaml                      0.1.7                hc338f04_2  
zipp                      0.6.0                      py_0  
zlib                      1.2.11               h1de35cc_3  
</code></pre>

<p>The operative system I use is MacOS Catalina, version 10.15.2.</p>

<hr>

<p>EDIT:</p>

<p>The <a href=""https://stackoverflow.com/a/59587876/5306152"">Anthony's answer</a> is good; however it's best, for future reference, to report the revised configuration I use to run the <code>unittest</code> command (here <a href=""https://pre-commit.com/"" rel=""nofollow noreferrer"">docs about test-discovery</a>) with the option <code>--start-directory=path/to/python_module_folder</code>:</p>

<pre><code>    -   id: unittest
        name: unittest
        entry: python -m unittest discover
        language: python
        types: [python]
        args: [--start-directory=path/to/python_module_folder, --pattern=test_*.py]
        pass_filenames: false
        verbose: true
</code></pre>

<p>As reported by <a href=""https://pre-commit.com/#arguments-pattern-in-hooks"" rel=""nofollow noreferrer"">pre-commit documentation about argument pattern in hooks</a>, additional arguments should be in <a href=""https://www.gnu.org/software/guile/manual/html_node/Command-Line-Format.html"" rel=""nofollow noreferrer"">long format</a>.</p>
",0,5306152,0,0
48640615,1251684,2/6/2018 10:20,3,4946,<bash><githooks><pre-commit-hook>,Bash confirmation won't wait for user input,"<p>I am trying to implement confirmation prompt with a bash script but for some reason, prompt won't wait for user input. I've tried many examples but no luck so far. I am on MacOS if it makes any difference.</p>

<p>Just a few examples I tried (All copy+paste from other answers in SO):</p>

<pre><code>#!/bin/bash

read -p ""Are you sure? "" -n 1 -r
echo    # (optional) move to a new line
if [[ $REPLY =~ ^[Yy]$ ]]
then
    # do dangerous stuff
fi
</code></pre>

<hr>

<pre><code>#!/bin/bash

read -p ""Continue (y/n)?"" CONT
if [ ""$CONT"" = ""y"" ]; then
  echo ""yaaa"";
else
  echo ""booo"";
fi
</code></pre>

<hr>

<pre><code>#!/bin/bash

while true; do
read -rsn1 input
if [ ""$input"" = ""a"" ]; then
    echo ""hello world""
fi
done
</code></pre>

<hr>

<pre><code>#!/bin/bash

read -p ""Continue (y/n)?"" choice
case ""$choice"" in
  y|Y ) echo ""yes"";;
  n|N ) echo ""no"";;
  * ) echo ""invalid"";;
esac
</code></pre>

<p>This doesn't even prompt anything:</p>

<pre><code>#!/bin/bash
read -n 1 -s -r -p ""Press any key to continue""
</code></pre>
",8,1251684,0,0
21917081,1624277,2/20/2014 19:00,2,481,<git><githooks><pre-commit-hook>,Git hooks - update file md5sum automatically upon commit,"<p>One of the scripts in my git repository is distributed to many users. When they run this script I would it to look into my repository and see if any change is made to this script and if so suggest the users to update the script from the repository. The users know nothing about git and wish to understand as little as possible in the system implementation.</p>

<p>I would like to automatically update a this script's md5sum every time I commit it, without the need to bother and do it manually. Here is the pre-commit hook I wrote</p>

<pre><code>#!/bin/sh

echo -n ""# ""  &gt; test.txt.tmp
linesNumber=`wc -l test.txt | awk '{print $1}'`
tail -n $(($linesNumber - 1)) test.txt | md5sum | awk '{print $1}' &gt;&gt; test.txt.tmp
tail -n $(($linesNumber - 1)) test.txt &gt;&gt; test.txt.tmp
mv test.txt.tmp test.txt
#git push
#git commit --no-verify --message ""update file md5sum""
</code></pre>

<p>The md5sum works fine, the problem is that after the commit my script is again shows as modified. I tried to commit my changes without running the pre-commit hook (--no-verify) but git says I can't commit because my branch is ahead of 'origin/master' by 1 commit, I tried to push my changes before committing the md5sum but it never finished the operation.</p>

<p>What is the right way to achieve this type of functionality?</p>
",0,1624277,,
19009461,112496,9/25/2013 15:46,0,85,<git><shell><repository><githooks>,git pre-push hook fails to push everything,"<p>I need to change a set of files before pushing them to repo...<br>
Approach I'm using works in a way that it leaves commit in the loop 'un-pushed'
so i need to manually push again with -forced tags..</p>

<pre><code>for i in files; do
   edit $i
   git add $i
   git commit  -o $i -n -m ""Updated ...""
   git tag $TAG -f
done

exit 0
</code></pre>

<p>Tried to ammend previous commits, but failed on this one as well.<br>
Is there a way this would push everything as i would expect:  </p>

<blockquote>
  <p>if pre-push exits with 0, files are pushed...</p>
</blockquote>
",0,112496,,
48666950,7985378,2/7/2018 15:03,8,2972,<githooks>,Which language can I use to write a hook script in Git?,"<p>I would like to know the script languages that you can use inside hook script in Git. </p>

<p>I have been reading about how to use Git hooks but I have not seen anywhere the language that can be used, I have seen some examples that look they are written in Perl but I am not sure of that since I have never programmed in Perl.</p>
",1,7985378,0,0
48670689,204675,2/7/2018 18:13,0,989,<git><ionic3><githooks><git-husky>,Tslint on latest Ionic,"<p>I am trying to lint my ionic project and abort the commit if lint fails. Running <code>npm run lint</code> in the console shows the error. I have installed precommit and lately husky (<code>""husky"": ""^0.15.0-rc.6""</code>) with the below code inside package.json</p>

<pre><code>""husky"": {
    ""hooks"": {
      ""pre-commit"": ""npm run lint""
    }
}
</code></pre>

<p>I have read a number of tutorials and the closest I got is linting but still commits if there are errors. Have also reverted the git hooks. How can I share the modified hooks with a team and run lint on every commit?
At the moment git does commit event though <code>npm run lint</code> returns errors. I have remote the precommit hooks so the husky installation can successfully set up new ones.</p>
",10,204675,,
48672496,2463777,2/7/2018 20:14,2,81,<git><git-submodules><githooks>,Git submodule update when pulling changes,"<p>How do I configure git to automatically change submodules to their committed state, when doing a git pull?</p>

<p><strong>Here is what happens for me:</strong></p>

<p>Changes in a submodule are pulled, added, committed and pushed by someone else.
I do a git pull and have all the changed files, but my submodules remain in my local state. They now show up as modified files in git status, since my version differs from the current.</p>

<p>This is easily rectified by a git submodule update, but still, this behaviour is stupid and never what I would ever possibly want.</p>

<p>If I forget to do a git submodule update, e.g. because I was unaware, that what I pulled contained a change, submodule changes don't apply. Worse even, since they are now changes a quick commit could accidentally revert the update to the submodule.</p>

<p><strong>Here is what I want:</strong></p>

<p>When I do git pull, any changed submodules will be changed to the version committed. Initialising added submodules would be a bonus, but I'm not greedy.</p>

<p>Is there some great git config entry I can do to change this behaviour, or is my only option to trigger the git submodule update in hooks?</p>

<p>I'm new to the latter, so I would like to avoid it.</p>
",1,2463777,0,0
35484842,3279573,2/18/2016 14:56,0,378,<php><git><bash><gitlab><githooks>,Update server dir after pushing to gitlab repo,"<p>We have the following setup - remote repository with gitlab gui.   </p>

<p>Our webserver is located on another server and we have ssh access to it. We also have local copies of our dev site, our git setup right now just push to the repo in gitlab. </p>

<p>My goal is to automate the process and on every push to gitlab repo to update the server dir with latest changes. </p>

<p>I saw that for this purpose we should use webhooks or deploy keys. I want to avoid using cron job. </p>

<p>I created a bash script which performs git pull after certain php file is accessed.<br>
However when I placed the url to this php file in webhook section in gitlab, nothing happened. </p>

<p>If I access the file manually by typing url in address bar it works ok.<br>
When I try to test the hook I get 500 error and timeout. </p>

<p>Any recommendations how to improve this process or where Im going wrong ? </p>
",0,3279573,,
19027238,523999,9/26/2013 11:40,2,72,<git><branch><githooks><rule>,How to deny branching from master,"<p>Given the following scenario:</p>

<pre><code>o-o- ... -o-o-o      master
|         |`-o-o     feature1
|         `-o-o      feature2
|             \
 `-o-o-o-o-o-o-o-o   develop
</code></pre>

<p>I have a master where all new branches should originate from.
While developing stuff everythin is deployed to the develop branch which is rolled out on the test server.</p>

<p>Because it did happen from time to time in the past i want somehow deny branching from anything except master.
Is that possible via some git hook?</p>
",6,523999,0,0
41031628,1454671,12/8/2016 4:10,1,566,<git><deployment><workflow><githooks>,Deploying to Different Web Servers via Git,"<p>Is it possible (and if so, is it good practice) for a remote Git repository to deploy to multiple web servers (e.g., a staging server and production server) depending upon branch name? For example, if developer A pushes a commit to remote branch <code>STAGING</code>, the commit is deployed to the corresponding staging web server, whereas commits (or merges) to branch <code>MASTER</code> are deployed to the production server.</p>

<p>Does this illustrate a good/reliable workflow? If not, what is a better approach?</p>

<p><a href=""https://i.stack.imgur.com/9TtPl.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/9TtPl.png"" alt=""Git workflow example""></a></p>
",1,1454671,0,0
48714137,3112803,2/9/2018 21:10,1,1232,<git><github><version-control><githooks><gitkraken>,Git hook pre-push prompt to squash commits first,"<p>I'm not sure if I'm going about this the correct way.  Sorta new to Git and GitKraken.  I want to force others to squash their feature branch commits before pushing and creating a pull request.  So I've tried the following <a href=""https://git-scm.com/docs/githooks"" rel=""nofollow noreferrer"">pre-push git hook</a> but even when I squash first it still thinks there are multiple commits.  What am I missing?  Thanks!</p>

<pre><code>#!/bin/sh

# An example hook script to verify what is about to be pushed.  Called by ""git
# push"" after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   &lt;local ref&gt; &lt;local sha1&gt; &lt;remote ref&gt; &lt;remote sha1&gt;

remote=""$1""
url=""$2""

z40=0000000000000000000000000000000000000000

while read local_ref local_sha remote_ref remote_sha
do
    if [ ""$local_sha"" = $z40 ]
    then
        # Handle delete
        :
    else
        # Check for number of commits
        commits=`git rev-list --count ""$local_sha""`
        if [ ""$commits"" -ne ""1"" ]
        then
            echo ""Multiple commits detected, push aborted. Please squash your local branch before pushing.""
            exit 1
            #git reset --soft HEAD~""$commits""
            #git commit --edit -m""$(git log --format=%B --reverse HEAD..HEAD@{1})""
        fi
    fi
done

exit 0
</code></pre>
",1,3112803,,
59784129,5882271,1/17/2020 9:04,2,458,<git><localhost><remote-server><githooks><git-post-receive>,Hook post-receive does not work after push from local to remote repository,"<p><strong>Description of the problem:</strong></p>

<p>I have a problem with starting the <code>post-receive</code> hook automatically in the git repository.
After made push from the local to the remote repository, hook <code>post-receive</code> just doesn't execute.</p>

<hr>

<p><strong>Steps that I did:</strong></p>

<ol>
<li>I create a (<code>non-bare</code>) repository on the local machine and create several commits</li>
<li>I create a repository on the remote machine (<code>bare</code>), create a <code>post-receive</code> hook there and set it to chmod to 755</li>
<li>On the local machine i add a remote repository (git remote add .....)</li>
<li>I make a push that runs correctly</li>
<li>Hook, unfortunately, does not fire</li>
</ol>

<hr>

<p><strong>My environments:</strong></p>

<ul>
<li>Local machine: <code>GIT 2.25.0.windows.1</code> @ <code>Win10 (1909)</code></li>
<li>Remote machine: <code>GIT 2.25.0</code> @ <code>Debian 8.11 (jessie)</code></li>
</ul>

<hr>

<p><strong>Content of post-receive file at remote machine:</strong></p>

<pre><code>#!/bin/sh
git --work-tree=/home/xxxxxx/xxxxxx/public_html/prod --git-dir=/home/xxxxxx/xxxxxx/dev.git checkout -f

</code></pre>

<ul>
<li>Note: <em>When I run this code directly from the ssh console, it works fine</em></li>
</ul>

<hr>

<p><strong>Other SO solutions?:</strong></p>

<p>Yes, I've seen a lot, but none solve my problem. 
I've seen some answers with ""unset GIT_DIR"" advice, but I'm afraid it has nothing to do with it, because even just the <code>echo test &gt; log.txt</code> does not work in <code>post-receive</code>. It looks like <code>post-receive</code> can't be started?</p>
",4,5882271,,
31680379,1988417,7/28/2015 15:11,5,18588,<windows><git><bash><permissions><githooks>,Permission denied when creating symbolic links in git,"<p>there is a similar question, but the difference here is that I am working on Windows. I am running git on Windows (working in git bash tool) and I have successefully cloned my forked repository. Now I need to make symbolic link and it gives me <code>Permission denied</code>. I can make new dir for example in <code>.git</code> folder and I have also set <code>chmod /R 777</code> for <code>.git</code> directory, so it seems I have permissions.</p>

<p>I tried to run:
<code>rm -rf hooks</code> and then <code>ln -s ../git_hooks hooks</code>.</p>
",4,1988417,,
48729202,3200134,2/11/2018 7:07,1,676,<linux><git><apache><githooks>,Using git hooks post commit to serve a subdirectory folder (dist/public) to a testing server,"<p>So I have a directory structure like so:</p>

<pre><code>- Source
  - site a 
  - site b
  - site c
  - localhost(home directory for local test server)
    -  site a test
    -  site b test
    -  site c test
</code></pre>

<p>The way i currently have it set up is that the sites in the Source folder are the working versions. 
When i am happy to test a feature i have a git hook post-commit set up to serve them into the localhost folder under the corresponding site name.</p>

<pre><code>   #!/bin/bash
   unset GIT_INDEX_FILE
   git --work-tree=/Users/kevin/Source/local-host/www.kevvin.me/ --git-dir=/Users/kevin/Source/www.kevvin.me/.git checkout -f
</code></pre>

<p>So i commit the changes I have made and the local linux server reflects the changes. I also have a git hook set up on the production server that pulls in the latest changes on a push(When I have finished testing).</p>

<p><strong>The problem is</strong> this only works for static sites/sites without a sub directory structure like a /dist/ folder within.</p>

<p><strong>I can't find a way to push my whole branch, while only serving my server with the /dist/ folder using git hooks</strong>.</p>

<p>I have found a few close answers using git subtree but these all involve using a separate directory folder and linking it to the working one with subtree. <strong>I need to use the git hooks to select an already present subfolder <em>/dist/</em> and send that to the local server.</strong></p>
",0,3200134,,
3332416,387631,7/26/2010 5:36,3,718,<git><access-control><githooks>,Git hook to disallow directory creation in top level,"<p>Any better way to prevent stop top level directory creation by users may be while on push or direct file creation?</p>
",0,387631,,
48752900,8048474,2/12/2018 18:13,1,998,<css><git><sass><githooks>,GIT Hook - Compile SASS,"<p>At the moment, i'm using an external SASS compiler, and committing my compiled CSS.</p>

<p>So far, no real issues.. until another developer starts work on the site. We've had numerous issues with CSS being merged incorrectly, which is just awful.</p>

<p>I've been looking at using a git hook, to compile SASS on a push, meaning no more CSS merge issues.</p>

<p>I've had zero luck with this, been trying to use the following as a base:</p>

<pre><code>    if [[ $1 = ""rebase"" ]]; then  
    echo ""\nRebuiling compiled files post $1...""

    YOUR SASS BUILD SCRIPT HERE

    echo ""Adding built files to the last commit""
    git add -u
    git commit --amend --no-edit
</code></pre>

<p>Does anyone have any useful articles they've used to get this working? Any tips or pointers? Greatly appreciated if so!</p>

<p>Thanks</p>
",5,8048474,,
48766328,6212547,2/13/2018 11:58,0,2986,<git><shell><intellij-idea><githooks>,Git pre-commit hook behavior with Intellij Idea,"<p>I have a monorepo project with pre-commit git hook that bumps version in <code>package.json</code> files. This hook uses the following script:</p>

<pre><code>#!/usr/bin/env bash

set -e

# See if git detects any changes for the given directory
if [[ -z `git diff --cached --shortstat ./packages/$1` ]]; then
    VERSION=`node -p -e ""require('./packages/$1/package.json').version""`
    echo ""$1 has not changed, old version: $VERSION""
    exit 0
fi

VERSION=$(cd packages/$1 &amp;&amp; npm version patch --no-git-tag-version)
# Add package.json to staged
git add packages/$1/package.json &gt; /dev/null
echo ""$1 has changed, new version: ${VERSION//v}""
</code></pre>

<p>I change one file <code>tsconfig.json</code> in <code>backend</code> package and commit it via Idea UI, with ""Run git hooks option checked"". I only check this on file in UI dialog, but the hook should also bump package.json. In Idea version control console I see following log appear:</p>

<pre><code>14:28:08.610: [myproject] git -c core.quotepath=false -c log.showSignature=false commit --only -F /private/var/folders/rf/mnfmp6xs2zjb50x0nqfrlftw0000gn/T/git-commit-msg-.txt -- packages/backend/tsconfig.json
[master c5ec828] Hooks test 24
 2 files changed, 2 insertions(+), 2 deletions(-)
</code></pre>

<p>Running <code>git log -1 --stat</code> says that package.json got changed by hook and was commited:</p>

<pre><code>git log -1 --stat
commit c5ec8289afa8f15d7134b362992d4a91e31bda16 (HEAD -&gt; master)
Author: doomsower &lt;mail@gmail.com&gt;
Date:   Tue Feb 13 14:28:08 2018 +0300

    Hooks test 24

 packages/backend/package.json  | 2 +-
 packages/backend/tsconfig.json | 2 +-
 2 files changed, 2 insertions(+), 2 deletions(-)
</code></pre>

<p>The <code>packages/backend/package.json</code> version was bumped by hook and is correct. However, when I run <code>git status</code> I see following:</p>

<pre><code>On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use ""git push"" to publish your local commits)

Changes to be committed:
  (use ""git reset HEAD &lt;file&gt;..."" to unstage)

        modified:   packages/backend/package.json

Changes not staged for commit:
  (use ""git add &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

        modified:   packages/backend/package.json
</code></pre>

<p>Then I run <code>git add packages/backend/package.json</code> and after that <code>git status</code> returns: </p>

<pre><code>On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use ""git push"" to publish your local commits)

nothing to commit, working tree clean
</code></pre>

<p>I don't quite understand what's going on here:</p>

<p>1) According to logs, Idea ran <code>git commit</code> with <code>--only</code> flag and <code>package.json</code> was not specified in command line, yet it was commited. How is it possible?</p>

<p>2) Ok, so 2 files were committed and <code>package.json</code> was committed with bumped version number. How is it possible that after that git working tree is not clean and I have to run <code>git add</code> to make it clean?</p>
",0,6212547,0,0
14152030,1168486,1/4/2013 6:12,4,7950,<eclipse><git><github><githooks><gerrit>,How to install and use gerrit with eclipse?,"<p>I want know how to install and use <strong>gerrit</strong> in <strong>eclipse</strong>.
I does not found any easy and helpful documentation for the same.</p>

<p>I already have Git plugin installed in eclipse and I am using it, now I want to know about the <strong>gerrit</strong>.</p>

<p>I went through this link <a href=""http://wiki.eclipse.org/Gerrit#Enabling_Gerrit_for_your_Eclipse.org_Project"" rel=""nofollow"">Enabling_Gerrit_for_your_Eclipse</a> but they are asking me to give infromation about project and the repository URL..Can it will be possible without these information??</p>
",0,1168486,0,0
35817016,4795779,3/5/2016 17:01,0,34,<git><githooks>,git: hook processed files?,"<p>Good evening
it's strange that git hooks obviously don't know anything about handled files, e.g.:</p>

<pre><code># Checkout any files which were deleted in the local workspace
git ls-files -d | xargs git checkout --
</code></pre>

<p>This command calls the post-checkout script - but does not pass all handled files.</p>

<p>Is there a solution to call a git hook for each handled file and the action happaned to it? (file was update, created, deleted, …)</p>

<p>Thanks a lot for any help!,
kind regards,
Tom</p>
",0,4795779,0,0
51925950,2238252,8/20/2018 7:31,0,37,<git><gitlab><githooks><gitlab-ce>,Can not run git commands in git custom pre-receive hook,"<p>I'm running a copy of <code>gitlab-ce</code> on a server of mine and I would like to do a custom <code>pre-receive</code> hook that searches for TODOs in the committed code and doesn't allow the push if there are any TODOs found. How can I access the committed code/files if I don't have access to git commands since I'm in the <code>&lt;project_name&gt;.git</code> directory and not in the actual code directory?</p>

<p>Thank you very much!</p>
",3,2238252,,
48808906,863651,2/15/2018 13:52,3,1759,<bash><git><githooks><pre-commit-hook>,Git pre-commit bash script on Windows,"<p>I've created a simple pre-commit script for git:</p>

<pre><code>#!/bin/sh

if git rev-parse —verify HEAD &gt;/dev/null 2&gt;&amp;1; then
    against=HEAD
else
    against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

for FILE in `git diff --cached --name-only` ; do
    # Check if the file contains 'DbMigration'
    echo $FILE $against
    if [ -n ""grep -E ':\s*DbMigration\s' $FILE"" ];
    then
        echo ''
        echo ''
        echo '[**CODEPOLICE**]'
        echo '[**CODEPOLICE**]' $FILE
        echo '[**CODEPOLICE**]'
        echo '[**CODEPOLICE**] This file contains a direct subclass of DbContext! Refactor your migrations to use &lt;...&gt; instead!'
        echo '[**CODEPOLICE**]'
        echo ''
        echo ''
        exit 1
    fi
done

exit
</code></pre>

<p>The check <code>if [ -n ""grep -E ':\s*DbMigration\s' $FILE"" ]</code> fails miserably in the sense that it generates false positives. </p>

<p>Versions involved are:</p>

<pre><code>Windows 10 Enterprise

$ git --version
git version 2.15.1.windows.2

$ bash --version
GNU bash, version 4.4.12(1)-release (x86_64-pc-msys)
</code></pre>

<p>What gives?</p>

<p><strong>Update</strong></p>

<p>Some examples:</p>

<pre><code> public partial class Initial : DbMigration --&gt; we want positive &amp; we get positive --&gt; ok

 public partial class Initial : FoobarDbMigration --&gt; we want negative &amp; we get positive --&gt; not ok

 public partial class Initial : Foobar --&gt; we want negative &amp; we get positive --&gt; not ok

 public partial class Initial : DbMigrationFoobar --&gt; we want negative &amp; we get positive --&gt; also not ok
</code></pre>
",2,863651,,
59904684,2065363,1/24/2020 22:52,1,484,<bash><git><githooks><pre-commit-hook><commit-message>,Commit message file missing in commit-msg hook,"<p>I'm trying to write a commit-msg hook to format my commit messages to wrap at a maximum column width:</p>

<pre class=""lang-sh prettyprint-override""><code>#!/bin/bash

format_max_column_width() {
  MAX_LINE_LENGTH_CHARS=50

  cat ""$1"" | grep -v ""^Bug: |^Change-Id: |^Signed-off-by: |^CC: "" &gt; body
  cat ""$1"" | grep ""^Bug: |^Change-Id: |^Signed-off-by: |^CC: "" &gt; footer
  fmt -w ""$MAX_LINE_LENGTH_CHARS"" body &gt; body
  cat body &gt; ""$1""
  cat footer &gt;&gt; ""$1""
  rm body footer
}

format_max_column_width
</code></pre>

<p>For some reason, when I make a commit, I get the following errors because $1 seems to be empty.</p>

<pre><code>cat: '': No such file or directory
cat: '': No such file or directory
.git/hooks/commit-msg: line 9: : No such file or directory
.git/hooks/commit-msg: line 10: : No such file or directory
</code></pre>

<p>Moreover, if I just <code>echo $1</code>, nothing will be printed, confirming this theory. What's going on?</p>
",0,2065363,0,0
51935112,1967800,8/20/2018 16:36,2,346,<git><npm><githooks>,Update node modules when package-lock has changed,"<p>We are using git and npm in our project.</p>

<p>We often pull the changes made by our colleagues. Most of the time, this is enough, but if our colleague did update a dependency, just pulling the new <code>package.json</code> and the new <code>package-lock.json</code> won't be enough. We alson need to run <code>npm install</code> to update our <code>node_modules</code>.</p>

<p>The issue is that if we forget about the <code>npm install</code>, we end up with errors that will take us time to identify and finally realize: ""Oh! That dependency was updated!"".</p>

<p>So, what I would really like, is a kind of hook that would, each time the file <code>package-lock.json</code> is changed, run <code>npm install</code>.</p>

<p>Being totally newbie with hooks, I have some problems though:</p>

<ul>
<li>What hook should I use? Is <code>post-update</code> what I'm looking for? Or should it be <code>post-receive</code>? Or <code>post-checkout</code> maybe?</li>
<li>How can I get the information if <code>package-lock.json</code> was updated in the changes I pulled?</li>
<li>Is this the correct way to achieve my goal or is there another way?</li>
</ul>

<p><strong>Edit</strong></p>

<p>I found <a href=""https://stackoverflow.com/questions/16840184/how-can-i-automatically-be-warned-if-a-specific-file-changes"">this</a> that seems to fix my issue perfectly. I will make it an answer once I checked that it's working fine.</p>
",0,1967800,,
60005102,11051128,1/31/2020 13:44,4,4101,<githooks><git-extensions><gitkraken><husky>,How to disable git hooks in gitkraken?,"<p>I'm working with a project that has git hooks configured. Unfortunately. It was added to prevent juniors or headless developers to commit CI-check-failing code to their branch.</p>

<p>I am one of these, who ignore git hooks with <code>HUSKY_SKIP_HOOKS</code> env variable, but for me it doesn't work in GitKraken.</p>

<p>Do you know how to ignore git hooks in GitKraken?</p>
",0,11051128,0,0
48834382,1812580,2/16/2018 20:26,0,55,<bash><githooks><exit-code>,Why is exit my status valid in command line but not within bash script? (Bash),"<p>There are a few layers here, so bear with me.</p>

<p>My <code>docker-container ssh -c""echo 'YAY!'; exit 25;""</code> command executes <code>echo 'YAY!'; exit 25;</code> in my docker container. It returns:</p>

<pre><code>YAY
error:  message=YAY!
, code=25
</code></pre>

<p>I need to know if the command within the container was successful, so I append the following to the command:</p>

<pre><code>docker-container ssh -c""echo 'YAY!'; exit 25;""  &gt;&amp;1 2&gt;/tmp/stderr; cat /tmp/stderr | grep 'code=' | cut -d'=' -f2 | { read exitStatus; echo $exitStatus; }
</code></pre>

<p>This sends the <code>stderr</code> to /tmp/stderr and, with the <code>echo $exitStatus</code> returns:</p>

<pre><code>YAY!
25
</code></pre>

<p>So, this is exactly what I want. I want the $exitStatus saved to a variable. My problem is, I am placing this into a bash script (GIT pre-commit) and when this exact code is executed, the exit status is <code>null</code>.</p>

<p>Here is my bash script:</p>

<pre><code># .git/hooks/pre-commit

if [ -z ${DOCKER_MOUNT+x} ];
then
    docker-container ssh -c""echo 'YAY!'; exit 25;""  &gt;&amp;1 2&gt;/tmp/stderr; cat /tmp/stderr | grep 'code=' | cut -d'=' -f2 | { read exitStatus; echo $exitStatus; }

    exit $exitStatus;
else
    echo ""Container detected!""
fi;
</code></pre>
",6,1812580,,
60007009,1075247,1/31/2020 15:39,0,57,<git><githooks>,"Which single git hook runs after a git pull, git merge and git rebase?","<p>From what <a href=""https://git-scm.com/docs/githooks"" rel=""nofollow noreferrer"">I can see</a> I need to use both <code>post-checkout</code> and <code>post-merge</code>.</p>

<p>Is there a single hook that would trigger after new files arrive in (after a pull a merge or a rebase)?</p>
",3,1075247,,
35854598,3338080,3/7/2016 21:40,0,83,<git><deployment><githooks><git-bash>,How to deploy 'develop' branch using GIT's hooks?,"<p>Hi was following <a href=""https://www.digitalocean.com/community/tutorials/how-to-set-up-automatic-deployment-with-git-with-a-vps"" rel=""nofollow"">this</a> tutorial to make in my server a git hook which 'copies' the source files from repo to another directory.</p>

<p>This is the <code>post-receive</code> hook and works great:</p>

<pre><code>#!/bin/sh
git --work-tree=/var/www/domain.com --git-dir=/var/repo/site.git checkout -f
</code></pre>

<p>But I need to 'copy' files from my develop branch not from master. How can I achieve that?</p>
",0,3338080,,
66734211,15445776,3/21/2021 15:32,0,68,<git><git-commit><githooks><python-re>,Can I replace message in my commit message(git)?,"<p>I used commit-msg hook in git to check if my commit are right and want to automatically replace the BugID with the Bug Address. But it seems like it can only add one more row at the bottom of the commit message instead of replacing the original lines. Is there any way I can make it work?
my commit template is</p>
<pre><code>Branch:
BugId:
Description:
</code></pre>
<p>Here's my code:</p>
<pre><code>with open(sys.argv[1],r+) as fp:
    lines=fp.readlines()
    for line in lines:
        if line[0]==&quot;#&quot;:
            continue
        line=line.strip()
        for l in l.split('/n'):
            if not l.split(&quot;:&quot;)[-1]:
                print(l,&quot;is empty&quot;)
                sys.exit(1)
            if l.startswith(&quot;Bug&quot;):
                fp.write(l.replace(l.split(&quot;:&quot;)[-1],&quot;http:bugs.xxxxxxxxx&quot;)
sys.exit(0)
</code></pre>
",3,15445776,,
14168216,570761,1/5/2013 3:13,4,249,<git><githooks><pre-commit-hook>,What scripts/calls do you usually include in your Git pre-commit hooks?,"<p>I want to know what are the best practices in setting up your pre-commit hooks. What the other developers using Git include in their pre-commit scripts. </p>

<p>In my case, assuming I'm working on a PHP project and having OCD tendencies sometimes - my pre-commit hook includes:</p>

<ul>
<li>PHP syntax checker - commit will fail if there are syntax errors in the committed PHP files. </li>
<li>pngout - if the committed file is a png image. pngout will automatically optimize/compress  that file.</li>
<li>JavaScript syntax checker (in my to-do list)</li>
</ul>
",0,570761,0,0
31710587,4438340,7/29/2015 20:35,7,1870,<git><visual-studio><nunit><githooks><azure-devops>,Replicate Gated check-in functionality in Visual Studio + VSO + Git,"<p>I'm trying to replicate Gated check-in functionality in Visual Studio + VSO + Git.</p>

<p>Actually I'd like to run Unit Tests before code will be committed to local repo OR pushed to remote.</p>

<p>But faced with an issue - there is no Gated check-in functionality in VSO + GIT.</p>

<p>I've tried to configure git hooks - pre-commit hook will work for me - but Visual Studio GIT provider doesn't support Git hooks! Its due to the libgit2 -it is used in Visual Studio and it doesn't support hooks:(</p>

<p>So my question is how can I run NUnit Tests automatically before commit in Visual Studio 2013 + VSO +Git and do not allow bad code get into my repo?</p>

<p>Thanks! </p>
",1,4438340,0,0
31711072,5171066,7/29/2015 21:03,0,470,<git><bash><githooks>,Commit related Git hooks not invoking,"<p>Before anyone claims I didn't search enough for answers on this topic, let me clarify:</p>

<p>I have found MANY threads about this issue that were resolved, however; none of those answers worked for me.</p>

<p>I have already made sure that the user performing the commit has the proper permissions.</p>

<p>I have ensured the hook file itself is executable and does not end in .sample</p>

<p>I am not working in a bare repo, so commit related hooks SHOULD invoke.</p>

<p>I have tried committing in Git Bash, Git Commit tool, and even a third party GUI GitEye, all with the same results.</p>

<p>Post-commit and Pre-commit both fail whether I attempt to invoke them from the repo on my server as well as from a clone on my local machine.</p>

<p>The hook files themselves successfully execute and work as intended if I run them as bash/batch files.</p>

<p>Other hooks such as Update work fine, but nothing that invokes from git commit.</p>

<p>At this point, I've exhausted all possible issues that I can think of. Any help is appreciated, but please read what I've already attempted before carelessly directing me to a thread that suggests one of the aforementioned things. I'm hoping there is some obscure fix to this that some Git-savvy user can explain to me.</p>
",9,5171066,,
4309759,451634,11/30/2010 1:28,7,3157,<git><task><githooks><git-tag>,Automatically run Git hook when creating a Git tag,"<p>Is there a Git hook which can be executed when a new Git tag is added? Because I want to automatically write new Git tag names into a textfile. Do you have a clue on how to do this?</p>
",1,451634,,
21748245,663948,2/13/2014 7:56,1,1128,<gitlab><githooks><webhooks>,gitlab: How to get notified by web hook when a tag added?,"<p>I set up a 'push' hook, but it only got triggered by a commit pushed but not work for tag added, how to get that worked?</p>
",0,663948,0,0
21757969,1991901,2/13/2014 15:09,0,695,<git><github><githooks>,Reset branch on git commit hook,"<p>I have googled around but cannot find the right answer. </p>

<p>What I basically want is to be able to have a git hook on the client side (Developer Machines) that would not allow them to touch a branch.</p>

<p>Ex. </p>

<p>Master: I am able to lock master using gitlab to only Lead developers; However, I would like master to only be touched via a merge and never let anyone touch master directly. What I would like is a git hook that would not let them commit the changes they are making to master.</p>

<p>My idea would be to have a pre-commit hook that would do a </p>

<pre><code> git reset --hard 
</code></pre>

<p>on master, if anyone tries to commit changes on master.</p>

<pre><code>  #!/bin/sh

  if ref == 'refs/heads/master':
        print ""==============================================""
        print ""Error. You cannot Make Changes to Master      ""
        print ""==============================================""

        SOMEHOW RUN git reset --hard
</code></pre>

<p>would something like this work? and How could I run a git command?</p>
",1,1991901,,
59535617,8592000,12/30/2019 18:56,1,4598,<git><githooks><gitkraken><pre-commit><pre-commit.com>,Githook pre-commit error exit code 1 in GitKraken,"<p>I'm trying to use the pre-commit package and the git hooks.</p>

<p>If I run pre-commit, or if I commit, from the command line all runs well.</p>

<p>But when I try to commit from GitKraken, the following error is raised:
<a href=""https://i.stack.imgur.com/4kwjE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4kwjE.png"" alt=""enter image description here""></a></p>

<p>Here instead the output of a commit from command line:
<a href=""https://i.stack.imgur.com/CBHiP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/CBHiP.png"" alt=""enter image description here""></a>
Here you can find the two files involved:</p>

<pre><code>#.pre-commit-config.yaml

repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v2.4.0
    hooks:
    -   id: check-merge-conflict
    -   id: debug-statements
    -   id: flake8
        args: [--max-line-length=100]
-   repo: https://github.com/ambv/black
    rev: stable
    hooks:
    - id: black
      language_version: python3.7
-   repo: local
    hooks:
    -   id: tests
        name: run tests
        entry: pytest -v
        language: system
        types: [python]
        stages: [push]
</code></pre>

<pre><code>.git/hooks/pre-commit

#!/usr/bin/python3.7
""""""File generated by pre-commit: https://pre-commit.com""""""
from __future__ import print_function

import distutils.spawn
import os
import subprocess
import sys

# work around https://github.com/Homebrew/homebrew-core/issues/30445
os.environ.pop('__PYVENV_LAUNCHER__', None)

HERE = os.path.dirname(os.path.abspath(__file__))
Z40 = '0' * 40
ID_HASH = '138fd403232d2ddd5efb44317e38bf03'
# start templated
CONFIG = '.pre-commit-config.yaml'
HOOK_TYPE = 'pre-commit'
INSTALL_PYTHON = '/home/simone/.cache/pypoetry/virtualenvs/python-boilerplate-BlQS4gAK-py3.7/bin/python3.7'
SKIP_ON_MISSING_CONFIG = False
# end templated


class EarlyExit(RuntimeError):
    pass


class FatalError(RuntimeError):
    pass


def _norm_exe(exe):
    """"""Necessary for shebang support on windows.

    roughly lifted from `identify.identify.parse_shebang`
    """"""
    with open(exe, 'rb') as f:
        if f.read(2) != b'#!':
            return ()
        try:
            first_line = f.readline().decode('UTF-8')
        except UnicodeDecodeError:
            return ()

        cmd = first_line.split()
        if cmd[0] == '/usr/bin/env':
            del cmd[0]
        return tuple(cmd)


def _run_legacy():
    if __file__.endswith('.legacy'):
        raise SystemExit(
            ""bug: pre-commit's script is installed in migration mode\n""
            'run `pre-commit install -f --hook-type {}` to fix this\n\n'
            'Please report this bug at '
            'https://github.com/pre-commit/pre-commit/issues'.format(
                HOOK_TYPE,
            ),
        )

    if HOOK_TYPE == 'pre-push':
        stdin = getattr(sys.stdin, 'buffer', sys.stdin).read()
    else:
        stdin = None

    legacy_hook = os.path.join(HERE, '{}.legacy'.format(HOOK_TYPE))
    if os.access(legacy_hook, os.X_OK):
        cmd = _norm_exe(legacy_hook) + (legacy_hook,) + tuple(sys.argv[1:])
        proc = subprocess.Popen(cmd, stdin=subprocess.PIPE if stdin else None)
        proc.communicate(stdin)
        return proc.returncode, stdin
    else:
        return 0, stdin


def _validate_config():
    cmd = ('git', 'rev-parse', '--show-toplevel')
    top_level = subprocess.check_output(cmd).decode('UTF-8').strip()
    cfg = os.path.join(top_level, CONFIG)
    if os.path.isfile(cfg):
        pass
    elif SKIP_ON_MISSING_CONFIG or os.getenv('PRE_COMMIT_ALLOW_NO_CONFIG'):
        print(
            '`{}` config file not found. '
            'Skipping `pre-commit`.'.format(CONFIG),
        )
        raise EarlyExit()
    else:
        raise FatalError(
            'No {} file was found\n'
            '- To temporarily silence this, run '
            '`PRE_COMMIT_ALLOW_NO_CONFIG=1 git ...`\n'
            '- To permanently silence this, install pre-commit with the '
            '--allow-missing-config option\n'
            '- To uninstall pre-commit run '
            '`pre-commit uninstall`'.format(CONFIG),
        )


def _exe():
    with open(os.devnull, 'wb') as devnull:
        for exe in (INSTALL_PYTHON, sys.executable):
            try:
                if not subprocess.call(
                        (exe, '-c', 'import pre_commit.main'),
                        stdout=devnull, stderr=devnull,
                ):
                    return (exe, '-m', 'pre_commit.main', 'run')
            except OSError:
                pass

    if distutils.spawn.find_executable('pre-commit'):
        return ('pre-commit', 'run')

    raise FatalError(
        '`pre-commit` not found.  Did you forget to activate your virtualenv?',
    )


def _rev_exists(rev):
    return not subprocess.call(('git', 'rev-list', '--quiet', rev))


def _pre_push(stdin):
    remote = sys.argv[1]

    opts = ()
    for line in stdin.decode('UTF-8').splitlines():
        _, local_sha, _, remote_sha = line.split()
        if local_sha == Z40:
            continue
        elif remote_sha != Z40 and _rev_exists(remote_sha):
            opts = ('--origin', local_sha, '--source', remote_sha)
        else:
            # ancestors not found in remote
            ancestors = subprocess.check_output((
                'git', 'rev-list', local_sha, '--topo-order', '--reverse',
                '--not', '--remotes={}'.format(remote),
            )).decode().strip()
            if not ancestors:
                continue
            else:
                first_ancestor = ancestors.splitlines()[0]
                cmd = ('git', 'rev-list', '--max-parents=0', local_sha)
                roots = set(subprocess.check_output(cmd).decode().splitlines())
                if first_ancestor in roots:
                    # pushing the whole tree including root commit
                    opts = ('--all-files',)
                else:
                    cmd = ('git', 'rev-parse', '{}^'.format(first_ancestor))
                    source = subprocess.check_output(cmd).decode().strip()
                    opts = ('--origin', local_sha, '--source', source)

    if opts:
        return opts
    else:
        # An attempt to push an empty changeset
        raise EarlyExit()


def _opts(stdin):
    fns = {
        'prepare-commit-msg': lambda _: ('--commit-msg-filename', sys.argv[1]),
        'commit-msg': lambda _: ('--commit-msg-filename', sys.argv[1]),
        'pre-commit': lambda _: (),
        'pre-push': _pre_push,
    }
    stage = HOOK_TYPE.replace('pre-', '')
    return ('--config', CONFIG, '--hook-stage', stage) + fns[HOOK_TYPE](stdin)


if sys.version_info &lt; (3, 7):  # https://bugs.python.org/issue25942
    def _subprocess_call(cmd):  # this is the python 2.7 implementation
        return subprocess.Popen(cmd).wait()
else:
    _subprocess_call = subprocess.call


def main():
    retv, stdin = _run_legacy()
    try:
        _validate_config()
        return retv | _subprocess_call(_exe() + _opts(stdin))
    except EarlyExit:
        return retv
    except FatalError as e:
        print(e.args[0])
        return 1
    except KeyboardInterrupt:
        return 1


if __name__ == '__main__':
    exit(main())
</code></pre>

<p>I solved the issue using the guess of @Anthony Sottile.
I installed GitKraken using the software manager and seems it can't get the git config envs.</p>

<p>To check it I tried to print the output of the script and in gitkraken was:</p>

<pre><code>GITKRAKEN_ASKPASS_SCRIPT_PATH=/app/extra/gitkraken/resources/app.asar.unpacked/src/js/redux/domain/AskPass/AskPassClient.js
GITKRAKEN_ASKPASS_SESSION_ID=5387....
GITKRAKEN_BINARY_PATH=/app/extra/gitkraken/gitkraken
GITKRAKEN_SOCKET_SERVICE_PORT=42179
GIT_ASKPASS=/app/extra/gitkraken/resources/app.asa.unpacked/src/js/redux/domain/AskPass/AskPass.sh
GIT_EDITOR=
GIT_TERMINAL_PROMPT=0
</code></pre>

<p>Instead when I try from cli the output was:</p>

<pre><code>GIT_AUTHOR_DATE=@1577959765 +0100
GIT_AUTHOR_EMAIL=simone...@gmail.com
GIT_AUTHOR_NAME=Simone Biffi
GIT_DIR=.git
GIT_EDITOR=:
GIT_INDEX_FILE=.git/index
GIT_PREFIX=
</code></pre>

<p>So after that I re-installed GitKraken using the command line with:</p>

<pre><code>wget https://release.gitkraken.com/linux/gitkraken-amd64.deb
sudo dpkg -i gitkraken-amd64.deb
</code></pre>

<p>Regards</p>
",3,8592000,,
41807965,6033289,1/23/2017 13:51,0,116,<ruby><git><githooks>,Cannot push git error: hook declined with remote ruby error,"<p>One day, I suddenly just cannot push to one of res (While pulling is fine). This is the error log</p>

<pre><code>Writing objects: 100% (42/42), 11.23 KiB | 0 bytes/s, done.
Total 42 (delta 34), reused 0 (delta 0)
remote: /usr/local/lib/ruby/gems/2.0.0/gems/bundler-1.6.2/lib/bundler/shared_helpers.rb:2:in `require':
 no such file to load-- rubygems (LoadError)
remote:         from /usr/local/lib/ruby/gems/2.0.0/gems/bundler-1.6.2/lib/bundler/shared_helpers.rb:2
remote:         from /usr/local/lib/ruby/gems/2.0.0/gems/bundler-1.6.2/lib/bundler/setup.rb:1:in `require'
remote:         from /usr/local/lib/ruby/gems/2.0.0/gems/bundler-1.6.2/lib/bundler/setup.rb:1
remote: error: hook declined to update refs/heads/master
To http://192.168.1.140:8000/chnn/application2.git
 ! [remote rejected] master -&gt; master (hook declined)
error: failed to push some refs to 'http://192.168.1.140:8000/chnn/application2.git'
</code></pre>

<p>I can also create a new project and push it to gitlab just fine. Only 1 project has this problem</p>
",0,6033289,,
40861546,6834680,11/29/2016 8:58,4,1297,<git><githooks><git-tag>,How to automatically rename tags using git hooks?,"<p>I want all the tags created by user to be verified (and renamed if necessary) to satisfy our rules.<br>
For example, if the user has created <code>""v1.2.3""</code> tag, it should be automatically renamed to <code>""v1.02.03""</code>.</p>

<p>Unfortunately, there is no git hook exists which is being invoked by <code>git tag</code> command.  </p>

<p>That's why I have implemented <code>pre-push</code> hook, which deletes old tag and creates new one (with modified name) on the same commit.</p>

<p>The problem is that <code>git push --tags</code> sends OLD TAGS to remote repo instead of NEW TAGS (despite that the old tags do not exist anymore after the pre-push hook has deleted them).</p>

<p>How to rename tags automatically on local repo before pushing them to remote repo?</p>

<hr>

<p><strong>EDIT :</strong><br>
I solved my problem by duplicating tag-renaming-logic to <code>post-receive</code> hook on server side.<br>
As for now, tag ""v1.2.3"" gets renamed to ""v1.02.03"" on client side by <code>pre-push</code> hook, but old tag name (""v1.2.3"") is being pushed to remote repo, and on remote repo ""v1.2.3"" gets renamed to ""v1.02.03"" again by <code>post-receive</code> hook.  Now both client and server have the tag renamed.  </p>

<p>Should I say that I'm unhappy with my solution?<br>
Pure-client-side solution is still welcome.</p>
",2,6834680,,
41826155,2144067,1/24/2017 10:46,1,712,<git><githooks><git-lfs>,git lfs pre-receive hooks to prevent unwanted files in repository,"<p>Is it possible to write a server side pre-receive hook to prevent large or binary files to be added to the repository via commits?</p>

<p>Locally I can control git-lfs behaviour by adding file types to a .gitattribute file via:</p>

<pre><code>    git lfs track ""*.zip""
</code></pre>

<p>This would cause that if a new zip file is added, it will be managed by git-lfs and not committed to the git object store.</p>

<p>git-p4 even allows me file size thresholds like:</p>

<pre><code>    largeFileCompressedThreshold = 1m
    largeFileThreshold = 50m
</code></pre>

<p>With multiple developers and developing environments it might happen, that one adds such a binary file without configuring git-lfs, hence such a file could be submitted to git directly.
I would like a server side hook which refuses such a commit and gives a meaningful message, so the developer can easily identify the problem.</p>

<p>Ideally this receive hook would use existing git functionality to parse e.g. .gitattributes instead of manually parsing all files which are being committed in a script.</p>
",0,2144067,,
4406069,180663,12/10/2010 5:47,6,1063,<git><heroku><git-svn><githooks>,Git email hook to include commit message and changed files,"<p>I set up the email hook for git in heroku. However, all i get is the message that something is pushed - i need both the commit message and the modified files.</p>

<pre><code>#what i now get in the email:
noreply@heroku.com to me, hermantamas

xxx@gmail.com deployed app
</code></pre>

<hr>

<pre><code>#what i need:
noreply@heroku.com to me, hermantamas

xxx@gmail.com deployed app:

""home page is now working""
Changed:
- index.html
- javascript.js
</code></pre>
",0,180663,,
42045850,405550,2/4/2017 21:32,14,493,<git><githooks><post-commit-hook>,"For every commit, create an equivalent compiled commit in a separate repo or branch","<p>I'm building sites using Jekyll, which compiles ERB, SASS, &amp;c. into plain HTML &amp; CSS.</p>

<p>After most commits, I'd like to compile the site and commit the compiled version in a separate repository or branch so that it can be pushed to a static server.</p>

<p>What is the best way to go about this?</p>

<p>I already have <a href=""https://stackoverflow.com/a/42045851/405550"">a solution</a>, but I was hoping someone might have a more elegant one.</p>
",0,405550,0,0
21995033,2105339,2/24/2014 17:44,1,1462,<python><git><python-2.7><hook><githooks>,Git post commit with python,"<p>Is it possible with a post commit hook to feed all the filename with path of each added or modified files to a python script?</p>
<p>I found some usefull library but they require to search in the repository.
like this one : <a href=""https://pythonhosted.org/GitPython/0.3.1/tutorial.html"" rel=""nofollow noreferrer"">https://pythonhosted.org/GitPython/0.3.1/tutorial.html</a>
I want git to automatically communicate those filenames to my script.</p>
<p>Thanks.</p>
<h1>EDIT</h1>
<p>Apparently I canget the last commit hash with :
git rev-parse --verify HEAD</p>
<p>Then I can get the file list of this commit with
git show --pretty=&quot;format:&quot; --name-only </p>
<p>however I only want the modified and added files, not the deleted ones.</p>
<h1>EDIT2</h1>
<p>Well I did not understood correctly what were git hooks.
Apparently I can put a python script in the hook folders and it will be executed.</p>
<p>All I have to do now is find a way to speak to git in bash from my python script to get my file list.</p>
<p>Forget this post.</p>
<h1>EDIT3</h1>
<p>Here are the commands I'm looking for:
getting the last commit hash :</p>
<pre><code>git log -n 1 HEAD --pretty=format:&quot;%H&quot;
</code></pre>
<p>output example :</p>
<pre><code>$ git log -n 1 HEAD --pretty=format:&quot;%H&quot;
42e6783eeda7ff56a02eab07f1ec4ba6e19212b6
</code></pre>
<p>getting the file list of this commit with information about their modification:</p>
<pre><code>git show --pretty=&quot;format:&quot; --name-status &lt;hash&gt;
</code></pre>
<p>output example :</p>
<pre><code>$ git show --pretty=&quot;format:&quot; --name-status 42e6783eeda7ff56a02eab07f1ec4ba6e19212b6
M       admin/flexAdmin/src/main/flex/business/AdminController.as
D       admin/flexAdmin/src/main/flex/linky/business/command/GetContenuFamilleATCommand.as
D       admin/flexAdmin/src/main/flex/linky/business/event/GetContenuFamilleATEvent.as
M       admin/flexAdmin/src/main/flex/model/ModelLocator.as
</code></pre>
",4,2105339,,
3270081,282882,7/17/2010 3:10,1,658,<ruby-on-rails><ruby><git><githooks>,git-commit-notifier with gmail,"<p>First of all you have to know I'm total Ruby noob :) </p>

<p>I installed git-commit-notifier (<a href=""http://github.com/ilozka/git-commit-notifier"" rel=""nofollow noreferrer"">http://github.com/ilozka/git-commit-notifier</a>) on my system (Ubuntu 10.04) and followed all the installation instructions but every time I push to my git repository I get this error message:</p>

<pre><code>remote: Sending mail...
remote: /usr/lib/ruby/1.8/net/smtp.rb:944:in `check_auth_response': 530 5.7.0 Must issue a STARTTLS command first. n20sm12555550ibe.5 (Net::SMTPAuthenticationError)
remote:     from /usr/lib/ruby/1.8/net/smtp.rb:735:in `auth_plain'
remote:     from /usr/lib/ruby/1.8/net/smtp.rb:727:in `send'
remote:     from /usr/lib/ruby/1.8/net/smtp.rb:727:in `authenticate'
remote:     from /usr/lib/ruby/1.8/net/smtp.rb:568:in `do_start'
remote:     from /usr/lib/ruby/1.8/net/smtp.rb:527:in `start'
remote:     from /usr/lib/ruby/1.8/net/smtp.rb:465:in `start'
remote:     from /var/lib/gems/1.8/gems/git-commit-notifier-0.7.2/bin/../lib/emailer.rb:42:in `perform_delivery_smtp'
remote:     from /var/lib/gems/1.8/gems/git-commit-notifier-0.7.2/bin/../lib/emailer.rb:96:in `send'
remote:     from /var/lib/gems/1.8/gems/git-commit-notifier-0.7.2/bin/../lib/commit_hook.rb:55:in `run'
remote:     from /var/lib/gems/1.8/gems/git-commit-notifier-0.7.2/bin/../lib/diff_to_html.rb:285:in `each_with_index'
remote:     from /var/lib/gems/1.8/gems/git-commit-notifier-0.7.2/bin/../lib/commit_hook.rb:51:in `each'
remote:     from /var/lib/gems/1.8/gems/git-commit-notifier-0.7.2/bin/../lib/commit_hook.rb:51:in `each_with_index'
remote:     from /var/lib/gems/1.8/gems/git-commit-notifier-0.7.2/bin/../lib/commit_hook.rb:51:in `run'
remote:     from /var/lib/gems/1.8/gems/git-commit-notifier-0.7.2/bin/git-commit-notifier:13
remote:     from /var/lib/gems/1.8/bin/git-commit-notifier:19:in `load'
remote:     from /var/lib/gems/1.8/bin/git-commit-notifier:19
</code></pre>

<p>I tracked the error to emailer.rb script. Specifically line:</p>

<pre><code>Net::SMTP.start(settings['address'], settings['port'], settings['domain'],                                                                                                                             
                settings['user_name'], settings['password'], settings['authentication']) do |smtp|
</code></pre>

<p>The parameters seemed to be passed correctly (i have checked that).</p>

<p>My config script looks like this:</p>

<pre><code># select the delivery method: smtp or sendmail
delivery_method: smtp

# settings for the smtp server
smtp_server:
    address: smtp.gmail.com
    port: 587
    domain: mydomain
    user_name: redmine@mydomain.com
    password: xxxxxx
    authentication: plain
    enable_tls: true
</code></pre>

<p>Does anyone know how I can solve this issue? I have Redmine on the same server and it works fine. No problems with email sending.</p>

<p>Thank you</p>
",0,282882,0,0
41094687,7052119,12/12/2016 5:30,3,98,<git><hook><gitlab><githooks>,"Git Allow ""push to master"" access to particular user in LDAP account","<p>I have a pre-push hook enabled for a repository. </p>

<p>Now, I need to exclude one particular user from the hook restriction. and allow only that user to push.</p>

<p>May I know, is there any way to achieve this?</p>

<p>Note: I can simply use --no-verify to bypass the check, but I need to enforce this to add more security to the repository. </p>

<p>any suggestions?</p>
",0,7052119,0,0
22100581,21640,2/28/2014 16:29,45,21167,<git><github><githooks><github-enterprise>,github server-side git hooks (i.e. pre-commit and post-commit),"<p>I've looked around the answers on SO, and the web, and I can't see anything on how to set up a server-side git hook on github (as opposed to webhooks). Is there a way to do this?</p>

<p>Or alternatively, is there a way to set it up so that .git/hooks is a symlink to a part of the working tree <em>at the time of cloning</em>?</p>

<p>I should add that this is an internally-hosted github server.</p>
",0,21640,0,0
22107785,3154475,2/28/2014 23:30,4,1895,<git><diff><githooks><git-diff><beyondcompare>,Using git hooks to create a diff report for every file that has changed for the current commit,"<p>I'm trying to create a git hook to create a diff report for every file that has changed between my code and the server's code.</p>

<p>Most solutions I have seen say to use git's diff command to create the report, but I need this done for every file that has changed AND I need it to be created in beyond compare specifically as a side by side HTML report.</p>

<p>So, for every file that has changed, I would need to call beyond compare to create some <em>file</em>.html detailing what has changed. If 63 files changed, I would want 63 html files showing a diff of the changes.</p>

<p>I have a rough idea of how to automate beyond compare to create the diff, I just don't know how I'd get the paths of the files that have changed along with the paths to the local cache of the remote files that have changed. </p>

<p>Has anyone done anything like this?</p>

<p>EDIT - I wanted to use githooks because I wanted to have the diff files generated automatically for every commit without anyone having to think about it. This is part of our check in process now (as dictated by management) and it's tedious to do manually for every file that has changed.</p>
",1,3154475,0,0
22117489,1007680,3/1/2014 17:09,4,332,<php><github><ssh><githooks><git-pull>,Sync University group project changes from GitHub repo to personal server,"<p>I'm trying to setup a git development workflow for a group University project built with PHP.</p>

<p>Over the past week, I've been helping each member of the team configure their machines so we are able to collaborate code to the main repository. Each developer is now able to successfully sync code between their machines and the remote repository hosted on GitHub, no matter which OS they're using:</p>

<p><img src=""https://i.stack.imgur.com/iSACi.png"" alt=""enter image description here""></p>

<p>The next part of setting up our workflow is getting an apache server to pull our changes from the GitHub repository. This is so everyone (even the non coders in the team) can see changes in live time and test our system:</p>

<p><img src=""https://i.stack.imgur.com/wNfUf.png"" alt=""enter image description here""></p>

<p>I discovered a cool feature offered by GitHub called <a href=""http://developer.github.com/v3/repos/hooks/"" rel=""nofollow noreferrer"">git hooks</a>. This should easily allow us to integrate such a feature into our workflow. I went ahead to install git on the server, setup SSH keys with GitHub and create a new hook. </p>

<p>I then added this PHP code into the file that the hook calls:</p>

<pre><code>&lt;?php 
    $output = shell_exec('git pull origin master 2&gt;&amp;1');
    echo ""&lt;pre&gt;$output&lt;/pre&gt;"";
?&gt;
</code></pre>

<p>Now if I call this code from an SSH terminal session with <code>php git_pull_post_hook.php</code> , the latest changes (from any of the developers in the team) will successfully sync. However, whenever the GitHub hook or anyone else accesses the php file over HTTP, nothing happens.</p>

<p>After hours of googling, each problem has lead to another. I've changed file owner permissions as other threads have suggested, but now this is the error I'm getting from the script output (over HTTP):</p>

<pre><code>Could not create directory '/var/www/.ssh'.
Host key verification failed.
fatal: The remote end hung up unexpectedly
</code></pre>

<p>I'm guessing that <code>www-data</code> does not have sufficient privileges to access the SSH key within the root folder of our server, so that's what's causing all of these errors... But the <code>/var/www/.ssh</code> directory does in fact exist on the server, so I can't understand what's going wrong here.</p>

<p>Sadly nobody else in the group knows anything about this type of thing, nor are there any good guides for setting up this. Any help/pointers would be greatly appreciated!</p>

<p>Update:</p>

<p>The guide that VonC posted seems to be a suitable solution for what we need to do. I tried deleting the .ssh folder and following each step exactly as it says in that guide, but now we get the following errors stating that there is a permissions error:</p>

<p><code>No directory, logging in with HOME=/</code></p>

<pre><code>root@xxx:~# mkdir /var/www/.ssh
root@xxx:~# chmod 0700 /var/www/.ssh
root@xxx:~# chown -R www-data:www-data /var/www/.ssh
root@xxx:~# su - www-data -c ""ssh-keygen -t rsa""
No directory, logging in with HOME=/
Generating public/private rsa key pair.
Enter file in which to save the key (/var/www/.ssh/id_rsa): 
Could not stat /var/www/.ssh: Permission denied
Enter passphrase (empty for no passphrase): 
Enter same passphrase again: 
open /var/www/.ssh/id_rsa failed: Permission denied.
Saving the key failed: /var/www/.ssh/id_rsa.
root@xxx:~# chmod 0600 /var/www/.ssh/id_rsa
chmod: cannot access `/var/www/.ssh/id_rsa': No such file or directory
root@xxx:~# chmod 0600 /var/www/.ssh/id_rsa.pub
chmod: cannot access `/var/www/.ssh/id_rsa.pub': No such file or directory
</code></pre>
",0,1007680,0,0
22858850,1391026,4/4/2014 9:29,7,6333,<git><formatting><githooks><pre-commit-hook>,git pre-commit hook code formatting with partial commit?,"<p>is there a way to have a pre-commit hook which auto-formats the code (for
example with <code>astyle</code>) but does <em>not</em> destroy a partial commit?</p>

<p>Workflow:</p>

<pre><code># edit a file.txt
git add -p file.txt
# add one chunk, but not another

git commit -m 'a message'
[PRE_COMMIT_HOOK] Formatting source code

git status
# the ""another"" chunk is still not added
</code></pre>

<p>My problem is, that if you do a <code>git add</code> inside the pre-commit hook, which is
required after the script formatted the source code, adds the ""another"" chunk,
too. But I don't want that.</p>

<p>Is there a way to achieve this?</p>
",0,1391026,0,0
22120694,2902784,3/1/2014 21:37,1,819,<maven-plugin><gitlab><githooks>,GitLab hook on push event,"<p>Hi anyone have a some script may be for example how I can create hook in GitLab repository to automatically build maven war archive from project after each push request?
Please post some example of script!
Thanks in advance!</p>
",0,2902784,0,0
42099110,4178623,2/7/2017 20:15,0,37,<node.js><npm><githooks>,"How do I use NPM to check packages locally, only current vs wanted. Don't to try and fetch latest version","<p>I'm using 'npm oudated' command, the only problem is that its a bit slow because it actually figures out the latest version of npm packages as well.</p>

<p>Ideally I just want to know if there is a missing package locally and run npm install if there is a missing packages.</p>

<p>I created this script as a post-checkout githook, is there a better way to check if you are missing packages that are in your package.json?</p>

<pre><code>#!/usr/bin/env node

var exec = require('child_process').exec,
    missingPackage = false;

return new Promise((resolve) =&gt; {
        exec('npm outdated --json', (error, stdout, stderr) =&gt; {
            resolve(JSON.parse(stdout));
        })
    })
    .then((packageJson) =&gt; {
        for (const x of Object.keys(packageJson)) {
            if (packageJson[x].location === '' ) {
                missingPackage = true;
            }
        }
    })
    .then(() =&gt; {
        if (missingPackage) {
            console.log('\nHello, you are missing some packages so we are going to install them....');
            exec('npm install', (error, stdout, stderr) =&gt; {
                console.log(stdout);
            })
        }
    })
</code></pre>
",0,4178623,,
22869859,1179067,4/4/2014 17:58,2,428,<windows><git><githooks><tortoisegit>,Git pre-commit hook not adding file on Windows,"<p>I have a pre-commit hook that's running a mysqldump to keep track of MySQL.
I'm trying to add that dump to the commit, but for some reasons it won't.</p>

<p>The code:</p>

<pre><code>#!/bin/sh

rm -f database.sql

exec ""C:\Program Files\MySQL\MySQL Server 5.5\bin\mysqldump.exe"" --skip-comments -u root --password=password my-database &gt; database.sql

git add database.sql
</code></pre>

<p>The file is created, but not added to the commit. 
Running TortoiseGit on Windows 7.</p>
",2,1179067,,
42116627,2298137,2/8/2017 15:03,0,11,<windows><git><githooks>,git when you push your changes to the remote are the files under .git updated?,"<p>So I have added a hook file into the .git/hooks folder called post-checkout.</p>

<p>The hook is working, but when I do a git status I don't see the new file. Also if I try to add the file with <code>git add .git/hooks/post-checkout</code> it gives an error.</p>

<p>I assume that means that the .git folder is local information only? - but I want to share my hooks with the remote repo. Is that possible?</p>
",0,2298137,,
3563904,430422,8/25/2010 7:57,15,7205,<git><githooks>,git hook post-merge - error: cannot run,"<p>To trigger a git hook after a pull i made a post-merge hook.
The script looks like this:</p>

<pre><code>#!/bin/sh
git log &gt; gitlog.txt
</code></pre>

<p>The file is called 'post-merge' and has the same owner as the one that runs the pull command. Also it has the right permissions : 755.</p>

<p>When u do i git pull [remote] master i get this error:</p>

<pre><code>error: cannot run .git/hooks/post-merge: No such file or directory
</code></pre>

<p>The post-merge file is in the .git/hooks folder. </p>
",0,430422,0,0
23071892,334966,4/14/2014 23:03,0,102,<git><hook><githooks>,"Within an ""update"" git hook, can I cd to a clone, `git fetch`, then `git checkout` the new commit?","<p>In an ""update"" git hook, I'm trying to cd to a clone of the repo, run <code>git fetch</code>, and <code>git checkout</code> the new commit. But I don't think that commit exists yet. Is there any way to accomplish this? I tried doing <code>git archive [sha]</code> but it takes too long, considering how often this hook will run in our company.</p>

<p>Should I checkout the base reference of the update, then apply a generated patch or something?</p>
",5,334966,,
4950800,497883,2/9/2011 21:38,8,14594,<git><curl><hudson><githooks><git-post-receive>,Git post-receive hook not working,"<p>My setup is a windows XAMPP server, with cURL enabled, and Git and Hudson installed. Hudson polls Git every minute to look for changes, and if it finds them, it creates a build. I use this build as my testing server. This works fine.</p>

<p>I would like to set up a post-receive hook on my central remote repository that runs the force build function of Hudson.</p>

<p>I've created a post-receive file called ""post-receive"" in the hooks directory in my central Git repository, the one that is pushed to from the developers' local branches. They each push to their own branch on the central repository. I want to run the post-receive build immediately after every push, instead of having Hudson poll Git every minute.</p>

<p>When I open a shell to the remote server and run ""post-receive"" in the hooks folder, it runs. It just isn't being called when people push to it from their local repository copies to the central one.</p>

<p>Maybe I'm not explaining this right, but it's how I understand Git.</p>

<p>The post-receive code is two lines:</p>

<pre><code>#!/bin/sh
curl http://myserver.com:8080/hudson/job/myjobname/build?token=mytoken
</code></pre>

<p>Again, when I open a shell and run this, it works, but when someone pushes to it, nothing happens, until a minute or less goes by, Hudson realizes that Git was changed, and then it builds.</p>

<p>I am happy to clarify if need be. Any help is greatly appreciated.</p>

<p>EDIT: After playing around with it, I feel like maybe post-receive isn't executing because refs aren't being updated of something? The git documentation says</p>

<blockquote>
  <p>It executes on the remote repository once after all the refs have been updated.</p>
</blockquote>

<p>Does this mean if nothing updates, it won't execute? And if so, I'm pretty sure things are updating anyway so it shouldn't apply.</p>

<p>Here's my process:
Make edits locally.
Commit edits.
Push from my HEAD to the remote branch called 'mybranch' (not the master branch, which is checked out)
This is the point at which I want my hook to execute.</p>
",5,497883,0,0
42291788,4620609,2/17/2017 7:23,6,3115,<git><github><githooks><git-push>,How to limit pushing operation to allow only commits that are signed with GPG in github,"<p>I've a Github repository we share for our development. To ensure the integrity we decided to sign our commits and tags with GPG.</p>

<p>Now, how do I prevent developers from pushing unsigned commits to our repository in Github and also white-list GPG public keys to allow pushing commits singed with white-listed public keys </p>

<p>I checked out some pre-pushing hooks but didn't work out the way I described above and here it is.</p>

<pre><code>remote=""$1""
url=""$2""

z40=0000000000000000000000000000000000000000

IFS=' '
while read local_ref local_sha remote_ref remote_sha
do
    if [ ""$local_sha"" = $z40 ]
    then
    # Handle delete
    else
    if [ ""$remote_sha"" = $z40 ]
    then
        # New branch, examine all commits
        range=""$local_sha""
    else
        # Update to existing branch, examine new commits
        range=""$remote_sha..$local_sha""
    fi

    # Check for WIP commit
    commit=`git rev-list -n 1 --grep '^WIP' ""$range""`
    if [ -n ""$commit"" ]
    then
        echo ""Found WIP commit in $local_ref, not pushing""
        exit 1
     fi
    fi
 done
exit 0
</code></pre>

<p>How can I get this done? Any notion or examples would be highly appreciated.</p>
",2,4620609,0,0
42295050,692410,2/17/2017 10:07,12,11591,<git><githooks>,Difference between -C and --git-dir when manipulating repo in git hook,"<p>I am writing a git post-receive hook that will clone a separate repo as part of a deployment. It clones the repo to a certain folder and uses the <code>-C</code> option in subsequent git commands to set the directory to that of the checked out repo (as documented in the <a href=""https://www.kernel.org/pub/software/scm/git/docs/git.html"" rel=""noreferrer"">man page</a>).</p>

<p>The hook works as expected when run manually from the command line, however when the hook is run by git (ie when a push is received) the command fails with <code>fatal: Not a git repository: '.'</code>. When I swap out the <code>-C</code> for a <code>--git-dir</code> it works.</p>

<p>This is fairly simple to reproduce, create a bare repo <code>git init --bare</code> and make an executable hook with the contents:</p>

<pre><code>#!/bin/bash
set -xe

SOME_REPO_URL=???? # Some repo that is not this one
repopath=/tmp/somerepo

git clone $SOME_REPO_URL $repopath

# 1: This fails when run through the git hook
git -C $repopath checkout -b somebranch HEAD~1

# 2: This works every time
# git --git-dir $repopath/.git checkout -b somebranch HEAD~1
</code></pre>

<p>Running the script from the command line will work as expected, but when you push to the repo the hook will fail. Commenting <code>1</code> and uncommenting <code>2</code> will work in both cases.</p>

<p>I can't find any documentation that would indicate that this is intended behaviour - an explanation would be appreciated.</p>

<p>This is git 2.7.4 on Ubuntu 16.04.</p>
",2,692410,0,0
3722299,162349,9/15/2010 22:21,3,2818,<git><gitosis><githooks><gitweb><post-update>,Manage http access to git repositories using gitosis,"<p><strong>[Update 9/16/2010]</strong></p>

<p>After looking into this last night, I realized that my original question was really asking 2 separate things:</p>

<p>1) Is it possible to set the post-update hook for all remote repositories created by gitosis (i.e. not have to manually perform <code>mv hooks/post-update.sample hooks/post-update</code> for after creating a repository in gitosis)  This is necessary for cloning via HTTP to work (dumb HTTP clients rely on the fact that <code>git update-server-info</code> is called from within the post-update hook).</p>

<p>2) Once the repository is accessible via HTTP, is it possible to turn access on and off using an option in gitosis.conf (something similar to <code>daemon = no</code> or <code>gitweb = yes</code>)</p>

<p><strong>--- Solution to question 1 ---</strong></p>

<p>It turns out that Git uses templates to create new repositories with the <code>git init</code> command.  By performing <code>mv hooks/post-update.sample hooks/post-update</code> within the template directory, all future calls to <code>git init</code> on my server will have the post-update hook configured correctly.  (On OSX the template directory is <code>/opt/local/share/git-core/templates/</code> for those that care)</p>

<p>The other requirement for this to work is turning on Apache rewrite rules so that the HTTP clone URL for the repository looks like <code>http//git.example.com/repo.git</code></p>

<p>My rewrite rules in <code>/etc/apache2/extra/httpd-vhosts.conf</code> look like this:</p>

<pre><code># turning on mod rewrite
RewriteEngine on

# make the front page an internal rewrite to the gitweb script
RewriteRule ^/$ /cgi-bin/gitweb.cgi [L,PT]

# make access for ""dumb clients"" work
RewriteRule ^/(.*\.git/(?!/?(HEAD|info|objects|refs)).*)?$ /cgi-bin/gitweb.cgi%{REQUEST_URI} [L,PT]
</code></pre>

<p><strong>--- Still looking for a solution to question 2...HELP! :) ---</strong></p>

<p>Now that HTTP cloning works for all my repositories, I'm wondering if there is a way to manage HTTP access control using gitosis.  Setting <code>daemon = no</code> and <code>gitweb = no</code> turns off git-daemon and gitweb access for the repository, but since the Apache rewrite rules are still on, <strong><em>the repo is still clone-able</em></strong> at <code>http://git.example.com/repo.git</code>.  Any ideas on how to use gitosis to manage this?</p>

<p><strong>[The question I originally posted]</strong></p>

<p>Is it possible to manage http access to git repositories using gitosis?  For example, in gitosis.conf I can manage access for gitweb and git-demon using:</p>

<pre><code># Allow gitweb to show this repository.
gitweb = yes

# Allow git-daemon to publish this repository.
daemon = no
</code></pre>

<p>I'm currently able to clone my repository by issuing the following command:</p>

<pre><code>$ git clone git://git.example.com/repo.git
</code></pre>

<p>However, when I issue the following command:</p>

<pre><code>$ git clone http://git.example.com/repo.git
</code></pre>

<p>I get the following error message:</p>

<pre><code>fatal: http://git.example.com/repo.git/info/refs not found: did you run git update-server-info on the server?
</code></pre>

<p>However, if I log into my server and run the following from within repo.git:</p>

<pre><code># From http://progit.org/book/ch4-5.html
$ cd project.git
$ mv hooks/post-update.sample hooks/post-update
$ chmod a+x hooks/post-update
$ git update-server-info
</code></pre>

<p>then cloning via http works fine.  </p>

<p>Is there any way to manage http access to the repository from within gitosis?</p>
",1,162349,0,0
22379356,3175898,3/13/2014 12:57,5,159,<git><ssh><githooks>,Set up updating source code on server by Using GitHub’s Service Hooks,"<p>I followed <a href=""http://www.thisprogrammingthing.com/2013/automatically-updating-your-website-using-githubs-service-hooks/"" rel=""nofollow noreferrer"">this article</a></p>

<p>I tried using this command <code>ssh -T git@github.com</code> and I received the feedback: <code>Hi Tran! You've successfully authenticated, but GitHub does not provide shell access.</code> which shows that it's OK with my ssh key and GitHub account.</p>

<p>This's my repository's Webhook image:</p>

<p><img src=""https://i.stack.imgur.com/clWNj.png"" alt=""enter image description here""></p>

<p>I think the problem is the github.php file with the content:</p>

<pre><code>&lt;?php `git pull`;?&gt;
</code></pre>

<p>I tried with replace ` with ' (single quote) but it's the same. After I push, I didn't see any change on my server.</p>
",1,3175898,0,0
60080701,475818,2/5/2020 17:03,7,4087,<bash><git><githooks><macos-mojave>,Git hooks: '.git/hooks/pre-commit': Operation not permitted,"<p>This is all on OS X Mojave.</p>

<p>I’m trying to block myself from mistakenly making commits to the master branch, because that is a thing I do a little too often, using <a href=""https://stackoverflow.com/a/40465455/475818"">the <code>pre-commit</code> Git hook from this SO answer</a>, changed slightly because I use bash instead of sh.  Every time I tried to run it, though, I got the following:</p>

<pre><code>fatal: cannot exec '.git/hooks/pre-commit': Operation not permitted
</code></pre>

<p>I checked the permissions of the <code>.git</code> and <code>.git/hooks</code> directories.  Both are <code>drwxrwxrwx</code>.  The permissions on <code>pre-commit</code> itself are:</p>

<pre><code>-rwxr-xr-x@  1 emeyer  staff    25 Feb  5 11:50 pre-commit
</code></pre>

<p>…which is the same as the <code>pre-commit.sample</code> file I copied over to <code>pre-commit</code> and then replaced the contents.  I tried <code>chmod +w</code> but that didn’t fix it.</p>

<p>I decided to simplify my testing and replaced the contents of <code>pre-commit</code> with the following:</p>

<pre><code>#!/bin/bash

echo ""Test""
</code></pre>

<p>I still got the above-referenced <code>Operation not permitted</code> error.  I also tried it with <code>#!/bin/sh</code> like in the SO answer’s example; same result.</p>

<p>If I try running the script directly, by typing <code>./pre-commit</code> from the command line, I get a slightly different error: <code>-bash: ./pre-commit: /bin/bash: bad interpreter: Operation not permitted</code>.  The error is consistent whether I use <code>/bin/bash</code>, <code>/bin/sh</code>, <code>/usr/local/bin/bash</code>, or <code>/usr/local/bin/sh</code>.</p>

<p>Googling, Binging, and SO-searching didn’t get me an answer that worked, so I’m asking here how to allow the operation, or whatever is needed.</p>
",3,475818,,
41368791,9161,12/28/2016 19:50,1,254,<git><githooks><git-commit><pre-commit-hook>,"How can I tell if git was executed with the ""-a"" flag in a pre-commit hook?","<p>I've got a git pre-commit hook which does linting. When it's invoked, it loops over the staged files and runs a linter on them. This works great.</p>

<p>However, when you run <code>git commit -am 'Foo'</code> it runs without having any staged files. How can I tell if it was invoked with <code>-a</code> or the <code>--all</code> flag? Is there an easier way to get the files which will be stored in git?</p>
",3,9161,,
23108848,1469208,4/16/2014 12:00,2,7581,<git><bash><gerrit><githooks>,Unable to install Gerrit's commit-msg hook; authentication seems fine,"<p>I've just upgraded my Git tools to newest versions (<em>TortoiseGit 1.8.8.0</em>, <em>PuTTy 0.63</em> and <em>Git Bash for Windows 1.9.0</em>) and applied <a href=""https://code.google.com/p/tortoisegit/issues/detail?id=1880#c25"" rel=""nofollow"">fix for Git Bash hanging forever after <code>git pull</code></a>. I followed my inner company instructions on cloning new local repository and I failed on installing Gerrit's <code>commit-msg</code> hook.</p>

<p>After executing <code>scp -p -P 29418 [USERNAME]@[HOST]:hooks/commit-msg .git/hooks/</code> in Git Bash, I'm getting error <code>Permission denied (publickey)</code>. However, everything seems to be fine with my SSH keys and other components, as I can <code>git pull</code> / <code>git push</code> without any problems Git Bash does not objects anything about missing or incorrect authentication and proceeds with all other operations, that requires authentication.</p>

<p>What can be causing this strange error (is this something with my local computer or Gerrit installation)? How to solve this problem? And -- the most important (or most curious) -- how it is possible, that authentication fails on installing <code>commit-msg</code> hook, while works fine on pushing / pulling / other commands requiring authentication?</p>

<p>I managed to find an ugly workaround, by copying <code>commit-msg</code> from another repository (it was there for some time, before all these problems started to appear, as I can't install / overwrite <code>commit-msg</code> hook in this repo as well -- for the same reasons). But I'd like to know, what is happening here or what am I missing about this case?</p>
",2,1469208,0,0
42487112,4861303,2/27/2017 13:33,0,338,<git><bash><commit><githooks><pre-commit-hook>,Change file in project when git commit with specified message,"<p>What is best way to provide that some of the git hooks change file in project when i make commit with specified message? 
For example, when i do <code>$git commit -m ""MODIFY""</code> i want to hook's script modify my file in a certain way. Modification of file is not problem. Problem is how to make git hook to recognize specific message as trigger for modification.</p>
",3,4861303,,
3759141,230214,9/21/2010 9:56,4,1399,<git><githooks>,Send mail after git commit not push,"<p>I need to send email with diff after commit to the repository. I know how to send emails after push, but it is not working for commits.</p>

<p>For pushes I've created hook post-receive that gets parameters   . But the hook post-commit does not recieve any parameters and because of that I can't use my script that sends mail.</p>

<p>Maybe there is a way to get info about newrev and refname in post-commit hook, or there is some other way to send mail after commit?</p>
",2,230214,0,0
42497060,,2/27/2017 22:36,1,495,<mysql><git><githooks><pre-commit-hook>,Git Pre-Commit Hook Adding File After Commit,"<p>I am attempting to dump a mysql database and add the .sql dump file to the staging area using a pre-commit hook so it can then be included in the commit (on Windows Server 2012 R2/IIS).  The following code dumps the database nicely, but after I commit it still shows the be.sql file in the staging area...sometimes(?) - it seems to be adding the file to staging AFTER committing(?).  This is a pre-commit hook so I have no idea why it may be adding the file after the commit takes place:</p>

<pre><code>#!/bin/bash

# Dump Database
/c/Program\ Files\ \(x86\)/MySQL/MySQL\ Server\ 5\.7/bin/mysqldump.exe -u root --skip-extended-insert be &gt; /c/inetpub/wwwroot/directory/be/be.sql

# Add Database
cd /c/inetpub/wwwroot/directory/be
git add be.sql
</code></pre>

<p>The behavior is a bit strange - I will see be.sql is still in the staging area so I will make a commit.  If I git status afterwards the tree is clean.  If I commit again and git status it will display the be.sql file in the staging index as modified (I didn't modify it).  And back and forth it goes.  I just want it to dump the .sql file, add the .sql file to the staging index, THEN commit so every time the staging index is clean.  Any ideas as to why this is happening would be greatly appreciated.</p>
",5,,,
41497736,3281553,1/6/2017 1:56,1,1206,<git><githooks>,How do i restrict commit messages for dev/master branches only,"<p>I am trying to use GIT hooks to restrict commit message formats (e.g. ""<code>must start with #</code>"") on my main branches only: dev, master. I do want to allow contributors to have their own custom commit messages on their private branches.</p>

<p>Example: If someone has X commits on their private branch ""<code>commit1""....""commitX</code>"", can I use hooks to block them from merging to or into <code>dev</code>/<code>master</code> branches telling them that only commits starting with ""<code>#</code>"" are allowed?</p>
",3,3281553,0,0
60618385,13038525,3/10/2020 13:12,0,309,<bash><shell><githooks>,Trap doesn't exit the loop,"<p>I'm trying to do a cleanup using <code>trap</code> command. The <code>safe_cancel</code> function is being called when I hit a <code>Ctrl + C</code> but the script isn't being exited. I have to use <code>Ctrl + Z</code> to suspend the script and then <code>kill</code>.</p>

<p>The <code>foo</code> is another script I have in my PATH which returns an <code>exit 1</code> if it receives an invalid argument.</p>

<p>What am I lacking or doing wrong in this script?</p>

<pre><code>#!/bin/bash

safe_cancel () {
    echo ""Cancelling...""
    # do some cleanup here
    exit 1
}

trap safe_cancel 1

while true; do
    read -p ""Choose an option: "" someOption &lt; /dev/tty
    foo $someOption
    if [[ $? == 0 ]]
    then
        break
        exit 0
    fi
done
</code></pre>

<p><strong>Additional details:</strong></p>

<p>I'm writing this script for a Git hook. Apparently, git hooks aren't exactly expecting a standard in/out so I have to explicitly use <code>/dev/tty</code> </p>

<p><strong>Edit:</strong></p>

<p>When using this as part of a git hook, I'm receiving the error <br/>
<code>read: read error: 0: Input/output error</code> <br/>
and it's an infinite loop</p>
",4,13038525,,
23330206,2112489,4/27/2014 23:14,2,109,<git><githooks>,"post-receive hook -- if incoming file type *.cgi, then set permission to 755","<p>Every time I modify a *.cgi file locally, the 755 permissions on the remote server get removed after a push to that remote server.  Is this best handled with additional code in the post-receive hook, e.g., -- if file type *.cgi, then set permission to 755.  Or, is there a better way to handle this?  If a few additional lines of code in the post-receive hook will do the job, an example would be greatly appreciated.</p>

<pre><code>#!/bin/sh
GIT_WORK_TREE=/home/lawlist git checkout -f
</code></pre>

<hr>

<p><strong>EDIT</strong> (April 27, 2014):  I've discovered that by setting the desired permissions on a local machine (OSX box) prior to pushing to the remote server (Linux), the permissions are set accordingly on the remote server.  This may be an acceptable answer to the question, but there may also be circumstances where a user may not want permissions set on the local machine, so I'm going to think about this some more and examine some <code>bash / shell</code> code that could be used with the <code>post-receive</code> hook before I post an answer.  Essentially, the <code>bash / shell</code> script would need to see if a file already exists and what permissions have been assigned, and restore those permissions after the updated push has occurred.</p>
",1,2112489,,
12638131,26943,9/28/2012 10:21,2,620,<git><githooks>,Git - How to reject commits containing tabs on origin,"<p>Can someone share a ""origin"" side hook that checks if the received commit introduces a wrong whitespace character (in my case tab) and rejects that push? </p>

<p>I can't do it pre-commit because I have people on the team who are, well... oh, nevermind. ;)</p>
",0,26943,,
47828490,8655006,12/15/2017 8:32,0,67,<git><git-branch><git-bash><githooks>,Wrong date come in pre-receive hook,"<p>I trying to find the working branch name by using git command. Of course, I can able to get the proper branch name in my local (windows) machine. If I use the same command in pre-receive hook file means it prints only <code>master</code>. But in local I get the branch name where I have working.</p>

<p>command I using to get the branch is </p>

<pre><code>#!/usr/bin/env bash

echo `git rev-parse --abbrev-ref HEAD`

echo `git symbolic-ref --short HEAD`

echo  `git branch | sed -n '/\* /s///p'`

echo `git status | head -1`

echo `git describe --all`
</code></pre>

<p>It is baffling! Any one suggest a correct way to get the working branch name in git hook file (<code>pre-receive</code> hook)</p>
",0,8655006,,
12643603,535328,9/28/2012 16:11,2,1697,<git><cygwin><githooks>,Unable to symlink to the .git directory,"<p>This is probably something silly, but searching around I haven't been able to find the answer.
I'm trying to setup pre-commit hooks for my git project in a way that the scripts can be versioned along with the source.</p>

<p>It seemed like symlinks are supported and the way to go for this.  When I try to ln with anything in the .git directory I get the error ""No such file or directory"".  Is there something weird about the way the .git directory is setup?  I'm doing this through cygwin on Windows right now, in case that's pertinent.</p>

<p>For example, the script I'm using to setup the symlinks looks like:</p>

<pre><code>#/bin/bash

HOOK_NAMES=""pre-commit post-commit""
THIS_SCRIPT_DIR=$(dirname $0)
HOOK_DIR=$THIS_SCRIPT_DIR/../.git/hooks

for hook in $HOOK_NAMES; do
    ln -s -f $THIS_SCRIPT_DIR/git-hooks/$hook $HOOK_DIR/$hook
done
</code></pre>

<p>Thanks,</p>

<p>====</p>

<p>Followup: This does appear to be an issue with Cygwin, though I haven't been able to find documentation that explains it.  This works fine on Linux and OS X.  Cygwin is having issues creating symlinks in an implicitly hidden folder (. prefixed).  If anyone knows why I'll happily tag that explanation as an answer.</p>
",0,535328,,
30282456,1438339,5/17/2015 1:31,0,297,<git><githooks><git-post-receive>,Why are Git post-receive hooks typically in bare repos?,"<p>Most mentions of post-receive hooks that I have seen are set up in bare repos. Why is this?</p>

<p>If I only want pushes to the <code>master</code> branch to get deployed to my <code>public_html</code> folder, and all of my pushes are going to a bare repo with a post-receive hook, doesn't that mean that all of my non <code>master</code> pushes are not backed up on the server anywhere?</p>

<p>For example, say I have the setup mentioned above where I have a bare repo set up on my server with a hook that deploys to my live site folder. I go into development of a new feature for a month constantly pushing to a feature branch. Then one day (having not pushed to master yet) my local machine crashes/burns. All of my work in that feature branch is seemingly lost. What do people do in this scenario? Have another repo that a hook sends all pushes to?</p>
",0,1438339,,
30308019,4912779,5/18/2015 16:07,0,174,<git><shell><githooks><digital-ocean>,Deploy To Digital Ocean With Shell Script And GIt Hooks Error,"<p>I have my Droplet in DigitalOcean in <code>/var/www/ html</code>. Then I made a Git Hook with the following information</p>

<pre><code>#!/bin/sh
git push origin master
ssh root@130.122.12.112 'bash -s' &lt; deploy.sh
</code></pre>

<p>This Git Hook called post-commit call the following Shell Script</p>

<pre><code>#!/bin/sh
cd ~
cd /var/www/html/val4505Ecoopsos
git init
git remote add origin git@github.com:epjuan21/val4505Ecoopsos.git
git pull origin master
</code></pre>

<p>This is run after a commit</p>

<p>Then get this error</p>

<pre><code>:No such file or directory
:No such file or directoryhtml/val4505Ecoopsos
is not a git command. See 'git --help'.
</code></pre>
",4,4912779,,
30317012,603640,5/19/2015 4:52,0,225,<git><githooks><asana><github-for-windows>,Integrating multiple git users with Asana,"<p>I've setup a Git server according to <a href=""http://git-scm.com/book/en/v2/Git-on-the-Server-Setting-Up-the-Server"" rel=""nofollow"">this page</a>.</p>

<p>I've also incorporated a <code>post-receive</code> hook according to <a href=""http://blog.spacemanlabs.com/2013/01/integrating-asana-and-git"" rel=""nofollow"">this page</a>. </p>

<p>I'm using GitHub for Windows to communicate between my local machine and the git repo.</p>

<p>My issue is that the <code>post-receive</code> hook utilizes a variable found in git config user.asana-key. I've set that variable on my local machine. However, when I commit to the server repository, that value is empty.</p>

<p>I'm wondering if there's something specific I should be doing to send this variable along with the git commit so that the hook can read it?<br>
And if there's someway to automate this to be sent with every single commit?</p>

<p><strong>EDIT:</strong></p>

<p>I have since learned that these config variables are never sent to the server with a commit normally. So my question at this point becomes is there a way to send these variables, or is there way inside the post-receive hook to set the key based on the user.email attached to the commit?</p>
",0,603640,,
12709230,443982,10/3/2012 13:10,2,476,<git><githooks>,Git: Duplicate Signed-off-by lines,"<p>I had a new git repository with only two commits, and one push to GitHub. Then I did</p>

<pre><code>chmod -R a+x * .*
</code></pre>

<p>to make all my files executable. I then also removed a file, but when I tried</p>

<pre><code>git commit -m ""Removing file""
</code></pre>

<p>I was ""Suddenly"" greeted with the following error message</p>

<pre><code>Duplicate Signed-off-by lines.
</code></pre>

<p>I have not used the Signed-off-by functionality at all.</p>

<p>Why does this suddenly happen, when the two first commits proceeded without any problems?</p>
",0,443982,,
30356986,2224796,5/20/2015 17:52,2,808,<apache><gitlab><githooks>,Gitlab AutoDeploy,"<p>Here is my Situation, I have a webserver and a gitlab server for my repositories, I am trying to auto update my site once I push to my remote branch, I am able to autoupdate if I push directly from my laptop to the web server, but I want to push to my gitlab server and I want my gitlab server to update my website that is located in another server.</p>
<p>On my server I have a post-receive hook with the following content</p>
<h1>!/bin/sh</h1>
<p>git --work-tree=/var/www/html/site --git-dir=/var/repo/site checkout -f</p>
<p>that will work If i push from my laptop to the webserver. not from my gitlab I guess that I need a hook on my gitlab server bit I cannot find anything online.</p>
",0,2224796,,
30376741,1009479,5/21/2015 14:28,17,8264,<git><githooks>,Run script before commit and include the update in this commit?,"<p>I wrote a script that generates <code>Readme.md</code> file (for GitHub) by scanning the source code. Everytime before I make a new commit, I run this script manually to update <code>Readme.md</code>. It sure would be better if this job being done automatically.</p>

<p>Currently I'm using <code>pre-commit</code> git hook, which works only partly. The <code>Readme.md</code> file gets updated, however the update is not part of this commit. I have to include it in the next commit.</p>

<p>Is there a way to run this script and make the update part of this commit?</p>
",0,1009479,0,0
30386003,2521043,5/21/2015 23:26,2,263,<python><git><github><githooks><gitpython>,Any git hook to block merge conflict?,"<p>I am planning to write a git hook in python to protect my github repository. It will detect merge conflict markers (like <code>&gt;&gt;&gt;&gt;&gt;&gt;</code>) and block the commit. </p>

<p>I have some initial ideas but it will be very helpful if I get similar hook samples. Advise about implementation from experienced people will be appreciated too.</p>
",5,2521043,0,0
30399649,4929467,5/22/2015 14:43,1,2647,<git><githooks>,git - copy commit-msg hook when clone repository,"<p>I created a commit-msg hook in my remote repositories, but i have to manually copy it to local .git/hooks/ directory after clone the projects.</p>

<p>Is there any way to copy this hook to local repo at the moment of cloning?
Or any way to automate this task?</p>

<p>I want the hook to be copied without any intervention from the programmer, only with:</p>

<p>$ git clone server:/path</p>

<p>Thank you.</p>
",5,4929467,,
30400104,1147772,5/22/2015 15:04,31,11494,<git><github><github-api><githooks>,Automatically copy pushed files from one GitHub repository to another,"<p>I have two GitHub repositories.</p>

<p>I'd like to automatically (probably using hooks and/or github API) commit and push files to the second repository when they are pushed to the first one.</p>

<p>The second repository is not a clone of the first one, their folder layout is not necessarily the same there is just a bunch of files in common.</p>

<p>What is the simplest way for doing this?</p>

<p>Bonus points if I don't have to install an http server or learn perl :)</p>
",14,1147772,0,0
12817158,239718,10/10/2012 10:25,3,843,<ruby><rake><rvm><database-migration><githooks>,Using rake db:migrate in git hook - undefined class/module Encoding,"<p>I'm using <a href=""https://github.com/thuss/standalone-migrations"" rel=""nofollow"">https://github.com/thuss/standalone-migrations</a> to perform db migrations in a cakephp environment. I am ultimately trying to perform db migrations automatically after checking out different versions of the code by using the post-checkout git hook.</p>

<p>Running normally on the cli <code>bundle exec rake db:migrate</code> works fine, as does <code>rake db:migrate</code> or any of the other commands. If I put the command in <code>.git/hooks/post-checkout</code> it spews an error complaining of <code>undefined class/module Encoding</code></p>

<p>The git hook command is <code>bundle exec rake db:migrate --trace</code>.</p>

<p>Platform: Mac OS X Lion 10.7.5</p>

<p>This is the entire error:</p>

<pre>
rake aborted!
undefined class/module Encoding
/Users/andy/.rvm/gems/ruby-1.9.3-p194/gems/json-1.7.5/lib/json/ext/parser.bundle
/Users/andy/.rvm/gems/ruby-1.9.3-p194/gems/json-1.7.5/lib/json/ext.rb:13
/Users/andy/.rvm/gems/ruby-1.9.3-p194/gems/json-1.7.5/lib/json.rb:58:in `require'
/Users/andy/.rvm/gems/ruby-1.9.3-p194/gems/json-1.7.5/lib/json.rb:58
/Users/andy/.rvm/gems/ruby-1.9.3-p194/gems/activesupport-3.2.8/lib/active_support/core_ext/object/to_json.rb:3:in `require'
/Users/andy/.rvm/gems/ruby-1.9.3-p194/gems/activesupport-3.2.8/lib/active_support/core_ext/object/to_json.rb:3
/Users/andy/.rvm/gems/ruby-1.9.3-p194/gems/activesupport-3.2.8/lib/active_support/core_ext/object.rb:10:in `require'
/Users/andy/.rvm/gems/ruby-1.9.3-p194/gems/activesupport-3.2.8/lib/active_support/core_ext/object.rb:10
/Users/andy/.rvm/gems/ruby-1.9.3-p194/gems/activesupport-3.2.8/lib/active_support/core_ext.rb:2:in `require'
/Users/andy/.rvm/gems/ruby-1.9.3-p194/gems/activesupport-3.2.8/lib/active_support/core_ext.rb:2
/Users/andy/.rvm/gems/ruby-1.9.3-p194/gems/activesupport-3.2.8/lib/active_support/core_ext.rb:1:in `each'
/Users/andy/.rvm/gems/ruby-1.9.3-p194/gems/activesupport-3.2.8/lib/active_support/core_ext.rb:1
/Users/andy/.rvm/gems/ruby-1.9.3-p194/gems/activesupport-3.2.8/lib/active_support/all.rb:3:in `require'
/Users/andy/.rvm/gems/ruby-1.9.3-p194/gems/activesupport-3.2.8/lib/active_support/all.rb:3
/Users/andy/.rvm/gems/ruby-1.9.3-p194/gems/standalone_migrations-2.0.1/lib/standalone_migrations/configurator.rb:1:in `require'
/Users/andy/.rvm/gems/ruby-1.9.3-p194/gems/standalone_migrations-2.0.1/lib/standalone_migrations/configurator.rb:1
/Users/andy/.rvm/gems/ruby-1.9.3-p194/gems/standalone_migrations-2.0.1/lib/standalone_migrations.rb:8:in `require'
/Users/andy/.rvm/gems/ruby-1.9.3-p194/gems/standalone_migrations-2.0.1/lib/standalone_migrations.rb:8
/Users/andy/.rvm/gems/ruby-1.9.3-p194/gems/standalone_migrations-2.0.1/lib/tasks/standalone_migrations.rb:9:in `require'
/Users/andy/.rvm/gems/ruby-1.9.3-p194/gems/standalone_migrations-2.0.1/lib/tasks/standalone_migrations.rb:9
/Users/andy/source/idio/cake/Rakefile:6:in `require'
/Users/andy/source/idio/cake/Rakefile:6
/Users/andy/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/rake_module.rb:25:in `load'
/Users/andy/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/rake_module.rb:25:in `load_rakefile'
/Users/andy/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:501:in `raw_load_rakefile'
/Users/andy/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:82:in `load_rakefile'
/Users/andy/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:133:in `standard_exception_handling'
/Users/andy/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:81:in `load_rakefile'
/Users/andy/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:65:in `run'
/Users/andy/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:133:in `standard_exception_handling'
/Users/andy/.rvm/gems/ruby-1.9.3-p194@global/gems/rake-0.9.2.2/lib/rake/application.rb:63:in `run'
/usr/bin/rake:31
</pre>

<p>I'm not too hot with ruby. I've tried all sorts of tricks, deleted all gems, reinstalled etc. Always the same.</p>

<p>Thanks.</p>
",0,239718,,
30463576,2312615,5/26/2015 16:03,-1,40,<project-management><githooks>,Development best practices: automatically grant permission to application's new folders,"<p>Some functionalities require new folders in my application and sometimes I need to grant write permissions to those folders.</p>

<p>At the moment, when I upload the code to production environment, I need to manually grant those permissions in the server. When another person at my development team pulls my code through git, they have to manually grant it locally in their machines.</p>

<p>What is the best practice to grant those permissions automatically in both cases?</p>

<p>I don't know if that interferes in something but the application is written in PHP using Zend Framework2. We use composer for dependency management and Git for versioning.</p>

<p><strong>Edit 1</strong><br>
So I've heard about Git Hooks. I want to create a <code>post-receive hook</code> to be executed everytime my remote repository receives commits and a <code>post-merge hook</code> to be executed at every developer machine after they execute git pull.</p>

<p>I've also heard that hooks are not transfered through commits from developer-to-server and vice-versa.<br>
Is that true? Do I need to create a specific script in my code (which is commited) and then refer it in those hooks?</p>
",0,2312615,,
30471238,2946797,5/27/2015 0:32,1,364,<java><git><githooks><pep8><bitbucket-server>,Is it possible to use pep8 and yapf in a Stash pre-receive hook?,"<p>I'm trying to write an Atlassian Stash pre-receive hook that will check if pushed code's python files comply with the python PEP-8 style convention. There are already two tools that do exactly what I want-- <a href=""https://pypi.python.org/pypi/pep8"" rel=""nofollow"">pep8</a> and <a href=""https://github.com/google/yapf"" rel=""nofollow"">yapf</a>. </p>

<p>However, I do not know how to integrate these tools to be used in a Stash pre-receive hook, which has to be written in Java. If I'm writing a Stash pre-receive hook in Java, how can I make use of pep8 and yapf?</p>
",1,2946797,,
30487984,4766017,5/27/2015 16:18,0,42,<git><githooks>,Obtain git hook event information,"<p>In a git hook, environment variables are set to provide the event information that fired the hook. Accessing environment variables for the correct commit information worked fine except when downgraded to git 1.7.1 which do not supply all of the git environment variables.</p>
",0,4766017,,
31047290,593813,6/25/2015 10:07,2,108,<windows><git><branch><githooks><git-post-receive>,Git post-receive hook should not send email by new branching push,"<p>my git remote repository is created on windows. (Bonobo Git Server is installed.)
<br>
There is a standard origin/master branch in my remote-Repository.
<br>
And there is a post-receive hook to send a email notification.
<br><br></p>

<p>For a normal commit(file is modified and pushed), it works great.</p>

<p>But for a new branching push,<br>( = no files are modified, just a new brach is for origin created and pushed)<br>no email notification or some other email notification should be send.
<br><br></p>

<p>how can i check, the last push is only for new branching?<br>
is there any option for <code>git log</code> for that?</p>
",0,593813,,
13510408,388959,11/22/2012 10:15,3,1079,<git><backup><githooks><git-bash><git-workflow>,Back up a git remote repositore with git hooks,"<p>I have some puzzle pieces and it would be great if someone could help to master the pieces together to have a whole picture.</p>

<p>I have a couple of devs who develop on several git repo's locally and push frequently to the matching remote repositories on the server.</p>

<p>Now I would like to replicate or automate a second backup on another server.</p>

<p>I learned that when I define a <code>post-receive</code> hook on my remote repository and include a <code>git push to my backup server</code> then I could automate it that way? Is this correct?</p>

<p>Now: I have the local and the first remote repo under control but not so much the backup repo. So if somebody starts a new git repo I could distribute the <code>post-receive hook</code> via <code>global git settings</code>. But is it possible that I can check in my <code>post-receive hook</code> if the back-up repo exists and if not <code>init</code> a new one and then <code>push</code>? And if it exists just <code>push</code> the current state to the backup. I found something like <code>git ls-remote</code> to query the remote but to not know how to handle it...</p>

<p>But like  said I am not sure how to write the <code>git post-receive hook</code> that it automatically re-pushes changes to the back-up server... and on top I have to use windows server for this =)</p>

<p>P.S.: I also saw something like <code>git bundle</code> but did not figure out how this could help me...
Anyway I'm just looking for an automated backup solution for my remote repo to a backup repo...</p>
",1,388959,0,0
31057527,1233949,6/25/2015 18:02,11,12470,<git><formatting><githooks>,git pre-commit hook to format and re-add files at the same time,"<p>We're currently using a git hook (below) to run astyle on our source code before allowing the user to commit. This has the caveat that the user must commit, have their code formatted, then commit again which is a bit of a nuisance. Ideally we'd want the hook to format the code and then include that formatted code in the original commit instead. I've tried re-adding the changed files but it causes ref errors (obviously). I've also tried getting the history in the pre-commit hook and trying to exit the hook and re-run the git commit command with no luck. </p>

<pre><code># Run astyle on changed .cs files, ignoring $ignored
res=$(exec git diff --cached --name-only | \
    grep -Ev $ignored | \
    xargs astyle --options=conf/astylerc | \
    tail -n 1)
num_formatted=$(echo $res | cut -b 1) # We are only interested in the number preceeding 'formatted'.
[[ $num_formatted -ne 0 ]] &amp;&amp; echo ""WARNING: Code has been automatically formatted. Please re-add and re-commit"" &amp;&amp; exit 1 || echo ""No code to format! Continuing commit""
</code></pre>

<p>Does anyone have any ideas? </p>
",2,1233949,0,0
13515748,378170,11/22/2012 15:21,1,561,<git><githooks>,Git post-update Hook issues - sometimes master doesn't get updated,"<p>Here's the setup I'm using at the moment:</p>

<blockquote>
  <p>HOOK 1 We will use a post-update hook on our HUB repository. So, when
  a push is made to the HUB by any other clone, the HOOK get’s activated
  and it will, according to the HEAD pointer placement, access the
  corresponded WORKING DIRECTORY, either on development or master, and
  it will from there, either: pull from hub into development branch OR
  pull from hub into master branch.</p>
</blockquote>

<p>On <code>~/private/repos/projectname_hub.git/hooks</code> create a file named <code>post-update</code> <code>pico post-update</code> and place the following inside:</p>

<pre><code>#!/bin/sh

echo
echo ""**** Pulling changes into Dev [Hub's post-update hook]""
echo

case "" $1 "" in
*'refs/heads/dev'*)
        cd /home/user/www/dev/ || exit
        unset GIT_DIR
        git pull hub dev
        echo
        echo ""Dev was pulled""
        echo
        ;;
esac

case "" $1 "" in
*'refs/heads/master'*)
        cd /home/user/www/www/ || exit
        unset GIT_DIR
        git pull hub master
        echo
        echo ""Master was pulled""
        echo
        ;;
esac

exec git-update-server-info
</code></pre>

<blockquote>
  <p>HOOK 2 To prevent history conflicts, if we commit directly on
  production server for some reason, each time a prime master commit
  occurs, we PUSH those committed changes to the HUB.</p>
</blockquote>

<p>On <code>~/www/www/.git/hooks</code> create a file named <code>post-commit</code> <code>pico post-commit</code></p>

<pre><code>#!/bin/sh

echo
echo ""**** pushing changes to Hub [Prime's post-commit hook]""
echo

git push hub
</code></pre>

<p>With the setup above, sometimes, I cannot precise when, we may have pushed things to the master it says ""Everything is up to date"" but it isn't.</p>

<p>Obviously all files where added and committed. </p>

<p>So, and after some help, we end up finding that the issue is, on the Hook setup.</p>

<p>I've been told to, instead of using on the <code>post-update</code> hook: <code>git pull hub master</code> I could use:</p>

<pre><code>git fetch hub &amp;&amp; git reset --hard hub/master
</code></pre>

<p>My question is:
Can anyone please provide the necessary explanation why does the <code>git pull hub dev</code> works, and <code>git pull hub master</code> sometimes doesn't, and how will this line help me out ?</p>

<p>Yes, I'm quite new on git usage, and I wish not to blind copy paste the above without at least understand. If someone could drop a few lines, it would be really appreciated.</p>

<p>Update:
When I do <code>git branch -a</code> this is what I get:</p>

<pre><code>* master
  remotes/hub/dev
  remotes/hub/master
</code></pre>

<p>Thanks in advance.</p>
",0,378170,0,0
13520081,390829,11/22/2012 21:15,0,197,<git><permissions><githooks>,New git hook setup in bare repository issues (no output/execution),"<p>I can't seem to get any git hooks working on my setup.</p>

<pre><code>sjakubowski@sjakubowski:~/Work/git$ mkdir hookstest
sjakubowski@sjakubowski:~/Work/git$ cd hookstest/
hookstest$ git init

Initialized empty Git repository in /home/sjakubowski/Work/git/hookstest/.git/

hookstest$ git commit -m ""initial commit""

[master (root-commit) 82b95e0] initial commit
 0 files changed
 create mode 100644 testfile

hookstest$ touch .git/hooks/commit-msg
hookstest$ nano .git/hooks/commit-msg
hookstest$ cat .git/hooks/commit-msg

#!/usr/bin/env ruby
message_file = ARGV[0]
message = File.read(message_file)

#starts with # then number, space, and at least 5 words no more than 200
$regex = /(^#[0-9]+ \W*(\w+(\W+|$)){5,200})/

if !$regex.match(message)
puts ""Your message is not formatted correctly (example: #XXX at least 5 words)""
exit 1
end

hookstest$ touch testfile2
hookstest$ git add testfile2
hookstest$ git commit -m ""this message won't be blocked""
[master adea486] this message won't be blocked
 0 files changed
 create mode 100644 testfile2
</code></pre>

<p>What am I missing? Here is my configuration.</p>

<pre><code>hookstest$ git --version
git version 1.7.9.5
hookstest$ ruby --version
ruby 1.9.3p0 (2011-10-30 revision 33570) [x86_64-linux]
hookstest$ git config --list
user.name=Sylvester Jakubowski
user.email=XXXX@gmail.com
github.user=sjakubowski
github.token=XXXX
color.ui=true
core.repositoryformatversion=0
core.filemode=true
core.bare=false
core.logallrefupdates=true
</code></pre>
",2,390829,,
13529199,1847483,11/23/2012 12:30,1,307,<git><githooks><git-commit>,prepare-commit-msg test the output for different scenarios,"<p>I made a prepare-commit-msg hook that will add a lot of data to the commit message that will be presented to my developers.</p>

<p>I want to test the output of the prepare-commit-msg hook automatically so i can use jenkins to validate if the new changes i made is messing up the old format.</p>

<p>But how do i ""trigger"" and get the output from the prepare-commit-msg hook without git opens op an editor.</p>

<p>is there a workaround. </p>

<p>git commit -m ""Text"" 
Does not give me the output anywhere or maybe it does ? </p>

<p>or should i really add this testing internally in the hook so when i enable debugging i should get the output ?</p>

<p>I would just prefer git could give me the output instead as it is the message that will be presented to the developer. </p>
",0,1847483,,
13555998,1244335,11/25/2012 22:01,3,1861,<github><jenkins><githooks>,jenkins not responding to github webhook`,"<p>I got Jenkins talking to Github, and manually I can initiate a build and it succeeds! This is a private Github repo. </p>

<p>I can't get the webhook to work, so that when I check-in in my repo, Jenkins would pull and auto build?</p>

<p>I put a service hook under Jenkins (GitHub plugin). Testing the hook shows ""Payload deployed""</p>

<p>This is what my hook looks like
<a href=""http://myjenkinsurl.com:8080/github-webhook/"" rel=""nofollow"">http://myjenkinsurl.com:8080/github-webhook/</a></p>

<p>In the Jenkins config, I selected ""Manually manage hook URLs""</p>
",3,1244335,0,0
31103149,837705,6/28/2015 18:14,1,105,<git><version-control><version><githooks><git-flow>,Stop getting Git tags from specific remote repo,"<p><strong>Question:</strong> Is it possible to not fetch tags by default by using <code>git fetch Repo1</code> instead of having to use <code>--no-tags</code>?</p>

<p><strong>Software:</strong></p>

<ul>
<li>Git</li>
<li><a href=""https://github.com/petervanderdoes/gitflow"" rel=""nofollow"">Git Flow</a></li>
<li><a href=""https://github.com/jaspernbrouwer/git-flow-hooks"" rel=""nofollow"">Git Flow Hooks</a>

<ul>
<li>Automatically bump versions when starting a release or hotfix. Versions are generated, written to file and committed.</li>
<li>Automatically specify tag messages.</li>
</ul></li>
<li><a href=""http://www.git-tower.com"" rel=""nofollow"">Tower App for Mac OS X</a></li>
</ul>

<p><strong>Description:</strong> I have two repositories, Repo1 and Repo2. Both Repo's use tags to label versions (v0.0.1) but the versions are completely different from each other.</p>

<p><code>git fetch Repo1</code> automatically gets the tags from the repository but I need it to stop getting the tags from Repo1 because it's causing problems with Git Flow Hooks. I know I can use <code>git fetch Repo1 --no-tags</code> but I am using the Tower app instead of command line and it's set to fetch every 30 minutes.</p>
",0,837705,0,0
31124464,4770185,6/29/2015 19:56,0,143,<git><githooks>,git client side hooks for comparing commit message and modified files,"<p>I already have a server side hook that has logic around files being checked in and can reject the commit.</p>

<p>What I would like to do is create a client side hook so that developers get an early warning of the problem before they commit to their local repository to avoid the complications around fixing up those commits.</p>

<p>The problem I am having is that our logic involves both the list of changed files and the commit message (e.g., some files are locked and can't be checked in unless the name of the file is in the commit message, indicating that the developer is aware of the issue and is overriding it.)</p>

<p>It looks like the message is available in the commit-msg hook and the list of files is available in the pre-commit hook. Is there a way I can get both of these at the same time or communicate between the two hooks?</p>
",0,4770185,,
66517486,9479128,3/7/2021 14:17,0,177,<git><version-control><gitlab><git-submodules><githooks>,How can automatically update a directory/repo which is a subset of another directory/repo?,"<p>I have the following problem I'm unable to resolve :</p>
<p>I have two version controlled directories on my local machine. One is <code>dirA</code> which holds a lot of my stuff and is a private repo I don't want to share. The other is <code>dirB</code>, a small public repo with files I do want to share, it's mainly for others to clone and pull, the changes all come from me.</p>
<p>The thing is that <code>dirB</code> holds files which are all coming from <code>dirA</code>, it's basically a subset of <code>dirA</code> though it has another structure.</p>
<p>Anytime I make changes to the files in <code>dirA</code> that are <strong>also</strong> in <code>dirB</code>, I'd like to update <code>dirB</code> and then push the updated files to the public repo.</p>
<p>I tried using <code>rsync</code> and <code>unison</code> but I have to do it by hand anytime I update the specific files I mentioned, it's not very efficient. I gathered git submodules or hooks could help me but I don't understand what tool I should use.</p>
<p>In substance, I have :</p>
<pre><code>dirA/ (larger private repo with my stuff)
|
|--- file1
|
|--- file2
.
.
.--- fileN
</code></pre>
<p>and</p>
<pre><code>dirB/ (public repo that I want to update only when the relevant files from dirA are updated)
|
|--- SubjectA/
|       |
|       |--- file3
|
|--- SubjectB/
        |
        |--- file11
.
.
</code></pre>
<p>Ideally, I'd like that when I update <code>dirA</code> locally and push to remote, <code>dirB</code> is updated locally as well and then it'd be pushed to remote as well.</p>
<p>How can I achieve this ?</p>
<p>Thanks.</p>
",6,9479128,,
13602751,1297136,11/28/2012 10:19,15,6159,<git><sh><githooks>,git - checkout single file under bare repository,"<p>On the server I have bare repository which is origin for development process and to simplify deployment to QA environment.</p>

<p>So in <code>post-receive</code> it simply does</p>

<pre><code>GIT_WORK_TREE=/home/dev git checkout -f
</code></pre>

<p>But as product gets more complicated there are some other things should be happening. So now it is handled by <code>deploy.sh</code> script which is also tracked by repository. So what I want to do is to be able instead of checking out whole repository is to checkout only <code>deploy.sh</code> and run it. I thought something like that would work:</p>

<pre><code>SOURCE_PATH=""/home/dev""
GIT_WORK_TREE=$SOURCE_PATH git checkout deploy.sh
$SOURCE_PATH""/deploy.sh""
</code></pre>

<p>But it does not work giving error:</p>

<pre><code>error: pathspec 'deploy.sh' did not match any file(s) known to git.
</code></pre>

<p>What am I doing wrong? Or is it just impossible to do this way?</p>
",0,1297136,0,0
31167694,530728,7/1/2015 17:13,1,101,<git><reset><githooks>,Git hook to prevent hard resets on the live server?,"<p>Yesterday I was trying to help a co-worker with some Git stuff and told him to do a <code>git reset --hard</code> when I thought he was on his local repo but he was on our live server. This messed a bunch of things up, I think mainly because on our live server we have tons of local uncommitted files on the server, which were uploaded directly through Drupal rather than through committing then pushing/pulling in Git. </p>

<p>I'd like to prevent this from happening again. Is there a git hook that I could write that could prevent anyone from ever doing a <code>git reset --hard</code> on the live server?</p>
",2,530728,,
31177159,1095451,7/2/2015 6:36,2,1343,<githooks>,Git Hook to detect branch creation,"<p>We need to write a client-side Git hook to detect a new branch creation from master. Whenever a new branch is created, a folder needs to be deleted from the branch.</p>

<p>I am not sure which hook is the best place to do this check or how to identify if the branch has just been created. </p>
",0,1095451,0,0
13662255,562155,12/1/2012 18:14,79,113213,<git><github><githooks><github-api>,Is there a way to lock individual files or directories on fork when using git?,"<p>We are a team of 60+ developers working on the same product and are moving from SVN to Git and GitHub. We have a process in SVN where in individual files are locked and whenever a developer wants to commit code, he needs to get it unlocked by the owner of the file. Three of us are the owners of the total 150+ files. The unlocking is preceded by a code review. </p>

<p>In Github, we are planning to use the Fork-Clone model - each project a group of dev is working on will do a fork, each developer will do a clone of the fork, write the code &amp; commit to origin, the lead of the feature will do a pull request to upstream.</p>

<p>Though this seems fine, the problem is when a big project gets delivered, it brings in lots of changes for review and hence, increases the load for the file owners. Also, this might happen in the later cycles of development and hence the project might be jeopardized.</p>

<p>One method we thought might work is to have hooks when the git push is done to the origin (fork). There can be one final review git pull to upstream. </p>

<p>However, we could not find any github extensions or push hooks for the same. Is there a quick way (read, existing extension) to do this with Github or should we use the same hooks that we would use with git?</p>
",6,562155,0,0
13669492,151377,12/2/2012 12:58,2,229,<github><githooks><github-for-mac><post-commit-hook>,GitHub for mac not behaving properly with post-commit hook,"<p>I usually use <a href=""http://mac.github.com/"" rel=""nofollow noreferrer"">GitHub for Mac</a> to commit code to my GitHub projects because it makes it a bit quicker to do. For my current project, I had to set up the following pre-commit hook:</p>
<pre><code>if [ -e images/sprites-01.png ]
then
    mv -f images/sprites-01.png images/sprites.png
    git add images/sprites.png
    git commit --amend -C HEAD --no-verify
fi
</code></pre>
<p>When I commit through the command-line it simply does the normal commit, and then it executes the hook which amends to the previous commit and I can get my newly renamed file in. When I push, I see everything as a single commit, as if nothing ever happened.</p>
<p>However, if I make my changes and then use GitHub for Mac to sync them, when I sync it says &quot;Please commit all your changes before syncing.&quot; and then it shows the <code>images/sprites-01.png</code> in the file list as a file that still needs to be deleted, as if it was executing the hook but was ignoring the amended commit.</p>
<p>What can I do to make this work?</p>
",0,151377,0,0
31218215,149998,7/4/2015 7:37,6,6520,<git><githooks>,Which git hook to use for validating pushed commit messages?,"<p>I need to validate the commit messages that are pushed to the remote in order to prevent developers from not putting enough detail in (string length) or only putting a ticket number.</p>

<p>I thought an update hook would work for this but it doesn't- it seemed to, but it only works for a reference that's been pushed previously. When I tried to push a new branch it rejected because it couldn't find the ref. I suspect it may also only be running against the latest commit in a pushed series. </p>

<p>What would be the right choice of hook to perform this task?</p>

<p>Snippet:</p>

<pre><code>#!/usr/bin/env php
&lt;?php

define('MINIMUM_MESSAGE_LENGTH', 10);

$exit = 0; // default exit code -&gt; success

$ref = $argv[1];
$commitMessage = exec('git log -1 ' . $ref . ' --pretty=format:%s');
$commitMessage = trim($commitMessage);

// validations &amp; exit($exit) follow; 
</code></pre>

<p><em>yep this is PHP but the question is language agnostic</em></p>
",1,149998,0,0
13688541,3086,12/3/2012 17:27,6,4245,<git><deployment><githooks><minify>,Compress JS/CSS files on deploy using Git,"<p>I'm kinda new to git. Also, this is my first project where I'm automating the deployment process. So far it's been bliss to being able to do <code>git push dev</code> and have files uploaded, config files copied, etc.</p>

<p>Now I want to minify JS/CSS files when I push to my dev server. I was thinking of installing some command-line tool on the server for minifying and for-each js/css file on certain folder, compress and save, on a post-receive git hook.</p>

<p>Is this a good approach? (cause I've read about adding compressed files to the repo and other ideas I don't feel quite convinced)</p>

<p>If so, which tools are best for the task?</p>
",7,3086,0,0
13708054,279671,12/4/2012 17:01,2,216,<git><githooks><git-commit>,Is it possible to change Git standard messages when committing?,"<p>Is it possible to change the part:</p>

<pre><code># Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
# On branch master
# Changes to be committed:
</code></pre>

<p>To say:</p>

<pre><code># Staged:
</code></pre>
",2,279671,,
31243088,4363045,7/6/2015 10:09,2,367,<git><jenkins><githooks>,How to configure post-receive hook on local server,"<p>I'm working on local server with Jenkins and my task now is <strong>to trigger testing script after each git push.</strong></p>

<p>I tried to do this with post-commit hook, which worked as expected but it ran tests <strong>before</strong> actual changes were made (pushed to repo). Well, its post-commit, so that's expected. </p>

<p>So I decided to use some kind of post-push and found post-receive hook, but its not working at all. Running <code>sh post-receive</code> does what I want, <code>chmod +x</code> done. What am I doing wrong? Should I use another hook?</p>
",0,4363045,0,0
31282801,2180697,7/8/2015 3:01,0,523,<git><hook><bundler><githooks><rbenv>,Why is the git pre-receive hook not detecting puppet-lint?,"<p>I'm using the <a href=""https://github.com/drwahl/puppet-git-hooks/blob/master/pre-receive"" rel=""nofollow"">drwahl/puppet-git-hooks</a>.</p>

<p>I have <code>puppet-lint</code> installed on my local machine however when I do my <code>git push origin puppet_hook</code> I get the following output:</p>

<pre><code>Compressing objects: 100% (2/2), done.
Writing objects: 100% (4/4), 345 bytes | 0 bytes/s, done.
Total 4 (delta 1), reused 0 (delta 0)
remote: Checking puppet manifest syntax for manifests/init.pp...
remote: Error: Could not parse for environment production: Syntax error at '}' at manifests/init.pp:3
remote: Error: puppet syntax error in manifests/init.pp (see above)
remote: Error: 1 syntax error(s) found in puppet manifests. Commit will be aborted.
remote: puppet-lint not installed. Skipping puppet-lint tests...
remote: Error: 1 subhooks failed. Declining push.
remote: Hook /var/tmp/hooks/pre-receive.puppet failed with error code 1
</code></pre>

<p>As you can see it says:</p>

<p><code>remote: puppet-lint not installed. Skipping puppet-lint tests...</code></p>

<p>When I traced it to the pre-receive script (provided above) I found the following check:</p>

<pre><code> #puppet manifest styleguide compliance
        if [ ""$CHECK_PUPPET_LINT"" != ""disabled"" ] ; then
            if type puppet-lint &gt;/dev/null 2&gt;&amp;1; then
                if [ $(echo $changedfile | grep -q '\.*.pp$' ; echo $?) -eq 0 ]; then
                    ${subhook_root}/puppet_lint_checks.sh $CHECK_PUPPET_LINT $tmpmodule ""${tmptree}/""
                    RC=$?
                    if [ ""$RC"" -ne 0 ]; then
                        failures=`expr $failures + 1`
                    fi
                fi
            else
                echo ""puppet-lint not installed. Skipping puppet-lint tests...""
            fi
        fi
</code></pre>

<p>It seems to be failing at:</p>

<p><code>if type puppet-lint &gt;/dev/null 2&gt;&amp;1; then</code></p>

<p>When I run the above command locally it is successful.</p>

<p>Why is not detecting <code>puppet-lint</code> via the pre-receive script?</p>
",6,2180697,,
31291854,1095451,7/8/2015 11:53,27,13652,<githooks>,Best way to debug git-hooks,"<p>What is the best way to debug git-hooks?</p>

<p>The way I prefer is adding statements to add output to a log file. For example, the following.</p>

<pre><code>echo 'post-receive executed' &gt;&gt; hooks.log
</code></pre>

<p>Is there a better approach or way to do logging?</p>
",0,1095451,,
13776316,1017941,12/8/2012 9:44,2,181,<git><hook><githooks>,Checking for Git remote hook,"<p>Is there option to check that some kind (I'm interested in <code>post-receive</code>) hook is present in some remote repository?</p>
",0,1017941,0,0
48027476,1456509,12/29/2017 19:28,0,36,<github><github-api><githooks>,Github: Any ideas on how to have merging dependencies between commits/repos?,"<p>Consider two repos, <code>webui_repo</code> and <code>webservice_repo</code>, that are two interdependent systems (the web UI and service, respectively).</p>

<p>As you can imagine, the <code>webui</code> depends on <code>webservice</code>, but imagine that they've grown a lot and are managed by two teams, thus a considerable amount of effort is required to get things going, and that's ok.</p>

<p>But sometimes one of them gets deployed and either breaks retro-compatibility or expects a feature that hasn't been deployed yet. In order to alleviate that, I thought of a dependency-check feature, based on commit keywords (similar to <a href=""https://help.github.com/articles/closing-issues-using-keywords/"" rel=""nofollow noreferrer"">closing issues using keywords</a>):</p>

<pre><code>This is my commit message. Depends on: webservice_repo/commit/&lt;commit_hash&gt;
</code></pre>

<p>I've done a small research and couldn't find any existing feature that provides this. I've also tried to find out if Github provides any extension/customization to the merge process, but no answer there as well.</p>

<p>Any ideas?</p>
",4,1456509,,
48037463,3693009,12/30/2017 20:08,1,60,<gitlab><githooks>,Prevent chained git hooks for single repo in Gitlab,"<p>We are using Gitlab Community Edition 8.15.2 and are using custom global git hooks for all our repos (i.e. all repos use the same hooks). </p>

<p>For one of our repos, I want to use a <code>&lt;project&gt;.git/custom_hooks</code> hooks and NOT the global hooks.<br>
According to the Gitlab documentation for chained git hooks (<a href=""https://docs.gitlab.com/ce/administration/custom_hooks.html"" rel=""nofollow noreferrer"">https://docs.gitlab.com/ce/administration/custom_hooks.html</a>) it's going to go through all the possible locations and execute as long as the previous ones successfully exit. </p>

<p>I don't want it to execute both the <code>custom_hooks</code> and the <code>global</code> hooks...just the custom one. Is this possible?</p>
",0,3693009,0,0
31321700,5099260,7/9/2015 15:19,0,737,<git><gitlab><githooks>,Auto Downloading a Git Commit with Windows,"<p>I have a git repo with hundreds of files in it. One of those files is a Powershell Profile. I also have two windows servers where I want that Powershell Profile to be updated.</p>

<p>Does anyone have a good way of automatically updating the file whenever a git commit is done? I don't want to pull down the whole repo, I just want the single file. I feel like the best way to do it would be to do it with a git hook, but most of the examples I've found just download the whole repo.</p>
",1,5099260,,
13803262,553473,12/10/2012 14:48,1,244,<git><batch-file><remote-access><githooks><git-bash>,Is there a way to force a committer to enter their username in Git Bash,"<p>I have a code base that some of the developers work on via RDP and use the IDE that is on the remote machine. I would like to know if there is a way to <strong>force</strong> them to enter their own name when committing changes. Right now Git is defaulting to my name which is incredibly annoying since I am not the one making the changes.</p>

<p>Also when something is pushed to GitHub, it does ask for user name/password, but I can't seem to find any indication of that user's information in the commit list.</p>

<p>** <strong>EDIT</strong> ** <strong>FYI</strong> **</p>

<p>My original intention was to force a user signed in under a shared account (unavoidable) to enter their <code>user.name</code> and <code>user.email</code> credentials each time the commit command was run. In order to accomplish this, I tried to use a login script for Windows that would essentially clear and set these values each time a new person logged in;</p>

<pre><code>@echo off
cls

REM * Notify user
echo Clearing Git user information...

REM * Go to Git directory
cd C:\""Program Files (x86)""\Git\bin\

REM * Clear user information
git config --global --remove-section user

REM * Get the user's name
set /p name= Please enter your first name:

REM * Get user email
set /p email= Please enter your email:

REM * Set Git configuration
git config --global user.name ""%name%""
git config --global user.email ""%email%""
::REM * exit
exit
</code></pre>

<p>But I could not get it to work consistently via RDP which is its main use case.</p>

<p>This lead me to try to use the <code>pre-commit</code> hook for Git which I used essentially the same script modified for Bash. This also didn't work, because Git assigns the ""author"" before calling the hook.</p>

<p>In other words, if the user configuration was <code>name = jim</code> and <code>email = bob@test.com</code> the Git log would have the author as <code>jim&lt;bob@test.com&gt;</code> and then the <em>next</em> commit would have the entered information.</p>

<pre><code>#!/bin/sh
#
exec &lt; /dev/tty

# Notify user
echo ""Clearing Git user information...""

# Go to Git directory
#cd c:\""Program Files (x86)""\Git\bin\

# Clear user information
git config --global --remove-section user

# Get the user's name
echo ""Please enter your first name: ""
read name

# Get user email
echo ""Please enter your email: ""
read email

echo name: $name email: $email
read -n 1

# Set Git configuration
git config --global user.email $email
git config --global user.name $name
#exit
</code></pre>
",4,553473,0,0
48048611,949704,1/1/2018 9:44,0,164,<npm><githooks><git-flow>,Configuring git-flow hook for pre-release using SourceTree?,"<p>Is there a way that I can configure hooks to run a set of commands <em>before</em> a release is committed to a version when using Git Flow in SourceTree? I want to be able to make sure that when the last commit before a release is committed that <code>npm run prod</code> is ran to compile my Webpack assets instead leaving the results of <code>npm run dev</code>.</p>
",0,949704,,
31334040,4518837,7/10/2015 6:36,6,2518,<github-api><githooks><webhooks>,Github webhooks - pre-push hooks,"<p>My requirement is that whenever developers are pushing to github, then before the push a CI build should trigger on Jenkins server. If that build fails, then push to github should be rejected. 
I need to write hooks for this, but I don't want to write client-side hooks as they can be disabled by developers. I want server-side github webhooks or pre-receive hooks.</p>

<p>Now, is this even possible to achieve ? 
If yes, then where to begin? Do I need knowledge of Rest API? Do I need to write shell scripts?</p>
",0,4518837,0,0
13835594,1035133,12/12/2012 8:24,1,118,<git><version-control><githooks>,How does git abandon changes inside .git directory?,"<p>I have made some changes on the .git/hooks directory. Now I wish to abandon those changes and restore .git/hooks to its initial status. Can I do this and how?</p>
",0,1035133,0,0
48081163,4456078,1/3/2018 16:17,2,524,<git><bash><githooks><bitbucket-server>,Git objects not accessible when using pre-receive hook in Bitbucket,"<p>I'm struggling to write a pre-receive hook which should verify push basing on existence of marker file. But <code>newref</code> populated by script is pointing into nowhere.<br>
I can`t get any data to validate getting:</p>

<blockquote>
  <p>remote: fatal: bad object 3bb1ab6de84c324cd2fb0a7961bd5afccfd77d55</p>
</blockquote>

<p>I`m trying to acquire data by:</p>

<pre><code>git show $newrev
</code></pre>

<p>I tried also:</p>

<pre><code>list_commits=git rev-list $oldrev..$newrev
</code></pre>

<p>but only got:</p>

<blockquote>
  <p>remote: fatal: Invalid revision range 341cc54a0afa8824e6f61514d6709b5f71f2c444..cc6c92ef2af267bc228219216078e0b1b3b7b2bb</p>
</blockquote>

<p>When I ran git log there was not any of pushed commits.<br>
How do I get access to them?</p>

<p>I have repository on Atlassian Bitbucket v5.1.0 maybe it is the case? If yes, do you know any workarounds?</p>

<p>Whole pre-receive script for now:</p>

<pre><code>#!/bin/bash
while read oldrev newrev refname; 
do
    git show $newrev
done
</code></pre>

<p>EDIT:</p>

<p>Thanks to info I`ve found here <a href=""https://git.seveas.net/manpages/gitrepository-layout.html"" rel=""nofollow noreferrer"">https://git.seveas.net/manpages/gitrepository-layout.html</a> to make object file discoverable you have to edit <strong>objects/info/alternates</strong> file by adding folder name, which home by default is 
object folder. </p>

<p>F.e. to add incoming-b2241(pushed changes) which is in .git/objects you need to add only incoming-b2241 into alternates</p>

<p>After this incoming objects are accessible for git cat-file and so.</p>

<p>Don`t forget to re-edit it afterwards, as non-existing directories will corrupt repository, but luckily errors are pretty descriptive and then you know what need to be fixed.</p>
",7,4456078,,
14270957,340947,1/11/2013 2:59,1,80,<git><github><githooks>,"Can I switch to another branch, commit to it, and switch back, in a commit-msg hook?","<p>I want to insert the first few chars of the commit hash and the commit message automatically into a file in the <code>gh-pages</code> branch any time that I commit to <code>master</code>. </p>

<p>Currently using this <code>post-commit</code> hook: </p>

<pre><code>#!/bin/bash
#Ensures we are in master branch
[ `git rev-parse --abbrev-ref HEAD` != ""master"" ] &amp;&amp; exit 1
git checkout gh-pages
git merge master
# update the js file with commit identification information from git
# I can't seem to get this to work without generating a *_bak file. Whatever.
# I have a section in my source that has delimiters #% %# that I use to stuff the
# git commit into, so I can view the version of source I am testing on my device
# very easily (you can't imagine how much more definite and efficient this is compared
# to what we do at my work)
sed -i _bak ""s/#%.*%#/#% `git log master -1 --format=""%h %s""` %#/"" source.js
git commit -a -m""this commit made by a script""
git checkout master
</code></pre>

<p>I doubt that converting this into a <code>commit-msg</code> hook would allow me to reduce the amount of extra commits generated (two, one to merge master into gh-pages, and one to write in the commit-msg I used for the master commit into the file) whenever I perform a commit on <code>master</code>, but it would at least allow me to easily skip it by doing a <code>commit -n</code> for <code>--no-verify</code>, whereas with a <code>post-commit</code> hook I'd have to unset the exec flag on the hook file to temporarily disable it.</p>

<p>Does this work? I guess I should just try it. What will Git do, though? So long as my bash script issues a return-value of 0 it will proceed to perform the commit? </p>
",0,340947,0,0
59459181,5841977,12/23/2019 17:28,0,282,<git><githooks><git-stash>,Git stash in a pre-receive and post-receive hook does not work as expected,"<h1>A bit of context</h1>

<p>I am develloping a flow which will allow people to access a common environment.
The idea is to have a repository that should only be pushed in, but not a bare one as I want people to be able to read it. Let's call it <strong>COMMON</strong><br>
This is because I do not want people to have to clone the repository to be able to access the data.</p>

<p>To do it, I have the following structure: </p>

<ol>
<li>Local repository: where the ones who want to develop the flow can perform modifications, commit and push to the remote repository</li>
<li>Remote repository: A bare repository that is also used as a gateway. Whenever a push is done to this bare repository it is repercuted to the COMMON repository</li>
<li>COMMON repository: the public 'read' directory. Only a push can modify its history, even commit is forbidden(via the pre-commit hook)</li>
</ol>

<h1>Problematic</h1>

<p>The COMMON repository should not have any direct modifications. However, as multiple users are sudoers, I cannot be 100% sure that someone will not directly modify it.<br>
Or, accordingly with Murphy, I am 100% sure that someone will one day modify something locally in the COMMON repository...</p>

<p>To be sure that there is no conflict when someone rightfully pushes into the remote directory, and consequently in the COMMON repository, I thought about the following hooks for the COMMON:</p>

<ul>
<li>pre-receive  </li>
</ul>

<pre><code>#!/bin/bash
#Stash local modifications if there are ones to avoid conflicts
echo ""## Local modifications on the Product-Line are stashed with the tag: 'local modifications @ $(date)' ""
git stash push -m ""local modifications @ $(date)""
exit 0
</code></pre>

<ul>
<li>post-receive  </li>
</ul>

<pre><code>#!/bin/bash
#Checks out the the branch that contains the last commit
git checkout $( git log --branches -1 --pretty=format:'%D' | sed  -e 's/.*-&gt; //g' -e 's/.*, //g' )
#Forces synchronization with the last commit
git stash
git stash drop stash@{0}

exit 0
</code></pre>

<p>However, the stash commands does not seem to work as expected.  The log returned when a push is done in the local repository is the following :</p>

<pre><code>$&gt; echo toto &gt;&gt; stash_test ; git commit -am ""test"" ; git push
[tbranch f6e8fbb] test
 1 file changed, 1 insertion(+)
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 48 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 351 bytes | 351.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: remote: ## Local modifications on the Product-Line are stashed with the tag: 'local modifications @ Mon Dec 23 17:44:59 CET 2019'         
remote: remote: No local changes to save        
remote: remote: Already on 'tbranch'        
remote: remote: M   stash_test        
remote: remote: Saved working directory and index state WIP on tbranch: f6e8fbb test        
remote: remote: stash@{0}: WIP on tbranch: f6e8fbb test        
remote: remote: Dropped stash@{0} (b29b76ceb2b2dfd2fcf6d0577c7200e517641328)        
remote: To ../pl
remote:    f75b5d1..f6e8fbb  tbranch -&gt; tbranch
To /home/usr/TEMP/remote
   f75b5d1..f6e8fbb  tbranch -&gt; tbranch
</code></pre>

<p>Two issues here: </p>

<ul>
<li>To test the auto stashing in the COMMON repository, I modified a file. However when the pre-receive hook reaches the <code>git stash push -m ""msg""</code>, it returns <code>No local changes to save</code></li>
<li>In the post-receive hook, the <code>git stash</code> plus <code>git stash drop stash@{0}</code> should emulate an update to the last commit of the current branch. In the log, it appears that the operation worked, however, if I get the status in the COMMON repository I obtain :</li>
</ul>

<pre><code>On branch tbranch
Changes not staged for commit:
  (use ""git add &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

    modified:   stash_test
    modified:   test

</code></pre>

<ul>
<li><code>stash_test</code> is the file modified by the last commit</li>
<li><code>test</code> is the file locally modified to test the all procedure</li>
</ul>

<p>Double dragon effect:
 1. the <code>git stash list</code> is empty, where it should contain the modification of <code>test</code>. However the log is coherent with that as it did not stash <code>test</code> in the pre-receive hook<br>
 2. <code>stash_test</code> is not updated with the last commit... Here it is strange as the log indicates that everything was okay...</p>

<p>Where I am lost is that I tried to perform the steps manually and... it works as I expected.<br>
I however am quite new in git administration so I could have missed something...</p>

<h1>Questions</h1>

<ul>
<li>Does the <code>git stash</code> command have a fancy behavior in the hooks that does not allow me to do what I want ?</li>
<li>Is there another (maybe better) way to achieve what I want to do ?</li>
</ul>

<h1>EDIT: Issue root cause identified</h1>

<p>When a hook is executed, it is in the .git directory of my COMMON dir.
Hence, the <code>git stash</code> does not detect the modifications.<br>
If I perform a <code>git status --porcelain</code> in the pre-receive hook I get: </p>

<pre><code>?? HEAD
?? ORIG_HEAD
?? config
?? description
?? gitk.cache
?? hooks/applypatch-msg.sample
?? hooks/commit-msg.sample
?? hooks/fsmonitor-watchman.sample
?? hooks/post-receive
?? hooks/post-update.sample
?? hooks/pre-applypatch.sample
?? hooks/pre-commit
?? hooks/pre-commit.sample
?? hooks/pre-push.sample
?? hooks/pre-rebase.sample
?? hooks/pre-receive
?? hooks/pre-receive.sample
...
</code></pre>

<p>Which is expected as the content of the .git dir are not under version control.</p>

<p>In fact, even with the @knittl suggestion of using a <code>git reset --hard</code> does not work as it is not done in the 'work' directory of common.</p>

<p>The trivial workaround I thought about is to encapsulate the operations in my hooks with:</p>

<pre><code>pwd # returns COMMON/.git
pushd .. &gt; /dev/null
pwd # returns COMMON
#hook operations
popd &gt; /dev/null
</code></pre>

<p>Checking withs <code>pwd</code> commands in the hooks I finally am in the correct directory to perform my stash/reset.<br>
However, when doing it, the remote message returns me:</p>

<pre><code>remote: remote: fatal: not a git repository: '.'        
</code></pre>

<p>So now I am a bit confused as I am actually at the root of my COMMON so it should be considered as a git repository...</p>

<p>Even if, as suggested in by @knittl and @torek, it is not the golden way to deploy something, I would like to understand <strong>why there are these limitations</strong> and if there is <strong>a way to override them</strong>.</p>

<h1>EDIT2: Stash in pre-commit</h1>

<p>In the pre-commit hook I perform a stash to save the local modification and abort the commit so the 'reckless sudoer' cannot commit its changes but can later cherry-pick his modifications.
In this hook, the <code>git stash</code> performs as expected.</p>

<p>I guess that the issue is related with the fact that pre/post-receive hooks are server-side hooks and should normally only be used for bare repository.</p>
",7,5841977,,
66588076,2128007,3/11/2021 18:05,1,59,<git><devops><githooks><git-remote><git-mirror>,How to make sure developers use new git remote after repository migration,"<p>Every answer about migrating git repo says:</p>
<pre><code>git clone --mirror git@github/odlrepo.git
git push --mirror git@github/newrepo.git
</code></pre>
<p>But nobody says, what to do after...</p>
<p>How to force developers to use <strong>newrepo</strong>?</p>
<p>Solutions that I came with are:</p>
<ul>
<li>git hook on <strong>oldrepo</strong> which will push changes to <strong>newrepo</strong> (but if developers keep pushing to both - it seems like its asking for troubles)</li>
<li>git hook which blocks commits and says &quot;change remote, we are using now <strong>newrepo</strong></li>
</ul>
<p>But maybe there are some better solutions?</p>
",5,2128007,0,0
31532143,225052,7/21/2015 6:49,3,703,<git><githooks><pre-commit-hook><pre-commit>,Staging again files during pre-commit hook?,"<p>I have installed <code>mvn java-formatter:format</code> task in pre-commit hook. This task will format the java source codes.</p>

<pre><code>pushd src/ &gt; /dev/null

mvn java-formatter:format
RETVAL=$?
if (($RETVAL == 1)); then
        exit 1
fi

popd &gt; /dev/null
</code></pre>

<p>I need to append newly formatted source files to commit. How can I do this?</p>
",0,225052,0,0
2992128,169992,6/7/2010 18:34,4,5576,<git><githooks>,pre-push git hook?,"<p>I would like to run a compression script before <code>git push</code> such that anytime a user tries to push changes to a remote repository, it checks for uncommitted changes in the compressible assets, aborts <code>git push</code>, runs <code>git commit</code>, then runs <code>git push</code> again.</p>

<p>Is something like that possible using only git hooks? </p>
",0,169992,0,0
48266551,8126658,1/15/2018 16:00,1,524,<groovy><gitlab><githooks><gitblit>,GitBlit add a hook,"<p>I have a GitBlit instance on a windows server, and i want to set a <a href=""http://gitblit.com/setup_hooks.html"" rel=""nofollow noreferrer"">hook</a> on post receive callback to start a gitlab ci pipeline on another server. </p>

<p>I already have set a GitlabCi trigger who works well, but my hook doesn't. Here is <code>build-gitlab-ci.groovy</code> file :</p>

<pre><code>import com.gitblit.GitBlit
import com.gitblit.Keys
import com.gitblit.models.RepositoryModel
import com.gitblit.models.UserModel
import com.gitblit.utils.JGitUtils
import org.eclipse.jgit.lib.Repository
import org.eclipse.jgit.revwalk.RevCommit
import org.eclipse.jgit.transport.ReceiveCommand
import org.eclipse.jgit.transport.ReceiveCommand.Result
import org.slf4j.Logger

logger.info(""Gitlab-CI hook triggered by ${user.username} for ${repository.name}"")

// POST :
def sendPostRequest(urlString, paramString) {
    def url = new URL(urlString)
    def conn = url.openConnection()
    conn.setDoOutput(true)
    def writer = new OutputStreamWriter(conn.getOutputStream())

    writer.write(paramString)
    writer.flush()
    String line
    def reader = new BufferedReader(new     InputStreamReader(conn.getInputStream()))
    while ((line = reader.readLine()) != null) {
        println line
    }
    writer.close()
    reader.close()
}
sendPostRequest(""https://xxxxx/api/v4/projects/1/trigger/pipeline"", ""token=xxxxxxxx&amp;ref=master"")
</code></pre>

<p>The project configuration :</p>

<p><a href=""https://i.stack.imgur.com/0E7M6.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/0E7M6.png"" alt=""enter image description here""></a></p>

<p>Moreover, i don't know where <code>logger.info</code> write the log, so i don't know if my script was executed well. Thanks for help</p>
",0,8126658,,
3007051,352052,6/9/2010 15:01,2,1948,<git><githooks>,"git init template, replacing modified hooks","<p>I am constantly updating my local git hooks. I have a repo to house my .git template. This means that I am constantly running git init --template=../git-template to update repos with my hook changes.</p>

<p>Problem: Everytime I run git init --temp..., I need to first remove the hooks in .git/hooks that will be replaced with the updated hooks. This is annoying. I know I can script the removal of these hooks from the repo that I want to update, but is this functionality built into git already?</p>
",0,352052,,
48281376,6599478,1/16/2018 12:31,1,582,<git><github><git-merge><githooks><cherry-pick>,Git auto merge commits from another repo,"<p>I have 2 private <strong>repository</strong> (not branches) <code>A</code> and <code>B</code> of which I have full access to.</p>

<p>Whenever <code>A</code> makes a commit, I want <code>B</code> to <code>cherry-pick</code> or <code>merge</code> the new commit into it (assuming no merge conflicts), so that <code>B</code> will always be up-to-date with the latest changes from <code>A</code>.</p>

<p>How do I accomplish this with Git hook or something else?</p>

<p>A shell script is less flexible as it means you have to commit/push with command line rather than GUI (eg. with <a href=""https://www.sourcetreeapp.com/"" rel=""nofollow noreferrer"">SourceTree</a>).</p>
",4,6599478,,
48284961,5219155,1/16/2018 15:42,7,3152,<git><bash><githooks>,How to capture a git commit message in commit-msg hook?,"<p>I wrote a script</p>

<pre><code>#!/bin/bash
commit_msg=$1
echo ""Your commit message: $commit_msg""
</code></pre>

<p>in <code>hooks/commit-msg</code> which validates the commit message in</p>

<pre><code>git commit -m ""fixed a bug""
</code></pre>

<p>But when I run the hook, I have:</p>

<pre><code>Your commit message: .git/COMMIT_EDITMSG
</code></pre>

<p>instead of</p>

<pre><code>Your commit message: fixed a bug
</code></pre>

<p>How can I capture the commit message into a variable?</p>

<p>I've read <a href=""https://stackoverflow.com/questions/4870007/how-to-capture-a-git-commit-message-and-run-an-action"">How to capture a git commit message and run an action</a>
but it didn't help me because that hook was for <code>post-receive</code> and I need it for <code>commit-msg</code> so I don't have my commit message in</p>

<pre><code>git log -1 HEAD --pretty=format:%s
</code></pre>

<p>because my hook blocks from doing a commit.</p>
",1,5219155,,
31561084,5143042,7/22/2015 10:54,2,246,<gitlab-ci><githooks>,How can I disable GitLab custom (pre-recieve) hook without rename/delete hook script file?,"<p>I have custom pre-receive hook on project in GitLab CI.</p>
<p>And I need to disable it sometimes.
To do this, I rename custom hooks directory in my repository.</p>
<p>Are there any simpler way to toggle this hook?</p>
",0,5143042,,
48301280,414825,1/17/2018 12:33,154,96931,<githooks>,"How can I manually run a Git pre-commit hook, without attempting a commit?","<p>I just want to be able to run it to see if the code in my working tree passes it, without actually attempting a commit.</p>
",2,414825,0,0
3139223,234780,6/29/2010 9:03,7,1819,<git><scripting><githooks>,git: repo monitoring tool,"<p>Do you know any good repo monitoring solution?</p>

<p>I'd like to get information when someone pushes to remote repo (preferably via taskbar tray icon: ""someuser pushed…"").</p>

<p>Other solutions I consider:</p>

<ul>
<li>recieve hook</li>
<li>periodically git log via cron</li>
<li>check for updates on running every git command</li>
</ul>

<p>(my system of choice is Ubuntu)</p>
",3,234780,,
59668310,3220769,1/9/2020 16:27,2,1045,<python><python-3.x><git><githooks><pre-commit.com>,Python pre-commit fails but does not make corrections,"<p>I'm using some pre-commit hooks and running into an error with <code>python-import-sorter</code>. I'm getting the error below:</p>

<pre><code>hookid: python-import-sorter

Files were modified by this hook. Additional output:

ERROR: /app/tests/standalone_regression/build_test_data.py Imports are incorrectly sorted.
Fixing /app/tests/standalone_regression/build_test_data.py
FIXED: /app/tests/standalone_regression/build_test_data.py
</code></pre>

<p>Normally it's no problem, and it reorders the imports as it sees fit. I see the changes with <code>git diff</code> or <code>git status</code>, stage the files with <code>git add -u</code> and the next <code>git commit</code> succeeds. The problem is that now I am getting nothing new to stage, so I can't commit any changes and the commit hook fails every time. How do I resolve this beyond skipping the hooks with <code>git commit -n</code>.</p>

<p>Relevant import section:</p>

<pre><code>import datetime
import itertools
import json
import os
import re
from typing import Iterable, Mapping, Union

from dateutil import parser as date_parser
from pymysql import Connection

from foobar.app.app_helpers import jsonize
from foobar.db import db_utils, foo
from foobar.generators.generate_foo_file import format_file_id
from foobar.parsers import (abc_record, def_record, parse_abc_file, parse_def_file,
                              parse_ghi_file)
from foobar.parsers.parse_abc_file import validate_abc
</code></pre>
",3,3220769,,
59751467,5956273,1/15/2020 12:28,0,233,<windows><git><permissions><githooks>,Issues with git hooks permissions on Windows,"<p>I have a bare git repository running on a Windows machine, and I am trying to have it run a post-receive hook. I have the following in the hooks/post-receive file</p>

<pre><code>cmd //c ""activate &lt;some-env&gt; &amp;&amp; do-something""
</code></pre>

<p>which works nicely if it is run manually from Git Bash. However, it doesn't run after a commit is pushed.</p>

<p>The file's permissions, as obtained from Git Bash by doing <code>ls -lh</code>, are <code>644</code>. This may be the issue, but <code>chmod +x &lt;file&gt;</code> has no effect. Neither does <code>git update-index --chmod=+x &lt;file&gt;</code>, as suggested elsewhere - this results in <code>fatal: this operation must be run in a work tree</code> (I guess this is not meant for a bare repository). The permisions in the sample hooks are well set, but if I do <code>echo &lt;my-command&gt; &gt; some-hook.sample</code> the execute permissions are lost. This is also the case if I modify the file using e.g. Notepad++.</p>

<p>How does one change the execute permissions in this case?</p>

<p>Thanks!</p>
",3,5956273,,
3284292,9269,7/19/2010 19:24,96,48055,<git><pre-commit-hook><githooks><pre-commit>,Can a Git hook automatically add files to the commit?,"<p>I'd like to add an automatically generated file to the same commit using a pre- or post-commit hook in Git, dependent on the files that were modified in that commit.  How would I go about this?</p>

<p>I've tried this as a pre-commit hook, but no luck:</p>

<pre><code>#!/bin/sh
files=`git diff --cached --name-status`
re=""&lt;files of importance&gt;""
if [[ $files =~ $re ]]
then
  echo ""Creating files""
  exec bundle exec create_my_files
  exec git add my_files
  exec git commit --amend -C HEAD
fi
</code></pre>

<p>This successfully adds them to the repository, but does not add them to the commit.  I've also tried using the last two exec lines in a post-commit hook along with the pre-commit inspection, but no good either.</p>
",1,9269,0,0
31585470,1026366,7/23/2015 11:01,1,665,<git><sh><githooks>,New line in git hook,"<p>I have a git hook which calls a php file. The php file will produce an output (after running some Unit Tests). Te hook file is a sh file. The output from php file is echoed to the terminal, but \n is stripped, and everything is on a single line. Any ideas what I have to do to have new lines?</p>

<p>Thanks</p>
",2,1026366,0,0
22017029,43265,2/25/2014 14:24,19,5050,<git><githooks>,What git hooks apply to 'git rebase --continue'?,"<p>I'm trying to build a set of git hook scripts for my organization, and one I would like to use (for multiple project just for myself) would be to check upon a <code>git rebase --continue</code> that I don't have any conflicts markers leftover in my code (<code>&lt;&lt;&lt;&lt;&lt;</code>, <code>=====</code>, or <code>&gt;&gt;&gt;&gt;&gt;</code>).</p>

<p>I already have such a script for my pre-commit, but what script applies on a <code>rebase --continue</code> ?</p>
",4,43265,0,0
59760619,192831,1/15/2020 22:45,1,755,<git><githooks>,Git Server Side Hooks not running?,"<p>I'm new to Server Side Hooks with Git, and I'm running into a problem where it seems like the hooks just aren't running at all. My Git repo is a bare repo.</p>

<p>All I want to do is extract one file from the repo and write it to disk somewhere else. I don't need the entire archive.</p>

<p>On the remote (origin) server, I have authored this file and stuck it in <code>/my/path/repo.git/hooks</code>.</p>

<pre><code>#!/bin/sh

# For debugging
echo ""HELLO"" &gt; /my/path/hello.txt

# Auto-deploy thefile.php to /my/path/ every time something is pushed to this repo
exec git -C /my/path/repo.git show master:thefile.php &gt; /my/path/thefile.php
</code></pre>

<p>I have verified the permissions on the hook:</p>

<blockquote>
  <p>-rwxrwxr-x 1 webadmin webadmin  543 Jan 15 16:27 post-update</p>
</blockquote>

<p>If I manually run the script on my server, with <code>$ ./path/to/repo.git/hooks/post-update</code>, everything works fine. <code>hello.txt</code> is written along with <code>thefile.php</code>. </p>

<p>But when I push my local repo to origin nothing ever changes. I am testing my pushes by reverting the latest commit and pushing it. For the next test, I drop that revert commit and force push to remove it from <code>origin/master</code>. That way are there are actual commits with changes that are going every time I push. Out of desperation I did make a completely new commit with an arbitrary change, and that didn't make any difference.</p>

<p>I've tried this hook as both <code>post-update</code> and <code>post-receive</code>. Neither one seems to work.</p>

<p>I would greatly appreciate any insight you guys can provide.</p>
",0,192831,0,0
49360034,5742004,3/19/2018 9:54,0,4243,<reactjs><npm><gitlab><githooks>,gitlab : How to bypass ESLint errors while trying to commit,"<p>I was trying to commit the changes to my dev branch in Gitlab, but whenever i try to commit changes it shows the errors of ESLint and the commit gets aborted. </p>

<p>I tried cloning the repository from dev branch and made changes and installed dependencies using '<strong>npm install</strong>' and the errors seems to appear only when dependencies are installed. </p>

<p>Tested without installing npm dependencies, made changes to the code and tried to commit , and Voila! it worked, and changes pushed to the dev branch.</p>

<p><strong><em>Help me to avoid these errors appearing at the time of pushing the changes.</em></strong></p>

<p>(Please check the image below to view the errors displayed)</p>

<p><a href=""https://i.stack.imgur.com/TCmnx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/TCmnx.png"" alt=""enter image description here""></a></p>
",3,5742004,0,0
3311869,327508,7/22/2010 17:59,30,27847,<git><githooks>,Writing Git hooks in python/bash scripts,"<p>I have recently needed to write git hooks, for all commits to reference a particular ticket.</p>

<p>I was hoping for a place to start learning. All the stuff in the pro git book is written in Ruby. Since Ruby is not my strong suit, can anybody share tutorials about git hooks written in other languages? (I'd particularly prefer Python or Bash scripts.)</p>
",1,327508,0,0
49384386,9522566,3/20/2018 12:35,0,170,<git><merge><githooks>,Git hook when a merge fails,"<p>I've got a challenge regarding GIT. I'm trying add and checkout specific files when a merge fails. 
I already created a post-merge hook which checks if there are files with UU-flag (Both modified) but the post-merge hook isn't invoked when a merge fails. </p>

<pre><code>### Are any Sass files canged and added?
if git status -s | grep  '^UU.\+styles\.css$'
then
    git add skin/frontend/responsive/*/styles.css -f
    git checkout --theirs skin/frontend/responsive/*/styles.css
    git commit -m 'Added and checked out specific css-files from the     incoming branch to avoid merging binary files'
else
    echo ""didnt find conflicted files""
fi
exit 0
</code></pre>

<p>I've thoroughly searched for a solution or something but couldn't find a way to automatically check for merge conflicts after a merge fails. 
The only thing that came close enough was a python-script which fired when a pre-commit is invoked. 
So, is there a hook which I can use when a merge fails? </p>

<p>Thanks in advance</p>
",3,9522566,,
49388121,3469484,3/20/2018 15:23,4,380,<git><github><githooks><git-push>,Git: managing files on push event,"<p>I have a repository with a LaTeX project that includes the .pdf compiled and generated from the .tex file. I want the history and the source files to be private but the .pdf should be public and with a fixed URL. GitHub itself provides a fixed URL for the single file but in order to make it publicly available I need to set the repository public and this exposes also the history and all other files to the public.<br>
Do you think there is a way where I can have GitHub (or BitBucket, or ...) to push the single .pdf file somewhere else so that it has a fixed unique and public URL? I thought I could somehow push it to AWS's S3 or have a Lambda receiving a HTTP call and going to fetch the single file but there could be a far easier way I don't know.</p>
",3,3469484,0,0
49394510,8982034,3/20/2018 21:37,2,1963,<git><github><ubuntu-16.04><webhooks><githooks>,Setting up a git hook to automatically git pull on a remote server,"<p>I have a remote ubuntu server that stores the live version of my code from GitHub. Every time I push from my local computer with git, I want the remote server to automatically pull the code. Other guides usually talk about adding a PHP file to a web directory though my server doesn't have a direct HTTP URL or a www directory since it's not used for a website.</p>
<p>I've also tried creating a <code>post-receive</code> hook but to no result, I don't know if I'm doing it wrong or not.</p>
<p><strong>My post-receive file in .git/hooks:</strong></p>
<pre class=""lang-sh prettyprint-override""><code>#!/bin/bash
git --work-tree=/home/folder/anotherFolder/repo --git-dir=/home/folder/anotherFolder/repo checkout -f
</code></pre>
<p>I'd like to note that I'm also not the only one that will be pushing to the repository, so it should support commits from different devices.</p>
",4,8982034,0,0
41149531,1261825,12/14/2016 18:24,4,711,<unit-testing><reactjs><githooks>,"Automatically ""test"" Storybook","<p>We use storybook in our React project. Occasionally, we'll break something in it (usually when we refactor and do something like move a file). Storybook will still deploy properly, but when you open it, you get a big red card for the error.</p>

<p>Is there some command-line method (without going crazy with PhantomJS or something), that we could hook into our pre-push to make sure we haven't broken Storybook (at least at a high level)?</p>
",0,1261825,0,0
3462955,360811,8/11/2010 21:22,300,135360,<git><hook><githooks>,Putting Git hooks into a repository,"<p>Is it considered to be a bad practice - to put <code>.git/hooks</code> into the projects repository (using symlinks, for example). If yes, what is the best way to deliver same hooks to different Git users?</p>
",4,360811,0,0
49431038,8512499,3/22/2018 14:19,0,268,<git><ssh><sh><githooks>,execute git hooks in non executable environment/ edit how git calls hooks,"<h1>Question: how do you edit how git calls a hook?</h1>

<h3>TL;DR - my hosting platform's security is weird and I need to figure out how to edit how git calls the post-receive hook.</h3>

<p>I'm trying to setup automatic deployment via GIT, but the main way people suggest you do that is with a post-receive script. If I cd into hooks and do </p>

<pre><code>$ sh post-receive
</code></pre>

<p>, it works just fine, but if I </p>

<pre><code>$ ./post-receive
</code></pre>

<p>, it will complain about permissions though it has</p>

<pre><code>$ chmod 777 post-receive
</code></pre>

<p>(which you can check out with $ ls -l).</p>

<p>Here's the message I got from support:
""The reason is <em>the SSH environment is mounted in as a non-executable environment, for security reasons</em>. This means that you can't run scripts just by the path.   </p>

<p>As an example, <em>running:  /www/repos/webprosjekt18.git/hooks/post-receive will not work</em>, it will give a permission error.   </p>

<p>Running: <em>bash /www/repos/webprosjekt18.git/hooks/post-receive will work just fine</em> (depending on what that script does ofc, but it will at least run the file).  </p>

<p>We think git by default run hooks by calling:  /www/repos/webprosjekt18.git/hooks/post-receive which will fail. ""</p>

<p>remote script:</p>

<pre><code>mkdir repos
cd repos
git init --bare
cat &gt; hooks/post-receive &lt;&lt;END
#!/bin/sh
echo ""executing post-receive hook""
END
chmod 777 hooks/post-receive
cd hooks
sh post-receive
</code></pre>
",4,8512499,,
14321989,451075,1/14/2013 16:00,0,112,<git><githooks>,Git post-receive hook leaves files to be committed,"<p>Three places git is installed:  Local, Bare, and Development.</p>

<p>I push from Local to Bare, post-receive hook pushes my dev branch from Bare to Development.  The commits appear in the git log just fine, however, if Development is currently on the branch it's receiving, I get a modified list of files staged and ready to commit.</p>

<p>The thing is the staged files are actually the old code (pre-commmit), and to make my newly pushed code visible, I need to git stash everything.  What I'm trying to accomplish is that when code is pushed from Local to Bare, it is automatically available for viewing on the Development server, and requires no manipulation of Development directly.</p>

<p>An example -- On Local:</p>

<p>Change autoload.php on the 'dev' branch to use new php 5.4 arrays</p>

<pre><code>$autoload = []; // instead of $autoload = array();
</code></pre>

<p>Push to my Bare repo</p>

<pre><code>git push
</code></pre>

<p>Post-receive fires correctly and moves the code from the 'dev' branch on Bare to the 'dev' branch on Development.</p>

<p>Now if I perform a git status on Development, I have:</p>

<pre><code>modified:  application/config/autoload.php
</code></pre>

<p>autoload.php still shows the old code:</p>

<pre><code>$autoload = array();
</code></pre>

<p>It is only after I perform git stash that my new code becomes visible.</p>
",0,451075,,
22276111,2836259,3/8/2014 22:53,1,61,<git><version-control><web-hosting><githooks><bluehost>,Git: Why use a hook for setting up repo on your server?,"<p>Tutorial after tutorial on setting up a git repo on your server are essentially all the same -- and they go like this:</p>

<ol>
<li>Install git on your server</li>
<li>Create <code>git/project.git</code> off your root directory of your server</li>
<li>Initialize <code>git/project.git</code> using <code>git init --bare</code></li>
<li>In <code>git/project.git/hooks</code> then <code>touch post-receive</code></li>
<li>Add to post-receive: <code>#!/bin/bash\n 2 GIT_WORK_TREE=/path/to/your/vc'd/project git checkout -f</code></li>
<li>Then make post-recieve executable: <code>chmod +x post-receive</code></li>
<li>Back on your local machine, <code>git clone ssh://user@host.com/git/project.git</code></li>
<li>And add files, commit and push</li>
</ol>

<p>This is all fine, and I can indeed push to the <code>git/project.git</code> and end up with those files in the <code>path/to/your/vc'd/project</code> but I'm looking to understand...</p>

<p><em><strong>Why use the hook at all?</em></strong>  </p>

<p>It leaves you without the ability to pull your <code>path/to/your/vc'd/project/</code> on your local machine.
Why not just <code>git init</code> the <code>path/to/your/vc'd/project</code> and <code>clone</code> it on your local machine?</p>

<p>Further, if anyone could explain how to get <code>git pull</code> functionality on the local side for the <code>path/to/your/vc'd/project</code> with this hooking method, it would be much appreciated</p>

<p>Thanks :)</p>
",0,2836259,0,0
41274029,3738647,12/22/2016 0:22,5,3627,<git><githooks>,"Git server hooks, check if code is formated","<p>I am trying to create a git server hook so that unformatted code would not be pushed. In my scenario I want to use clang format to check if the code is formatted correctly. if not the user will receive a message stating they need to format the code before pushing. </p>

<p>we are trying to implement a must format policy at work and this will simply be a safety net. </p>
",1,3738647,0,0
3615426,436642,9/1/2010 6:09,6,3169,<git><githooks>,GIT pre-receive hook,"<p>Is there a way to change the file that is being pushed to the server using a <a href=""http://progit.org/book/ch7-3.html#serverside_hooks"" rel=""nofollow noreferrer"">server-side pre-receive hook</a>?</p>

<p>Say I want to add something to the end of a file like:</p>

<pre><code>//End of Org
</code></pre>

<p>each time someone pushes to my repo.</p>

<p>Is there a way you can change the file coming in using <a href=""http://git-scm.com/docs/githooks"" rel=""nofollow noreferrer""><code>git hooks</code></a>?</p>
",0,436642,0,0
3616648,234780,9/1/2010 9:32,6,6406,<git><bash><scripting><githooks>,git post-commit hook - script on committed files,"<p>Can I see somewhere an example post-commit hook to run a script on each committed file?</p>

<p>eg. </p>

<pre><code>git add file1
git add file2

git commit -am ""my commit""
</code></pre>

<p>and the hook executes:</p>

<pre><code>myscript -myparams ""file1""
myscript -myparams ""file2""
</code></pre>

<p>The best would be to have parameter to commit command to run this hook or not, eg. <code>git commit -X</code>… executes this post commit hook. Eventually an alias like <code>git-commitx</code>.</p>

<p>How about the same version as a pre-commit hook on files in index? Can I abort a commit when execution of the scripts fails on one of the files?</p>

<h3>Edit:</h3>

<p>Here is what I have now: </p>

<pre><code>#!/bin/sh                                     
#.git/hooks/post-commit
dir=`pwd`
echo ----------------------------------------------
echo PHP Mess Detector results for commited files:
echo ----------------------------------------------
git show --pretty=""format:"" --name-only  | grep '\.php$' | xargs -i phpmd $dir/'{}' text codesize,unused$
echo ----------------------------------------------
</code></pre>
",0,234780,0,0
14327507,451075,1/14/2013 21:58,1,391,<git><githooks>,Git post-receive Host Key verification failed,"<p>Have 3 servers: Local, Bare, Development.</p>

<p>The following workflow works perfectly:</p>

<pre><code>1. Make my local changes 
2. git push to Bare 
3. ssh into Bare 
4. $ ssh ip.of.Development.server ""cd /path/to/Development/repo; git pull""
</code></pre>

<p>This does exactly what you would expect, content gets pulled to my Development server, displays on the page, all is well.</p>

<p>However, if I move the last line to my hooks/post-receive file on Bare, I get a</p>

<pre><code>remote: Host key verification failed.
</code></pre>

<p>I can ssh from Development to Bare without issue and without using a password (after I set up an RSA pair).</p>
",0,451075,0,0
22297286,2055097,3/10/2014 10:13,3,1996,<git><merge><githooks>,git hook: ensure each merge into the master has a message also the automatic merges,"<p>In our deployment process on of the last steps will be a merge of the release branch into the master branch. </p>

<p>I want to ensure via a hook, that each of these merges needs a manual message in the commit, so the person merging has the opportunity to write down what general changes will go into the master with this merge. Aka Change.log or release notes.</p>

<p>I found so far that the hook I would need would be the pre-merge. 
<a href=""https://gitorious.org/git/mjg/commit/c15bfac6d3f5a28b3cd5745fef71e7f93bc1f8a4"" rel=""nofollow"">https://gitorious.org/git/mjg/commit/c15bfac6d3f5a28b3cd5745fef71e7f93bc1f8a4</a>
It should only be activated when merging into the master branch. I guess it also should be called when a non-automatic commit into the master takes place. </p>

<p>Has anybody some hints how I can do that? A bash hook would be preferred, but php is also fine. Or I guess from other languages I can try to translate the concept to bash or php.</p>

<p>Thank you for any hints in advance!</p>
",4,2055097,0,0
32206635,4170264,8/25/2015 14:22,0,31,<git><githooks><git-commit><pre-commit-hook>,How a git repo local directory can be extracted when a hook is executed?,"<p>Basically as it says that is. Imagine the following hook code:</p>

<pre><code>@echo on
echo.
echo.
echo.
echo %CD%         :: Try to print the current dir
echo %GIT_DIR%    :: Try to print the Git dir
echo.
echo.
ping 127.0.0.1 -t :: Loop on localhost, because timeout will break the hook
</code></pre>

<p>As it runs it does not print anything, I've put @echo on just for that..</p>

<p>Any Ideas. Tanks !</p>
",0,4170264,0,0
3762012,234780,9/21/2010 15:46,6,2465,<git><githooks>,git: who pushed in post-receive hook,"<p>How do I determine who pushed to the repository? </p>

<p>I.e. Somebody does <code>git push origin master</code> and in the post-receive hook on the <code>origin</code> repo I need to use the name or e-mail of Somebody.</p>
",0,234780,0,0
3762084,234780,9/21/2010 15:54,17,12375,<git><bash><githooks>,git: empty arguments in post-receive hook,"<p>I'm writing post-receive hook basing on the <code>post-receive-email</code> script from the <code>contrib</code> dir, but it seems that the <code>oldrev</code> and <code>newrev</code> arguments are empty.</p>

<p>The script looks like this:</p>

<pre><code>#!/bin/bash

oldrev=$(git rev-parse $1)
newrev=$(git rev-parse $2)
</code></pre>

<p>The script runs on push, but all <code>$1</code>, <code>$2</code>, <code>$oldrev</code> and <code>$newrev</code> are empty. Should I configure something to get it running?</p>

<p>(The repository was created by <code>gitolite</code> if it does matter)</p>
",0,234780,0,0
60105184,4876611,2/6/2020 23:40,1,95,<git><githooks><git-flow>,Prevent feature branch to merge to master,"<p>Is there a hook-type that helps me to prevent the merge/PR of certain branch types to master? I only want to allow hotfix/ and release/ branches to be merged to master.</p>

<p>I'm currently using Gitflow, and my team have adapted smoothly, the thing is, one of the developers threw a PR from his feature branch to master instead of develop, all the reviewers omitted this and merged the branch, no one noticed the merge was to master and, when a hotfix branch was created from master, the code from that feature/ branch went to production and caused many troubles.</p>

<p>We made a regression before going to production, but the new code was database dependant and specific to certain process so we didn't caught it.</p>

<p>I know this was an error in the process, but still I want to protect the master branch from this kind of human-error.</p>
",4,4876611,,
60109244,4065549,2/7/2020 7:56,0,244,<git><jenkins><githooks>,Run Jenkins Job only when specified Git branches are merged,"<p>I am trying to find a way to automatically trigger a Jenkins Job only when specific git branches are merged. For example if branch a, branch b and branch c are merged, then the jenkins job should be triggered. Is this possible? If so, could anyone please explain the process necessary.</p>
",0,4065549,,
41401296,42450,12/30/2016 18:57,4,1480,<git><githooks><jetbrains-ide>,Understanding git commit --only and pre-commit hooks,"<p>I'm working on a pre-commit hook to reformat code, and in general, it works; it reformats and <code>git add</code>s any staged files, and the resulting commit contains the reformatted code as desired. </p>

<p>However, it doesn't play nicely with <code>git commit --only</code> (which is the variant used by JetBrains IDEs), and I'm trying to understand why. The combination of <code>git commit --only</code> and the pre-commit hook results in an undesirable index/working tree state, as described in the following sequence of events:</p>

<p>If I make a small change with a formatting error to a file and then run <code>git status</code>, this is what I see:</p>

<pre><code>On branch master
Your branch is up-to-date with 'origin/master'.
Changes not staged for commit:
  (use ""git add &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

    modified:   file.php

no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>If I then commit using <code>git commit --only -- file.php</code>, the pre-commit hook runs, and the changed and reformatted <code>file.php</code> is committed.</p>

<p>However, if I then run <code>git status</code> again, this is the result (arrow annotations mine):</p>

<pre><code>On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use ""git push"" to publish your local commits)
Changes to be committed:
  (use ""git reset HEAD &lt;file&gt;..."" to unstage)

    modified:   file.php &lt;-- contains original change, improperly formatted

Changes not staged for commit:
  (use ""git add &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

    modified:   file.php &lt;-- contains original change, properly formatted (per the most recent commit)
</code></pre>

<p>Where are the new staged change and the change in the working tree coming from?</p>

<p>Can someone explain exactly how <code>git commit --only</code> interacts with the index to produce the result shown above — and even better, whether there's a way to have my pre-commit hook play nicely with it?</p>

<p>My understanding is that <code>git commit --only</code> works with the version of the file in the working tree, so I tried removing the <code>git add</code> step from the pre-commit hook to see what would happen, and it resulted in the improperly-formatted version of the file being committed and the properly-formatted one in the working tree (which matches my expectations for a standard <code>git commit</code>, but I wasn't sure what to expect in the context of <code>git commit --only</code>). </p>

<p>I'm aware of the possibility of using a <code>clean</code> filter to reformat the code, rather than a pre-commit hook, but there are a few situational complications introduced by that approach that would be nice to avoid if possible.</p>

<p><strong>Note:</strong> This question is related to <a href=""https://stackoverflow.com/questions/26931103/phpstorm-and-pre-commit-hooks-that-modify-files"">Phpstorm and pre commit hooks that modify files</a> but is focused on addressing the problem in the context of <code>git commit --only</code>. Moreover, the problem doesn't seem to have been addressed by JetBrains, as was suggested in the accepted answer to that question.</p>
",1,42450,0,0
32223827,2630028,8/26/2015 10:14,2,189,<windows><git><ssh><githooks>,"Git Server-Side Hook, acces to user doing the pushing, without SSH","<p>I have Git 1.9.5 on Windows 7 x64. Assume the Git server is running the same version and the same OS on the same network. Is there a way to access the committer or author from a pre-receive or update server-side hook <strong>without</strong> the use of SSH? </p>

<p>From my understanding, after reading the man pages, it seems like SSH is required in order to set an environment variable on the server that would contain the user's name. And also the pre-recieve and update hooks typically only receive arguments from stdin or command line argv, at most, the name of the reference (branch), the SHA-1 that reference pointed to before the push, and the SHA-1 the user is trying to push.</p>
",0,2630028,0,0
41415048,1544047,1/1/2017 11:17,1,811,<linux><git><shell><command-line><githooks>,"How to run a sudo command, remotely, trough SSH, using an IdentityFile?","<p>I'm trying to trigger an executable file '<strong>post-receive</strong>', after pushing some changes to a <strong>git repo</strong> on a <strong>remote machine</strong>. Within this file are some commands that <strong>require elevated privileges</strong>, such as:</p>

<pre><code>sudo -S rm -f $HOME/.build
sudo -S rm -f $HOME/Packages
</code></pre>

<p>I've <strong>added a remote</strong> to my local repo: </p>

<pre><code>git remote add live ssh://dev@ip/home/dev/app/.git
</code></pre>

<p>So I can <strong>push changes</strong> to my remote repo, like this:</p>

<pre><code>git push live master
</code></pre>

<p>The '<strong>post-receive</strong>' file executes, whenever I push.</p>

<p><strong>However</strong>, a password is requested for sudo commands within the '<strong>post-receive</strong>' file.</p>

<pre><code>remote: [sudo] password for dev: Sorry, try again.
remote: [sudo] password for dev: 
remote: sudo: 1 incorrect password attempt
remote: [sudo] password for dev: 
</code></pre>

<ul>
<li>An unexpected event, had I not configured my access trough ssh keys and specified my identity file.</li>
</ul>

<p>Locally I have setup my SSH keys:</p>

<pre><code>~/.ssh/id_rsa
~/.ssh/id_rsa.pub
</code></pre>

<p><strong>Then</strong>, I've copied the local '<strong>~/.ssh/id_rsa.pub</strong>' file contents into the remote '<strong>~/.ssh/authorized_keys</strong>' file.</p>

<p>I've also setup a '<strong>config</strong>' file, locally, specifying the location of my identity:</p>

<pre><code>HostName ip
IdentityFile ~/.ssh/id_rsa
</code></pre>

<p>At this point, I'm able to ssh into the remote machine, <strong>without any passwords</strong>, like this:</p>

<pre><code>ssh dev@ip
</code></pre>

<p>This was already expected, however, when pushing changes to my remote repo:</p>

<pre><code>git push live master
</code></pre>

<p>...it asks me for a password when running the remote '<strong>post-receive</strong>' file. </p>

<ul>
<li>Why am I asked for this password? </li>
<li>What step am I not seeing clearly?</li>
</ul>

<p><strong>Running</strong>:</p>

<ul>
<li>OS X El Capitan locally</li>
<li>Ubuntu 16.04.1 LTS remotely</li>
</ul>

<p>Following the <a href=""https://github.com/PerfectlySoft/PerfectDocs/blob/master/guide/deployment-DigitalOcean.md"" rel=""nofollow noreferrer"">Digital Ocean Deployment Tutorial</a></p>
",1,1544047,,
50062985,4343502,4/27/2018 13:01,1,55,<git><credentials><githooks><git-push>,Programmatically block git push?,"<p>Is the any way to block <code>git push</code> under certain conditions?</p>

<p>For instance, if any of the files being pushed contain words that indicate confidential material, such as <code>aws_secret_key_id</code>, <code>password</code>, <code>bank account</code> or similar, is there any way to automatically reject the push?</p>
",2,4343502,,
48910983,1507546,2/21/2018 16:35,0,454,<git><githooks><git-flow>,Is there a way to prefill TAG_EDITMSG file,"<p>I need to prefill the message of the <a href=""/questions/tagged/git"" class=""post-tag"" title=""show questions tagged &#39;git&#39;"" rel=""tag"">git</a> tag that is about to be created created with some data. This way, once the editor is open, the user can check that data and do some changes if necessary.</p>

<p>The problem is that there is no hook that, AFAIK, can detect tag creation. And I can't just wrap <a href=""/questions/tagged/git"" class=""post-tag"" title=""show questions tagged &#39;git&#39;"" rel=""tag"">git</a> tag command as we use <a href=""/questions/tagged/gitflow"" class=""post-tag"" title=""show questions tagged &#39;gitflow&#39;"" rel=""tag"">gitflow</a> which takes care of it among others.</p>

<p>I tried to work on <code>TAG_EDITMSG</code> file by creating it before running the <a href=""/questions/tagged/gitflow"" class=""post-tag"" title=""show questions tagged &#39;gitflow&#39;"" rel=""tag"">gitflow</a> command to finish a release/hotfix/...etc and to create the tag but that does not work because it is overwritten.</p>

<p>Is there a way to customize <code>TAG_EDITMSG</code> ?</p>
",3,1507546,,
48913648,9392741,2/21/2018 19:10,1,504,<git><hook><githooks><tortoisegit>,git for windows setup post-receive hook,"<p>I am desperately trying to set up a post-receive hook on a git bare repo on a windows share. TortoiseGit offers many kinds of hooks but the post-receive hook. You can check the supported kinds here: </p>

<p><a href=""https://i.stack.imgur.com/6YTP0.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/6YTP0.png"" alt=""enter image description here""></a></p>

<p>Hope you have an idea how I can set up this. Using the post-receive-hook I would like to build my sources automatically.</p>

<p>I am using Windows 10 an Git for Windows 2.16.2 and TortoiseGit 2.6.0</p>
",0,9392741,,
31855090,1808052,8/6/2015 11:53,2,376,<git><githooks><xclip>,Git pre-push hook hangs after piping to xclip,"<h1>Preamble:</h1>

<p>When committing I tend to format message as following:</p>

<p><code>[&lt;task number&gt;] &lt;task title&gt;</code></p>

<p>which should be converted by pre-push hook to a valid GitHub syntax as following:</p>

<p><code>Work item [[&lt;git_branch&gt;](http://tracker/_workitems/&lt;git_branch&gt;)]:</code></p>

<p><code>- [x] [[&lt;task_number&gt;](http://tracker/_workitems/&lt;task_number&gt;)] &lt;task title&gt;</code></p>

<p>and then it's <code>cat</code>ted to console output so i can copy-paste it to PR description on github.</p>

<h1>Task</h1>

<p>Go one step further and put that message into clipboard so that I don't have to manually select it and copy from console.
Since I'm on Linux machine I decided that I'll use <code>xclip</code> for the task.</p>

<p>My current git hook script looks as following:</p>

<pre><code>#!/bin/sh

PBI=\`git symbolic-ref --short HEAD\`

echo ""**Backlog Item [$PBI]:**\n"" &gt; pr_messages/$PBI.md

git log develop..HEAD --format="" - [x] %B"" &gt;&gt; pr_messages/$PBI.md

sed -r -i 's|\[([0-9]{4,})\]|[[\1](http://tracker/_workitems/\1)]|g' pr_messages/$PBI.md

cat pr_messages/$PBI.md
</code></pre>

<h1>Problem</h1>

<p>When I add following line to the end of this script</p>

<pre><code>cat pr_messages/$PBI.md | xclip -selection clipboard
</code></pre>

<p>I get the message in my Ctrl+C/V clipboard, but git hangs and I have to abort it. Given that it's supposed to be a pre-push hook, it effectively prevents me from actually pushing my code.</p>

<p><strong>UPD:</strong> As proposed by @wumpus-q-wumbley here's the strace output:</p>

<pre><code>$&gt; ps aux | grep git

kraplax  29796  0.0  0.0  25696  5660 pts/1    S+   12:55   0:00 git push
kraplax  29797  0.0  0.0  48276  3040 pts/1    S+   12:55   0:00 ssh git@github.com git-receive-pack 'eduard-sukharev/ProFIT.git'

$&gt; sudo strace -p 29796
Process 29796 attached
wait4(29797, 
^CProcess 29796 detached
 &lt;detached ...&gt;
$&gt; sudo strace -p 29797
Process 29797 attached
select(7, [3 4], [], NULL, NULL
^CProcess 29797 detached
 &lt;detached ...&gt;
</code></pre>

<p>Which essentially shows that git-push is waiting for the ssh process <code>ssh git@github.com git-receive-pack 'eduard-sukharev/ProFIT.git'</code> which hangs. This all shifts the focus of the problem a bit.</p>

<p><strong>UPD2:</strong> Setting <code>GIT_TRACE=~/git_trace.log</code> gives this info:</p>

<pre><code>$ cat ../git_trace.log 
trace: built-in: git 'rev-parse' '--abbrev-ref' 'HEAD'
trace: built-in: git 'rev-parse' '--abbrev-ref' 'HEAD'
trace: built-in: git 'status' '--porcelain'
trace: built-in: git 'push'
trace: run_command: 'ssh' 'git@github.com' 'git-receive-pack '\''eduard-sukharev/ProFIT.git'\'''
trace: run_command: '.git/hooks/pre-push' 'origin' 'git@github.com:eduard-sukharev/ProFIT.git'
trace: built-in: git 'symbolic-ref' '--short' 'HEAD'
trace: built-in: git 'log' 'develop..HEAD' '--format= - [x] %B'
trace: built-in: git 'rev-parse' '--abbrev-ref' 'HEAD'
trace: built-in: git 'status' '--porcelain'
</code></pre>

<h1>Question</h1>

<p>Why does this process hang if otherwise it doesn't?</p>

<p>How should I rewrite that line to complete intended task?</p>

<p>Should I probably use other tool for managing clipboard, other than <code>xclip</code>?</p>
",11,1808052,,
60156154,1192458,2/10/2020 18:16,2,510,<git><automation><rebase><githooks><git-rebase>,"Is there a git hook, similar to pre-commit, that would run for every new commit that is about to be created with git rebase?","<h2>Context:</h2>

<p>I have a <code>pre-commit</code> hook installed for all my local repositories.</p>

<p>Basically what my hook does is running all the unit tests, exiting with 0 when all tests passes and exiting with non-zero when at least one test failed or when there is no test.</p>

<p>So <code>git commit</code> creates the commit only when <strong>all</strong> unit tests are successful.
Otherwise the commit is abort and I must fix my code and/or my tests, but I must make my tests pass, then retry to commit...</p>

<p>With this setup I know that every commit I created have been properly tested and that I can safely push them to the remote.</p>

<h2>Problem:</h2>

<p>But I only have one issue with this setup : <code>git rebase</code>.  I do a lot of <code>git rebase</code> with my locals branches.</p>

<p>When I rebase a branch I would like to run unit tests on every new commit about to be created.  I don't find any documentation about this specific use case.
I know that a <code>pre-rebase</code> hook exists but it will only fires before the rebase starts, giving a chance to abort the rebase.  It does not fire for every new commit that are going to be created from that rebase.</p>

<h2>Question:</h2>

<p>Is there a hook, or a technique, or anything else that can help me automate the process of rebasing a branch <strong>and</strong> at the same time give me the confidence that all the unit tests have been run on every new commit created?
It should work with <code>git rebase</code> and <code>git rebase --interactive</code> as well.</p>

<p>Basically i think <code>git rebase</code> should run the <code>pre-commit</code> hook when it is about to create a new commit.</p>
",5,1192458,,
3985463,180180,10/21/2010 8:14,20,6382,<git><githooks>,"Prevent pushes to git containing tabs in certain files (e.g. *.cpp, *.h, CMakeLists.txt)","<p>I'd like my remote repository to refuse any pushes that contains a file that contains a tab, but only if the file belongs in a certain class (based on the filename). Is that possible?<br>
I have looked a bit at the <code>update hook</code> in githooks, and I think that is the correct one. </p>

<p>So in short, a push should be rejected if:</p>

<ol>
<li>there is a file of the listed types (<code>*.cpp</code>, <code>*.h</code>, <code>CMakeLists.txt</code>)</li>
<li>that contains one or more tab characters.</li>
</ol>
",2,180180,0,0
41562417,1034537,1/10/2017 6:26,5,327,<git><build><continuous-integration><branch><githooks>,How to properly use CI scripts with Git hooks to compress source,"<p>I have a <code>feature</code> branch and a <code>testing</code> branch (for initial regression).  I would like to have a working copy available for my <code>testing</code> branch for the testing environment.  However, I need to compress some of the source code (not into binary, just optimize) via a script.  I can enact this script via a post-receive Git hook.</p>

<p>I'm trying to design my bash script (for CI) so that it's fairly robust and want to avoid automation causing Git conflicts.  I'm thinking of having a main repository (<code>origin</code>) and a testing environment repository (<code>ci_test</code>) simply to allow CI to commit.</p>

<p>I'm thinking about pushing to <code>ci_test/testing</code> when promoting source.  CI should compress, add, commit, fetch from <code>origin/testing</code>, merge if necessary (taking theirs-full iff conflicts), then push to <code>origin/testing</code>.</p>

<p>The problem to my model above is that Git complains when I attempt to push to <code>ci_test/testing</code> because it has a working copy (makes sense, because they may not be synced).  Is there a proper (automated) way to use Continuous Integration scripts with Git so that they're still tracked?</p>
",0,1034537,0,0
49509680,3709371,3/27/2018 9:50,-3,255,<git><msbuild><githooks>,how use git hook run msbuild.exe,"<p>how use git hook run msbuild </p>

<p>I want use git hook script run msbuild files</p>

<pre><code>`#!/bin/bash
echo ""Script started""
git --work-tree=/c/inetpub/wwwroot/A_BACK --git-dir=/c/inetpub/wwwroot/Bonobo.Git.Server/App_Data/Repositories/A checkout -f
echo ""Script ended"" `
</code></pre>
",0,3709371,,
67047123,1417628,4/11/2021 15:56,0,193,<git><githooks><gitattributes>,Git's `.gitattributes` filter not updating content in the worktree,"<p>I wanted to use <code>.gitattributes</code> filter to update files on <code>git add</code> (actually, anything before commit would be fine).</p>
<p>However, despite the filter being ran, the content stays the same in the worktree.</p>
<p>I made a minimal repo as a showcase:</p>
<p><code>foo.txt</code></p>
<pre><code>Foo
&lt;start&gt;
&lt;stop&gt;
Bar
</code></pre>
<p><code>update-toc</code></p>
<pre class=""lang-py prettyprint-override""><code>#!/usr/bin/env python3

import re
import sys

def parse(lines):
    start = -1
    stop = -1
    for i, line in enumerate(lines):
        if re.match('&lt;start&gt;', line):
            start = i
            continue
        if re.match('&lt;stop&gt;', line):
            stop = i
            continue
    return start, stop

print('STARTING FILTER', file=sys.stderr)
lines = sys.stdin.readlines()
start, stop = parse(lines)
if start != -1 and stop != -1:
    new_lines = lines[:start + 1] + ['baz\n'] + lines[stop:]
else:
    new_lines = lines
sys.stdout.write(''.join(new_lines))
print('ENDING FILTER', file=sys.stderr)
sys.stderr.write(''.join(new_lines))
</code></pre>
<p><code>.gitattributes</code></p>
<pre><code>*.txt   filter=update-toc
</code></pre>
<p><code>.git/config</code></p>
<pre><code>[filter &quot;update-toc&quot;]
        smudge = ./update-toc
        clean = ./update-toc
        required
</code></pre>
<p>On this repo, if I run the following commands I can witness the filter being ran successfully but the content itself not being updated:</p>
<pre><code>$ git add --renormalize foo.txt
STARTING FILTER
ENDING FILTER
Foo
&lt;start&gt;
baz
&lt;stop&gt;
Bar

$ cat foo.txt
Foo
&lt;start&gt;
&lt;stop&gt;
Bar
</code></pre>
<p>Various edits and commits do not change <code>foo.txt</code> outside my own modifications.</p>
<p>If I however remove <code>foo.txt</code> then check it out (<code>git checkout</code>) then I'll retrieve the filtered version.</p>
<pre><code>$ rm foo.txt
$ git checkout foo.txt
$ cat foo.txt
Foo
&lt;start&gt;
baz
&lt;stop&gt;
Bar
</code></pre>
<p>Is there a way to modify worktree content as well or check it out automatically (maybe combining filter with a Git hook) ?</p>
",2,1417628,,
67086162,6659494,4/14/2021 5:48,1,348,<git><gitlab><githooks>,How to check merged commits for specific message in a merge request created on GitLab with hooks,"<p>I'm looking for a way to check all merged commits (commits that are being merged into the target branch) for a specific message. All commit messages must have a specific format, they must have the same number in it as the branch (source branch) that is being merged. The regex for checking if the strings are correct is not a big deal that I have done already, what I'm trying to figure out is if I would use for that Server-Side Hooks or the Client Hooks and how to get the required information in the script (merge message, source branch and commits being merged into the target branch).</p>
<p>Regarding the merge, it's always a merge request created on GitLab, never a merge created locally and pushed.</p>
<p>I also need a possibility to skip such a verification in special cases, how would I do that? Locally I would add a <code>--no-verify</code> but I can't do that with MRs on GitLab. Would I add a keyword in the merge message and check for that in the hook script and skip if I find it?</p>
",0,6659494,0,0
67090845,9603817,4/14/2021 11:27,0,182,<python><bash><git><shell><githooks>,Allow merging branches only with a specific name,"<p>So I want to create some rules/restrictions for my GitHub repo and from what I've read the best way to do that is with git hooks. The restriction that gives me a hard time in creating is the following: I want to block merging any branches into master but the ones that contain &quot;Release&quot; in the name or in other words: allow merging into master only if it's a release branch. I've tried to do a python script but the problem is that <code>sys.argv</code> gives me the path to the hook (<code>.git/hooks/pre-merge-commit</code>) and not the command arguments, so I don't know how to take the input from the command line in order to verify if is it the right branch</p>
<pre><code>#!/bin/python
import sys, subprocess, re

print('inside script')

mergingBranch='Release'
protectedBranch='master'
 
print(len(sys.argv))

</code></pre>
",2,9603817,,
49566457,3319611,3/29/2018 23:27,1,604,<git><continuous-integration><git-submodules><githooks><tooling>,Tooling to Automatically Update Git Repositories When Their Submodule's or Submodules' Upstream Source's or Sources' Contents Change?,"<p>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;What tooling exists that is designed to make it easy (or at least <em>easier</em>) to update a Git repository and its submodule metadata when the source or sources for any submodules contained in that parent repository changes upstream?  I've seen advice that suggests using Git hooks or continuous integration and deployment systems to manage things like this in such a manner, but nobody seems to have come up with and fully explained a comprehensive solution for it that just works.  </p>
",2,3319611,0,0
4205589,205832,11/17/2010 14:52,12,5944,<git><githooks>,In a git post-commit hook how do I get a list of the files that were changed?,"<p>Trying to figure out how long time was spent in a commit in a Git post-commit hook.</p>

<p>I've got a post-commit git hook that submits information over an API about the commit. What I want to do is figure out how long time was spent on the commit. Roughly. </p>

<p>My assumption is that a rough value can be figured out by finding the minimum of all the creation-time and modification-time of the files involved and compare with the maximum creation- and modification-time.</p>

<p>I can easily do this in a Python script. If someone tells me it was the files ""foo.txt"", ""bar.txt"" and ""path/bla.txt"" I can quickly do some arithmetic in a script based on these files. </p>

<p>So, In a git post-commit hook how do I get a list of the files that were changed? </p>
",2,205832,0,0
67130705,637531,4/16/2021 18:50,0,150,<laravel><git><npm><githooks><laravel-mix>,Laravel Mix before commit,"<p>So, there is a tool Laravel Mix which could be run via npm command like <code>npm mix dev</code> or <code>npm mix prod</code>.</p>
<p>Locally I need styles and scripts to be compiled but not minified. So I have to run <code>npm mix dev</code>. But I need to commit only minified versions of such files. And it's not an option to have both versions in a repository - it has to be only minified.</p>
<p>Is there an option so I can use development files locally but before I make a commit they will be minified? And after commit - unmified again (with <code>npm mix dev</code>)</p>
",2,637531,,
42009632,82230,2/2/2017 18:25,2,233,<java><git><documentation><javadoc><githooks>,How can I create a git hook that forces me to write javadoc comments?,"<p>Is there a way for me to somehow parse my java code files and look for java doc comments? I want to make sure I've written javadocs for the class and each method of the class (or everything really). Is this possible? </p>
",2,82230,,
42010507,2312615,2/2/2017 19:15,-1,883,<git><githooks>,Git hook can't change file permission,"<p>I have a post-receive hook that executes a shell script that changes some files' permissions, but this is not happening because I get the error</p>

<blockquote>
  <p>chown: changing ownership of 'example': Operation not permitted</p>
</blockquote>

<p>Some files show that error, some others just fail silently.</p>

<p><strong>How can I change file permission in a git hook (especifically a post-receive one)?</strong></p>

<p><strong>PS:</strong> Git hook's user is <code>git</code> and so is the owner/group of the files I'm trying to change permission. I'm using chown to reinforce owner and change group of those files.</p>

<h3>Conclusion</h3>

<p>I did accept and answer to what I asked initially but I decided not to do that in a git hook but in another script that I execute manually every so often.</p>
",5,2312615,0,0
42011894,3124288,2/2/2017 20:38,11,2466,<git><github><githooks><changelog>,"Validate format of GitHub ""Squash and Merge"" commit messages","<p>I want to set up a GitHub project to use <a href=""https://github.com/conventional-changelog/standard-version"" rel=""noreferrer"">conventional-changelog standard version</a> to generate its changelog. We use a <a href=""https://help.github.com/articles/about-pull-request-merges/#squash-and-merge-your-pull-request-commits"" rel=""noreferrer"">squash and merge</a> workflow to merge PRs into our main development branch.</p>

<p>Is there a way that I can enforce that the commit message of the squashed commit follows a specific format?</p>

<p>Ideally this would work nicely with the GitHub UI, such as showing as a failing check. I realize I could simply write a browser extension to enforce this, but then everyone working on the project would need to install the extension which is too high of a barrier to entry for an open source project.</p>
",1,3124288,,
67176520,15703818,4/20/2021 9:50,7,5061,<angular><bash><githooks><lint>,How can I run ng lint and detect errors on pre-commit?,"<p>I've got a problem with my pre-commit script. I'm trying to run &quot;ng lint&quot; of my angular project  pre-commit file; I see the errors on logs when detects lint errors but the pre-commit processs pass sucessfully.
I need to do ng-lint in pre-commit file because I'm going to run other validations... How can I get the message when the ng lint dont pass sucessfully?</p>
<p>My script:</p>
<pre><code>#!/bin/bash

### other scripts to validate custom commits

-----------



### Run ng lint

echo &quot;pre-commit hook --&gt; linting&quot; ng lint

ng lint

echo -e &quot;ng lint pass sucessfully \n\n&quot;
</code></pre>
<p>Log</p>
<pre><code>pre-commit hook --&gt; linting
Linting &quot;front-firefly-backoffice&quot;...
/home/apanez/Escritorio/htdocs/eci/front-firefly/src/app/stock/limit-sale/components/limit-sale-detail/limit-sale-detail.component.ts:30:14
ERROR: 30:14  component-class-suffix  The name of the class LimitSaleDetailComp should end with the suffix Component (https://angular.io/styleguide#style-02-03)

Lint errors found in the listed files.

ng lint pass sucessfully
</code></pre>
",5,15703818,0,0
49660985,4064901,4/4/2018 21:49,4,8100,<githooks><pre-commit-hook><pre-commit>,specify which hook to skip on git commit --no-verify,"<p>If there a way to specify exactly which <code>git-hook</code> to skip when using <code>--no-verify</code>? Or is there another flag other than <code>--no-verify</code> to accomplish this? Perhaps just a flag to only skip <code>pre-commit</code>?</p>

<p>I have two hooks that I regularly use, <code>pre-commit</code> and <code>commit-msg</code>. <code>pre-commit</code> runs my linting, flow check, and some unit tests. <code>commit-msg</code> appends my branch name to the end of the commit message.</p>

<p>There are times that I would like to <code>--no-verify</code> the <code>pre-commit</code> but would still like to have <code>commit-msg</code> run.</p>

<p>There seem to be a lot of SO posts similar to this, but nothing quite like selective skipping with <code>--no-verify</code>.</p>
",0,4064901,0,0
67195463,8181646,4/21/2021 11:59,1,117,<git><sh><githooks>,Git post-recieve hook,"<p>I need help with writing a git post-receive hook.</p>
<p>I need the hook to call external .exe file and pass in parameters.</p>
<p>This is my hook so far:</p>
<pre><code>#!/bin/sh

call_external()
{
     # --- Arguments
     oldrev=$(git rev-parse $1)
     newrev=$(git rev-parse $2)
     refname=&quot;$3&quot;

     DIR=&quot;$(cd &quot;$(dirname &quot;$0&quot;)&quot; &amp;&amp; pwd)&quot;

     $DIR/post-receive.d/External.exe
 }

 # --- Main loop


while read oldrev newrev refname
do
    call_external  $oldrev $newrev $refname 
done
</code></pre>
<p>It works just fine, except I need to pass some parameters to that exe, and I do not know how to get them from Git.</p>
<p>Thanks to 'phd' heres the update:
I need these parameters per every commit in the push</p>
<ul>
<li>Author/Email</li>
<li>Commit hash</li>
<li>Commit description</li>
<li>Branch name</li>
</ul>
<p>I have no idea how to get this info from GIT.</p>
<p>Edit(2021-04-22) Thanks to 'phd' I was able to put together</p>
<pre><code>#!/bin/sh
call_external()
{
    # --- Arguments
    oldrev=$(git rev-parse $1)
    newrev=$(git rev-parse $2)
    refname=&quot;$3&quot;
    
    if [ $(git rev-parse --is-bare-repository) = true ]
    then
        REPOSITORY_BASENAME=$(basename &quot;$PWD&quot;) 
    else
        REPOSITORY_BASENAME=$(basename $(readlink -nf &quot;$PWD&quot;/..))
    fi
    
    DIR=&quot;$(cd &quot;$(dirname &quot;$0&quot;)&quot; &amp;&amp; pwd)&quot;
    BRANCH=$refname

    git rev-list &quot;$oldrev..$newrev&quot;|
    while read hash 
    do
    
        COMMIT_HASH=$hash
        AUTHOR_NAME=$(git show --format=&quot;%an&quot; -s)
        AUTHOR_EMAIL=$(git show --format=&quot;%ae&quot; -s)
        COMMIT_MESSAGE=$(git show --format=&quot;%B&quot; -s)
    
        $($DIR/post-receive.d/External.exe &quot;$BRANCH&quot; &quot;$AUTHOR_NAME&quot; &quot;$AUTHOR_EMAIL&quot; &quot;$COMMIT_MESSAGE&quot; &quot;$COMMIT_HASH&quot; &quot;$REPOSITORY_BASENAME&quot;)
        
    done
}

 # --- Main loop
while read oldrev newrev refname
do
    call_external  $oldrev $newrev $refname 
done
</code></pre>
",1,8181646,,
49674946,1143387,4/5/2018 14:30,0,153,<python><git><python-3.x><githooks>,"git post-receive hook, windows (server and client) want to call python","<p>I'm using Bonobo (a windows git server), I'm new to it, and trying to on commit to origin it fire off a Python script which would be able to:</p>

<ul>
<li>find the user that did the last commit</li>
<li>find the commit message</li>
<li>send that information to Python</li>
</ul>

<p>Once it has that data, it's going to post it to Slack.  No problem there.  I have Python that can take in command line arguments and post to Slack.</p>

<p>What I can't figure out is how to write my:</p>

<pre><code>post-receive
</code></pre>

<p>Here is what I have:</p>

<pre><code>#!C:/Program Files\ (x86)/SmartGit/git/usr/bin/sh.exe
message=`git log -1`
python D:/DEVELOPMENT/PHX/PYTHON/git_slack/git_slack.py -channel git_test -user python -message $message
</code></pre>

<p>So I can call python OK, but I can't get bash, well I think it's bash, I'm a Windows guy :( to populate message and then pass it to python.  So '$message' just ends up being blank and my python fails.</p>

<p>If I write:</p>

<pre><code>python D:/DEVELOPMENT/PHX/PYTHON/git_slack/git_slack.py -channel git_test -user python -message ""here we go""
</code></pre>

<p>All the python works fine.  I'm just missing something.  If I type:</p>

<pre><code>git log -1
</code></pre>

<p>From bash, I get a nice block of text that I would be happy to pass to Python and I could regex out the data to use it.</p>

<p>I must pass this information to Python and can't simply use bash to post to Slack as Python will do some work with our internal proxies and firewalls that I can't do in bash.</p>

<p>So my question is, what should my post-receive file look like to accomplice the 3 bullet points above.  Thank you!</p>
",0,1143387,,
67212201,1064776,4/22/2021 11:17,2,236,<git><githooks>,"Git hook: ""fatal: not a git repository:""","<p>I have a similar setup to the one I'm creating on a new server, so I know the 'principle works'. I have a Git post-receive which looks likes this:</p>
<pre><code>#!/bin/sh
git --work-tree=&quot;~/public_html&quot; --git-dir=&quot;~/repo/website&quot; checkout master -f
</code></pre>
<p>I have checked ten times that these are existing and correct folders :-)</p>
<p>To set up the Git repo I ran the following commands:</p>
<pre><code>cd ~/repo/website
git init --bare
# Added content to post-receive file
chmod +x hooks/post-receive
# Verified that these permissions are set on the file
</code></pre>
<p>I have added (pushed) some content to the repo for testing purpose. Now, when I try to execute the command for testing with this command:</p>
<pre><code>cd ~/repo/website &amp;&amp; bash hooks/post-receive
</code></pre>
<p>I get this error:</p>
<pre><code>fatal: not a git repository: '~/repo/website'
</code></pre>
<p>I then tried to completely delete the repo and make it from scratch. But on the 4th attempt I'm starting to think it's not the way forward ;-)</p>
<p>I read on related Stackoverflow threads that maybe the HEAD file was corrupted. However, it looks fine - and has also been re-made four times together with the other from-scratch attempts.</p>
<p>It's for deployment reasons I need to set the work-tree, etc. It works fine with the same setup on other servers.</p>
<p>I hope someone has a good idea how to resolve this. Thanks!</p>
",0,1064776,,
67273420,293195,4/26/2021 20:29,3,83,<git><githooks>,Why does Git execute hooks from an other repository?,"<p>With this MWE Git executes hooks in a the wrong repository (<code>A</code>):</p>
<pre class=""lang-sh prettyprint-override""><code># Make simple repo
git init &quot;/tmp/A&quot; &amp;&amp; cd &quot;/tmp/A&quot; || exit 1

# Make hook to demonstrate the problem
mkdir -p &quot;.git/hooks&quot; &amp;&amp;
    echo &quot;echo 'EXECUTED!!!'&quot; &gt;.git/hooks/reference-transaction &amp;&amp;
    chmod +x &quot;.git/hooks/reference-transaction&quot; &amp;&amp;
    git clone -c core.hooksPath=&quot;.git/hooks&quot; --template= &quot;https://github.com/gabyx/Githooks.git&quot; /tmp/Githooks
</code></pre>
<p>Results in</p>
<pre><code>Initialized empty Git repository in /home/test/tmp/A/.git/
Cloning into 'Githooks'...
EXECUTED!!!
EXECUTED!!!
EXECUTED!!!
EXECUTED!!!
</code></pre>
<p>Which is totally weird: I expect <code>git clone</code> to execute the hook in <code>/tmp/Githooks/.git/hooks</code> because from</p>
<p><a href=""https://git-scm.com/docs/git-config#Documentation/git-config.txt-corehooksPath"" rel=""nofollow noreferrer""><code>core.hooksPath</code></a></p>
<blockquote>
<p>The path can be either absolute or relative. A relative path is taken as relative to the directory where the hooks are run (see the &quot;DESCRIPTION&quot; section of githooks[5]).</p>
</blockquote>
<p>and further in <a href=""https://git-scm.com/docs/githooks"" rel=""nofollow noreferrer"">Doc</a> :</p>
<blockquote>
<p>Before Git invokes a hook, it changes its working directory to either $GIT_DIR in a bare repository or the root of the working tree in a non-bare repository.</p>
</blockquote>
<p>Why is this, and is this a Bug which should be reported?</p>
",16,293195,0,0
67273723,574740,4/26/2021 20:57,-2,254,<git><githooks><mit-scratch>,Best approach for pre-processing files before committing to Git?,"<p>I've never had reason to investigate the usage of git hooks before so I'm coming at this with very little information.</p>
<p>My general scenario is that I want to parse certain file types automatically when committing them to the repository. The specific scenario is related to MIT Scratch. Entire projects are stored as SB3 files (which are actually zip files). The zip file contains all the graphic and sound assets as well as a project.json file which contains all of the scripts contained in all of the sprites. The JSON isn't very legible as Scratch is a block-based language which doesn't lend itself to being easily read.</p>
<p>I've written a PHP tool which parses the JSON file into readable text scripts contained in each of the sprite. What I would like is to automatically process SB3 files when they are committed so that my tool is triggered, parses the JSON file within the SB3 (ZIP) and then commits a separate text file for each sprite contained therein (as well as committing the actual SB3 file).</p>
<p>As an example, consider one of my projects, <a href=""https://scratch.mit.edu/projects/515569918/"" rel=""nofollow noreferrer"">my Scratch BBC Micro emulator</a>. If you enter the project number (515569918) into <a href=""https://rokcoder.com/sb3-to-txt/"" rel=""nofollow noreferrer"">my parsing tool</a> then you can see the output that I want automatically committing alongside the actual SB3.</p>
<p>Is this something that can be achieved with git hooks and, if so, could someone provide a general overview of the implementation process please?</p>
<p>If git hooks are the wrong approach, any suggestions would be welcome. There is little point in a repository containing just the sb3 as it's a straight binary zip file. The only real use is to extract everything first and, even better, use this approach of parsing the JSON file within the zip file before committing.</p>
",0,574740,,
14397519,876937,1/18/2013 11:00,0,231,<git><githooks><pre-commit-hook>,Pre-commit hook file staging for commit,"<p>If you have a pre-commit hook in Git that creates (or modifies) a file, does that file need to be staged for it to be committed?</p>

<p>For example, if I have a pre-commit hook that creates a minified version of some code, do I need to <code>git add</code> that minified version for it to be included in the commit?</p>
",0,876937,,
49758768,,4/10/2018 16:35,1,704,<git><githooks>,Auto-create branch if on another branch prior to committing with git,"<p>I have a branch, lets say <code>master</code>. I do not have <code>master</code> pushes restricted. Is there a way to have it say that if a commit is accidentally done on the <code>master</code> branch (or another branch) that a new branch is automatically created and the commits are in there?</p>

<p>Example workflow:</p>

<ol>
<li>Clone the repo <code>master</code> branch.</li>
<li>Makes lots of changes</li>
<li>Does <code>git commit -am ...</code></li>
</ol>

<p>I want to hook into #3 and create a new branch if the person is committing on <code>master</code> (or some other ""marked"" branch).</p>

<p>If it's not possible, does one just block commits at <code>master</code>?</p>
",1,,,
49774320,1259598,4/11/2018 11:46,0,1009,<git><gitlab><symlink><githooks><cifs>,Gitlab with repositories on a cifs mount fails to create new project,"<p>We have a gitlab server running on our internal network which is configured to store repositories on a cifs mount (project requirement). Moreover this nas drive must be accessible from the outside network and should also allow git operations on repos from this other network, thereby not even acknowledging the existence of a gitlab server. This leads to several problems which I have been trying to solve.</p>

<p>One problem was that gitlab does explicit permission checks (770 for some folder, 2770 for another etc. etc.) for some folders which is not possible on a cifs mount. I fixed it by disabling this check (manage_storage_directories['enable'] = false) in /etc/gitlab/gitlab.rb</p>

<p>However, it seems that Gitlab relies heavily on the presence of hooks in the repo. Otherwise quite a few things break. And by default gitlab will always try to create a symlink for the hooks folder in a repo. You could workaround this by first creating a project locally and then moving/migrating existing project to this cifs mount. I then actually place the hook files instead of a symlink.</p>

<p>I do not want to do this HACK for every new project. If I try otherwise, I always get an error ""The form contains the following error: Failed to create repository via gitlab-shell"" on the web interface.</p>

<p>For something similar, see:
<a href=""https://gitlab.com/gitlab-org/gitlab-ce/issues/13734"" rel=""nofollow noreferrer"">https://gitlab.com/gitlab-org/gitlab-ce/issues/13734</a></p>

<p>For the moment, I would prefer to not touch the smb server on the nas to enable some flags for allowing symlinks (if thats even possible).</p>

<p>Feel free to ask for more info.
Thanks in advance!</p>
",0,1259598,,
14410733,207384,1/19/2013 3:10,5,2428,<git><code-formatting><githooks>,Git modify contents of index directly for pre-commit formatting hook,"<p>I would like to automatically format my files before they are added to Git's index. Right now, I have a pre-commit hook that looks like this:</p>

<pre><code>#!/bin/bash

set -e
exec 1&gt;&amp;2

workingext=""working.$$""
ext=""bak.$$""
git diff -z --cached --name-only | egrep -z '\.(pl|pm|t)$' | \
        while read -d'' -r f; do
    # First modify the file in the index
    mv ""$f"" ""$f.$workingext""
    git show :""$f"" &gt; ""$f""
    perl -c ""$f""
    perltidy -pbp -nst -b -bext=""$ext"" ""$f"";
    rm -f ""$f.$ext""
    git add ""$f""
    mv ""$f.$workingext"" ""$f""
    # Then the working copy
    perl -c ""$f""
    perltidy -pbp -nst -b -bext=""$ext"" ""$f"";
    rm -f ""$f.$ext""
done
</code></pre>

<p>Basically, I back up the working copies, check out the indexed copies, format them, add them to the index, and then restore the working copies and format them too, so that the differences between the working and indexed copies don't grow too large. I check the syntax of the files using <code>perl -c</code> first so that the formatter <code>perltidy</code> can't get too confused by a syntactically invalid file.</p>

<p>So far, this seems to be working pretty well. However, I'd like to know if there's a way to add the contents of one file to the index under the name of another file. That is, a command like <code>git update-index-from-file --from-file foo.pl.tmp foo.pl</code> would update the file <code>foo.pl</code> such that its contents in the index came entirely from <code>foo.pl.tmp</code>, but whose version in the working directory remained unmodified. This might avoid the dance of renamings I'm doing right now (although that might be useful to ensure I don't lose the contents of the index irretrievably).</p>
",0,207384,0,0
67343248,1635450,5/1/2021 5:46,1,71,<git><github><gitlab><git-commit><githooks>,How to ensure that commit contains specific user info in a shared git repository instead of group email id?,"<p>We have a development server which team members login with a common unix user and work on the same repository. Each team member may clone to different repository and configure the local git user identity with his/her identity and remove the global git user identity. However, regardless of how they do their work, what's the best way to enforce that every commit has the specific user identity instead of the common unix user's identity? I am thinking of using the pre-receive server hook to check for a valid <code>user.name</code> and <code>user.email</code>. How do I achieve that? I use on-premise GitLab. Any advice and insight is appreciated.</p>
",5,1635450,0,0
50134086,821812,5/2/2018 11:54,1,100,<c++><bash><git><githooks>,How to detach from terminal so that post-receive hook in git finalizes,"<p>i'm creating a post-receive hook for my deploy repository.
The hook compiles and executes my program. The programm outputs a few lines i'd like to see, forks and only continues in the forked process.
When i start the program with <code>2>&amp;1 1>/dev/null &amp;</code> it works fine, although i don't see any output from that. I tried calling <code>setsid()</code> after fork, but then the git commit doesn't stop, it continues outputting the program output.</p>

<p>Any ideas for a solution?</p>
",1,821812,0,0
50146088,306036,5/3/2018 2:30,2,192,<bash><git><githooks>,How can I find the root git directory reliably from a git hook?,"<p>Given 2 git repositories (Product A and Product B), with submodules (CommonSubmodule, SomeOtherSubmodule)</p>

<pre><code>D:\Repositories\ProductA\
D:\Repositories\ProductA\CommonSubmodule
D:\Repositories\ProductA\SomeOtherSubmodule
D:\Repositories\ProductA\SomeOtherSubmodule\
D:\Repositories\ProductB\SomeOtherSubmodule\
D:\Repositories\ProductB\CommonSubmodule\
</code></pre>

<p>I've found a script online that allows for branches to be logged via a post_checkout hook</p>

<pre><code>#!/bin/sh

previous_head_ref=$1
new_head_ref=$2
is_branch_checkout=$3

if [[ ""$previous_head_ref"" != ""$new_head_ref"" ]] &amp;&amp; [[ ""$is_branch_checkout"" == 1 ]]; then
    branch=$(git rev-parse --abbrev-ref HEAD)
    #if [[ ""develop"" != ""$branch"" ]]; then
        path=""$(dirname ""$0"")/..""
        logfile=""$path/x_branch_log""
        ts=$(date +%s)
        echo ""$branch|1|$ts"" &gt;&gt; $logfile
        echo ""Logging $branch|1|$ts to $logfile""
        echo PWD is $PWD
    #fi
fi
</code></pre>

<p>In a post_checkout context, how can I get the root directory (D:\Repositories) no matter how deep in the submodule the hook is installed, without encoding absolute paths?</p>

<pre><code>D:\Repositories\
</code></pre>

<p>Additionally, how can I get the root product directory, e.g.</p>

<pre><code>D:\Repositories\ProductA\
D:\Repositories\ProductB\
</code></pre>
",0,306036,0,0
68503191,12060599,7/23/2021 17:38,0,1269,<typescript><git><jestjs><sh><githooks>,How can I run jest through a git hook script?,"<p>I have been trying to get rid of husky/lint-staged trying to learn how to write a script that would do some automation for pre-commit operations.</p>
<p>I have this script file, that runs eslint and jest.</p>
<p>Eslint runs smoothly, but I am not able to run jest through it.</p>
<p>package.json file</p>
<pre><code>{
    &quot;name&quot;: &quot;gri-web&quot;,
    &quot;version&quot;: &quot;0.0.0&quot;,
    &quot;husky&quot;: {
        &quot;hooks&quot;: {
            &quot;pre-commit&quot;: &quot;lint-staged&quot;,
            &quot;pre-push&quot;: &quot;npm run test:ci&quot;
        }
    },
    &quot;scripts&quot;: {
        &quot;prepare&quot;: &quot;husky install&quot;,
        &quot;ng&quot;: &quot;ng&quot;,
        &quot;start&quot;: &quot;ng serve&quot;,
        &quot;build&quot;: &quot;ng build&quot;,
        &quot;test&quot;: &quot;jest --passWithNoTests --silent --noStackTrace --runInBand&quot;,
        &quot;lint&quot;: &quot;tsc --noEmit &amp;&amp; eslint . --ext js,ts,json --quiet --fix&quot;,
        &quot;e2e&quot;: &quot;ng e2e&quot;,
        &quot;test:verbose&quot;: &quot;jest --passWithNoTests --runInBand&quot;,
        &quot;test:unit&quot;: &quot;npm test -- --watch -c jest-unit-config.js&quot;,
        &quot;test:integration&quot;: &quot;npm test -- --watch -c jest-integration-config.js&quot;,
        &quot;test:staged&quot;: &quot;npm test -- --findRelatedTests&quot;,
        &quot;test:ci&quot;: &quot;npm test -- --coverage&quot;
    },
    &quot;prettier&quot;: {
        &quot;singleQuote&quot;: true,
        &quot;trailingComma&quot;: &quot;none&quot;,
        &quot;endOfLine&quot;: &quot;auto&quot;
    },
    &quot;private&quot;: true,
    &quot;dependencies&quot;: {
        &quot;@angular/animations&quot;: &quot;^11.0.0&quot;,
        &quot;@angular/cdk&quot;: &quot;^11.0.0&quot;,
        &quot;@angular/common&quot;: &quot;^11.0.0&quot;,
        &quot;@angular/compiler&quot;: &quot;^11.0.0&quot;,
        &quot;@angular/compiler-cli&quot;: &quot;^11.0.0&quot;,
        &quot;@angular/core&quot;: &quot;^11.0.0&quot;,
        &quot;@angular/forms&quot;: &quot;^11.0.0&quot;,
        &quot;@angular/platform-browser&quot;: &quot;^11.0.0&quot;,
        &quot;@angular/platform-browser-dynamic&quot;: &quot;^11.0.0&quot;,
        &quot;@angular/router&quot;: &quot;^11.0.0&quot;,
        &quot;@auth0/angular-jwt&quot;: &quot;^4.1.2&quot;,
        &quot;@fortawesome/fontawesome-free&quot;: &quot;^5.12.1&quot;,
        &quot;chart.js&quot;: &quot;^2.9.3&quot;,
        &quot;file-saver&quot;: &quot;^2.0.2&quot;,
        &quot;moment&quot;: &quot;^2.24.0&quot;,
        &quot;primeflex&quot;: &quot;^1.0.0-rc.1&quot;,
        &quot;primeicons&quot;: &quot;^2.0.0&quot;,
        &quot;primeng&quot;: &quot;^8.0.0&quot;,
        &quot;rxjs&quot;: &quot;^6.5.3&quot;,
        &quot;tslib&quot;: &quot;^1.14.1&quot;,
        &quot;xlsx&quot;: &quot;^0.16.0&quot;,
        &quot;zone.js&quot;: &quot;^0.10.3&quot;
    },
    &quot;devDependencies&quot;: {
        &quot;@angular-devkit/build-angular&quot;: &quot;^0.1102.9&quot;,
        &quot;@angular/cli&quot;: &quot;^11.2.9&quot;,
        &quot;@angular/language-service&quot;: &quot;~8.2.14&quot;,
        &quot;@types/chart.js&quot;: &quot;^2.9.19&quot;,
        &quot;@types/jest&quot;: &quot;^26.0.24&quot;,
        &quot;@types/node&quot;: &quot;^8.9.5&quot;,
        &quot;@typescript-eslint/eslint-plugin&quot;: &quot;^4.28.3&quot;,
        &quot;codelyzer&quot;: &quot;^6.0.0&quot;,
        &quot;eslint&quot;: &quot;^7.30.0&quot;,
        &quot;eslint-config-prettier&quot;: &quot;^8.3.0&quot;,
        &quot;eslint-config-standard-with-typescript&quot;: &quot;^20.0.0&quot;,
        &quot;eslint-plugin-import&quot;: &quot;^2.23.4&quot;,
        &quot;eslint-plugin-node&quot;: &quot;^11.1.0&quot;,
        &quot;eslint-plugin-prettier&quot;: &quot;^3.4.0&quot;,
        &quot;eslint-plugin-promise&quot;: &quot;^4.3.1&quot;,
        &quot;git-commit-msg-linter&quot;: &quot;^3.2.6&quot;,
        &quot;husky&quot;: &quot;^7.0.0&quot;,
        &quot;jest&quot;: &quot;^26.6.0&quot;,
        &quot;jest-preset-angular&quot;: &quot;^8.4.0&quot;,
        &quot;lint-staged&quot;: &quot;^10.5.4&quot;,
        &quot;prettier&quot;: &quot;2.3.2&quot;,
        &quot;prettier-eslint&quot;: &quot;^12.0.0&quot;,
        &quot;protractor&quot;: &quot;~5.4.0&quot;,
        &quot;ts-jest&quot;: &quot;^26.5.6&quot;,
        &quot;ts-node&quot;: &quot;~7.0.0&quot;,
        &quot;typescript&quot;: &quot;^4.0.6&quot;
    },
}

</code></pre>
<p>script file
pre-commit</p>
<pre><code>#!/bin/sh
linter_exit_code=1
jest_exit_code=1
git config advice.addEmptyPathspec false
echo &quot;Getting staged files...&quot;
all_ts_files=$(git diff --cached --diff-filter=d --name-only | grep .ts$)
echo &quot;Running Eslint...&quot; 
./node_modules/.bin/eslint $all_ts_files --quiet --fix 
linter_exit_code=$?
echo &quot;Running Jest test...&quot;
./node_modules/.bin/jest --config ./jest.config.js
jest_exit_code=$?
git add -f $all_ts_files
if [ $linter_exit_code -ne 0 ] || [$jest_exit_code -ne 0] 
then
  echo &quot;❌ Errors occured in Linter or Jest ( ͡ಥ ͜ʖ ͡ಥ)&quot;
  exit 1
else
  echo &quot;✔ All passed [̲̅$̲̅(̲̅ ͡° ͜ʖ ͡°̲̅)̲̅$̲̅]&quot;
  exit 0
fi
</code></pre>
<p>I have tried all kind of things... It seems that when I try to run jest from this file, it looks for the <code>package.json</code> and it fails, as my <code>jest</code> configuration is set in a <code>.js</code> file.</p>
<p>I have tried to following:</p>
<p>=&gt; move my <code>jest.config.js</code> file to <code>package.json</code> file:</p>
<p>If I do this, the whole app stops working and I cannot even run my local server (it seems that the configs only work in the .js file)</p>
<p>=&gt; try to point to my <code>jest.config.json</code> file on the script file:</p>
<p>it seems to be ignored and it does not work</p>
<p>The error is a parsing error, that occurs with or without having my jest configurations inside the package.json file.</p>
<p>Error:</p>
<pre><code>Error: Cannot parse C:\Users\apjv\projects\guri-frontend-angularjs\package.json as JSON: Unexpected token } in JSON at position 2887
    at Object.worker (C:\Users\apjv\projects\guri-frontend-angularjs\node_modules\jest-haste-map\build\worker.js:146:13) 
</code></pre>
<p>jest.config.js file:</p>
<pre><code>module.exports = {
    preset: 'jest-preset-angular',
    setupFilesAfterEnv: ['&lt;rootDir&gt;/setup-jest.ts'],
    testPathIgnorePatterns: [
        '&lt;rootDir&gt;/node_modules/',
        '&lt;rootDir&gt;/dist/',
        '&lt;rootDir&gt;/src/test.ts',
    ],
    globals: {
        'ts-jest': {
            tsConfig: '&lt;rootDir&gt;/tsconfig.spec.json',
            stringifyContentPathRegex: '\\.html$',
            astTransformers: {
                before: [
                    'jest-preset-angular/build/InlineFilesTransformer',
                    'jest-preset-angular/build/StripStylesTransformer',
                ],
            },
        },
    },
};

</code></pre>
<p>I am also not managing to execute the exit code for jest in case of an error...</p>
<pre><code>|| [$jest_exit_code -ne 0] 
</code></pre>
<p>with the following error:</p>
<pre><code>git-hooks/pre-commit: line 14: [1: command not found
</code></pre>
<p>Possible solutions I would like to discover:</p>
<p>=&gt; point to my jest.config.js file in the script file?
=&gt; somehow add my jest.config.js config into my package.json file without breaking everything. Could someone please inform how could I transform my config into the json file without breaking the whole thing?
=&gt; some other solution...</p>
",10,12060599,,
68505111,12234324,7/23/2021 21:16,0,15,<git><deployment><githooks>,How to make an trigger in my server when dev make a commit,"<p>My company has in your server published an api, but when a dev make a commit I should be go to server and manually execute git pull command
How can I make an hook or task for execute <code>git pull</code> and <code>yarn start</code> before a dev send a commit</p>
",2,12234324,,
50174940,9283034,5/4/2018 12:26,0,1214,<git><git-bash><githooks><git-post-receive><git-bare>,Git hook/post-receive No such file or directory,"<p>So I've got a bare repository which we use to control the changes to our web pages. On that bare repo is a post-receive hook that runs when we push our changes to it. All the hook does is implement the changes to the working directory using the following code:</p>

<pre><code>WRK_DIR=""/url/to/work/tree/""
GIT_DIR=""/url/to/bare/repo.git/""

#Update WRK_DIR with changes pushed into GIT_DIR...
git --work-tree=$WRK_DIR --git-dir=$GIT_DIR checkout -f
</code></pre>

<p>For whatever reason I receive the following:</p>

<pre><code>remote: fatal: Not a git repository: '/url/to/bare/repo.git/'
</code></pre>

<p>I've verified that the hook is running under the correct user and that is has permissions to the folder. But for whatever reason the hook cannot find the directory and I am absolutely certain that the url's are correct.</p>

<p>Running</p>

<pre><code>cd /url/to/bare/repo.git/
</code></pre>

<p>from within the hook is also returning </p>

<pre><code>remote: hooks/post-receive: line 13: cd: /url/to/bare/repo.git/: No such file or directory
</code></pre>

<p>Like I said I am sure the url's are correct and that there are no typo's. Any help would be greatly appreciated.</p>
",5,9283034,,
50174805,9741081,5/4/2018 12:18,1,405,<git><githooks><broken-pipe>,git pre-push causes broken pipe error,"<p>I have a large pre-hook script I maintain to run checks on code, a build, run regression, and email a set of release notes.  It has been working for a while, but some recent changes were made and now when we do a git push it results in a ""Broken pipe"" error.  None of my changes appear to do anything that could cause a pipe error.</p>

<p>I tried running with GIT_TRACE and via strace and it doesn't really appear to be obvious to me what the issue is:</p>

<pre><code>... Email Sent Successfully No errors! 
[{WIFEXITED(s) &amp;&amp;  WEXITSTATUS(s) == 0}], 0, NULL) = 125625
--- SIGCHLD (Child exited) @ 0 (0) 
--- write(4, ""009c4a23dfcd66ae44d23435e45a2371""..., 156) = -1 EPIPE (Broken pipe)
--- SIGPIPE (Broken pipe) @ 0 (0)
--- +++ killed by SIGPIPE +++
</code></pre>
",0,9741081,,
50176805,1391325,5/4/2018 14:02,2,979,<git><branch><git-submodules><githooks>,Git hook for updating Git submodule on branch change,"<p>I'm working with some old code that makes use of Git submodules. The code has several divergent branches which are actively being used, and each of these branches depends on unfortunately a different revision of the relevant submodules; <a href=""http://slopjong.de/2013/06/04/git-why-submodules-are-evil/"" rel=""nofollow noreferrer"">this has made development extremely complicated</a>. One of the problems I face is that, when I switch between branches from e.g. <code>master</code> to <code>newfeature-foo</code> using <code>git checkout newfeature-foo</code>, the state of the submodules remains at that of <code>master</code>, which often causes compile errors and even worse can cause differences in runtime behavior that wreaks havoc with user testing and general sanity.</p>

<p>For example, given the <code>.gitmodules</code> configuration:</p>

<pre><code>[submodule ""robotcontroller""]
    path = robotcontroller
    url = https://coolrobots.com/repos/robotcontroller
    branch = master
    ignore = dirty
</code></pre>

<ul>
<li>the branch <code>master</code> at commit <em>77d4697</em> has a reference to <code>robotcontroller @ f57d1b3</code></li>
<li>the branch <code>newfeature-foo</code> at <em>b38d29f</em> has a reference to <code>robotcontroller @ 60b27d4</code></li>
<li>the branch <code>master</code> at <em>873639f</em> doesn't have the submodule <code>robotcontroller</code> at all</li>
<li>the branch <code>newfeature-foo</code> at <em>301dca4</em> has a reference to <code>robotcontroller @ bdf5991</code></li>
</ul>

<p>Is there no way e.g. using Git hooks to force the automatic complete re-checking-out of all submodules listed in a <code>.gitmodules</code> file when it changes on checkout of the ""root"" Git repository?</p>
",4,1391325,,
14939484,619856,2/18/2013 15:15,2,848,<git><groovy><githooks>,Debug the execution of a git hook,"<p>How would I setup my development environment to catch breakpoints and debug the execution of a git hook? Lets say the hook in focus is pre-commit and that the following groovy script needs to be debugged?</p>

<pre><code>#!/usr/bin/env groovy

// Arguments for git log command.
def logArgs = ['max-count': '1', 'pretty': 'format:%an commited %s {%h}']

// Invoke git log command.
def gitLog = logArgs.inject(['git', 'log']) { cmd, k, v -&gt; 
    cmd &lt;&lt; ""--$k=$v"" 
}.execute()

// Get git log message to be used as notification message.
def message = gitLog.text
println(message)
</code></pre>

<p>And what would I do see the output?</p>
",0,619856,,
32371679,406677,9/3/2015 9:21,3,745,<git><githooks>,Git post-checkout hook from in repo,"<p>I am writing a post-checkout hook for git. I want this hook to be included into the repository and run directly after a fresh clone (as it does). However, I cannot add files to the .git/hooks directory in the repository. </p>

<p>Where do add my script in order for git to run it directly after a clone?</p>

<p><strong>Sidenote:</strong><br/>
I am aware of the security risk this adds, but I am ok with that.</p>
",0,406677,,
23465932,1679011,5/5/2014 6:12,2,354,<bash><shell><githooks>,Bash Script accepts that with multiple prompts,"<p>I'm trying to create a <strong>post-checkout</strong> git hook and have the a bash script that will run <code>composer update</code> and <code>php artisan migrate:refresh</code>, Since I'm just beginning with bash scripting I can't figure out why my script doesn't execute the 'Run Migrations' part?</p>

<pre><code>#!/bin/bash
exec &lt; /dev/tty

while true; do
    read -p ""Run Composer Update[Y/n]: "" yn
    case $yn in
        [Yy]* ) composer update; break;;
        [Nn]* ) exit;;
        * ) echo ""Please answer yes or no."";;
    esac    
done
while true; do
    read -p ""Run Migrations[Y/n]: "" yn
    case $yn in
        [Yy]* ) php artisan migrate:refresh; break;;
        [Nn]* ) exit;;
        * ) echo ""Please answer yes or no."";;
    esac    
done
</code></pre>
",3,1679011,,
50581051,3610740,5/29/2018 9:35,0,292,<git><githooks>,How to push .git/ files changes to remote(server) repository,"<p>I would like to add <code>.git/hooks/pre-receive</code> hook to master/remote branch but .git/ will not be source controlled. How can I copy  <code>.git/hooks/pre-receive</code>  to master branch(server repository is configured on linux) ?. </p>

<p>Are there any configuration settings to ignore <code>.git</code> automatically ? Can I change that ?</p>

<p><code>.git/hooks/pre-receive</code> should exist in master repository only as this is triggered by server when <code>git push</code> is executed.</p>
",3,3610740,,
50068045,1033058,4/27/2018 18:10,0,497,<javascript><git><githooks><package.json>,Bypass git hook in package.json,"<p>I have git hooks defined in package.json for pre-commit and I just added one for pre-rebase. The problem is that I do not want the pre-rebase hook to execute on a git pull which happens right now due to the flow. I tried searching how I could prevent it but was unsuccessful and thought of adding one more git hook for git pull which might just prevent the pre rebase hook in package.json but could not find any documentation on how to do it. Can someone point me how to go about it?</p>

<p>script snippet of package.json</p>

<pre><code>""scripts"": {
    ""precommit"": ""lint-staged &amp;&amp; npm test"",
    ""prerebase"": ""lint-staged &amp;&amp; npm test"",
    ""test"": ""grunt unit-test""
  },
</code></pre>
",2,1033058,,
50070157,8385554,4/27/2018 20:52,5,2019,<python><git><githooks>,How to write a python pre-push to check the commit message?,"<p>I know I can use commit-msg hook to check the message (I did it) but I wish to check the message again prior to push with different criteria.</p>

<p>The example given under .git/hooks was written in shell script, but I wish to write a python script the string operations I have in mind are more complex.</p>

<p>I know I can change the first line to <code>#!/usr/bin/env python</code>. My problem is, I don't know how to get the lastest commit's message string. I experimented with <code>git rev-list</code> (on that example's line 44) but it doesn't give me the message string and it needs the commit hash id. Note that the message string might be multiline (because the first line is restricted to be 50 characters at most).</p>

<p><strong>EIDT</strong>: other questions asked how to write a pre-push script in Python, but they didn't involve checking the message string.</p>
",0,8385554,,
22585091,1254812,3/22/2014 23:34,8,2461,<git><bash><githooks>,Git-hooks pre-push script does not receive input via STDIN,"<p>The <a href=""http://git-scm.com/docs/githooks#_pre_push"" rel=""noreferrer"">git-hooks pre-push documentation</a> states that the first line of <em>stdin</em> will be populated with the local ref and sha, and the remote ref and sha as such:</p>

<p><code>&lt;local ref&gt; SP &lt;local sha1&gt; SP &lt;remote ref&gt; SP &lt;remote sha1&gt; LF
</code></p>

<p>However, my simple pre-push script:</p>

<pre><code>#!/bin/bash

echo ""params=[$@]""

read line
echo ""stdin=[$line]""

exit 1
</code></pre>

<p>returns the following output when a <code>$git push</code> is run:</p>

<pre class=""lang-none prettyprint-override""><code>params=[origin [url]:[branch].git]
stdin=[]
error: failed to push some refs to '[remote]'
</code></pre>

<p>The parameters to the script are as specified in the documentation (name and path of the remote).  The error is expected because my script exits with a status of 1.  However, I can't seem to figure out why I'm not receiving the local and remote refs on <em>stdin</em> as specified by the documentation.</p>

<p>Is this a bug in <strong>git</strong>?  Or, am I missing something?</p>
",0,1254812,0,0
32267030,1233615,8/28/2015 8:51,1,1356,<git><bash><githooks><pre-commit-hook>,pre-commit hook that checks if staged files were modified again,"<p>I am trying to write a git pre-commit hook that checks if files which were staged with <code>git add</code> were modified again before committing.</p>

<p>Basically I am interested in these files</p>

<pre><code>git status --short
MM test1
AM test2
</code></pre>

<p>Now the pre-commit hook looks like this:</p>

<pre><code>#!/bin/bash

# git pre-commit hook that checks for staged files that were modified.

# exit on error
set -e

# DOES NOT WORK
cached=$(git diff --name-only --diff-filter=M)

# everything is fine
if ! [[ -n $cached ]]; then
    exit 0
fi

# GNU and BSD versions of xargs behave differently.
if xargs --version &gt;/dev/null 2&gt;&amp;1; then
    flag=""-l"" # GNU
else
    flag=""-L1"" # BSD
fi

printf ""The following files have been modified after they have been staged:\n\n""
printf ""$cached""
printf ""\n\nYou can stage these changes with:\n""
printf "" git diff --name-only --cached | xargs ${flag} git add\n""
printf ""Aborting commit. Stage the modified files and commit again or skip""
printf "" checking with --no-verify (not recommended).\n""

exit 1
</code></pre>

<p>The problem is, that this hook also picks up files that were modified but not staged. How would I have to adjust my hook?</p>
",0,1233615,,
60223252,3009839,2/14/2020 9:14,5,915,<git><tfs><azure-devops><githooks><pull-request>,Hook or Task to modify files after pull request in Azure DevOps,"<p>I would like to modify some files in my protected master-branch after a pull-request from a feature-branch to the master-branch is done in Azure DevOps Server.</p>

<p>One file needs to be renamed, another file needs to be created and a in a third file there is a string to replace.</p>

<p>Is this possible through server side git hooks or an Azure Pipeline or Task (sorry, I´m new to this topic).</p>

<p><strong>Update</strong></p>

<p>The hook or pipeline should do following:</p>

<ol>
<li>check if a file current.sql has any content (if yes, go to next step)</li>
<li>update an integer-variable (DbVersion) in a C#-Class (add 1 to it)</li>
<li>rename the current.sql file to db_update_[new DbVersion].sql</li>
<li>create a new empty current.sql file</li>
</ol>
",11,3009839,0,0
22546393,1626687,3/20/2014 22:20,8,9936,<git><bash><githooks><pre-commit-hook>,Can git pre-receive hooks evaluate the incoming commit?,"<p>I'm trying to write a server side pre-receive git hook to evaluate commits as they are being pushed. </p>

<p>According to the <a href=""https://stackoverflow.com/questions/22491942/how-can-you-block-git-commits-from-invalid-users"">answers here</a>, this should easily be possible by searching git log and filtering out what I want with 'format:'. </p>

<p>I've created the following pre-commit script. </p>

<pre><code>#!/bin/bash

set -x #for debugging, TODO: remove
echo ""parameters are"" $@
echo ""1 is "" $1

#List of banned users
bannedusers=( root )

author_name=$(git show --pretty=oneline --pretty=format:%an | head -n1)
author_email=$(git show --pretty=oneline --pretty=format:%ae | head -n1)

committer_name=$(git show --pretty=oneline --pretty=format:%cn | head -n1)
committer_email=$(git show --pretty=oneline --pretty=format:%ce | head -n1)

commit_users=( ""${author_name}"" ""${committer_name}"" )


  for acommituser in ""${commit_users[@]}""
  do
    :
    echo $acommituser #for debugging, TODO: remove
    for abanneduser in ""${bannedusers[@]}""
    do
      :
        echo $abanneduser #for debugging, TODO: remove
        if [[ $abanneduser == $acommituser ]]; then
         echo ""################################################################""
         echo ""Commits from $abanneduser are not allowed""
         echo ""git config user.name bob builder --replace-all""
         echo ""git config user.email bob@aol.com""
         echo ""git commit --amend --reset-author""
         echo ""################################################################""
         exit 1
        fi
    done
  done
</code></pre>

<p>I find that when I run <code>git show</code> or <code>git log</code> on the server, the results are for the <em>current</em> HEAD, whereas I want to query the <em>incoming</em> commit. </p>

<p>How could I modify this script to run <code>git log</code> or <code>git show</code> on the 'not-yet-recieved' commit? </p>
",0,1626687,0,0
5234476,427887,3/8/2011 15:25,-1,1454,<git><doxygen><githooks>,Doxygen how use git hooks for run doxygen before each push?,"<p>I search how generate documentation from doxygen using git hooks.<br>
I have already read git hooks example but i see nothing like i want  </p>

<p>root project:<br>
|- documentation/<br>
|- src/<br>
|- .git/  </p>

<p>for generate doc from root project i do:<br>
 $ doxygen documentation/doc.doxyfile</p>

<p>thanks for your help</p>
",2,427887,0,0
5235277,24545,3/8/2011 16:26,22,4955,<git><shell><cross-platform><githooks>,Cross platform git hooks,"<p>How do you manage git pre/post commit hooks across various platforms (say, *nix and windows)?</p>

<p>Any best practices recommended for this scenario?</p>
",0,24545,0,0
60653176,12890137,3/12/2020 11:25,-1,404,<angular><git><githooks>,Git Precommit hooks for angular 9 application,"<p>Here is my pre-commit file code which I have taken from <a href=""https://gist.github.com/linhmtran168/2286aeafe747e78f53bf"" rel=""nofollow noreferrer"">https://gist.github.com/linhmtran168/2286aeafe747e78f53bf</a> but every time it returns same <code>COMMIT SUCCEEDED</code>.</p>

<p>Here is the linting failure picture <a href=""https://i.stack.imgur.com/9VmmN.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/9VmmN.png"" alt=""linting failure picture""></a> </p>

<p><code>ng lint</code> having an issue but still how It can succeed. It should return validation fail message and commit should not be done but struggling with it.</p>

<p>Please will be much appreciated </p>

<p>I seen <a href=""https://stackoverflow.com/questions/46581101/adding-precommit-hooks-with-husky-without-pushing-addition-to-git"">Adding precommit hooks with Husky without pushing addition to git</a> but not so helpfull.</p>
",0,12890137,,
22688041,858726,3/27/2014 12:43,2,603,<eclipse><git><githooks><post-receive-email>,Git push timeout when using post-receive-email hook,"<hr>

<p>I'm using Git control version system through Eclipse (Egit plugin).</p>

<p>I've configured the post-receive-email hook to trigger an email every time I push to the remote repository. The hook is working as expected (I got a new email on every change), but I have to ""push"" twice.</p>

<p>When I make the first push, it always fails with a timeout error</p>

<pre><code> ssh://user@server/path/to/repo.git: Read timed out after 30.000 ms
</code></pre>

<p>Then, with the second push, everything goes well, the remote repository is updated and I receive the email.</p>

<p>So, I want to know if there is a way to fix this behaviour, if I have to add something to hook configuration, or change something in Eclipse. I dont want to push my changes twice everytime.</p>

<p>Hope you can help me, thanks!!!</p>
",0,858726,0,0
23527509,214892,5/7/2014 20:15,0,363,<git><githooks><post-commit-hook>,Trigger compass compile on git pull execution on server,"<p>Part of my employer's practices is to avoid including css files in project repositories.  Due to past issues with merge conflicts centering around CSS, its been decided to push SASS file changes only, and re-compile the stylesheets as necessary.  We use Compass in house for compiling SASS to CSS.</p>

<p>What I'd like to do is implement a <code>compass compile</code> execution upon a successful <code>git pull</code> event.  This seems easily done with a <code>git pull</code> alias, but git hooks also exist.  Finally, a third option is to have <code>compass watch</code> run as an infinite process.</p>

<p>This last seems to be resource wasteful, as the production server is updated weekly at best.  So what would be best practice in executing a <code>compass compile</code> event after a successful git pull and how would it be done?</p>
",2,214892,,
5443010,460564,3/26/2011 14:39,5,3708,<git><file-permissions><githooks>,Wrong file permission when using git pull in a hook,"<p>I have created the following git hook to update my web application when new changes are pushed to the repository</p>

<pre><code>#!/bin/sh
#Update the server version to HEAD

echo ""Updating webapp...""
unset $(git rev-parse --local-env-vars)
(cd /var/www/webapp &amp;&amp; git pull -q)
</code></pre>

<p>However, if I add new files they get the wrong permissions. They are only readable by the owner and not by the group or by other users. But I need them to be readable by everyone. Locally they have the right permission bits. And even when I run the hook manually from the shell, it works correctly. It only doesn't work when the script is called as a hook.</p>

<p>Any ideas how to fix that?</p>

<p>PS: I am using git 1.7</p>
",0,460564,0,0
4127967,234780,11/8/2010 20:54,21,11998,<git><scripting><githooks>,Validate if commit exists,"<p>How to validate whether the commit with given sha exists in current branch?</p>

<p>There are many ways to parse outputs, but I need optimal way which returns boolean (for usage in bash script).</p>

<p>e.g.</p>

<pre><code>sha=$1
if [ -z `git magic --validate $sha` ]; then
  echo ""Invalid commit sha: $sha""
  exit 1
fi
</code></pre>
",1,234780,0,0
41660201,7335432,1/15/2017 10:40,2,2190,<python><module><githooks>,Find all python packages in project,"<p>I want to write some <code>clean up</code> script to avoid unexpected Python imports.</p>

<p>For better understanding, I'll show you my use cases.</p>

<p>Sometimes we have a situation when our project folders contains:</p>

<pre><code>...
my_project/custom.py
my_project/custom/__init__.py
...
</code></pre>

<p>If you try to import something:</p>

<pre><code>from my_project.custom import some_func
</code></pre>

<p>it imports from custom directory instead of custom.py file.</p>

<p>I want to avoid such situation and add some hook for checks if there is no python file in parent directory of some python package(folder with <strong>init</strong>.py file).</p>

<p>The question is:
What is the easiest way to find all the Python packages in my project?(all directories with <strong>init</strong>.py file)</p>

<p>There are a lot of Python libraries like: <code>imp</code>, <code>modulefinder</code>, ..., but I'm not sure if they may just check if folder is python module using fullpath(without loading this package)</p>

<p>As a final result I want to do something like this:</p>

<pre><code>import os
for folder, sub, files in os.walk('/my/project/root/path'):
    # not sure folder or sub, but it doesn't matter
    if is_python_module(folder):
        # do some stuff
</code></pre>

<p>It looks like I've found some solution:</p>

<pre><code>for folder,  sub, file in os.walk(path):
    try:
        _, module, _ = imp.find_module(folder)
        print ""Module: %s"" % module
    except ImportError:
        pass
</code></pre>

<p>If there is better solutions, feel free to tell!</p>
",4,7335432,,
22704455,1129436,3/28/2014 4:50,0,65,<linux><node.js><git><githooks><forever>,Git hooks may need higher privileges,"<p>I'm using node.js for my webserver, and I would like forever (or something like it) to run the server.</p>

<p>I'm also using git to manage the website. I have a bare repository on the server that I can push to/pull from on my local machine. I would like the repository to do three things when I push to it.</p>

<ol>
<li>CD to my working directory (on the server)</li>
<li>Have the working directory pull from the bare repo</li>
<li>Restart the running webserver.</li>
</ol>

<p>The following script seems like it's what I should use as a <code>post-receive</code> hook in my bare repo.</p>

<pre><code>cd ~/site
git pull
sudo forever stopall
sudo forever start main.js
</code></pre>

<p>However, I don't think it's smart to have the git hook use <code>sudo</code> like that. The script needs elevated to run on port 80.</p>

<p>How should I be doing this? What should my git post-receive look like?</p>

<p>Thanks!</p>
",0,1129436,,
60815948,263900,3/23/2020 14:52,0,257,<react-native><build><expo><githooks>,Git hook for React Native / Expo app to prevent compile-time errors?,"<p>There's a new open source project I'm working on that seems to frequently have syntax errors committed to the master branch. I'd like to configure a git hook that will notify contributors of basic errors before pushing their working branches to github.</p>

<p><strong>How can I set up a git hook to reject code with simple build errors for our React Native expo app?</strong></p>

<p>Currently it appears this project doesn't have any package.json scripts that perform test builds or anything similar that I can leverage, and unfortunately I don't know enough about expo to create one of my own. Any thoughts?</p>
",0,263900,,
60446577,10596042,2/28/2020 6:45,0,963,<jenkins><jenkins-pipeline><jenkins-plugins><devops><githooks>,Multi branch pipeline does not trigger when a change is pushed to a particular branch,"<p>We have a GitHub repository which has 4 branches. A multibranch pipeline is setup for it in Jenkins.</p>

<p>Tried setting up webhook, but could not find an option to do so. It has option at branch level to setup a webhook.</p>

<p>Requirement is to setup a webhook at repository level, so that we do not have to set up webhook for every new branch added.</p>

<p>After setting up webhook at repository level, if a change is pushed to any of the branches under it, build should be triggered for that branch.</p>

<p>Is this possible?</p>
",0,10596042,,
5470680,158304,3/29/2011 9:50,3,2639,<git><gitosis><githooks>,Gitosis post-receive hook to deploy repository getting public key errors,"<p>I have gitosis setup on my server and I'm trying to create a post-receive hook that will checkout changes to a working directory on the remote machine.</p>

<p>Initially I got an error saying <code>cannot open /home/user/source/testing-local/.git/FETCH_HEAD: Permission denied</code> so I changed the group ownership of the working directory's .git folder to the git user.</p>

<p>Following this I got the error <code>Host key verification failed</code> which led me to check which user was running the hook, git of course (silly me!), so I setup a key in gitosis for the git user that gitosis is running under and enabled that in gitosis.conf. Now I'm getting the old <code>Permission denied (publickey).</code></p>

<p>My post-receive hook looks like this:</p>

<pre><code>#!/bin/bash
while read oldrev newrev refname
do
  if [ ""$refname"" == ""refs/heads/master"" ]; then
    WORKDIR=/home/user/source/testing-local
    export GIT_DIR=$WORKDIR/.git
    pushd $WORKDIR &gt;/dev/null
    id
    git pull --quiet &gt;/dev/null
  fi
done
</code></pre>

<p>The <code>id</code> call is just to check which user I'm running as.</p>

<p>Is there an easier way to achieve this?! Have I missed something key in my setup?</p>
",0,158304,,
22788252,1695713,4/1/2014 14:02,1,515,<git><deployment><cron><githooks><crontrigger>,Auto-run script when remote git repository changes?,"<p>How do I automatically run a script whenever a specified remote git repository (on bitbucket) changes?</p>

<p>The script will contain lines to <code>git pull</code> dependant repositories; run tests; and if tests pass, deploy then reload relevant services.</p>
",1,1695713,0,0
23559372,3581226,5/9/2014 7:56,0,140,<git><githooks>,"Is it a good idea to create a githook, which makes git squash the latest (not pushed) commits?","<p>In my opinion, in small and dynamic projects, creating many commits during a working day is very common. I started wondering if it is a good idea, to create a githook, which will help squash commits before the final push and merge.</p>

<p>I am wondering if anyone works already with this kind of workflow?</p>
",1,3581226,,
4763687,65778,1/21/2011 20:51,11,1982,<git><hook><git-submodules><githooks>,What is the best way to write a git update hook that rejects invalid submodule commits?,"<p>I am attempting to write an <code>update</code> hook for git that bounces if a submodule is being updated to a commit ID that does not exist in the submodule's upstream repository. To say it another way, I want to force users to push changes to the submodule repositories before they push changes to the submodule pointers.</p>

<p>One caveat:</p>

<ul>
<li>I only want to test submodules whose bare, upstream repositories exist on the same server as the parent repository. Otherwise we start having to do crazy things like call 'git clone' or 'git fetch' from within a git hook, which would not be fun.</li>
</ul>

<p>I have been playing around with an idea but it feels like there must be a better way to do this. Here is what I was planning on doing in the update hook:</p>

<ol>
<li>Check the refname passed into the hook to see if we are updating something under <code>refs/heads/</code>. If not, exit early.</li>
<li>Use <code>git rev-list</code> to get a list of revisions being pushed.</li>
<li>For each revision:
<ol>
<li>Call <code>git show &lt;revision_id&gt;</code> and use a regular expression that looks to see if a submodule was updated (by searching for `+Subproject commit [0-9a-f]+).</li>
<li>If this commit did change a submodule, get the contents of the <code>.gitmodules</code> files as seen by that particular commit (<code>git show &lt;revision_id&gt;:.gitmodules</code>).</li>
<li>Use the results of 3.1 and 3.2 to get a list of submodule URLs and their updated commit IDs.</li>
<li>Check this list created in 3.3 against an external file that maps submodule URLs to local bare git repositories on the filesystem.</li>
<li><code>cd</code> to the paths found in 3.4 and execute <code>git rev-parse --quiet --verify &lt;updated_submodule_commit_id&gt;</code> to see if that commit exists in that repository. If it does not, exit with a non-zero status.</li>
</ol></li>
</ol>

<p>(Note: I believe the results of 3.2 can potentially be cached across revisions as long as the output to <code>git rev-parse --quiet --verify &lt;revision_id&gt;:.gitmodules</code> doesn't change from one revision to the next. I left this part out to simplify the solution.)</p>

<p>So yeah, this seems pretty complex, and I can't help but wonder if there are some internal git commands that might make my life a lot easier. Or maybe there is a different way to think about the problem?</p>
",0,65778,0,0
23834580,506114,5/23/2014 16:49,1,72,<git><githooks>,git commit hooks - lifespan,"<p>I am using git commit hooks to kick off builds, do validations, etc.</p>

<p>What I would like to do is ensure the hooks get installed every time I check out an instance or copy of the git repository.</p>

<p>I am only aware of installing hooks by copying a file in the .git/hooks directory, but I'd like them to be permanently installed so I don't have to manually install them each time I do a git clone.  I always check my projects out to /tmp (ramdisk) and then push back to an actual disk once needed to reduce some I/O and increase speed.  Right now, my best solution is to have a script automate that process since my git hooks live in another repository anyways.</p>

<p>I was wondering if there is a better way to achieve the same thing.</p>
",3,506114,0,0
23839718,5039633,5/23/2014 23:28,2,548,<ruby><git><githooks>,Enforce git branch policies,"<p>I'm trying to enforce a company policy, taking these assumptions:  </p>

<ul>
<li>There are only 3 available upstream branches: master, version/* and hotfix/*.</li>
<li>Master branch accepts only non-forwarded merge commits.</li>
<li>Version and Hotfix branches accept only fast-forward/rebased commits.</li>
<li>Master branch must only be merged into from Version or Hotfix branches.</li>
<li>Version and Hotfix branches must diverge from Master branch directly.</li>
</ul>

<p>So far this is what I come up with:</p>

<pre><code>#!/usr/bin/env ruby
# Encoding: utf-8

$oldrev, $newrev, $refname = STDIN.read.split("" "")
$real_refname = `git rev-parse --abbrev-ref #{$refname} 2&gt; /dev/null`.strip
$merge_commits = `git rev-list --merges #{$oldrev}..#{$newrev} 2&gt; /dev/null`.strip
$parent_commit = `git rev-parse #{$newrev}\^1`
$ancestor_branch = `git show-branch | grep '*' | grep -v '#{$real_refname}' | head -n1 | sed 's/.*\[\(.*\)\].*/\1/' | sed 's/[\^~].*//'`

puts ""Enforcing Policies... \n(#{$real_refname}) (#{$oldrev[0,6]}) (#{$newrev[0,6]})""

$errors = []
def check_branch_policy()
  $errors.push ""Branch #{$real_refname}: Only Version, Hotfix and Master branches are allowed to be pushed upstream."" if !$real_refname.match(/^(version\/[1-9.]+|hotfix\/[1-9.]+|master)/)
  $errors.push ""Branch #{$real_refname}: Master branch accepts only non-forwarded merge commits."" if $real_refname.match('master') &amp;&amp; (!$merge_commits.match($newrev) || !$parent_commit.match($oldrev))
  $errors.push ""Branch #{$real_refname}: Version and Hotfix branches accept only fast-forward/rebased commits."" if !$real_refname.match('master') &amp;&amp; !$merge_commits.empty?
  $errors.push ""Branch #{$real_refname}: Version and Hotfix branches must diverge from Master branch directly."" if !$real_refname.match('master') &amp;&amp; !$ancestor_branch[4,6].match('master')
  false
end
check_branch_policy

unless $errors.empty?
  puts '[POLICY] Invalid git branch rules.'
  $errors.each { |error| puts ""#    #{error}"" }
  exit 1
end
</code></pre>

<p>A few issues though:</p>

<ul>
<li>First, I'd be glad for a general code review. I'm not a rubyist whatsoever, and I just patched around things I found on the web. So the code is probably pretty bad.</li>
<li>Is there an easier way to enforce the ""Master branch accepts only non-forwarded merge commits.""?</li>
<li><code>sed</code> and <code>grep</code> doesn't seem to play well with git hooks, so I basically need an alternative to the current <code>$ancestor_branch</code> command. Didn't come up with anything yet.</li>
<li>When first pushing a branch, <code>$real_refname</code> doesn't work - it can't seem to abbrev-ref properly.</li>
<li>I can't seem to find a way to enforce ""Master branch must only be merged into from Version or Hotfix branches."" yet. Any ideas?</li>
</ul>

<h2>EDIT #1 - 25.05.14</h2>

<p>After tinkering around a little bit I got to this:</p>

<pre><code>#!/usr/bin/env ruby
# Encoding: utf-8

oldrev, newrev, refname = STDIN.read.split("" "")
short_refname = refname[11..-1]
merge_commits = `git rev-list --merges #{oldrev}..#{newrev}`.strip
unique_revs = `git rev-list --all --not $(git rev-list --all ^#{newrev})`
missed_revs = `git rev-list #{oldrev}..#{newrev}`

puts ""Enforcing Policies... \n(#{short_refname}) (#{oldrev[0,6]}) (#{newrev[0,6]})""

def check_branch_policy(oldrev,newrev,short_refname,merge_commits,unique_revs,missed_revs)
  errors = []
  errors &lt;&lt; ""Only Version, Hotfix and Master branches are allowed to be pushed upstream."" if
    !short_refname[/^(version\/[1-9.]+|hotfix\/[1-9.]+|master)/]
  if short_refname['master']
    # Master should have only one unique commit each time - the merge commit (newrev).
    errors &lt;&lt; ""Master branch accepts only non-forwarded merge commits, one at a time."" if
      !merge_commits[newrev] &amp;&amp; missed_revs.count &gt; 2
  else
    # If not empty, it means there's a merge commit - whereas there shouldn't be.
    errors &lt;&lt; ""Version and Hotfix branches accept only fast-forward/rebased commits."" if
      !merge_commits.empty?
    # If not equal, it means at least one commit is reachable from another ref - meaning it was diverged.
    errors &lt;&lt; ""Version and Hotfix branches must diverge from Master branch directly."" if
      !unique_revs[missed_revs]
  end
  errors
end
errors = check_branch_policy(oldrev,newrev,short_refname,unique_revs,missed_revs)

unless errors.empty?
  puts '[POLICY] Invalid git branch rules.'
  errors.each { |error| puts ""#    Branch #{short_refname}: #{error}"" }
  exit 1
end
</code></pre>

<p>More questions arose though:</p>

<ul>
<li>Is there a way to serve the local variables without calling them in the method? Otherwise the script throws an error.</li>
<li>I managed to find a way to retrieve the short_refname, but it's not so elegant. I read somewhere I can use <code>short_refname = refname.chomp(""refs/heads/"")</code> but it doesn't seem to work. Help?</li>
<li>I found a way (clever? too complex? go figure) to <a href=""https://stackoverflow.com/a/5724488"" title=""here"">find if a branch has diverged where it shouldn't have</a> but this brings two issues - I can't get all the refs from the hook. --stdin flag doesn't seem to cut it. Further, the exclude flag (^some_ref) doesn't work inside the hook, whereas in the terminal it works fine. Ideas?</li>
<li>Assuming I move this script to <code>update</code> hook, how can I get the refnames? The web sources weren't so clear so far...</li>
</ul>
",5,5039633,,
5623208,417501,4/11/2011 14:56,39,39833,<git><ghc><githooks>,How to execute a command right after a fetch or pull command in git?,"<p>I cloned the GHC (Glasgow Haskell Compiler) repository. In order to build the compiler, you need several libraries, all of them are available as git repositories too. In order to ease ones live, the GHC hackers included a script <code>sync-all</code> that, when executed, updates all the dependent repositories.</p>

<p>Now to my question: How can I make git execute <code>./sync-all pull</code> after I did a <code>git pull</code> automatically? I heard something about using hooks, but I don't really know, what I have to do. </p>
",2,417501,0,0
23848408,808396,5/24/2014 18:33,3,99,<git><githooks>,avoid any emailPrefix with git-multimail,"<p>Is there a way to avoid any email prefix while using the git-multimail script ?</p>

<p>I use mailman which already prefix any message, so I don't need that the git-multimail script does it for me.</p>

<p>If I set an empty multimailhook.emailprefix, it is the same behaviour than if config unset, says it use the repo name as prefix.</p>

<p>thanks.</p>
",1,808396,,
61087787,6563404,4/7/2020 19:20,0,1388,<git><github><gitlab><githooks><pre-commit-hook>,Where we might need pre-commit and pre-push hooks together to lint our code,"<p>Assuming we have linter in our project. I have a pre-commit hook which will lint my project and if lint passes with no error it will commit. I want to setup a pre-push hook to lint my project on push. But I don't see the point of doing it on push since the code will be already linted on commit. So, Can anyone point me a scenario where a pre-push lint would be necessary with already having a pre-commit link?</p>
",0,6563404,0,0
5629261,443927,4/12/2011 1:02,49,21154,<git><powershell><githooks>,Running PowerShell scripts as git hooks,"<p>Is it possible to run PowerShell scripts as git hooks?</p>
<p>I am running git in a PowerShell prompt, which shouldn't make any difference, but I can't seem to get them to work, as the hooks are named without extensions, and PowerShell needs (AFAIK) the .ps1 extension. I am not sure if that is the issue, or something else.</p>
",6,443927,0,0
61577438,1172907,5/3/2020 15:55,1,405,<githooks>,How to filter git hook post-commit to a specific file?,"<p>Currently my post-commit githook triggers on committing <em>all files</em>. How can I filter the trigger to fire only if <strong>a specific file</strong> e.g. <em>example.txt</em> has been commited. I'm currently looking at <code>git-diff</code> for file filtering, though believe there could be something more elegant</p>
",1,1172907,0,0
5809910,221814,4/27/2011 20:08,36,28953,<git><githooks>,How do I react to new tags in git hooks?,"<p>I'd like to set up a git hook that creates a CDN-style directory structure based on incoming tags. So, for example, if the last tag in the local repository is ""v1.2.1"" and I pull a commit with ""v1.2.2"", it should see the new tag and clone the repository into a new directly (../1.2.2) accordingly.</p>

<p>I'm pretty sure I want to attach this to post-receive, however I can't find anything in the documentation about git hooks about how to read the incoming tags. Are they delivered on a different hook? Do I actually need to have the shell script run a git command to see if any of the new commits have new tags?</p>

<p>Thanks!</p>
",0,221814,0,0
61587668,1172907,5/4/2020 8:05,0,93,<githooks>,Git-Hook post_commit not printing GIT_DIR environment to log,"<h1>Debugging git-hooks</h1>

<p>Why is <code>$GIT_DIR</code> not printed to the log?</p>

<pre><code>#Content of githookTest.sh 
foo=~/tmp/foo 
rm -rf $foo
mkdir -p $foo
cd $foo 
git init 
printf ""logger 'foo was committed from:' $GIT_DIR"" &gt;&gt; .git/hooks/post-commit
sudo chmod +x .git/hooks/post-commit  
touch $foo/bar
git add .
git commit -m ""Testmessage""
journalctl -b --grep 'foo was committed from:'
</code></pre>

<p>Output from upper script</p>

<pre><code>Initialized empty Git repository in /home/user/tmp/foo/.git/
[master (root-commit) 6c16412] Testmessage
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 bar
-- Logs begin at Sat 2019-06-29 11:02:45 CEST, end at Mon 2020-05-04 09:53:18 CEST. --
May 04 09:53:18 x user[5892]: foo was committed from:
</code></pre>
",0,1172907,,
24404472,1908265,6/25/2014 9:06,2,209,<githooks><git-alias>,How do I ask git to merge branch back to parent,"<p>Is there a way to write an alias that merges a branch back to its parent? I know I can do:</p>

<pre><code>git checkout - &amp;&amp; git merge -
</code></pre>

<p>But it only works in simple cases when my previous branch is the parent branch.
As far as I know git does not track this kind of information because there is no branches in there. But I hope it's already implemented as a plugin or a hookset.<br/>
Thanks in advance.</p>
",0,1908265,0,0
61773201,1644178,5/13/2020 11:17,2,1826,<node.js><githooks><node-promisify>,Using util.promisify with exec is not resolving promise in git hook,"<p>According to the <a href=""https://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback"" rel=""nofollow noreferrer"">docs</a> you can promisify NodeJS' <code>require('child_process').exec</code> by doing the following:</p>

<pre><code>const util = require('util');
const exec = util.promisify(require('child_process').exec);

async function lsExample() {
  const { stdout, stderr } = await exec('ls');
  console.log('stdout:', stdout);
  console.error('stderr:', stderr);
}
lsExample();
</code></pre>

<p>However when I use this approach in a 'prepare-commit-msg' git hook to get the current branch name, the <code>stdout</code> constant is a promise object, not the branch name value as I'd expect. Am I missing something?</p>

<pre><code>const util = require('util');
const stdExec = require('child_process').exec;
const exec = util.promisify(stdExec);

async function getBranchName() {
  const { err, stdout, stderr } = await exec('git rev-parse --abbrev-ref HEAD');

  console.log(err, stdout, stderr); // Returns correct stdout

  if (err) {
    // ""git branch"" will fail if initial commit hasn't been done, in that case, skip this hook
    process.exit(0);
  }

  return stdout;
}

function validateBranchName(name) {
    console.log(name);
)

// Call get branchName
if(condition) {
    const branchName = getBranchName(); // branchName is promise object

    validateBranchName(branchName);
}
</code></pre>
",3,1644178,,
24436390,217823,6/26/2014 17:05,0,414,<node.js><git><githooks><msysgit>,How can I get msysgit on windows to invoke node.js scripts in hooks?,"<p>I would like to use node.js scripts as my git hook scripts. Currently I'm experimenting on my Windows machine with Bonobo Git HTTP service which is attached to msysgit Git-1.9.0-preview20140217 portable installation. It works fine, tested with copuple pulls and pushes.</p>

<p>I have nodejs up and running but my git <code>update</code> script just fails without any clear reason. It definitely works - it started to always reject pushes as soon as I added it into the hooks folder on the server but there are no any clues in SourceTree output log.</p>

<p>Here is my update script:</p>

<pre><code>#!C:/nodejs/node.exe

console.log('Hello world!');
console.log('Hello world 2!');
</code></pre>

<p>I tried back slashes, I tried double forward slashes, I tried quoting the path - no results.</p>

<p>Server response is as follows:</p>

<pre><code>git -c diff.mnemonicprefix=false -c core.quotepath=false push -v --tags origin master:master
Pushing to http://myurl.git

POST git-receive-pack (4686 bytes)

remote: error: hook declined to update refs/heads/master[K

To http://myurl.git
 ! [remote rejected] master -&gt; master (hook declined)

error: failed to push some refs to 'http://myurl.git'


Completed with errors, see above.
</code></pre>

<p>P.S. I don't know where <code>[K</code> comes from, my gusess is that it's corrupted newline character.</p>
",0,217823,,
43111701,1658734,3/30/2017 7:53,0,543,<git><hook><githooks>,"Get commits per branch in git ""update"" hook","<p>Consider next pseudo-code thats create a required git log:</p>

<pre><code>git checkout master
git checkout -b 123-test-branch-1
git commit -m ""#123 b1 c1""
git commit -m ""#123 b1 c2""
git push
git checkout master
git checkout -b 456-test-branch-2
git commit -m ""#456 b2 c1""
git commit -m ""#456 b2 c2""
git push
git checkout 123-test-branch-1
git merge 456-test-branch-2
git commit -m ""#123 b1 c3""
git push
</code></pre>

<p>In a real-world my <code>update</code> hook in remote git repository validates branch name and commit message formats. Branch name and commit message must contain issue number, for example, in <code>123-test-branch-1</code> and <code>#123 b1 c1</code> the issue number is <code>123</code>. When branch is pushed, hook extract issue number from branch and commit message and compare it. If they are not equal, hook exits with error.</p>

<p>This works great, when I push branch that has only ""own"" commits. But, git log example above, pushed branch <code>123-test-branch-1</code> has commits from merged branch <code>456-test-branch-2</code> so hook try to compare all commits from both branches only with pushed branch <code>123-test-branch-1</code> and exits with error because commits from <code>456-test-branch-2</code> has issue number <code>456</code>, when <code>123</code> is expected.</p>

<p>To receive commits, I use <code>git log --pretty=%s ${oldRef}..${newRef}</code>, where <code>oldRef</code> and <code>newRef</code> is ""update"" hook arguments.</p>

<p>So, my question is how to solve this problem. Somehow group commits per branch, or filter commits from branch that pushed now (but if <code>456-test-branch-2</code> is local branch and never pushed and never validated, hook may skip invalid commits), or something else.</p>
",5,1658734,,
24447049,284272,6/27/2014 8:13,1,55,<git><githooks><git-post-receive>,pull hook after pushing to a git repo,"<p>When one pushes to a specific branch in the git repository I want it to be automatically pulled to the web server directory on the same machine.</p>

<p>It looks like a post-receive hook would be in order but I haven't been able to find a good example of how to write such a hook. Can someone point me in the right direction?</p>
",0,284272,,
43126420,1072657,3/30/2017 19:06,2,417,<regex><git><githooks>,Get %AppData% path (or other environment variable) for Git hook on Windows (10),"<p>Is it possible to get the %AppData% path within a git hook on my Windows 10 machine?</p>

<p>I am attempting to use it to call gulp.... so maybe even the environment variable %NODE_PATH% which I also have....but essentially I want to get the path of the environment variable.</p>

<p>I currently have:-</p>

<pre><code>gulp=""/c/Users/MYUSERNAME/AppData/Roaming/npm/gulp.cmd""
echo $gulp
</code></pre>

<p>and then I can call gulp successfully..... but I'd like not to hardcode my username in the path....and rather have something like:-</p>

<pre><code>gulp=""%AppData%/gulp.cmd""
echo $gulp
</code></pre>

<p>Any suggestions?</p>
",0,1072657,,
61802674,1644178,5/14/2020 16:38,0,268,<javascript><node.js><es6-promise><githooks>,How to resolve a list of dynamically created Promises?,"<p>I am writing a git pre-commit hook and I want to be able to pass it an array of commands to execute, for it to execute them, and if any fail throw an error. Examples of these commands might be to run a test suite or a build.</p>

<p>I am having problems dynamically doing this using the promisified version of Node's child_process exec command.</p>

<p>So far I have a config file with 2 example commands:</p>

<p><strong>config.js</strong></p>

<pre><code>const config = {
  onPreCommit: ['git --version', 'node -v'],
};

module.exports = config;
</code></pre>

<p>If I pass in the values manually with this code I get the promise objects fulfilled with the correct values from the commands as I'd expect:</p>

<p><strong>pre-commit hook</strong></p>

<pre><code>function preCommit() {
  if (config.onPreCommit &amp;&amp; config.onPreCommit.length &gt; 0) {
    Promise.allSettled([
      exec(config.onPreCommit[0]),
      exec(config.onPreCommit[1]),
    ]).then((results) =&gt; results.forEach((result) =&gt; console.log(result)));
  }
}

preCommit();
</code></pre>

<p>However, if I try and do this dynamically like below, this throws an error:</p>

<pre><code>function preCommit() {
  if (config.onPreCommit &amp;&amp; config.onPreCommit.length &gt; 0) {
    const cmdPromises = config.onPreCommit.map((cmd, i) =&gt; {
      return new Promise((resolve, reject) =&gt; {
        exec(cmd[i])
          .then((res) =&gt; {
            resolve(res);
          })
          .catch((err) =&gt; {
            reject(err);
          });
      });
    });

    Promise.allSettled(cmdPromises).then((results) =&gt;
      results.forEach((result) =&gt; console.log(result))
    );
  }
}

preCommit();
</code></pre>

<p>Promises rejected with:</p>

<p><code>Error: Command failed: o
  'o' is not recognized as an internal or external command,
  operable program or batch file.</code></p>

<p>and</p>

<pre><code>Error: Command failed: o
  'o' is not recognized as an internal or external command,
  operable program or batch file.
</code></pre>
",2,1644178,,
24624846,1644017,7/8/2014 6:14,1,360,<git><bash><git-branch><githooks>,Author for each remote or branch,"<p>Is there any way to set different authors for each remote or branch in Git?</p>

<p>The only thing coming to my mind is scripting it using Git hooks (post-checkout/post-commit), which would check the current branch and change the author, but it would work only for branches, not remotes and doesn't look elegant to me. Are there any other solutions?</p>

<p><strong>UPDATE:</strong></p>

<p>I appreciate your answers, but why would you guys need to know the reason I am doing this? :) Anyway, let me clarify this for you:</p>

<p>I have local repo with 2 remotes: <code>remoteA</code> and <code>remoteB</code>. Also, I have 2 branches: <code>branchA</code> and <code>branchB</code>. Each remote is set to track those branches respectively:</p>

<pre><code>git remote add -t branchA remoteA [remoteA-URL]
git remote add -t branchB remoteB [remoteB-URL]
</code></pre>

<p>There are 2 teams making changes to this repository: <em>TeamA</em> and <em>TeamB</em>. I usually pull commits from <code>remoteB/branchB</code> to <code>branchB</code>, cherry-pick or squash and merge some commits to <code>branchA</code> and push to <code>remoteA/branchA</code>. Sometimes I do merge commits from <code>remoteA/branchA</code> to <code>branchB</code> too. Now, the thing is - <strong>I need commits pushed to each remote be under different username/email</strong>. <code>usernameA</code> for <code>remoteA</code> and <code>usernameB</code> for remote <code>remoteB</code>. Currently, I just <code>rebase</code> after <code>cherry-pick &amp;&amp; merge</code> edit commits with <code>commit --amend --author</code>, but I would like to somehow automate this. I know I could create 2 local repos and set different configuration for each, including author initials and push/pull between local repos. But I would like to keep this in one local repo.</p>

<p>You still need to know - why I need these all? Well, for personal reasons.</p>

<p><em>After</em> asking question, I found, that there is <code>pre-push</code> hook, which would help to automate <code>commit --amend --author</code>, but this is just thought, I haven't tried that in practice. When I do, I will add results and/or code here.</p>
",7,1644017,0,0
61995735,9663390,5/25/2020 4:21,2,1855,<git><hook><githooks><pre-commit-hook>,"Git pre-commit hook ""No error"" error message","<p>I have a pre-commit hook that when I run returns this error:</p>

<p><code>error: cannot spawn .git/hooks/pre-commit: No error</code></p>

<p>I have a <code>#!/bin/sh</code> at the top and have definitely used <code>chmod +x</code> on it. However, those appear to be fixes for when there is a no such file or directory error. My error simply says <code>No error</code> and I cannot work out why.</p>

<p>Code in the hook:</p>

<pre><code>#!/bin/sh

changes() {
  git diff --name-only --diff-filter=AMDR --cached @~..@
}

if changes | grep -q dirname {
  echo ""Test""
}
</code></pre>
",2,9663390,0,0
24666936,1110772,7/10/2014 3:17,1,215,<git><gruntjs><git-submodules><githooks><post-commit-hook>,"Commit Git ""Supermodule"" using post-commit hook of submodule with grunt-git and grunt-githooks","<p>I have a git repo which contains many submodules. When I commit in a submodule, I have a git hook which is supposed to commit in the ""supermodule"". Unfortunately, the commit in the post-commit hook fails because the ""supermodule"" can't seem to detect the changes in its submodule.</p>

<p>Is there any other way I can achieve this behavior?</p>

<p>I have all this set up through Grunt using <code>grunt-githooks</code> and <code>grunt-git</code>.</p>

<p>Below is my gruntfile:</p>

<pre><code>module.exports = function(grunt) {

  grunt.initConfig({
    pkg: grunt.file.readJSON('package.json'),

    githooks: {
      all: {
        options: {
            dest: '../../../.git/modules/server/modules/mymodule/hooks'
        },
        'post-commit': 'updateSuperModule'
      }
    },

    gitcommit: {
        all: {
            options: {
                message: 'Updated Submodule',
                cwd: '../../..',
                verbose: true
            },
            files: {
                src: ['.']
            }
        }
    },

    gitpush: {
        all: {
            options: {
                cwd: '../../..',
                verbose: true
            }
        }
    }
  });

  grunt.loadNpmTasks('grunt-githooks');
  grunt.loadNpmTasks('grunt-git');
};
</code></pre>
",0,1110772,0,0
6372334,256785,6/16/2011 13:04,26,8988,<git><branch><post-commit><githooks>,Git commit hooks per branch,"<p>I'm working on getting into some more advanced usage of git, and I think hooks are the way that I want to go, perhaps somebody can give me some advice here.</p>

<p>My plan is to have a git repository with 3 branches (development, staging, and production).  I want commits to each of these 3 branches to trigger a different script post-commit.</p>

<p>Does git have the capability to do this or am I barking up the wrong tree?</p>

<p>Thanks in advance.</p>
",0,256785,0,0
62016261,13618062,5/26/2020 6:54,3,202,<python><windows><git><githooks><anaconda3>,pytest githook on Windows with Anaconda,"<p>I have the following setup:</p>

<ul>
<li>Windows 10</li>
<li>python installed via Anaconda</li>
<li>Virtual environment setup via Anaconda for running and testing my project with pytest</li>
<li>git version control via MINGW </li>
</ul>

<p>Now I'd like to set a githook that runs all my tests before I push. I have the following problem: I can't activate my virtual environment within the githook.</p>

<p>I tried to activate my anaconda env in the githook script but I can't get it to work. <code>activate</code> as command is not available and calling the whole path <code>../Anaconda3/Scripts/activate.bat</code> does nothing.</p>

<p>I also tried to use python-githooks to configure the hook for me, but this doesn't seem to work in Windows (it can't read <code>PWD</code> from the environment...)</p>

<p>I'm gratefull for any suggestions.</p>
",0,13618062,0,0
24881798,3860064,7/22/2014 7:59,0,315,<git><shell><githooks><synchronize>,Synchronize two remote git repositories automatically,"<p>As an interim solution, I would like to synchronize two remote git repositories automatically. Just to have the possibility to migrate step by step. Both repositories will be used for push and fetch. Is it possible to have both repos always in the same state? I thought about server-side hooks on both repositories which will push changes immediately to the other server. Any hints how to realise that?</p>
",0,3860064,,
62206881,3931589,6/5/2020 1:53,1,42,<git><apache><githooks>,Windows servier-side post-receive git hook hangs,"<p>I have setup Git on an Apache Server and everything is working great. Now I want to setup a post-receive hook to kick off a Jenkins build.</p>

<p>I have written the script and tested it on the server and there is no problem. However, when I do a <code>git push</code>, it gets to the ""Total"" line and stops:</p>

<pre><code>C:\develop\.ws\git-repo&gt;git push
Username for 'https://internal.git.repo.com': user
Password for 'https://user@internal.git.repo.com':
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 12 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 289 bytes | 289.00 KiB/s, done.
Total 3 (delta 2), reused 0 (delta 0)
</code></pre>

<p>Looking on the server, I can see the that the script has attempted to start, but it is hung and using one core's worth of CPU:</p>

<p><a href=""https://i.stack.imgur.com/d6WqP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/d6WqP.png"" alt=""enter image description here""></a></p>

<p>As the script seemed to be causing a problem, I simply tried the sample script by renaming it removing the ""sample"" extension, but that exhibits the same behaviour. So i change the script to:</p>

<pre><code>#!/bin/sh
exit 0
</code></pre>

<p>or</p>

<pre><code>#!C:/git-2.25.1/bin/sh.exe
exit 0
</code></pre>

<p>But still the same.</p>

<p>What's going on?</p>
",0,3931589,,
24904390,1688336,7/23/2014 7:33,1,1484,<git><bash><jenkins><githooks><git-post-receive>,git post-receive hook: shebang throws error (#!/bin/bash: not found),"<p>we are using a git server side hook for notifying jenkins builds on the post-receive event.</p>

<p>The script itself is working as intended, it gets successfully executed.</p>

<pre><code>#!/bin/bash
echo ""Notifying Jenkins""
while read oldrev newrev refname
do
    if [ ""$newrev"" != ""0000000000000000000000000000000000000000"" ] #do not notify    jenkins for deleted branches, print message instead
    then
        branch=$(git rev-parse --symbolic --abbrev-ref $refname)
        echo ""== $branch ==""
        curl -s ""http://[JENKINS_DOMAIN]/git/notifyCommit?url=[PUSH_URL]""
    else
        echo ""DELETED REMOTE BRANCH &gt;$refname&lt;, REMOVE JENKINS JOB IF EXISTING""
    fi
done
</code></pre>

<p>The only problem we have is that we get an error message from the script execution for the shebang line <code>#!/bin/bash</code> with the following content:</p>

<p><code>remote: hooks/post-receive: 1: hooks/post-receive: #!/bin/bash: not found</code></p>

<p>We checked the following things:</p>

<ul>
<li>bash is installed and working on git server</li>
<li>bash is executable/readable for all</li>
<li>changing shebang to <code>#!/bin/sh</code> or <code>#!/bin/dash</code> throws same error (with corresponding shell)</li>
<li>removing shebang throws error for the second line (doesn't find echo) but all other echo commands will be executed successfully</li>
<li>removing shebang and adding an empty first line results in<br>
<code>remote: hooks/post-receive: 1: hooks/post-receive: : not found</code></li>
</ul>

<p>Does anyone has another idea why we get this error? It isn't very problematic but it would be nice to know why this happens and what to do to fix this.</p>

<p>System information:</p>

<ul>
<li>Linux Debian 7</li>
<li>access control is done with apache server
<ul>
<li>www-data user has permission for accessing, reading and executing the post-receive hook</li>
</ul></li>
</ul>

<p>Best regards</p>
",4,1688336,0,0
43567606,1376802,4/23/2017 5:07,1,479,<git><shell><curl><githooks>,Curl Initialization error with git pre-push hook,"<p>I created a git pre-push hook to check the commits being pushed. 
One of the validation steps fetches some data using cURL for validating the commit. On running git push, cURL fails to initialize with error</p>

<pre><code>curl: (2) Failed initialization
</code></pre>

<p>The pre-push hook has the correct permissions (-rwx------). To narrow down the problem I removed everything from the script except the cURL command and I am able to reproduce the error with a very simple script</p>

<pre><code>#!/bin/sh
/usr/bin/curl ""http://www.google.com""
</code></pre>

<p>The script works as expected when run standalone.</p>

<p>Additional details:</p>

<p>i. Git already added to path</p>

<p>ii. Curl version: curl 7.24.0 (x86_64-redhat-linux-gnu)</p>

<p>I would really appreciate any help on this.</p>
",0,1376802,0,0
24925913,2607581,7/24/2014 5:40,0,35,<git><synchronization><githooks><git-push><git-remote>,How to keep two repositories at two different locations in sync to serve as remotes,"<p>I have a situation.</p>

<p>I have two teams working on a project from two geographically distant locations.
The structure I have thought of is there will be two servers one at each location.
Developers at Location-A can push to server-A and same with B.</p>

<p>Now if developers at A have to push to  server-A, what should typically happen is Server-A should pull from Server-B, and then developer can push to Server-A after resolving any merge conflicts if any.</p>

<p>I have two questions here:
1. How do I achieve this?
2. Is there a better way to do this?</p>
",0,2607581,,
32267591,1830420,8/28/2015 9:21,0,233,<git><hook><bitbucket><githooks>,Git hooks not firing OR clearing things up with git hooks,"<p>I've read many articles on using git hooks, but don't quite get the whole picture. My set-up is the following: I'm working on a project for my company. I write code for a web-app on my mac, then I push it to a repo on bitbucket. In the company's local network, there is a virtual machine running a server. For now I remotely login to this VM and execute a <code>git pull</code> command if I've pushed a new piece of code to the repo. I want to configure a push-to-deploy scheme with git hooks, so basically whenever I push some new code into the repo, the VM should automatically pull it (you know, like some services allow you, e.g. Laravel Forge).</p>

<p>In the virtual machine there is a directory for the repo, say, <code>C:\project</code> (yes, it's running Windows, *sigh*). I've tried putting a <code>post-receive</code> hook into <code>C:\project\.git\hooks</code> directory with some ""hello-world"" code, like</p>

<pre><code>#!/bin/sh
ECHO ""HELLO""
pause
</code></pre>

<p>But it's not firing after I <code>git push</code> from my development environment. I <em>feel</em> like I'm doing something <em>totally</em> wrong here, but cannot find any solution. Thanks in advance.</p>

<p>EDIT</p>

<p>Okay, to clear things up, what I want to achieve:</p>

<ol>
<li>I write some code on my mac and I <code>push</code> to a private repo on bitbucket;</li>
<li>The VM in my company's local network has this repository cloned already;</li>
<li>It figures out that there are some changes on bitbucket;</li>
<li>Using git-hooks, it runs some code to <code>pull</code> from bitbucket, like:</li>
</ol>

<p>List item</p>

<pre><code>#!/bin/sh
cd ../.. # cd back to project directory
git pull
npm install
bower install
...
</code></pre>

<ol start=""6"">
<li>I'm even ready to schedule a <code>git fetch</code> task if that's what is need for the case, but no hooks work.</li>
</ol>
",2,1830420,,
4138285,156060,11/9/2010 20:31,24,5659,<git><bash><git-branch><githooks><git-merge>,block push of trivial merge to git server,"<p>A while back I <a href=""http://thread.gmane.org/gmane.comp.finance.mifos.devel/9491/focus=9597"" rel=""nofollow noreferrer"">asked our developers to use rebase instead of merge before pushing</a>. Eliminating trivial merges makes for a much easier to follow commit graph (ie: gitk, git log).</p>

<p>Sometimes folks still accidentally do trivial merges, then push. Does anyone have handy or have tips for writing a server-side hook that blocks trivial merges?</p>

<p>By ""trivial merge"", I mean a merge without conflicts. <a href=""http://mifos.git.sourceforge.net/git/gitweb.cgi?p=mifos/head;a=commit;h=c516520a9c37944c96162ffd85c00f68b81786a6"" rel=""nofollow noreferrer"">Here's an example</a>, and <a href=""https://stackoverflow.com/questions/1824264/what-is-a-trivial-merge-in-git/1824297#1824297"">here's a better explanation of a trivial merge in git</a>.</p>

<p><strong>Update Wed Nov 10 01:26:41 UTC 2010</strong>: great comments, all! Thank you.</p>

<ul>
<li>Consider the following: all I'm really asking folks to do is this:

<ul>
<li>if <code>git pull --ff-only</code> fails, do <code>git pull --rebase</code> instead of <code>git pull</code></li>
</ul></li>
<li>git.git only has one or two committers, right? In theory, it should be easy to follow the commit graph, but it looks pretty messy to me.</li>
</ul>

<p><strong>Update Thu Nov 11 23:49:35 UTC 2010</strong>:</p>

<ul>
<li><a href=""https://gist.github.com/673438"" rel=""nofollow noreferrer"">here's a gist with some in-progress work</a></li>
<li>another idea is to prevent trivial merges on the client end, with a ""git push"" <a href=""http://article.gmane.org/gmane.comp.version-control.git/92920"" rel=""nofollow noreferrer"">wrapper</a></li>
</ul>

<p><strong>Update Wed Dec 15 18:34:52 UTC 2010</strong>:</p>

<ul>
<li><a href=""https://stackoverflow.com/users/217284/adymitruk"">adymitruk</a> is close! Just one case is still unresolved: non-trivial merges must still work.</li>
<li>A rather complete <a href=""https://gist.github.com/737842"" rel=""nofollow noreferrer"">test suite</a> is available, check it out.</li>
<li>I asked for help on a (the?) <a href=""http://thread.gmane.org/gmane.comp.version-control.git/163788"" rel=""nofollow noreferrer"">git mailing list</a>.</li>
</ul>
",9,156060,0,0
4144853,250422,11/10/2010 13:18,3,4287,<git><githooks>,from command line ok but the hook (git),"<p>I want to automatically update my redmine project repository after anybody pushes into remote repo. Currently gin in redmine is up and works fine. But after automatic update using a hook I get <code>The entry or revision was not found in the repository.</code> in redmine.</p>

<p>To set up git in redime I followed <a href=""http://www.redmine.org/wiki/1/RedmineRepositories"" rel=""nofollow noreferrer"">redmine wiki</a> so the repo is bare created via <code>git clone --bare</code></p>

<p>To update redmine's git repository I use this <strong><code>cd /srv/www/redmine.domain.com/git_repositories/linode.git &amp;&amp; git fetch &amp;&amp; git reset --soft refs/remotes/origin/master</code></strong> </p>

<ul>
<li>manual update if running from command line under <code>git</code> user works ok</li>
</ul>

<p>the screenshot when executed manually is</p>

<pre><code>remote: Counting objects: 5, done.
remote: Compressing objects: 100% (3/3), done.
remote: Total 3 (delta 2), reused 0 (delta 0)
Unpacking objects: 100% (3/3), done.
From domain.com:linode
  * [new branch]      master     -&gt; origin/master
</code></pre>

<ul>
<li>the same doesn't work correctly when running form <code>post-receive</code> hook (see the error above). Runs under the same user (git). The first line of the hook is <code>#!/bin/sh</code></li>
</ul>

<p><strong>configuration:</strong> git (1.7.0.4) + gitolite (1.5.7) on ubuntu</p>

<p>I checked the GIT_DIR system variable byt command SET
    remote: /srv/www/redmine.domain.com/git_repositories/linode.git[K
    remote: GIT_DIR='.'[K</p>

<p>I even tried to set <code>git path</code> up in the hook by </p>

<pre><code>export GIT_DIR=/srv/www/redmine.domain.com/git_repositories/linode.git
or unset GIT_DIR
</code></pre>

<p>but nothing helped.</p>

<p>The result of the hook</p>

<pre><code>echo ""Post receive-hook =&gt; updating Redmine repository""
#env -i git reset --hard
#unset $(git rev-parse --local-env-vars)
#unset GIT_DIR


cd /srv/www/redmine.domain.com/git_repositories/linode.git
pwd
git fetch
git reset --soft refs/remotes/origin/master
</code></pre>

<p>is </p>

<pre><code>Pushing to git@domain.com:linode
remote: Post receive-hook =&gt; updating Redmine repository[K
remote: From domain.com:linode[K
remote: /srv/www/redmine.domain.com/git_repositories/linode.git[K
remote:    4755447..13b8e3d  master     -&gt; origin/master[K
To git@domain.com:linode
  4755447..13b8e3d  master -&gt; master
</code></pre>

<p>I tried few hints from <a href=""https://stackoverflow.com/questions/3542854/calling-git-pull-from-a-git-post-update-hook"">calling-git-pull-from-a-git-post-update-hook</a> and <a href=""https://serverfault.com/questions/107608/git-post-receive-hook-with-git-pull-failed-to-find-a-valid-git-directory"">git-post-receive-hook-with-git-pull-failed-to-find-a-valid-git-directory</a> but nothing helped</p>

<h2>Update</h2>

<p>if I try</p>

<pre><code>echo ""Post receive-hook =&gt; updating Redmine repository""
export GIT_DIR=

cd /srv/www/domain.com/git_repositories/linode.git

echo ""Resetting working tree...""
git reset --hard
echo ""Finished resetting working tree.""

git fetch
git reset --soft refs/remotes/origin/master
</code></pre>

<p>I get this + redmine repository is untouched and accessible from redmine</p>

<pre><code>Pushing to git@domain.com:linode
remote: Post receive-hook =&gt; updating Redmine repository[K
remote: Resetting working tree...[K
remote: fatal: Not a git repository: ''[K
remote: Finished resetting working tree.[K
remote: fatal: Not a git repository: ''[K
remote: fatal: Not a git repository: ''[K
To git@domain.com:linode
 c553a15..854d159  master -&gt; master
</code></pre>

<h2>Update2</h2>

<p>I found out that if I do <code>git fetch</code> from the hook and then <code>git reset --soft refs/remotes/origin/master</code> from command line it doesn't work. I get the above error in redmine. I do <code>git fetch</code> from command line then everything works fine. Console messages from both hook and commnand line 'git fetch` commands looks the same to me.</p>
",7,250422,0,0
4155144,435302,11/11/2010 14:04,2,1364,<git><deployment><githooks>,git post-receive hook to update multiple servers,"<p>I'm using <a href=""https://github.com/jollyroger/vcs-hooks/blob/master/git/server-sync/post-receive"" rel=""nofollow"" title=""My git post-recieve hook"">git post-receive hook</a> to deploy versions of the web application from three branches (master, staging, and stable) on three servers (development, testing and production). The pairing between branches and servers is currently hard-coded in the script. However I'd like to remove this restriction and make this hook possible to manage unlimited quantity of branches. It can be done in the following way:</p>

<ul>
<li>move all per-branch config options to some separate files, for example <code>.git/???/&lt;branch_name&gt;</code></li>
<li>the main script will check if such file is available for every branch, source it and then deploy on the remote server using configuration parameters from that file.</li>
</ul>

<p>However I don't know where exactly in <code>.git</code> directory can I place such files. Or maybe there is a better solution?</p>
",0,435302,,
50120951,4614283,5/1/2018 17:25,0,220,<python><git><python-2.7><githooks>,something wrong with my pre-commit file,"<p>This is my pre-commit file (placed in .git/hooks)</p>

<pre><code>from __future__ import absolute_import
from __future__ import print_function
from __future__ import unicode_literals

import argparse
import io
import sys


def replace_strings(filename):
    f = open(filename, 'r')
    configtext  = f.read()
    passwordpos = configtext.find(""password"");
    newlinepos  = configtext.find(""\n"", passwordpos)
    passwordold = configtext[passwordpos+10:newlinepos-2]
    passwordnew = ""test0000""
    f.close()
    f = open('config.php', 'w')
    #print(passwordpos)
    #print(passwordold)
    #print(configtext)
    configtext = configtext.replace(passwordold, passwordnew)
    #print(configtext)
    f.write(configtext)
    return 1

def main(argv=None):
    parser = argparse.ArgumentParser()
    parser.add_argument('filenames', nargs='*', help='Filenames to fix')
    args = parser.parse_args(argv)

    retv = 0

    for filename in args.filenames:
        if (filename=='config.php'):
            return_value = replace_strings(filename)
            if return_value != 0:
                print('Fixing strings in {}'.format(filename))
            retv |= return_value

    return retv
</code></pre>

<p>somehow, it doesn't work.
I already checked content of def replace_strings in separate .py file, it works fine enough (instead of argument filename I used ""config.php"" string).
Any help?</p>
",5,4614283,,
4172430,113606,11/13/2010 12:13,6,1300,<git><scripting><githooks>,Git global hook customization,"<p>I am planning to write a few git hooks as a project which logs the user's actions in a database. This database can then be used for querying for all his activities. The actions I am trying to log are</p>

<ul>
<li>commit</li>
<li>pull</li>
<li>push</li>
<li>merge</li>
<li>branch</li>
</ul>

<p>I want to get this packaged in distros which can be installed via package manager. 
Git allows global hooks by placing any such in <code>$PREFIX/share/templates/hooks</code></p>

<p>It currently has some hooks which are disabled (<code>.sample</code> is appended to their name). When a new repository is created, these hooks are copied in the <code>.git</code> folder of the repository</p>

<p>Now if a user installs the package for these hooks and hooks like <code>post-commit</code> and <code>post-update</code> are already enabled. In this case the script file will be overwritten! This sounds bad</p>

<p>This means git has only one hook file per action. If I need to keep three hooks for one action, it means it is not possible. This means automated install from package manager can introduce conflicts.</p>

<p>Now think that we packaged the hooks to overwrite the default enabled file. If a user wants to add some more actions to those file and then decided to uninstall my package, then his custom command would also be gone?</p>

<p>I thought that git was pretty clever in this regard and I was wrong :(</p>

<p>There needs to be a folder named <code>post-commit</code> and <code>post-update</code> or whatever actions and git should run all the scripts inside that folder. I am still hunting a way to deal with the current situation.</p>
",4,113606,0,0
4457031,289004,12/16/2010 2:46,77,14055,<git><githooks>,Tracking changes to hooks in .git/hooks,"<p>Is there a way to track git hook changes?  I have three hooks that only show up on my machine, not when my other developers fetch.  Trying to <code>git add</code> doesn't work.</p>
",6,289004,0,0
15547459,,3/21/2013 12:24,7,4066,<git><formatting><githooks>,Having git reformat source on push,"<p>I'm mastering a development team where everyone worked with Eclipse and the same formatting settings.</p>

<p>Now some of the developers have reasons to switch to other IDEs, which format source code differently. So, when they now push to the git origin repo, git notices a a lot of cosmetic differences. Unfortunately, this is a big problem for some of the developers to get their head around.</p>

<p>Is there a way to get git - maybe by using hooks - to reformat everything on push or preferably commit, so the code in the repo is always formatted IDE independently?</p>

<p>I'm assuming we are not the first team in git-history to have that problem, so I hope there is a prefab solution or at least some best practices.</p>
",2,,0,0
68711335,13797794,8/9/2021 11:29,0,301,<git><bitbucket><git-submodules><githooks>,post-commit hook telling the parent repo to update the link to the the submodule in bit bucket,"<p>In <strong>Bit bucket</strong>
Every time I push a commit to the submodule I need to update the parent repo to the latest commit in the submodule. Is there any automatic way to do that in the remote?</p>
<p>Every time push a commit in the submodule repo i want the parent to automatically point to the latest commit of the child repo. I thought of  post-commit hook telling the parent repo to update the link to the the submodule in bit bucket .Please suggest if its possible and how?</p>
<ol>
<li>go to a checked-out parent repository</li>
<li>execute git submodule update --remote: that would update all submodules to their latest master (by default) commit.</li>
<li>add, commit, and push</li>
</ol>
<p>Please give references for this for bitbucket</p>
",7,13797794,,
15682525,454523,3/28/2013 13:01,1,42,<git><githooks><git-config>,How to semi-manually control a file in git?,"<p><strong>My problem is as such:</strong><br>
I have a repository for my dotfiles which includes the .gitconfig file.
I store this repository on github and do not want to show my email/name there.</p>

<p><strong>Simple solution:</strong><br>
use <code>--assume-unchanged</code> or <code>--skip-worktree</code> and manually add the file when it is modified.</p>

<p><strong>Idea for better solution:</strong><br>
Use <code>--assume-unchanged</code> or <code>--skip-worktree</code> in conjunction with some <code>pre-commit</code> hook that tries to apply a patch to see if there were any modifications to the file except the lack of email in the indexed version. if there were then stop the commit.</p>

<p>Any ideas on how to implement such a thing ?</p>

<p>EDIT: the tricky part is of course to make git status show that the file is not modified in the working directory even though it has a username/password and the index doesn't but show it as modified if it has other changes.</p>
",0,454523,,
50417934,5796806,5/18/2018 19:17,0,736,<git><gitlab><githooks>,force push a git pre-receive hook error,"<p>I have created a custom git pre-receive hook as per steps mentioned here </p>

<p><a href=""https://docs.gitlab.com/ee/administration/custom_hooks.html"" rel=""nofollow noreferrer"">https://docs.gitlab.com/ee/administration/custom_hooks.html</a></p>

<p>Its a shell script which does some analysis of the commits and rejects them if there are any issues. However it can have lot of positives and developers should not find it a nuisance. So is there a way that they can force push even if the pre-receive hook fails ? I tried </p>

<pre><code>git push --force 
</code></pre>

<p>but it is still rejected. </p>
",0,5796806,0,0
50419805,2212321,5/18/2018 22:06,1,572,<git><ssh><gitlab><ubuntu-16.04><githooks>,Gitlab Pre-Receive Hook Rejecting SSH Push,"<p>Current Installation:<br>
Server: Ubuntu Server 16.04<br>
Gitlab Version: 10.7.3<br>
Gitlab Workhorse: 4.1.0<br>
Gitlab App Directory: /opt/gitlab (application resides here)<br>
Gitlab Data Directory: /drive2/repositories (repos created and stored here)</p>

<p>Context:<br>
I slapped together a working Gitlab installation with the data-dir pointing to a separate partition for back-up purposes, because data continuity is a cool idea, right? Repositories that are created through the gitlab web-interface are stored in the data-dir as expected. SSL is fine and dandy so I can use HTTPS to CLONE out of these repos. Furthermore, I am able to PUSH to these repos using HTTPS without any errors.<br>
I have also established SSH keys and authorized the git user (created by the omnibus gitlab installation) to validate against these keys. I have verified that I can successfully tunnel through SSH onto the server as the git user and have correct privileges to write and read the data-dir where repos are stored. Here's where it gets weird:  </p>

<p>The Error:<br>
I can successfully use SSH to clone a repo from the server with the following command:<br></p>

<pre><code>git clone git@some_domain.com:user/repo_name.git
</code></pre>

<p>Cool. I'm less disappointed in the server than my parents are in me up until this point. So I go ahead, make a new file to add to the repo, commit (unlike my girlfriend that always drags her feet), and finally PUSH to the remote origin. And here my world crumbles like my motivation on Monday morning before work:</p>

<pre><code>git push -u origin master
*** Edited Out: Push Stats
remote: GitLab: The project you were looking for could not be found.
To some_domain.com:user/repo_name.git
 ! [remote rejected] master -&gt; master (pre-receive hook declined)
error: failed to push some refs to 
'git@some_domain.com:user/repo_name.git'
</code></pre>

<p>I open the repo's directory on the gitlab server, navigate to the hooks folder which contains a symbolic link back to the gitlab app directory that houses the pre-receive hook file. The contents of the pre-receive hook file here:</p>

<pre><code>#!/opt/gitlab/embedded/bin/ruby --disable-gems
# Fix the PATH so that gitlab-shell can find git-upload-pack and friends.
ENV['PATH'] = '/opt/gitlab/bin:/opt/gitlab/embedded/bin:' + ENV['PATH']
#!/usr/bin/env ruby
# This file was placed here by GitLab. It makes sure that your pushed commits
# will be processed properly.

refs = $stdin.read
key_id = ENV.delete('GL_ID')
protocol = ENV.delete('GL_PROTOCOL')
repo_path = Dir.pwd
gl_repository = ENV['GL_REPOSITORY']

def increase_reference_counter(gl_repository, repo_path)
  result = GitlabNet.new.pre_receive(gl_repository)

  result['reference_counter_increased']
end

require_relative '../lib/gitlab_custom_hook'
require_relative '../lib/gitlab_access'
require_relative '../lib/gitlab_net'

# It's important that on pre-receive `increase_reference_counter` gets executed
# last so that it only runs if everything else succeeded. On post-receive on the
# other hand, we run GitlabPostReceive first because the push is already done
# and we don't want to skip it if the custom hook fails.
if GitlabAccess.new(gl_repository, repo_path, key_id, refs, protocol).exec &amp;&amp;
    GitlabCustomHook.new(repo_path, key_id).pre_receive(refs) &amp;&amp;
    increase_reference_counter(gl_repository, repo_path)
  exit 0
else
  exit 1
end
</code></pre>

<p>Is the symbolic link back to the gitlab app folder causing issues to the dynamic directory being built by this file?  </p>

<p>I am at a complete loss of why SSH pushes are not working and am as desperate for help as I am desperate for some validation in my life. Why does the CLONE command successfully find the directory, but the PUSH command not? Everything points me to the hook file, but I've never dealt with these and help would be more appreciated than a $5 gift-card three weeks after a birthday.  </p>

<p>Thanks StackOverflow!</p>
",0,2212321,0,0
15841365,911022,4/5/2013 18:51,1,1497,<git><githooks>,How to get back my deleted and committed file in git repo?,"<p>I have a project on git. My project has files like:</p>

<pre><code>file1.js
file2.html
file3.js
file4.css
file5.html
file6.jpg
file7.html
file8.js
file9.css
</code></pre>

<p>I did a git -rm filename for all the files and committed them, until I was left with</p>

<pre><code>file1.js
file2.html
</code></pre>

<p>I need to get back my file6.jpg</p>

<p>How do I get file6.jpg so my repo will have</p>

<pre><code>file1.js
file2.html
file6.jpg
</code></pre>
",2,911022,0,0
15881282,601452,4/8/2013 14:06,1,1120,<git><githooks><gerrit>,make gerrit abort commit push if its message is invalid,"<p>I am working with gerrit 2.5.1.</p>

<p>I want to abort commit push from an user if its message does not comply with a format forced by the company. </p>

<p>So, imagine that i want that users only be able to push commits with message formatted like this:</p>

<pre><code>[#ISSUENUMBER] Issue Title

Something about the issue

Fix #ISSUENUMBER @5h
</code></pre>

<p>I already have a script that validates this format, but I have no idea how to add this hook at gerrit and how I get the body message from the commit being pushed. Can someone help?</p>
",0,601452,0,0
15885360,108658,4/8/2013 17:32,3,778,<git><tfs><synchronization><githooks><subtree>,Automatically keeping shared git subtrees in sync,"<p>On our server we have different git repos for different projects that share some components as sub-<strong>trees</strong>. It is pretty important to me that they remain sub-<strong>trees</strong>, because we do active development in the whole source base and it is important that people have the most easy and convenient workflow possible. That also means, that ideally a simple <code>git pull</code> through a gui tool is the way to work. And subtrees are very, very convenient, because they hide the underlaying complexity by allowing everyone to just clone the repo and see all the stuff they need and eventually push to the team git server.</p>

<p>(Then the git server is supposed to push to the component git repos that will eventually end up in TFS)</p>

<p>Now my problem is, how can I automatically keep the components all up-to-date? My idea was to implement a hook on the project repo that would do a <code>git subtree pull</code> prior to accepting any push (and potentially complain that the client is out-of-date) and a second hook that would immediately do a <code>git subtree push</code> after the push arrived.</p>

<p>Do you have any better ideas? Every input is welcome.</p>
",2,108658,0,0
15909353,558866,4/9/2013 18:09,3,915,<git><bash><composer-php><githooks>,Git post-checkout - how to reject push if Composer installation fails,"<p>So I've set up a post-checkout hook on my server that will run Composer</p>

<pre><code>#!/bin/sh
# Composer Git Checkout Hook

PROJECT_NAME=example.com

cd /home/www/$PROJECT_NAME/htdocs

unset GIT_DIR

# Process composer.json if one exists.
if [ -f composer.json ]
then
    echo ""Processing Composer""

    # Run the composer install
    composer.phar install
fi
</code></pre>

<p>When deploying, it works. However, since is a new server and I've forgotten to enable the cURL module, it fails the installation, yet accepts the push.</p>

<pre><code>$ git push deploy master

Counting objects: 5, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 348 bytes, done.
Total 3 (delta 2), reused 0 (delta 0)
remote: Processing Composer
remote: Loading composer repositories with package information
remote: Installing dependencies from lock file
remote: Your requirements could not be resolved to an installable set of packages.
remote: 
remote:   Problem 1
remote:     - Installation request for facebook/php-sdk dev-master -&gt; satisfiable by facebook/php-sdk dev-master.
remote:     - facebook/php-sdk dev-master requires ext-curl * -&gt; the requested PHP extension curl is missing from your system.
remote: 
To ssh://adam@my-server.net/home/www/example.com/git
   0fa8a61..afa63ae  master -&gt; master
</code></pre>

<p>How do I get the status of the Composer installation and exit so that the remote repository rejects the push?</p>
",0,558866,0,0
15922486,470112,4/10/2013 9:50,1,2063,<git><github><githooks><git-workflow>,How to stop a pull request being closed with unmerged commits,"<p>Could anyone suggest a way of stopping/informing a user that there is an open pull request on github on a branch they are trying to delete?</p>

<p>We currently use the following branches <code>master</code>,<code>rc</code>,<code>hotfix</code> and <code>prod</code> to represent the various environments.  When we have a <code>hotfix</code> branch that we want to promote to <code>prod</code> we delete the <code>prod</code> branch and force push the <code>hotfix</code> branch at the point it was built.  Generally this will work as expected.  However in the example I am questioning we have had cases where we deploy the <code>hotfix</code> to production with a partial set of changes (<code>HEAD</code> of the <code>hotfix</code> branch is not what is being deployed.  And in some cases these are still awaiting code review in the form of a pull request for further outstanding work.</p>

<p>What I am looking for is a way of informing the user when they are trying to delete the hotfix branch that the <code>HEAD</code> was not what we deployed to production and more importantly that there are outstanding Merge Requests.</p>

<p>We have had pull request being auto closed for no reason other than the remote branch has been deleted, when this is not needed and will simply need to be recreated from the <code>prod</code> branch and the request reopened.  This is due to our git workflow that we delete these branches as described above, but ideally would allow them to remain open for the pull request to be completed and then a subsequent deployment made and the branch only gets deleted when there is no outstanding work.</p>
",0,470112,,
50442856,4860092,5/21/2018 6:03,0,34,<git><devops><githooks>,Git hooks forcing message format,"<p>I want to change the way our team is committing messages to github.
I want to be able to use the pre commit git hooks but i couldn't find a way except the local folder .git/hooks/exutable_hook_file.</p>

<p>Basically i need to force all of the team for a specific message format, before pushing to origin, without asking them to make any manual work on their side.
Any ideas?</p>
",2,4860092,0,0
15965022,378170,4/12/2013 6:58,1,331,<git><githooks>,"Git push - ""Everything is up to date"" - But working tree files don't get updated. what to do?","<p><strong>1)</strong> I have a <code>prime</code> repo on a <code>remote server host</code>.</p>

<p><strong>2)</strong> I have a <code>bare</code> repo on a <code>remote server host</code>. </p>

<p><strong>3)</strong> I have a <code>clone of the bare</code> repo with a working tree on my <code>local computer</code>, and the bare is setup as a remote on this local repo.</p>

<p>Sometimes, some files are added directly (no staging) by our shared host staff without using the common procedure ""git add and commit"" - <strong>result:</strong> </p>

<p>We often do git push and it says: ""Everything is up to date"" (true because the bare gets updated) but the prime doesn't, hence, the <code>working tree</code> files aren't there. </p>

<p>I need something (hook, cronjob?) so that, when bare is different from prime, prime must be updated with the latest bare files. </p>

<p>Can we use a hook, or cronjob to force this behavior?</p>

<p>What are our options?</p>

<p>I'm available to chat, if someone has the patience for that. </p>

<p>Please advice.</p>
",0,378170,0,0
16008318,405161,4/15/2013 5:41,6,3463,<git><githooks><git-checkout>,Including submodules in git checkout to GIT_WORK_TREE in hook,"<p>Is it possible to include submodules when using the following code in a post-update hook?</p>

<pre><code>GIT_WORK_TREE=/path/to/directory git checkout -f
</code></pre>

<p>What other options would I have to distribute code, including submodules from a post-update hook?</p>

<p>Thanks.</p>
",0,405161,0,0
32649628,2055097,9/18/2015 10:21,24,18520,<git><githooks>,How can I add my pre-commit hook to an existing git repository,"<p>I have a pre-commit hook and I want to add it to the repository so that by checking it out my colleagues have it instantly in place.<br>
However if I try to add it ( being in the root directory of my project) I get the following result:</p>

<pre><code>$ git add  .git/hooks/pre-commit
error: Invalid path '.git/hooks/pre-commit'
error: unable to add .git/hooks/pre-commit to index
</code></pre>

<p>Any idea if this work and how to achieve my goal?</p>
",2,2055097,0,0
16077149,1407541,4/18/2013 7:39,13,6928,<git><githooks><gitlab>,Want to setup a hook that copies committed files to a particular folder,"<p><strong>Background:</strong> Developing a Facebook app using PHP Laravel framework &amp; MySQL for database.</p>

<p>I have setup Gitlab on our development server and created a repository on it where the team has been added and is committing &amp; pushing code.</p>

<p>What I would like to do is, when I push code to a particular branch on GitLab (for example Master) I would like it to be available at /var/www/productname so that I can test it within the Facebook canvas as well (certain things happen there that can't be tested on your local machine).</p>

<p>However, I don't want the hook to copy all the files over every time a push happens on master, just the files that were modified.</p>

<p>Can anyone help out with such a hook?</p>

<p>Thank you.</p>
",1,1407541,0,0
32665889,995092,9/19/2015 8:11,3,2828,<rust><githooks><tty>,stdin read_line does not wait for user input when called from a git hook,"<p>I'm an absolute Rust beginner trying to build a simple confirmation function (yes or no), but I can't get the user to type anything, the function just keeps looping without waiting for user input:</p>

<pre><code>""""
""""
""""
etc.  
</code></pre>

<p>is the result of the simplified version below.</p>

<pre><code>use std::process;
use std::io;

pub fn confirm() {
  loop {
    let mut answer = String::new();

    io::stdin().read_line(&amp;mut answer)
      .ok()
      .expect(""Failed to read line"");

    println!(""{:?}"", answer);
  }
}
</code></pre>

<p>I've built my function around the <a href=""http://doc.rust-lang.org/book/guessing-game.html"" rel=""nofollow"">guessing game</a> example, and the rest of my program does nothing much, just reading a file and printing text.</p>

<p>Perhaps is due to the way my program (a git hook) is launched?</p>
",1,995092,,
16091516,1306501,4/18/2013 19:30,3,2314,<git><bitbucket><githooks>,git server side 'update' hook in bitbucket,"<p>I'm looking for way to create a git server side push hook (will be used to enforce referencing JIRA ticket number in each commit message). </p>

<p>According to <a href=""http://git-scm.com/book/en/Customizing-Git-Git-Hooks"" rel=""nofollow noreferrer"">pro git - git hooks</a>, the git hook to use on the server side is 'update', which exists on .git/hooks dir.
Since I'm using BitBucket for git hosting, I need to somehow send this file to the .git/hooks dir in the site.</p>

<p>Using <a href=""https://confluence.atlassian.com/display/BITBUCKET/Managing+Bitbucket+Services"" rel=""nofollow noreferrer"">BitBucket services</a> will not be suitable, since they are 'post-receive' hooks, so there's no point in using existing or writing my own broker, therefore <a href=""https://stackoverflow.com/questions/9107320/create-a-bitbucket-git-commit-hook"">this question</a> doesn't give me a proper solution.</p>
",0,1306501,0,0
16094552,1426193,4/18/2013 23:04,0,357,<git><git-branch><githooks>,prevent new branches being created in a git bare repo,"<p>We have our main bare repo which has a hook that is supposed to push a specific branch to another remote bare repo.  The the other repo is only supposed to have the one branch. The post-receive hook checks to see if the current commit is on the specific branch (using git rev-parse specific_branch_name) and if so does a:</p>

<pre><code> git push ssh://git@remote/path/to/repo
</code></pre>

<p>Now we did something silly and pushed a new branch (which was on the same commit as specific branch).  The hook pushed this and a new branch on the other remote was created.  </p>

<p>Now obviously we need to delete that branch from the other remote.  However I want to know how to make the other remote refuse to create new branches (it should have only the one specific branch and no others).  Is there a way to do this?</p>

<p>Thanks in advance.</p>
",0,1426193,,
32693239,3925323,9/21/2015 10:44,2,1299,<git><ubuntu><vps><githooks>,Automatic Deployment with Git - unable to run post-receive hooks,"<p>I've created a repository in /var/repo/myrepo.git using</p>

<pre><code>git init --bare
</code></pre>

<p>and a post-receive hooks with inside:</p>

<pre><code>#!/bin/sh
git --work-tree=/var/www/domain.com --git-dir=/var/repo/myrepo.git checkout -f
</code></pre>

<p>Then:</p>

<pre><code>chmod +x post-receive
</code></pre>

<p>Now, push from local to remote works properly and I know that because I can see my local branch in</p>

<pre><code>/var/repo/myrepo.git/refs/heads
</code></pre>

<p>But the problem is that the hooks do not work.</p>

<p>Then if I run from terminal:</p>

<pre><code>git --work-tree=/var/www/domain.com --git-dir=/var/repo/myrepo.git checkout -f
</code></pre>

<p>all the file from the repo are copied to /var/www/domain.com</p>

<p>So why the hook do not work but the command inside do if executed from bash?</p>

<p><strong>UPDATE_1</strong></p>

<p>As suggested, inside <em>/var/repo/myrepo.git/hooks/post-receive</em> I'm using:</p>

<pre><code>git --work-tree=/var/www/domain.com --git-dir=/var/repo/myrepo.git checkout -f &gt;/tmp/mylogfile 2&gt;/tmp/mylogfile
</code></pre>

<p>The file is executable becouse I can run it with:</p>

<pre><code>./post-receive
</code></pre>

<p>This copy all the repo file inside my warking dir as expected, but the file <em>""/tmp/mylogfile""</em> is empty.</p>
",6,3925323,0,0
32699631,426877,9/21/2015 15:57,7,1629,<git><githooks>,Can GIT_COMMITTER_DATE be customized inside a git hook?,"<p>I'd like to manually control the git commit timestamp so that my GIT_COMMITTER_DATE always matches the GIT_AUTHOR_DATE.  I've seen many solutions using filter-branch to rewrite history, but I'd rather be proactive about this and put the logic in a git hook so that it always matches going forward.</p>

<p>But I find that while these variables work fine if defined in the environment where git is invoked, they do not seem to have any effect when they are defined inside the pre-commit git hook.  Eg:</p>

<pre><code># this works if run directly on cmd line, but not inside the pre-commit hook
export GIT_AUTHOR_DATE='Mon, 11 Aug 2014 11:25:16 -0400'
export GIT_COMMITTER_DATE=""$GIT_AUTHOR_DATE""
</code></pre>

<p>Is there any way to dynamically adjust these values inside a git hook so that commits automatically have the desired timestamps?  I'm on git version 1.8.5.2</p>
",4,426877,,
32702730,2312615,9/21/2015 19:03,3,4752,<server><githooks><phar>,PHP Fatal error: Class 'Phar' not found in,"<p>When I deploy my commits via Git to the server, it runs a git hook that has the line</p>

<pre><code>test -f composer.phar &amp;&amp; ./composer.phar self-update || curl -s http://getcomposer.org/installer | php;
</code></pre>

<p>That generates the error:</p>

<pre><code>PHP Fatal error:  Class 'Phar' not found in .../composer.phar on line 23
</code></pre>

<p>This is line 23 from composer.phar:</p>

<pre><code>Phar::mapPhar('composer.phar');
</code></pre>

<p>I did search other questions with the same problem and checked these things:  </p>

<ul>
<li>git hook's script already has permission to be executed</li>
<li>I can execute <code>./composer.phar</code> without error when logged in server and inside the same folder as set in the git hook's script</li>
<li>PHP modules has Phar enabled, checked via <code>php -m</code></li>
<li>There is no <code>extension=phar.so</code> in php.ini, but I dont think it has to be because it's already enabled</li>
<li>PHP version: PHP 5.5.3 (cli)</li>
</ul>

<p>What else could be causing this?</p>
",2,2312615,,
16110642,2267480,4/19/2013 17:50,1,225,<git><githooks><git-post-receive>,Git Post-receive deployment is slow,"<p>We are testing git version control with our websites.  The current setup has two bare repositoriees on a network shared drive /g/ (one for intranet and one for internet).  When pushing to this repository I would like to have the site automatically checked out to the webserver at /x/.  Following the suggestion of several blogs and questions here, I set up a post-receive hook as follows:</p>

<pre><code>#!/bin/sh
GIT_WORK_TREE=/x/intranet checkout -f
</code></pre>

<p>This worked well for deploying the master branch of each repository.  Each deployment probably took 5-10 seconds.  However, we would also like to have a dev branch that is automatically checked out to a dev server at /y/.  My revised hook looked like this:</p>

<pre><code>#!/bin/sh
GIT_WORK_TREE=/x/intranet checkout -f master
GIT_WORK_TREE=/y/intranet checkout -f dev
</code></pre>

<p>This was very problematic, as pushing now would take around 15 minutes.  The problem seemed to be that the entire working directory of each branch was rewritten, rather than just updating any files that had changed.  Even after adding a condition to check which branch had been pushed and only checkout that branch, if I pushed the branch other than the one that had been pushed previously, the push would still take around 10 minutes.  Obviously this is unacceptable.</p>

<p>My current attempt has 2 repositories (one intranet and one internet) on each server.  The hook I am running now looks as follows:</p>

<pre><code>#!/bin/bash

while read oldrev newrev ref
do
  branch=`echo $ref | cut -d/ -f3`

  if [ ""master"" == ""$branch"" ]; then
    cd /x/intranet
    unset GIT_DIR
    git pull --verbose origin master
    echo ""Changes pushed to production server.""
  fi

  if [ ""dev"" == ""$branch"" ]; then
    cd /y/intranet
    unset GIT_DIR
    git pull --verbose origin dev
    echo ""Changes pushed to dev server.""
  fi

done
</code></pre>

<p>This hook is still taking longer than I feel that it should to run (almost 2 minutes, compared to about 4 seconds to run a pull in one of the repos myself).  Is there a problem with either of my implementations?  Or is there another method that will solve the issue?</p>

<p>EDIT: I was wondering if using the mounted drives in the git bash shell was possibly the issue?</p>
",0,2267480,,
16139326,1721636,4/22/2013 4:13,1,631,<git><githooks><mediatemple>,Git post-receive permissions,"<p>I have a git repository setup on Media template gs hosting. I'm using a post-receive hook to deploy my application when I push to the origin. The hook runs fine, but if I try and make it update a working copy it fails to due to a permissions error.
This is my post-receive hook:</p>

<pre><code>#!/bin/bash
GIT_WORK_TREE=/home/path/to/workingcopy/ git checkout -f
</code></pre>

<p>When the git hook runs it appears to run as the user 'me%mydomain.com' but the owner of my working files is 'mydomain.com'</p>

<p>I've tried setting git config --global user.email ""mydomain.com"". But it does not seem to effect it. </p>

<p>Is it possible to make the git hook run the correct user?</p>
",0,1721636,0,0
32743999,33689,9/23/2015 15:44,2,1485,<git><githooks>,Equivalent of a git pre-merge hook?,"<p>I work on a project where multiple developers must edit code using a single project file. Most of the code they edit is actually located in separate code module files, but then they must share the single project file amongst themselves.</p>

<p>There are two types of things that the IDE writes to the project file:</p>

<ol>
<li><strong>Important stuff</strong>: i.e. listings of module files that makeup the project</li>
<li><strong>Superfluous stuff</strong>: i.e. IDE dialog box X,Y position settings</li>
</ol>

<p>Because the IDE has no concept of splitting out the superfluous stuff into per-user settings files, we wind up with merge conflicts <strong>all the time</strong></p>

<p><strong>Question:</strong> Does git provide an extension point (hook) that allows me to ignore the <strong>Superfluous Stuff</strong> when a user is merging a certain file type? My goal is to default to a ""theirs/mine"" type merge strategy for the <strong>Superfluous Stuff</strong> whilst handing the merging of the <strong>Important Stuff</strong> the same way it always does.</p>
",1,33689,,
16165004,1894256,4/23/2013 8:52,0,1146,<git><hook><githooks><git-post-receive>,How to amend git commit message in post-receive hook,"<p>I need to modify commit messages in post-receive hook (add bug tracking id). Is there a graceful way to do it or do I have to script ""git rebase -i"" stuff?</p>
",4,1894256,0,0
32775296,4054332,9/25/2015 5:17,1,284,<git><deployment><githooks><git-post-receive><post-update>,Git hook post-update writing but not updating work tree,"<p>I'm trying to make git auto deploy to different directories depending on a branch that was pushed.
I have a remote bare repository, local repository and two directories where I whant the data to be deployed and updated with each push from local to remote repository.
I've added post-update hook:</p>

<pre><code>#!/bin/sh


echo $1
echo ""*UPDATE*""


case "" $1 "" in
*'refs/heads/develop'*)
        GIT_WORK_TREE=/home/git/public_html/example_deploy_dev git checkout develop webroot
        echo
        echo ""Dev was pulled""
        echo
        ;;
esac

case "" $1 "" in
*'refs/heads/master'*)
        GIT_WORK_TREE=/home/git/public_html/example_deploy git checkout master webroot
        echo
        echo ""Master was pulled""
        echo
        ;;
esac
</code></pre>

<p>It deploys just fine on first file creation, but doesn't update it when it's changed in directories which shold be deployed. Where do I miss smth?
Thanks!</p>
",0,4054332,0,0
50493615,9587154,5/23/2018 16:49,1,1645,<git><shell><githooks><yarnpkg>,Git Pre-push hooks not aborting push in case of more than one checks,"<p>in git hooks -
I wanted to check for jshint errors and yarn integrity check before pushing, so I added below in pre-push.
so it's something like this - </p>

<pre><code>    # Pre-push hooks
    # Lint stuff before committing
    grunt jshint eslint tslint
    # Verifies that versions and hashed value of the package contents 
      in the project’s package.json matches that of yarn’s lock file.
    yarn check --integrity
</code></pre>

<ul>
<li>Here if jshint gives error but if yarn integrity check passes, still
it allows push. It will abort iff yarn fails.</li>
<li>If I reverse the order then if yarn check fails and if jshint passed, 
then also it pushes. It will abort iff jshint fails.</li>
</ul>

<p>So it fails push only if the last check fails while in other cases it states the error but still pushes it</p>
",1,9587154,0,0
16248688,410102,4/27/2013 5:27,5,1766,<github><githooks><github-api>,github api does not return my post-receive web hook,"<p>I have manually added a web hook to my repository, but when I query the repository using the API I get</p>

<pre><code>{
  ""message"": ""Not Found""
}
</code></pre>

<p>what is wrong?</p>

<p>the url: <a href=""https://api.github.com/repos/akonsu/kamyanov-art.com/hooks/"" rel=""noreferrer"">https://api.github.com/repos/akonsu/kamyanov-art.com/hooks/</a></p>
",0,410102,0,0
16248741,410102,4/27/2013 5:36,5,442,<github><githooks><github-api>,Can I set a hook using API on public repo owned by someone else?,"<p>Is it possible to register an event hook on a public repository not owned by me using the github API? In other words, is there a way to listen to repo updates without asking the owner to add a hook linking to my app?</p>
",0,410102,,
16272849,3625,4/29/2013 6:56,12,1224,<git><githooks>,Use Git's commit message cleanup mode from commit-msg hook,"<p><a href=""http://git-scm.com/docs/git-commit""><code>git help commit</code></a> says the following:</p>

<pre><code>--cleanup=&lt;mode&gt;
   This option determines how the supplied commit message should be
   cleaned up before committing. The &lt;mode&gt; can be strip, whitespace,
   verbatim, or default.

   strip
       Strip leading and trailing empty lines, trailing whitespace,
       and #commentary and collapse consecutive empty lines.

   whitespace
       Same as strip except #commentary is not removed.

   verbatim
       Do not change the message at all.

   default
       Same as strip if the message is to be edited. Otherwise
       whitespace.
</code></pre>

<p>I'd like to determine which cleanup mode is going to be applied from the commit-msg <a href=""http://git-scm.com/docs/githooks"">hook</a> (correctly using the <code>commit.cleanup</code> <a href=""http://git-scm.com/docs/git-config"">config value</a> when necessary). <a href=""https://github.com/mkantor/hooks/blob/master/commit-msg"">I run some validations on my commit messages</a> and I want to make sure I'm seeing exactly what Git is planning on using.</p>

<p>Alternatively, I'll accept a way to grab the commit message text post-cleanup (maybe I can trick Git into cleaning it up for me?). This would be great for my use case, since then I wouldn't have to worry about re-implementing any cleanup modes.</p>
",0,3625,0,0
50505459,3610740,5/24/2018 9:15,19,18968,<git><githooks>,How to setup server side pre-receive hook?,"<p>I am new to git hooks and server side git functionality. I worked on client side git to commit and push my code and we do git merge using <strong>Application Lifecycle management(ALM) tools</strong>.
I am trying to write git hooks to do some testing on new/modified files in the repository. I am able to write and test client side hooks like <strong><code>pre-commit</code></strong></p>
<p>Now, I need to add some server side git hook to verify files before merging to master because there is a change to skip client side verification using <strong><code>-no-verify</code></strong> option. When I go through some git hook tutorials, <strong><code>pre-push</code></strong> hook is the server side hook. I tried to create pre-push hook and it is working on client side. Now, How can make it as a server side hook and force to verify files when user try to push changes even with <strong><code>--no-verify</code></strong> option(should not be controled on client).</p>
<p><strong>My big question is how server hook is triggered when we do <code>git push</code> from local branch/repo.</strong></p>
<p><strong>Creation of hook:</strong></p>
<p>Created a hook called pre-commit and placed it under some folder <strong><code>git_hooks/pre-push</code></strong> and also in <strong><code>.git/hooks/pre-push</code></strong>. Now, created a symbolic link for my pre-push script. So, whenever I do <strong><code>git push</code></strong> it will trigger .git/hooks/pre-push which is a symbolic link for my script <strong><code>git_hooks/pre-push</code></strong></p>
<p><strong>EDIT:</strong></p>
<p>I thought <code>pre-push</code> and <code>pre-receive</code> hooks are same as both are triggered on <code>git push</code> command but <code>pre-push</code> is working only client side, <code>pre-recieve</code> is working on server side.
I  created <code>pre-receive</code> hook and pushed it to master branch. Now, when I do <code>git push</code> getting this  <strong>error: cannot spawn hooks/pre-receive: No such file or directory</strong>.</p>
<p>I am trying this on both <strong>Windows</strong> and <strong>Linux</strong> platforms. On Windows I am getting this error, On Linux it is not even getting triggered. I placed <code>pre-receive</code> hook on master branch on both the platforms.</p>
",2,3610740,0,0
32871655,1143837,9/30/2015 16:52,4,162,<git><git-merge><githooks>,Git hooks to fire when using merge with --no-ff,"<p>Assume I have two branches:</p>

<ol>
<li>feature</li>
<li>master</li>
</ol>

<p>If I merge feature into master and force a commit merge with <code>--no-ff</code> like so:</p>

<p><code>git merge feature --no-ff</code></p>

<p>Will any of the client side commit hooks (e.g. commit-msg, pre-commit) be fired? I would assume so since with <code>--no-ff</code>, we are introducing a commit. </p>

<p>Yet they don't seem to fire for me. What gives? Can someone point me to some documentation?</p>
",1,1143837,0,0
68847831,3221094,8/19/2021 12:23,0,2103,<git><package.json><githooks><husky><lint-staged>,husky pre-commit hook for 'test' does not finish,"<p>Hi i installed <code>husky</code> &amp; <code>lint-stage</code> so as to have pre-commit hooks for <code>lint</code> &amp; <code>tests</code>, for the staged files.</p>
<p>The pre-commit hook works, when i go to <code>git commit -m 'something'</code>, and the commands are triggered.</p>
<p><strong>What i have so far in terms of files is:</strong></p>
<hr />
<p><code>.husky/pre-commit</code>:</p>
<pre><code>#!/bin/sh
. &quot;$(dirname &quot;$0&quot;)/_/husky.sh&quot;

npx lint-staged
</code></pre>
<p><code>.package.json</code>:</p>
<pre><code> &quot;lint-staged&quot;: {
   &quot;*.{ts,tsx}&quot;: &quot;eslint --cache --fix&quot;,
   &quot;*&quot;: &quot;react-scripts test --env=jest-environment-jsdom-fourteen&quot;
  } 
</code></pre>
<p>When i <code>git commit ..</code>, (2 files, 1 *.test.ts * and 1 *.ts), it starts the <code>linter</code> &amp; the <code>test</code>, but the test never finishes unless i break it(ctrl+c).</p>
<ul>
<li>*<em>the <em>.test.ts file, it has an error in it.</em></em></li>
</ul>
<p><a href=""https://i.stack.imgur.com/rYqfe.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/rYqfe.png"" alt=""enter image description here"" /></a></p>
<p>Only when i break it, i get the errors on the screen:</p>
<p><a href=""https://i.stack.imgur.com/8ocIK.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8ocIK.png"" alt=""enter image description here"" /></a></p>
<p>Also what i notice is that the <code>lint-staged:</code> object, it is changed into package.json, when i <code>git commit..</code> :</p>
<p><strong>Initially i have it like so:</strong></p>
<pre><code> &quot;lint-staged&quot;: {
    &quot;*.{ts,tsx}&quot;: &quot;eslint --cache --fix&quot;,
    &quot;*.test.{ts, tsx}&quot;: &quot;react-scripts test --env=jest-environment-jsdom-fourteen&quot;
 }
</code></pre>
<p><strong>And it turns to this:</strong></p>
<pre><code> &quot;lint-staged&quot;: {
   &quot;*.{ts,tsx}&quot;: &quot;eslint --cache --fix&quot;,
   &quot;*&quot;: &quot;react-scripts test --env=jest-environment-jsdom-fourteen&quot;
 }
</code></pre>
<p>Any help on the configuration that i miss is welcome please.</p>
",0,3221094,0,0
32872785,1106626,9/30/2015 17:59,3,75,<git><githooks>,Git: how to merge a commit into a branch via an update githook,"<p>I'm working on a rather interesting project, attempting to do the following:</p>
<blockquote>
<p>Whenever a developer pushes a commit to a remote branch, execute a githook that will lookup its associated QA branch via an issue tracking system, then merge that commit into the QA branch.</p>
<p>It's important that the commit to the remote branch (mirroring the developer's local branch) be rejected if there are any conflicts on the QA branch.</p>
</blockquote>
<p>The problem I'm running into is that git-merge (and pull, checkout, etc.) must be run in a work tree, which causes the githook to fail.</p>
<p>Is there a (relatively) simple way to merge one branch (or commit) into another via an <code>update</code> githook?  My reasoning being that the remote, while not being a working tree, obviously has all of the data it needs to do this, just not the command (as far as I've been able to find).</p>
<p>If there isn't a straightforward command, my next thought is to create a temporary clone of the remote in which I can perform the merge operation:</p>
<pre><code>(psuedocode)
mkdir $GIT_DIR/tempRepo
cd $GIT_DIR/tempRepo
git clone -b $QA_BRANCH --local $PARENT_DIR $CURRENT_DIR
git merge $WHATEVER
#cleanup
</code></pre>
<p>If any part of this fails, I reject the <code>update</code> (hopefully with some useful info to the developer so he/she can fix it).  I've played with this solution a bit and while it appears to work fine via my script, it fails when running on a real remote (I don't know why yet, but while typing this, this answer popped up that may help - <a href=""https://stackoverflow.com/questions/4043609/getting-fatal-not-a-git-repository-when-using-post-update-hook-to-execut"">getting &quot;fatal: not a git repository: &#39;.&#39;&quot; when using post-update hook to execute &#39;git pull&#39; on another repo</a>)</p>
<p>I'd love any insight from the git gurus around here, I'm still fairly new to the plumbing that underpins this whole system, so if I'm on the right (or wrong) track, or if there are some magical commands or gotchas I should know about, I'd appreciate it.</p>
<p>Thanks in advance!</p>
",0,1106626,0,0
32914471,2882626,10/2/2015 19:28,3,311,<git><bash><commit><githooks>,Is it possible to save a git commit message to a file in a pre-commit hook?,"<p>I am looking for a way to create a log of commit messages with timestamps for each of my commit messages as a way to keep track of what I've done for the week? Does anyone have an example of this?</p>
",1,2882626,,
68859202,217169,8/20/2021 8:30,0,374,<bash><git><docker-compose><githooks>,git-hook hangs when launching docker compose,"<p>I made this post-merge git hook for my Laravel app: it basically checks the changed files ad executes matching commands (run migrations, compile assets and so on)</p>
<pre><code>#!/bin/bash
set -ex
CHANGED_FILES=&quot;$(git diff-tree -r --name-only --no-commit-id ORIG_HEAD HEAD)&quot;

changed() {
    echo &quot;$CHANGED_FILES&quot; | grep -q &quot;$1&quot;
}


if [[ &quot;$USER&quot; == &quot;root&quot; || &quot;$USER&quot; == &quot;ec2-user&quot; ]]; then
    sudo chown -R www-data: htdocs
fi

if changed composer.lock; then
    docker-compose run --rm worker bash -c &quot;composer install&quot;
fi

if changed &quot;migrations\|seeders&quot;; then
    docker-compose run --rm worker php artisan migrate --force --seed
fi

if changed .blade.php$; then
    docker-compose run --rm worker php artisan view:clear
fi

if changed .php$; then
    docker-compose run --rm worker bash -c &quot;php artisan cache:clear &amp;&amp; php artisan route:clear&quot;
fi

if changed &quot;yarn.lock$\|.js$\|.scss$&quot;; then
    docker-compose run --rm node bash -c &quot;yarn &amp;&amp; yarn prod&quot;
fi

if changed httpd.conf; then
    docker-compose up -d --force-recreate apache
fi

docker-compose restart worker

exit 0
</code></pre>
<p>if i launch the hook by hand <code>./.git-hook/post-merge</code> (it's in a non-conventional folder so the hook itself it's committed) it works
but when it's executed by git it always hangs after creating the container.
this only happens on AMI linux it works fine on my mac</p>
<p>output looks like this</p>
<pre><code>$ git pull
remote: Enumerating objects: 21, done.
remote: Counting objects: 100% (21/21), done.
remote: Compressing objects: 100% (12/12), done.
remote: Total 13 (delta 8), reused 0 (delta 0), pack-reused 0
Decompressione degli oggetti in corso: 100% (13/13), 1.44 KiB | 490.00 KiB/s, fatto.
Da bitbucket.org:[my-private-repo]
   ec60a04..def0d31  master     -&gt; origin/master
Aggiornamento di ec60a04..def0d31
Fast-forward
 .git-hooks/post-merge                         |  2 +-
 htdocs/app/Http/Controllers/ApiController.php | 25 ++++++++++++++++++++++---
 2 files changed, 23 insertions(+), 4 deletions(-)
++ git diff-tree -r --name-only --no-commit-id ORIG_HEAD HEAD
+ CHANGED_FILES='.git-hooks/post-merge
htdocs/app/Http/Controllers/ApiController.php'
+ [[ ec2-user == \r\o\o\t ]]
+ [[ ec2-user == \e\c\2\-\u\s\e\r ]]
+ sudo chown -R www-data: htdocs
+ changed composer.lock
+ echo '.git-hooks/post-merge
htdocs/app/Http/Controllers/ApiController.php'
+ grep -q composer.lock
+ changed 'migrations\|seeders'
+ echo '.git-hooks/post-merge
htdocs/app/Http/Controllers/ApiController.php'
+ grep -q 'migrations\|seeders'
+ changed '.blade.php$'
+ echo '.git-hooks/post-merge
htdocs/app/Http/Controllers/ApiController.php'
+ grep -q '.blade.php$'
+ changed '.php$'
+ echo '.git-hooks/post-merge
htdocs/app/Http/Controllers/ApiController.php'
+ grep -q '.php$'
+ docker-compose run --rm worker bash -c 'php artisan cache:clear &amp;&amp; php artisan route:clear'
Creating www_worker_run ... done
</code></pre>
<p><code>Creating www_worker_run ... done</code> is the last thing i see and then the output stops (I've waited a couple of minutes then given up)</p>
<p>thanks to @fredrik I have more info:
the command that hangs is this <code>docker-compose run --rm worker bash -c 'php artisan cache:clear &amp;&amp; php artisan route:clear'</code>
But i can run it just fine from the shell in 2.5 seconds</p>
<pre><code>$ docker-compose run --rm worker bash -c 'php artisan cache:clear &amp;&amp; php artisan route:clear'
Creating www_worker_run ... done
Application cache cleared!
Route cache cleared!
</code></pre>
",9,217169,,
33544733,455578,11/5/2015 12:36,0,331,<git><datetime><githooks>,How do I prevent future commit date/time in git (server-/origin-side),"<p>If one of the involved developers has a <strong>wrong systemclock, his commits may have the wrong time and date within them</strong>. How can I prevent those commits to be accepted (<strong>pre receive hook?</strong>) in the ""origin""-repo?</p>

<p>This might not be a problem for the integrity because future commits reference those commits and they might have the correct time. So one can say the commits must have been made before that time. But if I don't want <em>incorrect</em> commits in general?</p>

<p>It should be very easy but I could not find any resource where this was discussed. It should be similar to checking the author corresponds to the account that is allowed to push to that origin/server/-repo.</p>
",3,455578,0,0
50641180,4758038,6/1/2018 10:14,0,932,<git><composer-php><githooks>,git commit showing coding standard is not installed git commit,"<p>Currently i am having PSR2 installed which gets invoked while git commit and show the lines which are in not in PSR2 coding standards.</p>

<p>But i want to install PSR12 coding standard, for which i just tried by changing the PSR2 to PSR12 in my pre-commit git hook (./vendor/bin/phpcs --standard=<strong>PSR12</strong> --encoding=utf-8 -n -p $TMP_DIR) but it is showing me following message </p>

<p><strong>ERROR: the ""PSR12"" coding standard is not installed. The installed coding standards are PEAR, Squiz, PSR1, PHPCS, PSR2, Zend and MySource</strong></p>

<p>Anyone having any idea how to install the same for php using composer or any other method for git commit</p>
",0,4758038,,
33563555,1249683,11/6/2015 9:33,2,181,<git><githooks><git-config><git-filter>,How do I make git insert version information into a file?,"<p>In my git repository, I would like to insert the “current version” into a file automatically.  To this end, I made a filter</p>

<pre><code>[filter ""version""]
    clean = perl -pe 's[\\$version:.*\\$][\\$version:\\$]'
    smudge = ""perl -pe 'chomp($v=qx(git describe)); s[\\$version:.*\\$][\\$version:$v\\$]'""
</code></pre>

<p>This works like a charm for me, but how do I propagate this to other people who might clone my repository?</p>

<p>According to this question (<a href=""https://stackoverflow.com/questions/2246465/how-share-a-config-file-in-git"">How share a config file in git?</a>), it is not possible to do this by sharing the filter (which is part of the config file) directly.  <em>What would be the most robust way to insert a version number using git?</em></p>

<p>Obviously, I could have <code>make</code> do the job, but what if you don't call <code>make</code>?  (In my case, <code>make</code> is called, but the file in question is a script which would otherwise not be touched by <code>make</code>.)</p>

<p>Side questions:</p>

<ul>
<li>I put “current version” in quotes above because that term is not so easy to define in this context; <code>git describe</code> works for me so far, but I am open for suggestions.</li>
<li>The project is hosted on GitHub.  If a user downloads the code through a release, it would be nice to insert the version automatically there, as well.  I guess this does not work with my current approach.</li>
</ul>
",1,1249683,0,0
33563666,2660176,11/6/2015 9:38,3,3145,<git><pytest><githooks><git-bash><pylint>,Configure git pre-commit hook with pylint and pytest,"<p>I want to add a pre-commit hook in <a href=""https://git-scm.com/download/win"" rel=""nofollow"">git for windows</a> such commit just succeed if all test pass and pylint does not return any warning. I execute those in the command line this way:</p>

<pre><code>py.test
pylint mypackage
</code></pre>

<p>After some research I have come up with the following pre-commit bash file (only for the py.test part):</p>

<pre><code>#!/bin/sh
py.test
RESULT=$?
git stash pop -q
[ $? -ne 0 ] &amp;&amp; exit 1
[ $RESULT -ne 0 ] &amp;&amp; exit 1
exit 0
</code></pre>

<p>It effectively aborts the commit and prints a <code>No stash found</code> message at the end. The problem is that when I solve the failing test, the commit does not succeed and it still prints <code>No stash found</code>.</p>

<p>How could I solve this, including also pylint checks?</p>
",4,2660176,0,0
17028265,1493220,6/10/2013 16:09,1,177,<git><git-branch><branching-and-merging><githooks><github-pages>,How to remove a branch but keep the orphaned with the same name?,"<p>I have a Python project where the documentation is in an orphaned <code>gh-pages</code> branch which I created by following <a href=""https://gist.github.com/brantfaircloth/791759"" rel=""nofollow"">this tutorial</a>. There is a <code>doc/build/html</code> folder in the project where the docs get compiled and where the <code>gh-pages</code> branch is checked out.</p>

<p>Now, I accidentally executed the <code>git checkout gh-pages</code> command in the project root, which created a new <code>gh-pages</code> branch and now it seems that I have two of them. One orphaned and one normal. Is it so?</p>

<p>How do I remove the normal <code>gh-pages</code> branch but keep the orphaned one?</p>
",7,1493220,,
33643299,793428,11/11/2015 2:29,0,2699,<git><githooks>,"Triggering post-checkout hook after ""git checkout -b"" command","<p>Same question was asked <a href=""https://stackoverflow.com/questions/1011557/is-there-a-way-to-trigger-a-hook-after-a-new-branch-has-been-checked-out-in-git"">here</a> before however both answers didn't help me much.</p>

<p>I couldn't get my <code>post-checkout</code> hook to differ <code>git checkout</code> from <code>git checkout -b</code> command as <code>$1</code> (sha1 of previous HEAD) and <code>$2</code> (sha1 of new HEAD) are same for both calls.</p>

<p>Here is my post-checkout script:</p>

<pre><code>#!/bin/bash

echo ""old HEAD: $1""
echo ""new HEAD: $2""
echo ""checkout type: $3""
</code></pre>

<p>I executed following commands:</p>

<pre><code>&gt; ozgur@ozgurv:~/project (master)$ git checkout -b new_branch
old HEAD: e86423aa9f45053cb45b8ec15d463bb9684526a2
new HEAD: e86423aa9f45053cb45b8ec15d463bb9684526a2
checkout type: 1

&gt; ozgur@ozgurv:~/project (new_branch)$ git checkout my_branch
old HEAD: e86423aa9f45053cb45b8ec15d463bb9684526a2
new HEAD: e86423aa9f45053cb45b8ec15d463bb9684526a2
checkout type: 1
</code></pre>

<p>What I am trying to achieve is to execute the logic in <code>post-checkout</code> hook only when a new local branch is created, not when it is checked out.</p>
",0,793428,0,0
17083647,2481449,6/13/2013 9:29,2,932,<git><githooks><git-pull><git-post-receive><gitattributes>,Git server hook to silently ignore changes to specific files,"<p>On a central git repo, I need to ignore changes to specific files when they are pushed to the repo. I don't want to reject (fail) the entire push, but simply ignore those changes. Is there a git hook I can use that will simply filter out some changes?</p>

<p>I thought about using <a href=""https://stackoverflow.com/questions/2316677/can-git-automatically-switch-between-spaces-and-tabs"">filters</a>, but I'm not sure they will get used on the central repo as it is ""bare"", eg., does not have a working copy.</p>

<p>Details: In a scenario similar to <a href=""https://stackoverflow.com/questions/2173726/prevent-local-changes-getting-pushed-in-git"">this</a>, dozens of devs are pushing changes to those files. 
I tried using <a href=""http://gitready.com/intermediate/2009/02/18/temporarily-ignoring-files.html"" rel=""nofollow noreferrer"">git update-index --assume-unchanged</a> on the central repo, but it gets reset by every push done by a ""stray"" dev, which is then propagated to the rest of the devs when they pull. I can't change all the devs' repos at once. I want to make the change once on the central repo, then ignore changes to those files.</p>
",0,2481449,,
33680880,1810429,11/12/2015 20:38,11,8390,<git><githooks><atlassian-sourcetree>,Why is .git/hooks sometimes missing in cloned repos?,"<p>I have several (Git for Windows 2.6.2 64-bit) repos that I created and started using <em>the same way</em>:</p>

<ol>
<li>Run <code>git init --bare &lt;repoName&gt;.git</code> in Git Bash.</li>
<li>Clone the new repo using SourceTree.</li>
<li>Add and commit initial files (through SourceTree or EGit).</li>
<li>Blah, blah, blah....</li>
</ol>

<p>In trying to add a common <code>post-commit</code> hook to these cloned repos, I noticed that <em>only some of them had a <code>.git/hooks</code> directory</em>.  Why?</p>

<p>I dug for questions/answers regarding missing <code>.git/hook</code> directories and did not find anything on SO or more broadly.  Git documentation <a href=""http://git-scm.com/docs/githooks"" rel=""noreferrer"">mentions</a> that repo initialization ensures the (<code>.git/hooks/</code>) <code>.sample</code> files are executable by default; but I really could not find anything that seemed to explain why my cloned repos sometimes contain <code>.git/hooks</code> and sometimes do not.</p>

<p>Can anyone shed some light on the cause and effect at play here?  Thanks.</p>
",1,1810429,0,0
33683497,1668293,11/12/2015 23:41,4,2589,<bash><cron><bitbucket><githooks>,How to get push notifications from a remote git repository in real time?,"<p>I have a remote repository (bitbucket), a server repository (linux) and many local repositories (developers).</p>

<p>I want the server to be notified if some developer changes a branch in the remote.</p>

<p>Until now i tried using a bash script declared in cron in the server but the minimal resolution is 1 minute, so to adapt it for real-time seems to be very tricky. However, my approach is this:</p>

<pre><code>path=/some/dir/

# something new in remote
if git fetch origin &amp;&amp; [ `git rev-list HEAD...origin/master --count` != 0 ]
then
    echo 'Remote repository has changed. Pull needed' &amp;&gt;&gt;$path/git-backup.log
    echo $d &gt;&gt; $path/git-backup.log
    git merge origin/master &amp;&gt;&gt;$path/git-backup.log
fi
</code></pre>
",3,1668293,0,0
69009238,11368485,9/1/2021 7:11,3,1696,<git><azure-devops><githooks>,How to pass git hook script to remote repository and to my team mates,"<p>I am team of 4 members, we have have git repo in azure devOps, I am given task to add git  hook(scan code for indentation, unwanted spaces etc). I know git hook must be added to ./.git/hooks, I have scripts ready. But how do I ensure my other teammates receive my script in their local repo, so code check is done before they  commit new files.</p>
<p>FYI, any changes made .git will remain only to local repo, but what is the easiest way that my git hook is passed onto all my team members?</p>
",1,11368485,0,0
17172037,1765519,6/18/2013 14:50,5,2420,<git><maven><githooks>,How to make sure that everyone who commits a new branch has the changes reflected in the pom.xml?,"<p>Is there a way I can automatically update a pom.xml file on a git commit using a git commit hook?</p>

<p>What I want to do, is I want to replace all instances of the old version, with the new version based on the branch name.</p>

<p>For example.</p>

<p>If I check out from master I might find in my pom.xml</p>

<pre><code>&lt;dependancy&gt;
  &lt;groupId&gt;com.mycompany&lt;/groupId&gt;
  &lt;artifactId&gt;my_component&lt;/artifactId&gt;
  &lt;version&gt;master-SNAPSHOT&lt;/version&gt;
&lt;/dependancy&gt;
</code></pre>

<p>or </p>

<pre><code>&lt;groupId&gt;com.mycompany.project&lt;/groupId&gt;

    &lt;artifactId&gt;mainProject&lt;/artifactId&gt;
    &lt;version&gt;master-SNAPSHOT&lt;/version&gt;
    &lt;name&gt;mainProject&lt;/name&gt;
</code></pre>

<p>What I would like to do, is to make sure that everyone who commits a new branch, has that new branch reflected in the pom.xml.   So if I create a new branch based on master named ""myNewBranch"", I would like the pom.xml to be automatically updated to the following:</p>

<pre><code>&lt;dependancy&gt;
  &lt;groupId&gt;com.mycompany&lt;/groupId&gt;
  &lt;artifactId&gt;my_component&lt;/artifactId&gt;
  &lt;version&gt;myNewBranch-SNAPSHOT&lt;/version&gt;
&lt;/dependancy&gt;
</code></pre>

<p>or </p>

<pre><code>&lt;groupId&gt;com.mycompany.project&lt;/groupId&gt;

    &lt;artifactId&gt;mainProject&lt;/artifactId&gt;
    &lt;version&gt;myNewBranch-SNAPSHOT&lt;/version&gt;
    &lt;name&gt;mainProject&lt;/name&gt;
</code></pre>
",4,1765519,0,0
69025241,15693344,9/2/2021 6:36,2,340,<git><shell><hook><githooks>,Git hook to reject commits where filename is longer than specified limit,"<p>I'm looking to create a client-side pre-commit git hook that will prevent a commit if any of the files added to the commit have a file name longer than a specified limit (say 256).</p>
",5,15693344,0,0
33742805,3483685,11/16/2015 19:12,0,69,<git><shell><githooks>,"Git post hooks with jailshell, possible?","<p>My hosting just switched from <code>bash</code> to <code>jailshell</code> and suddenly my git hooks stopped working. Now I am wondering is it possible to achieve that with cpanel's <code>jailshell</code> ? </p>

<p>If not, I was automating my repo deployment to server with git hooks, is there some other way to achieve that?</p>

<p><strong>Edit:</strong> error that I am getting is <code>error: cannot run hooks/post-update: No such file or directory</code>. </p>

<p>My <code>post-update</code> content:</p>

<pre><code>#!/bin/bash
GIT_WORK_TREE=../../public_html/test git checkout -f
echo 'Uploading done!'
</code></pre>

<p>The directory mentioned in work work tree exists.</p>
",3,3483685,,
69030354,12316619,9/2/2021 12:31,1,25,<git><githooks>,"Post-receive githook does not trigger, despite having execution permissions?","<p>I've seen a lot of other questions here like this one, but the vast majority of them are related to permissions. So to clarify:</p>
<ul>
<li>My file is called exactly &quot;post-receive&quot;</li>
<li>It has no extension</li>
<li>It is located in .git/hooks</li>
<li>It starts with &quot;#!/bin/bash&quot;</li>
<li>It has execution permissions</li>
</ul>
<p>Running &quot;ls -l post-receive&quot; returns:</p>
<blockquote>
<p>-rwxr-xr-x</p>
</blockquote>
<p>If I run the file manually, through git bash, it works perfectly. But no matter what I push, it never triggers automatically. What's going on here?</p>
",4,12316619,,
50686657,504514,6/4/2018 18:26,0,306,<bitbucket><githooks><git-flow><bitbucket-server><bitbucket-pipelines>,Bitbucket - How to enforce that merges are done first to Develop branch and then to Master branch?,"<p>Gitflow workflow states that Hotfix branches will be merged to both Develop and Master branches.
Since engineers forgot more than once to merge their hotfix to Develop, I want to mandate that the merge to develop is done first.
How can I configure Bitbucket to block merges of commits, that do not already exist in Develop, to master?</p>
",3,504514,0,0
33758602,5151468,11/17/2015 13:49,1,149,<git><gitlab><githooks>,Limit git hook to a single repository,"<p>I use gitlab to manage a few repositories on a local dev server and have implemented hooks to automatically deploy projects when a commit is successful. This works fine but unfortunately my post-receive hook runs when I commit to any repository, not just the repository that the hook is for.</p>

<p><strong>How can I limit my hook so that it only runs when a push is made to a specific repository?</strong></p>
",4,5151468,,
50701100,3802177,6/5/2018 13:17,2,70,<php><git><bitbucket><githooks>,Automatically `pull` when there is what to pull to my repo: `post-merge` git server hook using PHP,"<p><strong>What I want to accomplish:</strong></p>

<p>I have juts installed git on my development server. 
I create a branch out of my 'develop' branch, work on my new feature branch, commit, and when I'm done - I merge the new feature branch with the 'develop' branch. </p>

<p>To apply the changes for the 'develop' branch on my development server I have to log in to my server and use <code>git pull</code> - which I'm trying to prevent and happen automatically - when there is something to pull from my development server - it will be done automatically. </p>

<p>I hope I'm clear about that I'm trying to accomplish ;)  </p>

<p><strong>What I have done up till now is:</strong> </p>

<ol>
<li><p>Created a folder inside my project <code>/www/hooks/</code> and added a file called <code>post-merge</code>: Following <a href=""https://git-scm.com/docs/githooks#_post_merge"" rel=""nofollow noreferrer"">git documentation</a> - this should get triggered whenever I merge a branch. </p></li>
<li><p>Inside this folder I added the text: </p>

<p><a href=""https://i.stack.imgur.com/RiMnI.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/RiMnI.png"" alt=""enter image description here""></a> </p></li>
</ol>

<p>which should execute whatever is in between the backticks symbol ( ` ) as a shell command <a href=""http://php.net/manual/en/language.operators.execution.php"" rel=""nofollow noreferrer"">(following this PHP documentation)</a></p>

<ol start=""3"">
<li>Inside the folder <code>/www/.git/hooks/</code> I added a symbolic-link to the file I previously mentioned with the same exact name: <code>/www/hooks/post-merge</code> :</li>
</ol>

<blockquote>
<pre><code>sudo ln -s -f /www/hooks/post-merge /www/.git/hooks/post-merge
</code></pre>
</blockquote>

<ol start=""4"">
<li>I gave the linked file under <code>/www/.git/hooks/post-merge</code> 775 file permission as the other files.</li>
</ol>

<p><strong>Some notes:</strong> </p>

<ul>
<li><p>My repo is on Bitbucket</p></li>
<li><p>My directory <code>/www/homepage/</code> is the one with the index file, so nothing can run outside of it on a browser (apache2 points to it..) - (but i guess there shouldn't be a problem since it's self executed via <code>/.git/hooks</code> ?) </p></li>
<li><p>I tried renaming both my files (the one under <code>/www/.git/hooks/</code> &amp; <code>/www/hooks/</code>) to <code>post-merge.php</code> and this didn't work. </p></li>
</ul>
",15,3802177,,
17243795,1721238,6/21/2013 20:27,4,5390,<git><githooks><git-post-receive>,GIT post-receive hook doesn't run,"<p>This has been asked a lot of times and I went through countless threads and Google pages, but none seem to be able to fix my issue. Perhaps I am not doing it the standard way, but it should still work.</p>

<p>I have a remote server that has a git repo</p>

<p>I push to it from local via ssh:</p>

<pre><code>git add Y:\NetBeansProjects\pics\pics-client-branding\src\main\java\com\waudware\pics\viewer\TypeTopComponent.java
git commit -m Testing GIT Friday 8 Y:\NetBeansProjects\pics\pics-client-branding\src\main\java\com\waudware\pics\viewer\TypeTopComponent.java
Commit Log
revision   : b2d7fd5cbafbfddfccf8d3c8ac75614c4b357887
author     : Denis &lt;Denis@WWOscar.Waudware.local&gt;
date       : Jun 21, 2013 3:21:47 PM
summary    : Testing GIT Friday 8

INFO: End of Commit

==[IDE]== Jun 21, 2013 3:21:48 PM Committing... finished.
==[IDE]== Jun 21, 2013 3:21:52 PM Pushing
git push ssh://wwbert/cygdrive/d/Shared_Data/Development/dev_NetBeans/Projects/PICS.git +refs/heads/master:refs/heads/master
Remote Repository Updates
Branch : master
Old Id : e51af3dbc01ee2372f9c92bb8070cb1100bef220
New Id : b2d7fd5cbafbfddfccf8d3c8ac75614c4b357887
Result : OK

Local Repository Updates
Branch : origin/master
Old Id : e51af3dbc01ee2372f9c92bb8070cb1100bef220
New Id : b2d7fd5cbafbfddfccf8d3c8ac75614c4b357887
Result : FAST_FORWARD

==[IDE]== Jun 21, 2013 3:21:56 PM Pushing finished.
</code></pre>

<p>Pushing works fine and the remote repository gets updated. I can easily check that using putty and running <code>git show</code>. However, the post-receive hook that I wrote - doesn't run. The remote git project folder is: wwbert/cygdrive/d/Shared_Data/Development/dev_NetBeans/Projects/PICS.git and the hook is in wwbert/cygdrive/d/Shared_Data/Development/dev_NetBeans/Projects/PICS.git/hooks/post-receive</p>

<p>The contents of post-receive are:</p>

<pre><code>#!bin/sh
touch worked.txt
SMTPSERVER=10.0.0.2
FROM=git-push-alert@waudware.com
TO=denis@waudware.com
SUBJECT=""Subject: GIT [commit] $(date +""%m-%d-%Y"")""
LOGFILE=""commit-$(date +""%m-%d-%Y"").log""
DIFF=1
SHORTLOG=1
echo ""$SUBJECT"" &gt; ../logs/""$LOGFILE""
echo &gt;&gt; ../logs/""$LOGFILE""
git log --since=yesterday &gt;&gt; ../logs/""$LOGFILE""
if [ ""$DIFF"" == ""1"" ]; then
        git show --pretty &gt;&gt; ../logs/""$LOGFILE""
fi

git send-email --smtp-server ""$SMTPSERVER"" --to ""$TO""  --from ""$FROM"" ../logs/""$LOGFILE""
</code></pre>

<p>I must note that executing that file manually sends the email as expected. But never triggers as a hook. Not even the <code>touch</code>. Any hints on what you think the cause of this may be is apprecaited!</p>

<p>P.S. <code>ls -la</code> on the hooks folder:</p>

<pre><code>WAUDWARE\denis@WWBert /cygdrive/d/Shared_Data/Development/dev_NetBeans/Projects/pics.git/hooks
$ ls -la
total 38
drwxr-x--- 1 WAUDWARE\denis WAUDWARE\12513 4096 2013-06-21 15:20 .
drwxr-x--- 1 WAUDWARE\denis WAUDWARE\12513 4096 2013-06-21 14:48 ..
-rwxr-x--- 1 WAUDWARE\denis WAUDWARE\12513  452 2013-04-23 10:02 applypatch-msg.sample
-rwxr-x--- 1 WAUDWARE\denis WAUDWARE\12513  896 2013-04-23 10:02 commit-msg.sample
-rwxr-x--- 1 WAUDWARE\denis WAUDWARE\12513  160 2013-04-23 10:02 post-commit.sample
-rwxr-x--- 1 WAUDWARE\denis WAUDWARE\12513  514 2013-06-21 16:08 post-receive
-rwxr-x--- 1 WAUDWARE\denis WAUDWARE\12513  552 2013-04-23 10:02 post-receive.sample
-rwxr-x--- 1 WAUDWARE\denis WAUDWARE\12513  189 2013-04-23 10:02 post-update.sample
-rwxr-x--- 1 WAUDWARE\denis WAUDWARE\12513  398 2013-04-23 10:02 pre-applypatch.sample
-rwxr-x--- 1 WAUDWARE\denis WAUDWARE\12513 1578 2013-04-23 10:02 pre-commit.sample
-rwxr-x--- 1 WAUDWARE\denis WAUDWARE\12513 4951 2013-04-23 10:02 pre-rebase.sample
-rwxr-x--- 1 WAUDWARE\denis WAUDWARE\12513 1239 2013-04-23 10:02 prepare-commit-msg.sample
-rwxr-x--- 1 WAUDWARE\denis WAUDWARE\12513 3611 2013-04-23 10:02 update.sample
</code></pre>

<p>Edit: I had progress. Instead of pushing from NetBeans IDE, I used Git GUI to see a more detailed output. Here is what happened when I pushed to remote: <code>remote: fatal: cannot exec 'hooks/post-receive': Permission denied[K
To ssh://WAUDWARE\denis@wwbert/cygdrive/d/Shared_Data/Development/dev_NetBeans/Projects/PICS.git
   ab6ddef..a5644e8  master -&gt; master</code>. You can see my permissions in the post. Is there anything wrong with them? Are there some other permissions that can prevent execution of post-receive?</p>
",4,1721238,0,0
69051706,9431766,9/4/2021 0:58,0,31,<git><githooks>,"Can you have git run code after a merge, like you can with composer after dump-autoload?","<p>I am hoping to be able to fetch some code and then merge it with git, and once the git command has merged fire off another command.</p>
<p>In my case I am using PHP and Laravel with the response cache package from spatie.
I am wanting to do the <code>git fetch</code> and then <code>git merge</code>, as I usually do, and then it automatically run the <code>php artisan responsecache:clear</code> command.  I want this as I often forget about it and get really confused when I don't see my changes come in.</p>
<p>Is this possible with git?</p>
",2,9431766,,
33822089,1444115,11/20/2015 8:28,1,412,<git><githooks><autodeploy>,Trigger bash script when creating tag/branch in git,"<p>I want make auto deployment as following:</p>

<ol>
<li>Deploy to QC environment on every code push</li>
<li>Deploy to Production Environment only on creating new tag</li>
</ol>

<p>Can you help on it?</p>
",0,1444115,0,0
50879249,6236430,6/15/2018 16:06,1,246,<git><githooks><git-remote>,update files in folder on a network drive when i do a git push,"<p>I'm hoping someone is able to shed some light on the voodooo that is auto updating files on a network drive.</p>

<p>On my local drive (c:/dev/project) i have a git repo which has a remote on bitbucket, the remote network drive (x:/hdd/project) is a full git clone which also has a remote of origin pointing to bitbucket. It is possible to work on either drive and both sites are available to my browser.</p>

<p>Currently if i do some changes on the local drive (c:) and do a git push the files go into bitbucket then i need to change to the remote drive (x:) and do a git pull.</p>

<p>This is all well and good but if i forget to do this and someone works on the project and forgets to do a git pull before starting then there will be conflict issues.</p>

<p>I've read I can setup a git hook to update on git push from local (c:) but the documentation and examples are not very clear. I've also read I can use a remote in addition to origin but again the documentation is limited and didn't help me understand what i need to do.</p>

<p>So for a remote i looked over <a href=""http://tony.halcyonlane.com/blog/2011/09/22/Using-git-at-work-on-a-Windows-network-drive/"" rel=""nofollow noreferrer"">http://tony.halcyonlane.com/blog/2011/09/22/Using-git-at-work-on-a-Windows-network-drive/</a> this uses origin but obviously i can call it anything (say dev-box). This also says i need to create the clone using --bare which was not done on these dev folders. This is also 7 years old so unlikely to be too relevant.</p>

<p>for git hooks i looked over <a href=""https://www.digitalocean.com/community/tutorials/how-to-use-git-hooks-to-automate-development-and-deployment-tasks"" rel=""nofollow noreferrer"">https://www.digitalocean.com/community/tutorials/how-to-use-git-hooks-to-automate-development-and-deployment-tasks</a></p>

<pre><code>#!/bin/bash
unset GIT_INDEX_FILE
git --work-tree=/var/www/html --git-dir=/home/demo/proj/.git checkout -f
</code></pre>

<p>which is confusing so is --work-tree the local (c:) and -git-dir the remote(x:) and does this need to be on the remote and not the local?</p>

<p>As you can see more questions than answers. I just need a clear explanation or a good example i can follow.</p>

<p>thanks</p>

<p>Craig</p>
",1,6236430,,
50882026,1556108,6/15/2018 20:06,1,27,<git><githooks><git-lfs>,git lfs looses execute flag on hook scripts,"<p>A weird issue where scripts in <code>.git/hooks</code> directory (e.g. <code>post-commit</code>, <code>post-merge</code>, etc) loose their <code>+x</code> flag rendering them useless.</p>

<p>Environment is macOS.  Git version is <code>2.15.1</code>, git lfs version is <code>git-lfs/2.3.4 (GitHub; darwin amd64; go 1.9.1)</code></p>

<p>Troubleshooting the issue I found that even if I manually run <code>chmod a+x .git/hooks/*</code>, verify that <code>x</code> is set on all the files, and then perform <code>git checkout &lt;whatever&gt;</code>, the <code>x</code> is reset and is gone.  It does it no matter if I checkout <code>master</code> or some branch.</p>

<p>Additionally, even running <code>git lfs install</code> doesn't resolve the issue, and after command runs (standard messages written to console), the command doesn't place <code>+x</code> on those files.</p>

<p>What is the way to fix this issue?</p>
",0,1556108,0,0
18111718,720164,8/7/2013 19:05,2,250,<git><shell><heroku><push><githooks>,A way not to wait for Heroku to compile/Git pre-receive hook to finish,"<p>I often push Rails builds to Heroku via Git. For those unfamiliar, code is pushed to Heroku with <code>git push</code>, and a pre-receive hook compiles the whole thing before validating reception.</p>

<p>The thing is, waiting for compilation is always long (typically 2 minutes for me) and adds up when one ends up pushing and re-pushing many small changes. Two minutes can turn into fifteen, while I'm being deprived of my shell.</p>

<p>Is there a way not to have to wait after that compilation/hook to finish to gain back my shell but still get feedback eg. if it fails?</p>

<p>I know about the suspend (<code>^Z</code>) command, but I'm not sure if it would halt the process/prevent feedback.</p>
",2,720164,,
18134090,881224,8/8/2013 19:06,0,1137,<git><bash><githooks><pre-commit>,pre-commit hook doesn't check if saved changes are staged before running,"<p>I followed <a href=""http://codeinthehole.com/writing/tips-for-using-a-git-pre-commit-hook/"" rel=""nofollow"">this guide on creating git pre-commit hooks</a>, and so far I really like the benefit it's given me.</p>

<p>However, I have a problem when I use it:</p>

<ol>
<li>I write some code, perhaps something that doesn't pass a rubocop inspection.</li>
<li>I stage it, then attempt to commit it. The pre-commit hook works as intended.</li>
<li>I go and fix the issues that rubocop reported.</li>
<li>I save the changes, <em>but forget to <code>add</code> it to the index</em>.</li>
</ol>

<p>When I commit, my script just takes the list of files changed that are  in <code>git diff --cached --name-only --diff-filter=AM</code>, runs rubocop on each of them, and quits if there's any issues.</p>

<p>Here's my script:</p>

<pre><code>#!/bin/sh

# Set the ruby environment from local/rvm, depending on your machine.
# http://stackoverflow.com/questions/17515769
if [ -d ""$HOME/.rvm/bin"" ]; then
  PATH=""$HOME/.rvm/bin:$PATH""
  [[ -s ""$HOME/.rvm/scripts/rvm"" ]] &amp;&amp; source ""$HOME/.rvm/scripts/rvm""

  if [ -f "".ruby-version"" ]; then
    rvm use ""$(cat .ruby-version)""
  fi

  if [ -f "".ruby-gemset"" ]; then
    rvm gemset use ""$(cat .ruby-gemset)""
  fi
fi

# http://codeinthehole.com/writing/tips-for-using-a-git-pre-commit-hook/
FILES_PATTERN='\.rb(\..+)?$'
FORBIDDEN='debug'

# Quit if no ruby files are being checked in.
RB_FILES=$(git df --cached --name-only --diff-filter=AM | grep -Ec $FILES_PATTERN)
if [ ""$RB_FILES"" = ""0"" ]; then
    exit 0
fi

git diff --cached --name-only --diff-filter=AM | \
    grep -E $FILES_PATTERN | \
    GREP_COLOR='37;41' xargs grep --color --with-filename -n $FORBIDDEN &amp;&amp; \
    echo 'Please remove debugging statements before commiting.' &amp;&amp; exit 1

# Pull in altered files, check with rubocop.
git diff --cached --name-only --diff-filter=AM | \
    grep -E $FILES_PATTERN | xargs rubocop -f simple | \
    grep 'no offences detected' &amp;&amp; exit 0
# If it didn't exit 0 above, warn of issues, output results.
echo 'Rubocop has detected issues with your commit.' &amp;&amp; \
    git diff --cached --name-only --diff-filter=AM | \
    grep -E $FILES_PATTERN | xargs rubocop -f simple &amp;&amp; exit 1
</code></pre>

<p>I don't want to use <code>sed</code> to parse through the results of <code>git diff</code>. Is there an easier way to ensure that I'm checking the <em>index</em>, opposed to the file as it appears on disk?</p>

<p>My instinct tells me that there may be a way to check if there are any files that are both in <code>git diff --name-only --cached --diff-filter=M</code> <em>and</em> <code>git diff --name-only --diff-filter=M</code>, and just quit if that's the case.</p>

<p>Other suggestions are welcome.</p>
",1,881224,,
34660428,3837778,1/7/2016 16:35,2,1707,<git><githooks><git-push>,How to copy one branch with commit history to another new repo?,"<p>I would like to clone one branch from git repo A to new git repo B. Prefer to include all commits history.</p>

<p>Everything is OK following <a href=""http://gbayer.com/development/moving-files-from-one-git-repository-to-another-preserving-history/"" rel=""nofollow"">http://gbayer.com/development/moving-files-from-one-git-repository-to-another-preserving-history/</a>. But when I try to push to remote, errors happened.</p>

<pre><code>remote: ERROR: invalid comitter email: someone@hehe.com
...
remote: valid email addresses:
...
remote: error: hook declined to update refs/heads/mybranch
To ssh://git@git.internal/myrepo.git
 ! [remote rejected] mybranch -&gt; mybranch (hook declined)
error: failed to push some refs to 'ssh://git@git.internal/myrepo.git'
</code></pre>

<p>I know that all the past commits were done by another person, who is not in the list of valid email addresses any more. How to ignore this kind of verification? Is there any other way to do this?</p>

<p><strong>UPDATE</strong></p>

<p>Asked our admin to change the remote settings. Now everything works.</p>
",0,3837778,,
34671016,2818245,1/8/2016 6:46,3,144,<git><version-control><githooks><git-push><git-pull>,Git push diverges the remote and local branch,"<p>I have a local branch named as source_report_overview_Approach3 and there is a remote counterpart of it as origin/source_report_overview_Approach3 on github. </p>

<ol>
<li><p>At a point , both point at same commit, as shown in the below image.</p>

<p><a href=""https://i.stack.imgur.com/6hN67.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/6hN67.png"" alt=""enter image description here""></a></p></li>
<li><p>Now I make another commit(<code>git commit</code>) to my local branch with message ""test commit"". This moves my local branch a commit forward while keeping the remote at same place as shown below:<a href=""https://i.stack.imgur.com/A0cFA.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/A0cFA.png"" alt=""enter image description here""></a></p></li>
<li><p>Now I push this commit to remote (<code>git push origin source_report_details_Approach3</code>). This as I understand git should move <code>remotes/origin/source_report_details_Approach3</code> to the later commit i.e. <code>test commit</code> and again my local and remote branch should be in sync and should point to same <code>test commit</code>, But somehow it does something like shown below:
<a href=""https://i.stack.imgur.com/J0wwX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/J0wwX.png"" alt=""enter image description here""></a></p></li>
<li><p>Now if i do <code>git status</code>, it gives me the following message:
<a href=""https://i.stack.imgur.com/9Y3p2.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/9Y3p2.png"" alt=""enter image description here""></a> I believe this should not happen. Shouldn't the <code>remotes/origin/source_report_details_Approach3</code> be updated to point to <code>source_report_details_Approach3</code> automatically. </p></li>
<li><p>I made another commit(<code>git commit</code>) by making changes at the same place in the same file as I had made in commit <code>test commit</code> with message <code>test commit 2</code>. It makes the history as follows:
<a href=""https://i.stack.imgur.com/PrcJG.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/PrcJG.png"" alt=""enter image description here""></a></p></li>
<li><p>Now i try to push this commit(<code>test commit 2</code>), then i get the following error:
<a href=""https://i.stack.imgur.com/zwJ2I.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/zwJ2I.png"" alt=""enter image description here""></a>
<a href=""https://i.stack.imgur.com/87wd3.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/87wd3.png"" alt=""enter image description here""></a></p></li>
<li><p>How may I solve this problem. By whatever I know about git, this is weird to happen.</p></li>
<li><p>If I try to pull the branch using <code>git pull origin source_report_details_Approach3</code>, then it gives merge conflicts. This is because <code>test commit and test commit 2</code> both make changes at same place in same file. Git try to merge <code>test commit</code> from remote to my local branch. Since my local file has <code>test commit 2</code> , it gives a conflict.</p></li>
<li><p>Also I am the only person working on the branch. Still because of the problem, I have to solve merge conflicts almost every time I have to push anything.</p></li>
</ol>
",10,2818245,0,0
69243377,13544022,9/19/2021 12:41,1,563,<bash><git><github><hook><githooks>,Create a Git Hook to pull data on another folder every time I push in the remote repository,"<p>I'm currently creating a Github repository for a better structure of my project. I want my project to be viewed by other peoples via link-only (because they don't have github), but I don't have found a solution. So I'm trying to transfer my project files in OneDrive and I have succeeded : I have git init my folder in OneDrive and I have git pull my github repository. This OneDrive folder will only receive new files, I'm updating my project with an other folder in my computer. Now, I want this procedure to be automatic every time I git push my updates to my remote repository.
I've tried to create that code (but I'm not sure if he's ok) :</p>
<pre><code>cd &quot;D:/Ewan/OneDrive/MyFolder&quot; // Once I git push, I go to the folder to update it
git pull &lt;github-repo&gt; &lt;my-branch&gt;
</code></pre>
<p>I want to implement it into a git hook file, but I've now idea in which and where in the code already written...</p>
<p>Can you help me please ? Thanks !</p>
<p>PS : some hooks like post-receive are not in my .git folder.</p>
",0,13544022,,
18183392,2663585,8/12/2013 9:16,1,907,<git><githooks><git-push><git-commit>,List of files in a git push using git archive,"<p>Is there a way to get only those files that are in a <code>git push</code>, onto a separate folder, using <code>git archive</code>?</p>

<p>I tried the below solution</p>

<pre><code>git archive --format zip --output /full/path/to/zipfile.zip ${commitid}
</code></pre>

<p>but I can get the entire repository content. </p>

<p>I am basically looking for files that are being committed and pushed at the server side(pre-receive).</p>
",1,2663585,,
18189662,427083,8/12/2013 14:30,1,427,<git><githooks><git-post-receive>,Git post-receive hook for website publishing - selected files not working,"<p>Based on <a href=""https://stackoverflow.com/a/3838804/427083"">this answer</a> I tried to implement the following: </p>

<p>When pushing to the web repo, I do not want the whole repository contents to be copied to my web directory, but only certain files/directories. </p>

<p>So, in my <code>post-receive</code> hook I do this: </p>

<pre><code>GIT_WORK_TREE=/full/path/to/web/directory git checkout -f -- web/index.php
</code></pre>

<p>However, very strangely the version of <code>index.php</code> in the directory never updates correctly. While a <code>git log</code> inside my bare repository directory showed the latest commits that were pushed to it the version of <code>index.php</code> is a previous one. </p>

<p>Also, I created a file called <code>test</code> and added that to the paths above to be copied into the work tree - this also did not show up. </p>

<p>The file is definitely executed. I added an <code>echo</code> command that shows up on my console, and I do some cleanup in the directory that is working as expected. All the files are there and updated. (I checked with a brand new <code>git clone</code>.) There is only one branch, <code>master</code>.</p>

<p>All this is very frustrating because it worked well when I first set it up. Don't know what could be wrong here. Thanks.</p>

<hr>

<p>UPDATE:</p>

<p>I tried the following:</p>

<pre><code># added ""testfile"" at the end of the checkout line in post-receive

echo ""Test"" &gt; testfile
git add testfile 
git commit -m ""Test.""
git push web

&gt;...
&gt; remote: error: pathspec 'testfile' did not match any file(s) known to git.
&gt;...

cd ..
git clone &lt;remote web&gt; newdir

&gt;...

cd newdir
cat testfile

&gt; Test
</code></pre>

<p>So the repo gets updated as expected but the new file is not recognized found. Maybe something wrong with the path specification?</p>
",5,427083,0,0
34718389,3571439,1/11/2016 9:49,2,92,<git><github><githooks><webhooks>,Understanding git pre-commit hooks,"<p>I am learning hooks in git and found that all hooks remain in .git folder and are local to a developer machine.I can not force all developers to place hook scripts  in there .git/hooks directory.Its up to them if they want to use or not.This goes for both client and server side hooks.
Isn't there a way that i can set certain hooks which must be  used by every developer in my team.
Suppose i want to create a pre-commit hook which will  do a sonar run,then where to configure this hook so that it reaches all developer.
I remember some where  people had used a mechanism where they are enforcing  pre-commit policies  but without any  developer  required to place hook scripts to his .git directory.
How to achieve this functionality.Is there any other way of doing this.</p>
",2,3571439,,
18204439,2663585,8/13/2013 8:42,2,1125,<git><bash><githooks>,Git issue - git archive handling files with space in their names,"<p>I am having trouble while handling <code>filenames</code> having space in them. </p>

<p>I use the below piece of <code>script</code> to fetch the files contained in a <code>push onto</code> a folder in a <code>zip</code> format and later <code>unzip</code> the files.</p>

<pre><code>tempdir=$(mktemp -d /apps/sample/XXXX)

while read oldrev newrev refname
do

commits=`git rev-list $oldrev..$newrev`
for commit in $commits
do
     git diff-tree -z --no-commit-id --name-only -r $commit | xargs -0 git archive -o     $tempdir/list.zip HEAD:
     unzip $tempdir/list.zip -d $scandir
     rm -rf /apps/sample/list.zip
done
done
exit 0
</code></pre>

<p>In the below example, I added and committed the file <code>SAMPLE FILE.txt</code>.
The thing is when <code>git archive</code> command encounters a space, i get the error below.</p>

<pre><code>[root@inba2 repo]# git push origin master
Counting objects: 4, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 296 bytes, done.
Total 3 (delta 1), reused 0 (delta 0)
Unpacking objects: 100% (3/3), done.
remote: fatal: path not found: SAMPLE FILE.txt
remote: Archive:  /apps/sample/l7Im/list.zip
remote:   End-of-central-directory signature not found.  Either this file is not
remote:   a zipfile, or it constitutes one disk of a multi-part archive.  In the
remote:   latter case the central directory and zipfile comment will be found on
remote:   the last disk(s) of this archive.
remote: unzip:  cannot find zipfile directory in one of /apps/sample/l7Im/list.zip or
remote:         /apps/sample/l7Im/list.zip.zip, and cannot find         /apps/sample/l7Im/list.zip.ZIP, period
</code></pre>

<blockquote>
  <p>git version is 1.7.1</p>
  
  <p>bash version is 4.1.2</p>
</blockquote>

<p>Help would be appreciated :)</p>
",9,2663585,,
18214986,1024313,8/13/2013 16:59,0,54,<git><github><githooks>,Git Pull on repo when a commit is pushed to GitHub,"<p>I'm currently working between a development machine (A) and a remote development server (B) that I have to ssh into.</p>

<p>Im looking for a way to add a githook to my repo so that when I commit on A and push to github I want the repo on B to automatically pull from origin so that its always up to date.</p>

<p>It seems like a small thing but I have to type git pull hundreds of times a day. </p>
",0,1024313,,
34743353,660259,1/12/2016 12:10,2,86,<git><drupal><githooks>,Allowing changed file not to be overwritten by git pull,"<p>I have a development setup like this: </p>

<pre><code>/themes/themename/css/style.css   # path to drupal theme css file
/styleguide/source/css/style.css  # path to generated css-file in styleguide
</code></pre>

<p>The styleguide has example markup for all different page types, and this is where design implementation is done. The drupal theme css file is tracked in git, and is updated in master from the css generated in the stylebuide. However, I constantly need to check that the style development also displays correctly in the drupal site, while I implement the design. I therefore have setup a softlink so that: </p>

<pre><code>/themes/themename/css/style.css -&gt; /styleguide/source/css/style.css
</code></pre>

<p>This works nicely, I can just reload the web browser with the drupal view, and the newly generated css-file is loaded. </p>

<p>Currently I hide the fact that style.css is changed (for git), using: </p>

<pre><code>git update-index --assume-unchanged /themes/themename/css/style.css
</code></pre>

<p>However, whenever I do a git pull, or git checkout on an existing branch, git will complain, saying: </p>

<blockquote>
  <p>error: Your local changes to the following files would be overwritten by checkout:<br>
  themes/uib_w3/css/style.css<br>
  Please, commit your changes or stash them before you can switch branches.<br>
  Aborting</p>
</blockquote>

<p>Any suggestions how I could avoid getting this message? Perhaps using some hook to reset the file on git pull, and the reestablish the link post pull? Or is there another approach to this that might work better?</p>
",0,660259,0,0
18225524,2648942,8/14/2013 7:21,0,1310,<git><bash><repository><authorization><githooks>,Git user authorization per branch by hook,"<p>5 developers have access to git-repository through same ssh-account.
I need to limit push-access for some branches (<em>production, development</em>) of that repo.
How to implement simple branch security with git hooks?</p>
",0,2648942,0,0
18228642,2663585,8/14/2013 9:58,0,177,<git><githooks>,git: how to obtain the commit message of the file before it gets committed using pre-commit hook?,"<p>I am working on a hook script to get the commit message of the file that is currently being committed and to change the commit message and then commit, if it does not satisfy a pattern.</p>

<p>My question is, Is  there a way to get the commit message of the file before it is committed and change the commit message and then commit the file?</p>
",1,2663585,,
34778930,5692364,1/13/2016 23:18,1,1100,<ruby><git><github><githooks>,How can I add --no-verify option to a commit using git gem?,"<p>I'm using the 'git' gem from rubygems.org to interact with a git repository.  Our company has recently added git hooks on commit that are getting in the way. I'd like to at least temporarily skip the git hooks to allow automation to continue working. On the command line I can use <code>git commit --no-verify</code> but can't find a way to do this using the git gem.  Is there a way to skip the commit checks with the git gem?</p>
",0,5692364,,
18274252,137948,8/16/2013 13:16,2,4174,<git><git-rebase><githooks><git-pull>,"When I do a git pull with rebase, how do I disable the rebase hook?","<p>The command:</p>

<pre><code>git rebase --no-verify
</code></pre>

<p>...allows me to rebase without running the git rebase hook I've created.</p>

<p>But I've also set <strong>git pull</strong> to rebase instead of merge, so now when I do a pull, it runs my rebase trigger. Is there a way to pass the --no-verify option to git pull and have it use the option when rebasing?</p>

<p>(Other than the last resort of creating a wrapper script to temporarily move the triggers out of the way, and move them back again afterwards).</p>
",0,137948,,
34801588,589774,1/14/2016 23:15,3,238,<git><github><merge><githooks>,git pre-merge (via pre-commit) hook to identify if files in a specific directory have changed,"<p>I'm looking to create a pre-commit hook which does the following:</p>

<ul>
<li>IF the commit is a merge and it is being merged into <code>master</code> (this <em>should</em> only happen with a PR)

<ul>
<li>IF the user has added or modified any of the files in folder <strong>A</strong>

<ul>
<li>COMPARE the <em>files</em> in <strong>A</strong> in the branch being merged into <code>master</code> to the files in <strong>A</strong> which are currently in <code>master</code> => IF <code>master</code> contains any ""new"" or modified files (relative to the branch being merged into master), REJECT the merge</li>
</ul></li>
</ul></li>
</ul>

<p>I have an idea of how I might go about this, but I'm a little confused about a few things:</p>

<ol>
<li>Do I actually want to use the pre-commit hook to do this? Are there docs which identify the args passed to this hook when it's called?</li>
<li>Does the hook operate in the context of the branch that's being merged (e.g. if I'm merging branch <code>foo</code> into <code>master</code>, if I call <code>git &lt;action&gt;</code> will that action be run in the context of <code>foo</code>)?</li>
</ol>

<p>Thanks!</p>
",0,589774,0,0
34829896,941446,1/16/2016 17:28,1,1304,<git><github><bitbucket><gitlab><githooks>,GitLab to GitHub / Bitbucket mirroring,"<p>I want to mirror a repository from GitLab to GitHub without duplicating it.</p>

<p>So I want a read-only mirror existing in GitHub that automatically updates from my work in my 'origin' GitLab repository hosted on GitLab.com</p>

<p>How would I go about setting this up and keeping it in sync?</p>

<p>To further add to this, how would I also add another mirror on Bitbucket?</p>
",0,941446,0,0
18323175,537512,8/19/2013 21:09,2,1716,<git><githooks><git-bash>,Git hook: add a new file to repo if a new branch is created,"<p>I am writing a git hook which checks if a new branch is created, and if so then add some predefined files to the repo for that new branch(Some config files). However because the branch is actually in the process of being created, my logic fails.</p>

<p>Currently I am doing this in a <code>post-receive</code> hook, which looks something like this:</p>

<pre><code>#!/bin/sh
read oldrev newrev refname
branch=$(git rev-parse --symbolic --abbrev-ref $refname)
echo ""branch is $branch""
echo ""oldrev is $oldrev and newrev is $newrev"" 

# if $oldrev is 0000...0000, it's a new branch
# also check if the branch is of the format ""feature_&lt;name&gt;""
zero=""0000000000000000000000000000000000000000""
if [ ""$oldrev"" = ""$zero"" ] &amp;&amp; [[ $branch =~ feature_.+ ]]; then
    #create a temp repo
    temp_repo=`mktemp -d /tmp/repo.XXXXX`
    cd $temp_repo
    git clone $git_url
    #here i create the config file needed, called file_name
    git checkout ""$branch""
    git add ""$file_name""
    git commit -m ""Added config file""
    git push origin $branch
fi
</code></pre>

<p>This works for an existing branch, however for a newly created branch it gives an error <code>fatal: Not a git repository: '.'</code>. </p>

<p>I am not sure in which <a href=""https://www.kernel.org/pub/software/scm/git/docs/githooks.html"" rel=""nofollow"">hook</a> I should use this logic, as I don't really know much about <code>git</code>. Any idea how I can go about this?</p>

<p>Thanks</p>
",0,537512,,
34849412,2831106,1/18/2016 7:37,1,677,<git><gitlab><githooks>,GitLab server-side hook not running - how to forward a git-push,"<p>Recently I installed GitLab (v8.3.3) on my server and mounted my existing repositories with NFS in place of repositories created for my gitlab group.</p>

<p>I want to make GitLab to show all of my activity for current repo in GitLab Activity feed so I checked whether it's working or not (it is not).</p>

<p>I have noticed that my old repositories (not created by gitlab) have only hooks examples so I replaced them with GitLab hooks (post-receive, pre-receive and update).</p>

<p>Now when I clone repository with path provided by GitLab (i.e. <code>git@gitlab.my_company.com:group/repo_name.git</code>) and then push - the activity is visible via GitLab.<br>
On the other hand when I clone via direct link to repo (i.e. <code>ssh://&lt;user_name&gt;@192.168.12.34/path/to/repo_name.git</code>) - the activity does not show in Dashboard/Activity.</p>

<p>My question:<br>
How to make GitLab to update Activity from both remote paths?<br> Does this have something to do with changing those hooks?</p>

<p>EDIT:
I just noticed that my git repo is on one server and my GitLab is on another machine. Hooks directory is symlinked so on original git server hooks directory is a link pointing to nowhere.</p>

<p>Can I forward a ""git push"" from one machine to GitLab server?</p>
",0,2831106,0,0
50933468,9518258,6/19/2018 16:58,1,192,<git><githooks><post-checkout-hook>,Can a post-checkout hook check if a single file was being checked out?,"<p>I'm writing a post-checkout hook, but I'd like to avoid it being run if certain conditions are met, with one of these being upon checkout of a single touched file. For example, I'd like it to run if I run <code>git checkout somebranch</code>, but avoid it being run if I just want to <code>git checkout -- some/touched/file</code>.</p>

<p>As far as I know, the <code>post-checkout</code> script is only passed the previous and post-checked-out commit hashes, with some additional data being scrapable from the git repo's global state, but I'm not sure what to check to figure out if it's just a single file being checked out.</p>

<p>Is this possible at all? If so how?</p>
",1,9518258,,
18393567,4323,8/23/2013 2:10,2,736,<git><githooks>,Git hook for any action that updates the working directory,"<p>Following an answer to a <a href=""https://stackoverflow.com/questions/18305744/embed-git-revision-in-executable-during-remote-build-with-netbeans"">previous question</a>, I implemented a Git hook script which needs to fire whenever the working directory is updated.  I linked this script to the following in .git/hooks:</p>

<ul>
<li>post-checkout</li>
<li>post-commit</li>
<li>post-merge</li>
</ul>

<p>This mostly works, but not always.  One case I found is <code>git stash</code>.  This is a problem because my hook generates a text file wihch I also mark with <code>git update-index --assume-unchanged</code> to tell Git that I don't want to check in changes (an empty version is checked in).  However, <code>git stash</code> will revert the assume-unchanged file (to the empty file), which means the hook needs to run again, yet the hook is not invoked after <code>git stash</code>.</p>

<p>I suspect a similar problem may exist with <code>git rebase</code> too, but that's not as easy to explain.</p>

<p>I want a hook which Git will <em>always</em> run after updating the working directory.  Is this possible?</p>
",2,4323,0,0
41878775,6626554,1/26/2017 16:53,2,970,<git><github><githooks>,How to add a git hook to update submodule with git pull & commit it into my PR,"<p>I want to <code>commit</code> a <code>hook</code> to my PR which automatically <code>update the submodule</code> whenever someone does a <code>git pull</code></p>

<p>Following is what is did in my git local repo:</p>

<pre><code>touch .git/hooks/post-rewrite
cd .git/hooks
chmod +x post-rewrite
</code></pre>

<p>Next, to the <code>post-rewrite</code> I added the code from <a href=""https://gist.github.com/digitaljhelms/f74eaf56835262d6bf3f"" rel=""nofollow noreferrer"">here</a></p>

<p>Now if I do a <code>git pull</code> shouldn't it update the <code>submodule with</code>git pull` as I am expecting it to? But it doesn't. <strong>What is the mistake I am doing?</strong></p>

<p>I've looked through many related links which are there but can't get it to work. </p>

<p>Also if I want to <code>commit</code> it the add <code>post-rewrite</code> file in hooks folder does not enlist under <code>git status</code>. <strong>How can I get <code>add</code>, <code>commit</code> &amp; <code>push</code> this into my PR?</strong></p>
",6,6626554,0,0
41882309,2155605,1/26/2017 20:23,1,271,<python><git><hook><githooks>,Python: trying to use third party libraries in git hooks,"<p>I am trying to utilise the javalang module in my pre-commit hook but I get an error on the line where it is trying to install javalang.</p>

<p>I don't know why this is happening because I have installed javalang by using pip through my terminal.</p>

<p>I have attached a screenshot of the error, can anyone help identify how I can fix this issue?</p>

<p>EDIT: Here are the first lines of my hook</p>

<pre><code>#!/usr/bin/env python

from __future__ import print_function
import sys
import subprocess
import os
import json
import javalang
import re
from xml.etree import ElementTree as ET
</code></pre>

<p><a href=""https://i.stack.imgur.com/iFBMh.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/iFBMh.png"" alt=""enter image description here""></a></p>

<p>EDIT: I think I've found a very big clue. When I open my terminal and run my python 2.7 version - I can import javalang. However, if I run my python3 version - I cannot import javalang. This means that sourcetree must be executing python3. I previously installed javalang via pip. Does this mean it didn't get installed on my python 3? Only 2?</p>
",7,2155605,,
41886051,3961402,1/27/2017 2:02,3,2208,<git><githooks>,Is there a way to prevent a commit to a file in a remote repository?,"<p>I have some files (i.e some version files) in a remote repository that shouldn't be changed by future commits. Is there a way to make sure that future users who commit to this file will not be able to override the file in the remote, but still be able to push. Is there an easier way to do this than using githooks? I don't want to create a commit that undo's a users change in a githook. Is there a cleaner way of doing this?</p>
",1,3961402,,
41895415,7393295,1/27/2017 13:45,2,3107,<git><bash><githooks>,pre-commit hook not working,"<p>I'm trying to add a pre-commit hook to my project, When I run <code>./.git/hook/pre-commit</code> it gives proper result.<br>
While committing variable OUTPUT is always empty. </p>

<pre><code>#!/bin/bash
OUTPUT=`git diff | flake8 --diff`


if [ -z ""${OUTPUT}"" ]
then
      echo ""================== You are awesome ====================""
      echo ""${OUTPUT}""
      exit 1
else
      echo """"
      echo ""================== Your code stinks, Fix them ====================""
      echo """"
      echo ""${OUTPUT}""
      exit 1
fi
exit 1
</code></pre>
",0,7393295,,
41895052,6626554,1/27/2017 13:26,0,452,<git><github><git-submodules><githooks>,How to ensure `submodule update` automatically with `git pull` on a repository level,"<p>I have a git repository which is used across a team of 10+ developers. I have a few <code>git submodule</code>s added into my repository. The submodules can of course be checked out by the following command.</p>

<p><code>git submodule update --init</code></p>

<p>But if I want that the <code>submodule update</code> to happen automatically when someone does a <code>git pull</code>, is it feasible? How can I do this?</p>

<p>Is there something I can do with git hooks ?</p>
",0,6626554,,
41906640,2023745,1/28/2017 5:25,1,522,<git><githooks><eslint>,How to apply an eslint git hook?,"<p>I'm not familiar with git hooks, and I've tried following the <a href=""https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks"" rel=""nofollow noreferrer"">git docs</a>, but I've had no luck implementing this eslint <a href=""https://gist.github.com/dahjelle/8ddedf0aebd488208a9a7c829f19b9e8"" rel=""nofollow noreferrer"">pre-commit hook</a>. Below is a screen shot of what I've done.</p>

<p><a href=""https://i.stack.imgur.com/oUCDX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/oUCDX.png"" alt=""enter image description here""></a></p>

<p>When I <code>git add</code> a file, then try to commit it, all I get is:</p>

<pre><code>[eslint-experimental 123123abc] some_message
  1 fele changed, 10 insertions(+), 3 deletions(-)
</code></pre>

<p>Why is it not linting the staged file?</p>
",1,2023745,0,0
34934238,1689910,1/21/2016 21:01,0,331,<git><phpstorm><githooks><git-rev-list>,Raise version when commit,"<p>I have a project in php with the use of GIT and there is a file called ""version"" with inside ""1"". I want that when i commit the number is incremented. I am using the git hook feature with this script:</p>

<p><code>num=$(cat version)
num=$(expr 0$num + 1)
echo $num &gt; version
git add -u version</code></p>

<p>All work fine except that when i check on the ide (phpstorm), the file stay ""blue"" (not syncronized) so if i click commit i see the file ""version"" modified.</p>
",2,1689910,,
4532192,312586,12/25/2010 23:49,4,1633,<git><githooks>,git hooks - regenerate a file and add it to each commit?,"<p>I'd like to automatically generate a file and add it to a commit if it has changed. Is it possible, if so, what hooks should I use?</p>

<p>Context: I'm programming a CSS library. It has several CSS files, and at the end I want to produce a compacted and minimized version. Right now my workflow is:</p>

<ol>
<li>Modify the css files <code>x.css</code> and <code>y.css</code></li>
<li><code>git add x.css y.css</code></li>
<li>Execute <code>minimize.sh</code> which parses all the css files on my lib, minimizes them and produces a <code>min.css</code> file</li>
<li><code>git add min.css</code></li>
<li><code>git commit -m 'modified x and y doing foo and bar'</code></li>
</ol>

<p>I would like to have steps 3 and 4 done automatically via a git hook. Is that possible?</p>

<p>I've never used git hooks before. After reading the <a href=""http://git-scm.com/docs/githooks"" rel=""nofollow"">man page</a>, I think I need to use the <code>pre-commit</code> hook. But can I invoke <code>git add min.css</code>, or will I break the internet?</p>

<p>EDIT: It worked! And I didn't create a black hole or anything!</p>

<p>Here's the code of my .git/hooks/pre-commit file:</p>

<pre><code>#!/bin/sh
exec minimize.sh
exec git add oocss.min.css
</code></pre>

<p>The documentation didn't mention that I had to make it executable, or it would not work.</p>

<p>In case you are interested in how did I minimize, I used <a href=""https://github.com/cjohansen/juicer"" rel=""nofollow"">juicer</a> - the minimizing command is:</p>

<pre><code>exec juicer merge --force my-uncompressed-file.css
</code></pre>
",0,312586,,
69301491,9983246,9/23/2021 13:57,0,942,<python-3.x><git><githooks>,Retrieve argument from a git pre-commit hooks with python,"<p>I am strating on git hooks really, and i want to make python hooks since my project is already in python.</p>
<p>I grasp the concept if trigger but i can't retrieve arguments. I followed multiple documentation but I keep circling around.</p>
<pre><code>import sys


def main():
    print(&quot;Number of arguments: %d&quot;, len(sys.argv))
    print(&quot;Argument List: %s&quot; % str(sys.argv))

sys.exit(1)


if __name__ == &quot;__main__&quot;:
    main()
</code></pre>
<p>I tried both the 3.9 and 3.6 python interpreter and i've seen people getting argument on a video posted a year ago.</p>
<p>The result of my <code>commit -a -m &quot;test&quot;</code> is <code>Number of arguments: %d 1; Argument List: ['.git/hooks/pre-commit']</code></p>
<p>From what i know about python argument, <code>sys.argv[0]</code> should always be the name of the executable and anything after should be the argument.</p>
<p>I tried both commiting through gitDesktop at first but then with gitBash, but correctly stop at <code>sys.exit(1)</code> but do not give me argument.</p>
<p>Anyone stumble upon this before ?</p>
",8,9983246,,
22807520,3350906,4/2/2014 9:45,4,2929,<git><push><githooks>,Bypass post-receive hook git,"<p>Is there a way how to explicitly bypass firing the post-receive hook? Meaning after pushing  commit the post-receive hook won't run.</p>
",0,3350906,0,0
41970584,5390873,2/1/2017 1:43,1,19,<windows><githooks><git-stash>,How can I use clientside githook in stash?,"<p>I have created a precommit clientside githook in my .git/hooks directory. This is a hidden directory but I want to save this to my repo. How can I save this in the repo and deploy this for other developers? I am using windows 7 and the precommit is a node mochajs unittest.</p>
",0,5390873,0,0
41971911,1251549,2/1/2017 4:28,1,259,<git><properties><githooks><properties-file>,How sort properties files by key during git push?,"<p>There is a git repository and some property files in it like that:</p>

<pre><code>//application.properties
bKey=12345
aKey=myValue
</code></pre>

<p>After <code>git push</code> executed a remote git server should sort these files like that:</p>

<pre><code>//application.properties
aKey=myValue
bKey=12345
</code></pre>

<p>How write hook for that?</p>
",0,1251549,0,0
4592838,217019,1/4/2011 10:58,102,32325,<linux><git><githooks>,Symbolic link to a hook in git,"<p>I wrote my own custom post-merge hook, now I added a ""hooks"" directory to my main project folder (since git doesn't track changes in .git/hooks), somewhere I read that I can make a symbolic link from hooks to .git/hooks so I don't have to copy the file from one folder to the other every time someone changes it so I tried:</p>

<p><code>ln -s -f hooks/post-merge .git/hooks/post-merge</code></p>

<p>But it doesn't seem to work, any ideas why? ""ln hooks/post-merge .git/hooks/post-merge"" works fine but making a hard link is the same as copyin I guess....</p>
",4,217019,0,0
22948575,1141471,4/8/2014 21:30,0,80,<git><bash><fetch><githooks>,update local bare repository A after push from another repository B to remote C,"<p>I cannot find any hook that is invoked from repository B (executes bash script on B) if I do a push from B to remote repo C. I want to take some action after push - I want to <code>cd</code> to another bare repo A on same machine as B is and do fetch from remote C. I can write a script wrapping git push, cd, git fetch but ideally I would like to execute cd, fetch from hook.</p>

<p>I am in B ( A and B are on same machine, I work in B and do push to remote C, A is tracking C so I want to cd into it and fetch/reset C into bare A)</p>

<p>executed in B repo:</p>

<pre><code>#!bin/sh
git push
echo ""updating A repository""
cd /A/project.git &amp;&amp; git fetch origin master:master &amp;&amp; git reset --soft
</code></pre>

<p>Can I put this code to some hook in B repository so it will be called automatically always after I do push to remote repository and remote repository is updated?</p>
",5,1141471,,
4835035,417872,1/29/2011 3:53,3,1447,<git><githooks><pre-commit>,Can a git pre-commit hook add a file to the repo?,"<p>I'm keeping a text file of my git log in my working directory, and I have a script that updates it after a commit. This is fine, but the effect of this is that the version that is inside the repo is always one commit behind.</p>

<p>Is it possible to write a pre-commit hook that would call a script and add a file to the repo, in effect saving the text version of the log with the current commit info inside it?</p>

<p>I'm new to git hooks and have no idea whatsoever how this would work, if it's even possible. I appreciate the help!</p>
",0,417872,0,0
60509041,3132457,3/3/2020 14:08,2,506,<git><github><githooks><git-push>,How to push changes to another remote after pushing them to origin (upstream)?,"<p>I'm using Visual Studio's Git integration to push my changes to <a href=""https://dev.azure.com"" rel=""nofollow noreferrer"">https://dev.azure.com</a>. Today I created a GitHub repo, and added my main changes as remote for my GitHub repo with these commands from Visual Studio Git root folder:</p>

<pre><code>git remote add upstream https://github.com/user/repo
git push upstream master
</code></pre>

<p>Now I have copy of all my changes in GitHub. When I make new changes in Visual Studio and push them to <a href=""https://dev.azure.com"" rel=""nofollow noreferrer"">https://dev.azure.com</a>, I'd like those to be pushed to GitHub too. I heard about Git hooks. So I wrote this in <code>post-receive</code> script:</p>

<pre><code>#!/bin/sh
git push upstream master
exit 0
</code></pre>

<p>But when I pushed my changes from Visual Studio, my GitHub repo wasn't updated, so I had to do <code>git push upstream master</code> manually.</p>

<p>What am I doing wrong?</p>
",0,3132457,0,0
60510169,6548980,3/3/2020 15:07,5,2225,<node.js><git><githooks>,Does the pre-merge commit hook get executed when I click merge request button in github?,"<p>I want to update the package version automatically when I create a pull request from release branch to master and after that I want whenever I merge it, the pre-merge git hook will be executed to launch another script.</p>

<p>pre-merge-commit:</p>

<pre><code>cd my_app
    node ./hooks/post-commit-version
    RETVAL=$?

    if [ $RETVAL -ne 0 ]
    then
       exit 1
    fi
</code></pre>

<p>hooks/post-commit-version:</p>

<pre><code>#!/usr/bin/env node
const exec = require('child_process').exec;
const path = require('path');
const moment = require('moment');
const fs = require('fs');

function getBranch(){
    return new Promise((resolve, reject) =&gt;{
        exec(
            ""git branch | grep '*'"",
            function (err, stdout, stderr) {
                if(err)reject(err)
                const name = stdout.replace('* ','').replace('\n','');
                resolve(name)
            }
        )
    });
}

getBranch()
    .then((branch) =&gt; {
        if(branch === 'release') {
          const currentDate = moment().format('YY.MM.DD')
        var pathToFile = path.join(__dirname, ""../package.json"");

        if (fs.existsSync(pathToFile)) {
          const data = fs.readFileSync(pathToFile, 'utf-8')
          const content = JSON.parse(data);
          content.version = currentDate;
          fs.writeFileSync(pathToFile, JSON.stringify(content, null, 2), 'utf8');
          exec(`git add ${pathToFile}`, (err, stdout, stderr) =&gt; {
            if(err) console.log(err)
           console.log(stdout)
          })
      } else {
          console.log(""Cannot find file : "" + pathToFile);
          return;
        }
      }
        return;
    })
    .catch(error =&gt; {
      console.log(error)
    })
</code></pre>

<p>When I try this locally, with <code>pre-commit</code> hook and execute the git commands manually, it works successfully and update the repository in github as the one I want it to be. But I'm not sure that git hooks are executed in Github server when I click the merge request button.</p>
",0,6548980,0,0
4870007,253323,2/2/2011 1:44,10,11826,<git><bash><githooks>,How to capture a git commit message and run an action,"<p>I'm new to git and I want to be able to capture the commit message after a push to the origin/master and run a bash script (on the server) based on what the string contains.</p>

<p>For example, if my git commit message says: <code>[email] my commit message</code></p>

<p>If the commit message contains <code>[email]</code> then do a specified action, otherwise, don't do it.</p>

<p>Here's a sample bash script I'm thinking of using in the <code>post-receive</code> hook:</p>

<pre><code>#!/bin/bash

MESSAGE= #commit message variable?

if [[ ""$MESSAGE"" == *[email]* ]]; then
        echo ""do action here""
else
        echo ""do nothing""
fi
</code></pre>

<p>Basically all I need to know is what the variable name for the commit message is, to use in the above bash script?  Also, I'm not sure if this is the right hook to do this or not.</p>
",0,253323,0,0
4877306,135346,2/2/2011 16:54,10,4533,<git><githooks>,List changed files in git post-merge hook,"<p>Is there a way for a post-merge hook get a list of all the files that were changed by a merge, even if it was a fast-forward?</p>
",0,135346,0,0
42229884,1561176,2/14/2017 15:22,0,806,<git><git-merge><gerrit><githooks><commit-message>,git commit-msg hook not triggering when recursive merge occurs on pull,"<p>We are using gerrit CI, which requires a commit-msg hook which adds a Change-ID to each commit message. </p>

<p>However, sometimes when pulling we get a recursive merge, this shows up in the reflog like this:</p>

<pre><code>767deb5 HEAD@{0}: pull: Merge made by the 'recursive' strategy.
</code></pre>

<p>When this happens, we can't push to our gerrit server, and get the following message:</p>

<pre><code> ! [remote rejected] HEAD -&gt; refs/for/master ([767deb5] missing Change-Id in commit message footer)
</code></pre>

<p>It is resolved easily enough by amending the last commit. But this is tedious, and it's frustrating.</p>

<p>How can we avoid this problem? Why does the recursive merge strategy not trigger the commit-msg hook? How can we make it trigger the hook automatically?</p>
",0,1561176,,
23016099,1879159,4/11/2014 14:59,3,127,<githooks><git-bash>,gitbash wont display messages from hook,"<p>I recently added a pre-receive hook to a git repository, and the hook works just fine preventing commits when it needs to. When a push is denied, I want the user to see a message telling them why. My script has a few print statements that display the message I want, however, <strong>these messages do not show up in the gitbash terminal of the committer</strong>.</p>

<p>The messages <em>are</em> being produced, the daemon process is printing them out, I see the messages when pushing from a unix terminal, and I also see the messages in a popup in Eclipse if I push using the built-in eGit tool, so I don't think the script is the issue.</p>

<p>I have tried running the daemon in unix, and on windows in gitbash, with the same results.
My hook is written in python, but I've tried others without success.</p>

<p>The closest I could find in my searches was this issue with Tortoise Git: <a href=""https://tortoisegit.org/issue/1027"" rel=""nofollow"">https://tortoisegit.org/issue/1027</a>. The cause called out for this was a UNIX vs windows line ending quirk, but since I have tried this in a windows to windows setup, I don't think line endings are the culprit.</p>

<p><em>Update</em>: This issue only occurs when I have configured remote with the git:// protocol. Using ssh:// works, the hook message shows in the gitbash terminal.</p>

<p>How do I get my hook messages to display in the gitbash terminal?</p>
",0,1879159,0,0
4902293,603706,2/4/2011 19:52,1,551,<git><githooks>,Using pre receive hook in git to identify the command run,"<p>Is there any way using a HOOK that I can find what was the command that was run from the client side. this should include all the command options that was sent from the client side.</p>

<p>for example I found out that there is a option with push called --mirror
(example git push --mirror) that will automatically delete all the branches that are not in the clients machine and will try to replicate the branches that are available in the clients machine.</p>

<p>If I could create a pre-receive hook where i can check what command options was sent with git push i could check if --mirror option was not used and that reject the command with out further processing.</p>

<p>Any help is greatly appreciated.
thanks
Gopi</p>
",1,603706,,
42415890,1443928,2/23/2017 12:33,0,542,<git><maven><githooks>,Running maven command after git pull with git hook,"<p>i am working with git, and i would like to run maven command after each git pull command
i found <a href=""https://stackoverflow.com/questions/34100369/run-testng-test-in-git-pre-commit-hook"">this example</a></p>

<p>so i created a file called <code>post-merge</code> based on this <a href=""http://www.manpagez.com/man/5/githooks/"" rel=""nofollow noreferrer"">link</a> </p>

<p>and it looks like that </p>

<pre><code>#!/bin/sh
cd web
mvn exec:java -e -Dexec.mainClass=""com.mycompany.web.build.db.MigrateDBSqlGenerator"" -Dexec.cleanupDaemonThreads=false
</code></pre>

<p>The git hook file is stored here:</p>

<pre><code>C:\dato\master\.git\hooks
</code></pre>

<p>And here i executed my git pull command:</p>

<pre><code>User@USER-PC /c/dato/master (DAT-21865-flyway-infra)
$ git pull
Password for 'https://xxxxxxxxx@bitbucket.org':
Updating cc1efa0..4ba349a
Fast-forward
 web/pom.xml | 21 ++++++++++++++++-----
 1 file changed, 16 insertions(+), 5 deletions(-)
</code></pre>

<p>But it looks like it didnt run my git hook, what am i missing here ?</p>
",3,1443928,,
60570338,8646387,3/6/2020 19:19,0,146,<gitlab><webhooks><githooks>,Add custom form before merge,"<p>The repository is hosted on Gitlab. I want developers to provide some input before creating the merge request. I have explore the web hooks but no luck.</p>
",0,8646387,,
42455506,7620507,2/25/2017 11:32,8,3483,<git><shell><githooks><git-push>,"In pre-push hook, get ""git push"" command full content?","<p>When a Git <code>pre-push</code> hooks script is working, how to get the full <code>git push</code> command content?</p>

<p>Example, when I run: <code>git push origin master</code>, pre-push hooks executed.<br>
I want to get <code>origin</code> &amp; <code>master</code> in this hook.</p>

<p>How can I get the list of arguments?</p>
",0,7620507,,
5334314,377022,3/17/2011 2:43,0,709,<windows><git><commit><chmod><githooks>,git add hook / getting git to ignore file modes of new files,"<p>I'm working with a git repository on both windows and linux/mac.  When I create new files on windows, or edit them in some text editors, the file mode is changed to 775.  I can get git to ignore file mode changes with</p>

<pre><code>git config core.filemode false
</code></pre>

<p>but I also want most new files to have mode 664 (not 775).  The best I've come up with so far is the pre-commit hook</p>

<pre><code>git diff --cached --name-only | egrep -v '\.(bat|py|sh|exe)' | xargs -d""\n"" chmod 664
git diff --cached --name-only | egrep -v '\.(bat|py|sh|exe)' | xargs -d""\n"" git add
</code></pre>

<p>but this does the wrong thing if I've added a new file, then edited it again before commiting, and then commited without adding it.  Is there a better way to do this, or something like a pre-add or post-add hook?</p>

<p>Edit: <code>git diff --cached --name-only</code> also gives me files that have been deleted, so what I really want is something like <code>git diff --cached --name-only --diff-filter=ACMRTUXB</code></p>
",0,377022,,
5334671,18626,3/17/2011 3:50,10,4075,<git><githooks>,Minify CSS files via git hook,"<p>My ideal situation is to automatically minify CSS files and add them to the git commit. I'm not sure if #4 below can be done, but I would like the following flow to be performed:</p>

<ol>
<li>Modify CSS file</li>
<li>Add to staging area</li>
<li>Commit</li>
<li><b>Run script that updates the minified files and adds them to the commit</b></li>
<li>Commit completes</li>
</ol>

<p>If there is another way, I'd be interested in that as well.</p>
",6,18626,0,0
60728253,12533852,3/17/2020 18:29,0,119,<git><githooks><git-skip-worktree>,Using skip-worktree on a file that is modified by git hooks?,"<p>I have a post-commit hook that edits a specific source file (specifically, writes commit hash to a string in c# class). Script is:</p>

<pre><code>#!/bin/sh
hashStr=`git log --pretty=format:'%H' -n 1`
str=""public static class GitHash { public static readonly string CommitHash = \""$hashStr\""; }""
echo $str &gt; MyApp\\MyNamespace\\gitHash.cs

</code></pre>

<p>The same script is in my post-rebase, post merge, etc hooks. It was working fine and was showing up as modified in git until I added GitHash.cs file to skip-worktree:</p>

<pre><code>git update-index --skip-worktree MyApp/MyNamespace/GitHash.cs
</code></pre>

<p>Now the file isn't being modified at all and stays in the state it was when I added it to skip-worktree. If I remove it from skip-worktree, hook works again (file is modified). 
If I am understanding skip-worktree correctly, it is ok to use it when I want to modify files locally, but don't want to accidentally commit them and don't want to see those files when i do git diff. However, it seems that somehow it's blocking the hook from editing this file?</p>

<p>So, if I want to have the file modified by hooks AND not showing up on git diff, what should I do?</p>
",0,12533852,,
60732929,9025052,3/18/2020 3:00,3,2023,<git><github><version-control><githooks>,fatal: cannot run .git/hooks/commit-msg: No such file or directory in mac,"<p>I have never used git and have recently started using one.
I have created a branch locally.</p>
<pre><code>FWS-CHE-LT-3532:amit$ git branch
* abc_123
  staging
FWS-CHE-LT-3532:amit$ git status
On branch abc_123
Your branch is up to date with 'origin/abc_123'.

Changes to be committed:
  (use &quot;git reset HEAD &lt;file&gt;...&quot; to unstage)

new file:   api/app/controllers/constants/mproject_constants.rb
new file:   api/app/controllers/mproject_controller.rb
new file:   api/app/controllers/validationsmproject_validation.rb
new file:   app/blueprints/helpdesk/mproject_blueprint.rb
modified:   config/privileges.rb
modified:   config/routes/api/routes.rb
</code></pre>
<p>So when I am trying to execute <code>git commit -m &quot;message&quot;</code>, it is failing with fatal: cannot run <code>.git/hooks/commit-msg: No such file or directory</code></p>
<p>What should I do??
I want to commit these changes and publish the branch so that I can raise a pull request for my team. Please Help</p>
",2,9025052,,
23461197,470769,5/4/2014 20:27,1,65,<github><hook><push><githooks>,Github push hook looks different from what's documented,"<p>I have a Github repos with a push hook configured. </p>

<p>The payload version is application/vnd.github.v3+form.</p>

<p>The payload object sent with that hook has the keys ""before"" and ""after"" and does not have the key ""size"". This differs from the <a href=""https://developer.github.com/v3/activity/events/types/#pushevent"" rel=""nofollow"">documentation</a> I can find, which does not document the ""before"" and ""after"" keys and indicates that the payload should have a ""size"" key. </p>

<p>Also, the hook I received has a ""repository"" object which is not documented at the link above. There may be other differences; I haven't yet compared them systematically.</p>

<p>I'd really like a ""size"" key, because I'd like to know how many commits were in the push (if there were more than 20, I don't' think the size of the commits object would be helpful).</p>

<p>Also I want to know what ""before"" and ""after"" mean, and there may be more differences. Mostly I'm concerned that I'm getting push hook payloads that I can't find the documentation for. </p>

<p>If I wrote my code based on that documentation (for example, expecting a ""size"" key), it wouldn't work. </p>
",1,470769,,
23661706,110186,5/14/2014 17:51,1,203,<git><github><githooks><pre-commit-hook>,Warning on git commit without GitHub issue number?,"<p>Is there a way to have git warn you before finishing a commit, if the commit message does not contain a GitHub issue number?</p>
",1,110186,,
5586993,223267,4/7/2011 20:09,6,8731,<svn><git><git-svn><githooks><svn-hooks>,Automatically synchronizing a Subversion repository and a Git repository,"<p>My project has a Subversion repository on a network file system, and a new team would like to access it using Git, and be able to commit to it and get updates from it.</p>

<p>What I have in mind is to create a new bare <code>git-svn</code> clone of the Subversion repository on the same network file system, and make sure the two repositories are always up to date with respect to each other.</p>

<p>The way to do this is probably to add a post-commit hook for both Subversion and the new Git repository, that will each update the other's repository.</p>

<p>The Subversion post-commit hook will include <code>git svn rebase</code>, and the Git one <code>git svn dcommit</code>.</p>

<p>The problem is that I will have to use some kind of lock to make sure no one commits to either repository while other is also being committed to, because they always have to be in sync before any commit.  This has several disadvantages, among them the time it will take to commit to Subversion or to push to the Git repository (it has to wait for the hook to finish), and the fact that some users may not be able to run <code>git svn</code> (because it's not installed on their machine), which means they can't update the other repository when committing/pushing.</p>

<p>How can I solve these problems?  What will the Subversion and Git hooks look like?</p>
",0,223267,0,0
60925532,671013,3/30/2020 7:03,0,72,<git><docker><githooks>,Abort docker build if cache cannot be used,"<p>As part of a <code>git</code> pre-push hook I build a <code>docker</code> image. 
This build can take several minutes and in the meantime the connection to the remote timeouts.
Therefore, I would like <code>docker</code> to break the build as soon as it detects a layer that cannot be used from its cache. I understand there is no <code>dry-run</code> build, is there some other trick that I missed?</p>

<p>In other words, as soon as docker actually tried to build a layer it should stop and return a non-zero code.</p>
",2,671013,,
60935991,7443523,3/30/2020 17:22,0,201,<bash><git><shell><scripting><githooks>,Git hook on Ubuntu broken,"<p>I recently got a git hook from someone that aims to add the issue number, which is in a specific location of the branch name, to the beginning of all commits. The goal is to take the <code>#number</code> from <code>feature/#number-issue</code>. Here is some info:</p>

<pre><code>➜  .githooks pwd
/home/luctia/.githooks
➜  .githooks git config --global --list
user.name=luctia
user.email=myemail
core.hookspath=/home/luctia/.githooks
➜  .githooks cat commit-msg 
#!/bin/sh

WI=$(git status --branch | grep -iPo ""(feature|bug)\/#\d+"" | head -1)
WI=$(echo ""($WI)"" | grep -Po ""\d+"")

if [[ ! -z ""$WI"" ]]; then
    WI=""#$WI""
    CM=$(cat ""$1"")
    if [[ ! $CM == *""$WI ""* ]]; then
        echo ""$WI $CM"" &gt; ""$1""
    fi
fi
</code></pre>

<p>This doesn't seem to work, though. The script is executable for every user, so that's not the issue. I have tried switching from <code>sh</code> to <code>bash</code>, and with that edit I've executed the script on a file in a repo, which added the number to the beginning of the file, so I know it works. I'm not sure if git hooks can execute bash files, but it doesn't make a difference whether I use <code>sh</code> or <code>bash</code>, though I would like to know if it can run bash scripts.</p>

<p>I'm using Webstorm for my IDE right now, and it doesn't work in there, and it also doesn't work on CLI git. I have no idea how to proceed.</p>

<p>Edit: I am pretty sure the script is not executed. When I add <code>data &gt; /tmp/hook</code> to the script, no file appears. I do have to change from <code>sh</code> to <code>bash</code> though.</p>
",0,7443523,,
61277118,5411198,4/17/2020 17:18,0,199,<git><githooks>,Sourcing a script from a Git pre-receive hook,"<p>I'm testing a  git pre-receive hook in a server. This are the contents of the <code>hooks/pre-receive</code>:</p>

<pre class=""lang-sh prettyprint-override""><code>#!/bin/bash
echo ""Hi $USER""
source pre-receive-hooks/bye
</code></pre>

<p>The contents of <code>hooks/pre-receive-hooks/bye</code> are:</p>

<pre class=""lang-sh prettyprint-override""><code>#!/bin/bash
echo ""Bye $USER""
</code></pre>

<p>Both <code>hooks/pre-receive</code> and <code>hooks/pre-receive-hooks/bye</code> files are executable, have the same permissions, and same owner and group.</p>

<p>When I push from a client to the server I get the message:</p>

<pre><code>Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 4 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 287 bytes | 287.00 KiB/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: Hi sergioro
remote: hooks/pre-receive: line 10: pre-receive-hooks/bye: No such file or directory
To drop:/git/hooks_practice.git
   3fbfa15..c15d08d  master -&gt; master
</code></pre>

<p>The first <code>echo</code> is working but then the <code>source</code> command fails. Why is the <code>source</code> is failing? Or more generally, how to source a script from within a Git hook?</p>

<p>I also tried the following commands but all return the same error when I push:</p>

<pre><code>source ./pre-receive-hooks/bye   # relative path
. pre-receive-hooks/bye          # source using the dot command
./pre-receive-hooks/bye          # run script directly

</code></pre>
",0,5411198,,
61284485,5299702,4/18/2020 5:09,0,536,<jenkins><docker-compose><gitlab><githooks><gitlab-omnibus>,Can't find project repository in git-server for custom-hooks,"<p>I used docker-compose to run a local gitlab server. </p>

<pre><code>git:
    container_name: git-server
    image: gitlab/gitlab-ce:latest
    hostname: 'gitlab.example.com'
    ports:
      - '8090:80'
      - '22:22'
    volumes:
      - ""$PWD/srv/gitlab/config:/etc/gitlab""
      - ""$PWD/srv/gitlab/logs:/var/log/gitlab""
      - ""$PWD/srv/gitlab/data:/var/opt/gitlab""
    networks:
      - net
</code></pre>

<p>I want to setup custom-hooks for a project repo i created in the gitlab webUI so that it triggers a jenkins job. As per gitlab documentation, this is the path for repos in omnibus installations where i will have to create custom-hooks directory</p>

<pre><code>/var/opt/gitlab/git-data/repositories/&lt;group&gt;/&lt;project&gt;.git
</code></pre>

<p>But inside of /var/opt/gitlab/git-data/repositories , I don't see a group directory or project directory at all</p>

<pre><code>root@gitlab:~# ls -lt /var/opt/gitlab/git-data/repositories
total 0
drwxr-s---. 3 git root 16 Apr 18 04:05 @hashed
drwxr-sr-x. 3 git root 17 Apr 18 04:00 +gitaly
root@gitlab:~#
</code></pre>

<p>I tried searching using find. But it returned nothing. I tried searching by name of files in my project repo, but that didn't return anything as well.</p>

<p>In the gitlab webUI, I am able to see it all. But in the server, none of the file and dir exists. </p>

<p>How is it that I am not able to find any of the file in my repos when i ssh to gitlab-server? </p>

<p>Since I am not able to go this way, I tried by creating a post-receive.d directory under the global hooks directory /opt/gitlab/embedded/service/gitlab-shell/hooks and then adding my post-receive file as below</p>

<pre><code>#!/bin/bash


# Get branch name from ref head

if ! [ -t 0 ]; then
  read -a ref
fi
IFS='/' read -ra REF &lt;&lt;&lt; ""${ref[2]}""
branch=""${REF[2]}""

if [ ""$branch"" == ""master"" ]; then
crumb=$(curl -u ""jenkins:1234"" -s 'http://jenkins:8080/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,"":"",//crumb)')
curl -u ""jenkins:1234"" -H ""$crumb"" -X POST http://jenkins:8080/job/maven/build?delay=0sec

  if [ $? -eq 0 ] ; then
    echo ""*** Ok""
  else
    echo ""*** Error""
  fi
</code></pre>

<p>jenkins is the name of the container which is in the same network as that of gitlab server.</p>

<p>gitlab docs says then I will have to change permission of the file to git and then make it executable. I did so. But it didn't work either. Also, I find all of the git directories is owned by root in my container. </p>

<p>After pushing code, i figured the hook I put in the /opt/gitlab/embedded/service/gitlab-shell/hooks/post-receive.d directory is not working and in the logs, I see below error right after I push code changes to my maven repo</p>

<pre><code>==&gt; /var/log/gitlab/nginx/gitlab_error.log &lt;==
2020/04/18 04:57:31 [crit] 832#0: *256 connect() to unix:/var/opt/gitlab/gitlab-workhorse/socket failed (13: Permission denied) while connecting to upstream, client: &lt;my_public_ip&gt;, server: gitlab.example.com, request: ""GET /jenkins/maven.git/info/refs?service=git-receive-pack HTTP/1.1"", upstream: ""http://unix:/var/opt/gitlab/gitlab-workhorse/socket:/jenkins/maven.git/info/refs?service=git-receive-pack"", host: ""gitlab.example.com:8090""
</code></pre>

<p>Here, gitlab.example.com is mapped to my public ip in the /etc/hosts file of my host on which I am running docker.</p>
",0,5299702,,
24285392,486230,6/18/2014 12:17,0,448,<git><githooks><git-post-receive>,Error in post-receive hook,"<p>I'm trying to implement a work-flow using git.
Here's what I did:</p>

<ul>
<li>I have a project on my local (git initialized off course)</li>
<li>I have added a remote pointing to <code>xyz</code></li>
<li>I created a directory <code>xyz</code> on the server</li>
<li>Initialized git in <code>xyz</code></li>
<li><p>Executed <code>git config receive.denyCurrentBranch='ignore'</code> withing <code>xyz</code>
-Afterwards, I created <code>post-receive</code> file in <code>.gt/hooks</code> and added the following lines:</p>

<pre><code>#!/bin/bash
GIT_WORK_TREE=/path/to/xyz
LOGFILE=./post-receive.log
cd /path/to/xyz/
echo ""Checking out $PWD""
echo ""Run: checkout dev""
git checkout dev
echo ""Run: git clean -df &amp; git checkout dev""
git clean -df &amp; git checkout dev
echo ""Run: git submodule update --init ""
echo ""Checking out sumodules""
git submodule update --init 
chmod 755 -R /path/to/xyz
</code></pre></li>
</ul>

<p>When I <code>push</code> using <code>git push xyz-branch dev --force</code>, I get the following errors:</p>

<pre><code>remote: Checking out /path/to/xyz
remote: Run: checkout dev
remote: fatal: Not a git repository: '.'
remote: Run: git clean -df &amp; git checkout dev
remote: fatal: Not a git repository: '.'
remote: Run: git submodule update --init 
remote: Checking out sumodules
remote: fatal: Not a git repository: '.'
remote: Setting access rights on files and folders
remote: Run: chmod 755 -R /path/to/xyz/
</code></pre>

<p>I don't know should I blame the docs or myself for mot understanding the cause of the error.</p>

<p><strong>Update</strong></p>

<p>I was doing many things wrong.Thanks to a twitter friend who pointed out <a href=""https://stackoverflow.com/questions/6635018/reuse-git-work-tree-in-post-receive-hook-to-rm-a-few-files"">this SO question</a> and I solved my problem. I think it's OK if I explain it as an answer.</p>
",9,486230,,
42972028,4457687,3/23/2017 9:30,6,4418,<python><git><githooks><gitpython>,GitPython update hook SHA could not be resolved,"<p>I'm writing an update hook with python3.5 and the GitPython module.</p>

<p>For starters I simply wanted to iterate over the files that have been added/deleted/modified and save that to a file.
Here is the hook:</p>

<pre><code>import git
import sys

branch, oldref, newref = sys.argv[1:]
print('oldref: {0}'.format(oldref))
print('newref: {0}'.format(newref))

repo = git.Repo('/srv/test')
oldcommit = repo.commit(oldref)
newcommit = repo.commit(newref)

with open(r'/tmp/hook.stdout', 'w') as outfile:
    for diff in oldcommit.diff(newcommit):
        outfile.write('{0}\n'.format(diff.b_path))
</code></pre>

<p>When I try and push the the repository I get the following error:</p>

<pre><code>remote: oldref: a38d324b84327e428127182b2d36b03afa73c11c
remote: newref: 1fbc70042891ecddef104f1938259b30f5f1e912
remote: Traceback (most recent call last):
remote:   File ""hooks/update"", line 10, in &lt;module&gt;
remote:     oldcommit = repo.commit(oldref)
remote:   File ""/usr/local/lib/python3.5/dist-packages/git/repo/base.py"", line 433, in commit
remote:     return self.rev_parse(text_type(rev) + ""^0"")
remote:   File ""/usr/local/lib/python3.5/dist-packages/git/repo/fun.py"", line 193, in rev_parse
remote:     obj = name_to_object(repo, rev[:start])
remote:   File ""/usr/local/lib/python3.5/dist-packages/git/repo/fun.py"", line 130, in name_to_object
remote:     return Object.new_from_sha(repo, hex_to_bin(hexsha))
remote:   File ""/usr/local/lib/python3.5/dist-packages/git/objects/base.py"", line 64, in new_from_sha
remote:     oinfo = repo.odb.info(sha1)
remote:   File ""/usr/local/lib/python3.5/dist-packages/git/db.py"", line 37, in info
remote:     hexsha, typename, size = self._git.get_object_header(bin_to_hex(sha))
remote:   File ""/usr/local/lib/python3.5/dist-packages/git/cmd.py"", line 940, in get_object_header
remote:     return self.__get_object_header(cmd, ref)
remote:   File ""/usr/local/lib/python3.5/dist-packages/git/cmd.py"", line 929, in __get_object_header
remote:     return self._parse_object_header(cmd.stdout.readline())
remote:   File ""/usr/local/lib/python3.5/dist-packages/git/cmd.py"", line 891, in _parse_object_header
remote:     raise ValueError(""SHA could not be resolved, git returned: %r"" % (header_line.strip()))
remote: ValueError: SHA could not be resolved, git returned: b''
remote: error: hook declined to update refs/heads/master
</code></pre>

<p>If I run the script manually:</p>

<pre><code>python3.5 /path_to_repo/.git/hooks/update refs/heads/master SHA1 SHA2
</code></pre>

<p>It runs fine and saves the file names to the file, I've tried with varies SHAs, if I run the script with the SHAs I see in the error message (oldref, newref) I get an empty file but no error message (since the commit has been rejected I suppose the newref SHA doesn't appear in the remote repository).
What am I missing?</p>
",3,4457687,,
61653972,12162757,5/7/2020 9:08,0,745,<bash><gitlab><githooks><git-push><git-clone>,How to add Server-side Custom Hooks in Gitlab?,"<p>What I am trying to do is that i want to add my hooks to repo in server, so that whoever has cloned the repo, passes through this before pushing to Gitlab server.
So far what i have done is, created <em>pre-receive</em> file in custom_hooks folder in <strong>/.git/custom_hooks</strong> and added some script to it.
Below is my pre-receive file.</p>

<pre><code>#!/bin/bash

zero_commit=""0000000000000000000000000000000000000000""
excludeExisting=""--not --all""

while read oldrev newrev refname; do
  # echo ""payload""
  echo $refname $oldrev $newrev

  # branch or tag get deleted
  if [ ""$newrev"" = ""$zero_commit"" ]; then
    continue
  fi

  # Check for new branch or tag
  if [ ""$oldrev"" = ""$zero_commit"" ]; then
    span=`git rev-list $newrev $excludeExisting`
  else
    span=`git rev-list $oldrev..$newrev $excludeExisting`
  fi

  for COMMIT in $span;
  do
    for FILE  in `git log -1 --name-only --pretty=format:'' $COMMIT`;
    do
        echo ""rejecting all pushes""
        exit 1
    done
  done
done
exit 0
</code></pre>

<p>Then I cloned the repo in my local Windows machine and tried pushing it. But it didnt create the intended effect. It still got pushed to server.</p>

<p>I'm new to Gitlab and Git Hooks. I don't know whether my <em>pre-receive</em> file is wrong or where I am going wrong. Please let me how to add hooks to server so that it validates/works for whoever cloned my repo.
Please help.
Thanks in advance.</p>
",0,12162757,,
61656756,1644178,5/7/2020 11:33,0,1277,<node.js><git><githooks>,How to create git hooks in Windows with Node.js?,"<p>I have been following <a href=""https://medium.com/@Sergeon/using-javascript-in-your-git-hooks-f0ce09477334"" rel=""nofollow noreferrer"">this</a> guide on how to use Node.js to script git hooks. However, the guide is using a Unix based system whilst I am running on a Windows machine.</p>

<p>I have also found <a href=""https://www.tygertec.com/git-hooks-practical-uses-windows/"" rel=""nofollow noreferrer"">this</a> guide on running git hooks on a Windows machine, but it is not using Node.js</p>

<ul>
<li>I am running a <a href=""https://docs.npmjs.com/misc/scripts"" rel=""nofollow noreferrer"">pre-install</a> script in my package.json file to set a custom git hooks location.</li>
<li>I am using VSCode as my editor and would like the git hooks to run when I use the UI for commits etc. However I am using command line initially to try and get the hooks to fire.</li>
</ul>

<p><strong>package.json excerpt</strong></p>

<pre><code>  ""scripts"": {
    ""preinstall"": ""git config core.hooksPath ./git.hooks""
  },
</code></pre>

<p>In my <code>git.hooks</code> folder I have a <code>pre-commit.js</code> file.</p>

<p>I have updated the first line to reflect the fact I'd like to execute the script running Node.js</p>

<p><strong>pre-commit.js</strong></p>

<pre><code>#!C:/Program\ Files/nodejs/node.exe

console.log('Hello world!');

process.exit(1);
</code></pre>

<p>If I run this script directly I get a Microsoft JScript compilation error - Invalid character on line 1 char 1.</p>

<p>If I do a commit, I get no errors but nothing happens.</p>

<p>Can anyone guide me through the process of creating a Node.js hook in Windows. I would rather create one myself than use a package.</p>
",0,1644178,,
42990772,1380669,3/24/2017 3:11,0,434,<bash><file-permissions><githooks>,Git pre-commit hook: Prevent commits that contain executable files,"<p>I'm trying to avoid accidentally committing binaries into my repo. I considered a hook that detects filesizes above some threshold but I think it will be more useful to fail the pre-commit hook anytime my commit changes a file with an executable permission bit.</p>

<p>I know how to tackle this with python/ruby/other scripting languages but ideally I can do it with just bash. Any ideas?</p>
",0,1380669,,
42991398,1688051,3/24/2017 4:24,1,1270,<git><sonarqube><githooks><sonar-runner><sonarqube-scan>,Accept push request only if code is scanned and Passed by SonarQube Scanner by remote git hook/s,"<p>We have started using Gitlab and SonarQube for development in Java.  </p>

<p>We have also using <em>pre-commit hook</em> for running <code>sonar-scanner</code> and according to its result we are appending SUCCESS/FAILURE/ERROR string to commit message by <em>commit-msg hook</em>. And accordingly on server side we are using <em>update hook</em>, for deciding whether to accept Push or not w.r.t. commit message.   </p>

<p>The loophole in this is if developer deleted client side hooks and append SUCCESS manually. So server cannot assure on client-side hooks.  </p>

<p>My question is, is there anyway to guaranty that the <code>sonar-scanner</code> is really triggered or not?  OR Any other solution to run <code>sonar-scanner</code> by server-side hook?</p>
",0,1688051,0,0
61667826,3904992,5/7/2020 21:12,0,340,<git><hook><push><githooks>,Pre-push script doesn't get run when setting the upstream remote branch,"<p>I have a pre-push script in my .git/hooks folder. This script runs fine when pushing from a local branch that has a pre-existing remote upstream branch. But it fails to run when I create a new branch off of master, say <code>test-pre-push</code>, commit a build-breaking change for example, and then enter the command <code>git push --set-upstream origin test-pre-push</code>. The commit and the branch are pushed to the remote repo. How can I ensure the script is run with each and every push to remote?</p>

<p>Check below for my pre-push script:</p>

<pre><code>#!/bin/bash

#The command to run
CMD='./gradlew testDebugUnitTest'


# Check if we actually have commits to push
commits=$(git log @\{u\}..)
if [ -z ""$commits"" ]; then
 exit 0
fi
$CMD
RESULT=$?
if [ $RESULT -ne 0 ]; then
 echo ""failed $CMD""
 exit 1
fi
exit 0
</code></pre>
",6,3904992,0,0
5935600,733241,5/9/2011 10:31,4,606,<git><githooks><keyword-expansion>,Is there a hook which updates $Id$ in files on clone/pull?,"<p>I have a bare (remote) GIT repository with the several users blessed to commit there. On repository clone/pull I want that each source file which contains magic <code>$Id:$</code> is expanded to smth. like: <code>$Id: &lt;name-of-last-committer&gt; &lt;data&gt;</code>.</p>

<p>It'd be amazing if this expanded/collapsed magic string would not affect on file modification state.</p>

<p>I suppose it is done via hooks. I wonder if there are any ready-to-use such hooks? Or how my task with <code>$Id</code> can be solved? Thanks.</p>
",0,733241,,
43194998,802484,4/3/2017 21:57,1,198,<git><heroku><githooks>,Custom git pre-receive hook possible on Heroku?,"<p>I'm looking to add a custom guard to a Heroku application that blocks a push to my app's <code>master</code> branch from any other branch except <code>master</code> on a developer's local machine, but I don't see anything in the Heroku documentation for accessing the pre-receive hook. Does anyone know whether this is even possible to access, or if there's some other configuration or add-on that will offer me the same functionality?</p>
",0,802484,0,0
6202093,779369,6/1/2011 13:39,3,4758,<git><githooks>,What is the common bugzilla hook for GIT?,"<p>I am looking for to find a git hook which submits posts to bugzilla when comit message includes fix/comment tags. However, I couldn't find a common tool. Here is a <a href=""https://git.wiki.kernel.org/index.php/InterfacesFrontendsAndTools#Bug.2Fissue_trackers.2C_etc."" rel=""nofollow"">list of alternatives on the Git wiki</a>. Does anyone know which tools are being used by Fedora or KDE?</p>
",6,779369,,
6232026,615315,6/3/2011 19:59,17,6340,<git><githooks><egit><jgit>,Egit hooks do not get triggered,"<p>I have a git repo with a pre-commit hook that intentionally fails 100% of the time.</p>

<pre><code>cat .git/hooks/pre-commit
&gt; exit 1
</code></pre>

<p>If I try to commit through the command line, it fails as expected.  However, if I commit from egit, the hook is ignored and the changes get committed.</p>

<p>Does egit/jgit not recognize hooks yet?  Is there a workaround for this?</p>

<p>Thanks in advance!</p>
",1,615315,0,0
25011021,1077158,7/29/2014 8:21,1,308,<git><githooks>,How to run a customized script after a git repo is pulled and actually updated?,"<p>I'd like to run a script automatically when I pull from a repo and the repo has new commits.</p>

<p>I'm thinking of using git hooks but there seems to be no proper hooks for my requirements.</p>

<p>So any other ideas?</p>
",0,1077158,0,0
62319979,830516,6/11/2020 8:16,1,888,<git><github><githooks>,"Git Hook timing out connection to Github - is there a ""pre-send"" Git hook that I could tie into?","<p>So I have a git hook for pre-push that runs a bunch of code linting and tests. These tests can sometimes take upwards of 2 - 3 minutes to run. Because of this my connection to Github times out, and the push to Github fails.</p>

<p>I don't want to have these tests run after every commit, as I tend to wait until I've made all my changes and done my own testing, then commit everything in several small commits at the end. It's expected that during development tests would break and I don't want that to stop me from committing, just from pushing broken code to Github. I also only want to run all my tests once I think they should pass right before I push my code up to GitHub.</p>

<p>If there a sort of ""pre-send"" Git hook that I could tie into? That would run all my tests both after all my commits are done and before my push, but before the connection to Github is opened so I don't have to worry about timeouts? Or am I just in a situation where I need to adjust my workflow and commit larger sections of code?</p>

<p>I like the idea of having small intentional commits, in order to logically break up the changes for code review later. As opposed to having all the changes grouped into one giant commit, just so I only have to run my tests once. But if I can't prevent git from opening the connection to GitHub on the pre-push hook before I run my tests this seems like a situation I may have to just bite the bullet on.</p>
",0,830516,0,0
25016807,57246,7/29/2014 13:41,0,308,<git><githooks>,How can I run the git post-receive-email in the background?,"<p>I have a post-receive hook that just calls /usr/share/git-core/contrib/hooks/post-receive-email</p>

<p>I'd like it to run in the background so that git does not get delayed after a commit. I've tried various techniques (exec, piping to ""at now"", nohup) but when I use any of these techniques no email gets sent. I suspect this has something to do with the use of stdin to pass in the args to the hook.</p>

<p>I guess I need to capture stdin but I've no idea how to do that.</p>

<p>Any suggestions?</p>
",1,57246,,
62325358,2416915,6/11/2020 13:17,0,161,<git><githooks>,How to run action after git pull on client side?,"<p>I'm looking a way to automatise git pull on client side.this clone is on an isolated server Only reachable via vpn. So which kind of hook can I use to detect pushed content on the github repo and pull this on the cloned one ?</p>

<p>Thanks </p>

<p>EDIT: to clarify, I've a LAMP Server and a Github repo. When I push a commit to Github from my local machine, I would the LAMP server ""auto"" pull code from github. But this kind of hook seem to be only available on server side (Github), not client (LAMP). Is it more clarified ?</p>
",1,2416915,,
43677053,1934182,4/28/2017 9:42,3,1992,<git><githooks>,Debugging git hooks,"<p>I created a git hook that would listen for any new push on the master branch on a local repo and would take a pull on the server (where the web app is deployed) whenever it finds one.</p>

<p>I have referenced this <a href=""https://www.digitalocean.com/community/tutorials/how-to-use-git-hooks-to-automate-development-and-deployment-tasks"" rel=""nofollow noreferrer"">example</a> to create my hook.</p>

<p>Below is the hook code:</p>

<p>File name &amp; path: <em>.git/hooks/post-receive</em></p>

<pre><code>#!/bin/sh

set -x
echo ""Pulling new commits"" &gt;&gt; hook_receive.log
while read oldrev newrev ref
do
    if [[ $ref =~ .*/master$ ]];
    then
        echo ""Master ref received.  Deploying master branch to Test...""
        unset GIT_DIR
        git pull
    else
        echo ""Ref $ref successfully received.  Doing nothing: only the master branch may be deployed on this server.""
    fi
done
</code></pre>

<p>I have given the file execute permissions:</p>

<pre><code>chmod +x .git/hooks/post-receive
</code></pre>

<p>I have set the <code>set -x</code> flag for debug mode and also have tried logging to the file <code>hook_receive.log</code> but nothing is being logged.
I hope I have use the correct hook.</p>
",11,1934182,,
43686807,4250330,4/28/2017 18:34,3,4254,<python><git><merge><githooks>,Get name of branch passed to git merge,"<p>I am writing a prepare-commit-msg (as a pre-merge) hook and need to get the source branch name of a merge to pass to a REST API. In other words I need to get the value of branchname from <code>git merge &lt;branchname&gt;.</code></p>

<p>So far, I've tried to rev-parse MERGE_HEAD, but it appears it has not been set yet when the hook triggers. At the moment, I'm just using git revparse --abbrev-ref @{-1} to get the last branch I was on, but that's not necessarily going to always be the branch I want to merge.</p>

<p>The rule I'm trying to enforce is that users should not be able to merge their feature branch with master unless certain conditions have been met. If there's a better hook to do this with then that would help too. Prepare-commit-msg is the only one that seems to have the commit type as an argument.</p>
",2,4250330,,
43895608,297032,5/10/2017 14:36,1,610,<git><git-submodules><githooks><git-subtree>,How to assign different git per-folder permissions while you maintain the commit binding?,"<h2>Background</h2>

<p>I've searched a lot and I am aware that <em>different folder permissions under the same repository</em> is something that is not supported by git. However, I still haven't found a satisfactory git model for my infrastructure although I've studied both <code>submodules</code> and <code>subtree</code></p>

<p><strong>References</strong></p>

<ul>
<li><a href=""https://stackoverflow.com/questions/3131912/why-are-git-submodules-incompatible-with-svn-externals/3132221#3132221"">Why are git submodules incompatible with svn externals?</a></li>
<li><a href=""https://stackoverflow.com/questions/2065559/using-two-git-repos-in-one-folder/2065749#2065749"">Using two git repos in one folder</a></li>
<li><a href=""https://stackoverflow.com/questions/31769820/differences-between-git-submodule-and-subtree"">Differences between git submodule and subtree</a></li>
<li><a href=""https://stackoverflow.com/questions/769786/vendor-branches-in-git/769941#769941"">Vendor Branches in Git</a></li>
</ul>

<p>In this point have to thank <a href=""https://stackoverflow.com/users/6309/vonc/"" title=""VonC"">@VonC</a> for his immense contribution to my understanding of those models</p>

<h2>Infrastructure</h2>

<p>I maintain a highly configurable application so most of my <strong>commits affect both the source and the configuration</strong> so I have placed them under a single git repository which structure looks like this:</p>

<pre><code>.
└── myapp
    ├── README.md
    ├── source
    └── conf
</code></pre>

<h2>Issue</h2>

<p>My issue is that my <strong>conf directory needs to be exposed to the client</strong>  (<em>part of what makes my product highly configurable</em>) who wants to perform a <code>git-pull</code> but for obvious reasons I don't want my client to get the source directory as well.</p>

<h2>Workaround</h2>

<pre><code>.
└── myapp-conf
    └── ""configuration""
.
└── myapp-source
    ├── README.md
    └── ""sources""
</code></pre>

<p>This structure assumes two distinct repositories with no connection between them whatsoever, which doesn't meet my exact needs by saves me from the hustle <code>submodules</code> and <code>subtree</code> introduce,</p>

<h2>Need</h2>

<p>A way to:</p>

<ul>
<li><strong>associate a single commit ID to changes in both</strong> <em>source</em> <strong>and</strong> <em>conf</em> <strong>directories</strong></li>
</ul>

<p><em>while at the same time</em></p>

<ul>
<li><strong>being able to prevent the client from pulling my source code</strong>.</li>
</ul>

<p>Sorry for the long question and thank you all in advance.</p>
",0,297032,0,0
62571304,293195,6/25/2020 8:41,1,70,<git><githooks>,How to check only new commits on update git hook on server?,"<p>So far I use the <code>update</code> hook on the git server to check the message in commits.</p>
<p>When a <strong>new</strong> branch is added I get the arguments <code>refs/heads/mybranch 00000...0000 &lt;headShaOfBranch&gt;</code>.</p>
<p>How can I check only the commits which are not yet in the repository? Whats the procedure to do this? (is it the wrong hook to do this?)</p>
<p>If I would take the range <code>0000</code> till <code>&lt;headShaOfBranch&gt;</code> I would check every commit starting from <code>&lt;headShaOfBranch&gt;</code> which is not good.</p>
",0,293195,,
25308968,3204951,8/14/2014 13:15,23,7904,<python><githooks><flake8>,Flake8 Not Recognizing built-in exception,"<p>I have a strict pre-commit hook set up with flake8, so I can't commit until its happy. This is normally a good thing, but it is causing some problems with what seems like no problem at all.</p>

<p>I can't get Flake8 to recognize a <code>FileNotFoundError</code>.</p>

<p><strong>example.py</strong></p>

<pre><code>try:
    pass
except FileNotFoundError:
    pass
</code></pre>

<p>This is enough code to get Flake8 to generate the error </p>

<pre><code>$ flake8 example.py
example.py:3:8: F821 undefined name 'FileNotFoundError'
$ python example.py # no error
$ python3 example.py # no error
</code></pre>

<p>I checked the <a href=""https://docs.python.org/3/library/exceptions.html#FileNotFoundError"">python docs</a>, and FileNotFoundError is a 'built-in' exception, so I don't think I should have to import it from anywhere, and my python interpreters have not complained about it, just seems like an issue with flake8.</p>
",0,3204951,0,0
25142797,592323,8/5/2014 15:34,2,105,<git><githooks><bugs-everywhere>,"Commit-hook: mark ""bugs-everywhere"" issue mentioned in the message as done","<p>I use <code>git</code> and <code>bugs-everywhere</code> in my project. If you don't know the latter, it's a simple text file based issue tracker, i.e. bugs are simply files, and modifying them is done with the command-line tool <code>be</code>. The files themselves are stored in the git repository. The idea of <code>bugs-everywhere</code> is to keep the issue statuses in sync with the code you commit.</p>

<p>What I'd like to achieve: If a programmer commits changes and references the bug in the message he just fixed / feature he implemented (e.g. the message is something like <code>fixed #123</code>), I'd like to mark the issue as done using the corresponding <code>be</code> command. This obviously changes the issue file. I then want these changes to be included in the current commit.</p>

<p>Since I need to parse the commit message, I can't use a <code>pre-commit</code> hook but need to use a <code>commit-msg</code> hook. But I can't find any information whether or not it is possible to change <em>what is being committed</em> but only the <em>message</em> for the commit.</p>

<p>My idea is, in the <code>commit-msg</code> hook, to always reject such commits, but also do another commit which includes the corresponding changes in the issue file. This leaves some open questions:</p>

<ul>
<li>Is it possible to do a commit during a commit-msg hook?</li>
<li>Is it possible to reliably find out which files the user wanted to commit originally? (I guess I can simply use the comment lines in the commit message, but aren't they possibly truncated?)</li>
</ul>

<p>Or is there a different approach you can think of?</p>

<p>Another idea, not really solving the above problem, is to only use the hook to check if the programmer <em>already marked the issue as done</em>. My primary goal is to avoid forgetting to mark the issue as done.</p>
",3,592323,0,0
62464988,9709330,6/19/2020 7:04,0,391,<linux><git><github><path><githooks>,Create a git post-push hook,"<p>I'm trying to create a post-push hook for git. The objective is just to run a shell command to launch gitrob once the code has been pushed to Github.
I found this : <a href=""https://stackoverflow.com/a/3812238/9709330"">https://stackoverflow.com/a/3812238/9709330</a>
But I'm a noob Linux user and when I saved my post-push hook as 'git-push-wh' in /usr/local/bin (which is in my $PATH), it didn't change anything and when I run git push-wh it is not recognized.</p>

<p>Any help ? Or any other way to do this ?
Thanks :)</p>
",0,9709330,,
43804038,989256,5/5/2017 11:39,1,2364,<git><githooks><bonobo>,Why aren't GIT hooks executed on a Windows?,"<p>I installed Bonobo Git Server on Windows 2008 R2 Server machine. I created a repository and put <code>post-receive.bat</code> file in <code>D:\Inetpub\Bonobo.Git.Server\App_Data\Repositories\REPO\hooks</code> directory.</p>

<p>This is the content of the file:</p>

<pre><code>#!/D/Inetpub/Bonobo.Git.Server/App_Data/Git/sh.exe

BINPATH=""/D/Inetpub/Bonobo.Git.Server/App_Data/Git/""
REPOPATH=""/D/Inetpub/Bonobo.Git.Server/App_Data/Repositories/REPO/""
GIT=""${BINPATH}git""

# Change working directory to the repo root
cd $REPOPATH

read oldrev
read newrev
read refname

branch=$($GIT rev-parse --symbolic --abbrev-ref $refname)

if [ ""master"" == ""$branch"" ]; then
    echo ""receive $branch $refname"" &gt;&gt; ""${REPOPATH}hookstest.log""
fi
</code></pre>

<p>If I execute this file from shell and type ""whatever whatever master"", then the file ""receive master master"" is added to <code>hookstest.log</code>. However, when I push changes to REPO the file is not updated, just as if it wasn't executed.</p>

<p>I have no idea where to look for errors that occurred. Most of the linux tutorials mention that the file must have +x flag. This obviously does not exist on Windows, but I checked and the user that runs Bonobo Git Server in IIS has execution rights on the batch file.</p>

<p>I was also hesitating about the name of the file, so I copied it and removed .bat extension. That did not help either. Any idea how I can get the hook working on the Windows Server?</p>

<p><strong>EDIT</strong></p>

<p>As suggested by @crashmstr I created a batch file (one with extension and one without) that contained:</p>

<pre><code>date /t &gt;&gt; D:\Inetpub\Bonobo.Git.Server\App_Data\Repositories\REPO\testhooks.txt
</code></pre>

<p>This did not work either, even though the file was created, when I executed the file manually.</p>
",8,989256,,
25179546,376483,8/7/2014 9:59,0,187,<php><git><encoding><locale><githooks>,Git Hook - PHP Script - charset issue,"<p>I'm developing a per-project based/portable Git Hooks library in PHP. Now a strange problem occured: Currently the <code>pre-push</code> hooks have a strange issue. File encoding is UTF8 w/o BOM, but still the output is the following on Win cmd and (MySys)Git/GNU Bash:</p>

<pre><code>-------------------------
 Running PHP Mess Detector
Ôû¼Ôû¼Ôû¼Ôû¼Ôû¼Ôû¼Ôû¼Ôû¼Ôû¼Ôû¼Ôû¼Ôû¼Ôû¼Ôû¼Ôû¼Ôû¼Ôû¼Ôû¼Ôû¼Ôû¼Ôû¼Ôû¼Ôû¼Ôû¼Ôû¼Ôû¼
 Ôö£ÔöÇ ÔêÜ dev/templates/php/bar.php
 Ôö£ÔöÇ ÔêÜ dev/templates/php/foo.php
--------------------------
 ÔÖÑ All files mess free.
--------------------------
</code></pre>

<p><a href=""https://github.com/wecodemore/GitPHPHooksLibrary/issues/1"" rel=""nofollow""><code>Goto Source</code></a></p>

<p>The chars should be relatively save. The original (which works on <code>pre-commit</code> hooks) looks like the following:</p>

<pre><code>--------------------------
 Running PHP Mess Detector
▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬▬
 ├─ √ dev/templates/php/bar.php
 ├─ √ dev/templates/php/foo.php
--------------------------
 ♥ All files mess free.
--------------------------
</code></pre>

<p>Example files to reproduce the issue (easily removable from a test env), can be found in my <a href=""https://github.com/wecodemore/GitPHPHooks"" rel=""nofollow"">Git PHP Hooks</a> repo and the hook script itself in the according <a href=""https://github.com/wecodemore/GitPHPHooksLibrary"" rel=""nofollow"">Git PHP Hooks Library</a> repo. <em>Both available on Packagist with <code>wcm/git-php-hooks(-library)</code></em>.</p>

<p>What could be causing a charset difference with the same files running on two different hooks?</p>

<h3>Edit</h3>

<p>To inspect the <code>locale</code> on the CLI, I used (the following non-logical PHP way to get the local by calling <code>setlocale()</code> with a <code>0</code> value - do <em>not</em> use <code>NULL</code> or an <code>''</code> empty string as this will actually <em>reset</em> it).</p>

<pre><code>print_r( explode( "";"", setlocale( LC_ALL, 0 ) ) );
</code></pre>

<p>Then I tried to set the locale with the <code>setlocale()</code> function, which seems to work on OSX and Linux distributions (NIX systems). I tried all <code>UTF</code> variations (rule of: first wins according to the docs), with <code>C</code> being the default (English).</p>

<pre><code>setlocale( LC_ALL,
    ""en_US.UTF-8"",
    ""en_US.UTF8"",
    ""en_US.utf-8"",
    ""en_US.utf8"",
    ""C""
);
</code></pre>

<p>But everything got ignored and I had <code>German_Austria.1252</code> as result.</p>
",2,376483,,
25182729,175592,8/7/2014 12:35,2,52,<git><githooks><pre-commit-hook>,Git command to determine if a directory will be present in a clone after running commit?,"<p>Im writing a git pre commit hook (for use on windows and osx), and I need to know if a directory will be present if I clone the repo after committing the currently staged mods. As directories are not tracked I need to know if there is a file that will be tracked in the directory or any of its subdirectories after committing. I currently use the following code, but it feels very shaky:</p>

<pre class=""lang-csharp prettyprint-override""><code>public bool TrackedAfterCommit(IDirectory directory)
{
    var dirs = new Stack&lt;IDirectory&gt;();
    dirs.Push(directory);

    while (dirs.Count &gt; 0)
    {
        var d = dirs.Pop();

        foreach (var f in d.Files)
        {
            var command = new ConsoleCommand(
                ""git"",
                ""status --porcelain --ignored "" + f.Path, directory.Path
            );
            var output = command.Execute();

            if (output.Count == 0)
                return true;

            var status = output[0];

            if (!status.StartsWith(""D"")
                &amp;&amp; !status.StartsWith(""??"")
                &amp;&amp; !status.StartsWith(""!""))
            {
                return true;
            }
        }

        foreach (var dir in d.Directories)
            dirs.Push(dir);
    }

    return false;
}
</code></pre>
",0,175592,,
25188028,1992360,8/7/2014 16:51,3,7862,<git><githooks><pre-commit-hook><pre-commit>,Run a precommit hook in Git. Is there a way to verify that the script is running?,"<p>I wanted to run a Git and as suggested by the blogs, I used <code>$git init</code> to initialize the repository and then a <code>.git</code> folder is created where the hooks are present in the hooks directory. Then as suggested by the script I renamed <code>pre-commit.sample as pre-commit</code> it didn't work so I renamed it as <code>pre-commit.sh</code> it still didn't seem to be running in the background or I atleast didn't know it did. </p>

<p>So, in order to have a clue as to whether it was running in the background I used an echo statement but I never showed up. Feeling lost, I next tried to manually run the script <code>.\pre-commit.sh</code> in powershell the echo statement was not printed on console. For one, I don't know if the console will be displayed even if the echo statement is successful by halting the progress of the script with a input feed from the user.</p>

<p>So please do tell me -- how to setup a pre-commit hook? Did I misread the procedure? Am I missing something here? Please do let me know.</p>

<p>The hook that I am using is a default pre-commit hook implementation by just for convenience I'll put it here -- hope it</p>

<pre><code>#!/bin/sh
#
# An example hook script to verify what is about to be committed.
# Called by ""git commit"" with no arguments.  The hook should
# exit with non-zero status after issuing an appropriate message if
# it wants to stop the commit.
#
# To enable this hook, rename this file to ""pre-commit"".

if git rev-parse --verify HEAD &gt;/dev/null 2&gt;&amp;1
then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --bool hooks.allownonascii)

# Redirect output to stderr.
exec 1&gt;&amp;2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ ""$allownonascii"" != ""true"" ] &amp;&amp;
    # Note that the use of brackets around a tr range is ok here, (it's
    # even required, for portability to Solaris 10's /usr/bin/tr), since
    # the square bracket bytes happen to fall in the designated range.
    test $(git diff --cached --name-only --diff-filter=A -z $against |
      LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
    cat &lt;&lt;\EOF
Error: Attempt to add a non-ASCII file name.

This can cause problems if you want to work with people on other platforms.

To be portable it is advisable to rename the file.

If you know what you are doing you can disable this check using:

  git config hooks.allownonascii true
EOF
    exit 1
fi

# If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against --
</code></pre>
",1,1992360,0,0
25434773,1975296,8/21/2014 19:50,0,331,<git><githooks><atlassian-sourcetree>,Git post-merge hook failing through sourcetree,"<p>I have a git post-merge hook that calls bower to install any new packages if bower.json was changed following a git merge. Now, when I do a git pull through sourcetree, sourcetree does begin to execute the hook, but it craps out when it comes time to run the actual command, which is bizarre. It does not recognize the bower command at all. Any ideas why?</p>
",0,1975296,,
25440207,1783805,8/22/2014 5:37,9,2600,<git><githooks>,Difference between pre-push and pre-receive hook in git?,"<p>Is there a difference between pre-push and pre-receive hook in git, in terms of use case or working logic?<br>
The only difference I could understand from their <a href=""https://github.com/git/git/blob/master/Documentation/githooks.txt#L211"" rel=""noreferrer"">documentation</a> was in terms of the input they receive -    </p>

<p>1.<strong>Pre-Push</strong> : Information about what is to be pushed is provided on the hook's standard input with lines of the form - <strong>local ref SP local sha1 SP remote ref SP remote sha1 LF</strong>  </p>

<p>2.<strong>Pre-receive</strong> : For each ref to be updated it receives on standard input a line of the format -<br>
<strong>old-value SP new-value SP ref-name LF</strong><br>
However, I would like to know if there are particular use cases for each hook or can they be used interchangeably?</p>
",0,1783805,0,0
7230820,558699,8/29/2011 13:31,991,544097,<git><githooks><git-commit>,Skip Git commit hooks,"<p>I'm looking at a Git hook which looks for print statements in Python code.  If a print statement is found, it prevents the Git commit.</p>
<p>I want to override this hook and I was told that there is a command to do so.  I haven't been able to find it.  Any thoughts?</p>
",2,558699,0,0
7235826,518204,8/29/2011 20:49,9,9130,<git><githooks><gitolite>,How to install hooks in gitolite,"<p>I've read all <a href=""https://github.com/sitaramc/gitolite/blob/pu/doc/2-admin.mkd#_using_hooks"" rel=""nofollow noreferrer"">the documentation about hooks</a>, <a href=""https://stackoverflow.com/questions/5055190/how-to-setup-post-receive-email-git-hook-with-gitolite"">similar</a> <a href=""https://stackoverflow.com/questions/4937755/gitolite-hooks-post-receive-doesnt-seem-to-work"">questions</a> and <a href=""https://github.com/sitaramc/gitolite/blob/pu/src/gl-install#L91"" rel=""nofollow noreferrer"">a lot of code</a> but I can't track where is the error in my procedure. I need to install a simple hook in my gitolite installation (made with an rpm package on CentOS) so here is what I did:</p>

<p>To install gitolite (some time ago):</p>

<ol>
<li>Installed the rpm package</li>
<li><code># su - gitolite</code></li>
<li><code>$ gl-setup /tmp/fabio.pub</code> (as gitolite user)</li>
</ol>

<p>Now to install the hook:</p>

<ol>
<li>Created a sample file <code>post-update</code> with the hook code in <code>~gitolite/.gitolite/hooks/common</code> and <code>chmod +x</code> on it</li>
<li>run <code>gl-setup /tmp/fabio.pub</code> again as <a href=""https://github.com/sitaramc/gitolite/blob/pu/doc/2-admin.mkd#_using_hooks"" rel=""nofollow noreferrer"">stated here</a></li>
</ol>

<p>But nothing happened, the exit status from the latest command is 0, but the hook file is not symlinked in any of the repository. So what's wrong with my procedure? Have I missed something?</p>

<p>Bonus questions:</p>

<ol>
<li>If I had understood the doc my procedure is the right one? I.e. should I run gl-setup every time I update any hook?</li>
<li>In this way I install the shared hooks in every repository under this gitolite installation, is that right? Can I manually install an hook either as symlink to somewhere or just an executable script only for a given repository? Should I do that manually in the hook folder of the given repository? Should I care of hooks conflicts (i.e. would any custom hook for the single repository block any other shared hook with the same name)?</li>
</ol>

<p>Don't know if this matters, my gitolite version is <code>1.5.9.1</code>.</p>
",0,518204,0,0
7239704,161085,8/30/2011 7:00,2,246,<git><github><githooks>,How to keep a default config file in Git repository while allowing maintainers to use a custom version?,"<p>We have a .xml config file in a public Github repository, and we want to include a basic, default version of that .xml file available for new users. </p>

<p>However, the package maintainers want to be able to edit their personal .xml file without having to commit around it.</p>

<p>What's the cleanest way of keeping a default config file in a public Git repository while allowing maintainers to use a custom version? </p>
",1,161085,0,0
7262307,220671,8/31/2011 19:24,3,2953,<git><githooks>,"Git post-merge hook, how to get name of merged branch","<p>I'm trying to create post-merge hook script which runs only when merging from specific branch. How can I determine name of the branch changes came from for specific commit?</p>

<p>e.g. </p>

<pre><code>if $from_specific_branch == 1 then 

git diff --name-status HEAD@{1} HEAD ""some_folder"" | 
   while read st file; do
      #skip deleted
      if [ ""$st"" == 'D' ]; then continue; fi

      # .. do something with those files
   end
</code></pre>
",0,220671,0,0
7508722,347411,9/22/2011 1:56,2,2896,<git><deployment><githooks><environments>,Deploying a website to multiple environments with git,"<p>Currently I deploy a project to production with git, using <code>git push production master</code> to a repository with the following post-receive hook:</p>

<pre><code>#!/bin/bash
GIT_WORK_TREE=/home/username/www.example.com/myproject/ git checkout -f
</code></pre>

<p><code>production</code> is a remote, added via <code>git remote add production ssh://server/home/username/projects/myproject.git</code>.</p>

<p>But now I need to deploy a separate branch to a separate path on the server. I did come up with a solution, but I suppose there's a better way to do it.</p>

<p>What I did was create a new repository on the server, <code>myproject-alternate.git</code>, with a similar post-receive hook (replacing <code>/myproject/</code> with <code>/myproject-alternate/</code>), added this new repository with <code>git remote add alternate ssh://server/home/username/projects/myproject-alternate.git</code>.  Now I can deploy to the alternate path with <code>git push alternate branchname:master</code>.</p>

<p>This works, but I have some issues:</p>

<ol>
<li>The command to deploy to the alternate server is not what I was expecting—more than once I forgot the <code>:master</code> at the end and the server's repository received a new branch and the post-receive hook wasn't triggered.</li>
<li>I'm not sure if creating a new repository on the server was the best solution, and I wonder what would happen with a larger project.</li>
</ol>

<p>Are there other ways to accomplish this deploy flow without the mentioned issues?  Maybe a better post-receive hook that uses the received branchname to deploy to the right path? (is this even possible?)</p>
",0,347411,0,0
25699245,1090562,9/6/2014 10:19,1,531,<git><githooks>,Git post-receive hook. Move everything except a few folders,"<p>I have implemented a post-receive hook on my server (git was initialized with <code>git init --bare</code>). Hook was created in the following way:</p>

<pre><code>cd repo/hooks/
touch post-receive
chmod 777 post-receive
</code></pre>

<p>Then inside of the file I have:</p>

<pre><code>#!/bin/sh
GIT_WORK_TREE=/var/www
export GIT_WORK_TREE
git checkout -f
</code></pre>

<p>Right now when I push my local changes everything gets moved to /var/www folder. The problem is that I do not want some of the folders to be moved. For example I have <code>folder1</code>, and <code>folder2</code> there which I do not want to be moved. Currently I am manually removing these folders after the push, but this is a ridiculous work and I would like to automate it. </p>

<p>I am on <code>ubuntu 14.04</code> / <code>git 2.1</code></p>
",0,1090562,0,0
62933824,1075247,7/16/2020 11:34,0,39,<git><rebase><githooks>,How to block a rebase --skip if I have staged changes?,"<p>Git already blocks a <code>--continue</code> if you have unstaged changes. It makes sense to block <code>--skip</code> if you have staged changes. Is there a git hook I can modify to block rebase --skip in a similar way?</p>
",4,1075247,,
62938430,3344422,7/16/2020 15:43,1,246,<git><command-line-interface><githooks>,"Is there a Git Hook for ""git status""?","<p>I'm writing a CLI and I'd like to run something anytime the user checks &quot;git status&quot;. Is this possible? From what I've read there does not exist a hook for this. Is there a possible workaround?</p>
",2,3344422,,
7539450,17500,9/24/2011 13:53,2,977,<haskell><capistrano><web-deployment><githooks><haskell-snap-framework>,Deploy Haskell code that uses the Snap Framework,"<p>What's your experience with deploying Haskell code for production in Snap in a stable fashion?</p>

<p>If the compilation fails on the server then I would like to abort the deployment and if it succeeds then I would like it to turn of the snap-server and start the new version instead.</p>

<p>I know there are plenty of ways. Everything from rsync to git-hooks (git pull was a nightmare). But I would like to hear your experiences.</p>
",2,17500,0,0
44296831,2356952,6/1/2017 0:55,3,2703,<git><tfs><githooks>,How to apply server side hooks in TFS - Git repositories,"<p>I am working on SVN to git migration project. </p>

<p>I would like to apply server side hooks(like check in commits and other basic checks on code) in TFS-Git repositories. I couldn't find any documentation online. </p>

<p>Has anyone worked on this area. could you please share your knowledge with me. </p>
",0,2356952,0,0
25746756,92239,9/9/2014 14:08,4,1068,<git><git-submodules><githooks>,Git hook to reject a push containing a submodule update?,"<p>I use gitosis to host my GIT repositories. </p>

<p>I want to prevent users other than the administrator (to be identified by the commiter's email) to push updates to submodules. </p>

<p>I tried to see if I could read a list of submodule changes via pre-receive hook, but since is a bare repo, it cannot read .gitmodules.</p>

<pre><code>#!/bin/bash
OLDREV=$1
NEWREV=$2
unset GIT_DIR
unset GIT_WORKING_TREE
SUBS=$(git show $NEWREV:.gitmodules | sed -n ""s/^.*git@repo://p"")

for submod in SUBS
do
        echo $submod
done

exit 1
</code></pre>

<p>But I get:</p>

<pre><code>remote: fatal: Path '.gitmodules' does not exist (neither on disk nor in the index).
</code></pre>

<p>Do you know how I could read the submodules commit being pushed in the pre-receive hook?</p>
",2,92239,0,0
26047579,3923806,9/25/2014 20:31,3,935,<git><githooks>,Git post-checkout hook on new branches only,"<p>I'm trying to create a git hook that is run after a checkout only if a new branch was checked out (i.e. the <code>-b</code> flag was used). I'm using a <code>post-checkout</code> hook and have tried various techniques to get this working like checking oldrev. </p>

<p>Is <code>post-checkout</code> the hook I want? If so what logic should I use in the script so the hook only takes effect when a new branch is checked out?</p>

<p>Thank you!</p>
",6,3923806,0,0
26061692,1167359,9/26/2014 14:14,0,277,<git><synchronization><sublimetext><githooks><fileserver>,How do I immediately sync a local folder to a file server when files are changed?,"<p>I am using Sublime Text 3 to edit code.
I am using GIT for version control.
The application I develop for is only available over CITRIX.
The CITRIX application can only access code on a file server.</p>

<p>At the moment I have my 'local' GIT repo on the file server which CITRIX can access.
This way I can edit and run code immediately.
The problem is that because it is not a local disk, GIT is slow.
I would like the repo to be on a real local disk so GIT is full speed.
I would like to be able to run the working directory code on the CITRIX application.
I don't want to manually start a sync.</p>

<p>I think I want to have some app monitoring my local GIT repo, and immediately and silently sync the tree to the file server on save, move, rename, creation and deletion.
That way it would sync when editing as well as when branch switching.</p>

<p>Another option would be using GIT HOOKS to update the server on checkout, merge, rebase, etc with a Sublimetext plugin to update on working directory saves.</p>

<p>Is there a tool that can do this?
Preferably portable but not essential.
It would be nice to be able to exclude the .git folder.
It is for Windows XP SP3, but the company will soon be upgrading to Windows 7.</p>

<p>I am open to other solutions.
Thanks for any suggestions.</p>
",2,1167359,,
7923505,990524,10/27/2011 23:11,9,6145,<git><bash><githooks>,How to use git hook pre-commit to stop commits to master,"<p>I want to stop myself accidently commiting something to the master branch unless I am sure. So I tried this script to determine which branch I am on but there is a problem. When I create a new branch git name-rev returns master even though I am on the other branch</p>

<pre><code>$ git branch
  ignore
  master
* set_support
$ git name-rev --name-only HEAD
master
</code></pre>

<p>This is my script.</p>

<pre><code>#!/bin/sh
# Check to see if we are on master branch. Stop accidental commits
if [ ""`git name-rev --name-only HEAD`"" == ""master"" ]
then
   if [ -f i_want_to_commit_to_master ]
   then
      rm i_want_to_commit_to_master
      exit 0
   else
      echo ""Cannot commit to master branch Adrian""
      echo ""Remember to create file 'touch i_want_to_commit_to_master' to commit to master""
   fi
   exit 1
fi
exit 0
</code></pre>

<p>For Mark: I rebuilt git against latest stable tag and same results. It only works after a commit is made to the new branch.</p>

<pre><code>$ mkdir gittest
$ cd gittest
$ git init
Initialized empty Git repository in /home/adrian/gittest/.git/
$ touch file1
$ git add file1
$ git commit
[master (root-commit) 7c56424] New file
 0 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 file1
$ git branch
* master
$ git checkout -b new_branch
Switched to a new branch 'new_branch'
$ git name-rev --name-only HEAD
master
$ git --version
git version 1.7.7.1
$ git branch
  master
* new_branch
$ touch file2
$ git add file2
$ git commit
[new_branch 1e038fb] new file
 0 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 file2
$ git name-rev --name-only HEAD
new_branch
</code></pre>
",2,990524,0,0
7925850,112757,10/28/2011 6:25,100,64358,<git><githooks><git-push><post-commit-hook>,How can I automatically push after committing in Git?,"<p>How do I set Git to automatically push to a remote
repository (including automatically providing my passphrase) after each commit to the local repository?</p>
",3,112757,0,0
22921961,2180523,4/7/2014 20:04,1,37,<git><notifications><githooks>,create notification when unstaged change is created in local git repo,"<p>I've got some config directories on my local Mac machine placed under versioning with Git. These aren't directories I directly inspect often, if ever. They mostly end up being altered via various command line installations. However, I don't always realize when an installation has made a change to any one of these various config directories that I'm trying to keep well versioned. Thus, many changes are made over time, before my noticing, that should be broken up into separate commits. Is there something I can setup (hooks, perhaps?) to get, idk, like a desktop/growl notification when a change to any repo on my machine has occurred so I may then go stage and commit?</p>

<p>If I'm approaching this issue from entirely the wrong angle or creating an issue where there isn't one really because of something I'm not aware of, please, feel free to let more know.</p>
",0,2180523,,
23129626,3544621,4/17/2014 9:39,1,420,<git><githooks>,git pre-push-hook - missing build files,"<p>I try to use the pre-push-hook of git to execute a build task before each push. This works fine so far (files get build, added and committed) but the files don't get pushed. Heres the code: </p>

<pre><code>#!/bin/sh
# Pre-Push hook to to build
# files before pushing them.
# If files are in the staging area
# the push aborts.

unstagedFiles=`expr $(git status --porcelain 2&gt;/dev/null| grep ""^ M"" | wc -l)`
stagedFiles=`expr $(git diff --cached --numstat | wc -l)`

# if there are unstaged files abort push
if [ ""$unstagedFiles"" -gt 0 ]; then
    echo ""Pre-Push-Hook: ERROR - You have unstaged files! - please add and commit them""
    exit 1
fi

# if there are staged files abort push
if [ ""$stagedFiles"" -gt 0 ]; then
    echo ""Pre-Push-Hook: ERROR - You have uncommited files! - please commit them""
    exit 1
fi

echo ""Pre-Push-Hook: Building files""
grunt build
echo ""Pre-Push-Hook: Files built""

echo ""Pre-Push-Hook: Adding following build-files""
git add -A .

git commit -m ""automatically added build files""
echo ""Pre-Push-Hook: Build-files commited""

exit 0
</code></pre>

<p>I tried to do another push within the script like this:</p>

<pre><code>branch=$(git branch | sed -n -e 's/^\* \(.*\)/\1/p')
git push origin $branch --no-verify
exit 1
</code></pre>

<p>This works quite well but exits of course with an error message which is not really perfect! Does anyone have any ideas to either get the actual push working or to hide the error message when using another push in the script and exiting with 1?</p>

<p>A similar question has already been asked <a href=""https://stackoverflow.com/questions/21334493/git-commit-in-pre-push-hook"">here</a> but the answers left this questions open ...</p>
",2,3544621,,
42328426,1018672,2/19/2017 14:28,1,457,<git><python-3.x><githooks>,gitPython not working from git hook,"<p>I am trying to build a git hook in this case post-receive however it only works when called directly from shell.</p>

<p>A minimal example script:</p>

<pre><code>#! /bin/env python3
import git

rep = git.Repo(""/var/www/cgi-bin/deployed.everland"")
print(rep.git.status())
</code></pre>

<p>results in the following error when called by git:</p>

<pre><code>$ git push --tags
Total 0 (delta 0), reused 0 (delta 0)
remote: Traceback (most recent call last):
remote:   File ""hooks/post-receive"", line 6, in &lt;module&gt;
remote:     print(rep.git.status())
remote:   File ""/usr/lib/python3.5/site-packages/git/cmd.py"", line 424, in &lt;lambda&gt;
remote:     return lambda *args, **kwargs: self._call_process(name, *args, **kwargs)
remote:   File ""/usr/lib/python3.5/site-packages/git/cmd.py"", line 873, in _call_process
remote:     return self.execute(call, **_kwargs)
remote:   File ""/usr/lib/python3.5/site-packages/git/cmd.py"", line 687, in execute
remote:     raise GitCommandError(command, status, stderr_value, stdout_value)
remote: git.exc.GitCommandError: Cmd('git') failed due to: exit code(128)
remote:   cmdline: git status
remote:   stderr: 'fatal: Not a git repository: '.''
To host:testrepos
 * [new tag]         newtag -&gt; newtag
</code></pre>

<p>I don't understand why it is opening the git repository at <code>'.'</code> as I clearly stated otherwise.</p>
",0,1018672,,
23138338,1778465,4/17/2014 16:14,2,132,<git><sh><githooks>,Git post-receive hook is slow,"<p>I have a post-receive hook that I use to update or dev server. I just set it up. It works, but it is super slow. When I push to the server, it takes about 1 - 2 minutes for the pull to finish, and I don't know why it takes so long. When I do a manual pull, it takes less than 5 seconds.</p>

<p>Why is it taking longer with a hook?</p>

<p>here is the hook's code:</p>

<pre><code>#!/bin/sh

cd /home/www
git pull
</code></pre>
",0,1778465,,
23138572,495682,4/17/2014 16:25,0,181,<git><version-control><merge><githooks>,Git Hooks: post-merge/pre-commit/post-commit not starting after manual branch merge,"<p>I want to create a git hook that would do some tasks after manual merge feature branch to master. I have created post-merge/pre-commit/post-commit files, but none of them starts after running commands:</p>

<pre><code>git merge FEATURE
</code></pre>

<p>or</p>

<pre><code>git merge FEATURE -m ""FEATURE"" --commit --no-ff
</code></pre>

<p>pre-commit/post-commit is working after running git commit. Where could be a problem?</p>
",2,495682,,
60534480,12369194,3/4/2020 20:49,0,350,<git><githooks>,Prepending git commit message without making a new line,"<p>I am using this one liner in <code>prepare-commit-msg</code> hook to prepend the commit message with a custom string:</p>

<pre><code>echo ""text "" | cat - $COMMIT_MSG_FILE &gt; /tmp/out &amp;&amp; mv /tmp/out $COMMIT_MSG_FILE
</code></pre>

<p>Unfortunately, every commit message contins ""text"" followed by CRLF and the rest of the commit message on the next line. For example, if commit message is: <code>""Commit 123""</code>, the new commit message would be </p>

<pre><code>""text
Commit 123""
</code></pre>

<p>and not <code>""textCommit 123""</code>, which is what I want.</p>

<p>Any idea what I am missing?</p>
",0,12369194,,
23183820,955369,4/20/2014 14:54,1,31,<gruntjs><githooks>,Githooks for `git add`?,"<p>I've setup a build process using Gruntjs, but don't want anyone to be able to store the output (all contained in a <code>build/</code> directory) in source control.  Don't Repeat Yourself n such.</p>

<p>I've currently got a pre-commit hook setup that cleans the <code>build/</code> directory and fails the commit if there are any unstaged files (I also stash then unstash so intentionally unstaged files won't interfere with this check).</p>

<p>It would be more user friendly to fail at the point a build file is added: <code>git add build/...</code>.  But I can't seem to find an example commit hook for git add.  I looked at <a href=""http://git-scm.com/book/ch7-3.html"" rel=""nofollow"">http://git-scm.com/book/ch7-3.html</a> and <a href=""http://githooks.com/"" rel=""nofollow"">http://githooks.com/</a>.</p>

<p>Is this possible?  If not, can you think of an improvement over my current setup?</p>
",0,955369,,
23188472,1373425,4/20/2014 22:51,4,1129,<git><redmine><githooks><gitolite>,Redmine - Git push fails [remote rejected] hook declined,"<p>I am having problem with pushing to my server which hosts redmine and repositories. I do have gitolite redmine plugin for redmine &amp; latest gitolite v3.5.x. When i clone repository i.e.</p>

<pre><code>git clone git@&lt;ip address&gt;:repositories/test-project-redmine.git 
// btw: i do get asked for password even though i have send my public key to redmine ?
</code></pre>

<p>this repository is cloned without a problem. When i create a simple readme.txt file and then i try to push this back to the repository i get the following</p>

<p><img src=""https://i.stack.imgur.com/cy0Ew.jpg"" alt=""enter image description here""></p>

<p>any one what can cause this issue ? Thanks :)</p>

<p><strong>Update:</strong> </p>

<p>I have run <code>find / -path '*Gitolite/Hooks/Update.pm' -print 2&gt;/dev/null</code> and yes the files do exist. Also i have checked the file permissions for user <code>'git'</code> who runs the repositories and he has all required permissions. Picture attached.</p>

<p><img src=""https://i.stack.imgur.com/GU3pf.jpg"" alt=""enter image description here""></p>

<p>however search did not return anything regarding perl </p>

<p>I have found <a href=""https://github.com/jbox-web/redmine_git_hosting/wiki/Troubleshooting#hook-errors-while-pushing-over-https"" rel=""nofollow noreferrer"">THIS</a> on the github - official plugin page - theoretical solution to the problem. I have done as suggested with inserting this:</p>

<pre><code>__DATA__
#!/usr/bin/perl

BEGIN {
  exit 0 if exists $ENV{GL_BYPASS_UPDATE_HOOK};
}

use strict;
use warnings;
...
</code></pre>

<p>into the following files: </p>

<pre><code>/&lt;git user home dir&gt;/bin/lib/Gitolite/Hooks/Update.pm
/&lt;git user home dir&gt;/gitolite/src/lib/Gitolite/Hooks/Update.pm
/&lt;git user home dir&gt;/.gitolite/hooks/common/update
</code></pre>

<p>however still no success... ? </p>
",6,1373425,0,0
42389932,4178565,2/22/2017 11:24,4,290,<git><githooks>,Port knocking before git push,"<p>I currently have a VPS that I use as a git server.</p>

<p>This VPS is protected with <strong>port-knocking</strong>, which means that I have to send some packets to specific ports before I can connect to the 22 port (used for SSH).</p>

<p>I thought that I could set up a git <strong>pre-push</strong> hook, which triggers the port knocking, so that git could then connect to the server and push.</p>

<p>Unfortunately, this hook does not work. Here is how I did it:</p>

<p><code>vim .git/hooks/pre-push</code></p>

<pre><code>echo ""Foo""
[my port knocking command which works perfectly fine]
echo ""Bar""
</code></pre>

<p><code>chmod +x .git/hooks/pre-push</code></p>

<p>Neither <em>Foo</em> or <em>Bar</em> are displayed when I run <strong>git push</strong>. Nothing happens.</p>

<p>I guess that git tries to connect to the remote server <strong><em>before</em></strong> running the <em>pre-push</em> hook.</p>

<p>How can I run my port knocking command <em>before</em> any action ?</p>

<p>I'd be happy if anyone could help me with this problem :)</p>
",2,4178565,0,0
42397299,7604437,2/22/2017 16:38,3,695,<git><bash><githooks><rational-team-concert>,Git server side hook not firing - how to check,"<p>I'm trying to enforce some policies between a Git and  Rational Team Concert using server side hooks. i.e. pre-receive one, but that hook seems not to be fired.
Even susbsituting given rational hook with a simple bash shell that rename a file this doesn't appear to be executed.
I put the script under /hooks dir with 755 permission, it works fine if executed from the shell.
How can I check where problem is?
Which log can I look at ? </p>

<p>This is the simple shell I'm trying to execute as pre-receive hook</p>

<pre><code>#!/bin/bash
#
# Licensed Materials - Property of IBM
# (c) Copyright IBM Corporation 2014. All Rights Reserved.
# 
#  Note to U.S. Government Users Restricted Rights:  
#  Use, duplication or disclosure restricted by GSA ADP Schedule 
#  Contract with IBM Corp. 
#
#

z40=0000000000000000000000000000000000000000
IFS=' '

date &gt;&gt; /tmp/test.txt
#mv /tmp/ss/daeseguire.txt /tmp/ss/eseguito.txt
exit 1
</code></pre>

<p>Thanks in advance</p>
",3,7604437,0,0
5084100,526895,2/22/2011 21:21,54,42083,<git><bash><github><post-commit><githooks>,Post Commit Hook Not Running,"<p>My post commit hook is not running after git.  I have verified that the hook does work if I just run it from the terminal.  The code in the hook is:</p>

<pre><code>#!/bin/sh
#.git/hooks/post-commit
# An example hook script that is called after a successful
# commit is made.
#
# To enable this hook, rename this file to ""post-commit"".

perl -pi -e 's/([a-f0-9]+)$/'$( git rev-parse HEAD )/ ../../config/commit.git
</code></pre>

<p>I did rename the file to post-commit in ./.git/hooks/ and the permissions are <code>-rwxr-x-r-x</code> so I am not sure why it doesn't work.</p>
",0,526895,0,0
60663385,3068500,3/13/2020 0:22,1,117,<git><githooks>,"Git pre-push hook executed on both ""merge"" and ""push""?","<p>I created a git hook - <code>pre-push.sh</code>.</p>

<p>However, i noticed it gets executed on both <code>git merge</code> and <code>git push</code>.</p>

<p>Is this normal? If so, is there a way to apply it exclusively to <code>git push</code>?</p>

<p>my hook looks like this:</p>

<pre><code>branch=$(git rev-parse --abbrev-ref HEAD)
if [[ ${branch} == 'develop' || ${branch} == 'release/*' ]]
then 
...
</code></pre>

<p>And i merged <code>release/1</code> into <code>develop</code>.</p>

<p>Does that make sense that it ran twice then?</p>
",3,3068500,,
42548943,,3/2/2017 7:10,0,37,<git><githooks>,Is there a way to know when someone pulled from git?,"<p>I want to get a notification or at least see when someone from my team calls git pull on the repo. Is there a way to use some kind of hook to achieve this?</p>

<p>I know we can do it when someone pushes to the repo but how to do it for pull?</p>
",2,,,
23384196,831219,4/30/2014 9:17,27,64300,<windows><git><githooks>,"How to run git hook script on windows, using repository through filesystem?","<p>Because of its simplicity, we use remote repository placed on shared disk, accessing it using file system path (\server\share). Is is possible, in such case, to run hook scripts defined in remote repository? I have defined one but it seems like it is not launched (tested using non valid edit in hook script, witch should cause an error).</p>
",1,831219,0,0
60676575,3236533,3/13/2020 19:56,0,926,<git><githooks>,Git pre-commit hook to check number of files changing,"<p>Our repository has custom status checks that get fired based on the number of files that we changed. If the number of files changed in a single PR is large, these status checks can bring down a downstream dependency. (there are requests to a service being made in these status checks). I'm not here to argue about these status checks and why they are there in the first place, at this point in time we can't change that or scale the service to handle such load. </p>

<p>The idea to gate these large changes is to add a git hook on pre-commit which basically gets the number of files that are different between the current branch and the tip of remote master. Then we want to error out if the number of those files is greater than a certain number.</p>

<p>Basically the way I'm going about this is by using the following commands in a git hook</p>

<pre><code>
# Refresh local reference to origin/HEAD
git fetch

# Get the diff between the tip of current branch and the tip of origin/HEAD and count them
git diff --name-only --cached origin/HEAD | wc -l

... 
</code></pre>

<p>This seems to work but I have a couple of questions:
1. Are there any hidden gotchas with these method? I want to ensure I'm covering all cases where  we can prevent a pull request being opened with a diff spanning the number of files > X.
2. Is it safe to call git fetch in a git hook? I need some way to ensure that the local reference origin/HEAD isn't stale otherwise the hook wouldn't fail but the pull request could still have an obscenely large diff if the local master is outdated.</p>
",1,3236533,,
42573349,7646464,3/3/2017 7:46,1,579,<python><gitlab><githooks>,gitlab pre-receive hook to run python unit tests for a every push and merge,"<p>I am using the gitlab server for code maintenance. Now I planned to run unit test for a every push from my developer team.</p>

<p>As I now, that using the CI tools we can achieve this. But now I am thinking of doing the same with git pre-receive hook.</p>

<p>I would like to define a pre-receive hook in the gitlab server and will place a python script which will run the unit tests. Once all my tests success then the system will exit with status 0 and it will allow the push otherwise denies the push from client side.</p>

<p>I would like to know, it is good practice to run unit tests in the pre-receive hook.? If not, any other alternative solutions other than CI tool ?</p>
",2,7646464,0,0
16734549,924954,5/24/2013 12:05,2,222,<git><githooks>,Git on windows: how to get pre-receive hook to run on the server using a file share,"<p>Unfortunately I have to run git on Windows.</p>

<p>I am sharing the git repository using a windows share (e.g. //ip address/GitRepo.git)</p>

<p>The problem is that git seems to treat this as a local path and runs the pre-receive hook on the client!</p>

<p>e.g. if my pre-receive hook consists of something along the lines of:</p>

<pre><code>echo $(ls /C)
</code></pre>

<p>then I see the contents of the client C drive and not the server</p>

<p>How do I get the pre-receive hook to run on the server?</p>
",0,924954,,
33308677,1798552,10/23/2015 17:59,0,576,<git><git-branch><githooks>,How to determine current branch in post-rewrite hook,"<p>Background: I want to have <code>post-rewrite</code> hook that will push changes automatically to the upstream repo (I'm the only user of it, and I use it to share my own work between different machines). The post-rewrite is the only time when I have to use force push, so I'd like it to be something like:</p>

<pre><code>currentBranch=...
git push [origin] $currentBranch -f
</code></pre>

<p>In other questions it's been suggested to use <code>git rev-parse --abbrev-ref HEAD</code> or <code>git symbolic-ref --short HEAD</code>. These both correctly determine current branch when used outside of <code>post-rewrite</code> script, but not inside of it. If I set my <code>post-rewrite</code> script to be:</p>

<pre><code>#!/bin/bash
git rev-parse --abbrev-ref HEAD
git symbolic-ref --short HEAD
</code></pre>

<p>Console output will be:</p>

<pre><code>$ git rebase [...]
First, rewinding head to replay your work on top of it...
Applying: [...]
HEAD
fatal: ref HEAD is not a symbolic ref
$ git rev-parse --abbrev-ref HEAD
myBranch
$ git symbolic-ref --short HEAD
myBranch
</code></pre>

<h3>EDIT:</h3>

<p>Short script to replicate my issue:</p>

<pre><code># setup the repo
git init test
cd test
echo ""git rev-parse --abbrev-ref HEAD"" &gt;&gt; .git/hooks/post-rewrite
echo ""git symbolic-ref --short HEAD"" &gt;&gt; .git/hooks/post-rewrite
chmod a+x .git/hooks/post-rewrite

# create the root branch
git checkout -b root
touch test
git add test
git commit -m ""test commit for root"" test

# branch out
git checkout -b test1
touch test1
git add test1
git commit -m ""test commit 1"" test1

# branch out again
git checkout -b test2 root
touch test2
git add test2
git commit -m ""test commit 2"" test2

# rebase
git rebase test1
git rev-parse --abbrev-ref HEAD
git symbolic-ref --short HEAD
</code></pre>

<p>Expected output would be (after cutting out previous messages):</p>

<pre><code>First, rewinding head to replay your work on top of it...
Applying: test commit 2
test2
test2
test2
test2
</code></pre>

<p>Instead, I get</p>

<pre><code>First, rewinding head to replay your work on top of it...
Applying: test commit 2
HEAD
fatal: ref HEAD is not a symbolic ref
test2
test2
</code></pre>
",4,1798552,,
50591736,1030542,5/29/2018 19:37,0,289,<git><hook><githooks>,git update hook not receiving any arguments,"<p>I read up online that git hook accepts 3 arguments:</p>
<ol>
<li><p>the name of the ref being updated,</p>
</li>
<li><p>the old object name stored in the ref,</p>
</li>
<li><p>and the new object name to be stored in the ref.</p>
</li>
</ol>
<p>I am trying to access these arguments but it's empty. What could be wrong here?</p>
<pre><code>#!/bin/bash


echo $@
refname=&quot;$1&quot;
oldrev=&quot;$2&quot;
newrev=&quot;$3&quot;
</code></pre>
<p>Based on the comments, I tried adding an echo statement  <code>echo &quot;In update hook: Args:$@&quot;</code> and heres the output that I see:</p>
<pre><code>$git push
Counting objects: 6, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (4/4), done.
Writing objects: 100% (6/6), 563 bytes | 0 bytes/s, done.
Total 6 (delta 0), reused 1 (delta 0)
remote: In update hook: Args:
remote:
remote:
</code></pre>
",5,1030542,,
33317847,2630028,10/24/2015 11:50,1,2587,<git><ssh><environment-variables><public-key-encryption><githooks>,Setting environment variable through SSH git push,"<p>I'm reading Scott Chacon's Git book, and just wanted to confirm something. This part:</p>
<blockquote>
<p>You also have access to the user doing the pushing if the push is being run over SSH. If you’ve allowed everyone to connect with a single user (like “git”) via public-key authentication, <strong>you may have to give that user a shell wrapper that determines which user is connecting based on the public key, and set an environment variable accordingly.</strong> Here we’ll assume the connecting user is in the $USER environment variable, so your update script begins by gathering all the information you need:</p>
<pre><code>#!/usr/bin/env ruby

$refname = ARGV[0]
$oldrev  = ARGV[1]
$newrev  = ARGV[2]
$user    = ENV['USER']

puts &quot;Enforcing Policies...&quot;
puts &quot;(#{$refname}) (#{$oldrev[0,6]}) (#{$newrev[0,6]})&quot;
</code></pre>
</blockquote>
<p>I presume that it's required for the pusher to install a script wrapping around the ssh command. For example, the script would perhaps set the GIT_SSH or GIT_SSH_COMMAND environment variable to point to a shell script that may have something like</p>
<pre><code>#!/bin/bash

HOST=$1
shift
ssh -i ~/.ssh/id_rsa $HOST USER=foo $@
</code></pre>
<p>Now anytime a git push is done and the remote contains an ssh url, it will invoke that script and update the refs while passing the USER environment variable.</p>
<p>The other way would be to use &quot;SendEnv USER&quot; in ~/.ssh/config on the local machine and &quot;AcceptEnv USER&quot; in /etc/ssh/sshd_config on the remote git server.</p>
<p>Any other ways that come to mind that expand on the part in bold? I'm particularly looking for a way that doesn't require the pusher to do much work in regards to configuring his environment. Assume everyone's running some form of Windows and needs to setup ssh through some Unix emulator like Cygwin.</p>
",0,2630028,0,0
34396821,2953308,12/21/2015 13:27,2,1392,<git><githooks>,How to execute commands after post-receive hook,"<p>This is my actual <code>post-receive</code> hook:</p>

<pre><code>#!/bin/sh
git --work-tree=/var/www/domain.com --git-dir=/var/repo/site.git checkout -f
</code></pre>

<p>Is there any way that I can run a command after the files are already in the folder?</p>

<p>I want to run <code>composer update</code></p>
",1,2953308,0,0
34407552,1490278,12/22/2015 2:24,1,258,<git><ubuntu-14.04><githooks><digital-ocean>,git-receive-pack: command not found. Could not read from remote repository,"<p>PS - I am already through this <a href=""https://stackoverflow.com/questions/22271560/git-receive-pack-command-not-found"">link</a></p>

<p>I am trying to do a quick auto deployment using git by following this <a href=""https://www.digitalocean.com/community/tutorials/how-to-set-up-automatic-deployment-with-git-with-a-vps"" rel=""nofollow noreferrer"">tutorial</a>.</p>

<p>Everything seems to be fine. Whenever I do a push, i receive this error:</p>

<pre><code>bash: git-receive-pack: command not found
fatal: Could not read from remote repository.
</code></pre>

<p>But on the remote machine the below command works just fine:</p>

<pre><code>git-receive-pack
</code></pre>

<p>I don't know where the issue is. Any help?</p>
",2,1490278,0,0
69174822,16907212,9/14/2021 8:56,1,1485,<typescript><visual-studio-code><version-control><eslint><githooks>,linking pre-commit hook to VSC source control,"<p>My goal is that every time I git commit, <code>eslint</code> should run first. Currently, I'm using husky hooks.</p>
<p>When I commit through the terminal with <code>git commit -m &quot;some message&quot;</code>, it's working as expected.</p>
<p>The problem is when I'm using the source control in Visual Studio Code (or webStorm).</p>
<p><a href=""https://i.stack.imgur.com/rcRLg.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/rcRLg.png"" alt=""enter image description here"" /></a>
<a href=""https://i.stack.imgur.com/rcRLg.png"" rel=""nofollow noreferrer"">source control commit</a></p>
<p>When I commit like this, <code>eslint</code> won't run.</p>
<p>This is the husky pre-commit file: <a href=""https://i.stack.imgur.com/d4t1V.png"" rel=""nofollow noreferrer"">husky pre-commit file</a>.
<a href=""https://i.stack.imgur.com/d4t1V.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/d4t1V.png"" alt=""enter image description here"" /></a><br />
This is the package.json script section: <a href=""https://i.stack.imgur.com/a20h0.png"" rel=""nofollow noreferrer"">package.json script section</a>
<a href=""https://i.stack.imgur.com/a20h0.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/a20h0.png"" alt=""enter image description here"" /></a></p>
",3,16907212,0,0
17887266,2623678,7/26/2013 17:15,0,434,<git><hook><git-merge><githooks><git-checkout>,"Post-merge hook did not run on fetch origin, checkout remote branch","<p>After doing a ""git fetch origin"" to pull in a remote branch added my a colleague, I did ""git checkout .</p>

<p>This output: Branch  set up to track remote branch  from origin. Switched to a new branch """"</p>

<p>I have a post-merge script to run SQL scripts merged into my local repository. HOWEVER, when I ran my git checkout , I pulled in some SQL files and my script did not run, meaninng no merge was done.</p>

<p>How does it get the remote branch onto the local branch if it isn't merging?</p>

<p>Thanks in advance!</p>
",0,2623678,,
34429515,863846,12/23/2015 5:58,17,3071,<git><gulp><githooks>,How to handle tracked generated files in git?,"<p><strong>Background:</strong></p>

<p>We have generated files in our system that need to be committed in their final state (e.g. we can't rely the source (ungenerated) files and make the generated ones on the fly). Since we need the generated files, those files cannot be git ignored.</p>

<p><strong>Problem:</strong></p>

<p>The files trigger a lot of <code>Your local changes to the following files would be overwritten by merge</code> errors from git on checkout and pull commands.</p>

<p>When I pull or checkout, I never care what my files were, I only care about the new files. (Obviously I care a lot about the source file that makes the generated files. I'm happy for merge warnings on the source file, which is kept in a different directory.)</p>

<p>However, when I commit, I want my version to ""win"" and my generated files to be committed.</p>

<p><strong>Possible solution:</strong></p>

<p>Right now I just run <code>git checkout -- generated-files/</code> before a pull or checkout to reset my generated files and skip any merge errors. It works, but I often forget to do it, and I'd like to automate it if possible.</p>

<p>I looked into a pre-checkout and pre-pull hook, but git doesn't provide them :(</p>

<p><strong>Questions:</strong></p>

<ul>
<li>Is there a better way to deal with generated files?</li>
<li>Is there a way to force the <code>git checkout -- generated-files/</code> to run before a pull or checkout?</li>
<li>How do you deal with generated files in git?</li>
</ul>
",2,863846,0,0
34448974,1665592,12/24/2015 7:29,1,1471,<git><jenkins><githooks>,git hook to trigger a Jenkins Job is not working,"<p>If I execute 
    curl <a href=""http://localhost:8081/Jenkins/job/test/build?delay=0sec"" rel=""nofollow"">http://localhost:8081/Jenkins/job/test/build?delay=0sec</a>
My Jenkins job get triggered but</p>

<p>I have created a <code>post-commit</code> file(.git/hook/post-commit) and added curl command as below</p>

<pre><code>curl http://localhost:8081/Jenkins/job/test/build?delay=0sec
</code></pre>

<p>But when I push a commit my Jenkins job isn't get triggered. 
What I'm missing here?</p>
",0,1665592,0,0
17929236,2623678,7/29/2013 16:27,4,3332,<git><githooks>,Is there a git hook that will run after a branch delete?,"<p>I want to have run a script as a git hook specifically after a branch delete. Is there one for this?</p>
",2,2623678,,
17947381,2594210,7/30/2013 12:43,4,2445,<github><githooks><github-api><pull-request><github-services>,"Github pull request hooks, static code analysis and provisional rollback","<p>Does github provide </p>

<ul>
<li>hooks to setup scripts to be run on every pull request (where say, one could call a simple static code analyser script) </li>
<li>and a provision to reject the pull request, based on the results from that
script run via pull request hook.</li>
</ul>

<p>Am trying to setup a pre-screener mechanism to catch trivial bugs/mistakes so that the reviewers are not bothered about trivial mistakes and they could focus more on the logic/feature. And if the prescreening script finds that the source in question doesn't fit the norms (typically, when even the simplest of checks fail; e.g, a function with >5000 SLoC, or unsafe strcpy(), or inclusion of deprecated header files etc), it should return a failure and pull request itself should fail unless the minimum gating criteria is met. </p>

<p>Since the code is on github rather than a local server, this seems to be kinda tricky. </p>

<p>I got a couple of pointers (<a href=""https://gist.github.com/bjhess/2726012"" rel=""nofollow noreferrer"">here</a>, <a href=""https://stackoverflow.com/questions/15383790/creating-a-github-hook-for-when-a-pull-requested-is-opened"">and here</a>) but still couldn't gather the details fully. The codebase consists of multiple repositories on github. Is there a better way to achieve and accomplish this? Please share your thoughts on possible approaches. Thanks!</p>
",0,2594210,0,0
19041220,1855099,9/27/2013 1:13,27,23816,<git><github><githooks>,How to run post-receive hook on GitHub,"<p>how to run a post-receive hook in GitHub?. I know that there is the web-one but I want to write a custom script and do not want to receive a post from github.</p>
",2,1855099,0,0
51074821,6416852,6/28/2018 4:38,25,19981,<git><atlassian-sourcetree><githooks>,Git hooks doesn't work on Source Tree,"<p>Via Terminal everything works correctly but in Source Tree doesn't work </p>

<p>This is my <code>pre-commit</code> hook</p>

<pre><code>#!/bin/bash
#
# hook script for swiftlint. It will triggered when you make a commit.
#
# If you want to use, type commands in your console.
# $ ln -s ../../pre-commit-swiftlint.sh .git/hooks/pre-commit
# $ chmod +x .git/hooks/pre-commit

LINT=$(which swiftlint)

if [[ -e ""${LINT}"" ]]; then
   echo ""SwiftLint Start...""
else
echo ""SwiftLint does not exist, download from https://github.com/realm/SwiftLint""
exit 1
fi

RESULT=$($LINT lint --quiet)

if [ ""$RESULT"" == '' ]; then
printf ""\e[32mSwiftLint Finished.\e[39m\n""
else
echo """"
printf ""\e[41mSwiftLint Failed.\e[49m Please check below:\n""

while read -r line; do

    FILEPATH=$(echo $line | cut -d : -f 1)
    L=$(echo $line | cut -d : -f 2)
    C=$(echo $line | cut -d : -f 3)
    TYPE=$(echo $line | cut -d : -f 4 | cut -c 2-)
    MESSAGE=$(echo $line | cut -d : -f 5 | cut -c 2-)
    DESCRIPTION=$(echo $line | cut -d : -f 6 | cut -c 2-)
    if [ ""$TYPE"" == 'error' ]; then
        printf ""\n  \e[31m$TYPE\e[39m\n""
    else
        printf ""\n  \e[33m$TYPE\e[39m\n""
    fi
    printf ""    \e[90m$FILEPATH:$L:$C\e[39m\n""
    printf ""    $MESSAGE - $DESCRIPTION\n""
done &lt;&lt;&lt; ""$RESULT""

printf ""\nCOMMIT ABORTED. Please fix them before commiting.\n""

exit 1
fi
</code></pre>
",4,6416852,0,0
19102714,1134864,9/30/2013 19:59,61,38570,<git><merge><githooks>,How would I write a pre-merge hook in Git?,"<p>The question says it all. Is there a way to perform an action before a merge? I'm guessing there's a way to make use of a <code>pre-commit</code> hook, but I'm not quite sure.</p>
",2,1134864,0,0
35515929,768028,2/19/2016 22:04,4,378,<git><sh><githooks>,git reset --hard -q produces errors about whitespace,"<p>I'm writing a pre-commit hook to run my Python Tests and everything is working wonderfully... until I get to a merge conflict. In this merge conflict, some documentation files are introduced that have trailing whitespace and every time I try to commit, I get these messages:</p>

<pre><code>&lt;stdin&gt;:28: trailing whitespace.
Ticket Link: 
&lt;stdin&gt;:54: trailing whitespace.
Then visit `http://app.dev` 
&lt;stdin&gt;:13528: trailing whitespace.
                            //most be provided for ALL resource updates, and 
&lt;stdin&gt;:13531: trailing whitespace.
    ""deleted"": false,  //indicates if this action resulted in a resource delete; 

warning: squelched 415 whitespace errors
warning: 420 lines add whitespace errors.
fatal: could not open '.git/MERGE_HEAD' for reading: No such file or directory
</code></pre>

<p>And then when I open up my editor to write the commit message, it's totally empty.</p>

<p>My pre-commit script is:</p>

<pre><code>#!/bin/sh

RED='\033[0;31m'
NC='\033[0m'

proper_pop() {
    git reset --hard -q 
    git stash apply -q --index &amp;&amp; git stash drop -q
}

exit_and_pop() {
    proper_pop

    if [ ""$1"" -ne 0 ]; then
        echo ""${RED}Your code failed the pre-commit hook! Please examine the output and fix your issues!${NC}""
    fi

    exit $1
}

run_and_bail() {
    bash -c ""$1"";
    ret=$?;

    if [ ""${ret}"" -ne 0 ]; then
        exit_and_pop ""${ret}""
    fi
}

if git rev-parse --verify HEAD &gt;/dev/null 2&gt;&amp;1
then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

old_stash=$(git rev-parse -q --verify refs/stash)
git stash -q --keep-index
new_stash=$(git rev-parse -q --verify refs/stash)

if [ ""$old_stash"" = ""$new_stash"" ]; then
    echo ""pre-commit script: No changes to test. Not running.""
    sleep 1  # HACK: Editor may erase message if done too quickly, make the programmer read
    exit 0
fi

# If you want to allow non-ASCII filenames set this variable to true.
allownonascii=$(git config --bool hooks.allownonascii)

# Redirect output to stderr.
exec 1&gt;&amp;2

# Cross platform projects tend to avoid non-ASCII filenames; prevent
# them from being added to the repository. We exploit the fact that the
# printable range starts at the space character and ends with tilde.
if [ ""$allownonascii"" != ""true"" ] &amp;&amp;
    # Note that the use of brackets around a tr range is ok here, (it's
    # even required, for portability to Solaris 10's /usr/bin/tr), since
    # the square bracket bytes happen to fall in the designated range.
    test $(git diff --cached --name-only --diff-filter=A -z $against |
      LC_ALL=C tr -d '[ -~]\0' | wc -c) != 0
then
    cat &lt;&lt;\EOF
Error: Attempt to add a non-ASCII file name.
This can cause problems if you want to work with people on other platforms.
To be portable it is advisable to rename the file.
If you know what you are doing you can disable this check using:
  git config hooks.allownonascii true
EOF
    exit_and_pop 1
fi

if ! [ -z ""$(which git-pylint-commit-hook)"" ]; then
    run_and_bail ""git-pylint-commit-hook""
fi

if ! [ -z ""$(which pep8)"" ]; then
    run_and_bail ""python hooks/pep8-hook-check.py""
fi

proper_pop
</code></pre>

<p>Through my debugging, I have produced the minimal script down to reproduce this error as:</p>

<pre><code>#!/bin/sh

RED='\033[0;31m'
NC='\033[0m'

proper_pop() {
    git reset --hard -q 
    git stash apply -q --index &amp;&amp; git stash drop -q
}

exit_and_pop() {
    proper_pop

    if [ ""$1"" -ne 0 ]; then
        echo ""${RED}Your code failed the pre-commit hook! Please examine the output and fix your issues!${NC}""
    fi

    exit $1
}

run_and_bail() {
    bash -c ""$1"";
    ret=$?;

    if [ ""${ret}"" -ne 0 ]; then
        exit_and_pop ""${ret}""
    fi
}

if git rev-parse --verify HEAD &gt;/dev/null 2&gt;&amp;1
then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi

old_stash=$(git rev-parse -q --verify refs/stash)
git stash -q --keep-index
new_stash=$(git rev-parse -q --verify refs/stash)

if [ ""$old_stash"" = ""$new_stash"" ]; then
    echo ""pre-commit script: No changes to test. Not running.""
    sleep 1  # HACK: Editor may erase message if done too quickly, make the programmer read
    exit 0
fi

proper_pop
</code></pre>

<p>Through this, I have learned that the line: <code>git reset --hard -q</code> in <code>proper_pop</code> is the sole culprit (removing it removes the error). There are no other hooks installed, the git version is: <code>1.8.1.2</code>, but I've also run this on version <code>2.5.0</code> and the same issue happens. Does anyone have <strong>any</strong> idea what's happening?</p>

<p>I tried piping stdout and stderr to <code>/dev/null</code> for that one command, just to see if it worked, and the errors were still printed...</p>

<p>It's completely a problem I can work around, and it really doesn't cause any issues, but I don't want a less technical co-worker to see this error and for it to throw them off (and I'm not sure if this will be printed every time we're merging in something with trailing whitespaces), so I'd love to know what's happening and how to fix this (or tell <code>git reset</code> to ignore trailing whitespace errors).</p>

<p><strong>EDIT:</strong></p>

<p>Here is a full working repo that demonstrates this problem: <a href=""https://github.com/hjc1710/so-git-hook-question"" rel=""nofollow"">https://github.com/hjc1710/so-git-hook-question</a>, merely follow the steps in the <code>README.md</code> and you'll get the error, regardless of whether you're in a merge or not.</p>

<p>My git config (for both my workstation, which is on 1.8.x, and my laptop, which is on 2.5.x) can be found <a href=""https://gist.github.com/hjc1710/d1281b1ff9231faf07ed"" rel=""nofollow"">here</a>. Sensitive information has been stripped, but none of it should have been relevant.</p>
",12,768028,0,0
69441724,4215893,10/4/2021 19:57,9,10587,<macos><git-commit><atlassian-sourcetree><githooks><husky>,"How can I fix these errors using Husky with SourceTree on MacOs with nvm? ""Can't find node in PATH"" and ""Current directory is not a git directory!""","<p>I'm seeing errors when I use husky hooks in a node project and attempt to commit to git via an app, SourceTree. The hooks are specified in <strong>package.json</strong>. I'm using nvm to manage node versions.</p>
<p>The error <code>Can't find node in PATH</code> <code>husky &gt; pre-commit hook failed</code>
is reported when SourceTree is used for a git commit.</p>
<p>Once this error is bypassed, husky reports another error when commit is attempted via SourceTree, using SourceTree's embedded git: &quot;Current directory is not a git directory!&quot;.</p>
<p>How can I resolve the errors?</p>
",0,4215893,,
5165239,174011,3/2/2011 8:50,16,6062,<git><githooks><git-add>,why it is not possible to git add .git/hooks/my-hook,"<p>I would like to have some hooks always present in a clone of a given repository. Is there a way to add a file in .git/hooks in the repository?</p>

<p>Thanks</p>
",0,174011,0,0
42631163,1308706,3/6/2017 16:51,0,31,<git><githooks>,Githook to msg on change to specific directory,"<p>How would one go about writing a post-receive hook that does something when there is change to a specific directory on the master branch? So far I figured out how to determine if the push involves the master branch, but I'm working on determining if the given directory has changed. I assume I have to do some git magic here.</p>

<p>In this case I want to check if there are any changes in the <code>schema/</code> directory. This is all I have so far, which I grabbed from the docs.</p>

<pre><code>#!/bin/bash
echo POST-RECEIVE
while read oldrev newrev refname
do
    branch=$(git rev-parse --symbolic --abbrev-ref $refname)
    if [ ""master"" == ""$branch"" ]; then
        do_something $oldrev $newrev $refname
    fi
done
</code></pre>
",0,1308706,,
5397584,151278,3/22/2011 20:41,0,151,<git><hook><githooks>,odd hook script execution on git,"<p>This is a little weird so I have this line in my remote git repo hook script post-receive:</p>

<pre><code>cd /path/to/my/deployed/app
git reset --hard
rm files/.development
</code></pre>

<p>And from my local machine i push to my git repo - here's what's weird. Those lines that is at the end of my post-receive is executed in my local machine and not in my remote server??</p>

<p>Obviously I end up getting this error:</p>

<pre><code>MacBook-Air:$ git push to-my-deployed-app

Counting objects: 23, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (16/16), done.
Writing objects: 100% (16/16), 2.56 KiB, done.
Total 16 (delta 11), reused 0 (delta 0)
remote: warning: updating the current branch
remote: fatal: Not a git repository: '.'
remote: rm: cannot remove `files/.development': No such file or directory
</code></pre>

<p>So there .. very odd...</p>
",2,151278,,
42661269,6068447,3/8/2017 1:15,1,127,<git><laravel-5><shared-hosting><githooks>,GIT Hook - Shared hosting and Laravel,"<p>I avec a Laravel 5 project, my git repository on the server is in <code>projects/projectA/.git</code> and this is where I push my developments.</p>
<p>Since I am on a shared hosting server I would like to synchronize the <code>public</code> folder of my project with the <code>public_html</code>.</p>
<p>I was about to create a <code>post-receive</code> hook, but I don't know exactly how to do that.</p>
<p>Otherwise is there another solution so I don't have to manually copy paste the <code>public</code> folder to <code>public_html</code> after a new push ?</p>
<h1>Structure of ~ folder</h1>
<pre><code>projects/
    projectA/
        .git/
        public/
        ....
public_html/
</code></pre>
",0,6068447,0,0
60963394,7981442,4/1/2020 3:47,0,120,<git><svn><githooks><subgit><svn-lock>,"SubGit: Git hook to lock a svn file if non locked, or reject commit if locked by another user","<p><strong>Context:</strong></p>

<p>I'm working on a big UE4 project. Currently we're using SVN as our VCS, but I've always been a git developer and having a local repo, local branches, and stashes are things I'm not willing to loose.</p>

<p>So, I've started using SubGit to work on a git version of the repo, while subgit does the git to svn conversion. So far I love it, aside from the fact that I'm forced to use rebase instead of merge, everything else is like normal git.</p>

<p><em>EDIT 1: My subgit repo is bare local one, as I don't have access to the remote SVN repo. This means tools like <code>svnadmin</code> or <code>svnlook</code> don't work for me.</em></p>

<p><strong>Question:</strong></p>

<p>Now, my team works by locking the binary files they work on in SVN. I want an automatic way to join that workflow. So I thought about a pre-commit hook to check if the files I'm about to commit are locked. If not, then lock them immediately. If they are though, check if I'm the lock owner. If I'm not, abort the commit.</p>

<p>Does anyone have any clues of how to achieve something like this?</p>
",0,7981442,0,0
42738131,1027004,3/11/2017 17:07,0,163,<git><amazon-web-services><githooks>,How to run a git hook upon successful push to Github?,"<p>I'd like to write a git hook to run some bash script when I push to my prod branch on Github. The bash I'm writing will essentially use aws command line tools to push an update to my app to AWS.</p>

<p>Can I do this with a pre-push or is there a post-push? </p>
",0,1027004,,
23758970,2719112,5/20/2014 11:47,0,354,<git><gerrit><githooks>,How can I globally block Gerrit submits while I'm force-push changes?,"<p>We are migrating from Perforce to Git/Gerrit, but still depend on keeping our Git repository in sync with a secondary Perforce repository. Due to how this is all glued together, we do occasionally have to force push changes to our Gerrit repository. In general this works fine.</p>

<p>However, we do occasionally experience that a review is submitted from Gerrit in the interval between a fetch and the subsequent force push, and hence gets silently dropped.</p>

<p>Is there any good way for us to disable submits from Gerrit while we're force-pushing?</p>
",0,2719112,0,0
23759190,457268,5/20/2014 11:56,8,1812,<git><githooks>,Run both local and global git hooks,"<p>I have a global git hook <code>post-commit</code> which is situated under:</p>

<pre><code>~/.git_templates/hooks/post-commit
</code></pre>

<p>I have made it global by</p>

<pre><code>git config --global init.templatedir '~/.git_templates'
</code></pre>

<p>and using <code>git init</code> to update the settings for my git project.</p>

<p>Yet one project had its own <code>post-commit</code> hook under:</p>

<pre><code>~/src/git.repo/.git/hooks/post-commit
</code></pre>

<p>The local one ran but prevented the global one from running. How can I achieve that both are run on post commit?</p>

<p>I want to avoid adding the command in the local post commit hook.</p>
",3,457268,0,0
23778677,2960311,5/21/2014 9:05,1,185,<git><githooks>,How do I identify that the next commit is going to be a merge commit?,"<p>I am writing a commit-msg hook which checks the message format.
But there are some rules I can not enforce when the commit is going to be a merge commit.
Particularly the length of lines in the message. I am enforcing the length of the first line to be less than 70 characters but this does not make sense when the commit message is prepared by merge and is often much longer because of branch names.</p>

<p>I think this could be accomplished by greping the first line of the message for ""merge"" string, but this does not seems correct to me. For example on windows, there is a ""MERGING"" string displayed in git bash prompt when merging is in progress. Is there any git variable or something like that what signals that I am going to merge?</p>

<h2>SOLUTION</h2>

<p>As pointed out in comments, a <code>.git/MERGE_MGS</code> file is created during a merge and contains the prepared merge message. But there is also an empty <code>.git/MERGE_MODE</code> file created just to signal that merging is in progress. This is what I was looking for.</p>
",8,2960311,0,0
61015181,8966651,4/3/2020 15:25,7,1175,<node.js><docker><githooks><husky><git-husky>,Using Husky with Docker when no Node.js is available in local,"<p>Working with Docker, I'm trying to make Husky work when there is Node.js in the container but no on the local machine. </p>

<p>As it will be triggered with git commands, with the info from <a href=""https://github.com/typicode/husky#node-version-managers"" rel=""noreferrer"">here</a>: ""if you're running git commands in the terminal, husky will use the version defined in your shell <code>PATH</code>"", and this <a href=""https://github.com/typicode/husky#local-commands-huskyrc"" rel=""noreferrer"">other</a>: ""Husky will source <code>~/.huskyrc</code> file if it exists before running hook scripts. You can use it, for example, to load a node version manager or run some shell commands before hooks.""</p>

<p>Could something like changing the <code>PATH</code> so it points to the Node.js that is in the container be a solution? If so, how could be done?</p>

<p>Thanks in advance!</p>
",0,8966651,,
61018297,10017632,4/3/2020 18:31,0,165,<git><git-branch><githooks><verification>,Git Hooks: make branch contain specific characters,"<p>I'm starting to learn how I can implement hooks into my Git project. I would like it so each team member is required to have their name inserted in the branch name also. This is what I have written so far. </p>

<pre><code>local_branch=""$(git rev-parse --abbrev-ref HEAD)""

valid_branch_regex=""^(Taylor|Sean|Ali|Yusuf|Niki|Wiktoria)\/[a-z0-9._-]+$""

message=""There is something wrong with the branch name: Branch name must contain your First Name,
 For example: $valid_branch_regex. Please re-commit with the correct changes.""

if [[ ! $local_branch =~ $valid_branch_regex ]]
then
  echo ""$message""
  exit 1
fi
</code></pre>

<p>Is it possible to alter this slightly to accept _Ali or -Niki for example.</p>

<p>Sorry im very new to Git! </p>
",0,10017632,,
61344217,11131154,4/21/2020 13:02,4,14209,<gitlab-ci><pipeline><githooks><pre-commit-hook><linter>,gitlab CI pipeline to check for code formatting,"<p>I am looking to install <code>google-java-formatter</code> across several of my projects.</p>

<p>However when committing code I want the <code>CI</code> pipline to check if the formatting has been done first. </p>

<p>I know I can accomplish this with a <code>.gitlab-ci.yml</code> file in my root directory however I am very unsure how to achieve my goal of checking if all files have been formatted correctly, can anyone help me out with how you could do this with <code>google-java-formatter</code> and <code>gitlab</code> please. </p>
",1,11131154,0,0
61344363,12130220,4/21/2020 13:09,2,80,<bash><git><github><gitlab><githooks>,Tagging master with git hooks before merging a branch to it,"<p>I understand there is no 'pre-merge' git hook but I was wondering if anyone had alternatives to suggest.</p>

<p>We use a master branch that we almost exclusively merge other branches (with lots of micro commits) into. We would like to automatically tag master as the current version (from a file) before the branch gets merged in.</p>

<p>Is there a way to do this that I'm missing?</p>
",2,12130220,,
24095474,3717417,6/7/2014 8:46,2,1587,<git><githooks>,Append the commit message automatically to the file being committed in Git,"<p>My aim is to maintain a log of all the commit history/messages at the end of each file in my repository. I used the commit-msg hook to get the commit message, prepare it and append it to the file. </p>

<p>However, I notice that since the file changes after staging, git status still shows as modified. What is the proper way to do this?</p>
",9,3717417,,
61418728,961695,4/24/2020 23:06,0,891,<amazon-web-services><terraform><webhooks><githooks><aws-codepipeline>,Trigger AWS CodePipeline by 2 webhooks?,"<p>I currently have a terraform script that builds an AWS CodePipeline triggered by a GitHub webhook. It works fine, update to the repo triggers the build.</p>

<p>We also have a secondary repo with some content. Is it possible to have the same pipeline to be triggered by a webhook to that secondary repo? It should do exactly the same thing (pull the same source from the first repo and run the build) but triggered on the update to the secondary repo.</p>

<p>Terraform allows you to create the second webhook and attach it to the same pipeline, but the trigger doesn't seem to work.</p>
",2,961695,,
42843976,2487546,3/16/2017 20:16,7,1831,<environment-variables><githooks><atlassian-sourcetree><clang-format>,SourceTree breaks Path variable,"<p>I started using <code>git-hooks</code> in my project, and one of precommit-hooks uses <code>clang-format</code>. 
On commit through SourceTree it fails to find clang-format.</p>

<p><code>Error: 'clang-format' not found.</code></p>

<p>But commit works, if I do this via terminal or via terminal inside SourceTree. After adding this line to git-hook, everything works in SourceTree.</p>

<pre><code>export PATH=/usr/local/bin:$PATH
</code></pre>

<p>So looks like it doesn't work in SourceTree but I haven't found any bugreports about current version (Version 2.3.2)</p>

<p>Did I forget to enable some option somewhere in SourceTree or it should work by itself?</p>
",2,2487546,,
61451022,239219,4/27/2020 2:56,2,644,<git><gitlab><githooks>,How to add server side hook to GitLab?,"<p>I would like to prevent execute a push on GitLab if someone before pushed an other commit. I would force him to pull first, then do an interactive rebase. I thought I need server side git hook.</p>

<p>I red tis article: <a href=""https://docs.gitlab.com/ce/administration/server_hooks.html"" rel=""nofollow noreferrer"">https://docs.gitlab.com/ce/administration/server_hooks.html</a></p>

<p>but I stuck on this line: <code>On the GitLab server, navigate to the project’s repository directory.</code></p>

<p>How can I log into GitLab? I installed <code>gitlab-runner</code> but I have no clue how to ""Log In` and add the pre-receive script to the hooks subdirectory.</p>

<p>Do you have any idea?</p>
",0,239219,0,0
61516868,925913,4/30/2020 6:04,3,64,<github><diff><githooks><github-enterprise>,Is there a way to customize the diff algorithm used by GitHub's compare view?,"<p>I would like to try replacing GitHub's diff algorithm (which I read somewhere is some variant of PatienceDiff, but&mdash;whatever it is) with other experimental / heuristical algorithms. But, specifically in the Compare view. Critically, I want to preserve the style and especially the ability to comment on lines, permalink to lines, etc.</p>

<p>How can I achieve this, if at all, for example using something like GitHub's services or hooks, or some other integration API? Is it even possible?</p>

<p>I'm looking for either a solution or a clear reason this couldn't possibly work. (I'm tending toward the latter because it seems GitHub preprocesses its diffs server-side, returning a purely HTML/CSS result in asynchronously loaded chunks. But, maybe someone cleverer than I might know or see a way.)</p>
",0,925913,0,0
42866247,4686169,3/17/2017 20:06,1,590,<git><hook><ubuntu-16.04><githooks><git-post-receive>,Git post-receive hooks for multiple directories in same server,"<p>I am currently using git  <strong>post-receive</strong> hook to push my code to server.In the future I am planning to deploy another project in this server. So there will be 2 projects locally and each of them will be a separate git repository. How can I transform <strong>post-receive</strong> so when i push from <em>dir1</em> it will push code to <em>dir1</em> directory, and when i push from <em>dir2</em> it will push code to <em>dir2</em> directory.</p>

<p>Until now i have a simple line which gets the pushes i make and send them to the folder directory.</p>
",6,4686169,,
43050989,588492,3/27/2017 15:51,1,713,<git><bash><maven><githooks>,I need some guidance with my Git hook for pre-commit using Bash,"<p>Okay what I am attempting to do for our project is to have the developer choose if they want to commit or compile and then commit their code. This is because we have a code formatter that cleans up everything and currently on deployments many are not compiling first before their merge request. So, by having this file pushed onto all of the projects they will be reminded and have to pick one.</p>

<p>Currently the problem is trying to call the maven build at the moment. I cannot do a cd ../../ up to the project root folder. Suggestions on how to get this to work? Please I don't want to have a debate or discussion over why this was decided I just need to be pointed in the direction of how to get this to work. Thanks.</p>

<pre><code>echo ""CC to Compile and Commit""    ""C to just compile""

while true; do
  read choice

  echo ""Your choice was "" $choice
  if ( ""$choice"" == CC"" ) ; then
    cd ../../
    if [ mvn compile ] ; then
      echo ""Compile was okay.""
      echo ""Continue with git commit.""
    fi
  fi
  break
done
</code></pre>
",3,588492,,
61725006,3025104,5/11/2020 8:07,1,391,<git><npm><githooks><husky><git-husky>,Additional command on Husky Hooks fail,"<p>I am using <code>husky</code> and <code>commitLint</code> to check the commit messages in one of the repo's I work.</p>

<p><strong>package.json</strong></p>

<pre class=""lang-json prettyprint-override""><code>""husky"": {
  ""hooks"": {
    ""pre-commit"": ""lint-staged"",
    ""commit-msg"": ""commitlint -E HUSKY_GIT_PARAMS""
  }
}
</code></pre>

<p>pretty straightforward. However, as I don't wanna create a barrier for the less experienced developers of my team I wanna run a CLI to help them format their commit message IF the hook ""commit-msg"" fails because of bad formatting.</p>

<p>So, I tried the following <code>""commit-msg"": ""commitlint -E HUSKY_GIT_PARAMS &amp;&gt; /dev/null || npx git-cz""</code>
and it executes the second command, but it also closes the cli right after running it.</p>

<p>So, any idea how to implement such thing ?</p>
",2,3025104,,
61725472,11277952,5/11/2020 8:35,1,1668,<git><githooks><husky><git-husky>,Using husky to parse git commit message,"<p>How do I use husky to check for a particular git commit message pattern? Whenever the <code>git commit  -m ""message""</code> command is invoked, I want to parse the message. How could I do this? How could I receive the git commit message and initiate the parsing?</p>

<p>Currently, my package.json has husky included:</p>

<pre><code>""husky"": {
    ""hooks"": {
        ""commit-msg"": ""./shell-scripts/commit-msg-hook.sh &amp;&amp; commitlint -E HUSKY_GIT_PARAMS""
    }
},
</code></pre>

<p>But I am not sure what to do in shell script file. How do I receive the commit message and then parse it?</p>

<p>Here is the shell script, that I am trying. It is very similar to what the <a href=""https://git-scm.com/book/en/v2/Customizing-Git-An-Example-Git-Enforced-Policy"" rel=""nofollow noreferrer"">git documentation</a> has </p>

<pre><code>#!/usr/bin/env ruby

message_file = ARGV[0]
message = File.read(message_file)

echo message

$regex = /([#) #([0-9])* ([A-Z])\w+/

if !$regex.match(message)
puts ""Incorrect format""
exit 1
end
</code></pre>
",10,11277952,,
6002947,443547,5/14/2011 15:50,3,1970,<php><git><hook><gitosis><githooks>,Execute PHP from GIT post-update hook,"<p>I am using GIT on my server and I am trying to get a PHP file to be executed each time I update my repository. I'm trying to use my post-update hook to achieve this.</p>

<p>this is the code I tried:</p>

<pre><code>#!/bin/sh

echo
echo ""**** Pulling changes into Prime [Hub's post-update hook]""
echo

cd $HOME/www || exit
unset GIT_DIR
git pull hub master

exec git-update-server-info

php /path/to/directory/file.php
</code></pre>

<p>I can't seem to get the PHP to execute. Anyone able to shine any light on this?</p>
",0,443547,0,0
24382433,3636942,6/24/2014 9:01,2,489,<git><shell><githooks>,Get current Git remote on my Bash code,"<p>How can I get the current remote for my post-receive hook?</p>

<p>I need to get both my current remote and my current branch:</p>

<ul>
<li>I know how to get my current branch (using: <code>branch=$(git rev-parse --symbolic --abbrev-ref $1)</code> )  </li>
<li>but I don't know how to get my current remote. </li>
</ul>

<p>Any suggestions?</p>
",1,3636942,0,0
61738289,13511993,5/11/2020 20:03,-1,51,<git><githooks>,Is there any way to do RCS keyword replacement using server side hook (git)?,"<p>I am new to githooks.Using githooks, Is there any possible way to obtain the ""Date"" that changes has been pushed into master.Where the obtained ""Date"" needs to be automatically updated into the *.java files whichever has been pushed.</p>

<p>Specifically, the change should look like this:</p>

<p>Before push: `private String DATE=""$DATE$""</p>

<p>After push: `private String DATE=""$DATE: 2020-05-08 18:19:25 $""</p>

<p>Thanks in advance for your help.</p>
",6,13511993,,
43070095,7779848,3/28/2017 12:51,0,415,<git><hook><githooks><tortoisegit><pre-commit-hook>,TortoiseGit with server-sided hooks (through http),"<p>First of all thank you for this wonderful website (yes I'm new, at least as a writer :p).</p>

<p>Since I didn't found here an answer for my problem I will try to ask help directly :) I saw <a href=""https://stackoverflow.com/questions/4372306/git-push-over-http-not-activating-remote-hooks"">here</a> that maybe it will be HTTP related but I don't know this post is quite old now ...</p>

<p><strong>The main problem:</strong> </p>

<p>I want to make some hook to run on the remote server (on a Linux system).</p>

<p>When I try to act like a Client doing with TortoiseGit a clone then trying to commit and push some modifications, all is completed without launching any remote script present in the <code>.git/hooks</code> folder on the remote server repository. I tried with a script named <code>update</code>, and with <code>pre-receive</code>. Those script have a echo ""hello"" and it doesn't print anywhere when launching.</p>

<p><strong>What I've already checked:</strong></p>

<p>The extension "".sample"" is gone, the scripts can be executed, they are own by the good user account, I did manage to make hooks work on the client side (like <code>prepare-commit-msg</code>).</p>

<p><strong>A more detailed example:</strong></p>

<p>In order to go further I did try to commit and push not through TortoiseGit on Windows (like the client) but directly a sort of local testing on the Linux server (to investigate closer to the problem before trying again with TortoiseGit...).</p>

<pre><code>git clone http://{ID}@{serv}.corp/git/{FOLDER}/{REPO}.git .
Cloning into '.'... 
</code></pre>

<p>(the clone is okay), then switch to a test branch</p>

<pre><code>git checkout test_hook
Branch test_hook set up to track remote branch test_hook from origin.
Switched to a new branch 'test_hook'
</code></pre>

<p>(the branch I've created to test hooks)</p>

<p>Commit some random modifications</p>

<pre><code>git commit -a -m ""test command line""

[test_hook a464a3e] test command line
 1 file changed, 1 insertion(+), 1 deletion(-)
 mode change 100644 =&gt; 100755 Makefile
</code></pre>

<p>And finally pushing</p>

<pre><code>git push --progress ""origin"" test_hook:test_hook
Fetching remote heads...
  refs/
  refs/tags/
  refs/heads/
updating 'refs/heads/test_hook'
  from 6d65df53f962a12e8445a137de173f50eeade819
  to   a464a3ef2cfca3648a4b7b4e94f377f13b82f852
    sending 3 objects
    done
Updating remote server info
To http://{ID}@{serv}.corp/git/{FOLDER}/{REPO}.git
   6d65df5..a464a3e  test_hook -&gt; test_hook
</code></pre>

<p>I tried to place the script both in the <code>{FOLDER}/{REPO}.git/hooks/</code> folder and the main <code>{FOLDER}/hooks</code></p>

<p>Even with the hooks script like :</p>

<pre><code>#!/bin/sh
# Testing Server-sided hooks
echo ""Hello""
echo ""Cancelling push.""
exit 1
</code></pre>

<p>The push finished ok and doesn't print anything ...</p>

<p>If you have ideas to help me that will be welcome thanks you :)</p>

<p>PS : Bonus question :</p>

<p>I did try to simply add the script that I did manage to launch <code>prepare-commit-msg</code> to the folder of my repository in <code>{FOLDER}/{REPO}.git/hooks</code>. But why when I clone this repo the local <code>.git/hooks</code> doesn't contain my script but only the samples, why? (that would have been an easy solution to make a script that will be cloned each time locally while cloning the repo.</p>

<p><em>EDIT : formatting</em></p>
",2,7779848,,
61929756,5868745,5/21/2020 7:50,-1,353,<git><github><hook><githooks>,How to block/restrict push to remote master totally,"<ul>
<li>I want to restrict any kind of push from any branch to my master branch.</li>
<li>I want to do all this from client-side</li>
<li>For Example, I have 3 branches master mtest mtest2</li>
<li>I don't want ""git push -u origin master"" to work from any of the branches.</li>
<li>If I have checked out mtest but if I run by mistake ""git push -u origin master"" this should not work.</li>
</ul>

<p>I wrote  the pre-push hook, but it only stops the push if the current branch is master
It doesn't work if you run ""git push -u origin master"" and you are in say mtest branch.
I also tried to see if we can get the push arguments so that we can know to which branch the push is directed but unfortunately, I didn't get that in the arguments received by the pre-push hook.</p>

<p>I need a way to block the push to master branch totally.
But the push to other branches must work as usual.</p>

<p>Any way to do that.</p>
",4,5868745,,
60693713,8040466,3/15/2020 14:02,0,1138,<git><githooks>,How to update commit message in case of `--no-verify`?,"<p>We have written pre-commit hooks for our git repository. But, developers can use <code>--no-verify</code> to bypass the pre-commit hooks, and commit anyways. I was wondering, if git provides some way to update the commit message when the <code>--no-verify</code> flag is present to maybe add <code>Not Hook Verified:</code> in such commit messages? Or some other check that can be added for this scenario?</p>
",1,8040466,,
23416437,3594105,5/1/2014 20:54,1,27,<githooks>,Can a server determine the git version of the user client/agent,"<p>Can I use git hook to determine the version of the client/agent pushing?</p>

<p>I want to deny a push and send a message when the user/client is too old (or too new).</p>
",0,3594105,0,0
60840968,1030542,3/24/2020 23:40,1,74,<git><jenkins><bitbucket><githooks><bitbucket-api>,BitBucket to trigger Jenkins job,"<p>I looked into BitBucket Plugin in Jenkins to have continuous integration setup. 
However, I want to have a wrapper such that everytime a commit is made to BitBucket, how can I figure out the branch name where this commit was made. Instead of having separate jenkins job for each repo, I wanted to capture repo name and branch name in Jenkins which has a corresponding commit in Bitbucket and store this info in MySQL db. </p>

<p>Such that I can poll every day to see which all repos has changes and get a pulse. </p>

<p>Any pointers on how to get the git branch and repo name in Jenkins job?</p>
",0,1030542,0,0
23575356,596204,5/9/2014 23:18,3,2691,<git><githooks><pre-commit>,How to prevent Git from skipping the pre-commit hook when using git commit -a?,"<p>We've got this repo for all our Puppet configs. I wrote the following to validate any changed .pp files and bail out of the commit if validation fails. The pre-commit script runs properly when triggered by <code>git commit</code> but <code>git commit -a</code> seems to skip the hook altogether. We use <code>git commit -a</code> exclusively so this behaviour is a bit of a deal breaker. </p>

<p>Am I doing something wrong? Alternatively, what could I do to duplicate git commit -a's behaviour in the pre-commit script?</p>

<pre><code>#!/bin/bash
# check puppet files for errors before pushing to repo
for name in `git diff --name-only`; do
    if [[ $name == *.pp ]]; then
        path=""$(pwd)/$name""
        puppet parser validate ""$path""
        r=$?
        if [ $r -ne 0 ]; then exit 1; fi
    fi
done
</code></pre>
",3,596204,0,0
23592107,2737033,5/11/2014 11:37,0,152,<node.js><git><deployment><githooks><gitolite>,Gitolite hook to check and deploy,"<p>For my nodejs application, I am trying to run a hook through gitolite which performs the following actions (on the server side):</p>

<ul>
<li>Update the repo to take into account the new changes (git fetch + git reset --hard newref)</li>
<li>Update the application dependencies (bower update, npm update / install)</li>
<li>Check some basic rules (coding rules, unit tests 100% ok, etc). Basically, it runs something like <code>grunt test</code> (jshint, mocha, ...)</li>
<li>Compile everything (<code>grunt build</code>)</li>
<li>Run the application</li>
</ul>

<p>If one of these steps somehow fails, the whole process is stopped, the old application is restored and the push is denied.</p>

<p>My first approach was to add a <strong>pre-receive</strong> hook to this specific repo, but since it is triggered before the gitolite update hook (which checks about your rights), this was bad anyway.</p>

<p>So I now think about using VREFs which kind of work like a secondary <strong>update</strong> hook. So I'm pretty sure it would work like this, however it seems VREFs are usually here to perform only some basic checks, and don't intend to be used as something such a <em>full deployment</em> process.</p>

<p>I've done some research and it seems that usually people use a <strong>post-receive</strong> hook to deploy their app. This means that if something fails, the push is accepted anyway. I really would like to avoid accepting a commit which breaks the application at some point.</p>

<p>Is there a better way to achieve this deployment?</p>
",2,2737033,,
42719264,4011447,3/10/2017 13:12,1,53,<git><githooks>,How to clone hooks from remote repository,"<p>I've some hooks that I have stored in a custom_hooks folder and are part of remote repository stored in a centralized location.
When other developer does a git clone of the repository, the scripts in the custom_hooks folder should be copied to the folder .git/hooks/ in his local system.<br>
I've read that we can create script that would create a symbolic link between custom_hooks folder .git/hooks/.</p>

<p>Wondering how to execute the script or command as part of clone command?</p>

<p>Once a developer runs a git clone of the repository the custom hooks should be automatically copied to the .git/hooks/ without any manual intervention. </p>

<p>Could someone please help me.</p>

<p>Thanks in Advance !!!</p>
",3,4011447,,
5525360,378170,4/2/2011 19:28,1,963,<php><mysql><database><git><githooks>,mysqldump - git hook - what does it allow?,"<p>With mkb user help, I've build this pre-commit hook:</p>

<pre><code>#!/bin/bash -e

DBHOST=dbhost.yourdomain.com
DBUSER=dbuser
DBPASS=dbpass 
DBNAME=dbname

mysqldump -h $DBHOST -u $DBUSER -p $DBPASS -d $DBNAME &gt; sql-version-control/schema.sql 
# the -h means host.
# the -u means user. 
# the -p means pass.
# the -d means database name (same as ""no data"").
git add sql-version-control/schema.sql
</code></pre>

<p>As far as I can understand:</p>

<pre><code>mysqldump -h $DBHOST -u $DBUSER -p $DBPASS -d $DBNAME &gt; sql-version-control/schema.sql
</code></pre>

<p>Will go to my shared (OR local) host, and will do a backup of the atual schema there?</p>

<p>Very often, however, we change the schema locally, and then, we need to apply those changes on the remote server. </p>

<p><strong>Is there anyway I can do this follow this path ? 
Or there is a better way for doing the intended ?</strong></p>

<p>Thanks in advance </p>
",5,378170,0,0
23641700,3495529,5/13/2014 21:15,1,328,<git><githooks>,How to Prompt for Committer Name & E-mail from Git Precommit Hook?,"<p>In our project, we have a common folder that is used by multiple developers in addition to developer specific folders. Once in a while, somebody will have to make changes in this common folder. The git config in this common folder doesn't have the user.name and user.email fields set. </p>

<p>So, whenever the developer makes a commit from common folder, the pre-commit hook prompts for developer's id from which it automatically determines user name and e-mail with the help of another script. Unfortunately, Git picks the previous user name and email for the current commit. For example, consider the scenario below.</p>

<ol>
<li>Developer 1 tries to commit. Pre-commit hook prompts and developer 1 enters his id. Git does the commit. When I check the commit history, the user name and email will be ""unknown"" (assuming that was the very first commit in that folder).</li>
<li>Developer 2 tries to commit after developer 1. Now, commit history will have developer 1's name and e-mail for developer 2's commit.</li>
</ol>

<p>It looks like git already decided on what user name and password to use before calling the pre-commit hook. Is there any way to solve this?</p>

<p>This is the pre-commit hook I have tried:</p>

<pre><code>#!/bin/sh
dev_name=""""
dev_email=""""

git config --remove-section  user #To remove any entry that exists in the config file
read -p ""[pre-commit hook] Shared repo - please enter your ID:"" this_id
#Call the script that determines user name and password from $this_id

#Update git config with the current user's info
git config user.name ""$dev_name""
git config user.email ""$dev_email""
</code></pre>
",8,3495529,,
23896032,1566520,5/27/2014 18:02,0,148,<git><batch-file><jenkins><git-svn><githooks>,Jenkins Git Hook script not being ran,"<p><strong>Disclaimer:</strong>
I am aware there are a million questions and resources about this topic and I have read and tried just about everything I can find. This is my first time using Jenkins. </p>

<p><strong>Background:</strong>
I am using a Git repository and Jenkins. </p>

<p><strong>What I have:</strong>
I have a batch file located in <code>hooks/</code> called <code>post-commit.bat</code>. The contents of the the batch file:</p>

<p><code>#!bin/sh
echo ""hook script started...""
curl http://XX.XX.X.XX:XXXX/job/JenkinsBuild/build?delay=0sec
echo ""hook script ended...""
pause</code></p>

<p><code>JenkinsBuild</code> is the name of the job.</p>

<p>When I run this file from that location it works great and Jenkins does a build. </p>

<p><strong>The problem:</strong>
I need this file to be executed when someone commits or pushes to the repository.
I don't understand how the scripts are executed. From what I've read I am under the impression that as long as it is a executable script it should just work. </p>

<p><strong>What I'm looking for:</strong>
Is there something I am missing here? The other thought I had was that I need to change the the file path after the shebang.  </p>

<p>[Edit]
Also, there are some default example files written that have .sample, I have tried removing the extension and also changing the extension to .bat, neither will run.  </p>
",2,1566520,,
5635004,368328,4/12/2011 12:14,2,1851,<hook><githooks><gitolite>,Gitolite hooks not propagating,"<p>I've been through the extensive gitolite documentation over and over again. This is my configuration :</p>

<p>Git user running gitolite, while I installed Gitolite as another user, which had root privileges. I installed using the gl-system-install method.</p>

<p>Now, I see two copies of hooks/common directory <code>/usr/local/share/gitolite/hooks/common</code> and <code>/home/git/.gitolite/</code> (and I intend to work with the first one for system wide implementation)</p>

<p>The gitolite-source is located at <code>/home/user/gitolite-source</code></p>

<p>I've put in some dummy hooks in the <code>/home/user/gitolite-source/hooks/common/</code> directory (post-udpate, post-update.secondary, post-receive and post-commit). All of these have exec bit set. </p>

<p>If I edit the update hook in this directory and re-run the setup again, the newer update hook (in existing repos) is sym-linked to the update hook in <code>/usr/local/share/gitolite/hooks/common</code>. </p>

<p>But even though any newer hooks in the source/hooks/common directory are copied over to both the hook locations, newer sym-links do not appear in my existing repos.</p>

<p>In short : gitolite copies its own hooks, but neglects mine.</p>

<p>Any idea why?</p>
",0,368328,0,0
61131490,6484367,4/9/2020 22:51,2,427,<bash><git><githooks>,"Need to run a ""hook"" on new Git Tag (Git hook for newly pulled tags)","<p>To begin, I looked at this question which seems to be the only one regarding this topic:</p>

<ul>
<li><a href=""https://stackoverflow.com/questions/5809910/how-do-i-react-to-new-tags-in-git-hooks"">How do I react to new tags in git hooks?</a></li>
</ul>

<p>But I do not understand what hook that is or how it is being used. I simply want to run a little script that will update if I <code>git pull</code> <strong>and new tag are received.</strong></p>

<p>I tried putting it in: <code>.git/hooks/update</code>, <code>.git/hooks/post-receive</code></p>

<pre class=""lang-sh prettyprint-override""><code>#!/bin/bash
exec &lt; /dev/tty

CURRENT_TAG=$(git tag --contains)
echo Test Test
echo ""LATEST_TAG: \""${CURRENT_TAG}""\"" &gt; ""config/latest_tag.yml""
</code></pre>

<p>I would like to use Git hooks if possible. I was thinking of doing <code>alias ""git pull""=""git pull &amp;&amp; ./update_script.sh</code> but I cannot alias a spaced word, n'or can I alias something and enforce the rest of the team to remember it.</p>
",0,6484367,,
23984602,2411515,6/1/2014 21:21,1,176,<node.js><git><vim><coffeescript><githooks>,Spawning vim from a node git hook,"<p>I've got a project purely in coffeescript, with git hooks for deployment also written in cs. I don't really want to break away from the language just to use bash for a quick commit message formatter, but I've got a problem spawning vim from the commit-msg hook.</p>

<p>I've seen <a href=""https://superuser.com/questions/336016/invoking-vi-through-find-xargs-breaks-my-terminal-why"">here</a> that when piping to vim, the stdio is not necessarily set correctly to the tty streams. I get how that could cause a problem, but I don't exactly know how to get vim to load correctly using nodes spawn command. At the moment I have...</p>

<pre><code>vim = (require 'child_process').spawn('vim', [file], stdio: 'inherit')
vim.on 'exit', (err) -&gt;
  console.log ""Exited! [#{err}]""
  cb?()
</code></pre>

<p>...which works fine to spawn a vim process that can r/w from the parents stdio, but when I use this in the hook things go wrong. Vim states that the stdio is not from terminal, and then once opened typing causes escape characters to pop up all over the place. Backspace for example, will produce <code>^?</code>.</p>

<p>Any help would be appreciated!</p>
",0,2411515,,
24044776,2402191,6/4/2014 18:20,1,43,<git><automation><githooks>,How can I tell from which branch the push is coming from?,"<p>I'm trying to limit pushes to the <code>master</code> branch by only allowing <code>push</code> commands that come from the <code>test</code> branch.</p>

<p>How can I tell from which branch the <code>push</code> is coming from?</p>
",1,2402191,,
24062644,369437,6/5/2014 14:18,0,449,<git><gruntjs><githooks><grunt-contrib-requirejs>,Adding git add to Grunt githooks plugin,"<p>I am currently working on implementing a pre-commit hook with <a href=""https://www.npmjs.org/package/grunt-githooks"" rel=""nofollow"">grunt git hooks</a>. I am new to using this plugin and it's a bit unclear if I can use this plugin to do what I initially set out to do.  </p>

<p>Currently, I have two grunt tasks triggering for every git commit as below.</p>

<pre><code>    githooks: {
        all: {
            'pre-commit' : 'compass requirejs'
        }
    }
</code></pre>

<p>Above generates git pre-commit hook as below.</p>

<pre><code>#!/usr/bin/env node

// GRUNT-GITHOOKS START
var exec = require('child_process').exec;

exec('grunt compass requirejs', {
       cwd: 'C:\\development\\Sourcecode\\qnb-home'
     }, function (err, stdout, stderr) {

  console.log(stdout);

  var exitCode = 0;
  if (err) {
    console.log(stderr);
    exitCode = -1;
  }

  process.exit(exitCode);
});

// GRUNT-GITHOOKS END
</code></pre>

<p>Whilst above ensure the tasks are been run before the git commit,  it does not add the newly created minified files (compiled SASS and r.js files) to the existing commit. </p>

<p>So ,I would like to add a <code>git add --all</code> to the pre-commit hook using grunt githooks. Is it this possible to do? Any comment/answer would be highly appreciated. </p>
",1,369437,0,0
5823772,67914,4/28/2011 19:15,30,22778,<git><githooks>,Append ticket number using git commit hooks?,"<p>So my branch is named after bugtracker ticket number, something like ""issue-1234"", and we have a convention to always write down ticket number in commit message. I'm wondering if it's possible to append the ticket number in commit message automatically when I'm working on an issue-* branch without me explicitly typing it. </p>

<p>I looked at git commit hooks, namely pre-commit, prepare-message, and post-commit, and none of them seem to be able to do what I wanted. Post-commit hook comes close, but you cannot modify the message that's committed with -m.</p>

<p>To reiterate, I'm wondering if this is possible:</p>

<p>On branch: issue-1234</p>

<pre><code>git commit -a -m""fixed this pesky issue""
</code></pre>

<p>After the commit, in git log, it shows the message as:</p>

<pre><code>fixed this pesky issue. ticket number: #1234
</code></pre>
",0,67914,0,0
5840768,172406,4/30/2011 9:10,6,1997,<git><githooks>,"Can a git hook be used to replace passwords before staging, adding, or pushing?","<p>Can a git hook be used to replace passwords before staging, adding, or pushing?</p>

<p>I want passwords to be replaced by templates before committing or pushing.</p>

<p>for instance, say I prefix plain texts password with 'PWDEXLUDE_password' and the hook replaces it with &lt;>, so during the deployment phase a script can look for the template, lookup in a database for the password, and substitute that template with production password.</p>

<p>Is something like that available or possible with git?</p>
",2,172406,0,0
5847195,242135,5/1/2011 7:49,2,356,<visual-studio-2010><git-submodules><githooks><tortoisegit>,What githooks are called on submodule update?,"<p>So here's the situation.  I have a git repository with multiple submodules.  Both the top level directory and all of the submodules contain Visual Studio 2010 solutions.</p>

<p>The top level repository depends on the submodules being up to date and the submodules need to be rebuilt every time they are updated.  What I want to do, since there are an arbitrary number of submodules, is to make some kind of post-update hook in git to compile the submodule that was just updated.</p>

<p>So my question is this: what hooks (if any) are called when a submodule is updated?  It seems like post-checkout might be what I want but I'm not sure.</p>

<p>We're using TortoiseGit with Git for Windows(msysgit) as the backend if that makes a difference.</p>
",0,242135,,
61618486,5433628,5/5/2020 16:49,12,11769,<git><githooks><git-push>,git pre-push hook: run test on each new commit,"<h2>Context</h2>

<p>I want to ensure that each commit I push pass tests. </p>

<p>I want to check this on my (client) side, i.e. before commits are even pushed (so I don't want to rely on CI tools).</p>

<h2>Problem</h2>

<p>Currently, I have implemented a <code>pre-commit</code> hook that run my tests, so that I cannot even <em>commit</em> a broken state.</p>

<p>However, my test suite takes more than a few seconds to run. It is that much time I need to wait prior to writing my commit message. This makes it <a href=""https://stackoverflow.com/questions/4196148/git-pre-push-hooks#comment4537300_4196626"">impractical to use</a> on a daily basis; both because I frequently commit, and that I sometimes purposefully want to commit a broken state to be squashed later (I know about <code>git commit --no-verify</code>, but that is not the point).</p>

<h2>Question</h2>

<p>So instead of checking each commit <em>one at a time</em> (at creation), I want to batch-test them before pushing.</p>

<p><strong>How to implement a <code>pre-push</code> hook that run my test suite <em>for each new commit</em> to be pushed?</strong></p>

<p>(For the sake of simplicity, say that passing tests means <code>test/run_tests.sh</code> returns <code>0</code>.)</p>
",2,5433628,0,0
61806558,4659400,5/14/2020 20:10,-2,368,<git><github><githooks>,How can I find out what what branch is being pushed to during a Git hook?,"<p>I am setting up some git hooks being written in <code>bash</code>, and I want to know what branch is about to be pushed to using a <code>pre-push</code> hook.</p>

<p>Upon using the command <code>git push origin &lt;branch&gt;</code> or <code>git push</code>,<br>
The pseudo logic would go something like this:</p>

<pre><code>if [ remote branch about to be pushed to = master ] then;
  // do something
fi
</code></pre>

<p>How would I go about doing this?</p>
",4,4659400,,
24465137,234780,6/28/2014 8:41,1,1581,<git><githooks><gitolite>,How to enable git multimail hook in gitolite,"<p>I've cloned the git-multimail repo on my server, symlinked <code>post-receive</code> and <code>git_multimail.py</code> to <code>~/.gitolite/hooks/</code></p>

<p>Then ran <code>gitolite setup --hooks-only</code></p>

<p>In my <code>gitolite-admin/conf/gitolite.conf</code> I've added: </p>

<pre><code>repo gitolite-admin
   config multimailhook.environment = gitolite
   config multimailhook.mailingList = 'list@example.com'
   config multimailhook.refchangelist = user@example.com,user@example.com
   RW+     =   user
</code></pre>

<p>And enabled in <code>~/.gitolite.rc</code>:</p>

<pre><code>GIT_CONFIG_KEYS                 =&gt;  'multimail.*',
</code></pre>

<p>Sendmail is properly delivering my other emails.</p>

<p>I'm expecting mails on commits, but nothing happens.
How to debug this?</p>

<p>I can see that there's an option to enable logging to <code>sys.stdout</code> in <code>post-receive</code>, but where can I see the logs?</p>
",0,234780,0,0
6112852,370290,5/24/2011 15:25,1,6309,<git><deployment><githooks>,git website update strategy - how to sync dev and live repositories?,"<p>Here is how I have been constructing my git-powered-website update and backup strategy:</p>

<p>I have SSH access to the Linux VPS where the website is hosted. Here is what I did:</p>

<p>1) AT THE WEBSITE SERVER - Created a git repo, at the proper website folder (one level before public root):</p>

<pre><code>cd /path/to/website
git init
git add -A
git commit -m ""Website as of today.""
</code></pre>

<p>2) AT THE BACKUP SERVER - Created a mirror repo, for backup purposes, at another VPS:</p>

<pre><code>git clone --mirror ssh://user@example.com/path/to/website website_backup
</code></pre>

<p>Note that a mirror repo is also a bare repository (no checked out working tree).</p>

<p>3) SET UP CRONJOBS - One at the website server, to absorb wesbite file system changes (changes can be done by the scripts, by FTP, etc). It runs the following bash script, daily:</p>

<pre><code>#!/bin/bash
date=$(date +%d/%m/%Y)
cd /path/to/website
git add -A -v
git commit -m ""Changes done at to website at ${date}""
exit 0
</code></pre>

<p>This way, the live website changes are committed to the repository master branch.</p>

<p>Another cronjob is set up at the backup server. It runs the following script daily, right after the other one above:</p>

<pre><code>#!/bin/bash
cd /path/to/website_backup
git fetch -u ssh://user@example.com/path/to/website
exit 0
</code></pre>

<p>This way I have at the backup server a daily updated ""backup"", which is also a git repo, allowing me to move backwards in time if necessary. I don't need to be much afraid of losing stuff by accidental overwrites or deletions... and the process is automated!</p>

<p>I receive daily a couple of e-mails from the cronjobs. It allows me to check what has been changed in the website, and to acknowledge that both cronjobs are running correctly. (Another cronjob is set up to perform the database backup.)</p>

<p>4) SET UP DEVELOPMENT (LOCAL REPO + WORKING TREE) - I checked out a copy directly from the website, and then created a new local branch called ""dev"":</p>

<pre><code>git clone ssh://user@example.com/path/to/website website_local
git checkout -b dev
</code></pre>

<p>Now, I can play with the development branch, and do my work.</p>

<p>From this point, I'd like to know:</p>

<ul>
<li>How to push my changes back to the live website?</li>
<li>How to get changes from the website back and merged to my development branch?</li>
</ul>

<p>In short: how to properly sync live site with dev branch without messing things up?</p>
",5,370290,0,0
6122932,72530,5/25/2011 10:24,12,35313,<git><bash><githooks>,execute git command inside bash script,"<p>I am writing <code>gitosis</code> post-push hook for central repository </p>

<p>which pulls updates from central repository to testing enviroment</p>

<p><code>nano /var/git/repositories/holding.git/hooks/post-update</code></p>

<pre><code> #!/bin/bash

 cd /var/vh/holding;
 git reset --hard;
 git checkout testing;
 git pull;
</code></pre>

<p>here what I get after push on my client (development VM)</p>

<pre><code># blah ...
Counting objects: 57, done.
Compressing objects: 100% (24/24), done.
Writing objects: 100% (30/30), 3.42 KiB, done.
Total 30 (delta 18), reused 0 (delta 0)
fatal: Not a git repository: '.'
fatal: Not a git repository: '.'
fatal: Not a git repository: '.'
fatal: Not a git repository: '.'
To git@cheby.ru:holding.git
   233b5a2..0f46cd8  testing -&gt; testing
</code></pre>

<p>Obviously, my attempt to tell git, where it should do pull, failed.</p>

<p>What is correct way to run git command for a specified working copy in bash script?</p>
",1,72530,0,0
43160956,6068447,4/1/2017 19:14,0,420,<php><git><githooks>,GIT Ignore and GIT Hook - File is replaced after a commit-push,"<p>My GIT repository is located <code>/var/repo/myRepo.git</code>. I set a GIT hook <code>post-receive*</code> to copy the files from my repository to the folder of my project</p>
<p><code>git --work-tree=/var/www/laravel --git-dir=/var/repo/myRepo.git checkout -f </code></p>
<p>Each time I commit and push something on the server, the file <code>var/www/laravel/config/services.php</code> is replaced and the modification I did on the server is replaced by my local copy.</p>
<p>For instance, if I manually modify the following file like this <strong>on the server</strong> (by ssh session)</p>
<h3>var/www/laravel/config/services.php</h3>
<p><code>This is the modified content of this file</code></p>
<p>It will be like that after a commit and push</p>
<h3>var/www/laravel/config/services.php</h3>
<p><code>This is the default content of this file</code></p>
<p>I tried to add <code>/config/services.php</code> to my <code>.gitignore</code> but it does not seem to work.</p>
<h3>.gitignore</h3>
<pre><code>/node_modules
/public/storage
/public/hot
/storage/*.key
/vendor
/.idea
Homestead.json
Homestead.yaml
.env
/config/services.php
</code></pre>
<p>What should I do so this file is not replaced each time I commit something on my server ?</p>
",0,6068447,,
43180797,5290782,4/3/2017 9:17,1,900,<jenkins><bitbucket><jenkins-plugins><githooks><bitbucket-api>,How to hook jenkins in bitbucket,"<p>I am not able to find how to add hooks of jenkin in bitbucket,
Previously there was a link in bitbucket for hooks but now it is missing </p>

<p>Please help</p>

<p>UPDATE:-
 All the solution that are given on stackoverflow are outdated as bitbucket has change few feature</p>
",0,5290782,,
6394366,676939,6/18/2011 6:41,3,178,<git><githooks>,Problem with git hook for updating site,"<p>I have set up a website on a server and use git to maintain it. For this reason I have created two git repositories, a bare one at <code>$HOME/site</code> to which I push and a non-bare one at <code>/var/www</code> which is supposed to pull from the bare repository every time a change is made.</p>

<p>In order to update the non-bare repository automatically, I have created and granted executon permission to a <code>post-update</code> git hook in the bare repository that contains the following:</p>

<pre><code>#!/bin/bash

cd /var/www
git pull
</code></pre>

<p>However, after every push to the bare repository I can see the following on my terminal:</p>

<pre><code>remote: fatal: Not a git repository: '.'
</code></pre>

<p>Is there anything I have omitted or done wrong regarding this hook?</p>
",4,676939,0,0
24707658,3831151,7/11/2014 22:39,3,1437,<git><github><githooks>,GitHub Enterprise Hook to only allow certain users to commit?,"<p>Does anyone know of a hook for GitHub Enterprise which will allow me to only have certain accounts on a repository commit to certain branches? Sorry if this is a basic question just kicking off this GitHub stuff.</p>

<p>What I am setting up is a public project - 
All engineers can push and pull
Master Branch is controlled by Dev Lead and is only the shipping code.
Development branch is where all dev happens. </p>

<p>I want to make sure that and engineer not authorized does not commit to master. and if they try it will be kicked back</p>
",1,3831151,0,0
62070180,12897284,5/28/2020 16:49,0,542,<python><git><githooks>,How to prevent push to master branch using python?,"<p>I have written a pre-push hook in python which prevents push to the master branch partially. i.e when in feature branch and given this command <code>git push origin master</code>,the files are pushed. </p>

<p>In the below image when the head is in master branch, the push is prevented.
<a href=""https://i.stack.imgur.com/zoVoC.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/zoVoC.jpg"" alt=""when the user is in master branch, the push is prevented""></a></p>

<p>But when the head is in feature1 branch, the push to master is not prevented.
<a href=""https://i.stack.imgur.com/lJrNp.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/lJrNp.jpg"" alt=""enter image description here""></a></p>

<p>My code so far :</p>

<pre><code>#!/usr/bin/env python

import sys
import re
from subprocess import check_output

branch = check_output(['git', 'symbolic-ref','--short','HEAD']).strip()
print('branch-name:',branch.decode('utf-8')) #this prints the current branch: feature (if in feature) 


if ((branch.decode('utf-8')) != 'master'):
    print('into if clause')
    print('push to remote successful')
    sys.exit(0)

else :
    print('into else clause')
    print('you are not allowed to push to the master branch')
    sys.exit(1)
</code></pre>

<p>I want to modify the code in such a manner that following commands must not be allowed(irrespective of the branch it is in) : <code>git push --force origin master</code> ; <code>git push --delete origin master</code> ; <code>git push origin master</code> ; <code>git co master</code> ; <code>git push --force origin</code>. Thanks in advance.</p>
",4,12897284,,
24747350,1778465,7/14/2014 22:54,4,1212,<git><sh><githooks><git-post-receive>,Git post-receive [[ not found,"<p>I have a git hook (<code>post-receive</code>), that looks like this:</p>

<pre><code>#!/bin/sh
cd /home/vservices
while read OLDSHA NEWSHA REF ; do
    if [[ ""$NEWSHA"" == ""0000000000000000000000000000000000000000"" ]]; then
        git --git-dir=/home/vservices/.git --work-tree=/home/vservices fetch -p origin
    else
        git --git-dir=/home/vservices/.git --work-tree=/home/vservices pull
    fi
done
</code></pre>

<p>And I am getting this error message when I run <code>git push dev :test2</code>:</p>

<pre><code>remote: hooks/post-receive: 10: [[: not found
remote: Your configuration specifies to merge with the ref 'test2'
remote: from the remote, but no such ref was fetched.
</code></pre>

<p>I don't know much about <code>sh</code>, so what am I doing wrong?</p>
",0,1778465,,
24958708,350106,7/25/2014 15:00,1,34,<githooks>,Why isn't my git hook firing?,"<p>I'm trying to write a git hook that fires on <code>git pull</code>, <code>git merge</code>, and <code>git checkout</code>, when my <code>.emacs</code> file changes. For some reason, the hook never seems to fire.</p>

<p><a href=""https://github.com/mcandre/dotfiles/blob/master/hooks/post-merge-checkout"" rel=""nofollow"">https://github.com/mcandre/dotfiles/blob/master/hooks/post-merge-checkout</a></p>
",0,350106,0,0
62270857,7305128,6/8/2020 20:43,1,47,<git><github><githooks><git-remote>,Automatically merge merge-commits to parallel branches on remote,"<p>I have a master branch with feature <code>A</code> and <code>B</code>, and I recently created a new version of <code>B</code>, called <code>B'</code>. The code for <code>B</code> and <code>B'</code> cannot exist on the same branch since the contents are different but still need to retain the existing filenames. Since <code>B</code> is still supported and in use, I cannot entirely deprecate it either. Eventually, the goal is to migrate all users from <code>B</code> to <code>B'</code>, but that will take a considerable amount of time. Hence, my team is strongly considering maintaining two separate ""master"" branches -- <code>(A &amp; B)</code> and <code>(A &amp; B')</code>.</p>

<p>The problem is that since there are two branches, whenever maintenance fix is made to A, I'd need to make two separate pull requests, which can quickly become cumbersome. Is there a way to create a remote-side hook that listens to merge commits in one branch (i.e. whenever a PR related to feature A is merged) and automatically propagate that merge to the other branch?</p>

<p>I am just starting to explore options, so other scalable ideas are welcomed. If anyone could point me to useful resource, that would be much appreciated too. Thanks.</p>
",5,7305128,,
25197236,3744125,8/8/2014 6:28,0,774,<git><jenkins><githooks><bitbucket-server>,Reset the commit in stash if Jenkins build fail,"<p>I am using the Stash add-on 'Stash Webhook to Jenkins' to trigger a Jenkins build when a developer pushes his code to a feature branch.</p>

<p>I want to reset to the previous commit if the Jenkins build fails. Only if the build succeeds the push should take place. Is there any add-on available for this or any other way?</p>
",0,3744125,,
25208729,299375,8/8/2014 17:12,1,4060,<deployment><composer-php><githooks>,How to update projects with composer support?,"<p>I hope the question is somehow explaining, what I want to do. If not, I'll try to give a more detailed explanation:</p>

<p>I am currently migrating a big project from SVN to Git. In this project, all the depencencies where stored in different folders and where commited to the SVN repo. I already learned, that <a href=""https://getcomposer.org/doc/faqs/should-i-commit-the-dependencies-in-my-vendor-directory.md"" rel=""nofollow"">you should not put the vendors folder in your repo</a>. But how would I than update the depenencies? In another ressource I read, that you should only versioning the <code>composer.lock</code> file. How about the <code>composer.json</code> file?</p>

<p>Here is the strategy, I had in mind:</p>

<ul>
<li>Excluding the vendor folder in the <code>.gitignore</code> file</li>
<li>Adding <code>composer.json</code> and <code>composer.lock</code> file to the repo</li>
<li>Adding a composer_update.php file to use it in a post-receive hook</li>
</ul>

<p>When we have to update some dependencies, we have than to do the following:</p>

<ul>
<li>Updating the <code>composer.json</code> file</li>
<li>Running <code>composer update</code> locally to update the <code>composer.lock</code> file (or the <code>composer_update.php</code> script in your local dev instance)</li>
<li>Pushing the changes to Stash/Bitbuckt/Github, which will than execute the <code>composer_update.php</code> script through the post-receive hook</li>
</ul>

<p>Would you recommend something like this, or is there a better way to do it? I am sorry, but I am really new to composer.</p>
",7,299375,,
62505480,10016471,6/21/2020 23:21,0,48,<bash><git><githooks><git-tag>,post-receive is not being executed,"<p>I am working on post-receive hook and git tag and I found a sample post-receive from <a href=""https://stackoverflow.com/questions/55278195/trigger-something-in-post-receive-only-when-new-tag-is-added"">Trigger something in post-receive only when new tag is added</a> .
However, when I create a tag
<code>git tag -a v0.0.1-test -m 'test tag1' and git push origin v0.0.1-test</code></p>
<p>nothing happened. I was expecting the echo command to be triggered. Please help me to understand why it did not execute. (I already did chmod +x post-receive)</p>
<pre><code>#!/bin/sh
#

read oldrev newrev ref

if [[ &quot;0000000000000000000000000000000000000000&quot; == $oldrev ]] &amp;&amp; [[ $ref == refs\/tags\/* ]];
then
    echo &quot;New tag added&quot;
fi
</code></pre>
",7,10016471,,
25217347,1612432,8/9/2014 9:58,10,4475,<git><githooks><pre-commit>,Modify file before commit with pre-commit hook,"<p>I am trying to write a pre-commit hook that modify a line in my code but I do not know even from where to start.</p>

<p>The problem is:</p>

<p>I have a <code>KEY</code></p>

<pre><code>public static final String APP_KEY = """"; //DELETE THE KEY BEFORE COMMIT!!!
</code></pre>

<p>In order to avoid publishing the KEY to the repository I've think maybe git hooks are the thing we need instead of delete the key manually. I've take a look at <a href=""http://git-scm.com/book/en/Customizing-Git-Git-Hooks"" rel=""nofollow noreferrer"">Customizing git hooks</a> but I do not know how to write the hook.</p>

<p>Is there a way to before commit the changes, delete the KEy and after the commit write the key again?</p>
",1,1612432,0,0
43279311,4204133,4/7/2017 13:23,1,294,<git><githooks><github-desktop>,Git hook not completing on Github Desktop for mac,"<p>My hook works fine on git CLI.</p>

<p>Adding <code>echo 'Running precommit hook' &gt; ~/Desktop/hello.txt</code> to the hook makes that file appear when I commit with the GUI, so pre-commit is running.</p>

<p>However my next line in the hook is <code>gulp --production</code>.
That never seems to run, and I can't establish why.</p>

<p>Including the full path to gulp <code>/usr/local/bin/gulp --production</code> doesn't fix it.</p>

<p>Replacing shebang <code>#!/bin/sh</code> with <code>#!/usr/bin/env sh</code> doesn't fix it.</p>

<p>.git/hooks/pre-commit permissions are <code>-rwxr-xr-x</code>.</p>
",0,4204133,,
6298364,123695,6/9/2011 19:46,9,5521,<git><permissions><merge><githooks>,Fix permissions with git post-merge,"<p>On one server I work on, we must log in as root (for reasons I won't get into here). We have a git repository set up which is used for the web server, but since files are created as root, files modified by git have the wrong permissions.</p>

<p>I created an incredibly simple post-merge hook which I thought would solve the problem.</p>

<pre><code>#!/bin/bash
. git-sh-setup
chown -R www-data:www-data $GIT_DIR
</code></pre>

<p>I dropped this into <code>.git/hooks/post-merge</code> with execute permissions, but the file never seems to run. This is the first time I've tried to set up a hook, so maybe I'm missing something obvious.</p>

<p>One thing I did notice is that most hooks had a <code>.sample</code> file, while post-merge did not. (git version 1.7.4)</p>

<p>Thanks in advance!</p>
",6,123695,0,0
24827992,1007455,7/18/2014 14:55,0,758,<python><git><githooks>,"Git diff call in pre-commit throws ""fatal: unable to read [SHA1]""","<p>I am working in windows and attempting to run a git diff command in the pre-commit script (Python) of a repository. My Python call looks like this:</p>

<pre><code>repo_dir = 'D:/git/current_uic/src/gtc/resource'
cmd = ['diff', '--name-only']
print(Popen(['git', '--git-dir={}'.format(repo_dir + '/.git'), 
             '--work-tree={}'.format(repo_dir)] + cmd,
            stdin=PIPE, stdout=PIPE).communicate())
</code></pre>

<p>Whenever I go to commit in the ""D:/git/current_uic/src/gtc"" repo, I get the following:</p>

<pre><code>fatal: unable to read 6ff96bd371691b9e93520e133ebc4d84c74cd0f6
</code></pre>

<p>Note that this is a pre-commit hook for the 'D:/git/current_uic/src/gtc' repository and that 'D:/git/current_uic/src/gtc/resource' is a submodule of 'D:/git/current_uic/src/gtc'. Also note that if I pop open Git bash and run the following:</p>

<pre><code>git --git-dir=D:/git/current_uic/src/gtc/resource/.git 
    --work-tree=D:/git/current_uic/src/gtc/resource diff --name-only
</code></pre>

<p>or if I just run the script straight from Git bash I get exactly what I want, regardless of working directory.</p>

<p>Any ideas as to what is going on here?</p>
",0,1007455,,
62150679,7965,6/2/2020 11:10,1,467,<github><githooks><github-app>,Github custom pull request template,"<p>Currently, Github supports a pull request template present in the default branch(<a href=""https://help.github.com/en/github/building-a-strong-community/creating-a-pull-request-template-for-your-repository"" rel=""nofollow noreferrer"">Link</a>). In our team, we want to configure pull request template based on the folder or file modified.</p>

<p>Example configuration we want to support:</p>

<pre><code>documentation/ : DOCUMENTATION_TEMPLATE.md
src/**/*.h     : INTERFACE_TEMPLATE.md
src/**/*.cpp   : IMPLEMENTATION_TEMPLATE.md
.config/       : CONFIGURATION_TEMPLATE.md
</code></pre>

<p>From the Github <a href=""https://help.github.com/en/github/building-a-strong-community/creating-a-pull-request-template-for-your-repository"" rel=""nofollow noreferrer"">documentation</a> for Pull requests templates, this seems to be not possible. Can this be achieved either by using Github Webhooks or Github apps?</p>
",1,7965,,
62157241,5555799,6/2/2020 16:56,0,230,<git><git-submodules><githooks>,git pre-receive hook fails to execute git commands for other repository on server,"<p>I have a git server on my local docker, where I host 2 repositories: <code>main.git</code> and <code>sub.git</code>. <code>sub</code> is a submodule in the <code>main</code> repo. Both of them are bare. I try to add a pre-receive hook to my <code>main</code> repo, that checks if I don't reference a missing submodule revision (for example if someone forgets to push the submodule before pushing the main repo). I use this script: <a href=""https://gist.github.com/T3sT3ro/902d67f29d2c913b3fef6034776777e0"" rel=""nofollow noreferrer"">https://gist.github.com/T3sT3ro/902d67f29d2c913b3fef6034776777e0</a> which is a slightly fixed version of this one:  <a href=""https://gist.github.com/bagage/bdca3d4b66d43db7a5e3"" rel=""nofollow noreferrer"">https://gist.github.com/bagage/bdca3d4b66d43db7a5e3</a>.</p>

<p>Unfortunately, this script doesn't work. Any git command executed for the <code>sub</code> repo fails if launched from inside the <code>main</code> repo's <code>pre-receive</code> hook. When run by hand everything seems fine. For example executing <code>git log|show</code> result in <code>bad object HEAD</code> and <code>git branch</code> in <code>fatal: missing object 78f5da8ed1f83047d0f68fe17e5eaf86060038c3 for refs/heads/master</code>, even though running <code>git branch --contains 78f5da8ed1f83047d0f68fe17e5eaf86060038c3</code> by hand in <code>sub</code> repo works as it should: prints <code>* master</code>.</p>

<p>running <code>git fsck</code> for sub repo in hook (with debug varibles set) returns this:</p>

<pre><code>remote: 16:45:32.575940 trace.c:318             setup: git_dir: .
remote: 16:45:32.575961 trace.c:319             setup: git_common_dir: .
remote: 16:45:32.575967 trace.c:320             setup: worktree: (null)
remote: 16:45:32.575971 trace.c:321             setup: cwd: /var/www/git/sub.git
remote: 16:45:32.575976 trace.c:322             setup: prefix: (null)
remote: 16:45:32.575982 git.c:344               trace: built-in: git fsck
remote: error: HEAD: invalid sha1 pointer 78f5da8ed1f83047d0f68fe17e5eaf86060038c3
remote: error: refs/heads/master: invalid sha1 pointer 78f5da8ed1f83047d0f68fe17e5eaf86060038c3
remote: notice: No default references
remote: 16:45:32.580070 read-cache.c:1925       performance: 0.000004548 s: read cache ./index
remote: 16:45:32.580107 trace.c:420             performance: 0.004374272 s: git command: git fsck
remote: dangling commit 468626a3126e8139a08727ff3c1b25f37e23f957
</code></pre>

<p>I tried changing hook's owner and group to be the same as for other files, but it doesn't work. It kinda seems like some kind of security mechanism, but on the other hand I can <code>touch</code> files in the <code>sub</code> repo. From the fsck log above we can also see that <code>78f5da...</code> is present somewhere...</p>

<p>repro goes like this: create main and sub repo, push some initial commits to both, add sub as submodule to main, commit on sub without pushing, in main add sub (main should now reference the local commit of sub repo), try to push main repo(fails - expected), push sub repo, try to push main repo(fails again - now with those errors).</p>

<p>git version on server: 2.17.1</p>
",5,5555799,,
6574594,616225,7/4/2011 17:46,0,104,<git><githooks>,How (and where) should a hook be defined to autoupload a website to production?,"<p>I have a central server acting as a git server, and I push my changes from another pc. I work in parallel with another developer, too. He prepared a hook in the git server so when we pushed it pulls any change.</p>

<p>What we would want to do now is to also pull from a production server. We work with two main branches (master and stable), so when we decide to commit something as stable, we would like the production server to pull it in any way. I'm not plenty sure if it is possible to pull on demand, but I have found little to no information about this aspect. Do you have any idea? Thanks in advance.</p>
",0,616225,0,0
25062860,1783805,7/31/2014 15:22,19,8727,<git><githooks>,Create global pre-commit hooks for entire team,"<p>How can I create a global pre-commit hook that is available for everyone in the team to use?
Basically, I want that anytime someone clones the remote repository he should get this global pre-commit hook by default.</p>

<p>I came across this <a href=""https://stackoverflow.com/questions/1977610/change-default-git-hooks"">change default git hooks</a>, <a href=""https://stackoverflow.com/questions/2293498/git-commit-hooks-global-settings?rq=1"">Git commit hooks - global settings</a>  and this <a href=""https://coderwall.com/p/jp7d5q"" rel=""noreferrer"">https://coderwall.com/p/jp7d5q</a> where it suggests to create a template directory having common hooks and set <em>init.templatedir</em> to point to this directory. However this is useful only for setting default hooks for yourself on your own machine. How can the pre-commit hook be made available to entire team by default?</p>
",1,1783805,0,0
6838239,160270,7/27/2011 0:36,2,570,<git><configuration><githooks><pre-commit-hook>,How can I propogate my git configuration/hooks?,"<p>I recently decided that I wanted all people who commit to my repository to fill in a simple commit log. Basically I want them to fill in a form to the commit message.</p>

<p>A quick search found me: 
<a href=""https://stackoverflow.com/questions/3966714/how-can-i-change-the-default-comments-in-the-git-commit-message"">How can I change the default comments in the git commit message?</a></p>

<p>Now, I can put in a hook to generate a default commit message with my form outline.</p>

<p>However, I understand that for security reasons, git won't let me push a hook to the others who are connected to my repository.</p>

<p>Alternately, I can change my commit.template to specify a template, and I will be presented with a form to fill out whenever I do a commit. </p>

<p>Again, I can't seem to be able to change the configuration on other peoples machines.</p>

<p>Is there any way to give everyone the same default commit message in git without them setting it up themselves?</p>
",1,160270,,
35918054,5979201,3/10/2016 13:35,-1,114,<git><hook><githooks><git-commit><pre-commit-hook>,Git hooks to display a message everytime someone commits a .doc file,"<p>I would like to know how to display a message using Git hooks every time they commit a Word document ( .doc/.docx) file , to let people know that they should rather commit .xml file.</p>
",0,5979201,,
62412563,5161457,6/16/2020 15:52,9,3142,<laravel><git><githooks><git-pull><file-ownership>,Prevent git from overwriting file owner upon git pull,"<p>I've seen a handful of similar questions on here, but none of the solutions given seem to be working... wondering if they're outdated, or this case is somehow different...so I wanted to open up a new thread to talk about it. </p>

<p>I've run into a frustrating problem where, every time I perform and <code>git pull</code>, it changes the owner to the pull-er's user. What happens then is that the site shows the following error:</p>

<p><code>Warning: file_get_contents(/var/www/html/wp-content/themes/&lt;my-theme&gt;/resources/views/&lt;changed-file&gt;): failed to open stream: Permission denied in /var/www/html/wp-includes/class-wp-theme.php on line 1207</code></p>

<p>which can only be fixed by running <code>chown www-data</code> on the changed file.</p>

<p>This will become an issue when more people begin to work on the site, or when important files are change (default template/header/footer..), and the site goes blank until chown is run.</p>

<hr>

<h2>Site details</h2>

<p>Laravel, wordpress, ubuntu 18, armor hosting </p>

<p>Git repo stored in custom theme</p>

<hr>

<p>I've tried a few solutions, but none seem to work, (perhaps because they're implemented incorrectly..)</p>

<h2>Solutions I've tried</h2>

<p>1: set filemode to false - I set filemode to false, locally and globally, on my local machine and the server in question. I've tried changing the case to ""fileMode"" too.</p>

<p>2: implement post-update hook - I added a post update hook to automatically update the file permissions/ownership. Here's the script (note that the git repo is in the custom theme):</p>

<pre><code>#!/bin/sh

# default owner user
OWNER=""www-data:www-data""

# changed file permission
PERMISSION=""664""

# web repository directory
REPO_DIR=""/var/www/html/wp-content/themes/quorum-theme""

# remote repository 
REMOTE_REPO=""origin""

# public branch of the remote repository
REMOTE_REPO_BRANCH=""master""

cd $REPO_DIR || exit
unset GIT_DIR
files=""$(git diff-tree -r --name-only --no-commit-id HEAD@{1} HEAD)""
git merge FETCH_HEAD

for file in $files
do
  sudo chown $OWNER $file
  sudo chmod $PERMISSION $file
done

exec git-update-server-info
</code></pre>

<hr>

<p>Let me know if there is anything else worth trying, or if you notice an issue with my code...</p>

<p>All the best,</p>

<p>Jill</p>
",3,5161457,0,0
6870910,146272,7/29/2011 9:05,3,942,<git><testing><githooks>,How to have git disregard unstaged changes on a post/pre-commit hook,"<p>I am trying to do the <em>commit should pass all tests to succeed</em> automation in my rails project.
The problem is that I use <code>git add --patch</code> quite a lot before I commit and I want my tests to only run on the staged changes.</p>

<p><strong>Solution 1:</strong>
do a <code>git stash --keep-index</code> on the pre-commit or a simple <code>git stash</code> on the post commit, followed by the hook (<code>rake tests</code>) and <code>git stash pop</code>.
This means that I'll have to wait for it to finish and while it runs, I won't have access to my unstaged changes.</p>

<p><strong>Solution 2:</strong> I setup a new local repo (the tester) and setup the post-commit hook from the first repo (the development) to push to the tester repo. The tester repo should have a post-receive hook to run the tests and inform me (via email or whateva) whether it passes or fails to fix the commit before I push.</p>

<p>The second solution sounds much better (I guess) even though there will be differences on the repos due to ignored files.</p>

<p><strong>Do you have another solution to propose?</strong></p>
",1,146272,0,0
52051707,8253421,8/28/2018 6:49,1,473,<gitlab><webhooks><githooks>,gitlab pre-receive hook custom bash script,"<p>I need help about how to write a bash script for gitlab server-side pre-receive hook with the below customization(i.e.. user has to enter the below details before push),if that commit doesn't follow below things that commit must be declined.</p>

<pre><code>  Fault Id: &lt;GIT issue id&gt;
  Epic JIRA id : &lt;somename&gt;
  Comments: &lt;free text&gt;
</code></pre>

<p>my sample script is:</p>

<pre><code>#! /bin/bash 
echo ""Checking whether git commit has following release pattern or not !!"" 
ref_name=$1 
ref=$3 
msg=$(git log --pretty=%B -n 1 $ref | sed '$d') 
result=$(git log --pretty=%B -n 1 $ref | sed '$d' | grep releaseTag=v.*) 
echo ""New ref received, ref is: $ref to ref name: $ref_name and commit msg is: $$ msg"" 
if [[ -z ""${result}"" ]] 
then 
echo ""######## Requested git commit msg didn't follow the pattern, hence rejecting, follow this pattern releaseTag=v1.11 #########"" 
exit 1 
fi
</code></pre>
",6,8253421,,
52061993,183692,8/28/2018 15:58,0,48,<git><gitlab><githooks>,reducing the steps in the git workflow,"<p>I have the following setup</p>

<pre><code>[dev laptop] -- git push --&gt; [gitlab]
                                 |
                              git pull
                                 |
                                 V
                          [prod server]
</code></pre>

<p>The above result in the following workflow</p>

<ol>
<li><code>dev-laptop$ git push gitlab</code></li>
<li><code>dev-laptop$ ssh prod-server</code></li>
<li><code>prod-server$ cd app</code></li>
<li><code>prod-server$ git pull gitlab</code></li>
<li><code>prod-server$ pm2 restart app</code></li>
<li><code>prod-server$ exit</code></li>
<li><code>dev-laptop$ rsync</code> images and other binary files between dev and prod</li>
</ol>

<p>How can I reduce the number of the above steps? Here is what I've thought:</p>

<ol>
<li><p>get rid of <strong>gitlab</strong> in between so that I <code>git push</code> directly from my <strong>dev-laptop</strong> to the <strong>prod-server</strong>. But I don't know how to do this or if it can even be done.</p></li>
<li><p>set up some <code>git hooks</code> on <strong>gitlab</strong> so when I <code>git push</code> to it, on <code>post-receive</code>, <strong>gitlab</strong> <code>git push(es)</code> the changes to the <strong>prod-server</strong>. And, add a <code>post-receive</code> git hook on the <strong>prod-server</strong> that restarts <code>pm2</code>. Of course, I don't quite know how to do this as well.</p></li>
</ol>

<p><strike>
<strong>Update:</strong> Ideally, since I am the only developer in this project, I would like to have a workflow like so</p>

<pre><code>[dev laptop] -- git push --&gt; [prod server]
</code></pre>

<p>The above, in conjunction with a few <code>git hooks</code> as described above, would simplify my life considerably. Of course, the danger is that I don't have a central repo anymore, so in case my <strong>dev laptop</strong> or <strong>prod server</strong> go belly up, I don't have a backup. But that is a danger I can choose to live with.
</strike></p>

<p><strong>Update2:</strong> the safety of having a central repo is very attractive.</p>
",2,183692,0,0
25350398,1992360,8/17/2014 15:01,2,118,<git><githooks><git-status><git-stage>,Where does git status get its information on changed files?,"<p>Git status gives information on the modified files in a repository (be in un-tracked or staged files) I want to be able to access these list of files -- to preform some code quality checks on those files before a commit is performed via. hooks</p>

<p>Do let me know if I can access this list of files. </p>

<p>By the way, I am new to Git. So go easy on me if I made blunders in my assumptions</p>
",0,1992360,0,0
35997624,1629120,3/14/2016 20:39,5,3344,<git><security><githooks>,How to disable GIT hooks for security reason?,"<p>If you clone a git repository, the hooks are not cloned for security reasons I suppose. But what if I get a repository by an other way like a ZIP file? How can I make sure there is no hook executed when I run GIT commands on a repository which I don't fully trust?</p>

<p>What I can think of, is to remove the executable flag of all files in the .git/hook directory. But according to the documentation, the hooks are only normally stored in this directory so there might be other places to clean first. (How to change the hook directory by the way?)</p>

<p>As an example, I'm concerned about a file like the one from this contest:</p>

<p><a href=""http://hackyeaster.hacking-lab.com/hackyeaster/challenge12.html"" rel=""noreferrer"">http://hackyeaster.hacking-lab.com/hackyeaster/challenge12.html</a></p>
",0,1629120,0,0
62635719,191115,6/29/2020 10:03,0,835,<githooks><husky>,How to prepend partial branch name to git commit with husky,"<p>I have a functional <code>commit-msg</code> git hook that takes the string from beginning up to the first underscore from a git branch's name and prepends it to the commit message.</p>
<p>For better understanding: The branch name is <code>JIRA-123_fix_problem</code>, the commit command goes: <code>git commit -m 'Fix problem'</code> and through the <code>commit-msg</code> hook the commit message will automatically be changed into <code>JIRA-123: Fix problem</code>.</p>
<p>Now we're using <strong>Nuxt</strong> for our current <strong>Vuejs</strong> project and this makes use of <strong>husky</strong>. We want to keep <strong>husky</strong> in this project. Unfortunately (and, I guess, intentionally), <strong>husky</strong> works by overwriting the git commit hooks, and thus the file <code>.git/hooks/commit-msg</code> I use will be overwritten by <strong>husky</strong> and the original <code>commit-msg</code> hook does not work any more.</p>
<p>How can I either prevent <strong>husky</strong> from overwriting the <code>commit-msg</code> hook or instruct <strong>husky</strong> to do the same thing?</p>
<p>I can't find any documentation for this problem.</p>
",0,191115,,
36007049,,3/15/2016 9:20,4,214,<git><githooks>,gitk and hook script,"<p>I want to deploy a hook script to control format of commit message. For this I use the <code>prepare-commit-msg</code> script.</p>

<p>I want to check if the commit message starts with a number of 3 digits. If this is the case, the script returns <code>0</code>, otherwise <code>1</code>.</p>

<p>It works fine for an utilisation with the <code>git</code> command, but it doesn't when used with <code>gitk</code>. When script returns <code>1</code>, the commit is not aborded. I don't manage to display message either (an information message explaining why commit will be abort).</p>

<p>Is there a way to use hook script with <code>gitk</code>?</p>

<p>Thanks.</p>

<p>PS: I use git version 1.8.5.3</p>
",2,,0,0
7166886,561638,8/23/2011 20:05,0,186,<githooks><post-receive-email>,git email notification - multiple destinations that are unrelated,"<p>I have the Andy Parkins script setup to send post-receive email notifications.  These are to fulfill a contract with a vendor, so the emails go out to the vendor.  Now, I have an internal group who also want notifications.  Since the configuration for the script is in /home/git, it is essentially global.  How do I setup a second email notification for a different To list?</p>
",2,561638,,
7168094,561638,8/23/2011 22:01,0,424,<githooks><git-post-receive>,How can a post-receive hook written in perl get the branch name?,"<p>I have a post-receive hook that is written in perl.  I need to be able to figure out which branch is being pushed to.  How can I do this?  I tried looking at @ARGV and $ARGV[2] without success.</p>
",2,561638,,
36079862,6081498,3/18/2016 8:48,0,84,<eclipse><git><githooks>,why does pre-push hook doesn't work with eclipse and works in git bash?,"<p>The pre-push  tag doesn't work when I push through eclipse but it works fine when I push through git bash.
the pre-commit tag works fine.</p>
",2,6081498,,
25620844,3086619,9/2/2014 10:07,4,249,<git><workflow><githooks><git-stash>,Git stash keeping index conflict,"<p>I need to create pre-commit hook to do some 'sanity tests' of project (mainly check whether the deployment will go without problems).
Because I need to tests only changes that are about to be commited, I need to stash non-staged changes before running the tests and pop stashed changes after doing this. But there's a problem because there is possibility of the conflict between stash and index in following case:</p>

<p>Let's say I have the file named <code>testfile</code> with following content:</p>

<pre><code>first line
second line
third line
</code></pre>

<p>Now i'll add a line between second and third</p>

<pre><code>first line
second line
second and a half line
third line
</code></pre>

<p>and run <code>git add</code> so it will become staged.</p>

<p>Now I'll add next line after previous one so the file looks like that</p>

<pre><code>first line
second line
second and a half line
second and three quarters line
third line
</code></pre>

<p>So now first and second lines are commited, second and a half is staged, second and three quarters is unstaged and third is commited.</p>

<p>Let's get straight to the point. Now when I run <code>git stash --keep-index</code>, then perform my tests and try to run <code>git stash pop</code>, the result is following:</p>

<pre><code>Auto-merging testfile
CONFLICT (content): Merge conflict in testfile
</code></pre>

<p>and file contents look like this:</p>

<pre><code>first line
second line
second and a half line
&lt;&lt;&lt;&lt;&lt;&lt;&lt; Updated upstream
=======
second and three quarters line
&gt;&gt;&gt;&gt;&gt;&gt;&gt; Stashed changes
third line
</code></pre>

<p>I have no idea how to reapply stashed changes and avoid this type of conflict after running my tests. I'd be grateful for pointing me right direction with this.</p>
",0,3086619,0,0
44206336,3581539,5/26/2017 16:36,0,238,<git><githooks><git-notes>,How to make git notes to pull automatically for everyone who clones repo?,"<p>Is it possible at all?</p>

<p>I've read in documentation that you can configure it in your local <code>.git/config</code>
like:</p>

<pre><code>[remote ""origin""]
  fetch = +refs/heads/*:refs/remotes/origin/*
</code></pre>

<p>But it is local settings and as i understand i can't push it to i.e. github or bitbucket. Is it possible to force everyone to pull notes?</p>
",4,3581539,,
7437261,787802,9/15/2011 20:48,16,2418,<python><git><githooks>,How is it possible to use raw_input() in a Python Git hook?,"<p>I am writing a pre-commit hook for Git that runs pyflakes and checks for tabs and trailing spaces in the modified files (<a href=""https://github.com/badzil/miscellaneous/blob/master/pre-commit"">code on Github</a>). I would like to make it possible to override the hook by asking for user confirmation as follows:</p>

<pre><code>answer = raw_input('Commit anyway? [N/y] ')
if answer.strip()[0].lower() == 'y':
    print &gt;&gt; sys.stderr, 'Committing anyway.'
    sys.exit(0)
else:
    print &gt;&gt; sys.stderr, 'Commit aborted.'
    sys.exit(1)
</code></pre>

<p>This code produces an error:</p>

<pre><code>Commit anyway? [N/y] Traceback (most recent call last):
  File "".git/hooks/pre-commit"", line 59, in ?
    main()
  File "".git/hooks/pre-commit"", line 20, in main
    answer = raw_input('Commit anyway? [N/y] ')
EOFError: EOF when reading a line
</code></pre>

<p>Is it even possible to use raw_input() or a similar function in Git hooks and if yes, what am I doing wrong?</p>
",0,787802,0,0
36102161,493122,3/19/2016 13:12,4,768,<git><branch><githooks>,Is there a way to make a local branch immutable?,"<p>I'm extremely stupid and sometimes I merge a ""feature branch"" in the wrong <code>master</code> branch as opposed to the <code>develop</code> branch and that of course leads to pain and suffering.</p>

<p>Since it's the second time already that this has been happening, I wonder if there's a way for me to make a branch immutable locally.</p>

<p>I've already tried with <a href=""https://gist.github.com/Simbul/1781656"" rel=""nofollow"">this pre-commit hook</a> to prevent me from directly making commits on said branch, but this is not stopping merges as in:</p>

<pre><code>git checkout master
git merge wip
</code></pre>

<p>Is there a way to prevent all possible changes to a local branch? If not, is it at least possible to prevent changes from being pushed?</p>
",1,493122,0,0
52172357,10287037,9/4/2018 18:49,0,105,<windows><git><githooks>,How can I configure a user's git hook folder to match the project's,"<p>Our project is on a server which is running as a git server. We are running on Windows machines to interact with that server. I am in the process of developing a pre-commit git hook. The first question is whether git will look for that hook in the user's forked repo .git/hooks folder only, where he/she is doing their edits and commit, or whether it will look in the ""parent's"" (project) .git/hooks folder only? If its the former, can a separate script of some sort be developed that will copy the ""latest-and-greatest"" hook into the user's repo .git/hooks folder regularly to ensure they are running the right thing?</p>
",0,10287037,,
52172506,10316674,9/4/2018 19:00,2,240,<git><githooks>,"In a Git pre receive hook, Is there a way to get Repository Origin details like Org and repository name?","<p>I want to access Git Repository Origin details in a Pre Receive hook, so that I can curl using GitHub repository API and access additional information on the repository.
Can I use git command <code>git config --get remote.origin.url</code> in my pre-receive hook scrip to get origin details ?</p>
",3,10316674,,
52178796,5214893,9/5/2018 6:48,0,31,<android><git><continuous-integration><azure-pipelines><githooks>,VSTS Continuous Integration - Change SDK path,"<p>I'm looking for a solution for a problem. That is arise during Continuous Integration. To run the build command on my agent I have to give the path of the sdk of my server where build is going to be run. Normally the <code>local.properties</code> files are not part of git change list. I have come to know that there are git hooks for running custom scripts but after reading more, it seems like they are made for some other purpose.</p>

<p>What I want is that after I push the code the sdk directory path in local.properties gets changed to reflect the sdk path of my server and whenever i pull the code from the remote repository, the path automatically changes back to my local sdk path.</p>

<p>Please suggest, should i use the git hooks for this purpose or is there any better solution you guys follow or know.</p>

<p>Regards </p>
",0,5214893,,
36113566,3915892,3/20/2016 12:15,0,100,<git><ruby-on-rails-4><nginx><hook><githooks>,Git hooks post-receive rake: not found,"<p>Don't know why but rake tasks are not working on my git 'post-receive' hooks. </p>

<pre><code>#!/bin/sh
git --work-tree=/var/www/static_app --git-dir=/var/repo/static_app.git checkout -f
rake db:migrate RAILS_ENV=production
rake assets:precompile RAILS_ENV=production
sudo service nginx restart
</code></pre>

<p>Here is server log I get when i <code>git push live</code></p>

<pre><code>Counting objects: 15, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (8/8), done.
Writing objects: 100% (8/8), 777 bytes | 0 bytes/s, done.
Total 8 (delta 6), reused 0 (delta 0)
remote: hooks/post-receive: 3: hooks/post-receive: rake: not found
remote: hooks/post-receive: 4: hooks/post-receive: rake: not found
remote: Restarting nginx: nginx.
To ssh://root@xx.xxx.xxx.xx/var/repo/static_app.git
   178b5cc..4c3d726  master -&gt; master
</code></pre>

<p>How to fix this?</p>
",6,3915892,,
36122684,6032174,3/21/2016 3:29,3,343,<git><github><gitlab><githooks>,How do I make a git hook for modifying then mirroring a git repository?,"<p>I have a GitHub repository for my dotfiles <a href=""https://github.com/thepiercingarrow2/dotfiles"" rel=""nofollow"">here</a>. </p>

<p>It contains an installdotfiles.sh script to install the dotfiles from GitHub.   I would like to have another git repository on GitLab for backup (and the really cool custom syntax-highlighting :P), mirroring this repository, except running the shell command on the repository: </p>

<pre><code>grep -rl raw.githubusercontent . | 
      xargs sed -i ''
     's/raw.githubusercontent/gitlab/g'; grep -rl 'dotfiles/master' . |
      xargs sed -i '' 's/dotfiles\/master/dotfiles\/raw\/master/g'
</code></pre>

<p>which replaces the links to Github with the corresponding links to GitLab.</p>

<p>Basically, if I push to my GitHub dotfiles repository, I would my GitLab repository to automatically update, except run the script on the repository first, so I have my GitLab repository contains the GitLab links.</p>

<p>How would I implement such a hook? </p>

<p>I have heard that this can be implemented using Git Hooks, however I am unfamiliar with them, and reading about them, I don't exactly understand how such a thing would be done.</p>

<p>P.S it would be nice if it works both ways - so when I push to GitLab, GitHub will run a different script that replaces GitLab links with GitHub links, so that whenever I push to one, both update accordingly.</p>
",0,6032174,0,0
25647299,846924,9/3/2014 14:44,3,2134,<git><version-control><workflow><bitbucket><githooks>,How can one prevent a git branch from being merged into another?,"<p>In a common (git-based) development workflow, one maintains a <code>master</code> branch and a <code>next</code> (or <code>dev</code>) branch which is used for testing purposes: </p>

<ul>
<li>feature branches begin from <code>master</code> and are merged into <code>next</code> for testing. If deemed stable, feature branches can be merged into <code>master</code>. </li>
<li><code>master</code> is periodically merged into <code>next</code></li>
<li><code>next</code> is periodically rewound (say, after a release). </li>
<li><strong>The <code>next</code> branch should never be merged into the <code>master</code> branch</strong> </li>
</ul>

<p>It would be useful to be able to <strong>automatically prevent merges of <code>next</code> into <code>master</code></strong>, either directly or via another branch based on <code>next</code>. <strong>How can one accomplish this using git?</strong></p>

<p>Note: as described in <a href=""https://stackoverflow.com/questions/13381105/git-hook-to-prevent-an-experimental-branch-pushed-to-a-release-or-master-branch"">this question</a>, it is possible to use git hooks to prevent these types of merges on a remote repository one has full access to. However, this is (presumably) not possible with services like BitBucket or GitHub, so I seek a solution that works with a local repository, or one which can be used with a remote repository that one only has limited administrative access to.</p>
",3,846924,0,0
36130459,3050598,3/21/2016 12:00,0,243,<git><go><githooks>,Failed to get dependency from git on git post-update hook,"<p>I have a golang project and i want to build it on server as I push it</p>

<p>post-update hook is fired, everything nice, project is checked out to some directory, but, after it attempts to get dependency (<code>cd /go/src/kiyanov.com/app/</code> and <code>go get</code> ) it fails with an error</p>

<p><code>remote # cd /go/src/github.com/dgrijalva/jwt-go; git show-ref
remote: fatal: Not a git repository: '.'
remote: package github.com/dgrijalva/jwt-go: exit status 128</code></p>

<p><code>remote # cd /go/src/github.com/lib/pq; git show-ref
remote: fatal: Not a git repository: '.'
remote: package github.com/lib/pq: exit status 128</code></p>

<p><code>remote: # cd /go/src/golang.org/x/oauth2; git show-ref
remote: fatal: Not a git repository: '.'
remote: package golang.org/x/oauth2: exit status 128</code></p>

<p>gopath is exported properly, and packages are downloaded. 
but go install following after this commands are failed</p>

<p>go install works fine after the following push, once post-update make everything again in existing directory.</p>

<p>I don't have any ideas why it not works .The only suggestion cause it happens inside post-update hook, but i'm not sure.</p>
",1,3050598,,
52205830,9269863,9/6/2018 13:59,0,54,<bash><githooks>,"Script stops, although ""set -e"" was set afterward read","<p>I have a script for a git post-receive hook</p>

<pre><code>read oldrev newrev refname
set -e

echo DELETE
rm -rf *
echo DELETED
...
</code></pre>

<p>When I run the script, the ouput looks like this</p>

<pre><code>remote: DELETE
</code></pre>

<p>But then the script stops. But when I remove the ""set -e"" or remove the ""read"" it works.</p>

<pre><code>read oldrev newrev refname

echo DELETE
rm -rf *
echo DELETED
...
</code></pre>

<p>results to</p>

<pre><code>remote: DELETE
remote: DELETED
</code></pre>

<p><strong>or</strong></p>

<pre><code>set -e

echo DELETE
rm -rf *
echo DELETED
</code></pre>

<p>results to</p>

<pre><code>remote: DELETE
remote: DELETED
</code></pre>

<p>I don't understand why it doesn't work.</p>

<p><strong>Edit</strong>: Add output of the second and third code example</p>
",6,9269863,,
25653872,1181562,9/3/2014 21:21,2,231,<git><githooks><git-post-receive>,Queueing of git post-receive hooks?,"<p>I am looking to run a custom script on <code>git post-receive</code>, but am wondering how git behaves if / when multiple pushes are received in succession before the script from the first push finishes (or fails)? Do post-receive hooks queue?</p>

<p>Example scenario: Post-receive hook triggers a script to copy changed file(s) to a remote NFS share. This script may:</p>

<ul>
<li>take longer than a few seconds to complete</li>
<li>fail if the NFS is unavailable</li>
<li>network disruption could interrupt transfer, causing failure</li>
</ul>
",0,1181562,,
52211117,9881381,9/6/2018 19:40,0,131,<git><githooks>,Git post-update hook doesn't get executed,"<p>Good afternoon,</p>

<p>I'm trying to setup my VPS so it automatically pulls changes I've pushed to my BitBucket repo.</p>

<p>I've created a post-update script, given it executable flags, executed it manually to see if it does what I want (yes, it does, without an issue).</p>

<p>Now, the issue I'm having is - pushing to the repository doesn't force pull on my server.</p>

<p>Here's the script:</p>

<pre><code>#!/bin/sh
#
# An example hook script to prepare a packed repository for use over
# dumb transports.
#
# To enable this hook, rename this file to ""post-update"".

cd ../../ || exit
unset GET_DIR
git pull

exec git update-server-info
</code></pre>

<p>The logs inside .git folder are empty.</p>
",4,9881381,,
36153117,1688051,3/22/2016 11:24,0,89,<git><githooks>,"Git Hooks: remote repository should accept push, only if commit message contents particular string","<p>I am writing update hook on server side. I have succesfully done and restricted.<br>
1. File size<br>
2. File extensions<br>
What I want to do now, to check message and accept only if that contents string, say ""INFO:"".   </p>

<p>I have checked with <code>git log</code> in <code>update</code> hook, but it gives already accepted results only.<br>
What should I do to check message before accepting/pushing changes into repository.</p>
",0,1688051,,
25671241,951064,9/4/2014 17:06,2,192,<git><githooks><gitolite><git-post-receive>,Calling one git hook from another hook,"<p>I'm using gitolite with a post-receive hook to deploy a website.</p>

<p>Currently the script is very simple, but we want to add more complex stuff, like testing, deployment, compilation steps, etc.</p>

<p>In order to do this, I'd like to split up the post-receive hook into multiple separate files. i.e. post-receive.deploy, post-receive.compile, post-receive.test, etc. And one central post-receive hook to call them in sequence. This way we could more easily manage the steps.</p>

<p>Question is; how do I call the separate (sub-)hooks from the central post-receive hook? I can't even get them to execute, and as I understand, I need to pass along STDIN to the sub-hooks. I'm pretty much a n00b as far as shell scripting is concerned.</p>
",1,951064,0,0
52246543,5353461,9/9/2018 16:34,1,39,<git><githooks><git-checkout>,Silence only status output after checkout,"<p>I want to provide my own custom coloured git status via a <code>post-checkout</code> hook.</p>

<p>How can I disable the default monochrome short status output that is displayed after checking out a branch?</p>

<p>I only want to disable the status part (so I don't print it twice), but I want to keep other messsages such as:</p>

<pre><code>Already on 'master'
</code></pre>

<hr>

<p>Alternatively, if there's no way of only disabling the short status output, is there a way to force all <code>checkout</code>s to be <code>--quiet</code>?</p>

<p>I want to avoid double status outputs under all circumstances.</p>
",1,5353461,,
44255141,7367190,5/30/2017 6:37,2,456,<ruby><git><githooks><git-push>,Writing a pre-push hook in Git to grep all files for regex want to reject push if regex not found,"<p>I have the following pre-push hook. Ideally I would like it to go through all files that are being pushed to my repository and reject the push if the content of any of the files doesn't match the regular expression defined at the top. I'm getting the following error when attempting to loop through the files: ""undefined method `each' for """":String (NoMethodError)"". '.each' doesn't work as the git command is returning a string containing the changed files. </p>

<pre><code>#!/usr/bin/env ruby

regex = ""\\s*GO\\s*$""

localRef, remoteRef = ARGV
#puts localRef
#puts remoteRef

input = $stdin.readlines[0]
localSha = input.split("" "")[1]
remoteSha = input.split("" "")[3]
#puts localSha 
#puts remoteSha

range = ""#{remoteSha}..#{localSha}""

#folderPath = `git rev-parse --show-toplevel`
#puts folderPath 

`git diff --name-only --diff-filter=ACMR #{range}`.each do |file|
  #puts file
  content = File.read(file)
  unless content.match(regex)
    puts ""#{file} must end with 'GO' keyword""
    exit 1
  end
end

exit 0 
</code></pre>

<p>Does anyone have an idea of how I can loop through the files returned?</p>

<p>Thanks</p>
",6,7367190,,
7495819,317273,9/21/2011 7:05,4,288,<git><githooks><pre-commit>,How to test current commit and not the working tree?,"<p>I am trying to set up a pre-commit hook to test my project before any commit goes through, but I can't find how to make sure that only HEAD (with patches from the current commit) are tested and not the current working_tree (which in most cases is dirty for me).</p>

<p>Solutions found:</p>

<p>Found this link and ended up doing the following.</p>

<p><a href=""http://newartisans.com/2009/02/building-a-better-pre-commit-hook-for-git/"" rel=""nofollow"">http://newartisans.com/2009/02/building-a-better-pre-commit-hook-for-git/</a></p>

<pre><code># Checkout a copy of the current index into MIRROR
git checkout-index --prefix=$TMPDIR/ -af

# Remove files from MIRROR which are no longer present in the index
git diff-index --cached --name-only --diff-filter=D -z HEAD | \
   (cd $TMPDIR &amp;&amp; xargs -0 rm -f --)
</code></pre>
",5,317273,,
52257151,7661411,9/10/2018 11:49,0,1621,<githooks><bitbucket-server>,Bitbucket custom pre-receive hook for preventing unknown users to commit,"<p>Currently due to collaboration across different vendors and contractors sometimes they use a malformed git config at the client side when checking in code</p>

<p>Once the code is checked in, bitbucket does not reconcile the correct username against the commit often appearing as  in bitbuckets commit section.</p>

<p>This is not desirable for audits and can potentially corrupt the commit trail
Need a custom pre commit hook to call the rest API to verfiy that the user has a account and email address against that REST Endpoint.</p>
",1,7661411,0,0
25917812,2487334,9/18/2014 16:24,7,2021,<git><jenkins><jenkins-plugins><githooks><jenkins-cli>,Github-Jenkins Trigger issue with slave,"<p>I have a jenkins instance which has a windows slave machine attached. I also have a job running which resides in github and I have the trigger - ""Build when a change is pushed to GitHub"" set. </p>

<p>as I push a change to github, there is no build triggered on jenkins. I check and see that the payload does get tranferred to jenkins in the ""Github hook log"" but I get the following error:</p>

<pre><code> Started on Sep 18, 2014 3:57:06 PM
Using strategy: Default
[poll] Last Built Revision: Revision ce6a183e834a3e31afa0eb83a4418b0619c8642b (origin/master)
 &gt; ""C:\Program Files (x86)\Git\cmd\git.exe"" ls-remote -h https://xx/xx/xx master # timeout=10
FATAL: hudson.plugins.git.GitException: Error performing command: ""C:\Program Files (x86)\Git\cmd\git.exe"" ls-remote -h https://xx/xx/xx master
hudson.util.IOException2: hudson.plugins.git.GitException: Error performing command: ""C:\Program Files (x86)\Git\cmd\git.exe"" ls-remote -h https://xx/xx/xx master
    at hudson.plugins.git.GitSCM.compareRemoteRevisionWith(GitSCM.java:462)
    at hudson.scm.SCM._compareRemoteRevisionWith(SCM.java:357)
    at hudson.scm.SCM.poll(SCM.java:374)
    at hudson.model.AbstractProject._poll(AbstractProject.java:1428)
    at hudson.model.AbstractProject.poll(AbstractProject.java:1331)
    at com.cloudbees.jenkins.GitHubPushTrigger$1.runPolling(GitHubPushTrigger.java:73)
    at com.cloudbees.jenkins.GitHubPushTrigger$1.run(GitHubPushTrigger.java:98)
    at hudson.util.SequentialExecutionQueue$QueueEntry.run(SequentialExecutionQueue.java:118)
    at jenkins.util.ContextResettingExecutorService$1.run(ContextResettingExecutorService.java:28)
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:471)
    at java.util.concurrent.FutureTask.run(FutureTask.java:262)
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1145)
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:615)
    at java.lang.Thread.run(Thread.java:744)
Caused by: hudson.plugins.git.GitException: Error performing command: ""C:\Program Files (x86)\Git\cmd\git.exe"" ls-remote -h https://xx/xx/xx master
    at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:1444)
    at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandWithCredentials(CliGitAPIImpl.java:1225)
    at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandWithCredentials(CliGitAPIImpl.java:1138)
    at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandWithCredentials(CliGitAPIImpl.java:1129)
    at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.getHeadRev(CliGitAPIImpl.java:2059)
    at hudson.plugins.git.GitSCM.compareRemoteRevisionWithImpl(GitSCM.java:495)
    at hudson.plugins.git.GitSCM.compareRemoteRevisionWith(GitSCM.java:460)
    ... 13 more
Caused by: java.io.IOException: Cannot run program """"C:\Program Files (x86)\Git\cmd\git.exe"""": error=2, No such file or directory
    at java.lang.ProcessBuilder.start(ProcessBuilder.java:1041)
    at hudson.Proc$LocalProc.&lt;init&gt;(Proc.java:244)
    at hudson.Proc$LocalProc.&lt;init&gt;(Proc.java:216)
    at hudson.Launcher$LocalLauncher.launch(Launcher.java:780)
    at hudson.Launcher$ProcStarter.start(Launcher.java:360)
    at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:1433)
    ... 19 more
Caused by: java.io.IOException: error=2, No such file or directory
    at java.lang.UNIXProcess.forkAndExec(Native Method)
    at java.lang.UNIXProcess.&lt;init&gt;(UNIXProcess.java:135)
    at java.lang.ProcessImpl.start(ProcessImpl.java:130)
    at java.lang.ProcessBuilder.start(ProcessBuilder.java:1022)
    ... 24 more
</code></pre>

<p>Basically complains about not being able to run the command <code>C:\Program Files (x86)\Git\cmd\git.exe"" ls-remote -h https://xx/xx/xx master</code></p>

<p>But as I manually go into my slave machine and run the command, it works fine.</p>

<p>Please note that 
 1. I have made the adjustment where jenkins slave service logs in  as admin so that it has all permissions. 
 2. My default jenkins server is a linux box and the slave machine is a windows box. Obviously both have different git executable path. So I am wondering if jenkins runs this command on my linux box for some reason.</p>

<p>I do have the project setup to run on the windows slave box only and that works fine as it builds fine(so it is able to find the git executable for the job)</p>

<p>Any pointers?</p>

<p>Also does anyone know how github plugin for jenkins works with slave machines(does it look for git in the slave or does it go to where jenkins resides, as that might be the source, though have no idea what the solution for that weird case would be?)</p>
",0,2487334,,
36196548,6108490,3/24/2016 9:11,2,1204,<git><git-submodules><githooks>,Cannot trigger post-commit git hook on git submodule,"<p>We use a git module with several submodules. In order to make it more convenient for daily use, I wanted to have a post-commit hook which automatically adds the submodule to the git index in the main/super/root git repo/clone/module such as <code>git add mychangedsubmodulename</code> so as to prepare a commit ready to update the submodule's commit reference in the main repo and probably more ideas to come.</p>

<p>The .git folder is located inside the main module root folder and seems to contain as well the submodule related stuff as a result of having cloned the main repo with <code>--recursive</code> option. My version of git is <code>git version 2.6.4 (Apple Git-63)</code>.</p>

<p>I could easily create a post-commit hook in the main repo but it does not fire from commits within a submodule, which I consider correct and appropriate so far but also might be a clue for a possible workaround.</p>

<p>I have tried to define several post-commit hook files in different locations also following the <a href=""https://stackoverflow.com/questions/10848191/git-submodule-commit-hooks"">question 10848191</a> without any success.</p>

<p>How can I achieve to automatically modify the main module on commits in a submodule?</p>

<p><strong>Update:</strong> After the submodule post-commit hook now works sometimes, I managed to cd into the main repository and successfully invoke git by cleaning the environment variables.</p>

<pre><code># clear git environment or git would confuse main and sub repos when crossing boundary by only changing pwd
while read variable; do
    unset $variable
done &lt; &lt;(env | grep ""^GIT_"" | sed 's/=.*//g')
</code></pre>

<p>However, the original question was as how to fire the submodule hook. This seems to be working only sometimes, still.</p>
",0,6108490,0,0
44468899,3878933,6/10/2017 2:17,2,319,<git><ssh><githooks><sshd><git-daemon>,How to determine SSH fingerprint of client for usage in Git hook,"<p>I've got a Git <code>update</code> hook which checks if the branch being updated is master and if so, sends an error message to the client.  I now would like to make it so only <code>push</code>es to master which I myself make will pass.  </p>

<p>Currently I have two SSH keys added to the <code>authorized_keys</code> of a user <code>git</code>.  One of them is mine, and I intend to add others.  I read <a href=""https://git-scm.com/book/en/v2/Customizing-Git-An-Example-Git-Enforced-Policy"" rel=""nofollow noreferrer"">here</a>:</p>

<blockquote>
  <p>If you’ve allowed everyone to connect with a single user (like “git”) via public-key authentication, you may have to give that user a shell wrapper that determines which user is connecting based on the public key, and set an environment variable accordingly.</p>
</blockquote>

<p>But they don't explain how to do that, and I can't find any examples of how to do such a thing.  How do you determine the fingerprint of the machine which is SSH'ing in?  I also considered creating a separate ""git-admin"" user account, but the bare repos are in the /home/git directory, and I couldn't think about how to have both users pushing to the same repo with the same url.  I can't make the users share the same home directory because then the <code>authorized_keys</code> would apply for both, and I wouldn't have any way of setting an environment variable only for the one and not the other.  </p>

<p>My server is running on FreeBSD.</p>

<p>Any thoughts on how to achieve what I'm trying to do?</p>
",0,3878933,0,0
36199634,454488,3/24/2016 11:58,2,101,<git><githooks>,get all files related to git push,"<p>is there a way to get ( perhaps with a server side hook ) all the files related to a push ? like :</p>

<p>when a user does : <code>$</code>git push origin master</p>

<p>if we use $git log  then, somehow the hook has to have the SHA-1 in order to get the files related to the push ?</p>
",0,454488,0,0
52267631,3547367,9/11/2018 1:50,1,1934,<gitlab><githooks><gitkraken>,Resolve pre-commit error ignoring NAME extension,"<p>** Scenario:**</p>
<ul>
<li><p>I am using <code>gitkraken</code> to commit my source and instantly get a pre-commit error</p>
<blockquote>
<p>ignoring NAME extension</p>
</blockquote>
</li>
</ul>
<p>** Todo:**</p>
<ul>
<li>Fix this error?</li>
</ul>
",0,3547367,0,0
52270992,1223975,9/11/2018 7:40,0,338,<git><git-merge><githooks><git-commit><git-rebase>,Git pre-commit hook that prevents a commit if there are upstream changes,"<p>Say I am working on <code>feature/foo</code>...isn't there a way to prevent a git commit if there are changes to <code>remotes/origin/feature/foo</code>?</p>

<p>Is there any advantage in incorporating the changes before making a new commit?</p>

<p>The only thing I can think of is to force us to use git stash, merge the changes (hopefully with fewer conflicts than otherwise) and then use <code>git stash apply</code>?</p>
",3,1223975,,
7767306,970468,10/14/2011 12:03,0,3597,<windows><git><githooks>,Get the refname in post-receive hooks,"<p>I use git under window and I want do some operation after each push, so I use post-receive hook but when I try to get the <code>refname</code> to know the branch that is pushed I give anything.</p>

<p>Why? (I can't give also the other parameters: <code>oldrev</code> and <code>newrev</code>)</p>

<p>This is my post-receive file, the email are send correctly but there isn't the refname in the subject (it's the same if i put <code>$3</code> in the body)</p>

<pre><code>#!/bin/sh
#
# An example hook script for the ""post-receive"" event.
#
# The ""post-receive"" script is run after receive-pack has accepted a pack
# and the repository has been updated.  It is passed arguments in through
# stdin in the form
#  &lt;oldrev&gt; &lt;newrev&gt; &lt;refname&gt;
# For example:
#  aa453216d1b3e49e7f6f98441fa56946ddcd6a20 68f7abf4e6f922807889f52bc043ecd31b79f814 refs/heads/master
#
# see contrib/hooks/ for a sample, or uncomment the next line and
# rename the file to ""post-receive"".

#. /usr/share/doc/git-core/contrib/hooks/post-receive-email    

# send mail
last_comment=$(git log -n 1 HEAD --format=format:%s%n%b)
last_change=$(git log -1 --name-status)
msmtp  $(git config hooks.mailinglist) &lt;&lt;EOI
Subject: [GIT] ($3) Sources update
$last_change
EOI
</code></pre>
",1,970468,0,0
36214586,804401,3/25/2016 5:33,20,12191,<github><githooks><github-for-windows>,Git hook update package json version,"<p>In our project we often forget to update version numbers in <code>Package.json</code> file. Ours is  a AngularJS project.  In our package JSON file we are specifying the below two version information</p>

<pre><code>""version"": ""1.0.7"",
""devVersion"": ""1.0.4""
</code></pre>

<p><strong>Before Merging a branch to develop</strong> I want a automated script to update these above two version numbers.  I am thinking Git Hooks will help me. </p>

<p>Where can i find the hooks, I am able to see the hooks in my local repo under <code>.git</code> folder.  I am confused which hook to use. Searching on Google suggests I have to create hooks on server. </p>

<p>Where can i find them and can i update the above both keys (version and devVersion) ?</p>

<p>Pls suggest the location and hook to use, this will solve a lot of problem. </p>
",1,804401,0,0
52287007,1223975,9/12/2018 3:19,9,3522,<git><githooks>,Good way to share code in .git/hooks/pre-commit,"<p>Is there a good way I can share the code in <code>.git/hooks</code>?</p>

<p>The only thing I can think of is to create command line tools, and call those tools from each script in <code>.git/hooks/*</code></p>
",6,1223975,0,0
36232835,3980391,3/26/2016 7:35,4,1588,<git><githooks>,Commit within a pre-push to update version,"<p>I am using a <code>pre-push</code> hook that copies some files around and uses <code>grunt bump</code> to up the version number on my package prior to zipping it up. This all happens on the <code>master</code> branch and the assumption is that because it's a push on <code>master</code>, it's worthy of a patch version increase and zips up my Chrome extension to include all the necessary files.</p>

<p>The issue I am running into is that the version is modified too late for it to be committed for the hook to include it in the push, thus my next commit is always 1 patch version behind what is actually tagged.</p>

<p>What solution do I have here? This is a single-user project so I am not worried too much about going against how the hook is intended to be used. Would an option be to commit and a sub push, and then return non-zero from this hook to prevent the push from happening?</p>

<pre><code>#!/bin/sh
PATH=$PATH:/usr/local/bin:/usr/local/sbin

BRANCH=""$1""
EXTENSION_PATH=./extension
SCRIPT_PATH=$EXTENSION_PATH/script/


if [ ""$branch"" == ""master"" ]
then

    # remove the existing script folder; we'll just re-populate it
    echo ""Removing existing scripts...""
    rm -rf $EXTENSION_PATH/script

    echo ""Making target directory: $SCRIPT_PATH""
    mkdir $SCRIPT_PATH

    echo ""Copying script files...""
    cp config.js $SCRIPT_PATH
    cp supportportal.js $SCRIPT_PATH
    cp -r ./scripts/ $SCRIPT_PATH/scripts/

    # bump the version
    grunt bump

    # commit changes and push here
    # &gt;&gt;&gt;

    # if on a tag, append that to the filename
    VERSION=$(git describe --tags --always)

    # get name of the most top folder of git repo directory,
    # combine with revision tail
    OUTPUT=extension-$VERSION.zip

    # building archive
    zip -r -X $OUTPUT $EXTENSION_PATH 

    echo ""Done!"";
fi

exit 0 #exit 1 instead of 0 to cancel original push?
</code></pre>
",0,3980391,0,0
52306080,3894497,9/13/2018 3:06,1,234,<git><gitlab><githooks><git-post-receive>,how to configure git hook post-recieve to update a mirror repository after being pushed?,"<p>i have a bare repository in the Gitlab server, and the same repository has been mirrored into another server using ssh. i would like to assign a post-receive hook into Gitlab repository in order to update the mirrored repository after the user has been pushed to the Gitlab repository.</p>

<p>according to Gitlab documentation, i can make git hooks like below
<a href=""https://i.stack.imgur.com/j6IFC.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/j6IFC.png"" alt=""enter image description here""></a></p>

<p>but what should i put in the URL?? the mirrored repository server path ?
or is there anyway i can make this to achieve using git hooks ? </p>

<p>my Gitlab version is Community Edition 11.1.4</p>
",0,3894497,0,0
25953411,631619,9/20/2014 21:20,9,2800,<ruby-on-rails><git><rspec><githooks><pre-commit-hook>,How can a pre-commit git hook runs rspec tests and prevent a commit?,"<p>How can I add a pre-commit hook that will run my rspec tests and if any fail, will not complete the commit.  I can get the tests to run but not prevent the commit on any failure of them</p>

<p>I have copied <code>.git/hooks/pre-commit.sample</code> to <code>.git/hooks/pre-commit</code></p>

<p>I've added <code>rspec spec</code> near the bottom.</p>

<p>The tests run as part of the commit... but a failure doesn't stop the commit from completing.</p>

<pre><code>$ git commit -m'test'
....................................................................................................F.............

Failures:

  1) Link Good url SHOULD be valid
     Failure/Error: expect(link.valid_get?).to be false #true

       expected false
            got true
     # ./spec/models/link_spec.rb:26:in `block (2 levels) in &lt;top (required)&gt;'

Finished in 32.78 seconds (files took 3.58 seconds to load)
114 examples, 1 failure

Failed examples:

rspec ./spec/models/link_spec.rb:24 # Link Good url SHOULD be valid
[79230846_hook_to_run_tests 6c09570] test
 1 file changed, 1 insertion(+)
 create mode 100644 x.x 
</code></pre>

<p>Maybe I need a different way to run the rspec tests that will raise the non-zero error I need ?</p>

<p>Currently it is placed at the bottom:</p>

<pre><code>    ...
    echo
    echo ""  git config hooks.allownonascii true""
    echo
    exit 1
fi

rspec spec

exec git diff-index --check --cached $against --
</code></pre>

<p>I'm doing all this in a branch (not master).  Didn't know if that was relevant.</p>
",0,631619,0,0
25957679,3507442,9/21/2014 9:15,0,249,<git><branch><githooks><ref><git-post-receive>,"Git Bash, getting local branch name","<p>Im trying to get on GIT POST-RECEIVE command the local branch name of computer, i tried the code 
""READ REF"" but it outputs ""ref/heads/branchname"" i only want the branchname, can someone please help me trim using the output using bash command or is theres a specific code in git to get the local branchname of pushing user. </p>

<p>Thanks</p>
",0,3507442,,
36263844,151471,3/28/2016 13:55,2,375,<xcode><git><macos><githooks>,Xcode won't run pre-push hook; does run other hooks; `xcrun git push` works,"<p>It seems that Xcode won't run a pre-push hook. It happily runs a pre-commit hook, and surprisingly, <code>xcrun git push</code> runs the pre-push hook no problem.</p>

<p>I would've thought choosing ""Push..."" from the ""Source Control"" menu equivalent to <code>xcrun git push</code>! What is happening and can I work around it?</p>
",2,151471,,
52332695,9144717,9/14/2018 13:07,12,4726,<github><githooks><aws-codebuild>,AWS CodeBuild Github webhook does not update status of PullRequest,"<p>Using the official guide, created build project to run tests on GitHub PullRequests creation. The webhook is correctly shown on GitHub, builds are being triggered in Codebuild, however, the build status is not shown in Github, despite the option Report build status is set <strong>true</strong>. If I correctly understood the tutorial, Codebuild has native support of GitHub, and after successful creation of a webhook, the new verification check should be added for PR submission automatically, any suggestions to make this work?</p>
",0,9144717,0,0
7813030,90826,10/18/2011 20:06,181,70939,<git><github><dependencies><git-submodules><githooks>,How can I have linked dependencies in a git repo?,"<p>In my scripts, I often use libraries (mine or others') that have their own repos. I don't want to duplicate those in my repo and get stuck with updating them every time a new version comes out. 
However, when somebody clones the repo, it should still work locally and not have broken links.</p>

<p>Any ideas about what I could do?</p>
",0,90826,0,0
36308136,6081498,3/30/2016 11:56,4,2328,<eclipse><git><gerrit><githooks>,How to integrate git hooks with eclipse,"<p>I am trying to setup pre-commit hook which we have customized to our requirement .
It is working fine in git bash but it is unable to pick up the hook from eclipse .
How can I integrate or configure so the pre-commit hook gets invoked.</p>
",6,6081498,,
25225458,1992360,8/10/2014 4:11,2,4999,<python><git><maven-3><maven-plugin><githooks>,Can I call a maven build on a Java project using pre-commit hook?,"<p>I need to trigger a maven build on a local repository before committing the repository to a Git.</p>

<p>What are the things that I'll need?</p>

<p>I am new to Git so do give me suggestions on how to preform the said operation. Thanks in advance</p>
",0,1992360,0,0
7015300,79465,8/10/2011 17:42,25,13790,<git><github><githooks><git-push>,Receiving emails on GIT push,"<p>I am used to subversion, where the collaborate group would receive an email whenever someone commits.
Is there a similar feature on GitHub, so the people working on the repository receives an email whenever a user pushes their changes?</p>
",3,79465,0,0
43876375,613483,5/9/2017 17:33,4,395,<node.js><git><shell><githooks><post-checkout-hook>,optional githook behaving as non-optional,"<p>I am attempting to make use of <a href=""https://gist.github.com/sindresorhus/7996717"" rel=""nofollow noreferrer"">this gist</a> in my workflow as <code>post-merge</code> and <code>post-checkout</code> git hooks.</p>

<pre><code>#!/usr/bin/env bash
# MIT © Sindre Sorhus - sindresorhus.com

# git hook to run a command after `git pull` if a specified file was changed
# Run `chmod +x post-merge` to make it executable then put it into `.git/hooks/`.

changed_files=""$(git diff-tree -r --name-only --no-commit-id ORIG_HEAD HEAD)""

check_run() {
    echo ""$changed_files"" | grep --quiet ""$1"" &amp;&amp; eval ""$2""
}

# Example usage
# In this example it's used to run `npm install` if package.json changed
check_run package.json ""npm install""
</code></pre>

<p>This claims to only run npm install if the <code>package.json</code> file is changed.</p>

<p>However on all the machines I have tried this on. The npm install command runs regardless of whether package.json has been changed or not.</p>

<p>To test this I have been creating a new branch at my current commit and then checking it out, thus triggering the <code>post-checkout</code> git hook. I would not expect <code>npm install</code> to run because the <code>package.json</code> is unchanged. </p>

<p>Visual Proof (note the npm warning text):</p>

<p><a href=""https://i.stack.imgur.com/gqV3N.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/gqV3N.png"" alt=""enter image description here""></a></p>
",0,613483,0,0
43878982,613483,5/9/2017 20:08,6,235,<git><git-submodules><githooks><post-checkout-hook>,Git Hook Fails Silently,"<p>I have a post-checkout and post-merge githook with these contents:</p>

<pre><code>#!/bin/bash
# MIT © Sindre Sorhus - sindresorhus.com
set -eux  

changed_files=""$(git diff-tree -r --name-only --no-commit-id HEAD@{1} HEAD)""

check_run() {
    echo ""$changed_files"" | grep --quiet ""$1"" &amp;&amp; eval ""$2""
}

echo ''
echo 'running git submodule update --init --recursive if .gitmodules has changed'
check_run .gitmodules ""git submodule update --init --recursive""

echo ''
echo 'running npm install if package.json has changed'
check_run package.json ""npm prune &amp;&amp; npm install""

echo ''
echo 'running npm build:localhost'
npm run build:localhost 
</code></pre>

<p>Strangely if there are no changes to .gitmodules, the script ends rather than progress to check the package.json. (it doesn't even execute the echo lines after line 12)</p>

<p>removing the check_run invocations and putting just the straight commands instead seems to work fine. </p>

<p>removing <code>check_run .gitmodules ""git submodule update --init --recursive""</code> does work as well. However the same behavior is exhibited in the next line: <code>check_run package.json ""npm prune &amp;&amp; npm install""</code> if package.json has not been changed</p>

<p>Is there something that I am missing that causes check_run to end the script on the first file change not being found?</p>

<p>Visual Proof:
<a href=""https://i.stack.imgur.com/PulUv.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/PulUv.png"" alt=""enter image description here""></a></p>
",5,613483,0,0
7266772,72530,9/1/2011 6:30,8,5723,<git><githooks>,Git hook: enable echoing commands,"<p>is there any way to enable echo in git hook</p>

<pre><code>/var/git/repositories/project.git/hooks/post-update

#!/bin/bash
unset GIT_DIR;
echo '========post-update hook========='

cd /var/project;
git reset --hard;
git checkout testing;
git pull;
chmod -R 774 ./lib

update-apps
</code></pre>

<p>desired git push output on another mashine:</p>

<pre><code>#git push
...
Writing objects: 100% (10/10), 5.98 KiB, done.
Total 10 (delta 3), reused 8 (delta 1)
========post-update hook=========
cd /var/project
git reset --hard
git checkout testing
git pull
chmod -R 774 ./lib
update-apps
</code></pre>

<p>this is just an example, actual command chain can be more complicated</p>

<p>and fail somewhere</p>

<p>should I redirect stdout to stderr somehow?</p>

<p><strong>UPDATE</strong></p>

<p>currently I have normal <code>git push</code> output and then <code>========post-update hook=========</code>
... and nothing</p>

<p>Oh! git version is 1.5.6.5</p>
",2,72530,,
7281637,68674,9/2/2011 9:38,5,6019,<git><mysql><githooks><mysqlimport>,Export and import database on Git push and pull,"<p>I need my database to be in sync across two local computers, without using a server in between. After some research I thought I could use Git hooks to do the task for me.</p>

<p>What I basically want is to run <code>mysqldump</code> on <code>git push</code> (and add the SQL file to the commit) and <code>mysqlimport</code> on <code>git pull</code> to and from the remote repository.</p>

<p>I couldn't find any specific hooks for this. I tried the <code>pre-commit</code> hook, but this didn't add the SQL file in the current commit. I then tried <code>prepare-commit</code>, but without luck.</p>

<p>Has anyone got an answer for this one?</p>
",0,68674,0,0
25531278,348081,8/27/2014 15:32,1,424,<githooks><pre-commit-hook>,"code style and testing in pre-commit, only last exit value stop the pre-commit","<p>for check <a href=""http://legacy.python.org/dev/peps/pep-0008/"" rel=""nofollow"">PEP8</a> (python code style) and test, in the pre-commit git hook I have this</p>

<pre><code>#!/bin/sh
flake8 *.py tests
python setup.py test
</code></pre>

<p>a fail in test stop the commit but a error in code style no.</p>

<p>If I change to</p>

<pre><code>#!/bin/sh
flake8 *.py tests &amp;&amp; python setup.py test
</code></pre>

<p>work fine, why pre-commit don't stop with the first exit code 1 ? </p>
",2,348081,,
7331519,489998,9/7/2011 9:25,38,22596,<git><shell><cruisecontrol><githooks>,Find Git branch name in post-update hook,"<p>I'm executing a programme to alert CruiseControl each time an update is sent to our remote repository. I'm using a Git post-update hook for this.</p>

<p>It would be great if I could find out which branch had been committed so I could use that to inform CruiseControl which branch to build. Is there any way to access the branch name within a post-update hook?</p>
",0,489998,0,0
25536034,20789,8/27/2014 20:05,4,298,<git><bash><githooks>,modifying working directory and staging area temporarily in git pre-commit hook,"<p>I'm using an an approach similar to <a href=""https://stackoverflow.com/questions/5518349/using-git-to-track-mysql-schema-some-questions"">this one</a> to use a pre-commit hook to track changes to my database schema (as well as a few metadata-ish tables).</p>

<p>I like to try to keep my commits clean so I want to be loudly warned in the commit message when there are automatic changes being staged/committed. Here are my <code>pre-commit</code> and <code>pre-commit-msg</code> hooks:</p>

<p>.git/hooks/pre-commit
</p>

<pre class=""lang-bash prettyprint-override""><code>#!/bin/sh

# Save user changes to db/ (if any)
git diff --quiet db/
user_dirty=$?
[[ $user_dirty &gt; 0 ]] &amp;&amp; git stash save --keep-index

# Regenerate db/ automatically
db/save_schema_and_meta_tables.sh

# Were any automatic changes made? If so, commit them but warn about it
git diff --quiet db/
auto_dirty=$?
if [[ $auto_dirty &gt; 0 ]]; then
    git add db/
    echo ""WARNING: automatic changes to db/ added to commit"" | tee .git/COMMIT_WARNING
fi

[[ $user_dirty &gt; 0 ]] &amp;&amp; git stash pop
exit 0
</code></pre>

<p>.git/hooks/prepare-commit-msg</p>

<pre class=""lang-bash prettyprint-override""><code>#!/bin/sh
msgf=$1
wf=.git/COMMIT_WARNING
if [ -e $wf ]; then
    msg=$(&lt;$msgf)
    ( cat $wf; echo ""$msg"" ) &gt; $msgf
    rm -f $wf
fi
</code></pre>

<p>Here's how it behaves:</p>

<ol>
<li>If I have made changes to <code>db/</code> but haven't staged them yet, they are kept in the working tree without disturbing the commit, thanks to <code>stash save --keep-index</code> and <code>stash pop</code>. Good!</li>
<li>However, if I have <strong>staged</strong> changes to <code>db/</code> and they are overwritten by the automatic commit, then the user-intended changes are gone after the commit. Bad!</li>
</ol>

<p>Here's what I would <strong>like</strong> to happen: if there are user-staged changes to <code>db/</code> and they don't exactly match the automatic changes, then the whole thing should abort. I'm having a lot of trouble figuring out how to implement this: how can I save the staged changes made by the user, then see if the automatic changes don't match?</p>
",2,20789,0,0
44128813,8052124,5/23/2017 7:48,0,221,<python><git><githooks>,python Force git hook server side output on same line in realtime,"<p>git hooks server side output only transmits on a newline. I want to configure a custom task and print real-time output on the same line. How can I achieve that? I tried sys.stdout.flush but it transmits everything once complete. It does work in real-time if I add a newline. 
I want something like</p>

<blockquote>
  <p>Step A)Started......Completed</p>
</blockquote>

<p>with each '.' appended after a given time.</p>

<p>My current code looks like the following and it outputs only when the method is completed.</p>

<pre><code>import sys, time, os


def print_realtime():
    sys.stdout.write('Started.')
    sys.stdout.flush()
    time.sleep(1)
    for i in range(1, 15):
        sys.stdout.write('.')
        sys.stdout.flush()
        time.sleep(0.5)

if __name__ == ""__main__"":
    print_realtime()
</code></pre>

<p>However, it works in realtime if I append '\n' like: </p>

<pre><code>sys.stdout.write('.\n')
</code></pre>
",4,8052124,,
62791723,7442082,7/8/2020 9:30,1,1296,<bash><git><perl><visual-studio-2019><githooks>,Visual studio 2019 git pre-commit hook is ignoring perl command,"<p>I created pre-commit hook for my project. It works fine if I commit changes through command line or Git Extensions GUI. But if I commit my changes through Visual studio, for some reason perl command gets somehow ignored, does nothing and output file is the same.</p>
<p>I am trying to delete some lines in .json file if it matches my regex expression. Here is script I am using in pre-commit hook.</p>
<pre><code>for file in $(git diff --cached --name-only)
do
    if [[ $file == &quot;path/to/my/file&quot;* ]]; then
        file=&quot;./${file}&quot;
        perl -i -pne 'BEGIN {undef $/} s/^\s*&quot;id&quot;:.*?\r?\n//img' $file
        perl -i -pne 'BEGIN {undef $/} s/,(\s*})/$1/isg' $file
        git add $file
    fi
done
</code></pre>
",0,7442082,,
44335842,7335432,6/2/2017 19:05,-1,721,<python><github><packaging><githooks>,Python packaging: run setup.py automatically,"<p>I'm using setup.py for registering some of my packages which are using by other packages.</p>

<p>I'm storing my project on GitHub and want to run <code>python setup.py install</code> after cloning my repository or after running <code>git pull</code> by users who have cloned my repo previously.</p>

<p>Is it possible at all?</p>

<p>P.S. I was looking for some git hooks, but didn't find something interesting.</p>
",2,7335432,,
44337920,8105295,6/2/2017 21:52,1,1624,<ssl><github><ssl-certificate><webhooks><githooks>,misconfigured SSL using webhooks,"<p>I have created an http server to receive post-hooks from git whenever a push event is issued (for the purpose of auto-deployement).<br>
The problem is that when I add a Web hook to my repository , and when an event is triggered, the request cannot reach the server.</p>

<p>And I get the following error:</p>

<pre><code>We had a problem connecting to the server.  
The most common problem with these types of errors is a misconfigured SSL Certificate .
</code></pre>

<p>Any ideas?</p>
",0,8105295,0,0
7645480,223092,10/4/2011 9:01,7,4913,<git><githooks><git-checkout>,Why doesn't setting GIT_WORK_TREE work in a post-commit hook?,"<p>I'm trying to use the following <code>post-commit</code> hook to deploy to a particular directory after each successful commit:</p>

<pre><code>#!/bin/sh
export GIT_WORK_TREE=/var/www/example/
export GIT_DIR=/home/mark/test/.git/
git checkout -f
</code></pre>

<p>However, after committing I get the following error:</p>

<pre><code>$ git commit -m 'An example commit.'
fatal: Unable to create '/var/www/example/.git/index.lock': No such file or directory
[master 0938e48] An example commit.
</code></pre>

<p>... as if the <code>GIT_WORK_TREE</code> setting is being ignored.  Why does setting this environment variable appear to be not working?  I'm using git version 1.7.4.1.</p>
",0,223092,0,0
25814918,4035786,9/12/2014 18:53,1,199,<git><github><githooks>,How do I setup a git hook to pull from Github?,"<p>I develop on my Mac and push it to Github. I login to my server by SSH and I git pull the changes to the server. I want the changes to automatically be pulled to the server when I push them to Github so I a file .git/hooks/post-update with this info</p>

<pre><code>#!/bin/sh

echo
echo ""**** Pulling changes into Live [Hub's post-update hook]""
echo

cd /mydirector/html || exit
unset GIT_DIR
git pull

exec git-update-server-info
</code></pre>

<p>What else should I do to get it working? Thanks in advance for your answer. It will be very much appreciated. </p>
",1,4035786,0,0
25816363,753269,9/12/2014 20:30,0,183,<git><githooks><git-reset><post-update>,Git head via post-update,"<p>I have a local dev server where I do all my changes, we'll call this <code>local</code>.
I have a git repo setup in a git folder on my <code>webserver</code>, we'll call this <code>gitfolder</code>.
And then I have my live files, that are being pushed from gitfolder everytime I git push, we'll call this <code>live</code>.</p>

<p>My workflow.</p>

<p>Edit files, commit changes, push to <code>webserver</code>.  Then a post-update takes over with the following:</p>

<pre><code>#!/bin/sh
export GIT_WORK_TREE=/path/to/live
git checkout -f
</code></pre>

<p>This works perfectly.  However, here lies my question.  I want to revert a git change, and I would normally do this via <code>git reset --hard commit</code> - but I if I navigate to <code>live</code>, obviously that's not a git repo.</p>

<p>When I go over to <code>gitfolder</code> and run the same command <code>git reset --hard commit</code> it doesn't update <code>live</code> and I get the error 'fatal: This operation must be run in a work tree'</p>

<p>Steps to take?  For now, I've gone and copied my <code>local</code> folder and made a <code>local2</code> - and on <code>local2</code> I reverted the change, then pushed that to <code>live</code>, so my original <code>local</code> folder still has all the changes.</p>

<p>I DO NOT WANT TO REVERT <code>local</code>- Just on <code>live</code></p>
",0,753269,,
44372799,5986907,6/5/2017 15:53,0,57,<git><githooks><sha256>,file within directory contains entire directory's current sha-256,"<p>I want to create a file in my directory, where the file contains the sha256 sum of that directory, including that file, and AFTER the file is created. The difficulty here being that the sha256 of the directory will be affected by updating the file with said sha256. Is this possible?</p>

<p>I can see how this is almost asking the computer to predict the future, but I wonder if there is some recursive algorithm to do this. For example if there is some consistent relation between the checksum of and object, and the checksum of that object with one byte changed.</p>

<p>This is a question of curiosity that came out of this problem: I'm trying to recreate the output of <code>git describe --tags</code> for a repository missing the .git directory (presumably saving this data in the repository).</p>
",2,5986907,,
7667497,,10/5/2011 20:44,2,1977,<git><githooks><git-commit>,Adding extra parameter to git commit,"<p>We have a custom-made system to track client tasks/projects. We manually add a checklist and mark them off, often also adding the time it took for each point. This is very useful but a bit redundant, as we also provide the same information in git. So I'm thinking of somehow adding an extra parameter to git that allows me to indicate how long something took, and then extract this data and save it in a database (we normally use PHP/MySQL). How would one go about this? </p>

<p>I think of doing:</p>

<p><code>git commit -m ""Adding search functionality"" 15</code></p>

<p>And then somehow being able to extract the 15 (minutes) to process it later on, together with the description of this task, so that we do not have to add ""Adding search functionality"" which took 15 minutes separately. I'm thinking of a hook that takes this second parameter and uses it as a variable to be passed on to a PHP script. Is this feasible? </p>
",1,,,
63249362,11267274,8/4/2020 14:45,0,155,<git><githooks>,How to run .exe from pre-push git hook?,"<p>So here is what I've got after searching on google for more than 4 hours :</p>
<p><code>#!C:/Program\ Files/Git/bin/sh.exe
echo $SHELL
echo &quot;here we go&quot;
./PrePush/GitHook.exe</code></p>
<p>and the console tells me:</p>
<p><code>/usr/bin/bash
here we go
.git/hooks/pre-push: line 4: ./PrePush/GitHook.exe: No such file or directory</code></p>
<p>My .exe is located at: <code>C:\Users\myUsername\Documents\MyRepos\ProjectName\.git\hooks\PrePush\GitHook.exe</code>
But it could be any path on my co-workers drive, so I have to use a local path.</p>
<p>I already tried bin/bash.exe, using the full path, using <code>system(./PrePush/GitHook.exe)</code> (because I thought it is a perl script)
but all of them raised erros.</p>
<p>And there seems to be no example of &quot;just&quot; calling a local .exe from a git hook.</p>
",0,11267274,,
26077926,2826862,9/27/2014 18:41,4,1381,<git><githooks>,git work tree not a repository,"<p>I'm trying to set up a remote repo for a live web server. The way I was taught to set this up was to make a post-receive file in the hooks dir like this:</p>

<pre><code>#!/bin/sh
git --work-tree=/var/www/domain.com --git-dir=/var/repo/site.git checkout -f
</code></pre>

<p>so that the live web folder doesn't have the git folders in it. </p>

<p>However, if I add files to the work tree, I can't add those to my git repo. It says: fatal: Not a git repository (or any parent up to mount parent ).</p>

<p>I realize this may not be a good idea to do in the first place, but I like the fact that my hosting service has one click install options, which make setting up WordPress, for example, easy.</p>

<p>Is there any way to add these files into the git?</p>
",0,2826862,0,0
63258476,11589183,8/5/2020 4:32,5,1111,<bash><git><git-bash><githooks>,Git Hooks. How to read variables from user input?,"<p>I'm trying to create a pre-commit hook. And I want it to interract with user. So, I've found that I can use<br />
<code>read -p &quot;Enter info: &quot; info</code><br />
Or just<br />
<code>read info</code></p>
<hr />
<p>I created a file:<br />
<strong>pre-commit:</strong></p>
<pre><code>#!/bin/sh
read -r input
echo $input
</code></pre>
<p>It just should read variable and output it. But it doesn't work. I mean it doesn't work as hook. If I run it using terminal with <code>./.githooks/pre-commit</code>, everything is okay. But when I use <code>git commit -am &quot;Hook&quot;</code>, it echos empty string and doesn't read anything. Am I doing something wrong?</p>
<p>Git version is 2.28.0.windows.1</p>
",2,11589183,0,0
26087618,1992360,9/28/2014 17:32,0,1742,<git><githooks>,"Can I, in the pre-receive hook, get a list of files that are being pushed to the remote repository?","<p>I need to write a <code>pre-receive</code> hook script which get the information about the files that are being pushed into the server.</p>

<p>I want to know if the list of files that are being pushed into the remote repository can be obtained by a script present in the remote repository</p>

<p>For information, I need to access these files in order to perform some code style checks on them.</p>
",1,1992360,,
7980053,304151,11/2/2011 12:10,5,4226,<python><django><git><localization><githooks>,"In Git, how do I configure a hook to run a server-side commands after a commit is accepted?","<p>I'm trying to figure out my way with the Django localistion stuff and from what i've understood, the <code>makemessages</code> command needs to be run every time you change some strings in code. I was thinking of simplifying this process by using a server-side Git hook. </p>

<p>I have no knowledge about Git hooks and couldn't find any resources on the web that did something like this. Is there a reason why one shouldn't have a Git hook to do something like this? If not, could you explain on how I could get the <code>makemessages</code> command to be run every time someone commits code to the repository?</p>

<p>Thanks</p>
",0,304151,0,0
8043297,561638,11/7/2011 22:08,0,502,<git><email><githooks><gitolite><git-post-receive>,How do I setup multiple configs for gitolite - post-receive hook email notification?,"<p>I have the post-receive hook running with a configuration in gitolite that emails a group when any files change in a repo on a certain branch.  Now, I have a request to setup email notification for a different ""TO"" when certain files change in the same repo.  How do I set up multiple configs for the post-receive email hook?  Also, how do I trigger a post-receive hook based on files that changed?  I don't believe the hook has file info, right?</p>
",0,561638,,
8050428,60072,11/8/2011 12:35,2,1161,<jenkins><githooks>,How to build the new branch pushed to github using Jenkins CI?,"<p>I've setup the Jenkins for the rails3 app to build the specs.
One can find many posts via google on how to setup the build trigger on the github push.</p>

<p>But what I want is to build the new remote branch pushed to Github.
e.g.</p>

<p>I've a repo <code>origin/master</code>. I cloned the repo, created a new branch, did some commits and pushed that branch to origin <code>git push -u origin new_branch</code></p>

<p>Now I want the Jenkins to build this newly pushed branch on the origin.</p>

<p>If the build is successful, then Jenkins should merge it into <code>origin/master</code> automatically.</p>

<p>The Jenkins plugin has github, git plugin. But it requires to put the branch name. Instead I want to build the new_branch dynamically.</p>

<p>How can I setup such process?</p>
",2,60072,0,0
8048960,465581,11/8/2011 10:26,1,187,<git><git-svn><githooks>,Git push size in pre-receive of the master,"<p>I am trying to restrict the size of the git push using a <code>pre-receive</code> hook. In the case of svn I can do it with a precommit hook by checking the size of the transaction file. I am not sure how to do this with git. Any suggestions ?</p>
",1,465581,,
44680993,4189388,6/21/2017 15:58,0,882,<git><gerrit><githooks>,Is it possible to run a pre-receive style hooks in Gerrit?,"<p>We are planning to have some policies that will ensure we don't accept commits that won't adhere to commit message policy. This policy is specific to a repo.</p>

<p>Is it possible to run pre-receive style hooks in Gerrit where we can run these policies before the patch gets created?</p>
",1,4189388,,
8263186,,11/24/2011 22:49,8,3439,<git><githooks>,git post-receive hook that grabs commit messages and posts back to URL,"<p>We are using a ticketing system that I want to automatically update as developers push their changes to the server. In order to update it, I only need to provide a specific URL with the commit message as a GET variable. The page being called will then log this change. I know my way to go is with <a href=""http://progit.org/book/ch7-3.html"" rel=""noreferrer"">hooks</a>, but I am not familiar with Bash nor Perl so it is quite challenging. </p>

<p>I want to achieve this:</p>

<ul>
<li>Developer PUSHes to the server</li>
<li><code>post-receive</code> hook runs and checks which different commits are new (because there could be several in one push)</li>
<li>It loops through them, and for each commit, it will open a URL with the commit message (<code>curl http://server.com/logthis.asp?msg=Here_goes_the_commit_message</code>, something like that)</li>
</ul>

<p>That's it. Although I have checked out <a href=""http://progit.org/book/ch7-4.html"" rel=""noreferrer"">some</a> <a href=""http://trac-hacks.org/browser/timingandestimationplugin/branches/trac0.11/scripts/git-post-receive"" rel=""noreferrer"">samples</a> related to this kind of idea, none do exactly this. How could this be done? </p>
",0,,0,0
44657175,1641777,6/20/2017 15:26,0,99,<git><githooks>,GIT post-commit hook not working properly,"<p>This is the hook:</p>

<pre><code>#!/bin/sh
#
# An example hook script that is called after a successful
# commit is made.
#
# To enable this hook, rename this file to ""post-commit"".

revisioncount=`git log --oneline -n 1 | cut -d ' ' -f 1`
echo ""&lt;?php \$_v = md5('$revisioncount');"" &gt; ""../../revision""
echo $revisioncount
</code></pre>

<p>Basically what it does is save the last commit sha1 to a file.</p>

<p>If i do commit i see the following:</p>

<pre><code>$ git commit -a -m ""chore: test hook.""
7bd2399
[develop 7bd2399] chore: test hook.
 1 files changed, 1 insertions(+), 1 deletions(-)
</code></pre>

<p>but the file isn't updated. If i run the hook manually instead it does work:</p>

<pre><code>/project/.git/hooks/post-commit
</code></pre>

<p>and it saves the output to the target file. What's the problem here?</p>
",3,1641777,,
26126004,1310983,9/30/2014 16:47,2,4834,<git><gerrit><githooks>,Git hook not working,"<p>My git hook does not seem to be working. Namely a <code>commit-msg</code> hook from gerrit.</p>

<p>The <code>commit-msg</code> hook exist in <code>&lt;repo&gt;/.git/hooks/</code> and has proper syntax.</p>
",0,1310983,0,0
8087034,561638,11/10/2011 22:07,1,374,<githooks><gitolite>,tried to add a new update.secondary hook to my repos in gitolite and now git push fails,"<p>remote: Undefined subroutine &amp;main::repo_rights called at hooks/update line 41.
remote: error: hook declined to update </p>

<p>I have removed the update hook from all of my repos in order to get around this, but I know that they are now wide open.  </p>

<p>I ran gl-setup, and I may have mixed versions of gitolite on my machine.  I am afraid that I ran the gl-setup from a version that is different than the one I am running currently.  I am not sure how to tell.  Please help. :-(</p>
",1,561638,0,0
63325651,5082463,8/9/2020 11:17,1,25,<c++><git><qt><qt5><githooks>,Git hook to check if QDebug is being used?,"<p>I know how to put in place a git hook but I would like to use one to prevent a commit which includes <code>QDebug</code>. How should I check for <code>#include &lt;QDebug&gt;</code> in a i.e <code>file.h</code> source file?</p>
",1,5082463,,
8235813,190902,11/23/2011 0:24,17,4591,<git><githooks>,Git hook to prevent creating new branches from specific branches,"<p>I'm starting to play around with git hooks, and I'd like to create one to prevent a developer from creating a new branch when on a specific branch. The current process in our company is meant to look like this:</p>

<pre><code>git checkout master
git fetch
git reset --hard origin/master
git checkout -b [branch name]
do awesome things.
</code></pre>

<p>However, occasionally when moving quickly, some developers end up starting this new branch from a staging repo. Which causes grief. </p>

<p>So, I'd like to create a hook to interrupt when a developer starts to create a new branch, check what branch they're on, and either <code>exit 1</code> if the branch is not <code>master</code> (or just generally stop the action if the branch name is <code>staging</code>), or allow it otherwise. </p>

<p><strong>Edit:</strong></p>

<p>As I search more on this, I realize I want a pre-checkout hook, which doesn't appear to exist. Unless someone has a better idea, I'll proceed to print a very large warning in a post-checkout hook if the above scenario comes to pass.</p>
",4,190902,0,0
8271839,708082,11/25/2011 16:27,1,242,<git><git-submodules><githooks>,How can I init/update git submodules in a remote?,"<p>I often use this pattern for easy deployment of websites:</p>

<p>I have a bare repo, which I push/pull to from my computer and this bare repo has a post-update hook that automatically does a pull in another repo (the live version).</p>

<p>However, if I add a submodule on my computer and push it, I have to manually connect to the remote and do the init/update. </p>

<p>Is there a way around it ?</p>
",0,708082,,
8576286,49684,12/20/2011 13:35,2,1053,<git><githooks><git-post-receive>,Git : fatal: exec hooks/post-receive failed,"<p>I have a remote created with <code>git --bare init</code>.</p>

<p>When I push I get:</p>

<pre><code>Delta compression using up to 2 threads. 
Compressing objects: 100% (3/3), done. 
Writing objects: 100% (4/4), 368 bytes, done. 
Total 4 (delta 1), reused 0 (delta 0)

fatal: exec hooks/post-receive failed.
error: hooks/post-receive exited with error code 128
</code></pre>

<p>hooks/post-receive looks like this:</p>

<pre><code> #!/bin/sh
 git checkout -f
</code></pre>

<p>The working tree is set in the remote config (path is fine, if I cd into the remote and do <code>git checkout -f</code> it checks out into the worktree).</p>

<p>the perms on the hook look like:</p>

<pre><code>-rwxr-xr-x 1 my-user git 28 Sep 20  2010 my.git/hooks/post-receive
</code></pre>

<p>Any clues as to why the hook may be failing?</p>
",5,49684,,
26382592,4145527,10/15/2014 12:26,1,41,<git><githooks><git-tag>,Can I get the name of the checked out tag in the post-checkout hook?,"<p>I have to write a script to log to Hipchat every time a new tag is deployed in production, but using the post-checkout hook, I only know how to get the SHA1.</p>

<p>Is it possible to retrieve the tag name in the post-checkout hook?</p>
",1,4145527,,
8598246,373496,12/22/2011 0:52,3,2653,<git><continuous-integration><githooks><uglifyjs>,Aggregating and uglifying JavaScript in a Git pre-commit hook,"<p>I'm using <code>ready.js</code> to aggregate JavaScript files into an <code>all.js</code> file (without <a href=""https://en.wikipedia.org/wiki/Google_Closure_Tools#Closure_Compiler"" rel=""nofollow noreferrer"">Google's Closure Compiler</a>) and am then using <code>uglify-js</code> to minify and obfuscate the code. I'd like to do all of this in a pre-commit hook.</p>
<p>However, I think I'm doing something wrong.</p>
<p>My <code>.git/hooks/pre-commit</code> file looks like this:</p>
<pre><code>#!/bin/sh
readyjs ~/Sites/backbone/js/javascripts/ ~/Sites/backbone/js/ --nojslint -o &quot;underscore.js, backbone.js&quot; --nocompiler
uglifyjs -nm -o ~/Sites/backbone/js/all.min.js ~/Sites/backbone/js/all.js
# Commit
exit
</code></pre>
<p>Should I not be using simple Bash here? Is there something else I'm doing wrong? This step seems to be skipped entirely.</p>
",2,373496,0,0
8598639,373496,12/22/2011 1:55,89,93432,<git><githooks>,Why is my Git pre-commit hook not executable by default?,"<p>If you see the accepted answer in:
<a href=""https://stackoverflow.com/questions/8598246/aggregating-and-uglifying-javascript-in-a-git-pre-commit-hook"">Aggregating and uglifying JavaScript in a Git pre-commit hook</a>, you'll see that I had to do a <code>chmod +x</code> on my pre-commit hook to get it to work.</p>
<p>Why is this not executable by Git by default?</p>
",0,373496,0,0
26413824,2088740,10/16/2014 21:02,0,135,<linux><git><githooks><git-post-receive>,How does git know what repo it is in?,"<p>I'm writing a post-receive hook and looking to dynamically set the repo location to a variable.</p>

<p>The post-receive hook is located in: /git/hub/poc.git/hooks/
The repo location is: /git/prime/poc</p>

<p>Is there anyway I can determine the repo location in post-receive on the fly? (prefer not to chop up the post-receive pwd and ""guess"" at it) </p>
",6,2088740,,
8632767,151278,12/26/2011 3:37,2,65,<git><githooks>,switch a branch in a remote git repository,"<p>when i deploy production code i simply do ""git push production"" - i have a post-receive hook that does this:</p>

<p>""git checkout -f"" - that will update our production code with the latest push.</p>

<p>In this case, i'd like our production repo to be in another branch, is there any way to do that from a hook or a command from a local machine send to the remote repo? </p>

<p>I'm asking this because I'd like to restrict access to the live server. Currently the way this is done is we ssh to the live server, and do ""git checkout .</p>
",0,151278,,
8650031,424434,12/27/2011 22:40,2,875,<python><git><githooks><git-bare>,Update a Git Repository through a Git Hook in Python,"<p>I'm using python to write a post-receive hook that will hopefully serve for automatic deployment of all of the updated files in my project.  Essentially, every time the ""deploy"" branch is pushed, it will upload the changed files over FTP to my server.</p>

<p>Here's what I have so far:</p>

<pre><code>def deploy(old, new):
        fileList = subprocess.Popen(['git', 'diff', '--name-only', old, new], stdout=subprocess.PIPE)
        files = fileList.stdout.read().split('\n')[:-1]

        # Switch to the regular repository and pull to it.
        os.chdir(""/home/git/testrepo"")
        subprocess.Popen(['git', 'pull'], cwd=""/home/git/testrepo"")

        for file in files:
                print file

for line in sys.stdin.xreadlines():
        old, new, ref = line.strip().split(' ')
        if ref == ""refs/heads/deploy"":
                print ""Deploying the new commits now.""
                deploy(old, new)
        else:
                print ""No need to deploy.""
</code></pre>

<p>The repository that contains this hook is a bare repository.  I then have another repository under <code>/home/git/testrepo/</code> that is a clone of this repository. </p>

<p>In this code, I try to change my working directory to that repository and then initiate a pull.  This, however, does not work.  Instead, I get the following message when I push and the hook executes: ""fatal: Not a git repository: '.'"".</p>

<p>Any ideas on how I can successfully pull to this repository, so that I can then upload its files to my other server?  Every method that I've tried has failed.</p>
",1,424434,0,0
26481707,279608,10/21/2014 8:02,2,158,<git><shell><githooks>,Git hook script fails but script runs fine in terminal,"<p>This is very confusing. </p>

<p>I have a git post-update hook script running on a bare repository. Its job is to tell a downstream (non-bare) git repo to update itself (sort of a push-to-deploy script for a versioned staging server). If I run the script from the terminal, it works fine. But when it is run by git after a push, I get an error that the git paths are wrong. </p>

<p>I've tried this on Ubuntu 14.04 + git 1.91 and Mac git 1.9.3 (Apple Git-50)</p>

<p>I'm clearly doing something wrong but I don't know enough about git hooks and can't see where to start.</p>

<p><strong>Here's the script:</strong></p>

<pre><code>#!/bin/sh

staging_path=""/tmp/git/copy""
staging_repo=""$staging_path/.git""
staging_branch=$(git  --git-dir=$staging_repo rev-parse --abbrev-ref HEAD)
upstream_branch=$(git rev-parse --abbrev-ref HEAD)

if [ ""$staging_branch"" != ""master"" ] 
then
    echo ""Staging site is not on master. Cannot initiate pull.""
    exit 0
fi

if [ ""$upstream_branch"" != ""master"" ] 
then
    echo ""Main repo is not on master -- not sure why that would be. Cannot initiate pull.""
    exit 0
fi

git -C $staging_path fetch --all
echo ""git status after fetch --all:""
echo $(git -C $staging_path status)
git -C $staging_path reset --hard origin/master
echo """"
echo ""git status after reset --hard:""
echo $(git -C $staging_path status)
</code></pre>

<p><strong>This is what happens after I do a push:</strong></p>

<pre><code>$ git push origin master
Counting objects: 5, done.
Writing objects: 100% (3/3), 272 bytes | 0 bytes/s, done.
Total 3 (delta 0), reused 0 (delta 0)
remote: fatal: Not a git repository: '.'
remote: git status after fetch --all:
remote: fatal: Not a git repository: '.'
remote: 
remote: fatal: Not a git repository: '.'
remote: 
remote: git status after reset --hard:
remote: fatal: Not a git repository: '.'
remote: 
To /tmp/git/origin/original.git
   8eef13d..96c9847  master -&gt; master
</code></pre>

<p><strong>But when I run this manually, I see it complete normally:</strong></p>

<pre><code>$ ./post-update
Fetching origin
remote: Counting objects: 8, done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 6 (delta 0), reused 0 (delta 0)
Unpacking objects: 100% (6/6), done.
From /tmp/git/origin/original
   4e92291..96c9847  master     -&gt; origin/master
git status after fetch --all:
On branch master Your branch is behind 'origin/master' by 2 commits, and can be fast-forwarded. (use ""git pull"" to update your local branch) nothing to commit, working directory clean
HEAD is now at 96c9847 seven

git status after reset --hard:
On branch master Your branch is up-to-date with 'origin/master'. nothing to commit, working directory clean
</code></pre>

<hr>

<p><strong>Edit:</strong>
I have logged out the values of the shell variables just to make sure they were giving what I thought. Those values are:</p>

<pre><code>remote: $staging_path: /tmp/git/copy
remote: $staging_repo: /tmp/git/copy/.git
remote: $staging_branch: master
remote: $upstream_branch: master
</code></pre>
",7,279608,0,0
8690238,277186,12/31/2011 19:52,1,3450,<git><git-svn><githooks><gitolite>,can't push with gitolite - ENV GL_RC not set,"<p>I've got a similar problem to this post here: <a href=""https://stackoverflow.com/questions/5233058/gitolite-push-error-remote-env-gl-rc-not-set"">gitolite push error -&gt; remote: ENV GL_RC not set</a></p>

<p>I've installed gitolite successfully as a non-root method with no warnings or errors.  Hoever I can't push since I get ENV GL_RC not set errors.  (If I try to manually assign that in my ENV I get a load of trouble.)</p>

<p>I can clone if I use:</p>

<pre><code>git clone git@server:repositories/gitolite-admin
</code></pre>

<p>The solution from the link above is to use the following which I can not do.  I can't clone if I use:</p>

<pre><code>git clone git@server:gitolite-admin
</code></pre>

<p>That renders a error of: </p>

<pre><code>Cloning into gitolite-admin...
fatal: 'gitolite-admin' does not appear to be a git repository
fatal: The remote end hung up unexpectedly
</code></pre>

<p>I can't do a package install since I'm on Ubuntu 10.04 LTS which doesn't have it in its repository list.</p>

<p>I've looked through the documentation from <a href=""http://sitaramc.github.com/"" rel=""nofollow noreferrer"">http://sitaramc.github.com/</a> however I can't seem to get it.  Any ideas how I can resolve this?</p>
",0,277186,,
36324230,3511392,3/31/2016 4:34,1,975,<c#><.net><git><nunit><githooks>,C#: Stop Git commit if NUnit test fails,"<p>I have a VS Solution the structure of which you can see here:</p>

<p><a href=""http://i.stack.imgur.com/EmfZX.png"" rel=""nofollow"">Solution Explorer Screenshot</a></p>

<p>I'm using NUnit 3.2.0 to run my tests.</p>

<p>How can I stop commits to my local branch if the NUnit test fails and display a message on the Git bash?</p>

<p>I read something about pre-commit hooks. How do I implement that here?</p>

<p>I'm using the NUnit Console Runner to test my <em>UnitTests.dll</em> using the following command line argument:</p>

<pre><code>nunit3-conosle.exe UnitTests.dll /wait
</code></pre>

<p>P.S. Please let me know in the comments if you require more information regarding this.</p>
",7,3511392,,
26259802,260670,10/8/2014 14:44,1,1631,<git><gitlab><githooks>,How to create a GitLab hook to reject code pushed by 'root' user?,"<p>I work with an undisciplined team and one of the developers likes to push code as the 'root' user. We need to add a gitlab hook that rejects those commits coming from the 'root' user. </p>

<p>I've read about <a href=""http://doc.gitlab.com/ce/api/system_hooks.html"" rel=""nofollow"">System Hooks</a> and <a href=""https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/web_hooks/web_hooks.md"" rel=""nofollow"">Web Hooks</a>, neither of which seems like the right direction.</p>

<p>Can one of you gitlab gurus help me out?</p>
",6,260670,0,0
36331385,550672,3/31/2016 10:55,1,116,<git><githooks>,Creating a `git pre-recieve hook` that fails when working directory isn't clean,"<p><strong>Situation</strong></p>

<p>I have a copy of a git repository on my local system, as well as a second one on a remote server (both non-bare).  Due to environmental constraints, I'm forced to use Git 1.8 on both.</p>

<p>On the server, I have <code>[receive] denyCurrentBranch = ignore</code> in <code>.git/config</code> , and <code>git reset --hard</code> in <code>.git/hooks/post-receive</code> .  This allows me to emulate the <code>denyCurrentBranch = updateInstead</code> behavior.</p>

<p>I'm trying to add a <code>pre-receive</code> hook that will fail when I don't have a clean head.</p>

<p><strong>Attempt</strong></p>

<p>On the server, if I run <code>git status</code> I have the following:</p>

<pre><code>[server test_app]$ git status
# On branch master
nothing to commit, working directory clean
</code></pre>

<p>I had planned to add <code>git status</code> in the hook, something like this (pseudo-bash):</p>

<pre><code>((git status | grep ""On branch master"" | wc -l) == 1) &amp;&amp; ((git status | grep ""nothing to commit, working directory clean"" | wc -l) == 1) &amp;&amp; (exit 0)
exit 1
</code></pre>

<p>To test if this was possible, I tried the following in my hook</p>

<pre><code>git status
exit 1
</code></pre>

<p><strong>Results</strong></p>

<p>When I try to push, I get the following:</p>

<pre><code>Pushing to ssh://.../test_app
remote: # On branch master[K
remote: # Changes not staged for commit:[K
remote: #   (use ""git add/rm &lt;file&gt;..."" to update what will be committed)[K
remote: #   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)[K
remote: #[K
remote: #   deleted:    bin/README[K
remote: #[K
remote: # Untracked files:[K
remote: #   (use ""git add &lt;file&gt;..."" to include in what will be committed)[K
remote: #[K
remote: #   COMMIT_EDITMSG[K
remote: #   HEAD[K
remote: #   ORIG_HEAD[K
remote: #   config[K
remote: #   description[K
remote: #   hooks/[K
remote: #   index[K
remote: #   info/[K
remote: #   logs/[K
remote: #   objects/[K
remote: #   refs/[K
remote: no changes added to commit (use ""git add"" and/or ""git commit -a"")[K
remote: I will fail[K
To ssh://.../test_app
 ! [remote rejected] master -&gt; master (pre-receive hook declined)
error: failed to push some refs to 'ssh://.../test_app'
</code></pre>

<p><strong>Conclusion</strong></p>

<p>I assume this means I'm misunderstanding what state git is in at the pre-receive hook.  What should I have in my pre-receive (or some other) hook to prevent an update when the working directory isn't clean?</p>
",0,550672,,
44722735,6899170,6/23/2017 13:32,3,656,<git><bash><digital-ocean><githooks><pm2>,Git hooks environment variables missing,"<p>I am creating a custom build system for my node app on Digital Ocean which involves git hooks to install dependencies and start the app. Part of the app config reads sensitive data (which cannot be checked into the repo) from environment variables. In my git hook I stop the app using an external script, copy the repo files (from <code>SOURCE_REPO</code> to <code>SOURCE_DIR</code> (should have named the variables better, really) and restart the app:</p>

<pre><code># hooks/post-receive
# go to the www repo and stop the app
cd $SOURCE_DIR
if [ -f tools/staging-stop.sh ]; then
    echo ""Stopping the staging app...""
    tools/staging-stop.sh
fi

cd $SOURCE_REPO
git --work-tree=${SOURCE_DIR} checkout --force
cd $SOURCE_DIR

if [ -f tools/staging-start.sh ]; then
    echo ""Starting the staging app...""
    tools/staging-start.sh
fi


# tools/staging-stop.sh
node_modules/.bin/pm2 stop staging
# updates env vars
node_modules/.bin/pm2 delete staging

# tools/stating-start.sh
source /etc/profile.d/my_env_vars.sh
yarn install --production=true
NODE_ENV=staging node_modules/.bin/pm2 start build/index.js --name staging
</code></pre>

<p>However, for a reason I cannot pinpoint, the environment variables in <code>/etc/profile.d/my_env_vars.sh</code> (which I assume should be available without sourcing them) are not present when the git hook launches the app. However, if I <code>ssh</code> into the server and manually start the app with pm2, the environment vars are available, so I am guessing this has to do with the git hook itself and the kind of shell it launches.</p>

<p>I'd really appreciate help on this one.</p>
",0,6899170,,
8470755,622356,12/12/2011 6:40,1,3833,<git><bash><shell><githooks><pre-commit-hook>,"git pre-commit hook, add file into index","<p>I'm trying to write a simple pre-commit hook to check if a file was modified, if so, compress it and add it into the current index, something like this</p>

<pre><code>#!/bin/sh                                                                                                                                                    

# was the file modified?
mf='git status | grep jquery.detectBrowser.js'

# is the non-compressed file in the staging area?
if [ $mf != """" ]
then
  # alert the user
  echo ""Javascript file modified, YUI Compressor will begin now.""

  # go to rhino
  cd $HOME/apps/rhino/yuicompressor-2.4.7/build

  # compress my file
  java -jar yuicompressor-2.4.7.jar ~/www/jquery.detectBrowser.js/jquery.detectBrowser.js -o ~/www/jquery.detectBrowser.js/jquery.detectBrowser.min.js

  # comeback to the initial directory
  cd -

  # add the new file into the index
  git add ~/www/jquery.detectBrowser.js/jquery.detectBrowser.min.js
fi
</code></pre>

<p>I have 2 issues, 1 my condition is failing, every time, I must have a typo or something like that, but I can't figure out what it is? This is the error I get back:</p>

<pre><code>[: 23: git: unexpected operator
</code></pre>

<p>And my second problem is that even if I remove the condition the file is never actually ADDED into the commit, it's modified, but never ADDED.</p>

<p>Thanks,
Leo</p>
",3,622356,0,0
63363406,13989884,8/11/2020 17:28,1,288,<git><git-commit><githooks>,Git prepare-commit-msg,"<p>My Code:</p>
<pre class=""lang-sh prettyprint-override""><code>COMMIT_MSG_FILE=$1
COMMIT_SOURCE=$2
SHA1=$3

git diff --cached --name-status &gt; ./.git/test.txt
git var GIT_COMMITTER_IDENT | sed -n 's/^\(.*&gt;\).*$/Signed-off-by: \1/p'&gt;&gt; .git/test.txt

SOB=$(cat .git/test.txt)
 git interpret-trailers --in-place --trailer &quot;$SOB&quot; &quot;$COMMIT_MSG_FILE&quot;
</code></pre>
<p>I try to get the output of <code>git diff --cached --name-status</code> at the end of the git commit message and that works but the weird part is that if I use <code>git commit</code> and then close the file (COMMIT_EDITMSG) the commit will be committed but if I make a comment out <code>git diff --cached --name-status &gt; ./.git/test.txt</code> then the commit can be aborted through just not editing the file and that is what I try to fix but it seems to I can't any suggestions?</p>
<p>example output is:</p>
<pre><code>M   README.md
Signed-off-by: NAME \&lt;E-Mail\&gt;
</code></pre>
",0,13989884,,
8483451,605356,12/13/2011 1:55,3,2454,<mysql><git><web-applications><githooks>,"How to ""sync""/revision-control an entire mysql database with all git commits and checkouts?","<p>I want to ""synchronize"" a mysql database (and not just the schema) with all git commits and checkouts (probably via hooks) in Linux/BSD/Unix enviornment.</p>

<p>[Useful when controlling the entire presentation + content of a mysql-based web site/application, and other mysql applications, as the code for said sites/applications are under development, and/or to ""rev control"" the entire website. Presumably useful for pushing ""copies"" (exclusively via git) of small, relatively-static websites to various test/production servers that each have separate, independent mysql servers.]</p>

<p>Potential design/workflow: a git commit dumps a mysql database and adds said database (in a .sql file) to the commit (probably via a pre-commit hook).  A subsequent git checkout imports said .sql file (from the current git branch) to the database (probably via a post-commit hook), hence ""synchronized"" with the git commit/branch.  This basically rev-controls the entire database, synchronizing each database rev to a git commit.</p>

<p>How to implement this?</p>
",7,605356,0,0
36374697,2965222,4/2/2016 14:47,1,436,<git><github><githooks><git-tag>,Moving tags on Github UI,"<p>I am looking at on option of using naming conventions(e.g. QA, PROD, SERVER1) and hooks around GIT tags to let users deploy configuration files to specific environments and server pools. This would require that users ""move"" their tags whenever a new set of files need to be deployed to a given environment. Unfortunately, while moving tags seems to be supported via CLI, Github UI doesn't allow that. </p>

<p>Is there any way to accomplish this via the Github UI? Alternately, any suggested alternative approaches to accomplish the same, would be great too. I could use branch conventions and branch-push hook triggers instead of tag conventions, but I feel this reduces the user's flexibility, and might also get confusing if there are too many branches. </p>

<p>Thanks in advance!</p>
",0,2965222,,
52430913,745250,9/20/2018 18:09,0,561,<git><githooks>,Git hook for branch name,"<p>Is it possible to create a Git hook that would prevent creating a brach name not meeting some specific requirements?</p>

<p>Say I want to allow only branch names composed with <code>[-a-z/]</code> (small letters, <code>/</code> and <code>-</code>, i.e. disallow capital letters).</p>

<p>Commit or post hooks are not good enough because someone can do:</p>

<pre><code>git checkout develop
git checkout -b feature/WrongBranchName
</code></pre>

<p>Sure, in this case I can prevent pushing such branch to remote or adding new commits to it, but the branch has already been created.</p>
",2,745250,,
26303167,1007680,10/10/2014 15:43,1,678,<git><ssl><github><githooks><cloudflare>,GitHub hook not working over SSL,"<p>I've got a GitHub hook setup to send repository push updates to my web server so it can pull code automatically. </p>

<p>Since upgrading my website to support SSL and adding a rule to force all requests to use https, the hook has stopped working. I thought the fix would be as simple as prefixing <code>https://</code> to my website hook URL on github, but this hasn't worked.</p>

<p>This is the only output GitHub provides:</p>

<p><img src=""https://i.stack.imgur.com/cbwv3.png"" alt=""enter image description here""></p>

<p>As you can see, everything was working fine last night.</p>

<p>I've tried <a href=""https://www.sslshopper.com/ssl-checker.html#hostname=https://unisaver.co.uk"" rel=""nofollow noreferrer"">verifying my SSL certificate chain and it seems fine</a>. I've also tried mimicking the request GitHub sends using POSTMAN without any problems.</p>

<p>I have a funny feeling CloudFlare may be the root cause of this problem, however turning it off isn't an option at the moment. How else can I try debug this problem?</p>
",0,1007680,0,0
26324519,791713,10/12/2014 11:11,1,70,<git><githooks>,githook doing actions on push based on working tree,"<p>I want to write a githook that, when the remote repository receives a push, reads information from the repositories working tree and performs actions based on the data it can find. If anything breaks during this hook, the push should be rejected! This would work on a non-bare repository only, of course.</p>

<p>I found the <code>update</code> hook to be quite suitable in regards of the time at which it is called. The only problem that I have now is that I can not checkout the newest ref from the <code>update</code> hook because it has not been integrated yet.</p>

<pre><code>#!/bin/sh
# .git/hooks/update
refname=""$1""
if [ ""$refname"" == ""refs/heads/master"" ]; then
    newrev=""$3""
    git checkout ""$newrev""
    # ... read from the tree and perform additional actions
fi
</code></pre>

<p>I (strangely) get this error message:</p>

<pre><code>remote: error: Your local changes to the following files would be overwritten by checkout:
remote:         somefile
</code></pre>

<p>If I understand the <a href=""https://www.kernel.org/pub/software/scm/git/docs/githooks.html"" rel=""nofollow"">documentation</a> correctly, <code>post-update</code> would allow me to do the checkout, but will <em>not</em> allow me to reject the push. Is there a way to do it?</p>

<hr>

<p>Update: I just tried to use <code>post-update</code> and run <code>git -C .. checkout master</code> from it, but I get</p>

<pre><code>remote: fatal: Not a git repository: '.'
</code></pre>

<p>Even if I pass the full path to the non-bare remote repository, it says that it is not a git repository. Why is that? Does Git prevent operating on a non-bare basis inside a hook?</p>

<p>Update: Nevermind, I found it out. Git will always use <code>GIT_DIR</code> if it is set (even when it's empty). <strong>The original question is still open</strong></p>

<pre><code># Procedure that will allow us to use git on a non-bare
# basis. If GIT_DIR is set, git will always use this directory
# instead of any other (cwd or passed via git -C ...)
git()
{
    unset GIT_DIR
    env git $*
}
</code></pre>

<hr>

<p>Update: It seems like you can already checkout the <code>$newrev</code> although it has not been integrated already. This will create a detached HEAD unfortunately, but it gives you the right data into the working tree.</p>
",2,791713,,
9132144,748381,2/3/2012 16:41,92,67227,<git><node.js><github><push><githooks>,How can I automatically deploy my app after a git push ( GitHub and node.js)?,"<p>I have my application (node.js) deployed on a VPS (linux). I'm using git hub as a repository. How can I deploy the application automatically, on git push ?</p>
",3,748381,0,0
52465177,5739521,9/23/2018 10:24,4,2046,<git><githooks><git-husky>,Unable to setup input stream: unable to set IO streams as raw terminal: The handle is invalid,"<p>I am trying to use 'husky' to implement git hooks. I installed husky as a dev-dependancy and included a command in the scripts object. When I try to run the command '<strong>git commit</strong>' I receive the following error:</p>

<pre><code> $git commit -m ""first commit""
unable to setup input stream: unable to set IO streams as raw terminal: The 
handle is invalid.  
</code></pre>

<p>My package.json file is as follows:</p>

<pre><code>    {
  ""name"": ""project"",
  ""version"": ""1.0.0"",
  ""description"": """",
  ""main"": ""index.js"",
  ""scripts"": {
    ""test"": ""echo \""Error: no test specified\"" &amp;&amp; exit 1"",
    ""precommit"":""npm run test""
  },
  ""author"": """",
  ""license"": ""ISC"",
  ""devDependencies"": {
    ""husky"": ""~1.0.0-rc.15""
  }
}
</code></pre>

<p>My expectation is to run the test command but I get an error.</p>

<p>Please help!</p>

<p>Thanks in advance</p>
",0,5739521,0,0
63476694,5953419,8/18/2020 21:11,3,1922,<bash><git><shell><github><githooks>,Enforce hook for branch creation in GitHub enterprise to not allow creating branches with names with certain regex pattern,"<p>We have a requirement where collaborators with write access to a GitHub repository should not be allowed to create branches with certain names. They can create locally but can't push to remote and also can't create directly using the GitHub UI. I know we can do something like this using git hook and enable that for that repo on the server side (on github enterprise server), but struggling to figure out how. Is that even possible?</p>
<p>If so I would like a shell script or something similar that I can use as hook to reject creation/push of any branches that start with the string release. I tried the below by adding a pre-receive hook on the github enterprise server but it doesn't do any good. Created a repo with a branch_hook.sh file and configured that hook and enabled it on a repo to test.</p>
<pre><code>#!/bin/bash
branch=`git rev-parse --abbrev-ref HEAD`
if [[ &quot;$branch&quot; == release* ]]; then
    echo &quot;Your branch starts with release and is not allowed to be        
          pushed. Please create one that doesn't start with the release&quot;
    exit 1
fi
</code></pre>
<p>It looks like GitHub server doesn't validate the branch name at all. If I execute it locally under a git repo, it works fine but git commit or push doesn't consider it at all.</p>
<p>Based on VonC's suggestions I tried this but doesn't seem to work.
Since I couldn't get the script at <a href=""https://gist.github.com/caniszczyk/1327469"" rel=""nofollow noreferrer"">https://gist.github.com/caniszczyk/1327469</a>
to work so tried something of my own.</p>
<pre><code>#!/bin/bash
# Reject branch pushes that contain commits under those branches that have names starting with release

first_commit='0000000000000000000000000000000000000000'

while read -r oldrev newrev refname; do

    [ &quot;$newrev&quot; = &quot;$first_commit&quot; ] &amp;&amp; continue


    [ &quot;$oldrev&quot; = &quot;$first_commit&quot; ] &amp;&amp; range=&quot;$newrev&quot; || range=&quot;$oldrev..$newrev&quot;

    for commit in $(git rev-list &quot;$range&quot; --not --all); do
        if [[ &quot;${refname#refs/heads/}&quot; == release* ]]; then
    
            echo &quot;ERROR: Your push was rejected because the commit&quot;
            echo &quot;ERROR: $commit in ${refname#refs/heads/}&quot;
            echo &quot;ERROR: is not allowed as ${refname#refs/heads/} is not supported branch name&quot;
            echo &quot;ERROR: Please fix your branch name or contact your repository admin.&quot;
            exit 1
        fi
    done

done
</code></pre>
<p>This works great when you create branch locally (just created newly or created newly and some commits added) and try to push to remote however there is no way to prevent creating branches using GitHub UI as the hook doesn't work in that scenario as its not a push event. So I am wondering how to get the script at <a href=""https://gist.github.com/caniszczyk/1327469"" rel=""nofollow noreferrer"">https://gist.github.com/caniszczyk/1327469</a> to work if that is a true solution that works in both the cases.</p>
",10,5953419,0,0
36435487,534908,4/5/2016 19:34,1,4681,<jenkins><jenkins-plugins><githooks><jenkins-workflow><jenkins-pipeline>,How do I prevent Jenkins pipeline (workflow) from triggering multiple builds when used with multiple git repos?,"<p>If you have a workflow which uses multiple git repositories, each git push triggers a build in Jenkins.</p>

<p>If I have a workflow job configured to poll 10 git repositories and I pushed changes to all of them [quite possible when doing a release build] - that's 10 builds in the queue. This is both good and bad.  Bad because we will have changes in different repositories and we would like to kick off the build once all the files are in. At the same time I don't want to avoid polling the repositories.</p>

<blockquote>
  <p>stage 'REPO-1' {<br>
  git branch: ""feature/testbranch"", changelog: true,
  poll: true, url: 'ssh://git@stash.com/repo1.git', credentialsId: 'xxx' 
  }</p>
  
  <p>stage 'REPO-2' {<br>
  git branch: ""feature/testbranch"", changelog: true,
  poll: true, url: 'ssh://git@stash.com/repo2.git', credentialsId: 'xxx'
  }</p>
</blockquote>

<p>Is there a way I can prevent this behavior perhaps introduce a delay in polling. </p>
",0,534908,0,0
9157336,330867,2/6/2012 8:23,2,432,<git><auto-update><githooks>,Post-receive hook that auto deploy newly pushed data?,"<p>I'm looking to implement a post-receive script that would deploy my newly pushed data to a local folder.</p>

<p>Using Linux/bash I already done something equivalent, but I use <code>git pull</code>, and I often have conflicts when the local folder have some changes regarding the pull (the website is running).</p>

<p>I don't know if the best way is to keep the pull, or do a reset or something else, better, cleaner?</p>

<p>By the way, would it be possible to automatically deploy the newly pushed data only if I indicate it, without having to make a branche/tag everytime? I'm a newbie with git and I don't know if this is possible.</p>

<p>The reason I'd like this is since a push automatically update the website, I sometime want to save the changes but not everything is fully working.</p>

<p>Thank you really much for your help.</p>
",0,330867,0,0
9648923,921319,3/10/2012 18:13,19,3301,<git><hook><githooks>,Git hook for merge conflicts,"<p>Is there a git hook I can use for merge conflicts? After a failed <code>git merge</code>, it would be great to be able to write a script that opens all files with conflicts in <code>$EDITOR</code>. Unfortunately the <code>post-merge</code> hook doesn't run if there are conflicts and from what I've seen in the <code>githooks</code> man page, there are no other applicable hooks.</p>

<p>I'm wondering if I've missed something, or if there are other alternatives short of aliasing 'git merge' to a function or something like that. </p>

<p>Thanks,
Chris</p>
",4,921319,0,0
52507578,999165,9/25/2018 22:42,-2,312,<githooks><gitolite>,what does gitolite setup fix?,"<p>gitolite info didn't work, adding keys turned them into a <code>no access</code> key and did NOT create a corresponding entry in auth-keys file. </p>

<p><strong>To fix this run <code>gitolite setup</code> on gitolite server</strong></p>

<h2>Question: what could have landed me in that mess?</h2>

<p>And what does <code>gitolite setup</code> do when invoked for the n-th time (it's no longer setting things up, according to the docs it fixes hooks, but I wonder what the use case would be and which was mine)?</p>

<h2>More details on gitolite info</h2>

<p>gitolite info command is invoked like so: </p>

<pre><code>&gt; ssh git-user@ser-git
PTY allocation request failed on channel 0
hello git-admin, this is ...@... running gitolite3 3.6.7-2 (Debian) on git 2.17.1

 R W    some-repository
 R W    gitolite-admin
 R W    testing
Connection to ser-git closed.
</code></pre>

<p>Bad output is: <code>FATAL: unknown git/gitolite command: 'info'</code></p>

<h2>More details: keys without access.</h2>

<p><code>gitolite sshkeys-lint</code> was showing keys with <code>(no access)</code>, now those keys have access as I set them (now meaning after <code>gitolite setup</code>).</p>

<p><code>ssh-keygen -lf /home/repo/.ssh/authorized_keys | wc -l</code> (or without piped part, regardless) number of keys and their names indicated I didn't have the newest one added.</p>

<p>Similar question that did not work for me: <a href=""https://stackoverflow.com/questions/24149802/keydir-entries-not-propagating-to-authorized-keys"">keydir entries not propagating to authorized_keys</a></p>
",0,999165,0,0
9650830,69051,3/10/2012 22:41,0,191,<trac><githooks>,post-receive hook fails to update Trac ticket upon push with several commits for the same ticket,"<p>There is a Trac 0.11.7 environment, which is integrated with a Git repository using <a href=""http://trac-hacks.org/wiki/GitPlugin"" rel=""nofollow"">GitPlugin</a>. This repository has a post-receive hook, which is a <a href=""http://trac-hacks.org/attachment/wiki/GitPlugin/trac-post-receive-hook.3.py"" rel=""nofollow"">copy</a> of the one provided by the GitPlugin team.</p>

<p>The post-receive hook is triggered when developers push their changes to the server. If the pack contains one commit per tiket then everything works perfectly -- individual commit messages are associated with respective tickets.</p>

<p>However, if there are several commits for the same ticket then only the latest commit gets associated with a ticket, with the following error for the rest of commits:</p>

<blockquote>
  <p>Unexpected error while processing ticket ID 1: columns ticket, time,
  field are not unique</p>
</blockquote>

<p>The hook (written in python) has been analysed, and it would appear that the time portion of the argument <code>now</code> of the call <code>ticket.save_changes(eml, msg, now, db, cnum + 1)</code> in function <code>handle_commit</code> differs only by milliseconds for sequentially processed commits.</p>

<p>The database used for Trac is SQLite, which most likely does not handle milliseconds as part of the date/time type.</p>

<p>What would be a good and easy solution to resolve the above situation?</p>
",0,69051,,
45295435,3444930,7/25/2017 6:26,0,1176,<git><version-control><githooks>,Is it possible to change files and commit on git pre-receive/pre-push hook?,"<p>I'm Looking at implementing a <em>pre-recieve/pre-push</em> hook(Not aware which one should be used)</p>

<p><strong>Use case</strong>: </p>

<p>I have a repository of JSONs, any one can change the files in repo(i.e commit). But on push, I would like to calculate the diffs (i.e files added/deleted/modified) against the upstream and store it as another JSON file in the repository and continue the push along with the new JSON that was added.</p>

<p>Is this possible?</p>
",4,3444930,,
9653076,425313,3/11/2012 7:00,0,503,<php><git><cakephp><heroku><githooks>,"Automatic PHP asset compilation & caching with git, heroku","<p>I have some assets (ie, JS, CSS) that I need to compile for my CakePHP app hosted on Heroku utilizing <a href=""https://github.com/markstory/asset_compress"" rel=""nofollow"">AssetCompress</a>.  I'd like to automate the compilation process so that the files are cached and ready to be loaded by the user.  Since these are ephemeral cache files, it seems like the ideal place to do this would be on Heroku once it receives the push (as opposed to committed into the git repo), but I can't seem to find a way to do that.</p>

<p>So, what's the simplest way I can automate this compilation/caching process to save myself having to do it manually every time I need to push changes?</p>
",0,425313,,
36490808,1683943,4/8/2016 3:03,1,131,<git><bash><github><symlink><githooks>,Symlink not maintaining actual link in git,"<p>I have a bash file which quite simple has the following:</p>

<p><strong>/root/git-bin/create-hook-symlinks.sh</strong></p>

<pre><code>#!/bin/bash
HOOK_NAMES=""pre-commit""
ROOT=$(git rev-parse --show-toplevel)
# assuming the script is in a bin directory, one level into the repo
HOOK_DIR=$ROOT/.git/hooks
CUSTOM_HOOKS_DIR=$ROOT/git-bin/git-hooks
# make sure the hooks are executable
chmod +x $CUSTOM_HOOKS_DIR/*

for hook in $HOOK_NAMES; do
    # If the hook already exists, is executable, 
    # and is not a symlink don't overwrite it but rename it 
    # to something unique ( suffix with local)
    if [ ! -h $HOOK_DIR/$hook -a -x $HOOK_DIR/$hook ]; then
        mv $HOOK_DIR/$hook $HOOK_DIR/$hook.local
    fi
    ln -s $CUSTOM_HOOKS_DIR/$hook $HOOK_DIR/$hook
done
</code></pre>

<p>The actual hook file I'm trying to symlink lives under</p>

<p><strong>/root/git-bin/git-hooks/pre-commit</strong></p>

<p>Lets say for now inside the pre-commit file I just have:</p>

<pre><code>#!/bin/bash
VALUE=""FOO""
</code></pre>

<p>When I run sh create-hook-symlinks it will create the pre-commit file
under /root/.git/hooks/pre-commit but if I then update the pre-commit file in the /root/git-bin/git-hooks/pre-commit file it doesn't update the linked version.</p>

<p>What am I doing wrong?</p>
",1,1683943,0,0
36509391,5027790,4/8/2016 21:08,1,71,<git><githooks><gitolite>,Unable to execute git hook,"<p>I'm using Gitolite and Redmine together. I created a bare repo (<code>contacts</code>) with RW+ permissions for the user <code>user</code>, Gitolite is running under user <code>git</code> and Redmine under <code>redmine</code>. To use Redmine I cloned <code>contacts</code> with the command <code>git clone --mirror</code> in the same machine and configured Redmine.</p>

<p>I commit and push with <code>user</code> and created a <code>post-receive</code> hook in the bare repo to fetch the changes (<code>git remote update</code>) in the local repo. </p>

<p>The problem is that the hook is never executed and I need to do it manually to update it, but when I try, I get the error <code>error: cannot open FETCH_HEAD: Permission denied</code> even when <code>user</code> is part of <code>git</code> group.</p>

<p>How to make sure the hook is working?</p>
",0,5027790,0,0
27850514,4028355,1/8/2015 22:15,0,254,<git><sublimetext3><githooks><post-commit-hook>,Having trouble using Git hooks with Sublime Text 3?,"<p>I added a post-commit git hook with Sublime Text 3, with the following text in it:</p>

<pre><code>#!/bin/sh

git push -u origin master
</code></pre>

<p>What's odd is that committing from Git Bash's command line successfully pushes the project, but when I try to do the same using a package in Sublime Text, it does not work. The package is supposed to map a keyboard shortcut (ctrl+a) to commit a file, which it does, but it does not push the file afterward; it only commits it. Why would this work in the command line, but not in Sublime Text?</p>
",3,4028355,,
52616533,8425836,10/2/2018 21:17,3,2401,<git><github><bitbucket><githooks><pre-commit-hook>,Create a git hook to prevent merges to specific branches in local repository but allows pulling from a remote,"<p>This might be just a case of me misunderstanding git, but my situation is as follows:</p>

<p>I have a <code>master</code> branch where I want to have only stable working code. Any addition to this branch must come from a pull-request in bitbucket (could be github or something else, it's just the tool we use). So I want to create a git hook in my local repository to prevent any merging into the <code>master</code> branch but that also allows me to fetch/pull changes from my remote repository at bitbucket.</p>

<p>I already have git configured to disallow fast-forward merges.</p>

<p>I looked into these solutions that provide something similar, that is to say, a whitelist and a blacklist of branches that can/can't merge into master:</p>

<p><a href=""https://stackoverflow.com/questions/51463829/git-hook-prevent-merging-specific-branch"">Git hook prevent merging specific branch</a></p>

<p><a href=""https://bl.ocks.org/slattery/5eea0d6ca64687ecba6b"" rel=""nofollow noreferrer"">https://bl.ocks.org/slattery/5eea0d6ca64687ecba6b</a></p>

<p>Also this solution prevents me from commiting directly into master, which is also very useful:</p>

<p><a href=""https://stackoverflow.com/questions/40462111/git-prevent-commits-in-master-branch"">Git: Prevent commits in master branch</a></p>

<p>However I'm not clear if any of these would prevent me from pulling in changes made by pull-requests in bitbucket/github into my local working repository.</p>

<p>Many thanks!</p>

<p>[edit]
As suggested below I had also already setup <a href=""https://confluence.atlassian.com/bitbucket/branch-permissions-385912271.html"" rel=""nofollow noreferrer"">branch permissions</a> in my bitbucket repo, but that prevents me only from pushing merged <code>master</code> branches. I want to prevent merging into <code>master</code> locally instead.</p>
",0,8425836,0,0
37455781,6313756,5/26/2016 8:42,2,887,<git><gitlab><githooks><git-post-receive>,Gitlab post-receive hook Host key verification failed,"<p>I'm having 3 servers:</p>

<pre><code>werkstation.example.com -&gt; server where the gitlab repository is cloned &amp; for changing the files fom the repository
git.example.com -&gt; gitab server with repository ""tomcat""
docker.example.com -&gt; server where the files will be copied with git hook
</code></pre>

<p>My git hook:</p>

<pre><code>#!/bin/sh

read oldrev newrev refname

REPO=""git@git.example.com:michaelv1234/tomcat.git""
BRANCH=`echo $refname | sed -n 's/^refs\/heads\///p'`
BRANCH_DIR=""/home/michael""
SSH_DEST=""michael@docker.example.com""

##
# Instantiate the branches on the puppetmaster
if [ ""$newrev"" -eq 0 ] 2&gt; /dev/null; then
        # branch is being deleted
        echo ""Deleting remote branch $SSH_DEST $BRANCH_DIR/$BRANCH""
        echo ""$SSH_DEST"" /bin/sh
        ssh  ""$SSH_DEST"" /bin/sh &lt;&lt;-EOF
                cd ""$BRANCH_DIR"" &amp;&amp; rm -rf $BRANCH
        EOF
else
        # branch is being updated
        echo ""Updating remote branch $SSH_DEST $BRANCH_DIR/$BRANCH""
        ssh ""$SSH_DEST"" /bin/sh &lt;&lt;-EOF
                { cd ""$BRANCH_DIR/$BRANCH"" || mkdir -p ""$BRANCH_DIR/$BRANCH"" &amp;&amp; cd ""$BRANCH_DIR/$BRANCH""; } \
                &amp;&amp; { git fetch origin &amp;&amp; git reset --hard origin/$BRANCH || { git clone ""$REPO"" ./ &amp;&amp; git checkout $BRANCH; }; }
        EOF
fi
</code></pre>

<p>But i'm still receiving this error:</p>

<pre><code>michael@werkstation:~/tomcat$ git push -u origin master
Counting objects: 5, done.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 254 bytes | 0 bytes/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: Updating remote branch michael@docker.example.com /home/michael/master
remote: Host key verification failed.
To git@git.example.com:michaelv1234/tomcat.git
0032c02..6e8ef97  master -&gt; master
Branch master set up to track remote branch master from origin.
</code></pre>

<p>I have already removed the  ""known_hosts"" file on every servers but i'm still getting the error</p>
",4,6313756,0,0
37479682,6390088,5/27/2016 9:22,0,21,<git><email><gitlab><githooks>,How to send e-mails to addresses specified in issue/issue comments with post-commit githooks?,"<p>It's been a while now I try to find hints on how to do it but I think I need some help to set me on tracks. Here's the situation :</p>

<p>For my company, it is very important to keep the customers updated with any possible news about the progress made on the development of the features they asked. However, our current process is not as efficient as it should, for the support team has to manually crawl the issues on GitLab to know what development status the features are in, and have then to call the customers on by one. Not cool.</p>

<p>The idea would be then to use Git hooks to automatically send e-mails to customers after commits and/or merge ; I would have the e-mail addresses in the issue or in the issue's comments.</p>

<p>I've been looking through Git hooks documentation and found out how to send e-mails to the team, but that's obviously not so close to what I want. So :</p>

<ul>
<li><strong>is this possible to achieve</strong> ?</li>
<li>if so, is there any tutorial, specific documentation that I missed out and you could advise me to explore ?</li>
<li>any complementary advice or example would be more than welcome :)</li>
</ul>

<p>Thanks for the forthcoming help :)</p>

<p><strong>EDIT</strong> : After digging a little deeper, it appears GitLab <a href=""https://gitlab.com/gitlab-org/gitlab-ce/blob/master/doc/web_hooks/web_hooks.md"" rel=""nofollow"">Web hooks</a> would be more appropriated to my purpose and easier to set up. Problem solved !</p>
",2,6390088,,
53551601,9650215,11/30/2018 5:12,2,2919,<git><githooks><git-post-receive>,"I edited gitignore to allow my images storage folder to upload, but when I push nothing is updated","<p>I recently setup post-receive hooks on my digital ocean droplet and connected it with my laravel local project. Everything works great except my public/storage/images don't get uploaded with each commit. I tried to edit my local .gitignore file so it doesnt include the public/storage folder but nothing is being uploaded when I commit. Here is my current .gitignore file contents</p>

<pre><code>/node_modules
/public/hot
/storage/framework/*.key
/storage/logs/*.key
/vendor
/.idea
/.vscode
/.vagrant
Homestead.json
Homestead.yaml
npm-debug.log
yarn-error.log
.env
.phpunit.result.cache
</code></pre>

<p>I changed the /public/storage and /storage/*.key</p>

<p>Thanks Chris</p>
",1,9650215,0,0
70296045,1564946,12/9/2021 20:05,0,386,<git><github><github-pages><githooks>,GitHub git hook on remote site to update wiki pages,"<p>The LTP project on GitHub stores wiki sources in <a href=""https://github.com/linux-test-project/ltp/tree/master/doc"" rel=""nofollow noreferrer""><code>doc/</code></a> directory (but there are other files which aren't wiki sources).</p>
<p>From time to time I update the GitHub wiki with a local script, which</p>
<ol>
<li><p>pulls <a href=""https://github.com/linux-test-project/ltp.wiki.git"" rel=""nofollow noreferrer""><code>ltp.wiki.git</code></a></p>
</li>
<li><p>copies files from ltp.git <code>doc/</code> directory into <code>ltp.wiki.git</code></p>
</li>
<li><p><code>git commit .</code> in <code>ltp.wiki.git</code></p>
</li>
<li><p><code>git push</code> in <code>ltp.wiki.git</code></p>
</li>
</ol>
<p>I'd like to have a git hook, which would do it after push on remote repository (<a href=""https://git-scm.com/docs/githooks#post-update"" rel=""nofollow noreferrer""><code>post-update</code></a>?). Is that possible?</p>
",0,1564946,,
53610718,10743452,12/4/2018 10:22,0,1189,<git><githooks>,Auto setting custom hooks while cloning git repository?,"<p>Once I cloned the Bitbucket repository, under .git/hooks I'm able to see the pre-commit hook, and I have tested the execution with my own conditions to execute before commit.
Now I want the same pre-commit hook script to be shared within the team, and let others also use the same hook at their local .git repo.</p>

<p>As we are unable to push the .git/hooks changes to the remote repo, how can the other person get the same hooks at his local .git/repo?</p>

<p>Is there any way by cloning the git repo, that it will automatically modify the config path setting like HooksPath = ..... or execute the symlink command internally after the clone operation completed?</p>

<p>How can we achieve auto setting the custom hooks while cloning the git repository?</p>

<p>Please help me.. to distribute the hook scripts within my team.</p>
",2,10743452,,
53650904,3363528,12/6/2018 11:54,0,838,<bash><git><shell><githooks>,Local `commit-msg` doesn't work in conjunction with global `prepare-commit-msg`,"<p>When I have my global git hooks directory (which contains just a <code>prepare-commit-msg</code> hook) set up in config, my local <code>commit-msg</code> doesn't run (although the global hook does). However, when I disable the global <code>prepare-commit-msg</code> hook (by commenting out <code>core.hookspath</code> in <code>gitconfig</code>), the local <code>commit-msg</code> hook works just fine.</p>

<p><code>~/dotfiles/git-hooks/prepare-commit-msg</code></p>

<pre><code>#!/usr/bin/env bash

pcregrep -Mv '(# Please.*|# with.*|^#$\n(?!#)|^#$(?=\n# On))' $1 &gt; /tmp/msg &amp;&amp; cat /tmp/msg &gt; $1
</code></pre>

<p><code>./.git/hooks/commit-msg</code> (<a href=""http://review.example.com/tools/hooks/commit-msg"" rel=""nofollow noreferrer"">Gerrit's hook to add change-id's if necessary</a>, trimmed to remove license comments)</p>

<pre><code>#!/bin/sh

...

unset GREP_OPTIONS

CHANGE_ID_AFTER=""Bug|Depends-On|Issue|Test|Feature|Fixes|Fixed""
MSG=""$1""

# Check for, and add if missing, a unique Change-Id
#
add_ChangeId() {
    clean_message=`sed -e '
        /^diff --git .*/{
            s///
            q
        }
        /^Signed-off-by:/d
        /^#/d
    ' ""$MSG"" | git stripspace`
    if test -z ""$clean_message""
    then
        return
    fi

    # Do not add Change-Id to temp commits
    if echo ""$clean_message"" | head -1 | grep -q '^\(fixup\|squash\)!'
    then
        return
    fi

    if test ""false"" = ""`git config --bool --get gerrit.createChangeId`""
    then
        return
    fi

    # Does Change-Id: already exist? if so, exit (no change).
    if grep -i '^Change-Id:' ""$MSG"" &gt;/dev/null
    then
        return
    fi

    id=`_gen_ChangeId`
    T=""$MSG.tmp.$$""
    AWK=awk
    if [ -x /usr/xpg4/bin/awk ]; then
        # Solaris AWK is just too broken
        AWK=/usr/xpg4/bin/awk
    fi

    # Get core.commentChar from git config or use default symbol
    commentChar=`git config --get core.commentChar`
    commentChar=${commentChar:-#}

    # How this works:
    # - parse the commit message as (textLine+ blankLine*)*
    # - assume textLine+ to be a footer until proven otherwise
    # - exception: the first block is not footer (as it is the title)
    # - read textLine+ into a variable
    # - then count blankLines
    # - once the next textLine appears, print textLine+ blankLine* as these
    #   aren't footer
    # - in END, the last textLine+ block is available for footer parsing
    $AWK '
    BEGIN {
        if (match(ENVIRON[""OS""], ""Windows"")) {
            RS=""\r?\n"" # Required on recent Cygwin
        }
        # while we start with the assumption that textLine+
        # is a footer, the first block is not.
        isFooter = 0
        footerComment = 0
        blankLines = 0
    }

    # Skip lines starting with commentChar without any spaces before it.
    /^'""$commentChar""'/ { next }

    # Skip the line starting with the diff command and everything after it,
    # up to the end of the file, assuming it is only patch data.
    # If more than one line before the diff was empty, strip all but one.
    /^diff --git / {
        blankLines = 0
        while (getline) { }
        next
    }

    # Count blank lines outside footer comments
    /^$/ &amp;&amp; (footerComment == 0) {
        blankLines++
        next
    }

    # Catch footer comment
    /^\[[a-zA-Z0-9-]+:/ &amp;&amp; (isFooter == 1) {
        footerComment = 1
    }

    /]$/ &amp;&amp; (footerComment == 1) {
        footerComment = 2
    }

    # We have a non-blank line after blank lines. Handle this.
    (blankLines &gt; 0) {
        print lines
        for (i = 0; i &lt; blankLines; i++) {
            print """"
        }

        lines = """"
        blankLines = 0
        isFooter = 1
        footerComment = 0
    }

    # Detect that the current block is not the footer
    (footerComment == 0) &amp;&amp; (!/^\[?[a-zA-Z0-9-]+:/ || /^[a-zA-Z0-9-]+:\/\//) {
        isFooter = 0
    }

    {
        # We need this information about the current last comment line
        if (footerComment == 2) {
            footerComment = 0
        }
        if (lines != """") {
            lines = lines ""\n"";
        }
        lines = lines $0
    }

    # Footer handling:
    # If the last block is considered a footer, splice in the Change-Id at the
    # right place.
    # Look for the right place to inject Change-Id by considering
    # CHANGE_ID_AFTER. Keys listed in it (case insensitive) come first,
    # then Change-Id, then everything else (eg. Signed-off-by:).
    #
    # Otherwise just print the last block, a new line and the Change-Id as a
    # block of its own.
    END {
        unprinted = 1
        if (isFooter == 0) {
            print lines ""\n""
            lines = """"
        }
        changeIdAfter = ""^("" tolower(""'""$CHANGE_ID_AFTER""'"") ""):""
        numlines = split(lines, footer, ""\n"")
        for (line = 1; line &lt;= numlines; line++) {
            if (unprinted &amp;&amp; match(tolower(footer[line]), changeIdAfter) != 1) {
                unprinted = 0
                print ""Change-Id: I'""$id""'""
            }
            print footer[line]
        }
        if (unprinted) {
            print ""Change-Id: I'""$id""'""
        }
    }' ""$MSG"" &gt; ""$T"" &amp;&amp; mv ""$T"" ""$MSG"" || rm -f ""$T""
}
_gen_ChangeIdInput() {
    echo ""tree `git write-tree`""
    if parent=`git rev-parse ""HEAD^0"" 2&gt;/dev/null`
    then
        echo ""parent $parent""
    fi
    echo ""author `git var GIT_AUTHOR_IDENT`""
    echo ""committer `git var GIT_COMMITTER_IDENT`""
    echo
    printf '%s' ""$clean_message""
}
_gen_ChangeId() {
    _gen_ChangeIdInput |
    git hash-object -t commit --stdin
}


add_ChangeId
</code></pre>

<p><code>~/dotfiles/gitconfig</code> (trimmed) when global hook is enabled.</p>

<pre><code>...

[core]
    editor = code -rwg $1:2
    excludesfile = /Users/shreyasminocha/.gitignore
    compression = 0
    hookspath = /Users/shreyasminocha/dotfiles/git-hooks

...
</code></pre>

<p>Git version: 2.18.0</p>

<p>Edit: As @phd pointed out in the comments, ""The problem is that global hookspath completely takes over local hooks. If the global hookspath is defined local hooks are never consulted. [I had] to create global /Users/shreyasminocha/dotfiles/git-hooks/commit-msg that [would] run local .git/hooks/commit-msg"". Confirming duplicate.</p>
",3,3363528,,
70383326,11091157,12/16/2021 17:35,1,117,<bash><git><githooks><bitbucket-server>,Create a git server side hook for sanity check of configuration file,"<p>I would like to create a server side git hook to perform a sanity check on a configuration file in a repository.</p>
<p>Based on my research I came across &quot;pre-receive&quot; hooks ( a hook that gets triggered upon push ).</p>
<p>I setup my testing atlassian bitbucket server and create a new repository to which I navigated into the pre-receive hook directory in which scripts should reside.</p>
<p>Created a test script that rejects any push on master with an error print. Everything works fine so far.</p>
<p>Now, to my sanity check hook.
I came up with the following.</p>
<pre><code>#!/usr/bin/env bash

CONFIGFILE = &quot;full-path-to-config-file&quot;
EXPECTED_CONF_MASTER = &quot;configEntry1=expectedValue1&quot;
EXPECTED_CONF_TEST = &quot;configEntry2=expectedValue2&quot;

while read oldrev newrev refname; do
    echo &quot;$refname : $oldrev --&gt; $newrev&quot;
    current_branch=$refname
    short_current_branch=&quot;$(echo $current_branch | sed 's/refs\/heads\///g')&quot;

    newFiles=$(git diff --stat --name-only --diff-filter=ACMRT ${oldrev} ${newrev})

    if [[ &quot;$short_current_branch&quot; = &quot;test&quot; ]]; then

        echo $newFiles | grep $CONFIGFILE &gt;/dev/null || exit 0 #CONFIGFILE has not been modified
        git cat-file --textconv &quot;${newrev}:$CONFIGFILE&quot; | grep &quot;$EXPECTED_CONF_TEST&quot; || echo &quot;invalid config&quot; &amp;&amp; exit 1

    elif [[ &quot;$short_current_branch&quot; = &quot;master&quot; ]]; then

        echo $newFiles | grep $CONFIGFILE &gt;/dev/null || exit 0 #CONFIGFILE has not been modified
        git cat-file --textconv &quot;${newrev}:$CONFIGFILE&quot; | grep &quot;$EXPECTED_CONF_MASTER&quot; || echo &quot;invalid config&quot; &amp;&amp; exit 1

    fi

done

</code></pre>
<p>However, I keep getting this error upon push. I am not sure what is wrong.</p>
<pre><code>Username for 'http://localhost:7990': seif
Password for 'http://seif@localhost:7990': 
Counting objects: 4, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (4/4), 386 bytes | 386.00 KiB/s, done.
Total 4 (delta 1), reused 0 (delta 0)
remote: refs/heads/test : 1820f938babb12800d7d7726859bb86c03edb12a --&gt; 28a1e8113d9ceebc41c6dd2d29a1ec2ebf626510
remote: 
remote: fatal: Invalid revision range 1820f938babb12800d7d7726859bb86c03edb12a..28a1e8113d9ceebc41c6dd2d29a1ec2ebf626510
remote: 
remote: Create pull request for test:
remote:   http://localhost:7990/projects/myproj1/repos/bamboo-specs/pull-requests?create&amp;sourceBranch=refs/heads/test
remote: 
To http://localhost:7990/scm/myproj1/bamboo-specs.git
   1820f93..28a1e81  test -&gt; test
</code></pre>
",14,11091157,,
70407772,3984182,12/18/2021 22:56,1,220,<elixir><githooks><lint-staged>,lint-staged for elixir/phoenix projects,"<p>How would one lint files staged to commit, not all files in the project, using <code>mix credo</code>, <code>mix format</code>, etc?</p>
<p>In the JavaScript ecosystem this is accomplished with <code>lint-staged</code> and <code>husky</code>. Elixir has its version of the husky package called <code>git_hooks</code>, but I haven't found anything resembling lint-staged.</p>
<p>Is there an elixir package that exists to accomplish my goal of only running lint commands when I commit elixir files?</p>
<p>Example config I run with git_hook in config/dev.ex.</p>
<pre><code>config :git_hooks,
  auto_install: true,
  verbose: true,
  mix_path: &quot;docker exec --tty $(docker-compose ps -q web) mix&quot;,
  hooks: [
    pre_commit: [
      tasks: [
        {:mix_task, :format, [&quot;--check-formatted&quot;]},
        {:mix_task, :credo, [&quot;--strict&quot;]}
      ]
    ]
  ]
</code></pre>
",2,3984182,,
70439165,3784238,12/21/2021 17:09,-1,116,<ruby><bash><git><githooks><pre-commit-hook>,Git hook prepare-commit-msg to prevent merging forbidden branches - translate Ruby to Bash,"<p>I'm trying to implement a git hook to prevent users from merging our environment branches (other than main) into ticket branches. <a href=""https://bl.ocks.org/slattery/5eea0d6ca64687ecba6b"" rel=""nofollow noreferrer"">This hook</a> is exactly what I need, except for that it's written in Ruby. I need my hook to be in bash or shell so that it's easy for all of our devs to adopt without having to modify their machines. The issue is I'm struggling with figuring out how to translate it since I'm not experienced with bash scripting for git.</p>
<p>Here is the script in Ruby:</p>
<pre><code>#!/usr/bin/env ruby
FORBIDDEN_BRANCHES = [&quot;uat&quot;, &quot;support&quot;]

def merge?
  ARGV[1] == &quot;merge&quot;
end

def merge_msg
  @msg ||= `cat .git/MERGE_MSG`
end

def from_branch
  @from_branch = merge_msg.match(/Merge branch '(.*?)'/)[1]
end

def from_forbidden_branch?
  FORBIDDEN_BRANCHES.include?(from_branch)
end

if merge? &amp;&amp; from_forbidden_branch?
  out = `git reset --merge`
  puts
  puts &quot; STOP THE PRESSES!&quot;
  puts &quot; You are trying to merge #{from_branch} into your branch.&quot;
  puts &quot; Surely you don't mean that?&quot;
  puts
  puts &quot; run the following command now to discard your working tree changes:&quot;
  puts
  puts &quot; git reset --merge&quot;
  puts
  exit 1
end
</code></pre>
<p>This is what I've got so far... I've figured out how to set the FORBIDDEN_BRANCHES array, and check if the current action being executed is a merge. What I'm missing is how to get the actual FROM_BRANCH (it's currently hardcoded to &quot;support&quot;)</p>
<pre><code>#!/bin/bash
FORBIDDEN_BRANCHES=(&quot;uat&quot; &quot;support&quot; &quot;develop&quot;)
FROM_BRANCH=&quot;support&quot;
FROM_FORBIDDEN=0

for i in ${!FORBIDDEN_BRANCHES[@]}; do
  if test ${FORBIDDEN_BRANCHES[$i]} = $FROM_BRANCH
  then
    echo &quot;Merging from $FROM_BRANCH is forbidden&quot;
    FROM_FORBIDDEN=1
  fi
done

echo $FROM_FORBIDDEN

if test &quot;$2&quot; = &quot;merge&quot;
then
    if test $FROM_FORBIDDEN = 1
    then
        echo &quot;STOP!&quot;
        exit 1
    else
        echo &quot;FROM_FORBIDDEN != 1, continuing&quot;
    fi
else
    echo &quot;Not merging&quot;
fi

echo &quot;Got to the end without errors...&quot;
</code></pre>
",0,3784238,,
37670122,3895968,6/7/2016 3:46,2,1021,<github><jenkins><jenkins-plugins><githooks>,Jenkins integration with Github plugin for Private repository,"<p>I have installed Jenkins in an Azure VM.
Version - 1.651.2</p>

<p>Path to Git :
<a href=""https://i.stack.imgur.com/MlrV1.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/MlrV1.png"" alt=""enter image description here""></a></p>

<p>Installed Plugins :
Credentials Plugin - 2.0.7
Git Hub Credentials Plugin - 0.24
Git Hub Plugin - 1.19.1
SSH Credentials Plugin - 1.12</p>

<p><a href=""https://i.stack.imgur.com/DJeU1.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/DJeU1.png"" alt=""enter image description here""></a></p>

<p><a href=""https://i.stack.imgur.com/OHtzf.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/OHtzf.png"" alt=""enter image description here""></a>
In the repo Url tried both https and ssh with username/password and ssh/private key aswell, still unable to pull from git server.</p>

<p>Console Output :</p>

<pre><code>Started by user anonymous
Building in workspace C:\Program Files (x86)\Jenkins\workspace\Staging Build
[WS-CLEANUP] Deleting project workspace...
[WS-CLEANUP] Done
Cloning the remote Git repository
Cloning repository https://github.com/--/--.git
C:\Program Files\Git\bin\git.exe init C:\Program Files (x86)\Jenkins\workspace\Staging Build # timeout=10
Fetching upstream changes from https://github.com/---/---.git
C:\Program Files\Git\bin\git.exe --version # timeout=10
using GIT_SSH to set credentials 
using .gitcredentials to set credentials
C:\Program Files\Git\bin\git.exe config --local credential.username jenkins # timeout=10
C:\Program Files\Git\bin\git.exe config --local credential.helper store --file=\""C:\Windows\TEMP\git7879671492423343442.credentials\"" # timeout=10
C:\Program Files\Git\bin\git.exe -c core.askpass=true fetch --tags --progress https://github.com/---/---.git +refs/heads/*:refs/remotes/origin/* # timeout=2
ERROR: Timeout after 2 minutes
C:\Program Files\Git\bin\git.exe config --local --remove-section credential # timeout=10
ERROR: Error cloning remote repo 'origin'
hudson.plugins.git.GitException: Command ""C:\Program Files\Git\bin\git.exe -c core.askpass=true fetch --tags --progress https://github.com/---/---.git +refs/heads/*:refs/remotes/origin/*"" returned status code -1:
stdout: 
stderr: 
    at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandIn(CliGitAPIImpl.java:1719)
    at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.launchCommandWithCredentials(CliGitAPIImpl.java:1463)
    at org.jenkinsci.plugins.gitclient.CliGitAPIImpl.access$300(CliGitAPIImpl.java:63)
    at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$1.execute(CliGitAPIImpl.java:314)
    at org.jenkinsci.plugins.gitclient.CliGitAPIImpl$2.execute(CliGitAPIImpl.java:506)
    at hudson.plugins.git.GitSCM.retrieveChanges(GitSCM.java:1057)
    at hudson.plugins.git.GitSCM.checkout(GitSCM.java:1097)
    at hudson.scm.SCM.checkout(SCM.java:485)
    at hudson.model.AbstractProject.checkout(AbstractProject.java:1269)
    at hudson.model.AbstractBuild$AbstractBuildExecution.defaultCheckout(AbstractBuild.java:607)
    at jenkins.scm.SCMCheckoutStrategy.checkout(SCMCheckoutStrategy.java:86)
    at hudson.model.AbstractBuild$AbstractBuildExecution.run(AbstractBuild.java:529)
    at hudson.model.Run.execute(Run.java:1738)
    at hudson.model.FreeStyleBuild.run(FreeStyleBuild.java:43)
    at hudson.model.ResourceController.execute(ResourceController.java:98)
    at hudson.model.Executor.run(Executor.java:410)
ERROR: null
Finished: FAILURE
</code></pre>

<hr>

<p>Note: <a href=""https://github.com/--/--.git"" rel=""nofollow noreferrer"">https://github.com/--/--.git</a> 
I have replace my repo names with --- for security purpose and I have checked urls don't mismatch.
What is going wrong here? </p>

<p>EDIT :</p>

<p>I am able to clone from gitbash successfully using both ssh and https url.
<a href=""https://i.stack.imgur.com/dKbFh.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/dKbFh.png"" alt=""enter image description here""></a>
Added deploy keys in github repo aswell.</p>
",0,3895968,0,0
70521236,6259019,12/29/2021 15:07,3,1581,<git><githooks><husky><commitlint>,Customise commitlint header format,"<p>I am using Husky to set my git hooks, and am trying to change to default format of the header expected by <a href=""https://commitlint.js.org"" rel=""nofollow noreferrer"">Commitlint</a>:</p>
<pre><code>type(scope?): subject
</code></pre>
<p>I am specifically trying to have this formatting:</p>
<pre><code>:gitmoji:? [scope] subject
</code></pre>
<p>With <code>:gitmoji:</code> one of <a href=""https://gitmoji.dev/"" rel=""nofollow noreferrer"">Gitmoji</a>'s emoji and being optional, with square brackets around the scope (and not optional) instead of the parentheses, and without the <code>:</code> to separate the type + the scope from the subject. Also I'd like the <code>scope</code> to have a formatting kind of like <code>TCKT-666</code> (to refer a Jira's ticket, for example),</p>
<p>Right now, I've been trying a lot of things using the <code>parserPreset</code>, <code>parserOpts</code>, <code>headerPattern</code> and <code>headerCorrespondence</code> properties from <code>commitlint.config.js</code>, but I encountered several issues:</p>
<ul>
<li>the <code>headerPattern</code> regex seems to be totally ignored, and all the errors I get only come from the rules I set within <code>commitlint.config.js</code> - so I cannot set a specific formatting for my <code>scope</code> (although <a href=""https://github.com/vidavidorra/commitlint-plugin-function-rules"" rel=""nofollow noreferrer"">commitlint-plugin-function-rules</a> might help with that)</li>
<li>I have absolutely no idea how to remove the need for the <code>:</code> after the type, or how to replace parentheses by square brackets around the scope</li>
</ul>
",3,6259019,0,0
37786192,1557062,6/13/2016 9:29,3,1002,<git><githooks><pre-commit-hook>,Why does git's pre-commit hook verify that HEAD exists?,"<p>In its pre-commit hook git seems to verify that HEAD exists. If it doesn't it defaults to a special hash of an empty tree to compare the index to. </p>

<pre><code>if git rev-parse --verify HEAD &gt;/dev/null 2&gt;&amp;1
then
        against=HEAD
else
        # Initial commit: diff against an empty tree object
        against=4b825dc642cb6eb9a060e54bf8d69288fbee4904
fi
</code></pre>

<p>The hash it defaults to is a special hash. I read that I could also get it via</p>

<pre><code>git hash-object -t tree &lt; /dev/null
</code></pre>

<p><code>against</code> is later used like this</p>

<pre><code># If there are whitespace errors, print the offending file names and fail.
exec git diff-index --check --cached $against --
</code></pre>

<p>Why does the hook do that? In what situations am I able to do a commit but HEAD would be invalid?</p>
",0,1557062,,
70557998,786376,1/2/2022 17:06,0,106,<c#><bash><git><git-bash><githooks>,C# app colored output when executed from git hooks,"<p>I need to show colored outputs in a console application when executed from <strong>git hooks</strong> like (pre-commit etc..). This is an issue on one of my open-source projects that you can check out <a href=""https://github.com/alirezanet/Husky.Net/issues/20"" rel=""nofollow noreferrer"">here</a></p>
<p>Say we have a console application with this code:</p>
<pre class=""lang-cs prettyprint-override""><code>Console.ForegroundColor = ConsoleColor.Blue;
Console.WriteLine(&quot;Hello World&quot;);
</code></pre>
<p>The output is <strong>white</strong> when we run it from git hooks.</p>
<p>I also tried to use VT100 escape codes and <a href=""https://learn.microsoft.com/en-us/windows/console/console-virtual-terminal-sequences"" rel=""nofollow noreferrer"">enabling console virtual terminal</a> sequences but had the same results.</p>
<pre class=""lang-cs prettyprint-override""><code>// ENABLE_VIRTUAL_TERMINAL_PROCESSING ...

// set color vt100
public static void SetForegroundColor(int r, int g, int b)
{
   Console.Write($&quot;\x1b[38;2;{r};{g};{b}m&quot;);
}
</code></pre>
<p>e.g pre-commit</p>
<pre><code>#!/bin/sh

# run the application.
husky run 
</code></pre>
<p>Any information that could help me to find what is causing this is appreciated. the problem is I'm not sure where to look yet, is it git specific problem? Shell scripting problem or a C# problem?</p>
",2,786376,,
37802305,2155605,6/14/2016 3:07,9,490,<python><git><githooks><atlassian-sourcetree>,How to know if a git hook is being called from not within the terminal/command line,"<p>I have a git hook that is running whenever some one commits to their local repository.</p>

<p>Some people are committing from the terminal and some people are committing from SourceTree or SmartGit or some other 3rd party application.</p>

<p>SourceTree behaves differently when it comes to hooks. For example, errors are red by default, and user input doesn't seem to be supported so I need to change my python scripts depending on whether or not the user is committing from SourceTree or SmartGit etc.</p>

<p>Is there any way to do this within my script?</p>
",5,2155605,0,0
70562231,8733427,1/3/2022 6:15,0,278,<github><git-branch><githooks>,Github hook : Is it possible to listen to branch specific push?,"<p>I am setting up auto-deployment for a git repo. I am using the github hooks to listen to the &quot;push&quot; event.
But, this event is getting triggered for every branch.</p>
<p>Now, my repo has 20 branches and I am concerned only with the push to &quot;xyz&quot; branch.
Is there a way to avoid extra triggers ?</p>
<p>I am aware that I can listen the event and then filter out based on the branch, but I am looking for a more optimized way.</p>
<p>Thanks in advance !</p>
",1,8733427,,
37818346,189456,6/14/2016 17:16,10,2207,<git><google-cloud-platform><githooks>,Adding git hooks to google cloud repo,"<p>One of the things that comes with google cloud are <a href=""https://cloud.google.com/source-repositories/docs/"" rel=""noreferrer"">git repos</a>. Is it possible to add hooks to this repo? I'd like to incoming pushes, but I don't know how to get access to <code>.git/hooks</code>.</p>
",0,189456,0,0
26518108,211327,10/22/2014 22:19,1,67,<git><mercurial><development-environment><githooks><mercurial-hook>,How can I alert developers they need to run certain commands after they pull my commit (in version control/git)?,"<p>Here’s a common scenario:</p>

<p>You’re working on a project (such as, but not necessarily, a web app) with other developers.</p>

<ol>
<li><p>I decide we should use a certain open-sourced tool and add it to the project dependencies. Of course, I add it to our package manager, which is in source control. <em>or</em></p></li>
<li><p>Tom realizes we can speed up our database queries by adding an index and denormalizing a bit of data. He adds a migration and checks it in.</p></li>
</ol>

<p>In either scenario, when other developers <code>git pull</code> or otherwise update their development environment, things are likely to break unless they run <code>npm install</code> / <code>bundle</code> / <code>cocoapods chocolateygoodness</code> / <code>bower feathernest</code> or <code>python manage.py migrate</code> / <code>bundle exec rake migrate</code> or whatever, and it’s <em>not always obvious</em>  that this is the case. In fact, the other developer might not <em>really</em> be a developer at all, but perhaps a designer who is beautifying the cheezus out of our UI. </p>

<p>What I would <em><strong>really like</strong></em> is for every other developer, upon <code>pull</code>ing the commit in question, to see something like this:</p>

<pre><code>Updated! 

Please note you MUST RUN this command before continuing. 
(Stop your server first, if applicable)

$ ./magical_command_here --with-args
</code></pre>

<p>Alternatively, it would be amazing if running <code>git status</code> could output something like:</p>

<pre><code>On branch master
Your branch is up-to-date with 'origin/master'.
nothing to commit, working directory clean
Migrations need to be run. Please execute `database_migration_command`
</code></pre>

<p>Who has solutions for this problem?</p>
",0,211327,,
8730514,258689,1/4/2012 16:45,33,5043,<git><githooks>,Chaining git hooks,"<p>As many of you probably know, there can be only one hook type in git.
 If two update hooks need to be evaluated. The git admin is left with two <em>unmanageable</em> solutions:</p>

<ol>
<li>Merge the hook scripts together</li>
<li>Manually chain them with an <code>exec</code></li>
</ol>

<p>I am looking for an elegant solution (written in BASH),something like a folder <code>hooks/update.d</code> or <code>hooks/post-receive.d</code> that will allow the loosely coupling of hook evaluations. The chaining should stop as soon as a hook fails.</p>

<p>I actually found an acceptable solution written in perl at this URL <a href=""http://blog.bluefeet.net/2011/08/chained-git-hooks"">http://blog.bluefeet.net/2011/08/chained-git-hooks</a></p>

<p>The problem: my server runs different versions of perl and I am getting perllib version mismatches. It fails.</p>
",1,258689,0,0
26955973,764110,11/16/2014 10:31,1,428,<ruby><githooks>,How to print all the staged file names using ruby git pre-commit hook?,"<p>I just started playing around with git hooks using Ruby(as am more comfortable with ruby).</p>

<p>Can anyone tell me how to print all the staged file names? and can anyone tell me or give me a good resource where I can understand how will git search through the staged files and search for a particular text?</p>
",0,764110,0,0
26956741,764110,11/16/2014 12:07,1,530,<ruby><githooks>,Git pre-commit hook issue,"<p>I'm a newbie for git hooks. I started writing a pre-commit hook today. Below is my hook which checks for raise, alert, trailing white space in file etc.</p>

<pre><code>#!/usr/bin/env ruby

regex = Regexp.union(/raise/, /puts/, /alert/, /console.log/, /[\s\t]+$/)

folder_path =`git rev-parse --show-toplevel`

`git diff --cached --name-only --diff-filter=ACM`.each do |file|
  file_text = File.read(File.join(folder_path.chomp, '/', file))
  if file_text.match(regex)
    puts ""#{file} contains invalid word #{$&amp;}. Please remove it""
    exit 1
  end
end 
</code></pre>

<p>while I commit a sample file am getting no such file or directory error.
kranthi@kranthi-Aspire-4755:~/learning/git_learning$ git commit -m ""tet""</p>

<pre><code>.git/hooks/pre-commit:9:in `read': No such file or directory - /home/kranthi/learning/git_learning/another_folder/test2.txt (Errno::ENOENT)
    from .git/hooks/pre-commit:9
    from .git/hooks/pre-commit:17:in `map'
    from .git/hooks/pre-commit:8:in `each'
    from .git/hooks/pre-commit:8:in `map'
    from .git/hooks/pre-commit:8
</code></pre>

<p>Can anyone tell me what is the issue here.</p>
",2,764110,0,0
9198397,1040154,2/8/2012 17:28,3,611,<git><githooks>,managing website on windows using git,"<p>I have a website that is running on a Windows 2008 server.  I want to know what is the best way to manage that site using git.  Ideally I want an automated deployment, using a post-receive hook or similar.</p>

<p>I do have a Linux server that I typically use as my git origin server, so I can utilize that if it makes things easier.  Typically my post-receive file there looks like this:</p>

<pre><code>#!/bin/sh
GIT_WORK_TREE=/var/www/example.com git checkout -f
</code></pre>

<p>Obviously that won't work as-is on Windows without something else in place.</p>

<p>My Windows server supports FTP but I'd like to use something more secure if possible.</p>
",0,1040154,0,0
44855669,4046605,6/30/2017 22:40,6,1232,<git><bash><shell><git-submodules><githooks>,git rev-parse --git-path hooks always return absolute path,"<p>Is there an equivalent command to this that always returns the absolute path?</p>

<pre><code>git rev-parse --git-path hooks
</code></pre>

<p>When I'm in a submodule, I get an absolute path, but when I'm in the root repository, I get</p>

<blockquote>
  <p>.git/hooks</p>
</blockquote>
",4,4046605,0,0
44855301,613483,6/30/2017 21:52,3,112,<git><bash><path><git-submodules><githooks>,Detecting current directory in bash script,"<p>I am attempting to write a script that initializes my git hooks differently whether my git repo is a submodule or just a regular repository. It currently looks like this:</p>

<pre><code># Get to root directory of client repository
if [[ "":$PATH:"" != *"":.git/modules:""* ]]; then # Presumed not being used as a submodule
  cd ../../
else
  cd .. # cd into .git/modules/&lt;nameOfSubmodule&gt; (up one level from hooks)
  submoduleName=${PWD##*/} # Get submodule name from current directory
  cd ../../../$submoduleName  
fi
</code></pre>

<p>However in testing it seems to always take the <code>else</code> route even when I am in a submodule.</p>

<p>Is there something I am missing in this line for determining whether my path contains the expected characters?</p>

<blockquote>
  <p>if [[ "":$PATH:"" != <em>"":.git/modules:""</em> ]]</p>
</blockquote>
",1,613483,,
9210957,254109,2/9/2012 12:37,3,1906,<git><githooks><gitolite>,Git hook to detect push --mirror,"<p>beside a main Git repository on a server (with Gitolite) I would like to have a possibility for each developer to set up a mirror it's own local repository. That's not difficult.</p>

<p>However, I want to disable <code>git push --mirror</code> on the main Git server repository, to prevent mistakes if a developer screw the mirroring. I think the best place is a hook, maybe the update hook. But I cannot find how to detect in a server hook, that <code>push --mirror</code> command has been executed on the client machine.</p>

<p>Client side solution is not possible because we use Eclipse Git (JGit), too.</p>
",2,254109,,
44908406,8219037,7/4/2017 14:21,0,48,<linux><git><githooks>,Prevent commit of files with same names,"<p>Assuming there's a Git repository hosted on a <strong>Linux</strong> machine and there are developers using both Windows and Linux, is there a way to prevent Linux developers from committing files with same names but different cases?</p>

<p>I think I've to write a server-side hook for this, but I don't know how to <strong>validate</strong> the names of incoming files inside the hook script. </p>

<p>Any help/references related to this would be appreciated.</p>
",2,8219037,,
44912779,5797668,7/4/2017 19:12,1,991,<git><githooks>,What is a reliable way to detect whether a file or directory has changed in the most recent commit?,"<p>I have a web project which I deploy to an <code>ec2</code> instance simply by pushing new commits.  I use the <code>post-recieve</code> git hook remotely to execute a shell-script which 'deploys' the project by checking it out into a production directory.  The steps are, run <code>npm install</code> on the express app, <code>npm install</code> on the frontend (a <code>create-react-app</code> app), then run <code>npm run build</code> (which basically utilizes <code>web-pack</code> to build an optimized distribution folder from my node source code).  </p>

<p>These steps are expensive and in many cases not needed. E.G. if all I did was update a Node component in <code>srcs/components/</code> then <code>npm run build</code> should run, but <code>npm install</code> on the server and frontend shouldn't.  If all I have done is added a comment to my express app, no scripts should run.  </p>

<p>My currently server-side deploy script looks like this:</p>

<pre><code>#!/usr/bin/env bash

GIT_WORK_TREE=/home/ec2-user/absiteProd git checkout -f

### TODO: conditional NPM work

pm2 restart index
</code></pre>

<p>My question is then how can I use git (or grep, sed, awk, etc..) to reliably tell me when either <code>/home/ec2-user/absiteProd/frontend/package.json</code>, 
<code>/home/ec2-user/absiteProd/server/package.json</code> or anything in 'home/ec2-user/absiteProd/frontend/sources` has changed?  </p>

<p>Currently I'm having some success with:</p>

<pre><code>if `git log --stat -n 1` | grep --quite frontend/src/* ; then
   cd home/ec2-user/frontend
   npm run build
fi
</code></pre>

<p>But since this seems like such a common requirement in app deployment,  I feel like there must be a simpler way?</p>
",1,5797668,0,0
9308119,717341,2/16/2012 8:53,17,14554,<python><windows><git><msysgit><githooks>,git cannot execute python-script as hook,"<p>I have created a little <code>pre-commit</code> hook in python. This hook works like a charm under Linux, but in Windows it keeps telling me:</p>

<pre><code>error: cannot spawn .git/hooks/pre-commit: No such file or directory
</code></pre>

<p>I know there have been similar questions here about the same issue and the conclusion seams to be the shebang. My script has this on the very first line:</p>

<pre><code>#!F:\PortableApps\PortablePython3.2\App\python.exe
</code></pre>

<p>It's also interesting to note that executing the script simply by writing <code>.git/hooks/pre-commit</code> works wonderful, but as soon as I try to commit, git spits out the above message.</p>

<p>Another interesting thing is, when I convert the encoding from ANSI to UTF-8 (using Notepad++), I get the following error when trying to execute the script:</p>

<pre><code>.git/hooks/pre-commit: Cannot execute binary file
</code></pre>

<p>I'm using the following tools:</p>

<ul>
<li><a href=""http://portablepython.com"">PortablePython</a> 3.2.1.1</li>
<li>msysgit 1.7.6 (Portable)</li>
</ul>
",2,717341,0,0
9309710,1140922,2/16/2012 10:34,5,116,<linux><git><version-control><githooks><gitolite>,How to version git&gitolite hooks?,"<p>Is there a possibility to nicely version and track git hooks? Can I safely have another (nested) git repository under the hook folder on server?</p>
",2,1140922,,
9314206,458193,2/16/2012 15:39,0,4032,<git><ssh><githooks><openssh>,"Git post-receive hook: “remote: Permission denied, please try again.”","<p>I have a bare repository at <code>/home/dan/repo/</code> and a working copy at <code>/home/dan/www/project/</code>.<br>
I want to have working copy automatically pull its current branch from <code>repo</code> on each commit to <code>repo</code>.</p>

<p>I created a file at <code>/home/dan/repo/hooks/post-update</code>:</p>

<pre><code>#!/bin/sh

cd /home/dan/www/project || exit
unset GIT_DIR
git pull

exec git-update-server-info
</code></pre>

<p>Working copy's <code>origin</code> is set to the <code>repo</code>:</p>

<pre><code>[remote ""origin""]
        fetch = +refs/heads/*:refs/remotes/origin/*
        url = dan@server:/home/dan/repo/
</code></pre>

<p>However, on every commit I get an error:</p>

<pre><code>remote: Permission denied, please try again.
remote: Permission denied, please try again.
remote: Permission denied (publickey,password).
remote: fatal: The remote end hung up unexpectedly
</code></pre>

<p>How can I fix this?</p>
",0,458193,,
27073690,482077,11/22/2014 3:21,8,584,<git><githooks>,Git hook for whenever HEAD changes,"<p>My aim is to keep an (untracked) file up to date with the current HEAD commit hash, branch and some other details. I have a working git <code>post-checkout</code> hook that updates the file, but I want the hook to run whenever HEAD changes, whether that is by commit, merge or whatever else might be possible.</p>

<p><strong>What is the easiest way to ensure that my hook runs whenever HEAD changes?</strong></p>

<h2>Details</h2>

<p>The file that I am generating is a javascript file which is part of a statically served website. We have no dependency on server side scripting, so we would like to avoid such a dependency here.</p>

<p>The script that should be run is the following:</p>

<pre><code>#!/bin/sh

FILE=js/git-status.js

echo ""// This file is autogenerated by a post-checkout hook. Your changes here WILL be lost."" &gt; $FILE

echo ""GIT_BRANCH = '$(git rev-parse --abbrev-ref HEAD)';"" &gt;&gt; $FILE
echo ""GIT_COMMIT_HASH = '$(git rev-parse HEAD)';"" &gt;&gt; $FILE
echo ""GIT_COMMIT_TIME = '$(git log -1 -s --format=%ci HEAD)';""  &gt;&gt; $FILE

echo ""Updated $FILE""
</code></pre>

<p>While there may be another approach I could take, I would still like an answer to the original question.</p>
",5,482077,0,0
44930045,2588059,7/5/2017 15:11,0,41,<git><github><githooks>,cd failing git hooks,"<p>when I try to CD into particular folder, it's getting stuck after ""unset done"". Not sure why .tried unsetting GIT_DIR, env -i. But no hope!</p>

<pre><code>branch=$(git branch | sed -n -e 's/^\* \(.*\)/\1/p')
command=""ansible-playbook -i hosts tasks/git_pull.yml --extra-vars='host="" 
command=$command$branch""'""
echo $command &gt;&gt; gitpush2.txt
unset $(git rev-parse --local-env-vars)
echo ""enter /home/hari/code/ansible/git/"" &gt;&gt; gitpush2.txt 
echo ""unset"" &gt;&gt; gitpush2.txt
unset GIT_DIR
echo ""unset done"" &gt;&gt; gitpush2.txt
cd /home/hari/code/ansible/git/ 
echo ""got in"" &gt;&gt; gitpush2.txt
unset GIT_DIR
echo ""execute"" &gt;&gt; gitpush2.txt
env -i eval $command &gt;&gt; gitpush3.txt
echo ""done "" &gt;&gt; gitpush2.txt
</code></pre>
",2,2588059,,
44943756,5392289,7/6/2017 8:36,0,38,<git><githooks>,git pull on server using hook after I push locally,"<p>I'm working with html &amp; css files locally. After I <code>git push</code> the files to my server (into a bare directory which I created with <code>mkdir bare_repos/mysite &amp;&amp; cd bare_repos/mysite &amp;&amp; git init --bare</code>), I don't want to have to ssh into the server, go into my <code>~/public_html/mysite</code> directory and type <code>git pull</code>. I think a hook should do this but I'm not sure how?</p>

<p>The files in my <code>bare_repos/mysite/hooks/</code> directory are: <code>applypatch-msg.sample, post-update.sample, pre-commit.sample, pre-rebase.sample, prepare-commit-msg.sample, commit-msg.sample, pre-applypatch.sample, pre-push.sample, pre-receive.sample, update.sample</code></p>

<p>Which file should I edit and what should be added to it? I want to be able to push from my local machine and then simply see the changes on website from my browser (no ssh'ing needed)</p>
",0,5392289,,
9336804,776580,2/17/2012 23:17,3,5914,<git><githooks><gerrit>,Gerrit change-merged Hook,"<p>I use git as my version control system and have set up a Gerrit site to do the code review. I would like to create a hook to do the following:</p>

<ul>
<li>When the admin clicks the Submit button, a file (called <strong>version.txt</strong>)
should be modified.</li>
<li>Script should open the file.</li>
<li><p>Find the following text (where the ID may change)</p>

<p><code>#version Change-Id: Ie1411d50f6beb885bc3d3b7d8c587635e1446c18</code></p></li>
<li><p>Replace the Change-Id with the Change-Id of the new patch.</p></li>
<li><p>So, if the patch being merged has the <code>Change-Id:    I1c25f7b967084008b69a6a8aefa6e3bb32967b82</code> then the <strong>version.txt</strong> file
should contain the following string after the script is run:</p>

<p><code>#version Change-Id: I1c25f7b967084008b69a6a8aefa6e3bb32967b82</code></p></li>
<li>Then the hook should create a new commit (since now there has been a change in one of the files) and push this last commit to master.</li>
</ul>

<p>I feel this would be possible using a <strong>change-merged</strong> hook. Am I right?</p>

<p>Thanks in advance.</p>
",0,776580,0,0
9341240,682110,2/18/2012 12:43,2,1375,<hook><gitosis><githooks>,Gitosis / Git does not execute post-commit hook,"<p>I just set up Trac and Gitosis and wanted to control the ticket workflow with the commit messages.
Unfortunately my post-commit hook is not executed. If I execute it on command line (as gitosis user) everything is like charm.</p>

<p>My post-commit is rather simple:</p>

<pre><code>#!/bin/sh
touch /tmp/commited
echo 'Cant touch this!'
</code></pre>

<p>Any suggestions on that?</p>

<p>Thanks in advance &amp; cheers
Martin</p>
",5,682110,0,0
44949722,862288,7/6/2017 13:02,1,169,<r><git><githooks><devtools>,Pre-commit hook for devtools::document,"<p>I want to set-up a pre-commit hook for <code>devtools::document</code> and want to fail the commit if <code>devtools::document</code> changes anything. I checked the <code>devtools::document</code> source and it returns <code>invisible()</code> so it's not possible to conditionally return an exit code.</p>

<p>Are there any clever ways to stop the commit from happening when <code>devtools::document</code> does work?</p>
",4,862288,,
9352406,360811,2/19/2012 19:24,1,403,<git><githooks>,Sorta of pre-commit hook for adding annotated tags in git,"<p>Is there's any way to trigger hook on adding a specific tag?
The idea is to have a separate build branch and to allow adding some specific annotated tags only in that branch. </p>
",0,360811,,
27137069,4074017,11/25/2014 21:30,1,184,<windows><git><batch-file><githooks>,git hook - Not a git repository: '.git',"<p>I create a hook(post-commit) which run <em>.bat</em> file and in this file make push to current brach. When I run <em>.bat</em> manually it works fine but when it start by hook it throws exception.</p>

<p>""current dir""(working dir) is same in both cases.</p>

<p>post-commit</p>

<pre><code>#!/bin/bash

cd ./.git/hooks
start post-commit.bat
</code></pre>

<p>post-commit.bat</p>

<pre><code>@ECHO OFF                               

Echo Current dir: ""%CD%""

set /p yn=Push to current brach immediately[Y/N]? 
if ""%yn%""==""y"" goto y 
if ""%yn%""==""n"" goto n 
if ""%yn%""==""Y"" goto y 
if ""%yn%""==""N"" goto n 
goto error 
:error 
cls 
echo That is not a recognized choice. 
pause 
exit 
:y 
echo Starting push...
git push
pause
exit 
:n 
exit 
</code></pre>

<p>.bat output</p>

<pre><code>Current dir: ""c:\Users\Dan\Documents\Ambro\Areus\_Areus - Employee - PC\_Areus -
 Employee - PC\.git\hooks""

Push to current brach immediately[Y/N]? y
Starting push...
fatal: Not a git repository: '.git'
</code></pre>
",0,4074017,,
27509666,971392,12/16/2014 16:45,1,387,<git><git-branch><directory-structure><githooks>,"merge to master, with different directory structure","<p>I have the following directory/contents structure on my <code>develop</code> branch:</p>

<pre><code>boilerplate/
.git/
.gitignore
web/
</code></pre>

<p>The <code>boilerplate</code> directory contains development tools like grunt, bower and others, which then they deploy assets to a <code>dist</code> sub-directory inside <code>web</code>.</p>

<p>Now, any suggestions on how or if is possible to release a version from <code>develop</code> to <code>master</code> with just some specific contents from <code>web</code>? Just so it contains a clean, ready to push to staging/live?</p>
",0,971392,0,0
45363519,5017329,7/28/2017 1:36,1,79,<git><ubuntu-16.04><githooks><git-post-receive>,Why can't git post-receive hook find single file in repo?,"<p>I have this git post-receive hook</p>

<pre><code>#!/bin/sh
git --work-tree=/var/www/myproject --git-dir=/home/git/myrepo.git checkout -f -- api.py
</code></pre>

<p>And the local repo simply contains a <code>.git</code> folder and a <code>api.py</code> file. </p>

<p>When I push the project I get the following error:</p>

<pre><code>$ git push
Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 272 bytes | 0 bytes/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: error: pathspec 'myrepo/api.py' did not match any file(s) known to git.
</code></pre>

<p>I have also tried adding the full file path <code>myrepo/api.py</code> to the git hook and it gave the same error for that path. </p>

<p>What is the correct way to reference that file I'm trying to move? The remote computer is ubuntu 16.04.</p>

<p>Thanks!</p>
",0,5017329,0,0
63609871,14169297,8/27/2020 5:43,5,2117,<azure-devops><githooks><azure-git-deployment><azure-service-hooks>,Azure git check-in policy pre-receive policy at server side,"<p>I am trying to restrict GIT Commit without having Workitem ID in the commit message. i.e. #workitemID #123</p>
<p>Please suggest a solution for the server-side configuration on azure DevOps GIT Hooks.</p>
",0,14169297,0,0
45400553,6359249,7/30/2017 13:55,12,6733,<git><githooks><git-post-receive>,the receiving end does not support push options,"<p>At first my server's git version was 2.7.4 and the error was accurate. Afterwards, however, I updated and have confirmed this with git version:</p>

<p>Server</p>

<pre><code>$ git --version  
git version 2.13.0
</code></pre>

<p>Client</p>

<pre><code>$ git --version  
git version 2.11.0 (Apple Git-81)
</code></pre>

<p>Yet when I try to push this happens:</p>

<pre><code>$ git push --push-option=test  
fatal: the receiving end does not support push options  
fatal: The remote end hung up unexpectedly
</code></pre>

<p>Even though according to documentation this should be supported in both the client version and server version:<br>
<a href=""https://git-scm.com/docs/git-push/2.11.0#git-push--o"" rel=""noreferrer"">2.11.0</a><br>
<a href=""https://git-scm.com/docs/git-push/2.13.0#git-push--o"" rel=""noreferrer"">2.13.0</a></p>

<p>I even created two new local repositories on each and then tried to push to the other local repository from the other (so it isn't even communicating between a different server) yet I still get that error. Is there something I have to enable? I can't find anything about having to do that on the docs.</p>
",0,6359249,0,0
45398341,7025986,7/30/2017 9:27,3,231,<git><http><nginx><automation><githooks>,How to set git hook over HTTP protocol to Automate development on a remote server,"<p>I am using git for version control and I want to Automate git to pull everything any of the collaborators push on release branch to a remote server automatically and if I want to do this over ssh, I have to add all of collaborators ssh-keys in my server, but I don't want to give them access to server, so I want to set this git hook over HTTP so that everyone can push to remote server via HTTP protocol</p>

<p>What I have done so far is set a git hook, and I use Nginx as web service and I have put the bare git repository in</p>

<pre><code>/var/www/html/test_repo
</code></pre>

<p>and I set my git remote in local computer like this:</p>

<pre><code>git remote add test http://ServerIp/test_repo
</code></pre>

<p>but it gives me this error:</p>

<pre><code>fatal: repository 'http://ServerIp/test_repo/' not found
</code></pre>
",0,7025986,0,0
45410917,4014086,7/31/2017 8:33,1,163,<linux><git><angular><githooks>,I want to automate my angular build using pos-receive in background process,"<p>I want to automate my angular build using pos-receive and i want it to run in backgound process so I will not wait to finish the command.</p>

<p>I tried the following the following code on my post-receive but it doesn't work.</p>

<p><strong>post-receive</strong></p>

<pre><code>#!/bin/bash
git --work-tree=/var/www/my-sample-app.com --git-dir=/var/repo/my-sample-app.com.git checkout -f master
cd /var/www/my-sample-app.com
ng build --prod &gt;/dev/null 2&gt;&amp;1 &amp; 
</code></pre>

<p>I also tried to create a separate executable script on usr/local/bin directory like this</p>

<p><strong>build-app-script</strong></p>

<pre><code>#!/bin/bash
cd /var/www/my-sample-app.com
mkdir test-dir
ng build --prod
</code></pre>

<p>then on my post-receive i change the code</p>

<pre><code>ng build --prod &gt;/dev/null 2&gt;&amp;1 &amp; 
</code></pre>

<p>to</p>

<pre><code>nohup /usr/local/bin/build-app-script &amp;&gt;/dev/null 2&gt;&amp;1 &amp;
</code></pre>

<p>the script seems working because it create a test-dir but the 
ng-build --prod 
command is not executing</p>

<p>Any idea why is not working? or any suggestion. Thanks!</p>
",1,4014086,0,0
45413618,592135,7/31/2017 10:38,2,245,<regex><bash><shell><githooks>,Setting up a git hook to add ticket number to git commit every time,"<p>Hi there i want to set up a simple git commit hook so that i don't have to add the name of the Jira ticket to each commit manually.</p>

<p>Our Jira tickets all have names like:</p>

<p><strong>feature/DE-123-some-text-here</strong></p>

<p>I want to grab the <strong><em>DE-123</em></strong> bit and use it for my commits in the git commit hook so that my commit messages will look like:</p>

<p><code>DE-123: Here is some code i've written</code></p>

<p>I've worked out a simple regex to match this data:</p>

<p><code>/(\w+-\d+)/</code></p>

<p>but i can't figure out the bit of how to use it in my commit hook file. I have been messing about in a sh file to test it and i'm not getting anywhere.</p>

<p>Can anyone help me with this?</p>

<p>Thanks</p>
",0,592135,,
27575784,1377598,12/20/2014 0:27,1,1018,<git><githooks>,"Git pre-push hook, enumerating all un-pushed commits","<p>I want to run a pre-push job on all un-pushed local commits.</p>

<p><code>git rev-list BRANCH --not --remotes=origin</code> works great for all cases except when the remote you're pushing to is empty. When that is the case, that command will return nothing.</p>

<p>Is it safe to assume that if the remote sha arg is 00000 <em>and</em> <code>git rev-list BRANCH --not --remotes=origin</code> returns empty then all commits are on to be enumerated <code>git rev-list BRANCH</code>?</p>

<p>Is there a better way to get the information I'm after that works in all cases?</p>
",0,1377598,,
45416049,7870791,7/31/2017 12:32,21,19133,<bash><git><githooks><git-commit>,How to make a git pre-commit hook that checks the commit message?,"<p>I have a git commit hook script, that checks the commit message, and if the message does not contain the word ""updated"", the script should reject the commit. </p>

<pre><code>#!/bin/bash
read -p ""Enter a commit message: "" message

if [[ ${message} != *""updated""* ]];then
  echo ""Your commit message must contain the word 'updated'""
  else
  git commit -m ""$message""
  fi
</code></pre>

<p>How to make this hook automatically execute if I try to push some files in my local repo using the command</p>

<pre><code>git commit -m ""updated:something""
</code></pre>

<p>My idea is to make it not like ""run this script to do commit"", but rather when you open the console and try to make a commit and entering the commit message, the script will check your commit message automatically and pass it or reject it. </p>
",2,7870791,0,0
46194647,5989876,9/13/2017 10:06,0,28,<windows><githooks>,Unable to execute githooks on some windows machines,"<p>I had compiled a golang code and got a binary out of it. This binary was the pre-commit git hook. 
However this git hook does work on some windows machines and it does not work on some windows machines. I use GitBash for running git commands.</p>

<p>I don't know what the issue might be. I did run it on Windows 10 and it worked on one of the machines and didn't work on another one.</p>
",0,5989876,,
46195071,5091709,9/13/2017 10:26,2,1712,<git><hook><githooks>,Only perform git hook operation when files in specific folder changed,"<p>I got 2 commands (which are not related to git) which I want to be executed both on commits (doesn't matter whether before or after) and after pulls.</p>

<p>However, these commands take some time to run, so I don't want them to be executed on every commit or pull. They only do useful work if files in a specific folder changed since they last were run.</p>

<p>They create or update a file ignored by git in that same folder. Of course, this file being changed shouldn't trigger execution of the commands the next time a commit or pull is performed. All files in that folder are on the top level of it (there are no subdirectories). All the files whose changes are relevant to whether the commands should be executed are tracked by git. When new files appear in the folder and aren't tracked by git yet, I don't care whether the commands are executed already. But they must be executed when a commit which adds them to the repo is created.</p>

<p>How can this be tackled?</p>
",2,5091709,,
64286720,802469,10/9/2020 20:15,0,223,<git><remote-server><githooks>,"Git post-receive hook fails to checkout, fatal: You are on a branch yet to be born","<p>On my server, in <code>/home/user/git/domain.com.git/</code>, I ran <code>git init --bare</code>, then created <code>post-receive</code> file in <code>hooks</code> dir &amp; <code>chmod +x hooks/post-receive</code>. I used <code>ls -la</code> to verify it is executable.</p>
<p>My <code>post-receive</code> file:</p>
<pre><code>mkdir /home/USER/pub/domain.com
GIT_WORK_TREE=/home/USER/pub/domain.com git checkout -f
GIT_WORK_TREE=/home/USER/pub/domain.com git reset --hard
</code></pre>
<p>I execute <code>git push remotename branchname</code> from local and get the error:</p>
<pre><code>remote: fatal: You are on a branch yet to be born
</code></pre>
<p>It also shows:</p>
<pre><code>To ssh://domain.com/~/git/domain.com.git
   oldcommithash..newhash  branchname -&gt; branchname
</code></pre>
<p>I know the post-receive hook is running because my <code>mkdir</code> gives me a directory already exists error, which is to be expected and causes no problems on my other sites using this setup.</p>
<p>I also have this problem with <code>git push remotename HEAD</code> which is what I want to use, ultimately, for simpler scripting.</p>
",0,802469,,
9933157,315260,3/29/2012 20:39,0,86,<git><shell><githooks>,"Location of shell script file, which is to be executed by local git hook","<p>I'm using <a href=""http://progit.org/book/ch7-3.html"" rel=""nofollow"">git hooks</a> for the first time and stuck on an issue that seems simple but I haven't found any answer so far. </p>

<p>I have created a shell script (it works fine when called directly) which I want to call inside the git <strong>post-commit</strong>-hook. I know I could include the script itself in the hook, but that could get chaotic if more scripts are added.</p>

<p>The contents of the hook-file looks like this:</p>

<pre><code>!/bin/sh

sh myshellscript.sh # This doesn't work by the way

: Nothing
</code></pre>

<p>The hook is definitely executed but <strong>myshellscript.sh</strong> is not found. </p>

<p>Where is the best place to put <strong>myshellscript.sh</strong> and how do I reference it?</p>

<p>Thanks in advance!</p>
",0,315260,,
46216037,321973,9/14/2017 9:57,0,196,<git><tree><githooks><git-filter>,How to save a file as a git tree instead of a blob?,"<p>Since many file formats have a tree-like structure (e.g. XML, tar, even MP3 if you consider splitting tags and frames apart as leafs), I was wondering if there is any way to let git store them as tree objects instead of blobs, to exploit the structure e.g. for diffing and merging.</p>

<p>So far I've considered using hooks or smudge/clean-filters, but both have shortcomings which I'd like to avoid:</p>

<ul>
<li>Using a clean-filter, which only rewrites the blob (i.e. file contents), I could create and <code>git add</code> a tree in parallel and replace the blob by sufficient information for the smudge-filter to recreate the original file on checkout. However, that would make <code>git status</code> claim the ""directory"" the tree internally represents is missing, there'd be a placeholder file which would probably prevent a tree of the same name to be added</li>
<li>Using a post-commit hook would mess up with <code>git diff</code> etc. a lot</li>
</ul>

<p>So is there any sensible way to achieve this? Or should I stick to blobs and maybe modify the merge/diff driver instead?</p>
",0,321973,,
10213180,182004,4/18/2012 15:52,6,1115,<git><reset><githooks>,"In GIT, how can I prevent people from changing or removing commits that have already been pushed?","<p>We recently had an intern run ""git reset --hard"" and accidentally undo a lot of work on our main GIT repo.  We are in the process of recovering the work, but I want to make sure nothing like this ever happens again.</p>

<p>I know there are a lot of questions about this, but they all seem to be about recovering rather than prevention.  Is there any way I can prevent pushes to our main repo that alter or remove commits that have already been pushed?  Is there a config setting or maybe a push hook that will do the job?</p>
",8,182004,0,0
46460463,5860075,9/28/2017 3:22,1,1296,<node.js><git><bash><githooks>,How to stop a bash script from an infinite loop?,"<p>I have this bash script in my project directory named as shrinkwrap.sh:</p>

<pre><code>update_package_json_changed_files() {
  echo ""&gt; changed files""

  git diff --cached --name-only | grep -x package.json
}

update_shrinkwrap_and_at_to_git_index() {
  echo ""&gt; Updating npm-shrinkwrap.json and adding to current commit.""

  npm shrinkwrap
  git add npm-shrinkwrap.json 
}

if get_package_json_changed_files; then
  update_shrinkwrap_and_at_to_git_index
fi
</code></pre>

<p>and I am running this script in package.json as the following:</p>

<pre><code>""scripts"": {
  ""shrinkwrap"": ""bin/shrinkwrap.sh""
}
</code></pre>

<p>and I installed npm pre-commit in order to execute the script as the following:</p>

<pre><code>""pre-commit"": [""shrinkwrap""]
</code></pre>

<p>when I try to commit, the script goes into an infinte loop. It keeps running, and nothing can stop it. I tried command + C, control + Z. Nothing worked. Did anyone run into this issue before ? why is that happening ?</p>
",0,5860075,0,0
10228065,1288207,4/19/2012 12:27,41,27759,<git><githooks><git-clone>,git hooks : is there a clone hook?,"<p>We want to store some meta-information about the commit in an external database. During a clone or a checkout, this database should be referred and we copy the meta information to a file in the repo which is cloned. The database is required rather than just using a file is for the sake of indexing and searches etc ...</p>

<p>I thought if there is a clone hook, we could trigger this. I couldn't find the clone hooks in the sample in .git/hooks. is there one? is post-checkout hook the only possibility at client side?</p>
",0,1288207,0,0
46476797,482053,9/28/2017 19:21,4,1255,<github><github-api><webhooks><githooks>,"How to identify what event triggered a github webhook (pr, push, issue etc)","<p>Looking at the <a href=""https://developer.github.com/v3/activity/events/types/#pullrequestevent"" rel=""nofollow noreferrer"">docs</a>, each event has a ""Webhook event name"", but that doesn't seem to be sent in the payloads of the webhooks. </p>

<p>If you create a webhook that listens to multiple events, how (besides duck typing) would you be able to differentiate which event was the one that triggered the hook?</p>
",0,482053,,
28223706,4508983,1/29/2015 20:12,1,52,<git><version-control><githooks><collaboration>,Setting up a hook for git add,"<p>As I am currently working on a rather large software development project (we are still in the planning phase) we have been thinking about a proper VCS.
For some features we want to have for collaborating with the whole team it will be needed that we can execute a shell script whenever something is added to the staging area.</p>

<p>I have read through different websites and the Git Book as well as the man pages for Git, but could not find a solution.</p>

<p>There are all kinds of hooks; Pre-Commit, Prepare-commitmsg etc. but unfortunately there's nothing <em>(AFAIK)</em> that responds to changes in the staging area. </p>

<p>Thanks in advance for any help provided.</p>

<p>EDIT: From the comment I've got (and I've tried out) I now know that a git clean filter would be what I want to use. It lets me do the operations I want to perform and cancel the stage by supplying a non-zero return value. This doesn't really help, though, because I would need something that's interactive or at least that provides output to the user which seems impossible by using filters. </p>
",2,4508983,0,0
46481242,216420,9/29/2017 3:11,0,249,<git><githooks>,Using a git pre-commit hook to exclude non-meaningful changes,"<p>I've got a large collection of files I want to keep in git. Each of these files has a header that can be automatically updated containing time-stamps and other details about when the file was last exported (they're code files exported from a specific tool)</p>

<p>Since the changes to the header aren't particularly meaningful on their own, I'd like to use a git pre-commit hook to exclude files where there's no change in the actual body of the code. What's the recommended way for me to perform a comparison and discard files where only the first n lines have changes.</p>
",0,216420,0,0
46485888,1273587,9/29/2017 9:29,0,378,<git><githooks>,Git post-update hook not running,"<p>First of all, I am aware there are many similar questions out there, for example <a href=""https://stackoverflow.com/questions/9228921/git-post-update-script-does-not-work"">this one</a>.</p>

<p>However, usually there are 2 main problems:</p>

<p>1.The hook file is not executable - checked. Here is the result of my <code>ls -l</code>:</p>

<pre><code>-rwxrwxr-x 1 root root  314 Sep 29 17:18 post-update
</code></pre>

<p>2.git working directory not set -checked. Here is my post-update hook script:</p>

<pre><code>unset GIT_DIR
cd ..
echo ""testing""
chmod -R 755 path/to/my/target/directory
</code></pre>

<p>And, even if my path is wrong, I would expect seeing the word <code>testing</code> when I do <code>git pull</code>, but nothing happens. I guess this means my post-update hook script is not run? What have I missed to make it running?</p>
",2,1273587,,
10242231,484792,4/20/2012 7:47,3,555,<git><githooks><sha>,How do I retrieve the sha of git commit being generated in a commit-msg hook?,"<p>Hoping there is a way to discover the sha for the commit being generated.  Im inside a commit-msg hook.  I'd like to append the sha to the end of the commit message so my git gui can build a link to GitHub for me.</p>
",3,484792,,
46790847,8542377,10/17/2017 13:03,0,826,<git><githooks>,How can I prevent a file (.json) to be commited with a git hook?,"<p><strong>How can I prevent a file (.json) to be commited with a git hook ?</strong></p>

<p>I have a .json which is on the server yet. So I can not use an gitignore. But now I do not want to allow anyone to change this file (commit it) because it would break something. I want to use a local hook.</p>

<p>How can I even get the special file in the commit ?</p>

<p>Could you please give me an instruction how to achieve this ?</p>

<p>Thank your for your help.</p>
",6,8542377,0,0
65357965,4470365,12/18/2020 13:33,1,806,<r><githooks><r-package><pkgdown><r-usethis>,How to add pre-commit git hooks to check that README.Rmd and index.Rmd have been knitted?,"<p>I have an R package with a pkgdown documentation site.  I want to create a git hook so that if I try to commit and push changes to either <code>README.Rmd</code> or <code>index.Rmd</code> without first knitting them to create the corresponding <code>.Md</code> files, I'm warned.  Right now I just forget.</p>
<p>The book <a href=""https://r-pkgs.org/whole-game.html?q=hook#use_readme_rmd"" rel=""nofollow noreferrer"">R Packages</a> says to use <code>usethis::use_readme_rmd()</code> to create the README, which will also create the git hook.  But I already have a README.Rmd file.</p>
<p>How can I create a hook for an existing .Rmd file generally, whether it's README.Rmd or the index.Rmd from my pkgdown site?  I'd like to use the <code>usethis</code> package but if it's simpler to do it outside of that package, I'm open to that.</p>
",4,4470365,0,0
46826918,8542377,10/19/2017 9:36,0,528,<githooks><gitkraken>,GitKraken make message with git hook,"<p><strong>Is it possible to make a message in GitKraken so the developer sees if the git hook manipulated his commit ?</strong></p>

<p>I write git hooks where some files are not allowed to be send to the server and reset them in the commit. How can I make this visible to the developer in GitKraken ? It would be very bad if he does not see that a file which he commited was not commited.</p>
",0,8542377,,
70584839,1135440,1/4/2022 20:46,-1,116,<git><githooks><pre-commit-hook><post-commit-hook>,Git command to retrieve contents of staged file?,"<p>Is it possible to retrieve the contents of a staged file in the current index using Git? The problem is that if I access the source on the disk I would get the unstaged changes returned with the blob.</p>
<p>I am trying to create a git pre-commit hook to update a file with checksums when changes are being committed to a Git repository. So far I managed to list all tracked files with <code>git ls-files</code> and all files that are staged in the commit with <code>git diff --cached --name-only 2&gt;&amp;1</code>.</p>
<p>I am looking for something like <code>git show-raw-contents --cached --file=&quot;path/to/tracked.file&quot;</code> (Yes I just made that up)</p>
<p>Google, Stack Overflow and the Git documentation is not my friend this week. A command supported by pre-commit hooks would be great. But post-commit works just as well.</p>
",12,1135440,,
70598620,2026659,1/5/2022 19:30,0,354,<git><githooks>,want to only allow git branch names that begin with specific words and have lowercase characters only,"<p>I'm trying to set up a git hook where it checks if a branch name begins with certain words, only has lowercase letters and is 15 characters or less. I have it partially working. The 'lowercase only' and '15 characters or less' parts of the regex work. I can't get the 'begins with specific words' part of the regex to work.</p>
<p>Here is my git hook pre-push file contents:</p>
<pre><code>#!/usr/bin/env bash
LC_ALL=C

local_branch=&quot;$(git rev-parse --abbrev-ref HEAD)&quot;

valid_branch_regex=&quot;^(task|master|develop|qa|tb|bug|story)\/[a-z0-9._-]{2,15}$&quot;

message=&quot;This branch violates the branch naming rules. Please rename your branch.&quot;

if [[ ! $local_branch =~ $valid_branch_regex ]]
then
    echo &quot;$message&quot;
    exit 1
fi

exit 0
</code></pre>
<p>I created a new branch locally called task_7777 and ran <code>git push</code>. The branch name failed the regex check even though the name starts with 'task'.</p>
<p>I only want branch names that start with either &quot;task, master, develop, qa, tb, bug or story&quot;, and only allow lowercase letters, numbers, dashes and underscores, and contain 15 characters or less. I tried modelled my code after the example in this post: <a href=""https://itnext.io/using-git-hooks-to-enforce-branch-naming-policy-ffd81fa01e5e"" rel=""nofollow noreferrer"">https://itnext.io/using-git-hooks-to-enforce-branch-naming-policy-ffd81fa01e5e</a></p>
<p>How do I get the 'begins with specific words' part of the regex to work?</p>
",5,2026659,,
53719235,2359762,12/11/2018 7:23,1,290,<git><continuous-integration><git-submodules><githooks>,How to force my main repo to update when a submodules is updated?,"<p>I have a git repo which consists of multiple git submodules from different repos (which I have access to apply any changes regarding CI or Hooks)</p>

<p>My question is how can my main repo get updated automatically and have the latest changes from my submodules master branch whenever there is a commit to it?</p>

<p>I was thinking about hook and CI, but not sure how!</p>

<p>The reason we are not using a package manager for this specific module is that we need the source code and also we do the compilation simultaneously with the main repo code.</p>
",2,2359762,,
37846244,3141033,6/15/2016 21:40,4,744,<git><bitbucket><git-merge><githooks>,Prevent merge to master if branch has commits with messages of certain criteria,"<p>We use bitbucket server as our source repository. I'm not sure if that is relevant to this if it can be solved with a vanilla git hook. </p>

<p>We have the current workflow:</p>

<p>Developer commits to a branch, creates a pull request. Reviewers reply with feedback to code, and developer proceeds to make 'fix' commits based on feedback which will eventually be rebased away after the branch is approved. This allows the reviewers to click on the commit and see diffs between the original pr (which they already reviewed) and the change based on feedback. In order to make it easy for reviewers to distinguish, fix commits all have the prefix 'FIXUP' in their commit message.</p>

<p>This workflow works really well for us, however sometimes the developer will forget to rebase the fixup commits into their branch and  we end with our master branch having a bunch of commit messages titled FIXUP:...</p>

<p>Is it possible to write a hook that prevents merges to master where there are commits with messages starting with a certain string? In addition, is it also possible to make this evident in bitbucket's ui?</p>

<p><strong>EDIT</strong>: Between GlennV's answer and <a href=""https://stackoverflow.com/questions/22297286/git-hook-ensure-each-merge-into-the-master-has-a-message-also-the-automatic-mer"">git hook: ensure each merge into the master has a message also the automatic merges</a> I think I can get some working, thanks everyone!</p>
",2,3141033,0,0
37855576,,6/16/2016 9:45,0,1142,<git><gitlab><githooks>,Gitlab pre-receive hook,"<p>I want to make a pre-receive hook (it should work from the side of Gitlab), that does the following:</p>

<ul>
<li>When somebody pushes to gitlab, it looks through files for ones with extensions .py. </li>
<li>Files with extension .py should be run through pylint</li>
<li>If they have any errors, the push should be rejected.</li>
</ul>

<p>The main problem: as I know git works with changes. All the files that I'll get will have only some lines of code that are added or deleted. As a result I can't test them by pylint.</p>

<p>What I want to do: I want to make a temporary push of all files. Looking through last commits, I'll find files with .py and check them by pylint. In case of errors I will reject the push.</p>

<p>The question: Looking through different tutorials, I haven't found the way to do it. Do you have any ideas how to do it? Or maybe some better implementations for this task?</p>
",1,,,
37856778,3008853,6/16/2016 10:38,0,40,<git><githooks>,Changes in commit but not in source files,"<p>I have cloned git repository from another box. But when I have made changes, create commit locally and push them I do not see this changes in source files on source box. On this box I have pushed commit, but changes will be visible after <code>git reset --hard HEAD</code>.</p>

<p>I do not understand this behavior. How to fix it?</p>
",0,3008853,,
54631041,4083045,2/11/2019 12:51,2,1228,<git><githooks><husky>,Is it possible to run git hook before push and amend the last commit?,"<p>I want to amend the latest commit with the output of some automated script before the push, but for the push to include the latest change. Using <a href=""https://www.npmjs.com/package/husky"" rel=""nofollow noreferrer"">husky</a> I've written this:</p>

<pre><code>""husky"": {
    ""hooks"": {
        ""pre-push"": ""yarn my-script""
    }
}
</code></pre>

<p>where</p>

<pre><code>""my-script"": ""custom-script &amp;&amp; git add changed.file &amp;&amp; git commit --amend --no-edit""
</code></pre>

<p>The problem with it is that push still works with the commits before the latest amended change - which makes sense to some extent.</p>

<p>Is it possible to do with git-hooks?</p>
",0,4083045,,
54640756,5074704,2/11/2019 23:40,1,214,<bash><git><githooks>,Making a commit from a pre-receive hook - error: failed to push some refs,"<p>I have pretty simple git deployment setup for a website as explained <a href=""https://medium.com/@francoisromain/vps-deploy-with-git-fea605f1303b"" rel=""nofollow noreferrer"">here</a>:</p>

<ul>
<li>A bare repository where multiple people commit to</li>
<li>A ""normal"" repository with a working directory that is accessible via a URL (I'll call it prime)</li>
<li>The bare repository has a commit hook. Whenever someone commits something, the prime repository pulls all changes, from the bare repository. Essentially updating the website from a push.</li>
</ul>

<p>However, sometimes files on the prime repository get updated by some scripts. So whenever someone pushes to the bare repository, I'd like to create an automatic commit from prime to the bare repo containing the changes.</p>

<p>I've played around with the various commit hooks. From my understanding I could do the following:</p>

<ul>
<li>When someone pushes to the bare repository</li>
<li>Have a pre-receive hook that checks for changes on the prime repository</li>
<li>If there are any changes commit them to the bare repository</li>
<li>In the post-update hook, pull the commits of the user to the prime repository</li>
</ul>

<p>pre-receive:</p>

<pre class=""lang-sh prettyprint-override""><code>cd ../public || exit # Go to the prime repository
unset GIT_DIR

if [[ `git status --porcelain` ]]; then

    echo ""-&gt; Changes on server detected, pushing to master...""

    git add . # Add all changes
    git commit -m ""Auto-Commit from pre-receive hook"" # Commit them
    git push origin master # Push to bare repository
else
    echo ""-&gt; No changes on server detected...""
fi

exec git-update-server-info
</code></pre>

<p>post-update:</p>

<pre class=""lang-sh prettyprint-override""><code>cd ../public || exit # Go to the prime repository
unset GIT_DIR
echo ""Pulling...""
git pull origin master # Pull user changes into prime

exec git-update-server-info
</code></pre>

<p>It kind of works. When there are no changes in the prime repository everything updates correctly. However, when there are changes and the hook triggers a commit, I would expect to get the message <code>Your branch is 1 commit behind, please pull</code>. Instead I get an error: </p>

<pre><code>! [remote rejected] master -&gt; master (failed to update ref)
error: failed to push some refs to ...
</code></pre>

<p>This is bad, since the user who pushed doesn't get any clue that there's a new commit he needs to pull first.</p>

<p>I expect this might be because the ""Your branch is behind"" check happens before the hook triggers?</p>
",2,5074704,0,0
72351152,27239,5/23/2022 15:30,0,391,<ansible><githooks>,How to use githooks via ansible,"<p>All <a href=""https://www.atlassian.com/git/tutorials/git-hooks"" rel=""nofollow noreferrer"">Git hooks</a> are ordinary scripts that Git executes when certain events occur in the repository.</p>
<p>Can I use these client-side hooks, when i update my repository with the <a href=""https://docs.ansible.com/ansible/latest/collections/ansible/builtin/git_module.html"" rel=""nofollow noreferrer"">builtin git-module from ansible</a>?</p>
<p>The following Demo-Playbook creates a repository and a clone in the <code>/tmp</code> folder.
The <code>post-merge</code>-script adds a line to a file.
The ansible-module ignores this script, but the shell-command <code>git pull</code> creates the new line.</p>
<pre><code>$ cat git-demo.yml
---
- name: git pull demo
  hosts: localhost

  tasks:

  - name: create directory
    file:
      dest: /tmp/demo
      state: directory

  - name: init repo
    shell: git -C /tmp/demo init

  - name: create first commit
    shell: date &gt;&gt; /tmp/demo/test.txt;git -C /tmp/demo add .;git -C /tmp/demo commit -m1

  - name: clone demo
    ansible.builtin.git:
      repo: /tmp/demo
      dest: /tmp/test

  - name: create hook-script
    copy:
      dest: /tmp/test/.git/hooks/post-merge
      content: |
        #!/bin/sh
        date +&quot;%F %T Demonstrating git-hook&quot; &gt;&gt; /tmp/demo/test.txt
      mode: 0755

  - name: create second commit
    shell: date &gt;&gt; /tmp/demo/test.txt;git -C /tmp/demo commit -am2

  - name: git pull without hook
    ansible.builtin.git:
      repo: /tmp/demo
      dest: /tmp/test

  - name: create third commit
    shell: date &gt;&gt; /tmp/demo/test.txt;git -C /tmp/demo commit -am3

  - name: git pull with hook-script
    shell: git -C /tmp/test pull
</code></pre>
<p>Only the shell-module invoked the hook-script:</p>
<pre><code>$ ansible-playbook git-demo.yml
$ cat /tmp/demo/test.txt
Thu 24 Mar 2022 02:13:06 AM CET
Thu 24 Mar 2022 02:13:08 AM CET
Thu 24 Mar 2022 02:13:08 AM CET
2022-03-24 02:13:09 Demonstrating git-hook
</code></pre>
<p>I have used git version 2.25.1 and ansible version 2.10.17.</p>
",1,27239,,
54660030,882936,2/12/2019 23:07,0,107,<git><githooks>,How to version and share githooks without recipients having to do any additional configuration?,"<p>I've made a githook for my current project, it works for me locally, now I'm trying to share it with my team. We are using Windows. Our team is volatile and distributed, people work on many different projects at the same time and can't be expected to perform additional manual configuration of repositories, so, I need the hook to just start working for them with next pull. I've found several tutorials, but all of them suggest additional configuration on recipient side. I need to avoid that.</p>

<p>P.S. Ideally, I'd expect to just add .git/hooks folder to the repo, but that seems to not be possible in GIT.</p>
",2,882936,,
54711200,375399,2/15/2019 14:16,1,472,<node.js><npm><githooks>,"How to ensure every source file has a comment header, githook or npm script?","<p>Due to legal requirements in our project, every single source code file has to have few lines at the top:</p>

<pre><code>1 //// File: filename.js
2 //// Description: Blah blah blah
3 //// Copyright: Blah Blah Blah
4 //// Changes: Blah
</code></pre>

<p>Yes this is redundant with version control information. We don't have a choice so I'd like to automate it as much as possible. If any files are missing this, then a warning should be emitted, like a linter would do.</p>

<p>I don't see any ESLint rules for this, but could it be added (via plugin?)</p>

<p>We are using create-react-app so as I understand it, adding a lint rule is only possible if we eject, which we don't want to have to do.</p>

<p>So, probably a better solution would be via a custom git hook, or npm pre- script. Does anything like this exist?</p>

<p>I have not been able to find anything Node.js specific for enforcing header comments. The only thing I could find that does this type of enforcement was <a href=""https://stackoverflow.com/a/1776731/375399"">an answer about StyleCop</a> for C# with a dead link.</p>
",2,375399,,
72380338,134189,5/25/2022 15:21,0,54,<git><githooks>,How can I prevent changes to existing files but allow creation of files in a git repo?,"<p>I'm assuming a server-side git hook will be at least part of the solution, but I'm not seeing a way to <em>allow creation</em> but <em>prevent modification</em> of files.</p>
<p>The use-case here is &quot;migration&quot; scripts for tracking database schema changes, so the files will be limited to a particular type in a particular part of the directory structure.</p>
",0,134189,,
72400726,5215474,5/27/2022 5:13,2,647,<ruby><git><githooks><git-push>,Consider only files being pushed in pre-push hook git,"<p>I want to run lint on code for pre-push without considering the local changed files the user has. for example change in file A is being pushed and the same got changed in the local changes I want to consider the code being pushed by user.</p>
<p>How to implement this using hit-hooks.</p>
<p>Alternate ways I tried:
Limiting the user to reset the changes in pre-push - The functionality is limited in this case</p>
",1,5215474,,
54862293,827927,2/25/2019 8:38,2,1072,<git><githooks>,Automatically build files before commit,"<p>I have a git repository with some text documents and slides (LibreOffice odt and odp files). I want to automatically convert them into pdf files, and then commit both the documents and the pdf files (so that users of my repository will not have to build the pdf files themselves).
I already wrote a simple makefile that does this conversion automatically:</p>

<pre><code>MAKEPDF=libreoffice --headless --convert-to pdf
SOURCES=$(shell find . -name '*.od*')
TARGETS=$(subst .odp,.pdf,$(subst .odt,.pdf,$(SOURCES)))

all: $(TARGETS)
    #

%.pdf: %.odt
    #
    $(MAKEPDF) $&lt; --outdir $(@D)

%.pdf: %.odp
    #
    $(MAKEPDF) $&lt; --outdir $(@D)
</code></pre>

<p>What I need now is to run this makefile any time I commit new changes.</p>

<p>I read <a href=""https://git-scm.com/book/uz/v2/Customizing-Git-Git-Hooks"" rel=""nofollow noreferrer"">here</a> about git hooks, and thought to use the pre-commit hook. But, this hook runs after I add the files to commit, so the newly generated files will not be added.</p>

<p>Is there a way to automatically make all pdf files and stage them for commit?</p>
",2,827927,0,0
54871240,,2/25/2019 17:04,1,435,<git><githooks><package.json>,Hook for updating file based on package.json,"<p>We need to automate the process of updating our <code>Notice.txt</code> files, which is currently quite tedious.</p>

<p>I was reading up about git hooks, and began to thought about implementing a git hook, that does the following:</p>

<ol>
<li>Look for changes in the <code>package.json</code> <code>dependencies</code> and <code>devDependencies</code></li>
<li>Every time there is a diff in those sections, update the corresponding <code>Notice.txt</code> file.</li>
</ol>

<p>I am unclear how to do this. Has anyone tried to tackle this in the past, or can share a guide or resource to read more about git hooks beyond the general documentation?</p>
",0,,0,0
54869873,6225765,2/25/2019 15:45,2,638,<git><perl><githooks><git-commit>,Perl -- commit-msg hook doesn't stop the commit when exiting 1,"<p><strong>Context :</strong> </p>

<p>I am using some git-hooks to apply automatically some formatting options on Perl scripts. On a pre-commit hook I clean and reformat my scripts using perltidy. I want to check what the user put on the commit message and if it's empty or it's equivalent to ""abort"", we want to prevent the commit and undo the formatting modifications.</p>

<p><strong>Problem :</strong></p>

<p>I removed the .sample extension of the git hook and made it executable using <code>chmod u+x .git/hooks/commit-msg</code> but when my script <code>exit 1</code> the commit isn't stop like it should.</p>

<blockquote>
  <p><strong>commit-msg</strong></p>
  
  <p>This hook is invoked by git-commit[1] and git-merge[1], and can be bypassed with the --no-verify option. It takes a single parameter, the name of the file that holds the proposed commit log message. Exiting with a non-zero status causes the command to abort.</p>
</blockquote>

<p>source : <a href=""https://git-scm.com/docs/githooks#_commit_msg"" rel=""nofollow noreferrer"">https://git-scm.com/docs/githooks#_commit_msg</a></p>

<pre><code>#!/usr/bin/perl -w

use strict;
use warnings;

# Get the path to the files in which we have the commit message
my $commit_file = $ARGV[0];

# Read the file and extract the commit message (lines which don't start with #) 
my @commit_msg;
open(my $fh, ""&lt;"", ""$commit_file"");
while (my $line = &lt;$fh&gt;) {
    if (substr($line, 0, 1) ne ""#"") {
        push(@commit_msg, $line);
    }
}

# Check the message isn't empty or we don't have a ""abort"" line
my $boolean = 0;
foreach my $line (@commit_msg) {
    if ($line ne ""abort"" &amp;&amp; $line ne """") {
        $boolean = 1;
    }
}

if ($boolean == 0) {
    print ""We should commit the modifications\n"";
    exit 0; # Don't prevent commit
}
else {
    print ""We shouldn't commit the modifications\n"";
    exit 1; # Prevent commit
}
</code></pre>

<p>The script is executable and works ! If I enter ""abort"" when I commit some stuff, it prints ""We shouldn't commit the modifications"" but commit them discarding the exit 1...</p>

<p>I hope someone will be able to help ! I am new with git-hook and can't find a solution. Perhaps I miss something on Stackoverflow but I didn't find a post answering this issue.</p>

<p>Best,</p>

<p>Antoine</p>

<p><strong>Edit :</strong>
 I don't commit using : <code>--no-verify</code></p>
",15,6225765,,
54880801,2425851,2/26/2019 8:01,0,101,<git><githooks>,How to impl git-hook to change message of a merge with `no fast forward`?,"<p>I make:</p>

<p><code>Android Studio</code>-> <code>VCS</code>-> <code>Git</code>-> <code>Merge Changes...</code></p>

<p>Check <code>No fast forward</code></p>

<p><a href=""https://i.stack.imgur.com/lQrlZ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/lQrlZ.png"" alt=""enter image description here""></a></p>

<p>After that 
<a href=""https://i.stack.imgur.com/BwXE2.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/BwXE2.png"" alt=""enter image description here""></a></p>

<p>So I want to change commit message <code>""Merge branch 'GRAM-1087' into develop""</code> to <code>GRAM-1087 is merged to develop and is #done</code></p>

<p>Currently I have githook: <code>prepare-commit-msg</code> for adding name of branch to commit message:</p>

<pre><code>#!/bin/sh

target_branch=""develop""

last_develop=`git log origin/$target_branch| head -n 1|cut -f 2 -d ' '`;

parent=`git log | head -n 1|cut -f 2 -d ' '`;

current_branch=`git branch|grep '* '|cut -f 1 -d '_'|cut -f 2 -d ' '`;

if [ $target_branch != $current_branch ]; then
if [ ""$last_develop"" == ""$parent"" ]; then
echo ""$current_branch : #in-progress #comment $(cat $1)"" &gt; ""$1""
else
echo ""$current_branch : #comment $(cat $1)"" &gt; ""$1""
fi
fi
</code></pre>
",3,2425851,,
54895559,9667005,2/26/2019 23:02,1,723,<git><azure-devops><git-submodules><azure-pipelines><githooks>,Git hook to update superproject on submodule change?,"<p>I have three git repositories: <code>A</code>, <code>B</code>, and <code>C</code>. <code>C</code> is a superproject including submodules <code>A</code> and <code>B</code>, tracking each submodule's respective master branch.</p>

<p>When the master branch of <code>A</code> or <code>B</code> is changed, I must do the following in <code>C</code>:</p>

<pre><code>git submodule update --remote
git add A
git add B
git commit -m ""Update submodule A or B""
git push
</code></pre>

<p>At this point an automated build and deploy from C is executed.</p>

<p>I'm looking for ways to streamline this process. Ideally, any commit to the master branch of <code>A</code> or <code>B</code> would trigger a hook to update, commit, and push to <code>C</code>. Any ideas how to achieve this?</p>

<p>Edit: In case there's a vendor-specific feature I should be aware of, I'm using Azure DevOps for the git hosting and Azure Pipelines for the build and deploy process.</p>
",0,9667005,0,0
55001495,12870,3/5/2019 11:11,3,97,<git><githooks>,Edit git's commit comment,"<p>I have a little <code>prepare-commit-msg</code> hook script that does some basic timekeeping for me. It does some sums based on a few metrics and tells me how much time went into the current commit. This is for internal use and should not end up in the commit message.</p>

<p>What it currently does is inject a line like this.</p>

<pre><code># Time since last timed commit: ...
</code></pre>

<p>My problem with <code>prepare-commit-msg</code> is this line ends up in the actual commit message. I have to manually delete it each time or it'll be client-visible.</p>

<p>Ideally it would featured in the block that reads:</p>

<pre><code># Please enter the commit message for your changes. Lines starting
# with '#' will be ignored, and an empty message aborts the commit.
</code></pre>

<p>But how do I print data in there?</p>
",5,12870,,
55046614,1036310,3/7/2019 14:49,3,449,<bitbucket><webhooks><githooks><bitbucket-pipelines><git-webhooks>,"""User Filter"" and ""Branch Filter"" equivalent for Webhooks in BitBucket","<p>We are trying to migrate from <code>Hooks</code> to <code>Webhooks</code> on 'BitBucket' and can't find a way to specify the <em>Branch Filter</em> and <em>User Filter</em>.</p>

<p>While using <code>Hooks</code>, we just need to specify the regex values as in the image below to notify a job to trigger for 'Development' branch and to ignore the commits by the user 'default_user'. Is there a way to achieve the same result with <code>Webhooks</code>?</p>

<p><a href=""https://i.stack.imgur.com/Jy93z.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Jy93z.png"" alt=""enter image description here""></a></p>
",0,1036310,0,0
55054210,5953419,3/7/2019 23:03,3,4352,<git><github><jira><githooks>,Any plugin for Github to enforce jira issue key in commits,"<p>I know there are few plugins in Bitbucket like YACC , etc that you can directly install in Bitbucket and that becomes available for the repositories to enable jira pre-receive commit hook. Is there any similar thing for Github.
All i am looking at is what is the best and most feasible solution to enable some sort of a hook in Github that enforces that any commit made needs to have a valid jira issue key. It would be even better if there is any that also does the same for  branch creation but not something important for me at the moment.</p>

<p>Please help with the steps on how to enable the same in Github enterprise.</p>
",12,5953419,,
55053010,1341399,3/7/2019 21:24,0,26,<github><githooks>,Can you use githooks on github.com?,"<p>I want to execute a script on „pre-merge” which checks commit message - it works well with git. But is there a possibility to use githooks on github.com, when squashing and merging to check commit message?</p>
",0,1341399,,
55060737,62709,3/8/2019 9:57,0,274,<git><githooks>,git-hook only to run tests only if .py files change?,"<p>How can I make my git hook that only runs my unit tests when there are changes to .py files.</p>
",5,62709,,
55060807,62709,3/8/2019 10:02,6,729,<git><githooks>,git hook to warn if changelog not updated?,"<p>How can I write a git hook that outputs a warning in the comment section if there have been no commits to CHANGELOG on the current branch ?</p>

<p>I would like to output something like:</p>

<pre><code># CHANGELOG Not updated.
#
# Update changelog before submitting PR.
#
</code></pre>
",2,62709,,
46009781,220949,9/2/2017 1:52,3,1886,<python><linux><git><bash><githooks>,GIT hook -> Python -> Bash: How to read user input?,"<p>I'm doing a GIT hook in Python 3.5. The python script calls a Bash script that that reads input from the user using <code>read</code> command. </p>

<p>The bash script by itself works, also when calling directly the python script, but when GIT runs the hook written in Python, it doesn't work as expected because no user input is requested from the user.</p>

<p>Bash script:</p>

<pre><code>#!/usr/bin/env bash

echo -n ""Question? [Y/n]: ""
read REPLY
</code></pre>

<p>GIT Hook (Python script):</p>

<pre><code>#!/usr/bin/env python3    
from subprocess import Popen, PIPE
proc = Popen('/path/to/myscript.sh', shell=True, stderr=PIPE, stdout=PIPE)        
stdout_raw, stderr_raw= proc.communicate()
</code></pre>

<p>When I execute the Python script, Bash's <code>read</code> does not seem to be waiting for an input, and I only get:</p>

<pre><code>b'\nQuestion? [Y/n]: \n'
</code></pre>

<p>How to let the bash script read input when being called from Python?</p>
",4,220949,,
63990898,11068079,9/21/2020 10:58,3,5899,<githooks><pre-commit-hook><stylelint><husky><lint-staged>,"How to run ""stylelint --fix"" with husky and lint-staged without blocking the commit","<p>I'm using husky and lint-staged to run &quot;stylelint --fix&quot; on my sass files with this configuration</p>
<pre><code>&quot;husky&quot;: {
    &quot;hooks&quot;: {
        &quot;pre-commit&quot;: &quot;lint-staged&quot;,
        &quot;post-commit&quot;: &quot;git update-index --again&quot;
    }
},
&quot;lint-staged&quot;: {
    &quot;resources/sass/*.scss&quot;: [
        &quot;stylelint --fix&quot;,
        &quot;git add&quot;
    ]
}
</code></pre>
<p>and PhpStorm blocks my commit telling me this:</p>
<p><code>Commit failed with error, 0 file committed, 4 files failed to commit: test lintstaged husky &gt; pre-commit (node v12.18.4) ⚠ Some of your tasks use `git add` command. Please remove it from the config since all modifications made by tasks will be automatically added to the git commit index. [STARTED] Preparing... [SUCCESS] Preparing... [STARTED] Running tasks... [STARTED] Running tasks for resources/sass/*.scss [STARTED] stylelint --fix [FAILED] stylelint --fix [FAILED] [FAILED] stylelint --fix [FAILED] [SUCCESS] Running tasks... [STARTED] Applying modifications... [SKIPPED] Skipped because of errors from tasks. [STARTED] Reverting to original state because of errors... [SUCCESS] Reverting to original state because of errors... [STARTED] Cleaning up... [SUCCESS] Cleaning up... ✖ stylelint --fix: resources/sass/_custom.scss 614:1 ✖ Unexpected duplicate selector &quot;body&quot;, first used at line 116 no-duplicate-selectors 974:11 ✖ Unexpected unknown type selector &quot;readonly&quot; selector-type-no-unknown 988:1 ✖ Unexpected duplicate selector &quot;body&quot;, first used at line 116 no-duplicate-selectors 1313:1 ✖ Unexpected duplicate selector &quot;.btn.clear&quot;, first used at line 418 no-duplicate-selectors husky &gt; pre-commit hook failed (add --no-verify to bypass)</code></p>
<p>I read on the documentation that using the command &quot;--no-verify&quot; it skips &quot;stylelint --fix&quot;, but I'd like to run &quot;stylelint --fix&quot; to fix the errors stylelint can fix and to skip the prevent commit.</p>
<p>In other words, I'd like to fix the errors that can be fixed automatically and to commit even if there are some warnings from stylelint.</p>
<p>Is it possible to do that?</p>
",2,11068079,,
46065895,3809822,9/6/2017 2:30,0,391,<git><docker><githooks><gogs>,automatically remote deploy from gogs inside docker,"<p>We have a gogs server installed with docker in machine <code>gitbase</code>. Also, we have a <code>frontend</code> server as web server. </p>

<p>What I want to do is to write code in my local machine, push to <code>gitbase</code>. And then automatically deploy the code to <code>frontend</code> server using <code>git hooks</code>.</p>

<p>In the <code>git hooks</code>, I wrote <code>post-receive</code> hook which <code>ssh</code> into the <code>frontend</code> server to <code>git clone</code> the repo. But it shows <code>Host key verification failed</code> error.</p>

<p>I have passwordless login to <code>frontend</code> from <code>gitbase</code> using username <code>root</code>. So my guess is that <code>gogs</code> inside <code>docker</code> try to ssh using a different username, how can I find what username it used? Or is there other way to do the remote deployment? </p>

<p>Thanks.</p>
",1,3809822,,
64025717,5789937,9/23/2020 10:15,1,647,<git><githooks><tortoisegit><github-desktop>,Git GUIs ignore commit-msg hook,"<p>I wrote a commit-msg hook to check commit messages to use a proper format.
When using git bash it works just as intended:</p>
<pre><code>$ git commit -m &quot;test&quot;

[Invalid Commit Message]
------------------------
Commit message needs to start with an uppercase character and be imperative

Example: Add new character model
Regex: ^[A-Z](?!\w*ed).*$
Actual commit message: &quot;test&quot;
Actual length: 5
</code></pre>
<p>When using a Git GUI (testet with Tortoise Git and GitHub for Desktop) though it accepts the exact same commit message. It seems to just ignore the hook.</p>
<p>Do Git GUIs just not execute this hook?</p>
<p><strong>Update</strong>: I found out that the hook is being executed by tortoise git it just has an error because of the charset in use: &quot;&quot;grep: -P supports only unibyte and UTF-8 locales</p>
<p>I could fix this issue with &quot;LC_ALL=en_US.utf8&quot; (see <a href=""https://stackoverflow.com/questions/61456142/grep-p-supports-only-unibyte-and-utf-8-locales-in-jenkins"">here</a>)</p>
<p>Tortoise Git now blocks broken commit messages but Github Desktop still seems to ignore the hook.
Unlike Tortoise though I cannot see what it is doing internally.</p>
",1,5789937,0,0
46086912,8572063,9/7/2017 2:25,1,172,<git><version-control><githooks>,Remote Pull via Git Hook takes a really long time,"<p>Git responds great on our development server, but when we do a git push, a git hook tells the live server to do a git pull to publish everything that has been pushed on the development server in that one step.  Our problem is, that git hook takes approximately 45 seconds to do a git pull from the live server, but when we manually do a git pull on the live server it is nearly instantaneous. </p>

<p>With debugging turned on for timestamps, this is an example of what happens: </p>

<pre><code>$ git push
Counting objects: 5, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (5/5), done.
Writing objects: 100% (5/5), 435 bytes | 217.00 KiB/s, done.
Total 5 (delta 4), reused 0 (delta 0)
remote: Checking connectivity: 5, done.
remote: Debug: set branch start @ Wed, Sep  6, 2017 10:12:28 PM
remote: Debug: set branch end @ Wed, Sep  6, 2017 10:12:28 PM
remote: GIT pull master on live server...
remote: Debug: cd start @ Wed, Sep  6, 2017 10:12:28 PM
remote: Debug: cd end @ Wed, Sep  6, 2017 10:12:28 PM
remote: Debug: unset git_dir start @ Wed, Sep  6, 2017 10:12:28 PM
remote: Debug: unset git_dir end @ Wed, Sep  6, 2017 10:12:28 PM
remote: Debug: git pull start @ Wed, Sep  6, 2017 10:12:28 PM
remote: From //liveserver/GIT/repos/ThisProject
remote:  * branch              master     -&gt; FETCH_HEAD
remote:    6434be6e..f6c6e04d  master     -&gt; origin/master
remote: Updating 6434be6e..f6c6e04d
remote: Fast-forward
remote:  applications/the_changed_file.php | 2 +-
remote:  1 file changed, 1 insertion(+), 1 deletion(-)
remote: Debug: git pull end @ Wed, Sep  6, 2017 10:13:14 PM
remote: Done!
To //liveserver/GIT/repos/ThisProject.git
   6434be6e..f6c6e04d  master -&gt; master
</code></pre>

<p>We're completely stumped on how we can get this to speed up to near the speed of how long it takes when running git pull from the live server directly. What could we do to fix this?  </p>

<p>We are using Git Bash on Windows Server on both our dev and live servers.</p>
",3,8572063,0,0
27867482,2449867,1/9/2015 19:06,0,47,<wordpress><git><githooks>,Git post-receive hooks for two repos on the same server,"<p>I'm developing a site in Wordpress that I’ve built a template and a plugin for. For my git workflow, I'd like to be able to track the template and the plugin separately with two different repos on the server. Right now I push template commits into a bare repo on the server, which then executes this post-receive hook:</p>

<pre><code>#!/bin/sh
export GIT_WORK_TREE=/home/user/public_html/wp-content/themes/custom_theme
export GIT_DIR=/home/user/public_html/custom_theme.git
git checkout -f master
</code></pre>

<p>And the files show up in the theme folder as intended when I push. But when I tried to set up the exact same thing for the plugin, I get no result. Here is the post-receive hook for the plugin bare repo:</p>

<pre><code>#!/bin/sh
export GIT_WORK_TREE=/home/user/public_html/wp-content/plugins/custom_plugin
export GIT_DIR=/home/user/public_html/custom_plugin.git
git checkout -f master
</code></pre>

<p>When I push to the plugin bare repo, the live plugin directory remains empty and I don't even see any error logs. Does this have to do with using two repos on the same server? I tried adding ""unset GIT_DIR"" at the start of both hooks to see if that made any difference (it didn't). I've also already checked the file permissions and both hooks are executable for all users. Is there at least a way I can run the plugin hook manually and see what the shell response is?</p>

<p>EDIT:
I added the ""echo working 1>&amp;2"" to the hook to test if it triggers (per torek's suggestion). After committing a test change and pushing to the server bare repo, here is what I got:</p>

<pre><code>stdin: is not a tty
Counting objects: 5, done.
Delta compression using up to 12 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 376 bytes | 0 bytes/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: Already on 'master'
remote: working
To user@dev.mysite.org:public_html/custom_plugin.git
   f1cc0bb..9a71b5b  master -&gt; master
</code></pre>

<p>So it seems like the hook is triggering right? I'm getting the ""remote: working"" line of output above. I'm not exactly sure what all of the output means though. Am I missing something there?</p>
",5,2449867,,
64053229,13537863,9/24/2020 19:35,1,77,<github><githooks>,Is there a way to automatically update an out-of-sync branch in githib?,"<p>We have an application where people fork the app and make PRs from their own branches of their forks. Since we have multiple teams making PRs, sometimes PRs get stuck in a situation where they have to keep updating their branch (whether locally and pushing, or by clicking the &quot;Update Branch&quot; button in their PR). Is there a way we can automatically start to update a PR's branch when the PR has already had the necessary approvals it needs for it to be merged, and it is out of date?</p>
",3,13537863,,
46147312,7978132,9/11/2017 2:10,1,194,<git><githooks><web-development-server>,"GIT web deployment: post-receive hook runs, but files not changing in web-root","<p>I am using <a href=""https://gist.github.com/noelboss/3fe13927025b89757f8fb12e9066f2fa"" rel=""nofollow noreferrer"">this gist's</a> guidelines for setting up automated deployment for my organization's website. The post-receive hook seems to be running, but the actual files in my site's web root are not being updated to reflect the changes that I push to the server. My post-receive hook is:</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code>#!/bin/bash
while read oldrev newrev ref
do
    # only checking out the master (or whatever branch you would like to deploy)
    if [[ $ref =~ .*/master$ ]];
    then
        echo ""Master ref received.  Deploying master branch to production...""
        git --work-tree=/home/sites/3a/5/5b0bf591fd/public_html/ --git-dir=/home/sites/3a/5/5b0bf591fd/annapoliscodeandcoffee.git/ checkout -f
    else
        echo ""Ref $ref successfully received.  Doing nothing: only the master branch may be deployed on this server.""
    fi
done</code></pre>
</div>
</div>
</p>

<p>I am not sure what is going wrong.  Is it possible that this has to do with my public_html folder's chmod permissions? They are currently set as -rw-r--r-- for all files located there.</p>

<p>Also, in case it is relevant, the hosting service I am using is Ecowebhosting.co.uk.</p>
",2,7978132,0,0
64103760,997147,9/28/2020 14:03,0,127,<git><git-commit><githooks><git-post-receive><git-bare>,How do I configure a remote to have a fixed receive pack?,"<p>I have a git bare repository on my server which has a post-receive hook that essentially does</p>
<pre><code>GIT_WORK_TREE=`/path/to/public_html` git checkout -f
</code></pre>
<p>Whenever I do a push from my local repo to this remote I get an error:</p>
<pre><code>fatal: bad config value for 'receive.denycurrentbranch' in ./config
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists
</code></pre>
<p>I found <a href=""https://stackoverflow.com/a/62788948/997147"">a solution for this</a> which works fine. However, I cannot expect to type out the <code>--exec=/usr/local/cpanel/3rdparty/bin/git-receive-pack</code> each time I make a push. I know one option would be to make an alias to the whole command but that doesn't work great either since when I shift to a different system I need to have this command as well.</p>
<p>How do I go about enforcing that the right receive pack is used? The issue seems to be that <a href=""https://documentation.cpanel.net/display/CKB/Guide+to+Git+-+Host+Git+Repositories+on+a+cPanel+Account#GuidetoGit-HostGitRepositoriesonacPanelAccount-Pushlocalchangestothehostedrepository."" rel=""nofollow noreferrer"">I'm using a shared hosting which uses cPanel</a>. Is there anything I can specify on my bare repo to ensure I can normally do <code>git push origin master</code> rather than specifying the pack? Or something that can be done on client side and stored into the main repo also works--as long as when I clone back the repo on another system I can continue using it normally. Suggestions?</p>
",2,997147,,
64116591,170746,9/29/2020 9:20,0,149,<javascript><amazon-web-services><server><devops><githooks>,How to stop a push with compile mistakes?,"<p>I recently pushed a code error (Javascript-Used a const instead of a let) to a server and the admin say that it stopped other developers pushing their code? On other sites/employments i'm sure I have done this once before but it was just reporting &quot;build failed&quot; in the log file and the update was rejected.</p>
<p>On this occasion the server did not update (As it had not been doing anyway) but subsequent pushes by other developers did not update.</p>
<p>The fact that the server was not updating before I pushed (As other developers reported) shows me that my syntax error did not cause the problem of the server not updating with pushed code.</p>
<p>Help! they are blaming me for a problem that was on the server for a whole week before my 'syntax error' push!</p>
<p>Any replies by other developers and AWS DevOps would be greatfully recieved..</p>
<p>Isn't it usual for there to be server hook code in place so that the pushed code is rejected and does not cause damage to a server application?</p>
",2,170746,,
27893052,2194137,1/11/2015 22:54,5,2793,<github><jira><githooks>,Commit message hook on github,"<p>I am trying to setup a pre-receive hook in github that I used to use on STASH. In STASH, I had a pre-receive hook that used to enforce ""A custom commit message that should have a JIRA number included in it"". </p>

<p>Now, I am trying to understand what would be the best way to do something similar on github. If I split it up, it would be:</p>

<ul>
<li>Requiring a custom commit message.</li>
<li>Every commit should include an existing JIRA. </li>
<li>Enforce this on any pull request as well.</li>
</ul>

<p>Eg: TEST-1 Adding the first commit message. </p>

<p>Can anybody here help me, how can this be done ? </p>
",0,2194137,0,0
46300449,461597,9/19/2017 12:26,1,871,<git><githooks><clang-format>,Git-hook: No staged changes when running `git commit -a`,"<p>Here's my (simplified, no error checking) git hook:</p>

<pre><code>git diff --cached | clang-format-diff -p1 &gt; $PATCHFILE
git patch-apply -p0 $PATCHFILE           # modify the working tree
git patch-apply -p0 --cached $PATCHFILE  # modify what is staged
</code></pre>

<p>This works fine, however, when a user is running <code>git commit -a</code>, the <a href=""https://git-scm.com/docs/git-diff#_examples"" rel=""nofollow noreferrer"">documentation</a> to <code>git diff</code> informs me that ""there are various ways to check your working tree"":</p>

<blockquote>
<pre><code>$ git diff            (1)
$ git diff --cached   (2)
$ git diff HEAD       (3)
</code></pre>
  
  <p>Changes in the working tree not yet staged for the next commit.</p>
  
  <p>Changes between the index and your last commit; <strong>what you would be committing if you run ""git commit"" without ""-a"" option</strong>.</p>
  
  <p>Changes in the working tree since your last commit; <strong>what you would be committing if you run ""git commit -a""</strong></p>
</blockquote>

<p>As a consequence, the script does not work when a using is <code>git commit -a</code>. This is because it gets called at a stage where the index apparently has not had the changes added.</p>

<p>I would like to apply the clang-format-diff changes only on staged files.</p>

<h1>Question:</h1>

<ol>
<li>Why, apparently, does <code>git commit -a</code> call the pre-commit hook before staging files? Isn't that a bug?</li>
<li>What should I do? Can I somehow detect inside the pre-commit hook that I am inside a <code>git commit -a</code> situation? I would rather avoid formatting unstaged changes.</li>
</ol>

<h2>Notes</h2>

<ul>
<li>I am using git 2.11.0.</li>
<li>Related questions but not duplicate:

<ul>
<li><a href=""https://stackoverflow.com/q/27983784/461597"">git commit -a bypasses git hook when it shouldn&#39;t</a></li>
<li><a href=""https://stackoverflow.com/q/45721633/461597"">`git diff` does not work when run from a git pre-commit hook</a></li>
<li><a href=""https://stackoverflow.com/q/45749689/461597"">git pre-commit hook not running when running git commit -a</a></li>
</ul></li>
</ul>
",3,461597,,
46309874,5356748,9/19/2017 21:17,1,96,<git><gitlab><hook><githooks>,How to put predefined commit message in Gitlab web UI?,"<p>I've been created prepare-commit-msg and commit-msg client hooks, that work fine if I make commits from the command line. These hooks add some predefined commit message text. Something like</p>

<pre><code>Comment:
JIRA:
Reviewer:
</code></pre>

<p>The question is - how to enable this message text in Gitlab web UI after modifying a file? I mean - is there any way to put my the above template (Comment, JIRA, Reviewer) as a predefined text in the input field (see a picture).
<a href=""https://i.stack.imgur.com/kNS0X.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/kNS0X.png"" alt=""enter image description here""></a></p>
",0,5356748,0,0
64654739,9095988,11/2/2020 23:29,0,971,<javascript><git><eslint><githooks>,How to apply eslint/prettier auto-fixes in git-hook,"<p>I am wondering how can I apply <code>eslint</code> and <code>prettier</code> auto fixes in <code>git-hook</code> <code>pre-push</code> phase.
I tried something like this:</p>
<pre class=""lang-sh prettyprint-override""><code>./node_modules/.bin/eslint index.js --fix
git add .
git commit --amend --no-edit
</code></pre>
<p>It fixes problems in my local repo but doesn't push it to the remote. Then also after I type <code>git status</code> it is written that I have 1 and 1 different commits each, respectively and I have to use <code>git pull</code> to fix my problems. This generates super mess in the repo.</p>
<p>Do you have any idea how can I achieve this ?</p>
",3,9095988,,
28041218,675100,1/20/2015 9:00,1,1260,<git><gitlab><githooks><ssh-keys><mirror>,Gitlab returning remote: You do not have permissions to do this. while performing scripted git push,"<p>My scenario is as follows:</p>

<p>we have a gitlab set up for our team where we do all of our development with branches etc, etc. We also have an official repo hosted by our company where we would like to have our master branch mirrored so that people (that have access to this repo in our company) can view our code.</p>

<p>I have written a <code>post-receive</code> hook that would mirror commits pushed to master branch on gitlab towards the official repo: (<code>/opt/gitlab/embedded/service/gitlab-shell/hooks/post-receive</code> on gitlab)</p>

<pre><code>#!/opt/gitlab/embedded/bin/ruby
# Fix the PATH so that gitlab-shell can find git-upload-pack and friends.
ENV['PATH'] = '/opt/gitlab/bin:/opt/gitlab/embedded/bin:' + ENV['PATH']

#!/usr/bin/env ruby

# This file was placed here by GitLab. It makes sure that your pushed commits
# will be processed properly.
#
deveo_server=""deveo@deveo.XXXX.com:XXXX/projects/XXXX/repositories/git/Project""

from, to, branch = ARGF.read.split "" ""
if (branch =~ /master$/) == nil
    puts ""Received branch #{branch}, not deploying.""
    exit
end

`git remote add deveo #{deveo_server} &gt;/dev/null 2&gt;&amp;1`
`git push deveo master`
 puts ""DEPLOY: master(#{to}) mirrored to '#{deveo_server}'""

refs = ARGF.read
key_id  = ENV['GL_ID']
repo_path = Dir.pwd

require_relative '../lib/gitlab_custom_hook'
require_relative '../lib/gitlab_post_receive'

if GitlabPostReceive.new(repo_path, key_id, refs).exec &amp;&amp;
    GitlabCustomHook.new.post_receive(refs, repo_path)
  exit 0
else
  exit 1
end
</code></pre>

<p>The problem is that when I do this I receive the following on commits to gitlab's master branch:</p>

<pre><code>[master aa4a4f2] testing hooks 7
 0 files changed
 create mode 100644 testing_hooks_7
Counting objects: 3, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (2/2), 264 bytes, done.
Total 2 (delta 1), reused 0 (delta 0)
remote: You do not have permissions to do this.
remote: fatal: Could not read from remote repository.
remote: 
remote: Please make sure you have the correct access rights
remote: and the repository exists.
remote: DEPLOY: master(aa4a4f218b7bc335ee3e0d6d52df5cfd5ddc1c99) mirrored to 'deveo@deveo.XXXX.com:XXXX/projects/XXXX/repositories/git/Project'
To git@projectgitlab.net:XXXX/Project.git
   1e92695..aa4a4f2  master -&gt; master
</code></pre>

<p>I have launched ssh agent there and added <code>git</code> user's ssh from gitlab to deveo but something is missing.</p>

<p>This has worked when I set up this with bare repo next to my local repository on my local machine - so there has to be some keys missing somewhere.. but where :( ?</p>
",0,675100,0,0
64686409,1030542,11/4/2020 19:20,1,225,<github><rebase><githooks><git-rebase>,Validate commit message for a GitHub rebase and merge,"<p>I am looking for a way to validate commit message via a pre-receive hook.</p>
<p>I am able to validate it for squash and merge commit however, it does not work for GitHub rebase and merge.</p>
<pre><code>set -e

zero_commit='0000000000000000000000000000000000000000'
msg_regex='&lt;pattern_here&gt;'
release_branches=( topic master )
exit_code=0

containsElement () {
  local e match=&quot;$1&quot;
  shift
  for e; do [[ &quot;$e&quot; == &quot;$match&quot; ]] &amp;&amp; return 0; done
  return 1
}


while read oldsha newsha refname; do
    short_current_branch=&quot;$(echo ${refname} | sed 's/refs\/heads\///g')&quot;

    if containsElement &quot;${short_current_branch}&quot; &quot;${release_branches[@]}&quot;; then
        echo &quot;${short_current_branch} is in ${release_branches[@]}&quot;
    else
        echo &quot;${short_current_branch} is not in ${release_branches[@]}&quot;
        echo &quot;Skipping execution&quot;
        continue
    fi

    case ${oldsha},${newsha} in
        *,${NULL_SHA1}) # it's a delete
            any_deleted=true;;
        ${NULL_SHA1},*) # it's a create
            new_list=&quot;$new_list $newsha&quot;;;
        *,*) # it's an update
            new_list=&quot;$new_list $newsha&quot;;;
    esac
done


if [[ -z &quot;$new_list&quot; ]]
then
    exit ${exit_code}
fi

commit_msg=()


git rev-list ${new_list} --not --all |
while read sha1; do
    message=$( git log --max-count=1 --format=%B ${sha1} | head -1)
    if  ! echo &quot;${message}&quot; | grep -o &quot;&lt;regex_pattern&gt;&quot; ; then
        echo &quot;ERROR:&quot;
        echo &quot;ERROR: Your push was rejected because commit: ${commit}&quot;
        echo &quot;ERROR: is missing radar link in first line of below commit message:&quot;
        echo &quot;ERROR: ${message}&quot;
        echo &quot;ERROR:&quot;
        echo &quot;ERROR: Please fix commit message and push again.&quot;
        echo &quot;ERROR: https://docs.github.com/en/enterprise- 
        server@2.21/github/committing- 
        changes-to-your-project/changing-a-commit-message&quot;
        echo &quot;ERROR&quot;
        exit_code=1
    fi
done

exit ${exit_code}
</code></pre>
",0,1030542,0,0
46323376,1735099,9/20/2017 13:27,1,628,<git><githooks>,How properly exclude files in Git hooks?,"<p>Currently I have <code>post-receive</code> hook which looks like this</p>
<pre><code>git --work-tree=/var/www/project --git-dir=/var/repos/Project.git checkout -f
</code></pre>
<p>Is it possible to exclude/ignore few folders?</p>
<p>I need the following local folders to be excluded when the hook executes:</p>
<ul>
<li>/var/www/project/app/config/local</li>
<li>/var/www/project/bootstrap</li>
</ul>
",0,1735099,,
64706879,1030542,11/5/2020 23:39,1,220,<git><github><githooks><pull-request>,GitHub pre-receive hook display warning message,"<p>I am able to validate commit via Github pre-receive hook. But, instead of blocking commits with non-zero exit code in pre-receive hook, is tgere a way to display warning messages with exit code 0?</p>
",0,1030542,,
64710510,8411150,11/6/2020 7:34,0,125,<git><githooks><git-bare>,Post-receive hook causing untracked files in production folder,"<p>I checked the google for similar questions and the only thing that I found with similar problem is in this topic:
<a href=""https://stackoverflow.com/questions/20506600/post-receive-script-results-in-untracked-modified-files"">Post-receive script results in untracked/modified files</a></p>
<p>The situation is this. I guide from the <a href=""https://git-scm.com/book/fa/v2/Git-on-the-Server-Setting-Up-the-Server"" rel=""nofollow noreferrer"">4.4 Git on the Server - Setting Up the Server</a> tutorial.</p>
<p>Making bare repo on computer 1:</p>
<pre><code>$ cd /srv/git
$ mkdir project.git
$ cd project.git
$ git init --bare
Initialized empty Git repository in /srv/git/project.git/
</code></pre>
<p>Pushing the 1st version to bare repo on computer 2:</p>
<pre><code># on John's computer
$ cd myproject
$ git init
$ git add .
$ git commit -m 'Initial commit'
$ git remote add origin git@gitserver:/srv/git/project.git
$ git push origin master
</code></pre>
<p>Cloning in production folder on computer 1</p>
<pre><code>git clone git@gitserver:/srv/git/project.git
$ cd project
$ vim README
$ git commit -am 'Fix for README file'
$ git push origin master
</code></pre>
<p>All looking good push/pull from both machines.</p>
<p>Now making the post-receive hook in hook folder:</p>
<pre><code>#!/bin/bash
while read oldrev newrev ref
do
    if [[ $ref =~ .*/master$ ]];
    then
        echo &quot;Master ref received.  Deploying master branch to production...&quot;
        git --work-tree=/var/www/html/project --git-dir=/srv/git/project.git checkout -f
    else
        echo &quot;Ref $ref successfully received.  Doing nothing: only the master branch may be deployed on this server.&quot;
    fi
done
</code></pre>
<p>OK. Pushing from computer 2 when I commit 2 files &quot;test_file1&quot; and &quot;test_file2&quot;  to bare. Success.
Browsing to see if the hook worked in production folder on computer 1. Ok the files &quot;test_file1&quot; and &quot;test_file2&quot; are there.</p>
<pre><code>get status 
</code></pre>
<p>In production folder echoing this:</p>
<pre><code>On branch master
Your branch is ahead of 'origin/master' by 2 commits.
  (use &quot;git push&quot; to publish your local commits)

Untracked files:
  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)
        public/test_file1
        public/test_file2

nothing added to commit but untracked files present (use &quot;git add&quot; to track)
</code></pre>
<p>I have .git folders in both production folder and local(testing) folder.
Any idea if this is normal? And how to fix it?</p>
",0,8411150,0,0
64759535,14431930,11/9/2020 21:30,7,2474,<git><github><gitlab><githooks>,Automatically merge one branch into another basis on some conditions using hook?,"<p>I have two branches in my github repository - <code>master</code> and <code>dev</code> branch. I have a requirement where I need to merge <code>master</code> branch into <code>dev</code> branch under below conditions:</p>
<ul>
<li>Once a PR is merged into master branch directly then I need to merge master branch back to dev branch automatically.</li>
<li>Whenever someone adds a commit into master branch directly then I need to merge <code>master</code> branch back to <code>dev</code> branch automatically.</li>
</ul>
<p>Is this possible to do by any chance? I believe we can make this work with git Hooks but I am not sure how to do it. Can someone provide an example on how to achieve this?</p>
<p>I read it online and looks like I can use <code>post-receive</code> hook with below content in it but I am confuse on how to do this only if someone adds a commit to <code>master</code> branch or any PR gets merged to master branch? Also is this even the right way to do it?</p>
<pre><code>  git checkout master
  git pull

  git checkout dev
  git pull

  git merge master --no-ff --no-edit
  git push
</code></pre>
<p>I appreciate that it may not always be possible, owing to merge conflicts, but if it is possible, we'd like it to happen automatically.</p>
<p><strong>Update</strong></p>
<p>After reading more about <code>Github Actions</code> - I created a file like this <code>.github/workflows/merge-back-to-dev.yml</code> in my root folder of git repository with below content. Does this look right? Do I need all these fields like <code>runs-on</code>?</p>
<pre><code>  name: 'Nightly Merge'

  on:
    push:
      branches:
        - master

  jobs:
    nightly-merge:

      runs-on: ubuntu-latest

      steps:
      - name: Checkout
        uses: actions/checkout@v1

      - name: Nightly Merge
        uses: robotology/gh-action-nightly-merge@v1.3.1
        with:
          stable_branch: 'master'
          development_branch: 'dev'
          allow_ff: false
</code></pre>
<p>So now with this change, whenever I add a commit to <code>master</code> branch directly or any PR gets merged to <code>master</code> branch directly then master branch will be merged to dev branch automatically right?</p>
",11,14431930,0,0
46355924,3757721,9/22/2017 2:28,0,366,<git><gruntjs><githooks><git-commit>,Error trying to git commit,"<p>When I type:  <code>git commit .</code> I get this error: </p>

<pre><code>'grunt' is not recognized as an internal or external command, operable program or batch file.
</code></pre>

<p>I have no idea where the 'grunt' reference is coming from, but this is the error I am getting when trying to commit.  Any ides on how to fix or where I can start looking for issues?</p>
",3,3757721,,
64876119,1725836,11/17/2020 13:23,2,1575,<git><githooks>,Git hooks in sub-directory,"<p>I have one repo that contains several React projects in different directories. For the structure</p>
<pre><code>&gt; Repo Root
  &gt; .git
  &gt; CRA Project1
  &gt; CRA Project2
</code></pre>
<p>There are git hooks defined in the <code>.git</code> in the repo root for global things.<br />
But I want to add hooks specifically for each project. Say, running custom linter with pre-commit in <code>CRA Project1</code> but not in <code>CRA Project2</code>.</p>
<p>How can I add hooks per project if global hook are already defined?</p>
",2,1725836,,
64896945,1045800,11/18/2020 16:14,0,145,<git><githooks><trailing-whitespace>,git for Windows: remove trailing whitespace when committing,"<p>I've written a <code>pre-commit</code> hook to remove trailing whitespace with git for Windows 2.27.0.windows.1.  It seems like a well researched subject, but unfortunately, I cannot get it to work as it should.  This is my <code>.git\hooks\pre-commit</code> file:</p>
<pre><code>#!/bin/sh
if git rev-parse --verify HEAD &gt;/dev/null 2&gt;&amp;1
then
    against=HEAD
else
    # Initial commit: diff against an empty tree object
    against=$(git hash-object -t tree /dev/null)
fi

git diff --cached --name-only --diff-filter=ACM -z $against | xargs -0 | while read LINE
do 
    if [ -n &quot;$LINE&quot; ]; then
        remove_whitespace &quot;$LINE&quot;
        git add &quot;$LINE&quot;
    fi
done
</code></pre>
<p>Assume I have a file <code>test.txt</code> already committed and it has no trailing whitespace.  Now I add trailing whitespace somewhere to it and I want the <code>pre-commit</code> to remove that whitespace and not commit anything (since there were no changes).  But this is what happens:</p>
<pre><code>C:\&gt; git status
On branch test
Your branch is ahead of 'origin/test' by 17 commits.
(use &quot;git push&quot; to publish your local commits)

Changes not staged for commit:
(use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
(use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)
        modified:   test.txt

no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)

C:\&gt; git commit test.txt -m test
test.txt
[test 30cb9c0] test

C:\&gt; git status
On branch test
Your branch is ahead of 'origin/test' by 18 commits.
(use &quot;git push&quot; to publish your local commits)

Changes to be committed:
(use &quot;git restore --staged &lt;file&gt;...&quot; to unstage)
        modified:   test.txt

Changes not staged for commit:
(use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
(use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)
        modified:   test.txt

C:\&gt; git add test.txt

C:\&gt; git status
On branch test
Your branch is ahead of 'origin/test' by 18 commits.
(use &quot;git push&quot; to publish your local commits)

nothing to commit, working tree clean        
</code></pre>
<p>It really did remove trailing whitespace from <code>test.txt</code>, since when I <code>add</code> the cleaned up file with <code>git add test.txt</code> it shows no more changes.  But the <code>pre-commit</code> hook seems to cause a file <strong>with</strong> trailing whitespace to be in the staged area and a file <strong>without</strong> trailing whitespace not yet staged for commit.</p>
<p>How can I process all files that are about to be committed, commit output of said processing, but only if that caused a change to the already committed version?</p>
",3,1045800,,
28106011,4485762,1/23/2015 8:44,6,15081,<git><githooks><git-post-receive>,Understanding Git Hook - post-receive hook,"<p>I have written simple shell script to throw ""success and failure message"" and placed it under .git/hooks/ with all proper permissions. I want to call this script as a post-receive. But the script is not working, running the script simply works but as post-receive hook it doesn't work.</p>

<p>Is their something being missed or have i wrongly understood the post-receive hook. Can some one explain client-side and server-side hooks and how to execute them.</p>

<p>I have searched over it but not able to understand.</p>
",2,4485762,0,0
46374865,5860075,9/23/2017 0:32,1,1403,<git><githooks><npm-shrinkwrap>,Add git hook to watch for files' changes,"<p>I am trying to create a git hook that evaluate the package.json for changes and auto-runs the shrinkwrapper and commits the changed file to a repository. I have tried a lot, but could not get a working solution. Does anyone know how do that ?</p>

<p>Also, whenever I add a npm module, and try to run npm shrinkwrap, I get this error</p>

<pre><code> npm ERR! Darwin 16.7.0
npm ERR! argv ""/usr/local/bin/node"" ""/usr/local/bin/npm"" ""shrinkwrap""
npm ERR! node v6.11.3
npm ERR! npm  v3.10.10

npm ERR! Problems were encountered
npm ERR! Please correct and try again.
npm ERR! missing: request-promise@^4.2.2, required by Redux-React@1.0.0
npm ERR!
npm ERR! If you need help, you may report this error at:
npm ERR!     &lt;https://github.com/npm/npm/issues&gt;

npm ERR! Please include the following file with any support request:
npm ERR!     /Users/maxDoung/Desktop/Redux-React/npm-debug.log
</code></pre>

<p>for some reason npm shrink does not work if I update package.json manually or install a module using npm. Also, I am not sure if the node or npm version matters. I am using npm 3.10.10, and node v6.11.3</p>

<p>Here is my dependency </p>

<pre><code>  ""dependencies"": {
    ""apn"": ""^1.7.7"",
    ""bluebird"": ""^3.4.1"",
    ""body-parser"": ""^1.15.0"",
    ""busboy"": ""^0.2.13"",
    ""connect-redis"": ""^3.1.0"",
    ""cookie-parser"": ""^1.4.1"",
    ""cors"": ""^2.7.1"",
    ""debug"": ""^2.2.0"",
    ""destroy"": ""^1.0.4"",
    ""express"": ""^4.13.4"",
    ""git-rev"": ""^0.2.1"",
    ""glob"": ""^7.0.3"",
    ""helmet"": ""^1.3.0"",
    ""hiredis"": ""^0.4.1"",
    ""humps"": ""^1.1.0"",
    ""lodash"": ""^4.14.1"",
    ""methods"": ""^1.1.2"",
    ""mysql"": ""^2.11.1"",
    ""node-gcm"": ""^0.14.4"",
    ""node-inspector"": ""^0.12.8"",
    ""node-resource"": ""^1.2.0"",
    ""on-finished"": ""^2.3.0"",
    ""on-headers"": ""^1.0.1"",
    ""parseurl"": ""^1.3.1"",
    ""path-to-regexp"": ""^1.5.3"",
    ""redis"": ""^2.6.0-0"",
    ""request"": ""^2.69.0"",
    ""sequelize"": ""^3.23.6"",
    ""serve-favicon"": ""^2.3.0"",
    ""socket.io"": ""^1.4.6"",
    ""through2"": ""^2.0.1""
  },
</code></pre>
",2,5860075,,
46391747,5560913,9/24/2017 15:31,1,189,<git><githooks>,Output realtime in git post-receive script,"<p>I have some <strong>remote repositories</strong> (started with <strong>--bare</strong>) on a Linux Ubuntu machine (14.04 and 16.04). These repositories receive commits and from there the events of the <strong>hooks</strong> scripts begin deploying the applications. The script used by deploy is the <strong>post-receive</strong>.</p>

<p>I would, however, like this script to show the <strong>output to the client pushing the commit in real time</strong> and not just when the script is finished.</p>

<p>According to <a href=""https://stackoverflow.com/a/44144606/5560913"">this response</a> and <a href=""https://github.com/git/git/blob/1eb437020a2c098a7c12da4c05082fbea10d98c9/sideband.c#L67"" rel=""nofollow noreferrer"">this line</a>, the buffer is apparently unloaded whenever a new line is written to the output by the script.</p>

<p>But I've tried this in several ways and none worked. I only get the response on the client that is pushing the commit when the script ends.</p>

<p>I've already tried:</p>

<pre><code>#!/bin/bash

echo ""A - Starting deploy. \n"";
echo ""A - Starting deploy. \n\r"";
echo ""A - Starting deploy. \r"";
echo -e ""A - Starting deploy. \n"";
echo -e ""A - Starting deploy. \n\r"";
echo -e ""A - Starting deploy. \r"";
printf ""A - Starting deploy. \n"";
printf ""A - Starting deploy. \n\r"";
printf ""A - Starting deploy. \r"";

# Code for deploy ...

echo ""B - Finished deploy."";
</code></pre>

<p>But all outputs, both ""A"" and ""B"" started, <strong>only appear</strong> on the client console when the entire <strong>script ends</strong>.</p>

<p>I would like each line to be presented to the client as the script executes.</p>

<p>I believe this is possible because I use the lib <a href=""http://s3tools.org/s3cmd"" rel=""nofollow noreferrer"">s3cmd</a> to upload AWS S3 assets, and while it uploads, the outputs are shown in the execution, not just at the end, as shown below. It is also interesting that the outputs I wrote are sent in the response also when s3cmd starts sending its outputs.</p>

<p><a href=""https://i.stack.imgur.com/FkxOK.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/FkxOK.png"" alt=""realtime outputs""></a></p>

<p>Can someone help me?</p>
",1,5560913,,
46397076,1412495,9/25/2017 3:10,0,128,<git><bitbucket><githooks>,Execute script (or git command) post git merge | Bitbucket,"<p>I need to execute a script on git branch merge through bitbucket? </p>

<p>My requirement is to to delete the source branch from git server post merge, for this I want to execute git commands to delete the branch. </p>

<p>Is git hooks are the solution for same? Please suggest. Thanks</p>
",2,1412495,,
46399165,8667712,9/25/2017 6:51,0,70,<php><git><gitlab><githooks><phabricator>,ASK // Script Hooks push another repository,"<p>I am trying to do the automatic deployment script <a href=""https://gist.github.com/noelboss/3fe13927025b89757f8fb12e9066f2fa"" rel=""nofollow noreferrer"">using git hooks</a> and it is working, but only for copying a repository.</p>

<p>What I want to do is to automatically push to place another repository such as github/gitlab. How do I configure the script hooks in order to push it to where the other repository is?</p>
",0,8667712,,
28140036,3483685,1/25/2015 18:43,0,167,<git><ssh><githooks>,"Git does not work on server, while hosting provider say it does","<p>I want to use this workflow (i also use it with my other projects successfully):
<a href=""https://stackoverflow.com/questions/17876843/how-to-push-to-both-github-and-live-server-from-local-repository"">How to push to both GitHub and live server from local repository?</a></p>

<p>Now I have a new project on different hosting provider, and they say they do have GIT, however whenever I connect with my bach using ssh to the server, I cannot use git - ""git: command not found"". </p>

<p>Hosting support got me this answer:
""To use it it is needed to specify the path to git, that is /usr/local/cpanel/3rdparty/bin/git"". </p>

<p>I actually do not understand how to do this (i am not much of cmd user).</p>

<p>Or is there an alternative way of creating bare git in root and use post-hook to push push it to public location on the server?</p>

<p>Thanks</p>
",0,3483685,,
46406231,8134201,9/25/2017 13:16,0,510,<git><github><clone><githooks><ruby-overcommit>,Not All Files Appearing In Git Clone,"<p>All I am trying to do is clone a Git Hook Manager called Git Overcommit. But when I open the file from my desktop, some of the files that I need to be working with are not there for some reason (or I just cannot find them). I am assuming (hoping) it's something small that I am missing here, specifically I cannot find the <code>.overcommit.yml</code> and <code>.git-hooks/pre_commit</code> files. </p>

<p>Here are some screenshots to clarify. The first picture is of all the files I am cloning (all the files I could fit in the screenshot). And the second is of the files that I actually have on my desktop after I clone it. You'll notice many of the <code>.yml</code> ones are missing.</p>

<p><a href=""https://i.stack.imgur.com/PDvZk.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/PDvZk.png"" alt=""enter image description here""></a>
<a href=""https://i.stack.imgur.com/MDzdq.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/MDzdq.png"" alt=""enter image description here""></a></p>
",0,8134201,0,0
46421690,1570557,9/26/2017 8:43,0,138,<git><http><ssh><githooks>,how can I make git/hooks/pre-receive work while we use HTTP as accessing protocol,"<p>Guru</p>

<p>I just found that git hooks (pre-receive, post-receive) cannot be run while doing git-push via HTTP, however these hooks can be called while doing git-push via SSH.<br>
Is this right?<br>
Then how can I make git/hooks/pre-receive work while we use HTTP as accessing protocol?<br></p>

<p>/// ------------------------------------------------------------------------------------------------<br>
/// @SERVER <br>
/// This is the post-receive hook code</p>

<pre><code>hello.git $ cat hooks/post-receive
#!/bin/bash
while read oldrev newrev ref
do
    if [[ $ref =~ .*/master$ ]];
    then
        echo ""Master ref received.  Deploying master branch to production...""
        #git --work-tree=/var/www/html --git-dir=/home/demo/proj checkout -f
    else
        echo ""Ref $ref successfully received.  Doing nothing: only the master branch may be deployed on this server.""
    fi
done
</code></pre>

<p>/// ------------------------------------------------------------------------------------------------<br>
/// @ CLIENT<br>
/// Here git/hooks/post-receive works while git push via SSH.</p>

<pre><code>$ git push
user01@hostxxx.net's password:
Counting objects: 5, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (3/3), done.
Writing objects: 100% (5/5), 390 bytes | 390.00 KiB/s, done.
Total 5 (delta 1), reused 0 (delta 0)
remote: Master ref received.  Deploying master branch to production...
To hostxxx.net:/var/www/html/repo/hello.git
   a308dbc..82184b8  master -&gt; master
</code></pre>
",6,1570557,,
65247533,1502073,12/11/2020 7:46,0,72,<git><gitlab><githooks><nearest-neighbor>,How to efficiently find the newest shared commit of a branch while running server pre-receive hook?,"<p>While the server pre-receive hook script is executing, suppose it receive a new branch called baz. Branch foo, qqaz and bar are existing branch. How to efficiently find the newest shared commit of baz(It's commit 3 in the example below. not commit 2 and 1)?</p>
<pre><code>---0---1                   foo
        \
         \   8---9---10    qqaz
          \ /
           2---3---4       bar
                \
                 5
                  \
                   6---7   baz
</code></pre>
",2,1502073,,
10500224,259374,5/8/2012 14:05,1,82,<git><githooks>,How to advance a version string in a file hosted on GitHub?,"<p>I have a repository on GitHub, I want the repository to alter a specific file every time there is a commit/push to include the revision number as part of the version string.</p>

<p>i.e. My version string looks like so:</p>

<pre><code>/**
 * Filename
 * @version 1.0.{REVISION}
 */
</code></pre>

<p>I want the {REVISION} string to be replaced with the relevant revision number.</p>

<p>Is this possible? if so how?</p>
",0,259374,,
28471427,1865815,2/12/2015 7:12,3,783,<git><git-merge><githooks><git-diff><pre-commit-hook>,"How to git-diff a file against ""theirs"" version after resolving conflicts","<p>In a pre-commit hook, I want to make sure that nobody (except 1 person) is able to change restricted_file.txt</p>

<p>The hook needs to handle the case when someone performs 'git pull' or 'git merge some_branch', obtains the latest restricted_file.txt but something_else.txt causes a conflict.</p>

<p>He resolves the conflict and keep ""theirs"" version of restricted_file.txt, perform 'git add' and 'git commit'.</p>

<p>At this point, pre-commit hook is executed and it identifies that restricted_file.txt will be committed.
We want to allow the commit only if the file is identical to what it came from 'git pull' or 'git merge' (in other words, if he kept ""theirs"" version).</p>

<p>Does anybody know if it is possible to determine if a file is identical to ""theirs"" during a conflict resolution?</p>

<p><strong>Something equivalent to the following non-existent command:</strong></p>

<pre><code>git diff --cached --against_theirs -- restricted_file.txt
</code></pre>
",2,1865815,0,0
46714487,4190925,10/12/2017 16:21,6,1545,<git><githooks><git-subtree>,Git: is there a way to auto push a subtree?,"<p>I have a big private repository which is maintained on a local network. I'd  like to automatically push a subtree of that repository outside of that network. I need it to be simple:</p>

<p><strong>*Task*</strong> someone pushes to local remote repository --> a subtree is automatically pushed to some other repository</p>

<p>I am not sure if this could be achieved with a server side hook because AFAIK there is no such thing as pushing <em>subtrees</em> from bare remotes. I came up with two ideas:</p>

<ul>
<li>I could clone the remote on the server and automatically split the subtree in the cloned remote. This doesn't really help because I don't know how to auto-pull the subtree (others also have <a href=""https://stackoverflow.com/questions/22182059/git-subtree-post-hook"">this problem</a>).</li>
<li>Another idea is to write a custom client-side <code>post-commit-hook</code> and make every user install it, but this is terrible, isn't it? Git book specifically states that <a href=""https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks"" rel=""noreferrer"">policies should be enforced on server side</a>.</li>
</ul>

<p>Is there a simple way of achieving something like this? Or is this impossible and it's just git abuse?</p>
",5,4190925,,
10513515,1213973,5/9/2012 9:39,0,1272,<git><repository><githooks>,How can I deploy my websites using Git hooks?,"<p>I recently have started using Git in my daily workflow and I really love working with it.</p>

<p>I have a bare online repo (git init --bare --shared) sitting on my VPS under a folder called website.git and push pull changes to it from local whenever I need to, which works absolutely fine. Now, when I save data on my local repo, I push the changes online, but then I have to manually move the files into the public_html folder too, which as you can imagine, is a real pain.</p>

<p>I have tried using git hooks as described in <a href=""http://toroid.org/ams/git-website-howto"" rel=""nofollow"">http://toroid.org/ams/git-website-howto</a>, but it's the permissions that are not working for me.</p>

<p>Both the public_html and website.git folders are owned by www-data:developers, but when the post-receive hook kicks in, it can't unlink the old files, and any new files are automatically owned by jack:jack which is the user I SSH into the server with.</p>

<p>My hooks/post-receive file is executable and contains:</p>

<pre><code>#!/bin/sh
GIT_WORK_TREE=/home/web/website.com/public_html git checkout -f
</code></pre>

<p>And my online repo is stored in</p>

<pre><code>/home/web/website.com/website.git
</code></pre>

<p>What am I doing wrong?</p>
",0,1213973,0,0
46723686,1560501,10/13/2017 6:23,0,949,<git><laravel><version-control><githooks>,fatal: Not a git repository: '.git' error when git pre-commit hook fires but runs fine on commandline,"<p>I cloned an existing project on my local.</p>

<p>I have a pre-commit bash script that is in the .git/hooks folder. </p>

<p>This is what it looks like:</p>

<pre><code>#!/bin/bash
cd api &amp;&amp; php artisan enforcer:check --githook
</code></pre>

<p>I am changing into the api folder since my git root is one level up and api contains the laravel framework where I can use the php artisan commands. </p>

<p>Whenever I commit something on the commandline, When I go to the line in my code that says:</p>

<pre><code>$projectGitRoot = trim(shell_exec(""git rev-parse --show-toplevel""));
</code></pre>

<p>it gives me fatal: Not a git repository: '.git' error.</p>

<p>Whenever I run the actual pre-commit on command line by doing ./.git/hooks/pre-commit, it works just fine.</p>

<p>I then changed the pre-commit to use Sudo and everything works (but this is not a good solution)</p>

<pre><code>#!/bin/bash
cd api &amp;&amp; sudo php artisan enforcer:check --githook
</code></pre>

<p>I have verified using whoami that in both cases it is the same user. I have tried chowning the .git folder with my commandline user. Nothing works. </p>

<p>What can I do? I looked at other questions like <a href=""https://stackoverflow.com/questions/11914933/fatal-not-a-git-repository-git-error"">fatal: Not a git repository: &#39;.git&#39; error</a></p>

<p>but still very lost. </p>

<p>UPDATE:</p>

<p>It appears that the git pre-commit hook does not want to do anything with GIT. It cant even return a git status. </p>
",5,1560501,,
10531052,722983,5/10/2012 9:24,1,782,<git><githooks><git-post-receive>,Git post-receive hook not working properly,"<p>I have a server with a git repository. Each time I make a push to that server I would like to regenerate my gitstats documentation for that repository.</p>

<p>In that machine if I execute the following command, the gitstats documentation it's refreshed properly:</p>

<pre><code>gitstats /home/&lt;username&gt;/&lt;proyect-name&gt;/htdocs/ /home/&lt;username&gt;/gitstats
</code></pre>

<p>And here it's my post-receive hook in the repository in that server:</p>

<pre><code>#!/bin/sh
gitstats /home/&lt;username&gt;/&lt;proyect-name&gt;/htdocs/ /home/&lt;username&gt;/gitstats
</code></pre>

<p>So when I make a push to that machine, it tries to execute that command, but it doesn't work correctly, the output message after the push contains the following error message:</p>

<pre><code>remote: fatal: Not a git repository: '.'
</code></pre>

<p>If I remove that command from the hook, I don't get any error messages.</p>

<p>I don't understand why the command works fine when executed directly on the server and it doesn't when it's executed after a push.</p>

<p>Any suggestions?</p>
",0,722983,0,0
65297106,5219302,12/14/2020 22:01,0,840,<git><gitlab><githooks><gitlab-ce>,Gitlab: Server hooks custom error messages not displaying on merge requests,"<p>I've been trying to implement <a href=""https://docs.gitlab.com/ee/administration/server_hooks.html"" rel=""nofollow noreferrer"">Server hooks</a> on a self-hosted Gitlab (CE) instance and its been working so far.</p>
<p>However, part of the <strong>custom_hooks</strong> validate if pushes to certain branches are squashed, so only allow one commit to being pushed and it displays an error message otherwise. This works fine on locally with <code>git push</code> but not on the Merge Request.</p>
<p>According to the documentation, it allows <a href=""https://docs.gitlab.com/ee/administration/server_hooks.html#custom-error-messages"" rel=""nofollow noreferrer"">Custom error messages</a> to display on there but that doesn't seem to work.</p>
<p>So I've a simpler version that always exits with an error to validate the error is showing properly.</p>
<blockquote>
<p>Locally</p>
</blockquote>
<pre><code>Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 1.03 KiB | 1.03 MiB/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote: GL-HOOK-ERR: My custom error message.
To gitlab.sample.co.uk:praveen.premaratne/dummy.git
 ! [remote rejected] develop -&gt; develop (pre-receive hook declined)
error: failed to push some refs to 'git@gitlab.sample.co.uk:praveen.premaratne/dummy.git'
</code></pre>
<blockquote>
<p>Merge Request
<img src=""https://aws1.discourse-cdn.com/business4/uploads/gitlab/original/3X/d/5/d5ec6edb1afc0697f330599613905789a0ca29f0.png"" alt=""image|690x267"" /></p>
</blockquote>
<blockquote>
<p>Gitlab version details</p>
</blockquote>
<p><img src=""https://aws1.discourse-cdn.com/business4/uploads/gitlab/original/3X/a/0/a0730b976c2ba1b6579c7f79b55579a1b545e6ca.png"" alt=""image|690x327"" /></p>
<p>Is this documentation still update? Or does anyone able to help me with getting the error message to display on Merge Request?</p>
<p><em>Ps: I've tried asking on Gitlab forum but it's been 4 days and I haven't heard anything.</em></p>
",1,5219302,,
65626858,3034268,1/8/2021 9:58,1,74,<git><rebase><githooks><gitkraken>,How to highlight files that were also modified in commits after the common ancestor during a git rebase?,"<p>While doing a <code>rebase</code>, git is doing its &quot;magic&quot; by doing an auto-merge.</p>
<p>Even if there is no conflict, I would like to be warned on the files that were also modified in the other branch.</p>
<p>In another words, if I am working on a file, I would like to know if others of my team had worked on the same file in the meantime. It could reveal a lack of communication while working on the project.
Therefore, I would like a kind of report or a warning.</p>
<p>I would say that the worst case scenario is when there is no conflict because git is rebasing silently my modifications on files that require my attention.</p>
<p>I do not know if it is possible to do it with <code>pre-rebase hook</code> but I would like the solution to be integrated with git client like <code>Gitkraken</code>.</p>
<p>On some git client, I could see the list of files for '<code>AHEAD</code>' and '<code>BEHIND</code>', I would like the intersection of both.</p>
<p>I am pretty sure that I am not the first one asking that question but I could not find any answer on this specific topic.</p>
<p>I hope I was clear enough, thanks</p>
",0,3034268,,
10931905,172776,6/7/2012 12:35,2,580,<git><githooks><git-stage>,How to force git to warn or add new files?,"<p>We've all experienced that painful moment when a new feature works fine locally but breaks when deployed because we forgot to add a new file.</p>

<p>Is there a way to make git warn or automatically add new files when <code>git commit -a</code> is executed?</p>
",3,172776,0,0
47088601,7367190,11/3/2017 4:42,1,45,<git><bitbucket><githooks><bitbucket-server>,Any way to move an existing local git pre-push hook written in ruby to run a bitbucket server?,"<p>As the title says, I have an existing local hook that is written in ruby. I'd like to move this hook server side. I've had a look through the bitbucket addons but didn't see anything that would allow me to run the ruby script.</p>

<p>Is there some way to accomplish this? </p>
",0,7367190,0,0
65636832,3741713,1/8/2021 21:45,0,145,<git><githooks>,pre-merge hook for build files,"<p>My repo contains source code (/src) and a build (/dist). Most of the time when I merge a branch I get a merge conflict because the build has changed. So, after the merge failed, I trigger a new build, overwriting all the conflicts with fresh files, then conclude the merge.<br />
This seems like something git hooks could handle. My idea was to remove the dist directory before the merge and trigger a new build after. But as it turns out, there's no such thing as a pre-merge hook.
This made me realize my logic is a bit backwards. I understand I can't ask git to merge /src while ignoring /dist -- it's the same repo. But this seems to me like a very common situation (many open source projects are organized this way). So how is this typically handled?</p>
",3,3741713,,
65644853,14956036,1/9/2021 16:19,0,16,<git><githooks><git-config>,Git push to Git server and Github at the same time with a single command?,"<p>I have a self hosted git server on a virtual private server and i am trying to push to that server and to git hub at the same time, i don't know if i can do it by adding remote accounts to the client git config or if i would be able to do so with a git hook on the server repository, I am feeling a little out of my depth here.</p>
",2,14956036,,
10965235,160971,6/9/2012 23:09,2,1097,<git><shell><githooks>,How do I use a post-receive hook to conditionally run commands depending on the branch updated?,"<p>I have the following post-receive hook I wrote on a virtual server such that it copies the dev and production versions of the repository into dev and production directories where each version of the site is run.</p>

<p>The following is the post-receive hook I wrote. How do I conditionally refresh just one or the other depending on what branch just got pushed?</p>

<pre><code>#!/bin/sh

if [ -n $GIT_DIR ]; then
    unset GIT_DIR
    cd ..
fi

echo ""Deploying to dev""
git checkout develop
umask 002 &amp;&amp; git reset --hard
cp -r /path/to/git/files/* /path/to/dev/site/

echo ""Deploying to prod""
git checkout master
umask 002 &amp;&amp; git reset --hard
cp -r /path/to/git/files/* /path/to/prod/site/
</code></pre>
",0,160971,0,0
10987341,105428,6/11/2012 20:50,1,62,<git><git-submodules><githooks><git-log>,How can I get a list of all modified files for submodules with git?,"<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/10757091/git-list-of-all-changed-files-including-those-in-submodules"">git: list of all changed files including those in submodules</a>  </p>
</blockquote>



<p>I have a super repository that has many submodules that are regularly being updated. I have a post-receive hook setup for this super repository that does maintenance after every commit.</p>

<p>I'm trying to get a list of all modified files in a commit, which includes any files that have been modified after a submodule has been updated.</p>

<p>Here's how I do it for a repo without submodules:</p>

<p><code>git show --pretty=""format:"" --name-only HEAD | tr '\n' ' '</code></p>

<p>...which will output something like <code>testing1.html testing2.html foo.md bar.js</code>, which is the desired format (space-delimited filenames).</p>

<p>My question is, how can I get a list of <em>all</em> the modified files for a single commit, including the files that have changed in submodules?</p>
",0,105428,0,0
65687021,861970,1/12/2021 15:32,6,6407,<git><gitlab><githooks>,How do I activate a pre-receive hook in GitLab?,"<p>I need to check each commit coming into GitLab and block any of them which have a certain file in. I used the documentation <a href=""https://docs.gitlab.com/ee/administration/server_hooks.html"" rel=""noreferrer"">here</a></p>
<p>I have created a file named <code>pre-receive</code> in the <code>.git/custom_hooks</code> directory.</p>
<p>The file just has the contents:</p>
<pre><code>#!/bin/sh
exit 1
</code></pre>
<p>Which, I believe, should reject any attempt to push code to the repo (?)</p>
<p>The file is owned by git and is executable:</p>
<p><code>ls -a</code> gives the response:</p>
<blockquote>
<p>-rwxrwxrwx 1 git root 550 ...</p>
</blockquote>
<p>The custom_hooks directory is also executable and owned by the git user.</p>
<p>But all commits go through without issue, the commit hook does not seem to activate in any way.</p>
<p>I do not see anything else in the documentation that I am supposed to do.
Have I missed anything?</p>
",3,861970,,
47158755,8900220,11/7/2017 13:05,1,226,<git><jenkins><githooks>,Git post-push script not working,"<p>I am trying to write a post-push script to trigger Git polling in Jenkins. If I create a 'pre-push' script, the polling is triggered, but when I change it to a'post-push' nothing happens. I have also tried using 'update' and 'post-update'. I am using TortoiseGit and my repo is hosted in GitBlit. I have included the content of my script below:</p>

<p><code>#!/bin/sh
$(curl &lt;Jenkins URL&gt;/notifyCommit?url=&lt;repo URL&gt;)</code></p>
",4,8900220,,
28938610,2836912,3/9/2015 9:26,5,2035,<python-sphinx><githooks><restructuredtext>,How to ensure rST document quality?,"<p>We are now using sphinx+rST to manage our inner documents. But some developers are not abbey to rST format. So I'd like to add a git-hook to ensure the quality of the rST docs. Any rST lint tools available?</p>
",2,2836912,0,0
11385076,26201,7/8/2012 17:19,5,5014,<github><githooks>,How can I add a custom git hook to a GitHub Enterprise repo?,"<p>I've fired up an instance of GitHub Enterprise (11.10.272) and created a repository. I've written a pre-receive hook in Ruby which I'd like to use with that repository.</p>

<p>GitHub Enterprise, like regular GitHub, allows the configuration of service hooks. I tried to SSH into the GitHub Enterprise server to create a hook file, but I couldn't find the repo directory. Furthemore, GitHub Enterprise's terms forbid modifying the VM, so I'm not confident this is a great approach.</p>

<p>It seems GitHub:FI supported hooks. The current version of the FI to Enterprise migration tool does not currently support hooks according to <a href=""https://support.enterprise.github.com/entries/21179373-migrating-from-github-fi"">Migrating from GitHub:FI</a>.</p>
",1,26201,0,0
29278554,4716395,3/26/2015 12:33,1,376,<git><githooks>,"How can I deny a commit, in a client-side hook, if the user name/email is incorrect?","<p>Is there any way I can access the commit author information (author name and email) from Git <code>commit-msg</code> hook?</p>

<p>I need to prevent commits which do not have the right email address (like <code>my.name@company.com</code>). I can do this on the server side with the <code>pre-receive</code> hook or the <code>update</code> hook, but is there any way to do the same on the client side?</p>

<p>Of course, I could run</p>

<pre><code>git log -1 HEAD
</code></pre>

<p>in the <code>post-commit</code> hook and parse the output, but it's already too late, because the commit has already been created, at that stage. It can only serve as a friendly warning that the push will fail.</p>
",3,4716395,0,0
66036693,934420,2/3/2021 22:32,1,1570,<bash><git><gitlab><githooks>,Git pre-receive hook to prevent merge to master if not already in develop branch,"<p>Our git process looks like this. The primary branch is master, off of which we create feature branches. When we think we're done with a feature, we merge it into the develop branch and it gets built to an integration environment for testing. Once it's tested, we submit a MR from the feature branch to master.</p>
<p>I'm trying to make a pre-receive git hook that will prevent a MR from being accepted unless the branch has been merged into develop and therefore integration tested. But I'm struggling to figure out how to do that with the information I have available in the hook.</p>
<p>The current script I have is below</p>
<pre class=""lang-sh prettyprint-override""><code>while read oldrev newrev refname; do
    # Get the name of the branch that HEAD is pointing to
    headbranch=$(git symbolic-ref --short HEAD)
    # Get the current branch name
    branch=$(echo $refname | sed 's/refs\/heads\///g')
    # During a merge request both the branch and head branch will be master
    if [[ &quot;$branch&quot; == &quot;master&quot; &amp;&amp; &quot;$headbranch&quot; == &quot;master&quot; ]]; then
        # Grab the PREVIOUS revision of the current revision as this is the last commit before the current merge commit
        prevrev=$(git rev-list -2 $newrev | sed -n '2 p')
        # Check that revision is in the develop branch already, otherwise reject the commit
        $(git merge-base --is-ancestor $prevrev develop)
        if [ $? -eq 1 ]; then
            echo &quot;The branch has not been merged with \&quot;develop\&quot; or you have not pushed \&quot;develop\&quot; to the remote server.&quot; &amp;&amp; exit 1
        fi
    fi
done
</code></pre>
<p>This works <em>sometimes</em>, but other times it fails because both the <code>newrev</code> and <code>prevrev</code> are some random hash related to the merge request and neither of them are in any history. I can't think of a way to differentiate between these MR hashes that I don't care about and actual hashes with code commits that just haven't been merged yet.</p>
<p>Is there another way to do this or is this impossible?</p>
<p><strong>Notes</strong>: I also expect the script to reject direct commits to master.</p>
",3,934420,,
47511287,2791425,11/27/2017 12:43,0,934,<git><merge><githooks><git-commit>,Detect merged branches from Git merge commit,"<p>I want to know merged branches from merge commit.</p>

<p>So, I decide to automatically write a merge message which contains merging branches when the merge happens by using a commit hook.</p>

<p>However, this has a problem. I couldn't know which branches are merged when I just see a commit object.</p>

<p>Is there a good way to know which branches are merged while just seeing a commit object?</p>
",2,2791425,,
11419271,388520,7/10/2012 18:07,0,364,<git><githooks>,pre-receive hook to prevent reappearance of a bad revision,"<p>Suppose I have had to use <a href=""http://www.kernel.org/pub/software/scm/git/docs/git-filter-branch.html"" rel=""nofollow""><code>git filter-branch</code></a> to remove a file from revision history.  I want to ensure that all my collaborators update all their local copies before they push again.  The obvious way to do this seems to be to use a pre-receive hook on the master repo to ensure that the original revision ID of the revision that introduced the problem file never reappears.</p>

<p>How do I write that hook?</p>
",2,388520,,
11425400,937084,7/11/2012 4:09,0,962,<git><bash><githooks><yui-compressor>,Bash script for YUI Compressor to be used with Git,"<p>I'd like to make my website as efficient as possible, and part of that is minifying my CSS and JavaScript files. My goal is to be able to use the unminified files in development, but the minified files in production. So my thought is to have my unminified filenames be normal (foo.css) and my minified filenames be the same, only with an underscore at the beginning (_foo.css).</p>

<p>Since the development environment doesn't use the minified files, I don't have to worry about keeping the minified files up-to-date. The only time they should ever be generated is when I'm making a commit to the website's Git repository. So it makes sense to make it a Git hook, which is something I've never done before. I'd like this hook to be in place for my co-workers as well. I'm on a Mac and they're on Linux. I have a working shell script, but there are two things that will need to be modified in order for it to be used as a Git hook and to be used by my co-workers. These two things are what I need help with. But first, the code:</p>

<pre><code>#!/bin/bash

# The files to ignore are already minified.

css_files_to_ignore=(
    ""jquery.colorbox-min.css""
);

js_files_to_ignore=(
    ""jquery.colorbox-min.js""
);

base_folder=/Applications/MAMP/htdocs/my_project/app/webroot
yuicompressor_path=/Applications/yuicompressor.jar

function process_assets() {
    extension=$1
    files_minified=0

    for infile in $(echo ""$base_folder/$extension/*.$extension"")
    do
        [[ -f $infile ]] || continue

        filename=${infile##*/}

        # If the filename starts with an underscore, that means that the file is a
        # minified file that was previously generated.

        [[ ${filename:0:1} != ""_"" ]] || continue

        ignore_this_file=false

        files_to_ignore=$extension""_files_to_ignore""

        for i in $(eval echo \${$files_to_ignore[@]})
        do
            if [[ $i == $filename ]]; then
                ignore_this_file=true
                break
            fi
        done

        if [ $ignore_this_file == false ]; then
            minified_file=""$base_folder/$extension/_$filename""

            if [ ! -f ""$minified_file"" ] || test $infile -nt $minified_file; then
                java -jar $yuicompressor_path ""$infile"" -o ""$minified_file""
                ((files_minified++))
            fi
        fi
    done

    if [ $extension == ""css"" ]; then
        file_type=CSS
    else
        file_type=JavaScript
    fi

    echo -n ""$files_minified $file_type file""

    if [ ""$files_minified"" == ""1"" ]; then
        echo -n "" was""
    else
        echo -n ""s were""
    fi

    echo "" minified""
}

if [ -f $yuicompressor_path ]; then
    process_assets css
    process_assets js
else
    echo ""YUI Compressor was not found. Aborting.""
    exit 1
fi
</code></pre>

<p>The first thing that I need help with is how to handle the <code>base_folder</code> variable. Since this will be a Git hook, how should this variable be set? Will the current working directory at the time the commit is made affect the script?</p>

<p>The second thing I need help with is how to handle the <code>yuicompressor_path</code> variable. As I said earlier, I'm on a Mac and my co-workers are on Linux. I'd like the Git hook to work for all of us, if possible. Can I set that variable in a way that would work for all of us?</p>

<p>Thank you!</p>
",0,937084,,
11440916,937084,7/11/2012 20:26,2,2862,<git><githooks><pre-commit-hook><git-stash>,git stash in pre-commit hook fails on first commit,"<p>I'm working on a pre-commit hook that uses YUI Compressor to minify any CSS and JavaScript files that have been staged for commit. After the files get minified, the minified versions automatically get staged for commit. I've read that it's generally not a good idea to automatically add machine-generated files to the commit, but I think in this case it's OK. This is what it looks like:</p>

<p>Output of <code>git status</code>:</p>

<pre><code># On branch master
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#   modified:   _site-wide.css
#
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   _subpage.css
#
</code></pre>

<p>Output of <code>git commit -m ""Updated site-wide styling""</code>:</p>

<pre><code>1 CSS file was minified and added to the Git repository
0 JavaScript files were minified and added to the Git repository
[master 41f1815] Updated site-wide styling
 2 files changed, 2 insertions(+), 2 deletions(-)
</code></pre>

<p>What happened here is the pre-commit hook used YUI Compressor to minify <code>_site-wide.css</code>, outputting the result to <code>site-wide.css</code> (no leading underscore). It then staged <code>site-wide.css</code> for commit. The pre-commit hook skipped over <code>_subpage.css</code> because, although it had been modified, it was not staged for commit.</p>

<p>Since the CSS and JavaScript files on disk might not be the same as the CSS and JavaScript files staged for commit, I run <code>git stash -q --keep-index</code> before minifying the files and then run <code>git stash pop -q</code> after. This pre-commit hook works fine on repositories that already have a commit, but if I put the pre-commit hook in place before the first commit is made, I get this:</p>

<p>Output of <code>git status</code>:</p>

<pre><code># On branch master
#
# Initial commit
#
# Changes to be committed:
#   (use ""git rm --cached &lt;file&gt;..."" to unstage)
#
#   new file:   _site-wide.css
#   new file:   _subpage.css
#
</code></pre>

<p>Output of <code>git commit -m ""Initial commit""</code>:</p>

<pre><code>fatal: bad revision 'HEAD'
fatal: bad revision 'HEAD'
fatal: Needed a single revision
You do not have the initial commit yet
2 CSS files were minified and added to the Git repository
0 JavaScript files were minified and added to the Git repository
No stash found.
</code></pre>

<p>Output of <code>git status</code>:</p>

<pre><code># On branch master
#
# Initial commit
#
# Changes to be committed:
#   (use ""git rm --cached &lt;file&gt;..."" to unstage)
#
#   new file:   _site-wide.css
#   new file:   _subpage.css
#   new file:   site-wide.css
#   new file:   subpage.css
#
</code></pre>

<p>I will now paste the pre-commit hook's code. Keep in mind that in order to be flexible, I wrote this script so that it could be run in any CakePHP project, not just the ones that have a Git repository. I also wrote it so that you can force it to minify all of the CSS and JavaScript files and not just the ones staged for commit. This is done by running <code>.git/hooks/pre-commit force</code>. Here is the code:</p>

<pre><code>#!/bin/bash

css_files_to_ignore=(
    #""_do_not_minify.css""
)

js_files_to_ignore=(
    #""_do_not_minify.js""
)

if git rev-parse --git-dir &gt; /dev/null 2&gt;&amp;1; then
    git_repository=true
    base_folder=""$(git rev-parse --show-toplevel)/app/webroot""

    if [ ""$1"" == ""force"" ]; then
        process_unstaged_files=true
    else
        process_unstaged_files=false
    fi
else
    git_repository=false
    base_folder=""$(cd ""$(dirname ""${BASH_SOURCE[0]}"")"" &amp;&amp; pwd)/webroot""
fi

if [ -f /Applications/yuicompressor.jar ]; then
    # Mac

    yuicompressor_path=/Applications/yuicompressor.jar
else
    # Linux

    yuicompressor_path=$(command -v yui-compressor)
fi

function process_assets()
{
    extension=$1
    files_minified=0

    for infile in $(echo ""$base_folder/$extension/*.$extension"")
    do
        # Only process files.

        [[ -f $infile ]] || continue

        filename=${infile##*/}

        # If the filename starts with an underscore, that means that the file is
        # eligible for minification.

        [[ ${filename:0:1} == ""_"" ]] || continue

        ignore_this_file=false

        files_to_ignore=$extension""_files_to_ignore""

        for i in $(eval echo \${$files_to_ignore[@]})
        do
            if [[ $i == $filename ]]; then
                ignore_this_file=true
                break
            fi
        done

        if [ $git_repository == true ] &amp;&amp; [ $process_unstaged_files == false ] &amp;&amp; git diff --quiet --cached $infile; then
            # This file is NOT staged for commit.

            ignore_this_file=true
        fi

        if [ $ignore_this_file == false ]; then
            minified_file=""$base_folder/$extension/${filename:1}""

            if [ ! -f ""$minified_file"" ] || test $infile -nt $minified_file; then
                $yuicompressor_command ""$infile"" -o ""$minified_file""

                if [ $git_repository == true ] &amp;&amp; [ $process_unstaged_files == false ]; then
                    git add ""$minified_file""
                fi

                ((files_minified++))
            fi
        fi
    done

    # Output a summary of what was done.

    if [ $extension == ""css"" ]; then
        file_type=""CSS""
    else
        file_type=""JavaScript""
    fi

    echo -n ""$files_minified $file_type file""

    if [ $files_minified -eq 1 ]; then
        echo -n "" was""
    else
        echo -n ""s were""
    fi

    echo -n "" minified""

    if [ $git_repository == true ] &amp;&amp; [ $process_unstaged_files == false ]; then
        echo "" and added to the Git repository""
    else
        echo
    fi
}

if [ -f ""$yuicompressor_path"" ]; then
    if [ ${yuicompressor_path: -4} == "".jar"" ]; then
        yuicompressor_command=""java -jar $yuicompressor_path""
    else
        yuicompressor_command=$yuicompressor_path
    fi

    if [ $git_repository == true ] &amp;&amp; [ $process_unstaged_files == false ] &amp;&amp; ! git diff --quiet --cached; then
        # The staging area is what should be processed rather than what is currently
        # on disk.

        git stash -q --keep-index

        stashed=true
    else
        stashed=false
    fi

    process_assets css
    process_assets js

    if [ $stashed == true ]; then
        git stash pop -q
    fi
else
    echo ""YUI Compressor was not found. Aborting.""
    exit 1
fi
</code></pre>

<p>How can I make this work? Any help would be appreciated.</p>
",1,937084,0,0
66075350,6030281,2/6/2021 9:28,0,170,<bash><git><jenkins><github><githooks>,GitHub post-receive hook not triggered on Windows,"<p>I'm trying to use a post-receive git-hook to automate the deploy of a simple maven project by triggering a Jenkins pipeline I set up. The source is hosted on a GitHub repo while Jenkins on a container running on my PC. So far, the hook is not triggered after I push to master branch.</p>
<p>Thing is if I try and run the script manually it just works! I also tried setting chmod +x with Git Bash (after all I'm on Windows) to the post-receive file, unfortunately without success: the hook still does not get triggered. What might be the issue?</p>
<p>I already tried looking for answers on similar topics here on stackoverflow, but nothing solved my issue. FYI, below the post-receive script (nothing fancy, as you can see):</p>
<pre><code>#!/bin/bash
   
JENKINS_URL=&quot;http://localhost:8080&quot;
JOB=&quot;deploy-to-slave-pipeline&quot;
JENKINS_CREDENTIALS=&quot;theuser:11d422ee679503eeb328c5b1998327cc7f&quot;

echo &quot;Triggering Jenkins job...&quot;
crumb=$(curl -u &quot;$JENKINS_CREDENTIALS&quot; -s '$JENKINS_URL/crumbIssuer/api/xml?xpath=concat(//crumbRequestField,&quot;:&quot;,//crumb)')
curl -u $JENKINS_CREDENTIALS -H &quot;$crumb&quot; -X POST &quot;$JENKINS_URL/job/$JOB/build?delay=0sec&quot;
</code></pre>
<p><strong>EDIT</strong></p>
<p>As pointed out by @bk2204 <code>post-receive</code> is a server-side hook. What I needed was a webhook, which can be set in the Settings/Webhook page of your GitHub repo. Just configure it as below where <strong>Payload URL</strong> is your Jenkins URL followed by <code>/github-webhook/</code>:</p>
<p><a href=""https://i.stack.imgur.com/2ZPvF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/2ZPvF.png"" alt=""enter image description here"" /></a></p>
<p>Then all you have to do is set your Jenkins job to get triggered by GitHub, by checking the related option on the <strong>Build Triggers</strong> section as below:</p>
<p><a href=""https://i.stack.imgur.com/eVGxt.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/eVGxt.png"" alt=""enter image description here"" /></a></p>
<p>And then you're good to go! Also, if you're running your Jenkins instance locally, you could use <a href=""https://ngrok.com/download"" rel=""nofollow noreferrer"">ngrok</a> to expose it and test your CI/CD pipeline!</p>
<p>[ref. <a href=""https://dzone.com/articles/adding-a-github-webhook-in-your-jenkins-pipeline"" rel=""nofollow noreferrer"">https://dzone.com/articles/adding-a-github-webhook-in-your-jenkins-pipeline]</a></p>
",0,6030281,,
47569904,7050841,11/30/2017 9:25,3,2732,<git><github><githooks><pre-commit-hook>,Run a pre-commit hook if the file is modified under a specific directory,"<p>My project has client code and server code in one project</p>

<p>I want to run the test code through the pre-commit hook only when the client code has been modified.</p>

<p>Is there a way to run a pre-commit hook only when a file is modified under a specific folder?</p>
",0,7050841,0,0
47574127,6712831,11/30/2017 12:59,1,1195,<git><hook><githooks>,How to check that git commits contain string pattern in message?,"<p>I have a GitLab repository with some projects. I want to check that commits messages contain regex string pattern ('[0-9]{3}', for example) for someone who want to push he's commits to the project. If there is no string pattern in user's commit messages then return message ""Your commit's message doesn't contain necessary string pattern"" for that user.</p>

<p>I know that there is git hooks and I can write my own here: <code>/var/opt/gitlab/git-data/repositories/root/awesome.git/custom_hooks/pre-receive</code> but how can I retrive user's commits messages?</p>
",0,6712831,,
11500183,1303565,7/16/2012 7:56,1,64,<git><version-control><githooks>,How to identify the name of the branch when receiving a push from local repository?,"<p>I want to identify the name of the branch with the incoming push each time it is received from local repo. I am planning to use the branch name in a update hook. 
Pls let me know how to deal with this.</p>
",1,1303565,0,0
30079484,903980,5/6/2015 14:20,18,1057,<wordpress><git><deployment><githooks>,Git Post-receive hook with part of work tree,"<p>I would like to use git to deploy to a website to a testing server. My website is a wordpress theme built with gulp and the repository looks like</p>

<pre><code>theme.git/
-- gulpfile.js
-- src/
-- build/
</code></pre>

<p>I've followed the steps explained <a href=""http://mattbanks.me/wordpress-deployments-with-git/"" rel=""noreferrer"">here</a> and <a href=""http://toroid.org/ams/git-website-howto"" rel=""noreferrer"">here</a> which are- set up a bare repository on the server, configure the location of git work tree and write a post-receive hook to checkout the repo to that location.</p>

<p>The problem is I'm only looking to move or copy the <code>build/</code> folder to it's location on the server. My only thought was to write a post-receive hook to that pulls the repo to one work tree location (because I think I read that bare repos don't typically have a work tree at all), and then <code>cp</code>'s the build folder into <code>wp-content/themes/</code></p>

<p>It seems unnecessarily complicated so I'm wondering if there's a more efficient / more common way to go about it. Thanks!</p>
",0,903980,0,0
30104343,786062,5/7/2015 14:40,8,3174,<git><githooks>,Multiple git hooks for the same trigger,"<p>I have a <code>post-checkout</code> hook that I use locally in all of my repos (it renames my tmux session to <code>repo-name/branch-name</code>)</p>

<p>For a project I am working on, we just added a <code>post-checkout</code> hook that we're asking the whole team to use.</p>

<p>I don't want to add my personal hook's logic to the team-wide hook, because it's not useful to everyone, but I also don't want to give it up.</p>

<p>Is there a way to have more than one script execute on a single git-hook trigger? I want every <code>git checkout</code> to execute the teamwide <code>post-checkout</code> hook <em>and</em> execute my personal <code>post-checkout</code> hook. I can't have two files named the same thing -- is there a way to get around that?</p>

<p><strong>Update:</strong> A good approach is, ""make <code>post-checkout</code> call the two other scripts. I like this idea, and it may be the solution.</p>

<p>However, right now we have an automated setup step that copies <code>post-checkout</code> into the hooks directory. If possible, I'd like to do this in a way that <em>doesn't interfere</em> with the existing team setup, and doesn't require manual tweaking on my part if I run that install step again later.</p>

<p>If that's not possible, that's cool, but I'm curious about even more creative solutions.</p>
",3,786062,0,0
47798076,392572,12/13/2017 16:36,0,753,<git><bash><githooks>,Ignore multiple directories in git hook,"<p>I want to ignore any <code>dist</code> and <code>node_modules</code> directories in my git commit hook. I've tried this:</p>
<pre><code>git diff --cached --name-only --diff-filter=ACM | find . -path ./node_modules -prune -o -path './**/dist -prune -o -name '*.js'
</code></pre>
<p>But it doesn't work. It doesn't seem like the find is accepting the files found from the git diff...</p>
<p>If I run:</p>
<pre><code>git diff --cached --name-only --diff-filter=ACM
</code></pre>
<p>I correctly get the staged files:</p>
<pre><code>./dist/some-file.js
</code></pre>
<p>And if I run:</p>
<pre><code>find . -path ./node_modules -prune -o -path './**/dist' -prune -o -name '*.js' -print
</code></pre>
<p>I correctly get a list of files that don't include any that are in <code>dist</code> or <code>node_modules</code> directories.</p>
<p>How can I combine these do that my git hook doesn't pick up staged files in dist directories.</p>
",0,392572,,
47807412,8655006,12/14/2017 6:48,0,60,<ruby-on-rails><git><gitlab><githooks>,Pre-receive hook file displaying unwanted message while executing the hook,"<p>GitLab version - <code>9.3.6</code></p>

<p>Recently I added the <code>pre-receive</code> hook for blocking the binary file pushing. I can get the expected out in my gitlab testing server machine (below image)</p>

<p><a href=""https://i.stack.imgur.com/MRQxa.png"" rel=""nofollow noreferrer"">Testing Server side displaying message</a></p>

<p>I added the same hook file on the live server machine. But I got another extra line (below) in displaying the message.</p>

<p><a href=""https://i.stack.imgur.com/xzXDV.png"" rel=""nofollow noreferrer"">Live server side displaying message</a></p>

<p>Actually, my hook is working properly. But there is an extra line displaying in the message. I am sure, there no extra printing statement on my hook file.</p>

<p>My commit message is </p>

<pre><code>remote: hooks/pre-receive:3: warning: Insecure world writable dir /opt/gitlab/embedded/libexec in PATH, mode 040777        

remote: Hello there! We have restricted the binary files (.exe, .dll, .zip, .7z, .deb, .cab, .gz, .pkg, .iso) that are pushed into GitLab.        
remote: Your changes contain following file(s) from origin commit c7a151fb to a4e7c31c. Kindly remove the following file(s) and try again.        
remote:     NewTest.dll        
</code></pre>

<p>How can I remove the line <code>hooks/pre-receive:3: warning: Insecure world writable dir /opt/gitlab/embedded/libexec in PATH, mode 040777</code> from that message line?</p>
",2,8655006,,
47955343,6490376,12/23/2017 19:27,2,310,<git><githooks><git-post-receive><post-receive-email>,"my post-receive, a git hook, with two commands doesn't work","<p>I have three git repositories:</p>

<ol>
<li>a bare repository on my git server</li>
<li>a local repository(A) on my laptop (I develop web pages on this machine.)</li>
<li>a local repository(B) on a hosting server (I use it as a http server.)</li>
</ol>

<p>I set a post-receive, a server side hook, on the bare repository to have the repository(B) pull from the bare and have the git server send a notification email when I commit and push from the repository(A) to the bare repository. The post-receive file I made on the bare repository is as follows:</p>

<pre><code>#!/bin/sh
ssh -l MYUSER -i PRIVKEY www.HOSTINGSERVER.com ""cd GITDIRECTORY;git pull""
. $(dirname $0)/post-receive-email
</code></pre>

<p>And I also set environmental variables on the bare repository:</p>

<pre><code>git config hooks.mailinglist ""MyMailAddress""
git config hooks.announcelist ""MyMailAddress""
git config hooks.emailprefix ""FooBar""
echo FooBar &gt; description
</code></pre>

<p>I expected the repository(B) pulled and the git server sent a notification email by post-receive-email when I commit and push to the bare repository but the post-receive didn't work as I hoped. It had the repository(B) pull but didn't have the git server send any email. I didn't see any email error in logs on the git server.</p>

<p>When I commented out the ssh part of the post-receive, I got an email. When I commented out the post-receive-email part, the repository(B) pulled correctly. When both the ssh part and the post-receive-email part are active, the post-receive only have the repository(B) pull and didn't send any email.</p>

<p>I don't know why the post-receive doesn't work as I expect when both the ssh part and the post-receive-email part exist at the same time.</p>

<p>Any hint and comment is appreciated.
Thank you in advance.</p>
",0,6490376,0,0
13428403,975129,11/17/2012 6:44,4,1331,<c++><c><git><githooks>,How to embed an updated git-hash into Version.hpp?,"<p><strong>Original Title: How to make git ignore my file regardless of branching?</strong></p>

<p>I have the following post-checkout file which works as expected:</p>

<pre><code>#!/usr/bin/ruby

cmd = ENV[""HOME""] + ""/dev/pitbull/cpp/bin/gen_version.rb --write""
`#{cmd}`
</code></pre>

<p>The gen_version.rb script figures out a timestamp, the last master tag, and the HEAD git hash and writes to a <code>VERSION.hpp</code> file which is also in git.  </p>

<p>I then use <code>use git update-index --assume-unchanged VERSION.hpp</code> to make git ignore my change.</p>

<p>Now, this works great if I stay on my development branch.  But when I try a <code>get checkout master</code>, I'm screwed:</p>

<pre><code>git checkout master
error: Your local changes to the following files would be overwritten by checkout:
    cpp/inc/core/util/VERSION.hpp
Please, commit your changes or stash them before you can switch branches.
Aborting
</code></pre>

<p><strong>What is the right git setup so that I can update VERSION.hpp when I check out but have git ignore any changes to this file, regardless of my branch?</strong></p>

<p><strong>EDIT</strong>
I changed the topic as the final solution actually addresses a broader topic which may be more useful to more users of SO.  So you can read this topic two ways: with the original title and the answer below, or with the broader problem above, again with the entire solution below.</p>
",7,975129,0,0
30982089,119527,6/22/2015 14:09,19,978,<git><gitlab><githooks>,Git hook to indicate repository is deprecated,"<p>We have a repository (hosted on a GitLab instance) which a handful of projects still reference, but has been deprecated in favor of another solution.</p>

<p>Is there any way to mark a repository as ""deprecated""?</p>

<p>Ideally, every <em>fetch</em> from this repository (as part of a <code>git submodule update</code>) would cause a giant message to be printed during the fetch. I was expecting to add a simple Git hook that would print this deprecated message. However, there <a href=""http://git-scm.com/docs/githooks"">doesn't seem to be</a> a ""run this on every fetch"" hook.</p>

<p>Also, I see nothing in GitLab that would enable this.</p>
",8,119527,0,0
30988044,4844212,6/22/2015 19:16,-1,1885,<git><github><githooks><post-commit>,Git Post Commit hooks to find name of branch,"<p>I want to create a post commit hook through which I need to send a notification to the committing developer that branch pushed is not following our naming convention. So what I would like to know is:</p>

<ol>
<li>How to read the pushed branch name</li>
<li>How to check if the branch name follows a certain pattern like ""origin/name/issueid""</li>
</ol>

<p>We want to inform user when their branch isn't follow the naming convention. </p>
",1,4844212,,
13441588,611007,11/18/2012 15:35,2,63,<git><hook><archive><githooks>,Workaround or git hook to make git recognize archives of text files,"<p>Is there a way to work with text files inside archives with git without persistently unpacking them? </p>

<p>Presumably to make git to think of archives like directories, with the means of git hooks or other comfortable way.</p>

<p>(I was thinking about mount points on both Win32 and Linux but I'm not sure if that could be made convenient, because each file should be individually mapped as I see it now.)</p>

<p>One application would be that git could work nicely with, say, ODT files. :)</p>
",0,611007,0,0
66758428,5916915,3/23/2021 6:45,0,311,<git><githooks>,How to get the absolute path of the repository directory in a post-receive hook,"<p>I am writing a Git post-receive hook, and within the hook script, I need the absolute path of the project directory (i.e. the directory of the repository). What is a reliable way to do this that works for both non-bare and bare repositories?</p>
<p>From my understanding, if the repository is bare (which I can check using <code>git rev-parse --is-bare-repository</code>), the absolute path can be obtained using <code>pwd</code>. If the repository is not bare, how can I reliably obtain the absolute path of the repository? Is it <code>dirname &quot;$(pwd)&quot;</code>? Is this method reliable?</p>
",10,5916915,,
48951985,7498208,2/23/2018 16:11,0,325,<git><vim><githooks><post-commit-hook>,"vim error `.git/hooks/post-commit.sample/post-commit"" E212: Can't open file for writing`","<p>In the <code>.git/hooks</code> folder I need to make a <code>post-commit.sample</code> folder and add a <code>post-commit</code> file to it (and edit a line into it). There was no <code>post-commit</code> file or <code>post-commit.sample</code> folder so I used mkdir and touch to create the file.
But when I edited the post-commit file with <code>vim .git/hooks/post-commit.sample/post-commit</code>it gives me the following error</p>

<p><code>.git/hooks/post-commit.sample/post-commit"" E212: Can't open file for writing</code></p>

<p>ls -l gives me this</p>

<pre><code>ls -l
total 0
-rw-r--r-- 1 shrey shrey 0 Feb 23 20:43 post-commit
</code></pre>

<p>If you could please help me. (I am a newbie ofcourse)</p>
",3,7498208,,
66759512,1098303,3/23/2021 8:23,1,798,<git><githooks>,Where are git hooks logs?,"<p>I'm using this hook: <a href=""https://gist.github.com/noelboss/3fe13927025b89757f8fb12e9066f2fa#file-post-receive"" rel=""nofollow noreferrer"">https://gist.github.com/noelboss/3fe13927025b89757f8fb12e9066f2fa#file-post-receive</a>
For some reason, it doesn't work. I'd like to know what happens and check the logs, particularly reading &quot;echo&quot; lines (to see what is executed), but I don't see where I can read them...
I inserted another echo line to check if everything was correctly executed:</p>
<pre><code>#!/bin/bash
TARGET=&quot;/home/webuser/deploy-folder&quot;
GIT_DIR=&quot;/home/webuser/www.git&quot;
BRANCH=&quot;master&quot;

echo &quot;This is an executed hook!&quot;

while read oldrev newrev ref
do
    # only checking out the master (or whatever branch you would like to deploy)
    if [ &quot;$ref&quot; = &quot;refs/heads/$BRANCH&quot; ];
    then
        echo &quot;Ref $ref received. Deploying ${BRANCH} branch to production...&quot;
        git --work-tree=$TARGET --git-dir=$GIT_DIR checkout -f $BRANCH
    else
        echo &quot;Ref $ref received. Doing nothing: only the ${BRANCH} branch may be deployed on this server.&quot;
    fi
done
</code></pre>
<p>My question is not why my hook was not working (FYI it was due to a permission misconfig inside the &quot;objects&quot; subfolder).
My question here is: where do the &quot;echo&quot; lines go?</p>
",3,1098303,,
48977549,1750757,2/25/2018 19:29,0,46,<git><githooks>,How can I allow merging to master only from testing branch?,"<p>I have a <code>master</code> branch and a <code>testing</code> branch. I push some stuff to <code>testing</code> and when everything is okay and tested, I merge <code>testing</code> branch to the <code>master</code>. Is there a way to create such a server hook which forbids pushing commits to <code>master</code> which are not merge commits from <code>testing</code> branch?
It seems to me that it is impossible because <code>pre-receive</code> hook does not contain information about where the commit is coming from (what branch).</p>
",0,1750757,,
31748122,2608997,7/31/2015 14:03,1,61,<jenkins><githooks>,Jenkins and git hooks : how to keep only the latest job in the queue?,"<p>I'am using jenkins/git/notifyCommit?url= triggered in the git post-receive hook.</p>

<p>Doing so, I end up with a lot of duplicate jobs in the queue.</p>

<p>Is there a way to keep only the latest one (the one with the latest git hash) ?</p>
",1,2608997,0,0
49005545,9392741,2/27/2018 9:43,1,116,<git><push><hook><githooks>,git hook not working when pushing via http to windows,"<p>I am trying to set up a central bare git-repo with a post-receive-hook. When I push changes to this repo the post-receive-hook starts as expected. 
Now, I want to access this repo via http. When I push changes to this repo now, the post-receive-hook does not start as not git, but the web-server is making the changes. 
To resolve this issue I found the solution to use Smart http. But somehow it is not working. I can push changes, but the hook doesn't start either.</p>

<p>Maybe you have an idea about where to look for the misconfiguration or whatelse is going wrong.</p>

<p>Thanks for your help.</p>

<p>My Apache 2.4 configuration on a windows machine looks like this:</p>

<pre><code>SetEnv GIT_PROJECT_ROOT ""e:/gitBare""
SetEnv GIT_HTTP_EXPORT_ALL
ScriptAliasMatch    ""(?x)^/git/(.*/(HEAD | \
              info/refs | \
              objects/(info/[^/]+ | \
              [0-9a-f]{2}/[0-9a-f]{38} | \
              pack/pack-[0-9a-f]{40}\.(pack|idx)) | \
              git-(upload|receive)-pack))$"" \
              ""C:/Program Files/Git/mingw64/libexec/git-core/git-http-backend.exe/$1""
###################
##    GIT        ##
###################
&lt;VirtualHost *:80&gt;
    ServerName   gitShareBare
    DocumentRoot ""e:/gitBare/repo2.git""
    &lt;Location /&gt; 
        &lt;RequireAny&gt;
            Require ip 192
            Require ip ::1
        &lt;/RequireAny&gt;
    &lt;/Location&gt;
    &lt;Directory ""e:/gitBare/repo2.git""&gt;
        DAV On
        Options +ExecCGI +Indexes +FollowSymLinks 
        AllowOverride None
        Allow from all
        Order allow,deny
    &lt;/Directory&gt;
    ErrorLog ""logs/localhost-error.log""
    CustomLog ""logs/localhost-access.log"" common
&lt;/VirtualHost&gt;
</code></pre>

<p>The push is done like this:</p>

<pre><code>git.exe push --progress  ""origin"" master:master

Fetching remote heads...
refs/
refs/heads/
refs/tags/
updating 'refs/heads/master'
from ca186a2cc78a58969790d4a94a0c431604673a7d
to   51397c4a757a0ec9751fd2e7b9e8ab2ff7752409
sending 2 objects
done
Updating remote server info
To http://gitShareBare
ca186a2..51397c4  master -&gt; master
</code></pre>

<p>The Logfile contains the following entries:</p>

<pre><code>192.111.222.111 - - [27/Feb/2018:10:33:33 +0100] ""GET /info/refs?service=git-receive-pack HTTP/1.1"" 200 59
192.111.222.111 - - [27/Feb/2018:10:33:33 +0100] ""GET /HEAD HTTP/1.1"" 200 23
192.111.222.111 - - [27/Feb/2018:10:33:33 +0100] ""PROPFIND / HTTP/1.1"" 207 514
192.111.222.111 - - [27/Feb/2018:10:33:33 +0100] ""HEAD /info/refs HTTP/1.1"" 200 -
192.111.222.111 - - [27/Feb/2018:10:33:33 +0100] ""HEAD /objects/info/packs HTTP/1.1"" 200 -
192.111.222.111 - - [27/Feb/2018:10:33:33 +0100] ""MKCOL /info/ HTTP/1.1"" 405 228
192.111.222.111 - - [27/Feb/2018:10:33:33 +0100] ""LOCK /info/refs HTTP/1.1"" 200 476
192.111.222.111 - - [27/Feb/2018:10:33:33 +0100] ""GET /objects/info/packs HTTP/1.1"" 200 1
192.111.222.111 - - [27/Feb/2018:10:33:33 +0100] ""PROPFIND /refs/ HTTP/1.1"" 207 2353
192.111.222.111 - - [27/Feb/2018:10:33:33 +0100] ""PROPFIND /refs/heads/ HTTP/1.1"" 207 1572
192.111.222.111 - - [27/Feb/2018:10:33:33 +0100] ""GET /refs/heads/master HTTP/1.1"" 200 41
192.111.222.111 - - [27/Feb/2018:10:33:33 +0100] ""PROPFIND /refs/tags/ HTTP/1.1"" 207 855
192.111.222.111 - - [27/Feb/2018:10:33:33 +0100] ""MKCOL /refs/ HTTP/1.1"" 405 228
192.111.222.111 - - [27/Feb/2018:10:33:33 +0100] ""MKCOL /refs/heads/ HTTP/1.1"" 405 234
192.111.222.111 - - [27/Feb/2018:10:33:33 +0100] ""LOCK /refs/heads/master HTTP/1.1"" 200 476
192.111.222.111 - - [27/Feb/2018:10:33:34 +0100] ""PROPFIND /objects/51/ HTTP/1.1"" 404 209
192.111.222.111 - - [27/Feb/2018:10:33:34 +0100] ""PROPFIND /objects/b6/ HTTP/1.1"" 404 209
192.111.222.111 - - [27/Feb/2018:10:33:34 +0100] ""MKCOL /objects/51/ HTTP/1.1"" 201 186
192.111.222.111 - - [27/Feb/2018:10:33:34 +0100] ""MKCOL /objects/b6/ HTTP/1.1"" 201 186
192.111.222.111 - - [27/Feb/2018:10:33:34 +0100] ""PUT /objects/51/397c4a757a0ec9751fd2e7b9e8ab2ff7752409_e1596c160891cc916e8de64aad9a1ce9d73f7191 HTTP/1.1"" 201 263
192.111.222.111 - - [27/Feb/2018:10:33:34 +0100] ""PUT /objects/b6/46f3ce303ece06a3ce4d1ec5cc1969c6cda6da_e1596c160891cc916e8de64aad9a1ce9d73f7191 HTTP/1.1"" 201 263
192.111.222.111 - - [27/Feb/2018:10:33:35 +0100] ""MOVE /objects/51/397c4a757a0ec9751fd2e7b9e8ab2ff7752409_e1596c160891cc916e8de64aad9a1ce9d73f7191 HTTP/1.1"" 201 225
192.111.222.111 - - [27/Feb/2018:10:33:35 +0100] ""MOVE /objects/b6/46f3ce303ece06a3ce4d1ec5cc1969c6cda6da_e1596c160891cc916e8de64aad9a1ce9d73f7191 HTTP/1.1"" 201 225
192.111.222.111 - - [27/Feb/2018:10:33:36 +0100] ""PUT /refs/heads/master HTTP/1.1"" 204 -
192.111.222.111 - - [27/Feb/2018:10:33:36 +0100] ""UNLOCK /refs/heads/master HTTP/1.1"" 204 -
192.111.222.111 - - [27/Feb/2018:10:33:36 +0100] ""PROPFIND /refs/ HTTP/1.1"" 207 2353
192.111.222.111 - - [27/Feb/2018:10:33:36 +0100] ""PROPFIND /refs/heads/ HTTP/1.1"" 207 1572
192.111.222.111 - - [27/Feb/2018:10:33:36 +0100] ""GET /refs/heads/master HTTP/1.1"" 200 41
192.111.222.111 - - [27/Feb/2018:10:33:36 +0100] ""PROPFIND /refs/tags/ HTTP/1.1"" 207 855
192.111.222.111 - - [27/Feb/2018:10:33:36 +0100] ""PUT /info/refs HTTP/1.1"" 204 -
192.111.222.111 - - [27/Feb/2018:10:33:36 +0100] ""UNLOCK /info/refs HTTP/1.1"" 204 -
</code></pre>
",2,9392741,0,0
49032756,1233788,2/28/2018 15:11,4,2149,<git><batch-file><githooks>,GIT Hooks on Windows with batch,"<p>I'm trying to create a git hook rule where commits can be made only if the file <code>myexamplefile.txt</code> is changed.</p>
<p>I set my file <code>.git\hooks\commit-msg</code> to:</p>
<pre><code>for /f &quot;tokens=*&quot; %i in ('git status ^| find /c &quot;AssemblyInfo.cs&quot;') do set x=%i
if %x% (
    echo &quot;nice&quot;
    exit 0
)
else (
    echo &quot;it's bad&quot;
    exit 1
)
</code></pre>
<p>I'm working in this code for a while but I'm getting several errors, right now I'm getting:</p>
<blockquote>
<p>line 28: syntax error near unexpected token `&quot;tokens=*&quot;'</p>
</blockquote>
<p>How can I wrote this hook? Is important to notice that I'm in windows environment.</p>
",2,1233788,0,0
31950355,3845747,8/11/2015 19:30,1,224,<git><bash><githooks>,How to automate symlink script,"<p>Everyone knows you cannot commit anything in <code>.git/hooks</code> because it's not a git repository.</p>

<p>So I wrote a script to symlink all hooks in <code>.git/hooks</code> to point to all of my hooks located in <code>my_repo/hooks/driver</code>.  Now I can track and commit my hooks, as I please. This was recommended by several stack overflow users across many threads (see link below).</p>

<p><a href=""https://stackoverflow.com/questions/3462955/putting-git-hooks-into-repository/3464399#3464399"">Putting git hooks into repository</a></p>

<p>The problem is I don't want other developers (who work on the same repository) to manually run my script, it should just run automatically run when they pull or init the repository (assuming they did not run it once already).  </p>

<p>Anyone have any ideas?  Tons of threads on tracking git hooks, none on automating it once the script is written (i.e. like I have). :(</p>
",0,3845747,,
55080495,6713046,3/9/2019 18:15,0,403,<git><curl><jenkins><githooks>,post-receive hook curl not found,"<p>I have problem with automatic build of my project on Jenkins. I've created post-receive hook file:</p>

<pre><code> #!/bin/bash
curl --user myJenkinsLogin:APIToken -s http://myJenkinsUrl/job/JenkinsProjectName/build?token=AuthToken
</code></pre>

<p>But when I commit and push changes to my repo, after push i got a message:</p>

<p><code>remote: hooks/post-receive: line 2: curl: command not found</code></p>

<p>How can I fix this problem?</p>
",6,6713046,,
55112847,11138357,3/12/2019 1:35,4,352,<bash><git><githooks>,"git ""pre-push"" hook stdin is empty","<p>I'm trying to create a pre-push hook that will prevent the user from pushing to a branch other than the one they're on.</p>

<p>Based on the the pre-push.sample (and various threads I've read) it looks like I should be able to read which local branch I am pushing and the remote one I'm pushing to via stdin with:</p>

<pre><code>while read local_ref local_sha remote_ref remote_sha
do
...
done
</code></pre>

<p>However when I do this, <code>local_ref</code> and the other variables are empty (even when running the unedited sample hook, it never enters the loop).</p>

<p>Is there some configuration or other step I need to do to access the variables at stdin?</p>

<p>I'm using <code>git version 2.17.1</code></p>
",1,11138357,0,0
72465993,3044117,6/1/2022 17:39,-2,126,<regex><bash><githooks>,Pre-hook git message validation fails using regex on bash fails,"<p>I have to validate the structure of a commit message to be consistent with the following structure:</p>
<pre><code>&lt;type&gt;(optional description): &lt;subject&gt;

&lt;BLANK LINE&gt;

&lt;optional body&gt;

&lt;BLANK LINE&gt;

&lt;footer&gt;
</code></pre>
<p>Type, subject and footer are required.</p>
<p>And 'footer' (mandatory) has a structure like:</p>
<pre><code>Closes #S2169505 (https://rally1.rallydev.com/#/?detail=/userstory/123456)
</code></pre>
<p>And additionally can have BREAKING CHANGES(optional) like:</p>
<pre><code>BREAKING CHANGE: Something is breaking thanks to this commit.
</code></pre>
<p>Examples:</p>
<p>Valid commit message</p>
<pre><code>feat: Implement retry logic for outbound requests

If outbound requests fail with a transient exception, they will be automatically
retried for a configured number of times. If the exception is not transient, the
request is not retried and the error is returned to the controller.

This should ensure that temporary failures will more likely return success. 

Closes #S2169505 (https://rally1.rallydev.com/#/?detail=/userstory/123456)
BREAKING CHANGE: Something is breaking thanks to this commit.
</code></pre>
<p>Another valid commit message:</p>
<pre><code>test(some optional thing): Implement retry logic for outbound requests
Closes #S2169505 (https://rally1.rallydev.com/#/?detail=/userstory/123456)
BREAKING CHANGE: Something is breaking thanks to this commit.
</code></pre>
<p>Invalid commit messages:</p>
<pre><code>feat: Implement retry logic for outbound requests

If outbound requests fail with a transient exception, they will be automatically
retried for a configured number of times. If the exception is not transient, the
request is not retried and the error is returned to the controller.

This should ensure that temporary failures will more likely return success. 

Closes #S2169505 (https://rally1.rallydev.com/#/?detail=/userstory/123456)
THIS TEXT SHOULD NOT BE HERE
</code></pre>
<p>Another invalid commit message(it has no footer):</p>
<pre><code>feat: Implement retry logic for outbound requests
</code></pre>
<p>I created a #bash script to validate the message:</p>
<pre><code>#!/bin/sh

msg=&quot;&quot; #THE MENTIONED COMMIT MESSAGE
regExp='^(test|feat)(\(.+\))?:(.+)((.|\n)*)?(Closes #.+ \(.+\))([\n]*BREAKING CHANGE:.+)?$'

if [[ $msg =~ $regExp ]];
then
    echo &quot;cool&quot;
else
    echo &quot;NOT cool&quot;
fi

exit 1
</code></pre>
<p>my regex contains the following structure:</p>
<p><code>^</code> Init of the message</p>
<p><code>(test|feat)</code> 'type'</p>
<p><code>(\(.+\))?</code> optional message in parenthesis</p>
<p><code>:</code> colon separator between 'type' and 'subject'</p>
<p><code>(.+)</code> subject</p>
<p><code>((.|\n)*)?</code> optional 'body'</p>
<p><code>(Closes #.+ \(.+\))</code> mandatory footer</p>
<p><code>([\n]*BREAKING CHANGE:.+)?</code> optional extra footer</p>
<p><code>$</code> End of the message</p>
<p>Unfortunately my script is not working(printing <code>NOT cool</code>).
If I omit the end of the message symbol on the regex (<code>$</code>) the script works (prints 'cool') but then it returns also success for the 3rd example which is invalid since after the <code>Closes</code> footer cannot exist more content (unless is a breaking change).</p>
<p><strong>Additionally</strong>: I'm testing this running the script on the console, is there any way to print what the regex is selecting(and not selecting) from the provided message?</p>
",1,3044117,,
55154882,3894497,3/14/2019 4:17,0,297,<git><shell><githooks>,git post receive hooks run remote server shell script error expecting keyword_do,"<p>under following post receive hook i do get error after i push to the repository,  <code>remote: hooks/post-receive:: syntax error, unexpected $undefined, expecting keyword_do or '{' or '('</code></p>

<p>post receive script as following, </p>

<p><code>#!bin/bash
while read oldrev newrev ref \
do
   ssh user1@ip -pPassword\ 'path/to/the/shell.sh'
end</code></p>

<p>in this case my remote server paswd include <code>\</code> , i have tried as follows </p>

<p><code>#!bin/bash
while read oldrev newrev ref do
   ssh user1@ip -pPassword\ 'path/to/the/shell.sh'
end</code></p>

<p><code>#!bin/bash
while read oldrev newrev ref \
do
   (ssh user1@ip -pPassword\ 'path/to/the/shell.sh');
end</code></p>
",2,3894497,,
55167431,4200179,3/14/2019 16:19,0,208,<git><githooks>,Detect file mode changes on pre-commit hook,"<p>I want to be able to know if someone changed the file mode on some scripts and display a warning to make sure that it was intended and not a silly mistake. </p>

<p>Currently I try to do something like this on my pre-commit hook:</p>

<pre><code>mode_changed=$(git diff --summary | grep ""mode"")
#echo ""mode change is $mode_changed""
if ! [[ -z ""$mode_changed"" ]]; then
  echo ""Warning Files Modes Changed""
fi
</code></pre>

<p>This works if the files are not staged for commit, but as soon as I call git commit -a, then the previous script no longer works, the return value in the variable mode_changed is always empty. Is there another way to do this ?</p>
",0,4200179,,
55257984,79481,3/20/2019 9:56,0,245,<git><jenkins><jenkins-pipeline><githooks>,Trigger from GIT to Jenkins buildWithParameters ignores parameter value in pipeline,"<p>I have a <strong>post-receive</strong> hook in GIT (works ok) which calls</p>

<pre><code>http://ip:port/job/project_name/buildWithParameters?token=abc&amp;ABC=qwe
</code></pre>

<p><strong>ABC</strong> is my parameter which is defined in Jenkins' project as <strong>String parameter</strong> with default value <strong>xyz</strong>. URL has value <strong>qwe</strong>.</p>

<p><a href=""https://i.stack.imgur.com/V60Sv.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/V60Sv.png"" alt=""enter image description here""></a></p>

<p>My Jenkins <strong>pipeline script</strong> is</p>

<pre><code>pipeline {
    agent any
    stages {
        stage('Checkout') {
            steps {
                print env.ABC
            }
        }
    }
}
</code></pre>

<p>When the build is triggered from GIT, <code>env.ABC</code> prints xyz and not qwe.</p>

<p><a href=""https://i.stack.imgur.com/hx65w.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/hx65w.png"" alt=""enter image description here""></a></p>

<p><strong>How to get the value qwe from the URL ?</strong> My goal is to pass versioned tag name from GIT to pipeline.</p>

<p>Thanks</p>

<hr>

<p><strong>EDIT #1 (suggestion from Matt Schuchard)</strong></p>

<p>Not working too.</p>

<p>URL from post-receive hook</p>

<pre><code>http://ip:port/job/project_name/buildWithParameters?token=abc&amp;ABC=works&amp;DEF=works
</code></pre>

<p>Parameter defined in Jenkins UI for the project</p>

<p><a href=""https://i.stack.imgur.com/3mGh2.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/3mGh2.png"" alt=""enter image description here""></a></p>

<p>Pipeline script</p>

<pre><code>pipeline {
    agent any
    parameters {
        string(name: 'DEF', defaultValue: 'failed', description: '')
    }
    stages {
        stage('Checkout') {
            steps {
                print 'by params.ABC -&gt; ' + params.ABC
                print 'by params.DEF -&gt; ' + params.DEF
            }
        }
    }
}
</code></pre>

<p>Output</p>

<p><a href=""https://i.stack.imgur.com/mS9Ug.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/mS9Ug.png"" alt=""enter image description here""></a></p>

<hr>

<p><strong>SOLUTION (by Virginie)</strong></p>

<p>It's necessary to quote &amp; in URL.</p>

<pre><code>http://ip:port/job/project_name/buildWithParameters?token=abc\&amp;ABC=works\&amp;DEF=works
</code></pre>

<p>Output</p>

<p><a href=""https://i.stack.imgur.com/bkaYq.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bkaYq.png"" alt=""enter image description here""></a></p>
",0,79481,,
55258597,9724190,3/20/2019 10:30,1,1605,<git><githooks><pre-commit-hook>,How to get the 'no-verify' argument in pre-commit git hook,"<p>I am developing some code quality checks using git pre commit hook. My idea is to send notification emails if some one skips the quality checks with this no-verify flag .I don't want to restrict the user from using  this flag on commit .In the pre commit hook script I want to read the no-verify argument of git commit and based on its presence ,I want to send emails.I am using VS2017 ,GIT,Azure Devops</p>

<p>Thanks in advance</p>
",1,9724190,,
55278195,79481,3/21/2019 10:19,0,249,<git><githooks>,Trigger something in post-receive only when new tag is added,"<p>I want to <strong>do some action</strong> in GIT's <code>post-receive</code> hook when <strong>only new tag is pushed</strong> to the repository. How to accomplish this?</p>

<p>Thanks</p>

<hr>

<p><strong>SOLUTION (answer by Jan Krüger)</strong></p>

<p>New tag has <code>$oldrev</code> equalled zeroes. Removed tag has <code>$newrev</code> equalled zeroes. For both <code>$ref</code> value starts with <code>refs/tags/</code>.</p>

<pre><code>#!/bin/sh
#

read oldrev newrev ref

if [[ ""0000000000000000000000000000000000000000"" == $oldrev ]] &amp;&amp; [[ $ref == refs\/tags\/* ]];
then
    echo ""New tag added""
fi
</code></pre>
",1,79481,,
55302899,10597836,3/22/2019 15:24,4,1854,<ruby><git><github><githooks><rubocop>,Pushing pre-commit git hook (Rubocop),"<p>I've currently configured my repository to use Rubocop for pre-commit linting by creating a <em>pre-commit</em> hook under <code>./git/hooks</code> </p>

<p>However, I'd like this to be available to everyone working on my team, and hence I'd like to push these changes to Github. </p>

<p>How do I go about pushing the changes related to pre-commit linting onto the remote repository without committing the <code>.git</code> folder?</p>
",1,10597836,,
55355525,3278687,3/26/2019 11:00,1,130,<regex><bash><grep><githooks>,Grep/bash regex - combination of alternation and set of numbers,"<p>I need to end up matching any of the following:
<code>AD-123, ad-123, AD123, and ad123</code></p>

<p>So far what I have is </p>

<p><code>| grep -oP 'AD-|ad-|AD|ad'[0-9]\+)</code></p>

<p>but that only matches the letters and completely ignores the numbers, and I can't figure out a bash-friendly way to do this. </p>

<p>Context/use case: prepare-commit-msg githook, I want to take the Jira ticket from the branch name and add it to any commit message. The Jira ticket would be written in one of the ways described above under a branch naming convention of feature/version/ticker-keywords (example feature/1.1.3/ad-123-some-branch) </p>
",5,3278687,,
55389305,1613047,3/28/2019 2:28,1,198,<node.js><git><npm><githooks>,How can I cd to a folder and run npm start with git hook post-receive?,"<p>Basically I want to:</p>

<pre><code>git --work-tree=/home/aero/server --git-dir=/home/aero/server/.git pull;
ps aux | grep node | grep server-aero-static | awk '{print $2}' | xargs kill -9;
cd /home/aero/server;
npm start;
</code></pre>

<p>I don't think this would work in post-receive, why? And how can I get it to work?</p>
",0,1613047,0,0
55399383,9211304,3/28/2019 13:55,1,92,<git><gitlab><githooks>,"On push, I receive a ""overwritten by merge"" error. I believe it is caused by a post-update hook. Can I bypass?","<p>I have a certain file, <code>filename.html</code>, that I've made some changes to and I'd like to push the commit.  So I've made changes, added and committed them.  Whenever I push, I get the following output: </p>

<p><code>
Enumerating objects: 9, done.
Counting objects: 100% (9/9), done.
Delta compression using up to 4 threads
Compressing objects: 100% (5/5), done.
Writing objects: 100% (5/5), 439 bytes | 439.00 KiB/s, done.
Total 5 (delta 4), reused 0 (delta 0)
remote:
remote: **** Pulling changes into Live [Hub's post-update hook]
remote:
remote: From /var/git/html
remote:  * branch            master     -&gt; FETCH_HEAD
remote: error: Your local changes to the following files would be overwritten by merge:
remote:         filename.html
remote: Please, commit your changes or stash them before you can merge.
remote: Aborting
remote: Updating c987b05..583872c
To website.com:/var/git/html.git
   76ad8aa..583872c  master -&gt; master</code></p>

<p>I've tried to <code>git reset --hard</code> and I've tried to force a push.  I tried <code>git push origin master --no-verify</code>. I've tried to stash the changes. No success.  </p>

<p>To be clear, I can make changes and push commits just fine for all other files in the project.  It is just this one particular file that, if I make and commit changes to, won't let me push.  </p>

<p>From another question I've asked here, I've been told that it's probably the post-update hook that is causing a pull and this is where the error arises. However, I haven't been able to find a way around it. I didn't set up the git on this project, and the developer that did has since left the company.  The git is set up in a way that, when pushed, the changes are pushed via ftp to update the dev site. </p>

<p>Is there a way to bypass this hook so I can push? Is there a better fix to this problem I'm not aware of?</p>

<p>Thanks in advance, this one has me stumped.</p>
",0,9211304,,
52722252,10353531,10/9/2018 13:27,3,2001,<java><git><intellij-idea><ide><githooks>,Is there a way to enforce InteliJ code style formatting before committing to Git?,"<p>We would like to create a common code style for all the team in order to solve the problem of different formats which make files look ""dirty"" during code review although they don't contain actual meaningful change</p>

<p>The steps:</p>

<ol>
<li>Create InteliJ code style XML</li>
<li>Import this XML into all our IDE (InteliJ)</li>
<li>Go to each git repository ( ~30) and create a commit which will reformat all the code.</li>
</ol>

<p>My question is, is there a way to enforce that from now on all the commits will be aligned to this new format ?</p>

<p>for example a developer which will try to commit a code which is not formatted will get an error message and it's push will get aborted.</p>
",3,10353531,0,0
36743449,6229978,4/20/2016 12:13,0,1485,<git><apache><hook><githooks>,Git hooks and work tree,"<p>I have a problem with Git Hooks on server. I need create new working copy to my Apache web folder from Git repository (web folder and Git repository are on the same server). I have this code in Git hooks repository folder in post-receive file:</p>

<pre><code>#!/bin/bash
git --work-tree=/var/www/html/test --git-dir=/projects/project.git checkout -f
</code></pre>

<p>My problem is that Git create files always from first commit. Any further change (commit) is not reflected in the files. Anyone know how to do it?</p>
",1,6229978,,
36743922,1651693,4/20/2016 12:33,1,1051,<git><githooks>,pre-receive hook - how to get messages of commits,"<p>How to get messages of commits that are received by server in pre-receive hook using bash?</p>

<p>I've tried to print:  </p>

<pre><code>echo &gt;&amp;2 $1 $2 $3
</code></pre>

<p>but only I get:  </p>

<pre><code>remote: 62e1ce5353f74f21eafac129dcff0074b2cc7a19 f58a366385ba105ecv1e2f3fbfe99ca60be737c72 refs/heads/master 
</code></pre>
",0,1651693,,
36744564,6229978,4/20/2016 12:58,0,203,<git><hook><githooks>,How to run hooks in linux git server,"<p>I have a problem with run Git hooks in Git server. My file is <code>post-receive</code> in <code>/projects/project.git/hooks/</code>. This file should always start with the push on server. My problem is that this file does not start.</p>
",3,6229978,,
36747264,3063045,4/20/2016 14:39,1,91,<git><githooks>,Git Hook Custom Command for Each File Changed Before Push,"<p>I'm trying to run a custom command on every file changed before a push. I'm looking over the pre-push sample:</p>

<p><a href=""https://github.com/git/git/blob/87c86dd14abe8db7d00b0df5661ef8cf147a72a3/templates/hooks--pre-push.sample"" rel=""nofollow"">https://github.com/git/git/blob/87c86dd14abe8db7d00b0df5661ef8cf147a72a3/templates/hooks--pre-push.sample</a></p>

<p>but I can't figure out how to iterate over commits. I've looked at git log but I can't tell how to distinguish commits since the last push.</p>

<p><strong>How can I iterate over each file change before a git push?</strong></p>
",0,3063045,,
52792445,5227035,10/13/2018 11:30,3,298,<node.js><git><githooks>,git commit adds 2 new lines,"<p>I'm writing a <em>post-commit</em> hook script with nodeJS on Windows. The following code calls the last commit message:</p>

<pre><code>#!/bin/env node

require('child_process').exec('git log -1 --pretty=%B', function(err, commit) {
    console.log(commit); // prints message in command prompt with 2 empty lines  
    var messages = commit.split(' '); // the delimiter is irrelevant
    console.log(messages); // prints the array and shows '\n\n' at the end of last element
    console.log(messages[messages.length - 1]); // yet this prints the last element WITHOUT '\n\n'
});
</code></pre>

<p>Why are there 2 new lines? I read on how Unix and non-Unix systems treat CR and LF. A bit on <code>git config core.autocrlf</code> too, but I don't think that's the issue.</p>
",3,5227035,,
52796184,6784366,10/13/2018 18:48,0,1863,<git><automation><cloud><digital-ocean><githooks>,Auto pull from GitHub repository on remote DigitalOcean server after push from local machine?,"<p>I have a project that I push to a GitHub repository from my local machine. I deploy this project on a DigitalOcean droplet that I currently have to ssh into and do a git pull, then redeploy manually. Is there an easy way to have it auto pull, and then auto build and redploy itself? I have looked into git hooks but couldn't find any clear answers on what I am trying to do. I set up a post-update git hook on my remote machine which just echos a line but I don't know where to check if the line got echoed or not successfully.</p>
",0,6784366,,
36772395,6229978,4/21/2016 14:17,1,144,<git><hook><githooks>,Git server hooks,"<p>How can I run a hook on server when sending data to git repository? (When I start the push command from client -> git push origin master)</p>

<p>The steps that I have done so far:</p>

<ul>
<li>I've created a <code>post-receive</code> file in the <code>hooks</code> folder on the server (<code>GitServer/GitRepository.git/hooks/post-receive</code>)</li>
<li>I changed the <code>post-receive</code> file to be executable (with <code>chmod +x post-receive</code>)</li>
<li>I have debugged the <code>post-receive</code> hook manually - no problem, and perform the manual start everything correctly</li>
</ul>
",1,6229978,,
52826696,8468184,10/16/2018 1:23,1,56,<git><gitlab><githooks><pre-commit-hook>,What would a git hook look like that checks the correct version of python was used?,"<p>I've been trying to find an example of a git hook that checks if the files being committed are python, and if they are what version of python was used. </p>
",0,8468184,0,0
36792632,1986412,4/22/2016 11:27,0,2653,<eclipse><git><egit><githooks><pre-commit-hook>,Use Egit to launch pre-commit hook,"<p>I am working in Eclipse Mars (4.5.2) with EGit (4.1.1) on Windows8. 
I try to launch a pre-commit hook from within eclipse using GitForWindows.</p>

<p>I started the pre-commit file with: <code>#!/bin/sh</code></p>

<p>and gave the <code>PATH</code> Variable GITFORWINDOWS with the path to the bin folder in which the sh.exe of my GitForWindows installation is stored (C:\Program Files\Git\bin).</p>

<p>If I do <code>git commit</code> in the GitBash, pre-commit is executed correctly, thus an error is thrown if a certain string is detected in the staged files. If I commit in Eclipse nothing happens. What am I doing wrong?</p>

<hr>

<p><strong>EDIT</strong></p>

<p>I tried it with Cygwin as well. While it is working from the cygwin terminal (as well as from the GitInWindows terminal) it is not working from within eclipse.</p>

<p>I set the <code>PATH</code> to <code>C:\cygwin64\bin</code> where the <code>sh.exe</code> is. </p>

<p>Can line returns be a problem? I have LF so far. </p>
",4,1986412,,
52868364,4109899,10/18/2018 6:44,1,113,<git><open-source><puppet><githooks><r10k>,post-receive hook not invoked when pushing changes to remote git repository,"<p>I am trying to automate the r10k deployment using git hooks. I am making changes on local system and pushing to remote git repository. I want that r10k should auto deploy once the changes are pushed . So i wrote the post-receive hook on puppet master which has following script</p>

<pre><code>#!/bin/sh
echo ""Deploying r10k new changes received""
/usr/local/rvm/gems/ruby-2.4.4/bin/r10k depoly environment -pv debug
</code></pre>

<p>I made that hook executable but still its not getting invoked when i push from my local machine.</p>

<p>Below is my r10k config file:</p>

<pre><code>---
:cachedir: /opt/puppetlabs/puppet/cache/r10k
:sources:
  puppet:
    basedir: /etc/puppetlabs/code/environments
    remote: https://github.com/Sanket-Shirode/puppet-control.git
</code></pre>
",4,4109899,,
52887022,5919697,10/19/2018 6:39,0,75,<git><gitlab><hook><githooks>,How I can prompt git users to login everytime they push?,"<p>we are hosting gitlab on our server with only https authentication. Users can login either through webui or shell. With a web UI everything is working as desired.</p>

<p>The use case is when user is getting authenticated over shell, we trigger our custom server side hooks in order to authorize that user which branch he/she can access to and can do only specified actions there. Therefore we need to prompt users to provide their login/pass everytime they push to the repo.</p>

<p>We have tested a lot of ways, but issue seems to be challenging.</p>

<p>Do you know how can we solve this problem?</p>
",5,5919697,,
52889619,6320039,10/19/2018 9:31,0,1713,<git><shell><githooks>,Is it possible to configure default or global git hooks?,"<p>Using Git for a long time now, I'm used to having my config variable specific for each project and some global under <code>~/.gitconfig</code>. Or same for <code>~/.gitignore</code> for global exclusion rules depending on my OS.</p>

<p>I'm wondering if something like this is available for hooks. Like a folder <code>~/.githooks/</code> that would populate my repositories on init or clone. Or even some hooks that would always trigger before project specific hooks.</p>

<p>I found nothing about this on the <a href=""https://git-scm.com/book/en/v2/Customizing-Git-Git-Hooks"" rel=""nofollow noreferrer"">Git Hooks documentation</a>. Even if you have a hacky way of doing it I would be interested.</p>
",2,6320039,,
36892902,6260886,4/27/2016 14:31,2,462,<bash><git><githooks><git-push>,Test push conflicts on git push via Pre-Receive Hook,"<p>I'm making a Pre-Receive Hook on BitBucket that is supposed to confirm that all pushes made in a branch are up-to-date with parent Branches.</p>

<p>I mean, in a temporal evolution, we have several branches creations:</p>

<p><a href=""https://i.stack.imgur.com/Tynw4.png"" rel=""nofollow noreferrer"">Branch creation during time</a></p>

<p>With the above example os 3 branches, Dev, Feature1, and my Local, i want to, before making push of Local to remote/origins/Feature1, make git merge from the latest Feature1 with the recent on-push Local Code. In this way, i can confirm that, whoever is making the push, is using the latest version of feature1, and there will be no conflict.
If it were any conflict, i would return 1, to avoid making the push! and obligate the Developer to pull from Feature before push is code.</p>

<p>This is my script on Pre-Receive Hook.</p>

<pre><code>while read from_ref to_ref ref_name; do
    echo ""Ref update:""
        echo "" Old value: $from_ref""
        echo "" New value: $to_ref""
        echo "" Ref name:  $ref_name""
        echo "" Diff:""
        git clone --progress -v $GIT_URL $CLONE_DIR1
        cd $CLONE_DIR1
        git checkout -b test remotes/origin/Feature1
        git merge --no-commit -m ""Merging feature with local on-push code"" $ref_name
        (....)
done
</code></pre>

<p>I've tried with ref_name, to_ref, and having no success.</p>

<p>Anyone can help me?</p>

<p>How can I access the recent pushed code, and merge by parent branch with this code?</p>
",0,6260886,,
52968175,41360,10/24/2018 11:45,14,15569,<git><githooks>,How to prevent a specific branch from being merged in git?,"<p>We have a <code>master</code> branch where the released production code lives, a <code>dev</code> branch where the code for the test server lives, and various feature branches (branched from <code>master</code>) as each developer sees fit.</p>

<p>Over the course of time the <code>dev</code> branch has diverged somewhat from <code>master</code>. In addition, there are some incorrect merges there that mess up parts of the code. Several times already we have tried to reset (force-push) <code>dev</code> to be the same as <code>master</code>. To start over with a clean slate, so to say.</p>

<p>Unfortunately this does not last long. Sooner or later someone merges the old <code>dev</code> into the new <code>dev</code>, bringing back all the mess with it. I suspect this might even happen automatically, where a naive <code>git pull</code> silently merges the old and new branch heads.</p>

<p>Is it possible to prevent this with a server-side commit hook? Something that would refuse to accept the <code>git push</code> if the wrong commit is merged in?</p>
",3,41360,0,0
52975103,1153105,10/24/2018 17:44,10,4111,<python><git><githooks>,How can I recover the commit message when the git commit-msg hook fails?,"<p>I'm using one of git's hooks <code>commit-msg</code> to validate a commit message for certain format and contents.</p>

<p>However, whenever a commit message fails the hook, I have sometimes lost a paragraph or more of text from my message.</p>

<p>I've played around with saving it off somewhere, but I'm not sure how to restore it to the user when they attempt to fix the failed commit message, only the last good commit message shows up.</p>

<p>Has anyone else dealt with this before? How did you solve it?</p>

<p>Info: I am using python scripts for my validation.</p>
",0,1153105,0,0
36978545,6094016,5/2/2016 8:52,0,47,<git><bitbucket><githooks>,Don't push if the 'debugger' in code by git,"<p>I'm using git and Bitbucket and I don't want push if any <code>debugger</code> word in codes. Is it possible? How can I do it?
Thanks.</p>
",0,6094016,,
37021743,1617101,5/4/2016 7:56,0,74,<java><serialization><githooks>,Git hook for serialVersionUID regeneration,"<p>Are there any ready-made git hooks for the automatic regeneration of serialVersionUID in Java project?</p>

<p>For example this hook can find changes between commits and regeneration serialVersionUID if class changed.</p>
",3,1617101,,
37036214,506236,5/4/2016 19:17,6,3009,<git><githooks>,Pass parameters to git pre-push hook,"<p>I've create a git pre-push hook that builds my .NET solution and runs the unit tests. So executing a <code>git push</code> command now fires off the build/tests prior to pushing code to origin.</p>

<p>That all works just fine. However, there are cases when I'd like to bypass this hook. Maybe I know a test is failing and that's fine for now, I'd just like to be able to skip the logic in my hook.</p>

<p>Ideally I'd be able to do something like this:</p>

<p><code>git push --skip-tests</code></p>

<p>However, that doesn't seem to fly because git flags <code>--skip-tests</code> as an invalid parameter. Is there a way I can pass a parameter into the hook from the command line when doing a push so that I can branch the hook logic based on whether that parameter exists or not?</p>
",0,506236,0,0
53108879,9324422,11/1/2018 20:26,0,1665,<git><githooks>,Git Hook - core.hookspath not picking up local hooks,"<p>I am trying to point my repositories gitconfig to my local git hooks directory so that every developer on my team can download this directory and not have to worry about updating the default hooks everytime they clone a repo.</p>

<p>I've created a local repo under <code>$HOME/.githooks</code> which includes a simple <code>commit-msg</code> hook.</p>

<p>Then in my code repository <code>$HOME/development/repo</code>, I attempt to update the <code>.gitconfig</code> to point to my local hooks: <code>git config --local core.hooksPath $HOME/.githooks</code></p>

<p>Everything works fine if I update the hooks in the code repository, but not when I try to repoint it. I've read the docs which state that by default the hooks directory is <code>$GIT_DIR/hooks</code>, but that can be changed via the <code>core.hooksPath</code> configuration variable -- so I belive this is possible.
<a href=""https://git-scm.com/docs/githooks/2.9.0"" rel=""nofollow noreferrer"">https://git-scm.com/docs/githooks/2.9.0</a></p>

<p>I've read a number of posts and the only consistent suggestion I've seen is to verify that the hook is executable, which I've done.</p>

<p>What may I be doing wrong, any advice is appreciated.</p>
",2,9324422,,
53121208,6915929,11/2/2018 15:12,5,1916,<git><githooks>,$GIT_DIR no longer set in pre-commit hooks,"<p>Using $GIT_DIR in pre-commit hook would return the location of the .git directory. Even if it had not been explicitly set to anything, using it in the pre-commit hook would still return you the location. After an update, moving to Git 2.18 this appears to no longer be the case and the behavior of my pre-commit hooks are different and not working as intended. Any idea how to fix this?</p>
",1,6915929,,
37111893,557046,5/9/2016 9:16,0,94,<git><email><githooks><phpcodesniffer>,git pre-commit hook bypass email,"<p>I have a pre-commit hook that runs PHP Codesniffer on all files in the staging area. However, sometimes developers bypass this hook by adding --no-verify option to the git commit command. Is there a way I can send an email each time a developer bypasses the hook?</p>
",0,557046,,
37180343,2783545,5/12/2016 7:40,0,117,<windows><githooks>,Putting git hooks into repository for Windows,"<p>I have created a githook folder which contains git hooks in my git repository.
What is the best way to deliver link hooks to <code>.git/hooks</code> on windows?</p>
",0,2783545,,
37180118,247243,5/12/2016 7:29,18,5467,<node.js><git><npm><githooks><npm-install>,"How to install git hooks on ""npm install""?","<p>I'd like to install a <code>pre-commit</code> git hook (that lints the code) when someone installs <code>my-package</code>.</p>

<p>I tried to add a <code>postinstall</code> script:</p>

<pre><code>""scripts"": {
  ""postinstall"": ""./scripts/install-git-hooks""
}
</code></pre>

<p>This works great. When someone runs <code>npm install</code>, they get the <code>pre-commit</code> hook installed.</p>

<p>However, if <code>another-package</code> depends on <code>my-package</code>, running <code>npm install</code> for <code>another-package</code> runs the <code>postinstall</code> script as well, which is undesired.</p>

<p>What's the cleanest way to avoid this undesired affect?</p>
",3,247243,0,0
37182114,1507546,5/12/2016 9:03,0,279,<git><githooks><pre-commit-hook>,"Abort commit if todo into the code except when ""work in progress"" found in the commit message","<p>I need to get git to abort commits containing todo except when in the commit message ""work in progress"" text is specified.</p>

<p>Isn't there a way to access the commit message into the pre-commit hook given that I always provide it through the <code>-m</code> option, which means it should be available for all the available git hooks?</p>

<p>If not, how do I do?</p>
",1,1507546,,
37197727,5813209,5/12/2016 21:29,1,299,<git><gitlab><githooks>,GIT clone from hook script results in empty directory,"<p>I don't really know where to go with this one and have tried everything I can think of. </p>

<p>I have a GitLab server running on Ubuntu 14.04. I've creating a post-receive hook script (bash) that clones the repo to a new folder in the /tmp directory and then copies the files out to a mounted remote directory. If I run the script while logged into the git user the script runs fine, but when it runs as the hook-script it does not. The script starts running fine but the result of the git clone command is a totally empty folder. Not even any repo files. Also, I don't get any error from the clone command. The clone command only returns a single line:</p>

<p>(my command)
git clone file:///var/opt/gitlab/git-data/..../999.git 999</p>

<p>(return)
Cloning into '999'</p>

<p>Again, if I run the same clone command from the command line from the same user I don't have this issue, so I don't think it's a permission thing.</p>

<p>Any pointers on where I can go from here?</p>

<p>Thanks!</p>
",0,5813209,,
37210307,412395,5/13/2016 12:39,1,415,<git><githooks><bitbucket-server>,Delete-repository-hook for git repositories in Bitbucket Server,"<p>Does Bitbucket Server provide any routine like a <code>delete-repository-hook</code> or maybe it's possible to write an an addon which supplies such a hook?</p>
",0,412395,,
53275583,1434946,11/13/2018 7:06,1,752,<terraform><githooks><aws-codebuild>,GitHub webhook created twice when using Terraform aws_codebuild_webhook,"<p>I'm creating a an AWS CodeBuild using the following (partial) Terraform Configuration:</p>

<pre><code>resource ""aws_codebuild_webhook"" ""webhook"" {
  project_name = ""${aws_codebuild_project.abc-web-pull-build.name}""
  branch_filter = ""master""
}

resource ""github_repository_webhook"" ""webhook"" {
  name       = ""web""
  repository = ""${var.github_repo}""
  active     = true
  events     = [""pull_request""]

  configuration {
    url          = ""${aws_codebuild_webhook.webhook.payload_url}""
    content_type = ""json""
    insecure_ssl = false
    secret       = ""${aws_codebuild_webhook.webhook.secret}""
  }
}
</code></pre>

<p>for some reason <strong>two</strong> Webhooks are created on GitHub for that spoken project, one with events pull_request and push, and the second with pull request (the only one I've expected).</p>

<p>I've tried removing the first block (aws_codebuild_webhook) even though terraform documentation give an example with both:
<a href=""https://www.terraform.io/docs/providers/aws/r/codebuild_webhook.html"" rel=""nofollow noreferrer"">https://www.terraform.io/docs/providers/aws/r/codebuild_webhook.html</a></p>

<p>but than I'm in a pickle because there isn't a way to acquire the payload_url the Webhook require and currently accept it from <strong>aws_codebuild_webhook.webhook.payload_url</strong>.</p>

<p>not sure what is the right approach here, Appreciate any suggestion.</p>
",1,1434946,,
53284908,5181,11/13/2018 16:01,1,138,<git><gitlab><hook><githooks>,Git hook hack to workaround bad target branch when opening merge review on Gitlab,"<p>I  have the habit of creating merge requests (MR) by clicking the link printed by remote server on pushes :</p>

<pre><code>╰─ git push
Counting objects: 33, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (33/33), done.
Writing objects: 100% (33/33), 3.46 KiB | 1.73 MiB/s, done.
Total 33 (delta 31), reused 0 (delta 0)
remote: 
remote: To create a merge request for modelref, visit:
remote:   https://gitlab.com/foo/bar/merge_requests/new?merge_request%5Bsource_branch%5D=mybranch
</code></pre>

<p>Problem is that the target branch of the MR  will be set to the pre-configured <code>master</code> branch *</p>

<p>So basically I would prefer to have an url with the <code>merge_request%5Btarget_branch%5D=</code> url parameter set to the parent branch (<a href=""https://gist.github.com/joechrysler/6073741"" rel=""nofollow noreferrer"">this script</a> finds it). </p>

<p>I could write a local <code>pre-push</code> hook (as local <code>post-push</code> operations do not exist) that builds this url that I would click instead, but can you find a less ugly hack ? </p>

<hr>

<p>* <sub> which will result to a loss of time if I don't change the target branch immediatley as changing this form field reset all others fields (<a href=""https://gitlab.com/gitlab-org/gitlab-ce/issues/22090"" rel=""nofollow noreferrer"">https://gitlab.com/gitlab-org/gitlab-ce/issues/22090</a>)</sub></p>
",0,5181,,
53725257,3548603,12/11/2018 13:34,0,605,<git><gitlab><githooks>,Hook Type to Exclude File Types from Git Repository,"<p>I am trying to write a git hook that will prevent files such as .exe files from being pushed to repositories.</p>

<p>We use Gitlab for our source control and this hook will function in place of the Gitlab 'Prohibited file names' push rule.</p>

<p>My question is: which type of hook should I be looking to write? </p>

<p>I have gone down the road of writing a pre-receive hook. Does this sound right?</p>

<p>Thanks,</p>

<p>Sean </p>
",5,3548603,,
70649673,17889480,1/10/2022 8:35,1,270,<python><python-3.x><conda><githooks>,conda install doesn't ask for permission before installing modules,"<p>I wrote a python script which is being used in <code>githooks/post-merge</code>, and its purpose is to install or update modules from a <code>env.yml</code> file that exists in the same repository. I used the following code:</p>
<pre><code>    for module in modules_to_update:
        print(&quot;\n================================= Updating {} ==================================\n&quot;.format(module))
        update_command = ['conda', 'install', '{}={}'.format(module.name, module.version)]
        subprocess.run(update_command)
</code></pre>
<p>As can be seen, <code>modules_to_update</code> contains the modules that will be installed/updated. I didn't use <code>conda update</code> because I didn't want the updates to be automatic.</p>
<p><strong>The problem is</strong>: I expected that conda will ask for permission to install/update every module individually, but it didn't work as planned. When I tried it to do so, every module did the same thing- proceeded without waiting for my input:</p>
<pre><code>Proceed ([y]/n)?
Preparing transaction: done
Verifying transaction: done
...
</code></pre>
<p>I didn't use the <code>-y</code> flag so it should not work this way, and when I tried using the python script separately it worked just fine.</p>
",1,17889480,,
70668905,70942,1/11/2022 14:58,0,1605,<github><githooks><pre-commit.com>,Creating git-hooks for pre-commit using ggshield,"<p>I have a android project and want to install a pre-commit.</p>
<p>I was following this example:
<a href=""https://docs.gitguardian.com/internal-repositories-monitoring/integrations/git_hooks/pre_commit"" rel=""nofollow noreferrer"">https://docs.gitguardian.com/internal-repositories-monitoring/integrations/git_hooks/pre_commit</a></p>
<pre><code>repos:
  - repo: https://github.com/gitguardian/ggshield
    rev: main
    hooks:
      - id: ggshield
        language_version: python3
        stages: [commit]
</code></pre>
<p>I have also done the following:</p>
<pre><code>pre-commit autoupdate
Updating https://github.com/gitguardian/ggshield ... already up to date.
</code></pre>
<p>However, when I try and make a commit I get the following error messages:</p>
<pre><code>git commit -am&quot;Updated pre-commit file&quot;
GitGuardian Shield (pre-commit)..........................................Failed
- hook id: ggshield
- exit code: 1

Traceback (most recent call last):
  File &quot;/home/steve/.cache/pre-commit/repol8_kb04j/py_env-python3/bin/ggshield&quot;, line 8, in &lt;module&gt;
    sys.exit(cli_wrapper())
  File &quot;/home/steve/.cache/pre-commit/repol8_kb04j/py_env-python3/lib/python3.9/site-packages/ggshield/cmd.py&quot;, line 229, in cli_wrapper
    return_code: int = cli.main(standalone_mode=False)
  File &quot;/home/steve/.cache/pre-commit/repol8_kb04j/py_env-python3/lib/python3.9/site-packages/click/core.py&quot;, line 1053, in main
    rv = self.invoke(ctx)
  File &quot;/home/steve/.cache/pre-commit/repol8_kb04j/py_env-python3/lib/python3.9/site-packages/click/core.py&quot;, line 1659, in invoke
    return _process_result(sub_ctx.command.invoke(sub_ctx))
  File &quot;/home/steve/.cache/pre-commit/repol8_kb04j/py_env-python3/lib/python3.9/site-packages/click/core.py&quot;, line 1656, in invoke
    super().invoke(ctx)
  File &quot;/home/steve/.cache/pre-commit/repol8_kb04j/py_env-python3/lib/python3.9/site-packages/click/core.py&quot;, line 1395, in invoke
    return ctx.invoke(self.callback, **ctx.params)
  File &quot;/home/steve/.cache/pre-commit/repol8_kb04j/py_env-python3/lib/python3.9/site-packages/click/core.py&quot;, line 754, in invoke
    return __callback(*args, **kwargs)
  File &quot;/home/steve/.cache/pre-commit/repol8_kb04j/py_env-python3/lib/python3.9/site-packages/click/decorators.py&quot;, line 26, in new_func
    return f(get_current_context(), *args, **kwargs)
  File &quot;/home/steve/.cache/pre-commit/repol8_kb04j/py_env-python3/lib/python3.9/site-packages/ggshield/cmd.py&quot;, line 121, in scan
    ctx.obj[&quot;client&quot;] = retrieve_client(ctx)
  File &quot;/home/steve/.cache/pre-commit/repol8_kb04j/py_env-python3/lib/python3.9/site-packages/ggshield/utils.py&quot;, line 248, in retrieve_client
    raise click.ClickException(&quot;GitGuardian API Key is needed.&quot;)
click.exceptions.ClickException: GitGuardian API Key is needed.
</code></pre>
",1,70942,,
70674638,3971843,1/11/2022 23:30,0,45,<git><githooks>,How to merge 2 branches during post-commit,"<p>I have a hair-splitting edge case where I need a commit to BranchA to be immediately merged into BranchB, and I'd like this to be automated.</p>
<p>I tried looking up steps to commit to 2 branches at the same time and found <a href=""https://stackoverflow.com/questions/7259135/commit-to-multiple-branches-at-the-same-time"">this</a>, but I don't know how to automate it.</p>
<p>I'm aware of <code>.git/hooks/post-commit</code> but I'm not sure if the commit exists before the hook runs or after the script exits 0. Also I don't know if the <code>git merge</code> command can merge to a branch we're not checked out too.</p>
<p>Is this something I can do with <em>just</em> git? Or do I need to invent a complicated rube-goldberg system of file-watchers?</p>
",1,3971843,,
70722651,4390133,1/15/2022 15:10,0,404,<xunit><githooks><xunit.net><.net-6.0><xunit2>,How to prevent xUnit from logging when use it from `dotnet test`?,"<p>It should be simple, but I am not able to make it.</p>
<p>Setup</p>
<ol>
<li>.NET 6 class library</li>
<li>xUnit 2.4.1 as a test framework</li>
</ol>
<p>Everything is nice.</p>
<p>I am trying to execute all my unit tests before committing. <br/>
If any unit test failed I will prevent the commit. <br/>
I am doing this in the <code>pre-commit</code> git hook. <br/>
And I was able to make it with this code (inside the <code>pre-commit</code> hook)</p>
<pre><code>if ! dotnet test --nologo --verbosity q &gt; buildoutput.txt
then
  echo &quot;Test failed&quot;
  exit 1
fi

exit 0
</code></pre>
<p>everything is fine and good, I have a very small problem <br/>
I do not want the [xUnit.net] logs from showing its log in the Git panel <br/></p>
<p><a href=""https://i.stack.imgur.com/UyDcj.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/UyDcj.png"" alt=""enter image description here"" /></a></p>
<p>I just want to show a simple message that 'Test failed'</p>
<p><strong>How can I prevent the xUnit package from showing those messages?</strong></p>
",2,4390133,,
70747036,7199007,1/17/2022 20:17,0,338,<git><flutter><githooks>,How do I get current project directory inside a git hook?,"<p>I have a pre-commit hook running in my flutter project directory.</p>
<pre><code>#!/bin/sh

cd D: || exit
cd AndroidProjects/json_test/ || exit

flutter pub run 
</code></pre>
<p>It is as follows. I am running the git command (git commit) in local terminal at project directory, so <code>D:AndroidProjects/json_test/&gt; git commit</code>  And then the hook is executed.</p>
<p>Is there a way I get project path in which I am running git commit, right to the hook, without hardcoding it inside?</p>
",0,7199007,,
38015205,903291,6/24/2016 13:58,5,3795,<python><git><authentication><githooks>,How to authenticate user via git pre-receive hook,"<p>I am looking to write a <code>pre-receive</code> githook in Python.  It is my understanding that no arguments are passed into <code>pre-receive</code> scripts but rather each reference is passed in using standard input on separate lines.  I have been able to read the reference changes via:</p>

<pre><code>!/usr/bin/env python

import sys
import fileinput

for line in fileinput.input():
    print ""pre-receive: Trying to push ref: %s"" % line
</code></pre>

<p>However, for this hook, I am mainly concerned with making sure that the user pushing code has the correct privileges to push to the branch of which they are trying to.  Through my research, I have been unable to find a way to seek the committer's user credentials.  It was my goal to compare their creds against a whitelist in order to grant access.</p>

<p>How can I change my <code>pre-receive</code> code to authenticate the committing user and verify that they are whitelisted to push to their attempted branch?  And what, if any, changes do I have to make on the git repository to make the code function?</p>
",1,903291,0,0
38038352,1705592,6/26/2016 12:04,0,28,<git><github><githooks>,How to copy entire project to another path in server using POST-RECEIVE hook in git?,"<p>I want to move entire project to another location in git remote server.</p>

<p>For example, if I have project called 'sample-project' in git server, I want it to copy the entire project to </p>

<blockquote>
  <p>/home/username/projects/ </p>
</blockquote>

<p>location. With my search I found that '<strong>rsync</strong>' can be used for it. </p>

<p>Can anyone help me on this? </p>

<p>Thanks in advance.</p>
",6,1705592,,
53771489,10788397,12/13/2018 23:21,1,1848,<bash><git><hook><githooks><git-commit>,Git prepare-commit-msg hook does not get any arguments,"<p>I want to create custom <code>prepare-commit-msg</code> hook for my git repository.
Firstly I read about arguments, so I created something like test to see values of those arguments.</p>

<pre><code>#!/usr/bin/env bash

readonly file_with_message=$1
readonly source_of_message=$2
readonly commit_sha=$3

echo ""File: \""${file_with_message}\""""
echo """"
echo ""Source: \""${source_of_message}\""""
echo """"
echo ""SHA: \""${commit_sha}\""""
echo """"
</code></pre>

<p>And I got following log:</p>

<pre><code>File: """"

Source: """"

SHA: """"

commit-msg File: """"
[1111-pre-commit-msg-test 4f347d4] add .idea
5 files changed, 189 insertions(+)
create mode 100644 .idea/fast.iml
create mode 100644 .idea/misc.xml
create mode 100644 .idea/modules.xml
create mode 100644 .idea/vcs.xml
create mode 100644 .idea/workspace.xml
</code></pre>

<p>Basically, I can see, that my hook is being executed during the commit, but there are no arguments. There should be at least the first one.</p>

<pre><code>$ git --version
git version 2.17.2 (Apple Git-113)
</code></pre>

<p>Does anyone know, why it happened?
Thx :)</p>

<p>PS: I can see the same behaviour for <code>commit-msg</code> hook. (there is also one log msg from that)</p>
",4,10788397,,
53777516,2509587,12/14/2018 10:05,0,1249,<git><githooks><post-update>,Nothing happens on git pull hook (post-update),"<p>when I do a <code>git pull</code> on live server I'm logged in as root and so all modified or new files user and group are set to <code>root:root</code>.</p>

<p>I've tried this set up in my <code>post-update</code> hook file:</p>

<pre><code>OWNER=""example:example""
REPO_PATH=""/home/example/public_html""

cd $REPO_PATH || exit
unset GIT_DIR
FILES=""$(git diff-tree -r --name-only --no-commit-id)""
git merge FETCH_HEAD

for file in $FILES
    do 
    chown $OWNER $file
done

exec git update-server-info
</code></pre>

<p>When I run a <code>git pull</code> it just doesn't do anything.</p>
",4,2509587,,
53778092,8769328,12/14/2018 10:40,2,791,<vue.js><vuejs2><githooks><vue-cli-3>,gitHooks not working in nested package.json,"<p>My git hooks does't get triggered. I pretty sure the reason is, because my <code>package.json</code> file isn't on the same level as my <code>.git</code>. So my <code>.git</code> dir structure looks something like this:</p>

<pre><code>.git/...
.vscode/...
auth/...
core/...
www/package.json
www/scripts/verify-commit-msg.js
www/src/...
</code></pre>

<p>As you can see my package.json is nested inside my <code>www/</code> folder.</p>

<p>Within my `package.json, my gitHooks looks as follow.</p>

<pre><code>""gitHooks"": {
    ""commit-msg"": ""node scripts/verify-commit-msg.js""
  }
</code></pre>

<p>Additional Note: It works fine if my <code>package.json</code> is on the same level as my <code>.git</code></p>

<p>I know 1 solution is to put my <code>www</code> in its own git repo. For now I don't want to do that. </p>

<p><strong>I am using vue cli 3</strong>, and I know they are using <a href=""https://github.com/Akryum/yorkie"" rel=""nofollow noreferrer"">yorky</a> for the githooks tooling.</p>
",0,8769328,,
38112674,1194050,6/30/2016 1:43,1,1219,<gitlab><githooks><gitlab-omnibus>,gitlab pre-receive hook python import error,"<p>the following is my githook:</p>

<pre><code>import os
print 'hi from draj pre-receive githook'
import gitlab, subprocess
</code></pre>

<p>When I ssh into my gitlab ubuntu instance and run it, it correctly prints 'hi from draj pre-receive githook' and exits with success.</p>

<p>However when I push to the repository the githook is installed for, i get:</p>

<pre><code>remote:     import os, gitlab, subprocess
remote: ImportError: No module named gitlab
To https://gitlab.learningdollars.com/root/00-boilerplate-draj.git
 ! [remote rejected] master -&gt; master (pre-receive hook declined)
</code></pre>

<p>I looked at these two posts: <a href=""https://stackoverflow.com/questions/9037284/how-can-i-run-a-virtualenv-python-script-as-a-git-pre-commit-hook"">How can I run a virtualenv python script as a git pre-commit hook</a> and <a href=""https://stackoverflow.com/questions/30544625/remote-importerror-no-module-named-gitlab"">remote: ImportError: No module named gitlab</a> and they seem to suggest that the environment variables are the cause of the problem.</p>

<p>So I modified my githook to print the environment:</p>

<pre><code>import os
print 'hi from draj pre-receive githook'
print 'os.environ: ', os.environ
import gitlab, subprocess
</code></pre>

<p>So I ran my pre-receive hook directly on my gitlab instance and I got: </p>

<pre><code>hi from draj pre-receive githook
os.environ:  {'LANG': 'en_US.UTF-8', 'USERNAME': 'root', 'TERM': 'xterm-256color', 'SHELL': '/bin/bash', 'MAIL': '/var/mail/root', 'SUDO_UID': '[OBFUSCATED]', 'SUDO_GID': '[OBFUSCATED]', 'SUDO_COMMAND': '/var/opt/gitlab/git-data/repositories/root/00-boilerplate-draj.git/custom_hooks/pre-receive', 'LOGNAME': 'root', 'USER': 'root', 'HOME': '/home/ubuntu', 'PATH': '/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin', 'SUDO_USER': 'ubuntu', 'LS_COLORS': '[OBFUSCATED]'}
</code></pre>

<p>But, when I try to do a push that invokes the pre-receive hook I get:</p>

<pre><code>(venv)Govindas-MacBook-Pro:boilerplate_draj govindadasu$ git push origin master
Counting objects: 2, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (2/2), 284 bytes | 0 bytes/s, done.
Total 2 (delta 1), reused 0 (delta 0)
remote: hi from draj pre-receive githook
remote: os.environ:  {'HOME': '', 'GIT_DIR': '.', 'LD_LIBRARY_PATH': '', 'GL_ID': 'user-1', 'PATH': '/opt/gitlab/bin:/opt/gitlab/embedded/bin:/opt/gitlab/embedded/libexec/git-core:/opt/gitlab/embedded/libexec/git-core:/opt/gitlab/bin:/opt/gitlab/embedded/bin:/bin:/usr/bin'}
remote: Traceback (most recent call last):
remote:   File ""/var/opt/gitlab/git-data/repositories/root/00-boilerplate-draj.git/custom_hooks/pre-receive"", line 9, in &lt;module&gt;
remote:     import gitlab, subprocess
remote: ImportError: No module named gitlab
To https://gitlab.learningdollars.com/root/00-boilerplate-draj.git
 ! [remote rejected] master -&gt; master (pre-receive hook declined)
error: failed to push some refs to 'https://gitlab.learningdollars.com/root/00-boilerplate-draj.git'
</code></pre>

<p>But what those articles don't provide is how exactly am I supposed to modify the environment using the pre-receive githook in order to be able to import gitlab? </p>
",0,1194050,,
70879807,1872177,1/27/2022 13:58,-1,545,<git><github><gitlab><githooks>,how to change in github repository hooks to pre-push,"<p>I have only access to the git repository, I want to show a message to the user before pushing to the git repo(pre-push). what type of changes I need to do in the hooks folder.</p>
",2,1872177,,
70892216,10170926,1/28/2022 10:27,1,88,<git><scripting><hook><githooks><pre-commit>,Ignore specific file line during pull/push git operations,"<p>I'm here to ask a question related to topic discussed <a href=""https://stackoverflow.com/a/20574486/10170926"">here</a>.
In this example @Mike shown how to add pre-hook script in order to ignore
Java code lines with comment &quot;//no commit&quot;.</p>
<p>I've done the same thing in order to ignore
.xml file lines: in particular I mark each line with this comment &quot;&lt;!--no commit--&gt;&quot; and used a pre-commit script that doesn't allow to commit if a change is made on line marked with specific comment.</p>
<p>Now, I want to ask to the community if it is possible to implement a pre-commit hook script that allow me to do the commit without the change made on lines marked with comment and without resetting them.</p>
",0,10170926,0,0
38165711,5675902,7/3/2016 0:38,1,1292,<git><githooks>,githook to validate newly created branch names,"<p>Does anyone know if there's a githook that will hook into the creation of a branch in order to reject the branch name before it's actually created?</p>

<p>I currently use commit-msg to validate the branch name upon commits, but i'm looking for a way to avoid having to rename a branch if it doesn't match our policy (regex).</p>
",0,5675902,,
70919065,2601357,1/30/2022 21:24,-1,158,<flask><github><githooks>,Automatic scheduled git pulls on a GCP server running a flask website,"<p>I had a few questions about automatic git pulls on a remote server. I am aware there are several questions like this, but I wasn't sure what steps to take exactly, and I don't want to mess up my current setup with a mistake :/</p>
<p>To wit, the environment is on a Google Cloud VM. I am running a flask-based website that renders each page with the <code>render_template()</code> function.</p>
<p>The website resides inside its git folder, i.e. I never set up a bare repo and copied stuff. When I set it up a couple years ago, I just did <code>git clone repo-url</code>, then inside the repo directory, did <code>flask run</code>. Then I set up nginx to connect to the site's socket created with uwsgi inside the repo directory.</p>
<p>--</p>
<p>It has been working fine. I make changes locally to the content, push to github, then log in to the VM, and perform a <code>git pull</code>.</p>
<p>I want to do this automatically. I tried adding a cron job to do this, where the job basically ran a script, and the script did the git pull. Script content was:</p>
<pre><code>cd /repo
git pull
</code></pre>
<p>Running the script in the server worked, but cron never managed to do the pull.</p>
<p>--</p>
<p>I have been reading about web hooks, and there is a bunch of stuff about <a href=""https://stackoverflow.com/questions/49394510/setting-up-a-git-hook-to-automatically-git-pull-on-a-remote-server"">post-receive hooks</a>, <a href=""https://stackoverflow.com/questions/43540495/git-automatic-pulling-in-server"">post-update hooks</a>, and making bare repos. At this point, I am embarrassed to say I have no idea what I should be doing.</p>
<p>Any help is greatly appreciated.</p>
",0,2601357,0,0
70940674,8775169,2/1/2022 12:35,0,907,<package.json><githooks><linter><husky><git-husky>,How to use hooks in workspaces with husky in root package.json?,"<p>I have to run a command which validates schema during pre-commit using husky hooks.</p>
<p>Husky is included in package.json of root directory like this:</p>
<pre><code>&quot;workspaces&quot;: {
        &quot;packages&quot;: [
            &quot;apps&quot;,
            &quot;vendors/*&quot;
        ],
        &quot;nohoist&quot;: [
            &quot;**/husky&quot;,
            &quot;**/husky/**&quot;
        ]
}
</code></pre>
<p>In sub-directories it is defined as this:</p>
<pre><code>&quot;devDependencies&quot;: {
    &quot;husky&quot;: &quot;^1.3.1&quot;
},
&quot;husky&quot;: {
    &quot;hooks&quot;: {
        &quot;commit-msg&quot;: &quot;yarn commitlint -E HUSKY_GIT_PARAMS&quot;,
        &quot;pre-commit&quot;: &quot;yarn lint&quot;,
        &quot;post-merge&quot;: &quot;git diff-tree -r --name-only --no-commit-id ORIG_HEAD HEAD | grep --quiet config.json &amp;&amp; cd .. &amp;&amp; yarn compose&quot;
    }
},
</code></pre>
<p>How can I define a hook in the root directory like it is defined in the sub-directory ?</p>
<p>Thanks.</p>
",0,8775169,,
38230400,5628302,7/6/2016 17:42,1,1631,<git><bash><githooks>,Is there a way to programmatically add some default message to git commit?,"<p>I am trying to auto generate my commit message title fetching directly from Phrabricator or Jira.</p>

<p>I have a bash script that does a http call and get the title. </p>

<p>I know you can have a commit template for each commit message.</p>

<p>eg.</p>

<p><code>~/.gitconfig</code></p>

<pre><code>[commit]
    template = ~/.gitmessage
</code></pre>

<p><code>~/.gitmessage</code></p>

<pre><code>Some template for user
</code></pre>

<p>But is it possible to dynamically generate commit template using bash or python scripts?</p>
",0,5628302,,
53804764,4249424,12/16/2018 17:30,3,1377,<bash><git><githooks><git-commit><commit-message>,git commit: pre-populate commit subject but still prompt for a commit message,"<p>Let's say I'm working on a branch and I run <code>git commit</code>.  I am then taken to the commit message prompt where I may enter a commit subject and message.  What I'm looking for is a way to have the commit subject pre-populated while still being able to write the commit message manually.</p>

<p>This question is distinct from <a href=""https://stackoverflow.com/questions/5894946/how-to-add-gits-branch-name-to-the-commit-message"">this one</a> in that I want the commit subject to be populated but still want to be prompted to enter a commit message, i.e. running <code>git commit -a</code> in git bash results in something like: </p>

<p><strong>Edit:</strong> improper usage of githooks was preventing the accepted answer from the linked question from working.  So, the questions are not distinct and this can be marked as a duplicate.</p>

<p><a href=""https://i.stack.imgur.com/ObO4Q.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ObO4Q.png"" alt=""example in git bash""></a></p>

<p>I'm currently trying to pre-populate the commit subject with a branch name, but in the future I may want that text to be something else.  As such, a general solution (not specifically for branch names) would be preferred. </p>
",3,4249424,0,0
71013874,1209486,2/7/2022 5:22,1,715,<git><githooks>,pre-push hook based on tool output is not pushing code when successful,"<p>I have a GitHub repo that I use to deploy to Platform.sh, which is a website hosting PaaS.</p>
<p>If I am pushing to my testing branch, I want to sync the environment on Platform.sh before pushing so that my tests run on a clean copy of my database/files.</p>
<p>So, based on the <code>.git/hooks</code> example, I added a <strong>pre-push</strong> hook.  When I push, if I am pushing to the testing branch, then I want to run the sync command (<code>platform environment:synchronize data -y</code>), and if the sync is successful, I want to push.</p>
<p>I have tested my hook and it works correctly when I am not on the testing branch or when the sync command returns an error (such as when syncing fails because another sync is already in progress).</p>
<p><strong>However, when the sync command is successful, the hook completes (I see the message &quot;Pushing to github!&quot;), but the files are not actually pushed to github.</strong></p>
<p>If I comment out the sync command to test the logic of the hook, then the files are pushed to github as I expect.</p>
<p>How can I get the code to actually push when the sync command is successful?</p>
<p><strong>Reference</strong></p>
<p>The sync command prints out a few hundred lines of text, the final line of which is <code>post_deploy processing complete!</code> if the sync is successful.</p>
<p>Here's my <strong>pre-push</strong> hook:</p>
<pre><code>#!/bin/bash

# We need to fail if platform.sh is busy.
set -eo pipefail

# An example hook script to verify what is about to be pushed.  Called by &quot;git
# push&quot; after it has checked the remote status, but before anything has been
# pushed.  If this script exits with a non-zero status nothing will be pushed.
#
# This hook is called with the following parameters:
#
# $1 -- Name of the remote to which the push is being done
# $2 -- URL to which the push is being done
#
# If pushing without using a named remote those arguments will be equal.
#
# Information about the commits which are being pushed is supplied as lines to
# the standard input in the form:
#
#   &lt;local ref&gt; &lt;local sha1&gt; &lt;remote ref&gt; &lt;remote sha1&gt;
#
# This sample shows how to prevent push of commits where the log message starts
# with &quot;WIP&quot; (work in progress).

# git_remote =&quot;$1&quot;
git_origin_url=&quot;$2&quot;

z40=0000000000000000000000000000000000000000

# https://stackoverflow.com/a/21434677
current_branch=$(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')
testing_branch='mytestbranch'
github_url='github:myorg/repo.git'

while read local_ref local_sha remote_ref remote_sha
do
    if [ &quot;$local_sha&quot; = $z40 ]
    then
        # Handle delete
        :
    else
        if [ &quot;$remote_sha&quot; = $z40 ]; then
            # New branch, examine all commits
            range=&quot;$local_sha&quot;
        else
            # Update to existing branch, examine new commits
            range=&quot;$remote_sha..$local_sha&quot;
        fi

        if [ &quot;$current_branch&quot; == &quot;$testing_branch&quot; ] &amp;&amp; [ &quot;$git_origin_url&quot; == &quot;$github_url&quot; ]; then
            # Synchronize data from platform.sh
            echo &quot;Starting data sync for $current_branch due to $github_url&quot;
            # Also capture stderr: 2&gt;&amp;1.
            sync_output=&quot;$(platform environment:synchronize data -y 2&gt;&amp;1)&quot;
            test_complete_message=&quot;post_deploy processing complete!&quot;
            if [ &quot;$(echo &quot;$sync_output&quot; | grep &quot;$test_complete_message&quot;)&quot; ]; then
                echo &quot;Data sync complete for $current_branch&quot;
            else
                echo &quot;PUSH SYNC ERROR: $sync_output&quot;;
                exit 1;
            fi
        fi
    fi
done

# Go ahead and push!
echo &quot;Pushing to github!&quot;
exit 0
</code></pre>
<p>Script output when executed:</p>
<pre><code>Starting data sync for mytestbranch due to github:myorganization/repo.git
Connection to github.com closed by remote host.
Data sync complete for mytestbranch
Pushing to github!
</code></pre>
<p>I'm not sure what this line &quot;Connection to github.com closed by remote host.&quot; indicates in this context, but otherwise everything appears fine.</p>
",3,1209486,,
73233477,14087256,8/4/2022 9:29,0,34,<git><git-commit><githooks><pre-commit-hook>,Git re-do the last add and commit,"<p>Currently I am implementing some git hooks that clears my notebook cells when committing. Unfortunately, after committing the script fails (because the files are cleaned and interpreted as new files, which makes sense). Thus, I need to re-do the add &amp; commit command for the exact same files.</p>
<p>Is there any way to automate this? Or at least how can I re-do the same add and commit of the same files again.</p>
",5,14087256,,
56501190,986696,6/7/2019 21:03,2,128,<git><git-merge><githooks><git-stash>,Is there a way to `git stash` every file in the project (not just changes)?,"<p>I've run into an issue where I believe the best solution would be to capture the current state of the project and apply it to a new commit in a new branch.</p>

<p><strong>Here's an overview of my git workflow:</strong></p>

<ul>
<li>I keep a local copy of our origin/master branch on my machine which I'll refer to as local/master.</li>
<li>I use local/master for comparison when debugging changes in my own local/feature branches.  For instance, if I notice a bug in my local/feature branch I might switch back to the local/master branch to see if it reproduces there.  This lets me know if the bug was pre-existing or caused by my own changes.</li>
<li>I also use local/master as an intermediate staging branch when performing merges between origin/master and my local/feature branches.  This prevents the source branch (master) from being a moving target in case I need to abandon the merge and start over.</li>
<li>I only update local/master by pulling from origin/master.  This is done whenever other devs merge their own changes into origin/master.</li>
<li>I submit my code by pushing from local/feature to origin/feature and submitting a merge request from origin/feature into origin/master.</li>
</ul>

<p><strong>Here are the chronological steps that led to this situation:</strong></p>

<ol>
<li>I forked a branch from local/master as local/feature1.</li>
<li>I made several commits to local/feature1.</li>
<li>A feature was merged into origin/master which moved some .pem files (public/private keys) from one directory to another.</li>
<li>A hook was added to origin (a private Gitlab instance) which prevented any subsequent .pem files from being checked in.</li>
<li>I pulled from origin/master into local/master.</li>
<li>I merged from local/master into local/feature1.</li>
<li>I made several more commits to local/feature1.</li>
<li>I attempted to push my code from local/feature1 into origin as origin/feature1.</li>
<li>origin complained that I wasn't allowed to check in .pem files.</li>
</ol>

<p>I believe this is happening because the commit history in local/feature1 now contains a merge commit which included the .pem file changes.  This file was added to origin/master before the hook was implemented, so it wasn't subject to the hook restrictions.  However, the merge commit into my branch is being submitted afterwards along with my code changes, so it's getting flagged by the hook.</p>

<p>At this point I'd like to remove the .pem files from local/feature1's commit history without actually removing the files.  Rebasing and squashing the commits at this point won't solve the problem since the .pem files are already there.  Deleting the .pem files won't help since they actually need to be in the project (unrelated story).  Reverting my branch to an unmerged state isn't an option either since the uploaded origin/feature would then be too far out of date with origin/master for the review to make sense.</p>

<p>The obvious solution seems to be:</p>

<pre><code># Copy current state of the project to a backup directory
cp -r . ../backup
rm -rf ../backup/.git

# Reset project to latest official state
git checkout local/master
git pull

# Regenerate local branch so the merged changes aren't included as local commits
git branch -D local/feature1
git checkout -b local/feature2

# Copy the desired project state back in and commit it
cp -rf ../backup/. .
git add --all
git commit -m ""Regenerating feature branch""
rm -rf ../backup

# Upload without being restricted by hook
git push --set-upstream origin feature2
</code></pre>

<p>I feel like there ought to be a way to do this natively with git without the need to mess with the file system directly.  Is there some magic trick to doing this?  Perhaps via <code>git stash</code>?</p>
",2,986696,,
49792359,9635035,4/12/2018 9:03,15,7673,<git><githooks>,Can git hooks add a version number to my code files?,"<p>I have a git question to which the answer might be ""don't do it that way"" but here goes:
I want to have a little dialog box in my code (Matlab as it happens) which displays the current version. This is mostly for my benefit (as developer) to check what version the user is running for support. This is fairly standard and I have Matlab code to read the version from a text file and display it.
The trick I want to achieve is to have Git automatically update <code>version.txt</code> on each commit.</p>

<p>The code I am using is a shell script in .git/hooks/pre-commit that essentially dumps the output of <code>git describe</code> to the file <code>version.txt</code> (with some formatting). I have tags for major and minor versions, and <code>git describe</code> essentially gives that info, plus the number of commits since the last tag.</p>

<p>The problem is that if I use the pre-commit hook, then <code>version.txt</code> points to the commit before the one that is committed, but if I use the post-commit hook, then <code>version.txt</code> is edited after the commit is made and only can be committed to a new commit, which edits <code>version.txt</code> again... </p>

<p>I could perhaps use a script in post-commit that adds <code>version.txt</code> and then does a <code>git commit --amend --no-edit</code>, but this seems a bit messy. I also don't know if the post-commit hook would be run on the amend, leading to an infinite loop.</p>

<p>The pre-commit hook can to edit the code files, and commit them, but doesn't know the commit description. Is there a way around this? Perhaps another hook that I haven't found? Could I make the post-commit hook run commit without causing an infinite loop, and if I could, is it a good idea?</p>

<p>Is there a better way of doing this?</p>

<p><strong>Edit after comment</strong>: Note that my users do not have Git installed. They download a source code bundle from Gitlab and unzip to run the Matlab code. Hence any solution cannot run Git on the fly but must get the version ID (in whatever from) from Git and write it into a (committed) file somehow.</p>
",6,9635035,0,0
67396913,9815351,5/5/2021 7:32,0,44,<git><devops><githooks>,Git post-receive nor post-update hooks aren't executed,"<ul>
<li>I use these hooks on my git server (another computer from my local network).</li>
<li>Yes, files are executable.</li>
<li>Yes, partition, where git repo is situated, doesn't have an noexec flag.</li>
<li>Yes, I'm sure that I push new files and my server have something to update.</li>
<li>Yes, script body code works properly.</li>
<li>Yes, my files are named properly.</li>
</ul>
<p><a href=""https://i.stack.imgur.com/fbrsW.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/fbrsW.png"" alt=""hook files name"" /></a></p>
<p>My system - server - Ubuntu, connection to the git server via HTTPS</p>
",2,9815351,,
49796691,6638318,4/12/2018 12:33,0,291,<python><git><pip><githooks>,Python Wheel (pip install) with Git hooks,"<p>I'm trying to move some git hooks into place as part of a pip install target command, but pip seems to refuse and if I use upgrade, it blows away the git folder. I think <a href=""https://github.com/pypa/pip/issues/4230"" rel=""nofollow noreferrer"">this Github issue</a> is the problem, but just trying to confirm.</p>
",0,6638318,,
31977471,3814394,8/13/2015 0:11,2,489,<git><groovy><githooks><smartgit>,Calling Groovy script as a pre-commit hook on my subrepository using smartgit broken,"<p>Calling a pre-commit groovy script independently elsewhere (not when located in my sub-repo) worked (using windows command line). I am using Windows 7.</p>

<p>But, calling a groovy script when it is located within a sub-repository fails with following error </p>

<blockquote>
  <p>Caught: java.net.MalformedURLException: unknown protocol: c </p>
</blockquote>
",0,3814394,,
31980034,3311276,8/13/2015 5:20,1,195,<git><githooks><git-checkout>,is it possible to run a command before git checkout,"<p>every user is logged in with credentials working on a local repo he created branch.</p>

<p>So if that user's path is shared with other anyone probably can navigate to that path and type <code>git checkout  .</code> that would undo all the changes done by the user sitting on different machine with different login but having access to same path where local repo is.</p>

<p>So I want to be able to reject the checkout if the user executing the <code>git checkout</code> command is different then the one who created the local repo at that path. So far I found git hook that executes post-checkout</p>

<p>i.e. checkout succeeded. and do the other things.
So anyone have any idea how this can be achieved to just execute the command before checkout to just reject if user name doesnt matches ?</p>
",4,3311276,0,0
14453411,1843943,1/22/2013 7:17,14,10894,<git><github><githooks>,Setting up post-receive hook for bare repo,"<p>I have a bare repo set up in my ubuntu server.</p>

<p>After I push to my bare git repo to the server:</p>

<pre><code>$ git push origin master
</code></pre>

<p>I want the contents of my non bare repo to be updated with the latest push as shown where the non bare repo is my actual work directory named workfiles.</p>

<pre><code>$ cd /central/workfiles
$ git pull
$ exit
</code></pre>

<p>I have heard about the post-receive hook but do not know how to set up the same.
How can i achieve the same.</p>
",0,1843943,0,0
31985820,3311276,8/13/2015 10:37,1,1830,<git><githooks><git-checkout>,post-checkout git hook not working,"<p>I have git checkout hook called post-checkout</p>

<pre><code>$ ll  /usr/local/Cellar/git/2.3.5/share/git-core/templates/hooks/post-checkout 

-rwxr-xr-x  1 root  wheel  375 Aug 13 14:11 /usr/local/Cellar/git/2.3.5/share/git-core/templates/hooks/post-checkout
</code></pre>

<p>the content of post-checkout is:</p>

<pre><code>#!/usr/bin/env bash

echo ""Hello from post-checkout""

# Delete .pyc files and empty directories from root of project
cd ./$(git rev-parse --show-cdup)

# Clean-up
find . -name "".DS_Store"" -delete

NUM_PYC_FILES=$( find . -name ""*.pyc"" | wc -l | tr -d ' ' )
if [ $NUM_PYC_FILES -gt 0 ]; then
    find . -name ""*.pyc"" -delete
    printf ""\e[00;31mDeleted $NUM_PYC_FILES .pyc files\e[00m\n""
fi
</code></pre>

<p>so when I cloned my repo i passed the path of templates to template flag like this:</p>

<pre><code>$ git clone  https://sanfx@bitbucket.org/sanfx/git-maildiff.git --template=/usr/local/Cellar/git/2.3.5/share/git-core/templates/
</code></pre>

<p>but after i clone and CD to that cloned directory of git-maildiff and I try checkout I get nothing .</p>

<pre><code>$ git clone  https://sanfx@bitbucket.org/sanfx/git-maildiff.git --template=/usr/local/Cellar/git/2.3.5/share/git-core/templates/
Cloning into 'git-maildiff'...
remote: Counting objects: 239, done.
remote: Compressing objects: 100% (215/215), done.
remote: Total 239 (delta 109), reused 0 (delta 0)
Receiving objects: 100% (239/239), 72.90 KiB | 0 bytes/s, done.
Resolving deltas: 100% (109/109), done.
Checking connectivity... done.
$ git checkout
Your branch is up-to-date with 'origin/master'.
</code></pre>

<p>but if i ran my executable post-checkout branch I get the Hello from post-checkout printed in shell.</p>

<p>so what is wrong where ?</p>
",2,3311276,,
67532646,7908914,5/14/2021 10:14,0,63,<git><automation><githooks>,What Git hook is invoked when changes are pulled into an empty repository?,"<p>I'm trying to understand how to work with Git local hooks.</p>
<p>My goal is to compare the current state of the branch with received updates, and then execute some shell command if a certain file was changed.</p>
<p>I'm using <code>git diff-tree</code> command to get the difference.</p>
<p>I have no problem with <code>post-checkout</code> hook. As far as I understand, <code>post-checkout</code> hook invokes when a repository is cloned or a branch is switched. I need it only for cloning, and it works fine.</p>
<p>But <code>post-merge</code> hook is triggered only if the repository already contains some files. If I clone an empty repository, then push some files to the origin and pull changes into the cloned repository, the hook is simply ignored.</p>
<p>But I don't know in advance whether a cloned repository will be empty or will contain some files, so I need to handle both cases.</p>
<p>Is there a specific Git hook that will work when changes are pulled into an empty repository, or I should handle the problem in some other way?</p>
",5,7908914,0,0
14467691,1491446,1/22/2013 20:46,0,1441,<php><git><githooks><post-commit><post-commit-hook>,Running a git post-commit hook,"<p>I'm running MAMP locally. I have a php script that I use to build a web site, to generate static HTML files, that I then push to a web server.</p>

<p>This process acts a lot like Jekyll on github pages.</p>

<p>For now, I simply make changes to Markdown files (my content) and then hit a local url, localhost/mysite/build, to which generates the html files. Simple.</p>

<p>I do have git installed locally to version the PHP script itself, along with the markdown files.</p>

<p>Ideally I would like to create a post-commit hook that will simply ""ping"" that build URL to allow it do run.</p>

<p>A couple things. I have been trying but the post-commit doesn't run the URL.
I would like to use PHP in the post-commit file, is that possible? I don't need any validation or anything yet, just simply want to call the URL to have the process run when I commit.</p>

<p>I have done the chmod to make sure the script is executable.</p>

<p>The post-commit file is named 'post-commit', no extension.</p>

<p>I would think I could just add one simple line, like a file_get_contents(myurl), or something close to that.</p>

<p>I have been googling for a few hours now and found things that are close but not exactly right. Its really very simple, just sort of a noob with git hooks.</p>

<p>Thanks.</p>
",0,1491446,,
67556892,6089612,5/16/2021 12:51,1,142,<git><githooks><git-post-receive>,"Run git post-receive hook as user1, and checkout as user2","<p>I'm setting up a deploy-on-git-push process on a remote Debian server.  It is basically the common approach of having a bare repository with a post-receive hook which does a checkout to the web server's docroot, more or less.</p>
<p>I've used slightly simpler variations of this set up successfully for years, but this time around I'm complicating it by trying to separate ownership of the git repo and the site files between 2 different users.  I don't want the user who can SSH in (the git push happens over SSH) to have write perms to the site, and vice-versa (the site user shouldn't have write perms to the git repository).</p>
<ul>
<li><p>I have 1 user, let's call her <code>git-user</code>, who owns a bare git repository at <code>/var/gitrepos/my_site.git</code>, and this user is the only user allowed to connect over SSH;</p>
</li>
<li><p>I have a 2nd user, say <code>site-user</code>, who should own the checked-out files at <code>/var/www/site</code>;</p>
</li>
</ul>
<p>I push over SSH to the repo, and this means any post-receive hook runs as the user I SSH in as - <code>git-user</code> in this case.  So the post-receive hook can't do the checkout itself, as the site files would end up being owned by <code>git-user</code>, not <code>site-user</code>.</p>
<p>So my post-receive simply touches a trigger file, <code>/var/run/deploy</code>.  A separate script is run from <code>site-user</code>'s cron frequently, eg every minute, looking for that file.  If it sees it, it does a checkout to <code>/var/www/site</code>.  The relevant part of that script looks something like:</p>
<pre><code># Running as site-user
mkdir $NEW \
  &amp;&amp; cd $NEW \
  &amp;&amp; git --work-tree=. --git-dir=/var/gitrepos/my_site.git checkout -f www
</code></pre>
<p>However this fails with:</p>
<blockquote>
<p>fatal: Unable to create '/var/gitrepos/my_site.git/index.lock': Permission denied</p>
</blockquote>
<p>This is true, <code>site-user</code> - intentionally - does not have write permission to <code>/var/gitrepos/my_site.git</code>.  I am not sure why doing a checkout to a different directory <em>needs</em> to create a lockfile in the repo, but apparently it does, and I guess I shouldn't fight that.</p>
<p>So what are the options?</p>
<ul>
<li><p><code>git clone</code> doesn't need write perms to the repo, so this works, but it means I get the whole <code>.git/</code> directory.  I have to remove that, or configure the web server to disallow access, both extra steps I'd rather avoid.  Not a big deal obviously but this still feels wrong;</p>
</li>
<li><p>I could add both users to a group and set up <code>g+w</code> etc, but this voids the whole point of this approach (to deny each user write perms to the other's files);</p>
</li>
<li><p>I guess I could mess with <code>sudoers</code>, and allow one user to run a command as the other user, but again this feels like I am just chipping away at the separation I'm trying to enforce?</p>
</li>
<li><p>I can do a <code>git clone</code> to <code>$TMP_DIR</code>, followed by a <code>git checkout --git-dir=$TMP_DIR/.git/</code>, but this seems super clunky, as well as taking 2x as long;</p>
</li>
</ul>
<p>Any other neat options I am missing?</p>
<h3>UPDATE</h3>
<p>As suggested by @Matt below I tried setting <code>GIT_INDEX_FILE</code> to a writeable (by <code>site-user</code>) file outside the repository.  This does seem to get past the first problem, but still fails with:</p>
<blockquote>
<p>error: Unable to create '/var/gitrepos/my_site.git/HEAD.lock': Permission denied</p>
</blockquote>
<p>I don't understand why a checkout to a new location needs to modify anything in the repository?</p>
",2,6089612,,
14471408,177275,1/23/2013 2:17,1,511,<git><githooks>,Using GIT hooks to modify release notes,"<p>We have a GIT repository with many contributors, and we constantly run into merge conflicts with the release notes file. Is there a good way to prevent them?</p>

<p>I was thinking of a git post-upload server hook that would run run on master branch only, and use a script to extract some magic keyword from the commit message and append following text to the release notes file. Are there any tools for that? Is that a good approach?</p>
",0,177275,0,0
67581164,7804144,5/18/2021 6:43,2,810,<git><githooks>,Prepend partial branch name to commit message,"<p>The current branch name convention looks like this:</p>
<pre><code>feature/NEU-123
</code></pre>
<p>I try to create a git hook to prepend a commit message, that the commit looks like this:</p>
<pre><code>NEU-123: commit message
</code></pre>
<p>I have no experience in creating scripts like this. That's why I don't have a starting point and need to try out your approaches.</p>
<p>I've looked up a few Stackoverflow entries but I can't find anything about this specific naming convention.
Also it would be great, if I am on the master branch, or any branch with just a single word branch name, that the complete branch name is prepended.</p>
<p>Already thanks for your help.</p>
",3,7804144,0,0
67588350,9172066,5/18/2021 14:30,8,383,<git><githooks><git-cherry-pick><post-commit-hook>,Why doesn't `git cherry-pick` (without `--no-commit`) run my post-commit hook?,"<p>How can I trigger a post-commit hook with the command <code>git cherry-pick &lt;commit&gt;</code>?</p>
<p>What I've tried:</p>
<ul>
<li>I tried the command <code>git commit -m '...'</code> . It triggered the post-commit hook normally.</li>
<li>In the githooks document, there are no hooks related to cherry-pick.</li>
<li>After viewing the source code of Git, I found it uses <code>git merge</code> in some cases, and <code>git commit</code> in others. But I'm not sure when to use which command.</li>
</ul>
<p>My questions are:</p>
<ol>
<li>Why don't post-commit hooks work when I use <code>git cherry-pick</code>?</li>
<li>Is there a hook that cherry-pick will run?</li>
</ol>
",0,9172066,0,0
67590221,13597384,5/18/2021 16:22,3,1605,<git><merge><git-merge><githooks>,Git pre-merge-commit hook : How do I ignore a file during a merge?,"<h1>Context</h1>
<p>I'm working in a complex git flow where some specific branches get specific submodules and some specific config files that require to be committed, but must not be merged.</p>
<p>These are few files but it is too dangerous to let anyone merge branches without being careful not to merge those.</p>
<p>In order to make it automatic, I worked on pre-merge-commit hooks, both at server and local side.</p>
<p>In case of conflict, I make use of <code>.gitattributes</code> and <code>git/config</code> files to resolve the conflict with a custom merge driver. It works like a charm.</p>
<h1>Problem</h1>
<p>However, I'm struggling to make it work when there is no conflict. In this case, the merge is carried out successfully and my pre-merge-hook is triggered. It does its magic and then exit successfully. Though, for some reason, git re-do some merging stuff after the hook which make it useless. Here is the behavior I'm witnessing :</p>
<p><strong>before the merge</strong></p>
<p>I got two branches, let's say <code>A_current</code> and <code>B_incoming</code>.</p>
<p>Both got a file I don't want to be merged. This file is called <code>do_not_merge_me</code>. At some point, <code>do_not_merge_me</code> content changed in <code>B_incoming</code>. Let's say it went from <code>contentA</code> to <code>contentB</code></p>
<p><strong>during the merge</strong></p>
<p>What I see when I'm merging <code>B_incoming</code> into <code>A_current</code> is :</p>
<ul>
<li>The merge goes on, and adds files in the staged area, including <code>do_not_merge_me</code>.</li>
<li>The merge succeed, so it triggers my hook</li>
<li>my hook finds <code>do_not_merge_me</code> in the staging area and remove it from the staging area (at the end, it's a <code>git reset do_not_merge_me</code> followed by a <code>git checkout do_not_merge_me</code>)</li>
<li>my hook ends properly, <code>do_not_merge_me</code> is not in the staging area anymore</li>
<li>Git does some dark magic : it redo a merge and re-stage <code>do_not_merge_me</code></li>
<li>Git validate the commit, I see this added in my console :</li>
</ul>
<pre><code>Merge made by the 'recursive' strategy.
 do_not_merge_me               | 2 +-

</code></pre>
<ul>
<li>Weirdly, after the merge is done, I got the correct versions of the files in my staged area (I'd never seen anything in the staging area after a merge, before this)</li>
</ul>
<h1>Question</h1>
<p>The git documentation, available here <a href=""https://git-scm.com/docs/githooks#_pre_merge_commit"" rel=""nofollow noreferrer"">https://git-scm.com/docs/githooks#_pre_merge_commit</a>, states the pre-merge-commit is triggered after the merged is successfully handled and before the commit is validated.</p>
<p>My questions are:</p>
<ol>
<li>why do I get the correct version in the staged area ?</li>
<li>Is there any way to achieve what I'm trying to do ?</li>
<li>Why is git doing some merging stuff after the hook ? Is it a bug ?</li>
</ol>
",0,13597384,,
49838135,1086346,4/15/2018 3:08,1,222,<git><githooks>,why is checkout -f the right thing to put in a post-receive hook?,"<p>I have an account on Dreamhost and they have instructions on using Git to track files in a custom WordPress theme. Their instructions, at, <a href=""https://help.dreamhost.com/hc/en-us/articles/227816388-Using-Git-with-DreamPress"" rel=""nofollow noreferrer"">https://help.dreamhost.com/hc/en-us/articles/227816388-Using-Git-with-DreamPress</a>, are the same as many other websites that suggest same.  For example, <a href=""http://git-memo.readthedocs.io/en/latest/deploy.html"" rel=""nofollow noreferrer"">http://git-memo.readthedocs.io/en/latest/deploy.html</a></p>

<p>You put in an executable script in a bare repo's <code>hooks/post-receive</code> directory and it calls a git ""checkout -f"".  Here is the example script</p>

<pre><code>#!/bin/sh
GIT_WORK_TREE=/home/user/theme-directory git checkout -f  
</code></pre>

<p>Here is what I don't understand. Why ""checkout -f""?  That only changes the name of the branch being tracked, it does not bring it up to date. Shouldn't there be a pull (or fetch) the new content? Does checkout have more power than I undersand?</p>
",0,1086346,0,0
32015935,220248,8/14/2015 17:49,0,172,<git><workflow><githooks>,Good idea to have Git auto pull master into other remotes?,"<p>My team has been looking at possible ways of reducing integration issues. </p>

<p>Currently we have a very simple workflow, with a stable and running master branch, and individual branches where new features are built and tested. We try to keep these as small as possible, and move them through into master as quickly as possible. Nothing goes into master until it's tested and verified to be working. I believe this is reasonably standard practice.</p>

<p>We do have issues occasionally where 2 closely linked features might break each other, and we don't know this until they've been signed off and merged together. While we do try to keep our remotes up-to-date with master, being a human process it's prone to someone forgetting it (and issues don't just arise from pull requests with merge conflicts). It also means anything awaiting testing won't get much (if any) attention from the developers, so if 2 conflicting features are awaiting testing at the same point, odds are once one gets merged into master, it still won't be available in the other.</p>

<p>I was thinking of setting up some git hooks to automatically pull main into any open remote branches every time a new features get's merged in. While not fail proof (eg. a tester moving onto a new feature will not give enough time for our automated builds to complete), it could help minimise the issues by keeping all remotes as close in sync as possible, and it would put us in a state of a constantly moving master head (a branch being merged into master is effectively master + new feature at this point).</p>

<p>Before I went through implementing this I was wondering had any experience running a similar setup, or could think of any critical flaws with it?</p>
",0,220248,,
67674900,1518217,5/24/2021 15:35,5,970,<python><visual-studio-code><virtualenv><githooks>,Activate virtualenv for git command in Visual Studio Code,"<p>I have a Python project on a Vagrant virtual machine (ubuntu 18.04.5 LTS) and I use Visual Studio Code to develop on it with the Remote SSH extension.</p>
<p>When I launch <code>git commit</code> I need to run it inside a virtual environment because there is a git hook that needs it.</p>
<p>In the workspace config file I have set <code>&quot;python.pythonPath&quot;</code> key, but it seems that is ignored from git.</p>
<p>How can I solve it? Thanks</p>
",3,1518217,0,0
67698358,8816796,5/26/2021 4:04,1,381,<bash><git><githooks><pre-commit-hook>,Access the list of the staged files in a precommit hook,"<p>I have a precommit hook that bumps up the software version on commits. However, I'd like to skip this functionality when only, say, <code>CHANGELOG.md</code> is updated. I tried:</p>
<pre class=""lang-sh prettyprint-override""><code>diffs=&quot;$(git diff --name-only)&quot;
if [[ $diffs == &quot;CHANGELOG.md&quot; ]]
then
    # echo 'no bump'
else
    # echo 'bump'
    # code that bumps the version
fi
</code></pre>
<p>But upon some inspection, the <code>diffs</code> variable is in fact blank even when <code>CHANGELOG.md</code> is staged. So it always evaluates the <code>else</code> statement. I was wondering if the diff is somehow accessible within a hook.</p>
",1,8816796,,
14517265,421010,1/25/2013 7:25,4,192,<git><git-rebase><githooks>,How can I determine which commits were squashed in git?,"<p>I'm writing a script which keeps reference of some commits in a repository, but if some commits gets squashed then references become invalid. I know that there is <code>pre-rebase</code> hook, but no <code>post-rebase</code> hook, so is there a way to determine which commits get squashed together?</p>

<p>For example, before rebase I had this history:</p>

<pre><code>cf79121 Refactor the trim_file_name method. Closes #1965.
82ed26a Updated dependencies and project versions.
8047297 Updated Node.js implementation package information.
b2b727c Added ""finished"" callback, which is called for each ""completed"" or ""failed"" event.
</code></pre>

<p>After rebase I got:</p>

<pre><code>cf79121 Refactor the trim_file_name method. Closes #1965.
9b7ac26 Updated dependencies, project versions, and node.js package information.
b2b727c Added ""finished"" callback, which is called for each ""completed"" or ""failed"" event.
</code></pre>

<p>How can I find out that <code>82ed26a</code> + <code>8047297</code> = <code>9b7ac26</code>?</p>
",0,421010,0,0
14523223,,1/25/2013 13:57,0,514,<git><hook><sh><githooks>,Git post-receive hook to clone and checkout two branches into two separate directories,"<p>I have a Git repository, and I need to write a <code>post-receive</code> script that checkouts two branches into two separate directories and then performs some actions. I have the following script that works for one branch, but I'm not sure how to script it so that it checks out two branches.</p>

<pre><code>#!/bin/sh

GIT_REPO=""$HOME/oliverjash.me.git""
TMP_GIT_CLONE=""$HOME/tmp/oliverjash.me""
PUBLIC_WWW=""/var/www/oliverjash.me""

# Clone &amp; Checkout a copy of this repository somewhere
git clone $GIT_REPO $TMP_GIT_CLONE

# Do other actions
cd $TMP_GIT_CLONE
compass compile -e $RAKE_ENV -c config.rb --force
jekyll $PUBLIC_WWW
cd $HOME
rm -rf $TMP_GIT_CLONE
exit
</code></pre>

<p>Bear in mind that the ""actions"" I need to do to each copy will be the same except for the variables, of course – I would really like to avoid repeating code.</p>
",3,,,
49880925,1222167,4/17/2018 14:35,1,180,<git><gerrit><githooks>,Gerrit hook to fire once per push event,"<p>I am in need of a Gerrit hook that is similar in function to gits <code>post-receive</code> hook.  Need to do a notification <em>once</em> on each push.</p>

<p>Have tried Gerrit's <code>ref-update</code> and <code>ref-updated</code> - both seem to fire once per commit in the push.</p>

<p>Can accept the fact that the answer may be staring me in the fact and I simply cannot see the forest for the trees.</p>

<p>Thanks!</p>
",0,1222167,0,0
14566322,421010,1/28/2013 16:16,1,925,<git><githooks>,What is the reliable way to get commit hash after commit-msg hook?,"<p>I'm writing a script which is going to both pre-process and post-process git commit. For pre-processing I'm going to use <code>commit-msg</code> hook to add some information to commit message, but for post-processing I need to know hash of that commit. Is there a way to acquire hash without saving a script state somewhere (e.g. in case of <code>post-commit</code> hook)?</p>
",0,421010,,
67896858,15326008,6/9/2021 2:46,2,379,<continuous-integration><pipeline><digital-ocean><githooks><automated-deploy>,The best way to automate deploy with bitbucket and a remote server (like digital ocean droplet) is with git hooks or pipelines?,"<p>I'm working on a project and now is the stage of deployment. I have a droplet in digital ocean and I could just clone my git repository from bitbucket inside this droplet and every time I do a git push to my remote repository I just do a git pull inside my droplet. I really don't want to do this every time, so I searched how could I automate this and I found two ways:</p>
<p><strong>Git hooks</strong>
<a href=""https://macarthur.me/posts/deploying-code-with-a-git-hook"" rel=""nofollow noreferrer"">https://macarthur.me/posts/deploying-code-with-a-git-hook</a>
In this link show how to do it (I don't like the fact the after clone my git repository from bitbucket I have also to remote link with my droplet)</p>
<p><strong>Pipeline</strong>
<a href=""https://stackoverflow.com/questions/50053687/using-bitbucket-pipelines-to-deploy-onto-vps-via-ssh-access/50124202#50124202"">Using BitBucket Pipelines to Deploy onto VPS via SSH Access</a> I also find this way that I just do my git pull inside my pipeline</p>
<p>So here is my question: between these two ways, which one is better? The only thing that I don't like in the git hooks way is that every time I clone my bitbucket repository in a new machine, I have to add new remote repository to automate the deployment.</p>
",0,15326008,,
49904490,4162982,4/18/2018 16:18,5,3139,<bash><git><githooks><pre-commit-hook>,Git Hook Script for both windows and mac,"<p>I am trying to write a git pre-commit hook, but I need it to be compatible for both Windows and Mac (Multiple different dev machines), or at least have some way of detecting the OS and changing to the adequate environment.</p>
<p>I know that if set my shebang to</p>
<pre><code>#!C:/Program\ Files/Git/usr/bin/sh.exe
</code></pre>
<p>then Windows will switch over to use git bash for execution.</p>
<p>Similarly on Mac</p>
<pre><code>#!/bin/bash
</code></pre>
<p>sets up the bash environment for execution.</p>
<p>But if the hook has the wrong shebang, it won't even read it. I need a way to be able to distinguish between the OS' and set the shebang accordingly.</p>
<p>And creating individual hooks for mac and windows, and installing them individually on the machines is out of the question because that would make code maintenance/refactoring impossible.</p>
<p>Thoughts?</p>
",3,4162982,0,0
67928521,16191628,6/10/2021 21:12,-1,358,<android><atlassian-sourcetree><githooks><pre-commit><detekt>,.git/hooks/pre-commit: line 33: detekt: command not found,"<p>I am trying to use detekt on my android project but when i try to commit using sourcetree i get this error.</p>
<p>Checking prerequisites
Collecting modified files
Running detekt
.git/hooks/pre-commit: line 33: detekt: command not found</p>
<p><a href=""https://i.stack.imgur.com/ZV4o6.png"" rel=""nofollow noreferrer"">print of the error on sourcetree</a></p>
",1,16191628,,
32087581,2981934,8/19/2015 5:59,3,2777,<git><githooks>,How to find all commits associated with a merge commit in GIT?,"<p>I am working on a git pre-push update hook wherein I would like to check for a specific condition in a commit only if there is no merge commit associated with it. In case there is a commit with an associated merge commit, then I would like to skip checking the individual commit and check the merge commit instead. </p>

<p>In order to be able to do this, I would need to have the exact list of commits associated with a merge commit so that I can filter them out from the commit list which inturn contains the total list of commits getting pushed to remote.</p>

<p>Is there a git command/option to find the commit range merged in a Merge commit ? </p>

<p>For instance: I would like to get only the below highlighted text as the command output: </p>

<pre><code>$ git log --merges
commit fd3d8c5bc3e689cf44b5ca1e8d06fe2a6bd02716
**Merge: f778e20 cefb2e9**
Author: abc &lt;abc@abc.com&gt;
Date:   Mon Aug 17 22:00:49 2015 -0700

Merge branch 'feature_personal'
</code></pre>

<p>I attempted to do the following:</p>

<pre><code>$ git log --pretty=%P -n 1
f778e20d1bfa0b1821d93feca3863a69af48de1f cefb2e96279447b2c268167a2db3605b84717de
</code></pre>

<p>This works well when you use -n 1 which is doable on the client side but does not work out as part of a git hook on the server side. Is there a way to use SHA id of the merge commit and get these details ? </p>

<p>I would also like to get all the list of commits included in the range f778e20..cefb2e9. This would give me the total list of commits associated with the merge commit.</p>

<p>I tried using git rev-list f778e20..cefb2e9 but this lists a lot of commits.</p>

<p>Any suggestions/thoughts ?</p>
",1,2981934,0,0
67973955,1661939,6/14/2021 16:27,1,32,<git><githooks>,How can I run a command on a indexed version of the file in git repository instead of the version in working directory?,"<p>I want to add a <code>pre-commit</code> hook to run code checks on the files ready to be commited.</p>
<p>I need to run <code>phpcs</code> commands for this as part of the <code>pre-commit</code> hook. And I need to run them on the &quot;indexed&quot; version of the files.</p>
<p>However, simply doing <code>phpcs myfile.php</code>, the command runs on the &quot;working directory&quot; version of the file.</p>
<p>This means that someone can make a faulty code, add it to index, then correct that code in working directory and still be able to commit the code faulty code without adding the correct code to index as the check will run on the working directory version of the file.</p>
<p>So, how can I run a command on a indexed version of the file in git repository instead of the version in working directory?</p>
",2,1661939,,
14595702,1167296,1/30/2013 2:28,3,142,<web-applications><web-deployment><githooks>,GitHub post-receive hook flow,"<p>I have a repo on GitHub (Enterprise, for what that's worth) that I use for my app. I also have this app deployed on a development server on the same network. I've done some reading on Git hooks, and I've registered my dev server's URL in the WebHooks section of the repo on GitHub. However, I do not know how to set up a receive trigger, that every time commits are pushed to the repo, I want the server to receive the JSON data from the POST, update the web app repo (the web app is also under Git control) with the data, and restart some services.</p>

<p>How can I do the above mentioned in the simplest and easiest way possible?</p>

<p>Thanks.</p>
",1,1167296,0,0
68043285,239219,6/19/2021 3:13,0,94,<swift><githooks>,How to create git hook in Swift script to prevent console.log() lines?,"<p>I would put together a Swift script, that prevent nasty <code>console.log()</code> JavaScript lines to commit.</p>
<p>All I reached it to make a Hello World in Swift script.</p>
<pre><code>#!/usr/bin/swift
print(&quot;Hello world&quot;)
</code></pre>
",2,239219,,
68049284,1233547,6/19/2021 17:31,-1,235,<git><cucumber><githooks><cucumber-java>,I am trying to place a git pre-commit hook which can validate my feature files for tags,"<p>I have linked my Cucumber scenarios to my XRAY test cases.
I want to force the process that every cucumber scenario should have test case id as tag (eg @QA-1234). If any scenario does not have this kind of tag then git should warn and abort the commit.</p>
<p>Is it possible using a git hook?
Or please suggest anything else.</p>
<p>I am using Cucumber with Java on windows machines.</p>
",0,1233547,,
14610533,,1/30/2013 17:53,2,816,<git><hook><githooks>,"Git post-receive hook clone successful, but reporting 'not a git repository'?","<p>I have a <code>post-receive</code> hook inside a Git repository that clones the repository into another directory and then <code>cd</code>s into that directory.</p>

<pre><code>#!/bin/bash --login

GIT_REPO=""$HOME/oliverjash.me.git""

source ""$HOME/.bash_profile""

checkout () {
  BRANCH=""$1""
  TMP_GIT_CLONE=""$2""

  git clone $GIT_REPO $TMP_GIT_CLONE
  cd $TMP_GIT_CLONE
  git status
}

checkout master ""$HOME/tmp/oliverjash.me""
checkout project ""$HOME/tmp/project.oliverjash.me""

exit
</code></pre>

<p>If I run this script whilst logged in to SSH, <code>git status</code> works fine. However, when the script is executed as the <code>post-receive</code> hook, <code>git status</code> reports this:</p>

<pre><code>remote: fatal: Not a git repository: '.'
</code></pre>

<p>I can't understand why this is!</p>
",2,,0,0
14613465,174605,1/30/2013 20:48,2,89,<git><git-svn><githooks><git-status>,Is there a way to invoke a script on git status command?,"<p>I am managing my svn repositories as a git repo through git-svn tool, but there is no way to handle my svn externals. This problem is solved by treating each external as a git-svn repo. This is done using a script and the result is something similar to this:</p>

<pre><code>&gt; src/
&gt; -- .git/
&gt; -- Source1.x
&gt; -- Source2.x
&gt; -- .git_external/
&gt; ---- git-svn_external1/
&gt; ------ .git/
&gt; ------ ExternalSource1.x
&gt; ---- git-svn_external2/
&gt; ------ .git/
&gt; ------ AnotherExternalSource1.x
&gt; ------ AnotherExternalSource2.x
</code></pre>

<p>With the lack of a tool to handle the svn externals, I need to verify each modification through a bash script that is executed manually and it is something like this:</p>

<pre><code>#!/bin/sh
for i in `ls .` do
  if [ -d $i ] then
    cd $i
    if [ -d .git ] then
      git status .
    fi
  cd ..
  fi
done
</code></pre>

<p>How can I achieve this automatically while executing the <code>git status</code> command on main git-svn repository?</p>

<p>I didn't find any hook related to this situation, so I think that I need to find a workaround to this problem.</p>
",4,174605,,
68085188,12409509,6/22/2021 14:14,0,63,<python><git><jenkins><githooks>,"git post-receive hook not Triggering Jenkins job (Machine-1: Local ,Machine-2: Remote)","<p>Facing issue while using git post-receive hook in Remote to trigger Jenkins Job. please need inputs.</p>
<p><strong>All OK condition:</strong><br />
same Machine : Local and Remote<br />
post-receive hook in Remote Triggers Jenkins job<br />
Update in  <strong>Git Polling Log</strong><br />
Build Triggers - Poll SCM</p>
<p><strong>Problem Condition:</strong><br />
Machine-1: Local , Machine-2: Remote<br />
post-receive hook in Remote doesn't triggers Jenkins job<br />
No update in  <strong>Git Polling Log</strong><br />
Build Triggers - Poll SCM<br />
<em>if <code>http://machine-2:8080/git/notifyCommit?url=file://D:\GitServer.git</code> is executed from Machine-1 browser, post-receive hook in Remote triggers the Jenkins job in machine-2</em>.<br />
<strong>Observation :</strong> Jenkins job in machine-2 is not triggered when git push is performed from machine-1.</p>
<p><strong>Note:</strong> using tortoisegit in both machines.</p>
<p><strong>post-receive hook:</strong></p>
<pre><code>#!/usr/bin/env python
from subprocess import check_output

if __name__ == '__main__':
    log = check_output([
        'curl',
        '-X',
        'POST',
        'http://localhost:8080/git/notifyCommit?url=file://D:\GitServer.git'
    ])
</code></pre>
",3,12409509,,
14621037,1578522,1/31/2013 8:02,0,523,<python><git><githooks><webhooks><bitbucket-api>,Bitbucket post management service hooks,"<p>I want to get commit messages to my web app.</p>

<p>I am doing following:</p>

<ol>
<li><p>In my git repository, added a POST service with post url as </p>

<p>http:/ /localhost:9000/myGitHook/ or 
http ://167.34.56.13:9000/myGitHook/.</p></li>
</ol>

<p>in my urls.py I have :</p>

<pre><code>URLS = [r'/', Main,
          :
          :
    (r'/myGitHook/', GitHook),
          :
          :
]
</code></pre>

<p>the above url is mapped properly to following handler:</p>

<pre><code>class GitHook(tornado.web.RequestHandler):
    def get(self, *args, **kwargs):
        print self.request
        #do something

    def post(self, *args, **kwargs):
        print self.request
        #do something
</code></pre>

<ol>
<li>modified a file and pushed it to the repository.</li>
<li>I can see commit in the my bitbucket repository commit list, but the above POST url is not even triggered.</li>
<li>Then I found <a href=""https://confluence.atlassian.com/display/BITBUCKET/Troubleshooting+Bitbucket+Services"" rel=""nofollow"">this</a>. It says that you cannot use localhost for post service management.</li>
</ol>

<p>I am not doing anything else beyond these process.</p>

<p>Please suggest how to do it in the development environment.</p>

<p>Any kind of help would be really appreciated.</p>

<p>Thanks in Advance.</p>
",0,1578522,,
14624421,1578522,1/31/2013 11:16,0,293,<python><post><push-notification><bitbucket><githooks>,get bitbucket commit message for each push,"<p>I want to fetch the commit message to my bitbucket repository each time a user is doing any push operation.</p>

<p>How can I do that?</p>

<p>I am in development version. So is there any way by which I can post to localhost/someurl for each commit from my repository.</p>

<p>Else suggest other ways by which I can achieve this.
Thanks in advance for help.</p>
",0,1578522,,
49954505,7229120,4/21/2018 9:55,0,554,<git><githooks>,How can I apply githook in subdirectories?,"<p>As far as I can see, git hook files can only be put into the root/hooks directory. </p>

<p>But currently, we don't have the permission of that directory.<br>
Our project just lies in one of the subdirectories.<br>
We just want to run some test cases before we run <code>git push</code> request, so we want to add some client-side hooks only applicable to our project directory.</p>

<p>Is there any way that I can do this?</p>
",0,7229120,,
15019709,267075,2/22/2013 8:19,2,738,<git><bash><templates><init><githooks>,execute script on git init,"<p>I would like to automate some tasks I made every time I use git init command. </p>

<p>I looked at the different templates but I don't even know if it's possible to execute a script directly after an init.</p>

<p>An idea ?</p>
",4,267075,,
15113042,1384315,2/27/2013 13:15,2,385,<git><bash><githooks>,git post-commit hook not executed,"<p>I'm trying to implement a way to include <code>git</code> commit data into a LaTex document using the method described <a href=""http://thorehusfeldt.net/2011/05/13/including-git-revision-identifiers-in-latex/"" rel=""nofollow"">here</a>.</p>

<p>The hook looks like this:</p>

<pre><code>$ cat post-commit 
#!/bin/sh

cd ../..

git log -1 --format=""format:\
                \\gdef\\GITAbrHash{%h}\
                \\gdef\\GITHash{%H}\
                \\gdef\\GITAuthorDate{%ad}\
                \\gdef\\GITAuthorName{%an}"" &gt;&gt; git.tex
</code></pre>

<p>When I do <code>chmod a+x post-commit</code> and then <code>./post-commit</code>, the file is generated appropriately. However, when I actually make a commit, the hook is not executed. What could be the problem?</p>
",0,1384315,,
15135003,1436757,2/28/2013 11:59,2,1863,<github><githooks><bamboo>,Create Github hook to trigger Bamboo build,"<p>I created a <em>Github Service hook</em> to trigger a build in <em>Bamboo</em>. This is the <em>Build Key</em> I entered in Github </p>

<pre><code>master:GAUTR-UNIT
</code></pre>

<p>This only triggers the master branch. How can I trigger the other branches without manually entering each branch's name and <em>Bamboo Build Key</em> in <em>Github</em></p>
",2,1436757,0,0
15196304,1001938,3/4/2013 7:08,11,5225,<git><deployment><amazon-ec2><githooks><git-post-receive>,Make Github push to a remote server when it receives updates,"<p>What is the set up for having Github automatically push any updates to a remote server?</p>

<p>This is useful for maintaining a codebase on Github, and having a website run off that codebase.</p>

<ol>
<li><p>I have my repo on my own computer, this is where I work.</p></li>
<li><p>I commit my changes on my local repo, and push them to my Github repo. </p></li>
<li><p>I want my Github repo to then push these changes to my remote server. </p></li>
</ol>

<p>I've been researching all day, and using the 'hooks' sounds reasonable. Maybe using a 'post-receive' hook on Github which then runs a push command to my remote server.</p>

<p>Any suggestions?</p>
",0,1001938,0,0
50290061,6350236,5/11/2018 10:14,0,28,<git><githooks>,How to detect changing files in selected folder and selected file extension?,"<p>How to config git hook for detecting exactly selected folder (exem /../../schemas) and exactly selected file extension (exem *.xsd)?</p>
",2,6350236,,
15223290,473390,3/5/2013 12:02,4,4243,<git><githooks><git-bash>,Fixing mac/windows new lines with git pre-commit hook?,"<p>In our office we working in a team of about 10 developers. Most of them have a Mac machines. Recently I've realise when I'm checking differences of my work (after changing only one line of code) almost each line is changed, but <code>git diff</code> shows you change is exactly same as original. After some research it's turned out to be a different new line. Before I do anything it's '\r\n' (CR+LF, 0x0D0A) and after my change all non Unix new lines (\r\n) are change to Unix one (\n).</p>

<p>I realize I could ask my colleagues to change their IDE settings, but I realize I can just prepare some script that need to be run each time they make a commit.</p>

<p>How can I run a bash script before git commit? How can use git pre-commit hook?</p>
",0,473390,0,0
15231665,1584409,3/5/2013 18:45,1,87,<git><version-control><githooks>,git hooks — preventing commit to get into topic branch,"<p>I need to stop commits to happen if the message is not properly formatted.</p>

<p>I know it is possible to do it on the <strong>master</strong> branch with the pre-receive hook.</p>

<p>The problem is that I don't want to do that on the <strong>master</strong> branch, but in a topic one.</p>

<p>I thought of doing it using <strong>git symbolic-ref</strong>.</p>

<p>Let say I have a topic branch called <strong>dev</strong> coming from <strong>master</strong>. If I run '<em>git symbolic-ref HEAD</em>' from the git command line in the topic branch, I get '<em>refs/heads/dev</em>'.</p>

<p>I was thinking of doing the same in the pre-receive hook to detect from which branch the commit comes from.</p>

<p>I have put this bit of code in the hook:</p>

<pre><code>#! /usr/bin/perl

my $branch = `git symbolic-ref HEAD`;
print ""Branch: $branch \n"";
</code></pre>

<p>But when I commit and the push from the topic branch (i.e.: <strong>dev</strong>), the message I'm getting is:</p>

<pre><code>Branch: refs/heads/master
</code></pre>

<p>...even if the commit comes from the <strong>dev</strong> branch.</p>

<p>What am I doing wrong ? Is this a viable way of achieving my target ?</p>
",2,1584409,,
15308482,241552,3/9/2013 7:45,1,300,<git><githooks>,How do I get added/changed files in a pre-commit hook?,"<p>I want to write a hook that checks certain coding conventions in files being committed, and if those are violated, rejects the commit/push. However, in my ""rejection message"" I want to tell the committer the line numbers, where the violations have been found. </p>

<p>The best I can think of so far is to get the whole file being committed, that will allow me to count the lines. That will also allow me to find the same coding convention violations in earlier code, so that the programmers will have to clean up the whole file they happened to modify.</p>

<p>Is it at all possible? How can I get the whole new file being committed.</p>
",6,241552,,
15314527,241552,3/9/2013 18:46,10,3793,<git><githooks>,Git server hook: get contents of files being pushed?,"<p>I am trying to enforce some coding rules in my team. To that end, I've written a number of client-side hooks, which work all right, but now I want the same checks to run when a developer pushes their modifications to the central repository. But they don't work.</p>

<p>Here is what I want to do:</p>

<p>I want to traverse the pushed files line by line, check for coding conventions violations and if I find any, reject the push, also showing the line numbers + violations.</p>

<p>In my pre-commit client side hook I was able to do that by calling <code>git diff --cached --name-status --diff-filter=AM</code> to get the list of modified files, and <code>git cat-file -p :filename</code> for each of the files retrieved in the first call to get the whole text of the files. </p>

<p>When I try to do the same in my server-side <code>update</code> hook, I get an empty string (for the list of the files).</p>

<p>I also tried calling <code>git show --pretty=""format:"" --name-only newrev</code> (where newrev is the SHA I get as a parameter to the update hook, <code>git diff-tree -r --name-only --no-commit-id &lt;tree-ish></code>, and some other things I find on the net, but I can't get a clear understanding of what is going on and what I should call. </p>

<p>Can you help me?</p>
",1,241552,0,0
16840184,353612,5/30/2013 15:30,24,11248,<git><githooks>,How can I automatically be warned if a specific file changes?,"<p>I have a php project, and when I pull from another repository and the composer.lock file gets changed, I'm supposed to run <code>composer.phar install --dev</code>. How can git automatically warn me / ask me if I want to run this command? I suppose some sort of hook would do the trick, but how can I get information regarding only what has changed before and after the pull in it?</p>
",0,353612,0,0
68954231,10220019,8/27/2021 13:25,0,373,<git><githooks>,git hooks for all repository users,"<p>With the help of <a href=""https://stackoverflow.com/a/37861972/10220019"">this answer</a> and <a href=""https://chamikakasun.medium.com/how-to-share-git-hooks-with-the-team-37424603dd91"" rel=""nofollow noreferrer"">this post</a> I already got a basic idea how to share hooks with the full team. The remaining &quot;problem&quot; with those two approaches is that everyone needs to run <code>git config core.hooksPath &lt;path hooks under version control&gt;</code>. It is of course easy to forget this (especially when making a fresh clone) so I'm searching for something that will automatically do this. I have read some things about package.json (<a href=""https://stackoverflow.com/a/55958779/10220019"">here</a> or in the comment section of <a href=""https://chamikakasun.medium.com/how-to-share-git-hooks-with-the-team-37424603dd91"" rel=""nofollow noreferrer"">this</a>). But I have no clue where this package.json comes from/where to find it. My initial feeling is that it has something to do with javascript code, but my repository is c++.</p>
<p>Could someone in more detail explain where to find this package.json (if also applicable for c++) or maybe tell about new features of git/ new ways to get the automatic behaviour?</p>
<p>(More detail about the use case: I want to add a (small) sqllite database to the repository and I have read that it's kind of bad to commit binary files to git. <a href=""https://stackoverflow.com/a/13273761/10220019"">So I learned one way (comments)</a> is to do a pre commit(?) hook that dumps the file into sql and then a post-checkout(?) hook that converts the sql back to binary sqllite database)</p>
",8,10220019,,
16844879,1476464,5/30/2013 19:58,0,194,<git><hook><githooks><pre-commit-hook><pre-commit>,Git Pre-Commit Script not Returning Non-Zero,"<p>I have a script that I'm trying to run to check the encoding of the files in the newest commit. When I run it manually, it behaves as expected, but when I perform a commit, it doesn't. I can print variables just fine if they're outside of my functions, so I suspect that it has something to do with the way I'm retrieving the modified/added files. Is there a way to do it that Git can handle better?</p>

<pre><code>#!/usr/bin/env python

import chardetect, subprocess, os
from sys import stdin, exit
from chardet.universaldetector import UniversalDetector

confidenceLevel = 0.8
allowedEncoding = ('ascii', 'utf-8')

# Get the current path and modify it to be the path to the repo
filePath = os.path.dirname(os.path.realpath(__file__))
filePath = filePath.replace('.git/hooks', '')

# Get all files that have been added or modified (filter is missing 'D' so that deleted files don't come through)
pr = subprocess.Popen(['/usr/bin/git', 'diff', '--diff-filter=ACMRTUXB', '--cached', '--name-only'],                  
       cwd=os.path.dirname('../../'), 
       stdout=subprocess.PIPE, 
       stderr=subprocess.PIPE, 
       shell=False) # Take note: Using shell=True has significant security implications.
(out, error) = pr.communicate()

# Create a list of files to check
out = out.split('\n')
out = [item for item in out if item != '']
out = [filePath + item for item in out]

messageList = [] # Keep this global

# If no paths are provided, it takes its input from stdin.
def description_of(file, name='stdin'):
    #Return a string describing the probable encoding of a file.
    u = UniversalDetector()
    for line in file:
        u.feed(line)
    u.close()
    result = u.result
    if result['encoding']:
        itPasses = ''
        if result['encoding'] in allowedEncoding and result['confidence'] &gt;= confidenceLevel:
            pass
        else:
            messageList.append('%s: FAILS encode test %s with confidence %s\nYou must convert it before committing.' % (name, result['encoding'], result['confidence']))
    else:
        return '%s: no result' % name


def main():
    if len(out) &lt;= 0:
        exit()
    else:
        for path in out:
            description_of(open(path, 'rb'), path)
        for item in messageList:
            print item
    if len(messageList) == 0:
        exit()
    else:
        exit(1)

if __name__ == '__main__':
    main()
</code></pre>
",0,1476464,,
16848327,895795,5/31/2013 1:12,1,51,<git><notifications><githooks>,Do hooks exist for every modification to a git repository?,"<p>As a learning project, I want to make a git visualizer that shows the underlying git commit graph in real time. To do this, my visualization program needs to receive updates every time the graph changes.</p>

<p>I know that git has hooks for a number of commands. My question is: do the post-XXXXX hooks cover the entire space of ways that the git repository can be changed?</p>

<p>A follow up question: is there a better way for a process to ""listen"" to a git repo programmatically? The downside of using the git hooks is that I would have to modify the repo in order to visualize it. Ideally, I wouldn't have to do that.</p>
",0,895795,,
33411571,1561176,10/29/2015 10:21,1,136,<git><version-control><continuous-integration><githooks><staging>,git - automatic staging branches,"<p>I want to create an automatic staging branch creation process. When a user will push his changes to the git server, it should check the target branch - if the branch is a production branch it should <em>instead</em> push to a staging branch. (Later, a continuous integration process will start which will take care of pushing/merging the changes back into the production branch).</p>

<p>I have tried using git-hooks but I feel I am missing something. None of the git-hooks let me actually modify or manipulate the underlying git process and change the target branch, so I tried instead to use git-hooks to push to a production branch and then stop the rest of the process - but this causes the user to get a failure message and that is unwanted.</p>

<p>So I need a solution that will be:</p>

<ol>
<li>Seamless: Users won't know this is happening, as far as they know they are pushing their changes directly into their targeted branch and they get no error codes or confusing messages.</li>
<li>Harmless: Not modify the targeted branch in any way.</li>
<li>Magic: Silently create or update the staging branch associated with the target branch.</li>
<li>Invisible: Should be server-side hook (such as update or pre-receive) so that users don't need to maintain their own hooks.</li>
</ol>

<p>I previously <a href=""https://stackoverflow.com/q/33102333/1561176"">asked this question</a>, but it turned out to not be exactly what I wanted. So I created a new question with more clarification.</p>

<p>I am expecting answers to provide me with that ""Aha!"" realization of what I am missing. I have seen this process in action before and I know it's possible, I am just missing something. What I would really like to know is if its possible to modify the underlying git process with hooks, or to ""hijack"" the hooks return code so that it shows the user that everything went okay even though I stopped and change the process. Or perhaps another solution all together.</p>

<p><strong>edit:</strong></p>

<p>I myself am looking for a solution, and found something about Triangular Workflows which seems like it might be exactly what I want. But I can't figure out how to synchronize them automatically, it seems like every good solution requires some manual input somewhere along the line. Though I am certain that I have seen this setup working before and without the need to run any preparation scripts on the client side, and that the staging process was automagical.</p>
",0,1561176,0,0
16864259,1490695,5/31/2013 19:12,13,33981,<git><bash><github><hook><githooks>,How to run bash script after git push,"<p>I wanted to know how to execute a bash script in the local repo after pushing to github. </p>

<p>The bash script is located in the root of the folder. It can be moved around depending on where it is being called I guess. 
I have looked into git hooks but there is no post-push hook and I don't understand the other hooks very well.</p>

<p>I'm trying to call a jenkins build after the push. I have looked into ways of notifying jenkins after a push with post-receive url etc on github but nothing seems to work for me.</p>

<p>This is the script I'm trying to run:</p>

<pre><code>#!/bin/bash/
java -jar jenkins-cli.jar -s http://localhost:8080/ build Test
</code></pre>

<p>Thanks!
Varun</p>
",3,1490695,0,0
68960181,9588400,8/27/2021 23:15,2,755,<githooks><husky>,In WSL2 unable to run custom pre-commit githook,"<p>Firstly, thanks for any and all responses given. And I'm sorry if I have not included helpful relevant information.</p>
<p>I am trying to configure a pre-commit githook (lint, prettify and test) without the need for adding <code>husky</code> and <code>lint-staged</code> as dependencies, but I am not having much luck.</p>
<p>As per the instructions included in the resources below, I have added a <code>post-install</code> script which reconfigures the <code>hooksPath</code> (see below).</p>
<p><code>&quot;postinstall&quot;: &quot;git config core.hooksPath ./git-hooks&quot;</code></p>
<p>Now the problem arises that <code>STAGED_FILES</code> uses the relative path of each staged file as its path reference. And, because I am running Ubuntu on WSL2 this will not work (for reasons I am hoping someone can explain to me). The result of running <code>git-hooks/pre-commit</code> from cli is <code>[error] No files matching the pattern were found: &quot;LIST_OF_STAGED_FILES&quot;</code> with LIST_OF_STAGED_FILES being a string, e.g. &quot;src/index.js src/anotherFile.js ...&quot;</p>
<p><strong>./git-hooks/pre-commit</strong></p>
<pre><code>#!/bin/sh
STAGED_FILES=$(git diff --cached --name-only --diff-filter=ACMR | sed 's| |\\ |g')

# run linter on staged files
echo &quot;Running Linter..⚒️⚒️⚒️&quot;
./node_modules/.bin/eslint $STAGED_FILES --quiet --fix
LINTER_EXIT_CODE=$?

# run Prettier on staged files
echo &quot;Running Prettier..✨✨✨&quot;
./node_modules/.bin/prettier $STAGED_FILES --ignore-unknown --write

# add files auto-fixed by the linter and prettier
git add -f $STAGED_FILES

# check linter exit code
if [ $LINTER_EXIT_CODE -ne 0 ]; then
    echo &quot;No, no, no! fix those lint errors first..😠&quot;
    exit 1
else
    echo &quot;lint all good..👍&quot;
fi

# run tests related to staged files
echo &quot;Running Tests&quot;
./node_modules/.bin/jest --bail --findRelatedTests $STAGED_FILES --passWithNoTests
JEST_EXIT_CODE=$?

# check jest exit code
if [ $JEST_EXIT_CODE -ne 0 ]; then
    echo &quot;Please you can do better than this..🙏🙏🙏&quot;
    exit 1
else
    echo &quot;test all good..👍&quot;
fi

# return 0-exit code
echo &quot;🎉 you are a rockstar..🔥🔥🔥&quot;
exit 0
</code></pre>
<p><strong>related information</strong></p>
<ul>
<li>project files are located on linux distro network drive/partition</li>
</ul>
<p><strong>related resources</strong></p>
<ol>
<li><a href=""https://www.antstack.io/blog/adding-git-hooks-to-your-project/"" rel=""nofollow noreferrer"">https://www.antstack.io/blog/adding-git-hooks-to-your-project/</a></li>
<li><a href=""https://dev.to/krzysztofkaczy9/do-you-really-need-husky-247b"" rel=""nofollow noreferrer"">https://dev.to/krzysztofkaczy9/do-you-really-need-husky-247b</a></li>
</ol>
",0,9588400,,
33429820,2219266,10/30/2015 6:16,17,14075,<git><merge><hook><githooks>,Is there a way to bypass post-merge git hook when executing `git merge` command,"<p>I have post-merge hook configured in order to integrate (semi-manually) with another version control system. However sometimes I would like to avoid the the hook from running is there some way to bypass it for <code>git merge</code>?</p>

<p>I knew there is <code>--no-verify</code> command line parameter for <code>git commit</code>. That kind of solution would be perfect for my use case but seems like  <code>--no-verify</code> is not working for <code>git commit</code> command.</p>
",1,2219266,0,0
33440005,446140,10/30/2015 15:53,1,290,<git><githooks>,Trigger post-receive hook without pushing any refs,"<p>Is there any way to trigger the post-receive hook of a git repository without pushing anything?</p>

<p>I'm aware that I can just push an empty commit, which will cause the hook to trigger:</p>

<pre><code>git commit --allow-empty -m ""push me"" &amp;&amp; git push
</code></pre>
",0,446140,,
33491803,1480090,11/3/2015 5:16,4,3028,<git><github><jenkins><jenkins-plugins><githooks>,"Github + Jenkins >> How to trigger build on ""Commit and Push"" in code repository?","<ul>
<li>I have setup a local instance of Jenkins on my computer, and I can
access it through - ""<a href=""http://localhost:8080"" rel=""nofollow"">http://localhost:8080</a>"".</li>
<li>Created a Public Git repository, and added my ASP.NET MVC
project there.</li>
<li>Also configured Jenkins to build the project, and it does the job
very well.</li>
</ul>

<p>However, this is a manual trigger. I mean, the build gets triggered only when a user clicks on ""Build Now"" in Jenkins console.</p>

<p>Actually, my requirement is to trigger a build when the changes are committed and pushed. (that means, ""Commit and Push"" while checking-in changes).</p>

<p>I referred to a lot of blogs and posts, and came to know about Git hooks. I also tried creating ""post-receive"" hook. I created a hook at the location where source code is mapped (For example, ""E:\Git\test-jenkins.git\hooks"").</p>

<pre><code>#!/bin/bash
curl POST ""http://localhost:8080/job/Test-Jenkins/build"" --data delay=0sec
</code></pre>

<p>But this doesn't work. A build is never getting triggered on ""Commit and Push"". when I try copying the URL directly in the browser, it triggers a build, so I believe there is no issue with the URL. But the script itself is not getting executed.</p>

<p>Could anyone please suggest how to solve this problem?</p>

<p>Any help on this much appreciated.</p>
",0,1480090,,
50629154,3130281,5/31/2018 16:46,0,120,<git><sh><githooks>,Remove irrelevant files with post-receive hook,"<p>I’m using a bare Git repo and automate deployment via hooks. I’ve set up a git remote locally that I can push to and the server updates the files automatically.</p>

<p>However, I’m using <a href=""https://getkirby.com/"" rel=""nofollow noreferrer"">Kirby CMS</a> which is a file-based CMS, meaning any unnecessary files should be removed. Basically, the folder in which my hook does <code>git checkout</code> should be identical to the state of the repo.</p>

<p>Here’s my hook script:</p>

<pre><code>#!/bin/sh
git --work-tree=/var/www/html/myrepo --git-dir=/var/repo/myrepo checkout -f
cd /var/www/html/myrepo/assets
npm install --production
</code></pre>

<p>I’ve read about <code>git clean</code>, but as far as I understand, it can be used on repos with a work tree, which my bare repo doesn’t have.</p>

<p>How would I do this?</p>
",0,3130281,0,0
33495868,5519371,11/3/2015 9:45,0,84,<git><diff><githooks>,Git hooks: Change commit message depending from diff of specific files,"<p>If specific files changed(list of path to files are stored in a file), then need to append some text to commit message, like <code>New OSB config needed</code> and of course commit it. What hook I need to use?</p>
",0,5519371,,
16936924,108878,6/5/2013 9:58,2,1072,<git><git-svn><githooks>,Git pre-svn-dcommit hook,"<p>I work on a remote SVN repository using <code>git-svn</code> and I use <a href=""https://github.com/nvie/gitflow"" rel=""nofollow""><code>git-flow</code></a> workflow for my local development.</p>

<p>Unfortunately accidentally a couple of times I did the <code>svn dcommit</code> while being on a feature branch, while I want to only <code>dcommit</code> master.</p>

<p>What I'd like to do is to create a <code>pre-svn-dcommit</code> hook that would check whether I'm on the master branch or not. Unfortunately git doesn't seem to ship with such hook.</p>

<p>I did find two potential approaches/solution:</p>

<ol>
<li><a href=""https://github.com/padwan-ragavan/preSVNDcommitHook"" rel=""nofollow"">https://github.com/padwan-ragavan/preSVNDcommitHook</a> - I'm not too comfortable with replacing the git-svn binary though.</li>
<li><a href=""http://davidsouther.com/2012/04/git-svn-dcommit-hooks/"" rel=""nofollow"">http://davidsouther.com/2012/04/git-svn-dcommit-hooks/</a> - this on the other hand looks a bit too complicated for my liking (and needs).</li>
</ol>

<p>Any advices how this can be achieved?</p>
",2,108878,0,0
16940782,2044355,6/5/2013 13:06,4,858,<git><bash><githooks>,How to determine is there a rebase in git-hook?,"<p>Based on this <a href=""https://stackoverflow.com/questions/5894946/how-to-add-gits-branch-name-to-the-commit-message"">question</a> I made a git hook <code>prepare-commit-msg</code></p>

<pre><code>#!/bin/sh
#
# Automatically adds branch name and branch description to every commit message.
#
NAME=$(git branch | grep '*' | sed 's/* //') 
DESCRIPTION=$(git config branch.""$NAME"".description)

echo ""[$NAME]""': '$(cat ""$1"") &gt; ""$1""
if [ -n ""$DESCRIPTION"" ] 
then
   echo """" &gt;&gt; ""$1""
   echo $DESCRIPTION &gt;&gt; ""$1""
fi 
</code></pre>

<p>It works pretty well on simple commits. Example - <code>[issue14020]: some text message</code> if commit was made in issue14020 branch.</p>

<p>But then I make a rebase I have got message like this <code>[(no branch)]: [issue14020]: some text message</code>. Is there any way to skip this ""no branch"" part?</p>
",0,2044355,0,0
33526961,1568412,11/4/2015 16:25,1,2068,<git><githooks>,Call a script from a git hook,"<p>Let's say I have two scripts in server /hooks folder:</p>

<p>First one initiates logging and writes essential information about push: (post-receive)</p>

<pre><code>#!/bin/sh
read oldrev newrev refname
LOGFILE=post-receive.log
echo "" push - Old SHA: $oldrev -&gt; $newrev &gt;&gt; $LOGFILE
sh ./post-receive-logic &gt;&gt; $LOGFILE
</code></pre>

<p>Second one does actual deploying: (post-receive-logic)</p>

<pre><code>#!/bin/sh
cd ~/proj
pm2 stop ~/proj/main.js
git --git-dir ~/proj/.git --work-tree ~/proj pull
npm install
pm2 restart ~/proj/main.js
echo ""finished""
</code></pre>

<p>When I push a commit, second script never gets called: no changes in working tree, no server being killed and restarted, no output specific to second script.</p>

<p>If I call <code>./post-receive-logic</code> by hand, everything goes fine, server stops, files being pulled, server starts again.</p>

<p>I tried call it without <code>sh</code>, like this:</p>

<pre><code>./post-receive-logic &gt;&gt; $LOGFILE
</code></pre>

<p>but no luck.</p>

<p>What am I doing wrong? </p>
",4,1568412,,
18011928,2614587,8/2/2013 8:12,0,504,<python><bash><githooks>,How do I write a git hook for a fast-forward merge?,"<p>I want to write hook to find latest pushed commit using ff merge
with following steps</p>

<ol>
<li>Take the earliest commit from target branch</li>
<li>find branches which this commit belong </li>
<li>find list of commits which avaliable from parents[1] and are unvalible for branches which was found at step 2</li>
<li>parent of  the earliest commit from this list - last pushed commit</li>
</ol>

<p>I'm using git and hooks are written with python/bash</p>
",2,2614587,,
34557637,5736237,1/1/2016 15:58,0,469,<git><bash><github><githooks>,commit to utility repo in git `pre-push` hook,"<p>I'd like to set up a <code>pre-push</code> hook for a git repo that:</p>

<p>1) checks that we're pushing to master, and</p>

<p>2) if we are, runs webpack, copies the compiled <code>.js</code> file to another repo, and commits that compiled file to a utility repo.</p>

<p>The background for this: I'm using webpack + react to build a map using <a href=""http://leafletjs.com/"" rel=""nofollow"">leaflet.js</a>. I want to have the utility repo always hold the most recent compiled <code>.js</code> file so I can source it in a different static site using <a href=""https://rawgit.com/"" rel=""nofollow"">rawgit</a>.</p>

<p>This is what I have so far (not working correctly):</p>

<pre><code>#!/bin/bash

current_branch=$(git rev-parse --abbrev-ref HEAD)
if [[ $current_branch == 'master' ]]; then
    webpack
    cp bundle.js ../utility
    eval 'cd ../utility &amp;&amp; git add bundle.js &amp;&amp; git commit -m ""updated east_boston.js""'
fi
</code></pre>

<p>I understand that there are some automatically set environment variables (like <code>$GIT_DIR</code> and <code>$GIT_INDEX</code>) but I'm just not sure how to make this work. I keep getting strange behavior, where the README for the main repo will be accidentally committed to the utility repo, or I'll get a commit on the utility repo that deletes files in the main repo (which weren't ever present on the utility repo).</p>

<p>Basically I don't know how to use git hooks properly. Am I using the right hook for what I want? Is this possible?</p>

<p>I should note that the above shell script does work correctly on it's own - so if I do <code>bash pre-push</code> I get the behavior I want.</p>
",1,5736237,,
34567709,5722653,1/2/2016 15:50,3,832,<git><version-control><githooks>,Git Hooks - post-merge hook file not exist,"<p>I am new to Git versioning system.
I have installed git on my Ubuntu machine.
Only following hooks a available.</p>

<pre><code>applypatch-msg.sample
commit-msg.sample
post-update.sample
pre-applypatch.sample
pre-commit.sample
prepare-commit-msg.sample
pre-push.sample
pre-rebase.sample
update.sample
</code></pre>

<p>Where is the ""post-merge"" hook file?</p>
",0,5722653,0,0
51505788,1121841,7/24/2018 18:58,1,83,<git><githooks><git-status>,Is there a git hook that runs immediately after detecting a modified file?,"<p>Let's say after <strong>git pull</strong>-<em>ing</em>-or-<strong>git clone</strong>-<em>ing</em>, Juan edited a single file called <code>hello-world.txt</code>.</p>

<p>Is there a git hook that runs immediately after the modification of the said file?</p>
",3,1121841,0,0
69615398,12550134,10/18/2021 11:39,1,1484,<git><shell><githooks><pre-commit-hook><husky>,How to use exit code of git diff in pre-commit hook,"<p>I have a project with a backend and a frontend, but since the git pre-commit hook gets executed for every change I need to check if the changes were made in the frontend.</p>
<p>I tried this pre-commit hook:</p>
<pre class=""lang-sh prettyprint-override""><code>#!/bin/sh
. &quot;$(dirname &quot;$0&quot;)/_/husky.sh&quot;

git diff --cached --name-only --quiet frontend
if [ $? -eq 1 ]; then
  cd frontend &amp;&amp; npm run lint
fi
</code></pre>
<p>But for some reason it fails when running the git command -- which works fine in my terminal. The error I get is:</p>
<blockquote>
<p>husky - pre-commit hook exited with code 1 (error)</p>
</blockquote>
<p>That does not really help. My guess is that the git command returns an error code and the script thus ends.</p>
<p>Any idea how to fix this?</p>
",4,12550134,,
51523243,3964160,7/25/2018 15:59,6,2860,<java><git><githooks>,How to validate git commit message for Java?,"<p>We are on Java Spring project and we need to validate commit message if it is suitable to commit convention which is expressed by <a href=""http://karma-runner.github.io/0.13/dev/git-commit-msg.html"" rel=""noreferrer"">Commit Guideline</a> or <a href=""https://conventionalcommits.org/"" rel=""noreferrer"">Conventional Commits</a></p>

<p>I know there is a git hook(commit-msg) for this but I don't think I am able to check all conditions on above links and if I write these conditions I am not sure everyone who pulls my changes will be effected with these changes.</p>

<p>What I want is something like <a href=""https://www.npmjs.com/package/husky"" rel=""noreferrer"">Husky</a> for Java projects.</p>
",0,3964160,,
51531248,1613047,7/26/2018 4:54,2,267,<git><githooks>,How to create a git hook on the server side to pull (in a path that requires root permission to modify) after it receives a push?,"<p>I've tried to use <code>post-receive</code> and <code>post-update</code> to:</p>

<pre><code>cd ""/home/servers/a""
git pull
exit
</code></pre>

<p>but it doesn't seem to work. I think this might be because either <code>post-receive</code> and <code>post-update</code> are not triggered after the server received a push, or it might be that for <code>git pull</code> to run successfully on the server I still need to type in the password (in this case how can I save password in the script file then).</p>
",0,1613047,0,0
51531283,,7/26/2018 4:59,0,291,<git><github><gerrit><githooks><git-commit>,Issues in commit in gerrit,"<p>I am trying to use gerrit and I am facing some issue while commit. When I am committing my changes and pushing it to branch then sometimes two code reviews get raised, one is mine and other one is of the person who is working on same branch and many times I get messages you are ahead of 5 commits even I did only one commit. I am using following commands:</p>

<pre><code>git add &lt;file_name&gt;
git commit -m ""commit msg""
git push &lt;branch name&gt;
</code></pre>

<p>On further reasearch I found that there may be issue due to git hook as I am not using git hook anywhere. Because of git hook gerrit is not able to distinguish between commits done by different persons and as a result many reviews get raised  in one push. Is my understanding is correct? If no, please help me why it is happening.</p>

<p>Also I want to ask in git hook command:</p>

<pre><code>scp -p -P 29418 username@your_gerrit_address:hooks/commit-msg.git/hooks/
</code></pre>

<p>What this command does and what is this number 29418. Is this number is given by gerrit?</p>
",1,,,
35696592,1822061,2/29/2016 9:59,1,697,<git><gitignore><githooks>,How to configure git to ignore the ELF file type?,"<p>Ideally, I would like to add a specific filetype to the .gitignore file, not by looking on the extension but instead looking on the file type.</p>

<p>I could for example examine the return code from</p>

<pre><code>file some/file | grep -q ELF
</code></pre>

<p>If the return code is zero I don't want to add the file to the commit. Is there a way to achieve this either by editing the .gitignore file or by writing some kind of a git hook? </p>
",0,1822061,0,0
51618774,4054527,7/31/2018 17:14,10,8205,<github><github-api><githooks>,Trigger a webhook every time something merge into master - GitHub Webhooks,"<p>I not sure exactly how this will work, but I am looking to run a bash script that updates master every time something merges into master through <code>Github</code>. Is there a GitHub webhook that could be triggered on a PR merge? Also, I am not sure how would I update master through this web hook? Or any other suggestions how this could be done? I don't know if I am heading in the right direction.</p>

<p>By <code>updating master</code>, I meant, pull everything from master. Run a bash script that makes few changes and push new changes back to master.</p>
",4,4054527,0,0
35718475,4762010,3/1/2016 9:00,5,4161,<git><githooks>,How can I get push user information in server side git hook?,"<p>I would like to stop users to delete remote git branch by using server side hooks(<strong>update hook</strong>). </p>

<p>I have written shell script in update hook to achieve that.<br>
Now I am able to stop <strong>all</strong> users to delete remote git branch, but I want to give delete permission to <strong>specific user</strong>, to do this we need to get user information(username, useremail) of who is trying the delete operation in server side hook?</p>

<p>we have <strong><code>$USER, $GIT_AUTHOR_NAME, $GIT_AUTHOR_EMAIL</code></strong> etc variables to get user information in client side hooks, but they are not useful in server side hooks. </p>

<p>Do we have any other options to get user info in server-side hooks?</p>
",0,4762010,0,0
51642077,845038,8/1/2018 20:52,1,1801,<bash><git><githooks><ticket-system>,Git hook to update commit message with data from an API,"<p>I am attempting to update a git commit with details from our ticketing API. I would like to grab the title of the ticket number that the developer adds to a git commit and update the commit with that title.</p>

<p>e.g.</p>

<pre><code>git add /some/file

git commit -am ""#[id]
Did some work
Other stuff I Did""
</code></pre>

<p>At this point I would like to get the Id they used, call my API in bash and then append to the commit the title so the resulting commit message is actually ""#[id] Ticket Title"".</p>

<p>I am wondering what hook I can use to do this. I'm not looking to get help on how to write the hook but more so what git hook I would use and if I need to alter the commit after it's made (say I need to do it on post commit). What would the <code>git commit --amend</code> look like?</p>

<p>Thanks in advance</p>
",0,845038,,
69651701,17204829,10/20/2021 19:03,1,1116,<git><git-submodules><githooks>,Add pre commit hook to submodule from parent module's .git,"<p>So I have a project with a submodule that gets updated every once in awhile. I have some rules for commits that I try to follow and one of them is to include the branchname in the commit. I accomplish this with githooks as follows:</p>
<p>From top level directory</p>
<p><strong>.git/hooks/prepare-commit-msg</strong></p>
<pre><code>#!/bin/sh

BRANCH=`git branch | grep '^\*' | cut -b3-`
FILE=`cat &quot;$1&quot;`
echo &quot;$BRANCH $FILE&quot; &gt; &quot;$1&quot;
</code></pre>
<p><strong>.git/hooks/pre-commit</strong></p>
<pre><code>#!/bin/bash

find vendor -name &quot;.git*&quot; -type d | while read i
do
        if [ -d &quot;$i&quot; ]; then
                DIR=`dirname $i`
                rm -fR $i
                git rm -r --cached $DIR &gt; /dev/null 2&gt;&amp;1
                git add $DIR &gt; /dev/null 2&gt;&amp;1
        fi
done
</code></pre>
<p>Then I just set permissions
sudo chmod 755 .git/hooks/prepare-commit-msg
sudo chmod 755 .git/hooks/pre-commit</p>
<p>However, this does not work for the submodule as it does not have the .git directory. Is there a way to force the submodule to use the hook from the parent directory? If I open the submodule independently I can make it work however, it's alot more practical to keep it under the parent as it keeps stuff organized.</p>
",4,17204829,,
51729084,2685996,8/7/2018 14:21,1,576,<bash><git><githooks>,Is it possible do git commit on server side update hook,"<p>Point of my task : gather info about repo and place it to file while update hook and commit it ( perfectly with new commit). </p>

<p>Problems : when I'm doing commit -> it lockes <code>origin</code> repository and after this push is failing. my code looks like this :</p>

<pre><code>#!/bin/bash

# --- Command line
refname=""$1""
oldrev=""$2""
newrev=""$3""
export GIT_WORK_TREE=$PWD

# --- Safety check
if [ -z ""$GIT_DIR"" ]; then
        echo ""Don't run this script from the command line."" &gt;&amp;2
        echo "" (if you want, you could supply GIT_DIR then run"" &gt;&amp;2
        echo ""  $0 &lt;ref&gt; &lt;oldrev&gt; &lt;newrev&gt;)"" &gt;&amp;2
        exit 1
fi

version=""${refname##*_}""
branchName=""${refname##*/}""
filePath=""_componentVersion/BranchVersion.ps1""

if [ -z ""$refname"" -o -z ""$oldrev"" -o -z ""$newrev"" ]; then
        echo ""usage: $0 &lt;ref&gt; &lt;oldrev&gt; &lt;newrev&gt;"" &gt;&amp;2
        exit 1
fi

# --- Check types
# if $newrev is 0000...0000, it's a commit to delete a ref.
zero=""0000000000000000000000000000000000000000""
if [ ""$newrev"" = ""$zero"" ]; then
        newrev_type=delete
else
        newrev_type=$(git cat-file -t $newrev)
fi

case ""$refname"",""$newrev_type"" in
        refs/heads/*,commit)
                if [ ""$oldrev "" != ""$zero"" ]; then
                        version=""${refname##*_}""
                        branchName=""${refname##*/}""
                        filePath=""_componentVersion/BranchVersion.ps1""

                        countOfCommits=$(git rev-list --count START_$version..$newrev)
                        countOfPushes=$(git log --pretty=oneline START_$version..$newrev | grep 'Issue nr: HOOK_$version' | wc -l)
                        countOfPushes=$(($countOfPushes+1))
                        echo git log --pretty=oneline START_$version..$newrev

                        message=""
# -----------------------
# Brancht Version Info
# -----------------------

\$branch = '$version'
\$countOfCommits = $countOfCommits
\$countOfPushes = $countOfPushes # push
\$commitHash = '$newrev'
                        ""

                        # credits go to https://stackoverflow.com/questions/9670302/commit-directly-to-a-bare-repository
                        # branch commit - here we will do the magic about count of commits and about count of pushes
                        # here we create file for info

                        # Empty the index, not sure if this step is necessary
                        git read-tree --empty

                        # Load the current tree. A commit ref is fine, it'll figure it out.
                        git read-tree ""${newrev}""

                        # create blob from stdin
                        BLOB_ID=$(echo ""$message"" | git hash-object -w --stdin)

                        # update indexes in git
                        git update-index --add --cacheinfo 100644 ""$BLOB_ID"" ""$filePath""

                        # Create a tree from your new index
                        TREE_ID=$(git write-tree)

                        # Commit it.
                        NEW_COMMIT=$(echo ""Issue nr: HOOK_$version $message"" | git commit-tree ""$TREE_ID"" -p ""$oldrev"")

                        # Update the branch
                        git update-ref ""$refname"" ""$NEW_COMMIT"" ""$oldrev""
                fi

                # Done
                exit 0
                ;;
        *)
                # Other actions except commit to branch / for now - we won't check it
                exit 0
                ;;
esac

# --- Finished
exit 0
</code></pre>

<p>I'm working with bare repo. And example of commit taken from <a href=""https://git-scm.com/book/en/v2/Git-Internals-Git-Objects"" rel=""nofollow noreferrer"">here</a>
Execte problem is </p>

<pre><code>remote: error: cannot lock ref 'refs/heads/REL_7.0.0': ref refs/heads/REL_7.0.0 is at 54f2454ddab36eda001e27946733a7b0e981f097 but expected 89a3032e0bfb999273205e32b7f6d57173c4bd7e 
</code></pre>
",0,2685996,,
69664387,796837,10/21/2021 15:04,0,505,<makefile><gnu-make><githooks><exit-code><php-cs-fixer>,Get exit code from a Makefile command and use it as a variable in Git hook,"<p>I am currently hooking into Git's <code>pre-push</code> hook to run PHP CS Fixer, but I'm looking for a more less clunky way of doing it. I couldn't figure out how to pass the GNU Make command's script exit code and pass in to the Git hook script.</p>
<p>File setup</p>
<p><code>pre-push</code>:</p>
<pre><code>#!/bin/bash
output=$(make run-cs-fixer)
exitCode=&quot;${output##*$'\n'}&quot; # Gets last line printed from cs-fixer.sh
# Use exitCode to continue or halt push
# Exit code from cs-fixer.sh cannot be obtained here. Make seems to produce its own exit code.
</code></pre>
<p><code>Makefile</code>:</p>
<pre><code>run-cs-fixer:
    @-cd docker-compose exec -T workspace bash ./cs-fixer.sh
    # echo $? gives me the exit code from cs-fixer.sh, but it's not available outside of this area, even if exited with it.
</code></pre>
<p><code>cs-fixer.sh</code>:</p>
<pre><code>#!/bin/bash
./vendor/bin/php-cs-fixer fix...
exitCode=$?
echo $exitCode # This is the exit code I need
</code></pre>
<p>So, it goes: <code>git push...</code> &gt; <code>pre-push</code> &gt; <code>Makefile</code> &gt; <code>cs-fixer</code> produces exit code  that needs to be available in <code>pre-push</code>.</p>
<p>As you can see, I'm printing the exit code manually from <code>cs-fixer.sh</code>, so that it can be extracted when the entire output of this script is captured in <code>pre-push</code> using <code>output=$(make run-cs-fixer)</code>. I just couldn't figure out how to naturally pass the exist code around.</p>
<p>It seems like Make starts a new shell to run its command, so that seems to be one of the problems, but couldn't get <code>.ONESHELL</code> to work. I was able to confirm I can echo the desired exit code with the Make command instructions (below <code>run-cs-fixer:</code>), but that was still unavailable in <code>pre-push</code>.</p>
",5,796837,,
51768187,2765289,8/9/2018 13:20,4,1214,<bash><curl><discord><githooks>,"Git post-receive hook, send curl commit message to Discord Webhook","<p>I am trying to post an information-message in our discord every time someone pushes to the master.</p>

<p>I have a post-receive bash script looking like this:</p>

<pre><code>#!/bin/bash

while read oldrev newrev ref
do
    if [[ $ref =~ .*/master$ ]];
    then

        tail=$(git log -1 --pretty=format:'%h %cn: %s%b' $newrev)       
        url='https://discordapp.com/api/webhooks/validapikey'
        curl -i \
        -H ""Accept: application/json"" \
        -H ""Content-Type:application/json"" \
        -X POST \
        --data  '{""content"": ""'$tail'""}' $url
    fi
done
</code></pre>

<p>If I output tail to a file I get the expected string </p>

<pre><code>6baf5 user: last commit message
</code></pre>

<p>but the message does not get posted on discord</p>

<p>If I replace $tail with ""hello"" it gets posted.</p>
",1,2765289,,
51770041,10011371,8/9/2018 14:47,1,143,<python><windows><git><githooks><windows-security>,Git hook to preserve windows file permissions,"<p>I have a local git repository which is upstream from another local git repository. When I pull from the upstream repository to the downstream one, I want the Windows file permissions on a particular file to be preserved after the update. I attempted using the following solution: <a href=""https://github.com/git/git/blob/master/contrib/hooks/setgitperms.perl#L78"" rel=""nofollow noreferrer"">https://github.com/git/git/blob/master/contrib/hooks/setgitperms.perl#L78</a></p>

<p>But I believe it is based on a UNIX security model and does not preserve my permissions. How can I accomplish this? I was considering using a python script with the win32security module (since I'm not familiar with perl), but have been unable to find suitable documentation for it. I have very little experience with Windows security beyond manually setting permissions.</p>
",3,10011371,,
51778472,2125827,8/10/2018 3:23,2,93,<gerrit><githooks><gerrit-trigger>,How to change the location where the gerrit hooks are running from?,"<p>I am running into a problem where my gerrit hooks are being triggered from a different directory,
I have os.getcwd() as the first line in my change-merged hook,it shows as <code>/mnt/data1/STORE/git/project.git</code> depending on the project the hook is triggered from, I want the hook to run from <code>/gerrit_v2/hooks</code> ,how to make this change?where to look for?is there a place to check the hook logs on how it is being triggered?please advise</p>

<p>FYI..I am using gerrit <code>2.14</code></p>
",0,2125827,0,0
53322440,2149915,11/15/2018 15:11,0,542,<bash><git><kotlin><githooks><pre-commit-hook>,Retain committed files through failed pre-commit hook,"<p>I have a pre-commit hook that runs some linting like so: </p>

<pre><code>./gradlew app:ktlint --daemon

status=$?

if [ ""$status"" = 0 ]
then
    echo ""${green}Linting found no problems.${reset}""
    exit 0
else
    echo 1&gt;&amp;2 ""${red}Linting found issues.${reset}""
    echo ""${yellow}Attempting to fix automatically...${reset}""
    ./gradlew app:ktlintFormat --daemon
    if [ $? = 0 ]
    then
        echo ""${green}Fixed all issues automatically. Committing automagically...! :)${reset}""
        git add .
        git commit -m ""Automatic commit of linted files"" --no-verify
        exit 0
    else
        echo ""${red}Could not fix all issues automatically, please review. :( ${reset}""
        exit 1
    fi  
fi
</code></pre>

<p>The issue here is that if the ktlint task fails, but the automatic format manages to fix all the problems, i have no way of re-adding only the files that were included in the initial commit.</p>

<p>Perhaps this is best explained with an example:</p>

<ul>
<li>I have 3 files, A,B,C</li>
<li>I commit A &amp; B, <strong>but not C</strong></li>
<li><em>ktlint</em> fails the commit due to formatting</li>
<li><em>ktlintFormat</em> manages to fix the issues</li>
<li>Current behaviour: Formatted files A &amp; B but also C are added and committed automatically</li>
<li>Wanted behaviour: <strong>Only</strong> the formatted A &amp; B files are added and committed automatically</li>
</ul>

<p>Thanks in advance!</p>
",0,2149915,,
37277110,1507546,5/17/2016 13:07,2,254,<bash><shell><githooks>,condition always returns false,"<p>Below is my pre-commit git hoook</p>

<pre><code>#!/bin/bash

....
# if git diff -U0 ""$FILE_PATH"" | grep -iq 'todo'; # Double quoting $FILE_PATH doesnt' change anything
if git diff -U0 $FILE_PATH | grep -iq 'todo';
then
    echo $FILE_PATH ' -&gt; Contains TODO'
    exit 1

else
    echo 'nooooooooooooooooooooooooooooooooooo'
fi
</code></pre>

<p>I'm always getting the <code>noooooooooooooooooooo</code> message, however the command below, tried directly on my terminal, works well:</p>

<pre><code>git diff -U0 my/file/path.php | grep -iq 'todo' &amp;&amp; echo 'true' || echo 'false'
</code></pre>

<p>Output</p>

<pre><code>true
</code></pre>

<p><strong>UPDATE</strong></p>

<p>When running <code>bash .git/hooks/pre-commit</code> it works, very strange!!</p>

<p><strong>FYI</strong></p>

<p>I don't know if it's an important information but .git/hooks/pre-commit is a symbolik link</p>
",7,1507546,0,0
70050649,11150592,11/20/2021 23:22,1,202,<git><git-bash><githooks>,Pre-push git hook isn't picked up,"<p>I'm trying to get the pre-push git hook to work. I can run it from git bash just fine, it just doesn't get picked up when I'm pushing. Am I doing something wrong?</p>
<p>File is &quot;.git\hooks\pre-push&quot;</p>
<p>File type is: Shell Script (.sh)</p>
<p>File contents:</p>
<pre><code>#!/bin/sh

echo &quot;*****Running pre-push******&quot;
</code></pre>
<p>Results, when running from git bash:</p>
<p>$ ./pre-push.sh</p>
<p>*****Running pre-push******</p>
",1,11150592,,
53371329,8707451,11/19/2018 9:07,0,202,<git><githooks>,How to recieve return value from python script to pre-commit hook,"<p>As apart of pre-commit hook i want to run a python script that returns a success value to a hook</p>

<p>some thing like that:</p>

<p>pre-commit hook</p>

<pre><code>result=python test.py
if result exit 0
</code></pre>

<p>test.py</p>

<pre><code>..running some tests...
return 1
</code></pre>

<p>is there any way to do that ?</p>

<p>thank you</p>
",2,8707451,,
70097492,10889650,11/24/2021 14:03,1,250,<git><githooks>,Having trouble accessing the arguments to the git pre-receive hook,"<p>I am running vanilla git (git version 2.23.3) as origin master of a bare repository on an AWS instance.</p>
<p>I have created a file repo_dir/hooks/pre-receive with the following contents:</p>
<pre><code>#!/bin/bash -p

echo $1 &gt; pre-receive-old-hash.txt
echo $2 &gt; pre-receive-new-hash.txt
echo $3 &gt; pre-receive-ref.txt

exit 1
</code></pre>
<p>I make a test push from my remote.  I can confirm that hook is run, as I get the push rejected.</p>
<p>However,  while the pre-receive-x.txt files exist, they are empty.  What am I doing wrong?</p>
",1,10889650,,
37360442,3763649,5/21/2016 8:05,6,1936,<git><deployment><hook><githooks><git-push>,Git: send parameters to 'post-receive' hook with the 'git push' command,"<p>I have configured a <code>post-receive</code> hook script on a server for automatic deploy with Git, as described for example <a href=""https://www.digitalocean.com/community/tutorials/how-to-set-up-automatic-deployment-with-git-with-a-vps"" rel=""noreferrer"">here</a>.</p>

<p>So, when on my local PC I send a push on the production server:</p>

<pre><code>git push production master
</code></pre>

<p>the <code>post-receive</code> hook is triggered, copying the content of the repository inside the live directory.</p>

<p>My question is if is there some way to pass some parameter to the <code>post-receive</code> hook when I send the push?</p>

<p>Something like this:</p>

<pre><code>git push production master --params=""clear-the-cache=1""
</code></pre>

<p>then within the hook I can read the <code>'clear-the-cache=1'</code> parameter and perform additional operations.</p>

<p>Is there a way to do it?</p>
",2,3763649,,
37385663,555265,5/23/2016 8:02,1,130,<git><githooks><tortoisegit>,git auto fetch before a diff,"<p>Is there a way to make git fetch from a remote right before you do a diff? I can't for example see a hook that would allow this .. If you cannot do this via a hook is there a genuinely good reason or is it just functionality that doesn't currently exist / there is no demand for? </p>

<p>Is it possible via any client tool (e.g. I use TortoiseGit for Windows)</p>

<p>Personally I think it would be useful as I always want to compare to the latest version of the remote and I'm worried i'll forget to fetch ..</p>

<p>Thanks </p>
",3,555265,0,0
53471524,999162,11/25/2018 20:17,0,82,<git><github><heroku><database-migration><githooks>,Setup automatice database migration on Heroku after push,"<p>I've managed to setup my Heroku app to deploy automatically on a git push to Github. I see that Heroku itself offers <a href=""https://devcenter.heroku.com/articles/deploy-hooks"" rel=""nofollow noreferrer"">Deploy Hooks</a>, but those seem meant for integration with other services.</p>

<p>What I'd like to do is see if any changed files containing sql migrations were pushed, and if so, execute a simple bash command performing the latest migration on my Django app, for example in a git <code>post-update</code> hook.</p>

<p>How can I set this up on Heroku — I can't see any <code>.git</code> folder in my app?</p>
",0,999162,,
38487659,1977045,7/20/2016 18:00,0,274,<git><githooks><bonobo>,Converting a GIT file system repository to a Bonobo,"<p>We have approximately 100 Git repositories in a window server. Which we clone/access simply by </p>

<blockquote>
  <p>\\GITrepos\&amp;Repository Name&amp;</p>
</blockquote>

<p>We had some problems with it and found out that most of them are solved if I move the repositories to be managed under Bonobo Git server.</p>

<p>I have installed the Bonobo Git Server and directed it to get all repositories from the \\GITrepos folder. I can see all the LDAP users I connected as Users in Bonobo.</p>

<p>I have connected our LDAP groups to be all the users in the Bonobo. I can see all the LDAP users I connected as Users in Bonobo.</p>

<p>I can clone them using the http:/... that Bonobo manages</p>

<p>After answering 1,3 &amp; 4 myself, below. All left for me to do is -</p>

<ol start=""2"">
<li>How do I prevent the developers from continuing using the \\path\to\Repos method ? </li>
</ol>

<p>My previous problems solved below:</p>

<p>1 - What is the simplest &amp; recommended way to add all relevant contributors to the correct repository ? I don't feel like going over repository by repository and marking the relevant 10 developers among hundreds in Bonobo UI users list</p>

<p>3 - If I create specific teams and then in the repository configuration under Bonobo UI I mark only the Team and not specific Users, will that allow users to clone/push/pull ? Or, I must add them to the contributors too ?</p>

<p>4 - We are using an 'update' hook to check who is allowed to push to which branch. Is it necessary to use it under Bonobo ? How can I manage the branch authorisation under Bonobo ?</p>

<p>Thanks,
Eli</p>
",2,1977045,,
71215070,10172569,2/22/2022 1:53,-1,562,<git><shell><sh><githooks><husky>,How can I use a shell function with a return code in my git pre-commit hook using husky?,"<p>I have a project with githooks managed by the <a href=""https://www.npmjs.com/package/husky"" rel=""nofollow noreferrer"">husky</a> package. Usually I appreciate the fail-fast nature of the hooks (unsure if <code>set -e</code> is being used like in a shell script) but I ran into an issue today with my own custom function. I am trying to do one of two things depending on the return value of a function:</p>
<pre><code>#!/bin/sh
my_func() {
  # some stuff
  return command
}

if my_func;
then
     echo &quot;func returned 0&quot;
else
     echo &quot;func returned non-zero&quot;
fi
</code></pre>
<p>The problem is as soon as any function returns a non-zero value husky quits out:</p>
<pre><code>husky - pre-commit hook exited with code 1 (error)
</code></pre>
<p>How can I ignore/handle non-zero returns from function calls? I don't think I want some type of global ignore as like I said I usually appreciate this fail-fast behavior for unhandled errors. Also I don't think I can switch away from function returns to a shared variable or something because I am doing a lot of async stuff with these function calls so I need their actual return values.</p>
",2,10172569,,
71222422,212730,2/22/2022 13:46,1,419,<c++><rust><githooks><pre-commit-hook><rustfmt>,How can I auto-format Rust (and C++) code on commit automatically?,"<p>I would like to automatically format the code when I do commit using <code>rustfmt</code> the same way as I did it before for <code>clang-format -i</code>. I.e. format only the lines of code which has been updated in the commit without touching other code. How to do it?</p>
",0,212730,,
71222762,6259019,2/22/2022 14:07,0,1302,<npm><npm-install><githooks><visual-studio-app-center>,App Center: how to automatically run a script somewhere between git clone and npm install?,"<p>In order to try and make App Center work with my monorepo React Native app, I am trying to find a way to insert a few bash scripts between the automated <code>git clone</code> and <code>npm install</code> called by App Center.
Indeed, App Center automatically <code>git clone</code> the linked project and then automatically runs <code>npm install</code> as soon as the cloning is done.</p>
<p>There is no native <code>post-clone</code> hook, I haven't been able to make <a href=""https://github.com/git-hook/post-clone"" rel=""nofollow noreferrer"">that package</a> work (and I don't even know if it could work since the <code>git clone</code> command would be called from a blank environment) and npm script <code>preinstall</code> <a href=""https://github.com/npm/cli/issues/2660"" rel=""nofollow noreferrer"">doesn't seem to work as it should since npm 7</a>.</p>
<p>Does anyone know of a way to achieve that?</p>
",0,6259019,,
71256790,622049,2/24/2022 18:43,0,185,<git><githooks><git-push>,How can I check that commits stay in author date order?,"<h1>Motivation</h1>
<p>Let's say we have these commits (most recently committed on the left):</p>
<p>E-F-G-H-I-J-K-L-M-N</p>
<p>We want to release E on another branch, so we cherry-pick it, but a conflict arises and we discover that we need J as well. We take J but still have conflicts so we take M as well, which E depended on in a different way than J. Then it works. Our history on the new branch is now:</p>
<p>E-M-J</p>
<p>The obvious downside here is that the commits aren't ordered in the same logical way they were before, seeing E-J-M as a feature embedded in the longer history. One solution is to <a href=""https://stackoverflow.com/questions/27245008/reorder-git-commit-history-by-date"">reorder git commit history by date</a>. However, rebasing activity on the original local branch may mean that J actually has an author date that is before M. At worst, an interactive rebase to re-sort by author date may not even work if e.g. we needed K-L (in that order, because K depends on L) but L has an author date after K.</p>
<p>One solution is to manually modify author dates when you run into this issue, but that's not the focus here.</p>
<h2>Edit: Why prefer E-J-M?</h2>
<p>Many comments seem to focus on the motivation, so perhaps it is worth expanding on.</p>
<p>Let's say you cherry-pick E on top of M-J and it doesn't work (conflicts). Now you need to go find the commit you're missing, and cherry-pick it into the right place. If it's L, then L-M-J may create an unnecessary conflict when J-L-M would not have. In the real example there are more than 50 commits.</p>
<p>It's also significantly easier to read commits in a history that were done in the same order as they were done in reality, especially over months of potentially different projects. If the new E-M-J branch is going to e.g. pass all tests (as well as not create conflicts) you need to make sure you didn't miss any bugfix commits in {F, G, H, I, K, L}. Keeping commits in order helps you keep track of what commits you've reviewed for inclusion.</p>
<h1>Question</h1>
<p>I'd like to check that before every push all commits are in author date order (at least relative to the last pushed commit). I'd probably put this in a <code>pre-push</code> hook. Is there a simple way to run this check? Perhaps it's hard if the branch doesn't have a remote yet?</p>
<p>It may also help to ensure the new author dates are all after the author date of the &quot;last pushed commit&quot; but perhaps that's a different question.</p>
",5,622049,,
71270123,8049982,2/25/2022 18:15,0,118,<git><githooks><pre-commit>,Git pre-commit client-side hook. Enforce adding file via force,"<p>We have a file in git, and it's LARGE about 1GB. However, this file is generated in-engine and takes hours of full CPU usage to generate. Thus, we would like to push this up to git and have it maintained. However, it does not need to be pushed very often. In fact we almost never want to push this file unless we are building for distribution.</p>
<p>A few times now, someone has pushed this file up accidentally and it uses lots of LFS bandwidth and storage. I was hoping to be able to add a git pre-commit hook to make sure that this file was added to the commit by force, or just some way to double check the addition of the file.</p>
<p>I've never made a hook script, is there any way that I accomplish this functionality with a pre-commit hook? I am struggling to find regular documentation on the creation of these scripts and what attributes I have access to. Also, if there is an easier way to accomplish what I want, that would be super appreciated!</p>
",2,8049982,,
71280135,16145046,2/26/2022 20:41,0,120,<git><githooks><git-remote>,Efficiently replicate git working tree from remote repo,"<p>I have a remote bare repo on my server. I want the server to always have the current working tree as a real directory in the system.</p>
<p>I am using the <code>post-receive</code> git-hook with a command to build the working tree and to override the old tree:</p>
<p><code>git archive master | tar -x -C /dir/to/my/project/</code></p>
<p>However, this approach has a problem: It does not delete files that were deleted/moved in the repo.</p>
<p>I could simply erase the whole project directory but I want to keep all files that are ignored in my .gitignore.</p>
<p>I tried to write a script to delete all files that are not ignored but it takes minutes to process.</p>
<p>Is there a way to replicate the working tree without erasing ignored files?</p>
",4,16145046,,
53869155,1354504,12/20/2018 12:54,14,16662,<git><githooks><git-husky><husky>,How to run husky pre-commit in child directory only,"<p>We have an enterprise application with a folder structure like the following:</p>

<pre>
/project
  .git
  /sub1
    ...Java project
  /sub2
    package.json
    ...Javascript Backbone project
  /sub3
    ...Java project
  /sub4
    ...Java project
  /sub5
    package.json
    ...Javascript React project
</pre>

<p>I currently have Husky set up both in sub2 and sub5 projects, which causes conflicts (requires an npm install whenever I switch projects).  Also, the Java developers are reporting that when they commit code in projects sub1, sub3 and sub4, the Husky git hooks are being executed.</p>

<p>Is it possible to only have the hooks run if you are IN a certain folder when you commit?</p>
",0,1354504,0,0
71410212,18417304,3/9/2022 13:37,-2,128,<git><gitlab><githooks>,Git pre-receive hooks performance issues,"<p>Currently I am using pre-receive hooks in the GitLab server for validating all the files that are pushed</p>
<ol>
<li><strong>But I want to know if the pre receive hooks will cause any performance issue</strong>??</li>
<li>**What are the drawbacks/when should we avoid using server side hooks in gitlab **</li>
</ol>
<p>Is there anyways to check performance issues on gitlab server</p>
",3,18417304,,
53908916,1246521,12/24/2018 3:30,0,77,<git><githooks>,How to call script maintained in repo during pre-receive,"<p>Suppose I have a unit-test script maintained under my git. I would like to create a pre-receive hook to call this unit-test. However pre-receive should be installed at server side. In my repository, the directory structure looks completely different from my working tree. How could I call that unit-test script?</p>

<p>Thanks</p>

<p>UPDATE:</p>

<p>Basically, the test script needs to run inside a working tree. Currently, my work around is to do a ""git clone"" in temp directory and reset the HEAD. However, this approach seems not work with higher version of GIT. Because it not allow ref update in <a href=""https://git-scm.com/docs/git-receive-pack#_quarantine_environment"" rel=""nofollow noreferrer"">quarantine environment</a>. So I am still looking for a vital solution. </p>
",0,1246521,,
71503396,10503545,3/16/2022 19:45,0,1216,<git><githooks><code-formatting><pre-commit-hook><editorconfig>,How to use .editorconfig for code formatting in git pre-commit hook?,"<p>In my project there is a requirement to check for code formatting errors. This needs to happen during a git commit. I want to make use of the <code>pre-commit</code> hook but the catch here is the format validation needs to be performed using the rules mentioned in <code>.editorconfig</code> file, which is already present in the project repository.</p>
<p>Please do suggest a way to use <code>.editorcofig</code> in git <code>pre-commit</code> hook.</p>
",4,10503545,,
71560620,12328587,3/21/2022 16:07,-1,28,<git><conda><githooks>,Git post checkout hook receives same value for prev and current head on bare repo,"<p>I've got a bare repo on a production server, which is updated (utilising a webhook in Gitlab) whenever a merge request is approved.</p>
<p>The repo is updated like so:</p>
<pre><code>git fetch origin master:master

git --work-tree=/home/prod/git/ --git-dir/=/path/to/bare-repo.git checkout -f
</code></pre>
<p>I would like to use the post-checkout hook to verify whether a conda environment file was changed; Content of the hook:</p>
<pre><code>#!/bin/sh

prevHEAD=$1
newHEAD=$2
checkoutType=$3

changed_files=&quot;$(git diff-tree -r --name-only --no-commit-id  $prevHEAD $newHEAD)&quot;
</code></pre>
<p>Unfortunately everytime the checkout is triggered, and I'm not clear on why this happens, prevHEAD and newHEAD variables are always the same. The values themselves differ on every checkout, however, they always match each other.</p>
<p>Assuming this method can't be used, what would be the best way to identify whether a particular file was changed?</p>
<p>Elsewhere I've read to use push-to deploy model. This would require replacing the fetch &amp; checkout commands with a git push instead, and utilising post-receive hook. I'll look into this, but given that the fetch &amp; checkout already work fine, I'd prefer not changing that setup if possible at all.</p>
",3,12328587,,
71577871,7449273,3/22/2022 19:26,1,326,<git><githooks><pre-commit-hook><pre-commit.com>,how to use pre-commit hook to sort a csv file,"<p>I have a <code>.csv</code> file that I'd like to sort pre-commit. I <a href=""https://github.com/pre-commit/pre-commit-hooks/issues/357"" rel=""nofollow noreferrer"">found</a> this pre-commit hook <code>file-contents-sorter</code> which sorts the file with the first value.</p>
<pre><code>repos:
-   repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v2.1.0
    hooks:
       - id: file-contents-sorter
         files: blackbox-files\.csv$
</code></pre>
<p>But I'd like to sort it first by the last value and then the first value. I was wondering if I can do something like this with pre-commit git hooks.</p>
<p>My csv file is something like this:</p>
<pre><code>aaaa,bbbb
sssss,bbbb
fff,bbb
kkkk,eeee
www,ddd

The above code gives me this output:

aaaa,bbbb
fff,bbb
kkkk,eeee
sssss,bbbb
www,ddd

I'd like this output:

aaaa,bbbb
fff,bbb
sssss,bbbb
www,ddd
kkkk,eeee
</code></pre>
",1,7449273,,
71585587,7973475,3/23/2022 10:28,0,15,<githooks>,Git pre-push does not fail recently,"<p>I have pre-push hook that executes my unit tests. When tests fail, push failed as well. However this stopped, noticed today, so when my unit tests fail, my code is pushed.
Tried to address this by adding <code>set -euo pipefail</code>, but no change, faulty code is still pushed to remote.</p>
<p>This is my whole pre-push:</p>
<pre><code>#!/bin/sh
set -euo pipefail

docker-compose exec my-container composer test
</code></pre>
<p>If I run it directly from terminal and tests fail, pre-push fails, exit code is not zero.</p>
<p>Fellow developer has the same script on same GIT version, but it works for him.
Edit: after closer look he realized it does not work for him neither. Perhaps something with git version?</p>
<p>Any idea why my push proceeds even though my pre-push hook fails?</p>
",3,7973475,,
71672335,3434521,3/30/2022 6:14,2,8435,<angular><githooks><husky><git-husky>,How to configure husky pre-push hook to run tests,"<p>I am trying to configure husky pre-push hook to run tests before push. Everything looks fine. After run <code>git push origin</code> hook is fired and tests are runing. Problem is that when tests are done and even if operation is successed, push is freezed and nothing else happened.</p>
<p><strong>package.json</strong></p>
<pre><code>  &quot;scripts&quot;: {
    ...
    &quot;pre-commit&quot;: &quot;npm run lint&quot;,
    &quot;pre-push&quot;: &quot;npm run test&quot;
  }
</code></pre>
<p><strong>.husky/pre-push</strong></p>
<pre><code>#!/bin/sh
. &quot;$(dirname &quot;$0&quot;)/_/husky.sh&quot;

npm run pre-push
</code></pre>
<p><a href=""https://i.stack.imgur.com/8wiSw.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8wiSw.png"" alt=""enter image description here"" /></a></p>
",0,3434521,,
71674072,887804,3/30/2022 8:38,-1,1948,<git><zsh><githooks>,Fatal: this operation must be run in a work tree - but it is,"<p>I'm actively developing working on a repo and want to add a github pre-commit hook - my first.</p>
<p>When I cd into the <code>/.git</code> directory I get the error <code>fatal: this operation must be run in a work tree</code></p>
<p>I have tried:</p>
<ol>
<li>Checking out the branch again</li>
<li>Running <code>git init</code> again</li>
<li>Setting the <code>GIT_WORK_TREE</code> env var (and <code>echo $GIT_WORK_TREE</code> to ensure it's set)</li>
<li>running <code>git --work-tree=. checkout branch</code> and <code>git --work-tree=${PWD} checkout branch</code></li>
<li><code>rm -rf</code> and cloning again</li>
</ol>
<p>Any suggestions?
I am using zsh on MacOS Monterey btw and I am also using Sourcetree to manage the repo sometimes.</p>
<p>Thank you</p>
",4,887804,,
71740554,4493048,4/4/2022 16:21,5,1827,<git><npm><githooks>,Git hook to increment version number on merge to master,"<p>The goal is to automatically increment the version number in <code>package.json</code> when the <code>develop</code> branch is merged to <code>master</code>, but not what a feature branch is merged to <code>develop</code>, nor when then <code>release</code> branch is merged to <code>master</code>. (I'm oversimplifying my usecase a bit, but that's basically it.)</p>
<p>Actually incrementing the version number is easy - there's already an npm command to do that.</p>
<p>But I don't understand how to write the Git hook to run that command. How do I determine the name of the current branch, and the branch being merged into? Can this be done in a pre-merge-commit hook? Is it even possible to edit the source and make a commit <em>from</em> the pre-merge-commit hook?</p>
",7,4493048,,
53980990,10799224,12/30/2018 20:00,0,50,<ruby><git><github><githooks>,"Git extra hook, pre-upload","<p>I'm a university student. Currently, I’m doing my Final Year Project that requires a hook that executes automatically on the server side of the repository, before the objects been pulled to the client side, and after the objects have been pushed to the server side, which is ""post-receive"" hook.</p>

<p>I have done lots of research regard on the hook and I came to know grack and rjgit_grack. Links will be attached below. </p>

<p>Grack : <a href=""https://github.com/grackorg/grack"" rel=""nofollow noreferrer"">https://github.com/grackorg/grack</a>
Rjgit_grack : <a href=""https://github.com/grackorg/rjgit_grack"" rel=""nofollow noreferrer"">https://github.com/grackorg/rjgit_grack</a></p>

<p>Grack and rjgit_grack is a gem from <a href=""https://rubygems.org/"" rel=""nofollow noreferrer"">https://rubygems.org/</a>. Grack project aims to replace the builtin git-http-backend CGI handler distributed with C Git with a Rack application and rjgit_grack is an alternative adapter of grack that support extra hooks for git that have the hook that I needed for my project, ""preUpload"" hook that is executed immediately before an upload-operation is performed, i.e. before data is sent to the client. But I was unable to get it to work for my project due to various reasons.</p>

<p>Why Git doesn't have a hook that executed immediately before the data is sent to the client? Any advice on getting this hook or any similar function of the hook?</p>
",0,10799224,,
71785263,8618288,4/7/2022 15:50,0,83,<bash><git><shell><git-bash><githooks>,Find wrapped strings in a pre-push git hook,"<p>I am trying to go through the changes being made in a git push and find any instance of a wrapped string like so: <code>___('something to be translated')</code> so that I can make some subsequent API calls with that information. But for some reason I am unable to get any sort of useful output when I try to use a <code>git diff --cached</code> call. I already have my regex pattern figured out to do the search. Any suggestions on this would be great.</p>
<p>My code looks something like this:</p>
<pre><code>FILES_PATTERN=&quot;/___[^)]+\)/gm&quot;
git diff --cached --name-only | \
    grep -E $FILES_PATTERN | \
    GREP_COLOR='4;5;37;41' xargs grep --color --with-filename -n  echo 'COMMIT contains strings that need to be uploaded to Lokalise.' &amp;&amp; exit 1
</code></pre>
",8,8618288,0,0
71796162,5019802,4/8/2022 11:24,0,2283,<bash><git><macos><githooks>,pre-commit hook not working in macOS but working in Ubuntu,"<p>I have a git pre-commit hook script to validate certain thing during commit.</p>
<p>This in my script <code>.githooks/pre-commit</code></p>
<pre class=""lang-sh prettyprint-override""><code>#!/bin/bash

echo &quot;Here I am!&quot;
</code></pre>
<p>This is the file permission
<a href=""https://i.stack.imgur.com/07SQF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/07SQF.png"" alt=""file permission"" /></a></p>
<p>In ubantu when I am committing anything I am able to view the echoed message, where as when I doing the the same thing in MacOS I am getting this error</p>
<blockquote>
<p><strong>fatal: cannot run .githooks/pre-commit: No such file or directory</strong></p>
</blockquote>
<p>git config is <code>.git/config</code></p>
<p><a href=""https://i.stack.imgur.com/S8ZKR.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/S8ZKR.png"" alt=""git config"" /></a></p>
<p>line break type is CRLF
<a href=""https://i.stack.imgur.com/fEllF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/fEllF.png"" alt=""crlf"" /></a></p>
<p>Also when I am directly running the file (<em>in MacOS</em>) from CLI like this, it is giving me the desired output.</p>
<pre class=""lang-sh prettyprint-override""><code>./.githooks/pre-commit
</code></pre>
<p>My git version is <code>2.32.0 (Apple Git-132)</code></p>
",5,5019802,,
54011083,8998002,1/2/2019 18:04,0,121,<docker><docker-compose><database-migration><githooks>,Docker-compose services build & deployment workflow,"<p>Recently I started making a REST API.
My plan was to use React.js, Flask and Postgres all being created with docker-compose during development and then in production use React and Flask services with docker-compose but make the database run on VPS (outside of docker container). I should also add that I am currently doing my migrations via Flask-Migrate module.</p>

<p>I was thinking of a way how to easily deploy the project to a VPS by git and build the docker-compose using git post-receive hook, since I want to have full control of the process, but...</p>

<ol>
<li>How would I make database migrations this way?</li>
<li>Is this a good way to build &amp; deploy a project?</li>
</ol>

<p>Sorry for any inconvenience and feel free to ask me for further info if you can't understand my questions.</p>
",0,8998002,,
54012598,4178623,1/2/2019 20:16,1,3373,<git><githooks>,git core.hooksPath permission denied issue,"<p>I'm trying to have one repo with all my githooks and every other repo references that.</p>

<p>My repo directory structure looks like this.</p>

<pre><code>~/dev/githooks/.git/hooks
 |-&gt; pre-push
   |-&gt; prevent-master
</code></pre>

<p><code>prevent-master</code></p>

<pre><code>#!/bin/sh

branch_blocked=""master""

if grep -q ""$branch_blocked""; then
    echo ""Branch '$branch_blocked' is blocked by yourself."" &gt;&amp;2
    exit 1
fi
</code></pre>

<p>Now I tell my git config to use this githook directory <code>git config core.hooksPath ~/dev/githooks/.git/hooks</code></p>

<p>In a separate repo I'm trying to push and it says</p>

<pre><code>clickthisnick$ git push
fatal: cannot exec '/Users/clickthisnick/dev/githooks/.git/hooks/pre-push': Permission denied
</code></pre>

<p>I have <code>chmod -R +xr ~/dev/githooks</code> and am using a git version that supports this <code>git version 2.17.2</code>. </p>

<p>Anything else I can try to get this to work?</p>
",4,4178623,,
54015824,2095022,1/3/2019 3:08,0,42,<javascript><node.js><import><githooks><git-commit>,How to test validity of es6 imports before commit,"<p>I have a react/redux based large codebase comprising of the following hierarchy:</p>

<p>Routes >> Container >> Components</p>

<p>which means that Routes contain Containers and Containers contain Components.</p>

<p>I'm using a lot of es6 import across my code - to import stuff if each other and also to import svg's and npm packages like lodash.</p>

<p>If I refactor the path of the import:</p>

<pre><code>import x from '../../path1';
</code></pre>

<p>to</p>

<pre><code>import x from '../shorterPath2';
</code></pre>

<p>How can I run some tests across my codebase to ensure that for all files - the imports are correctly resolved - that all filepaths from which things are being imported will return an asset or something from a index.js present there:</p>

<p>Should I </p>

<ol>
<li>write my own nodeJS script/ shell script</li>
<li>try something from javascript testing framework - can this be done??</li>
<li>will git-hooks work here??</li>
</ol>

<p>Please give me a direction to think on and I can code the rest.</p>

<p>Thanks a lot!</p>
",0,2095022,,
72007509,15845685,4/26/2022 1:52,1,334,<github><azure-devops><githooks><azure-repos><git-husky>,Add Husky(Git Hooks) into Azure DevOps Project,"<p>My repository is on AzureDevops, and I cloned it by the button: &quot;Clone in VS Code&quot;. The repository was cloned correctly. I have the files from package.json, .gitignore, etc...</p>
<p>But I don't have a .git folder. And I would like to install some tool to standardize code commits. I try to install husky 7 but it doesn't find the .git folder which doesn't really exist.</p>
<p>Is there any way to use git hooks for the repository within Azure Devops?</p>
<p>Is there any other tool for standardizing commits that works in an Azure Devops repository?</p>
<p>When i try to install husky, i get that error: .git can't be found (see <a href=""https://git.io/Jc3F9"" rel=""nofollow noreferrer"">https://git.io/Jc3F9</a>)</p>
<pre><code>husky -v = ^7.0.0,
npm -v = 6.14.12
</code></pre>
",0,15845685,,
54037254,5934879,1/4/2019 10:35,0,2015,<git><msbuild><nuget><githooks>,"How to get the msbuild path returned from ""nuget.exe restore""","<p>I'm new to using git hooks and now I'm trying to restore nuget packages for the projects in my solution and after that build the solution.
What I did is create a git hook 'post-merge' and added the following code:</p>

<pre><code>#!/bin/sh
RED='\033[0;31m'
GREEN='\033[0;32m'
NC='\033[0m'

projectRoot=""$(git rev-parse --show-toplevel)""
solutionFile=""solution.sln""

msBuild=""C:\Program Files (x86)\Microsoft Visual Studio\2017\Community\MSBuild\15.0\Bin\MSBuild.exe""

echo -e ""\n${RED}Restoring nuget packages for ${solutionFile}...${NC}""
./nuget.exe restore $projectRoot/development/$solutionFile
echo -e ""${GREEN}Done restoring nuget packages for ${solutionFile}.${NC}\n""

echo -e ""\n${RED}Building ${solutionFile}...${NC}""
""$msBuild""  $projectRoot/development/$solutionFile
echo -e ""${GREEN}Done building ${solutionFile}.${NC}\n""

exit 1
</code></pre>

<p>I added exit 1 so that I can test my commands without actually pulling the project.</p>

<p>Now after I run nuget.exe on the solution path, it returns a msbuild auto-detection path, I want to use this path to locate msbuild.exe so I can run msbuild on the solution based on the version it's using.</p>

<p>How do I do this?
And if there's any way to improve or make this code better please let me know!</p>

<p>Thank you!</p>
",0,5934879,,
54097362,1688051,1/8/2019 18:07,1,244,<version-control><githooks><checkin><rational-team-concert><server-side-validation>,Git hook equivalent in RTC SCM,"<p>We have Gitlab configured like following:</p>

<ol>
<li>If anyone pushes their code, first sever side git hook (pre-receive) will trigger SonarQube Quality checks, if any error in code it rejects that push.</li>
<li>Also checks for file types, if some files like <code>.zip</code>, <code>.o</code> or <code>.class</code> are present, the code gets rejected by the same server side hook. </li>
<li>Same for file size. </li>
</ol>

<p>Are the above 3 validations possible in IBM RTC SCM before delivering the code to the server? How? I know <code>.jazzignore</code>, but I want specifically for server side rules.</p>

<p>We want to know it as we are switching to RTC. We also have hooks to build via Jenkins etc. etc., but I know this is possible in RTC. </p>
",2,1688051,0,0
72117065,3696153,5/4/2022 17:22,0,94,<git><githooks><git-server>,serverside git restrict branch creation to specific users,"<p>I'm thinking this needs to be done with some type of git hook.</p>
<p>On our central git server (where everybody merges to) - we have special (reserved) branch names, for example: any branch starting with RELEASE_ shall only be made by the CM team members as part of a formal release process.</p>
<p>I also need to block anyone from accidently commiting to that branch once it is created, ie: once a RELEASE has been made that RELEASE branch shall be read only in some form</p>
<p>This is not for malicious reasons, its just to stop stupid mistakes - we are all human and damn, shit happens just want to avoid and stop stupid mistakes before they bite the team in the ass and we have problems.</p>
<p>My question is, what GIT rule or hook can I create that will prevent this type of mistake from happening.  And can this be worked around with a 'force push'? (this is why I am thinking the server side is where it needs to be enforced)</p>
<p>If this is possible, can you point met to an example? (This is not a hard thing to do with SVN - where we are comming from, and the powers that be are asking this question of me and I can't answer that yet)</p>
<p>NOTE: I think this really needs to be on the server side, reason: The hook needs to support all users, both windows and linux and I dont' want somebody to try to fix/upgrade/whatever these types of security hooks on accident... (that stuff never happens right...)</p>
",6,3696153,,
54150925,1310546,1/11/2019 16:56,4,3533,<git><intellij-idea><githooks>,Interactive Pre-Commit Hook in IntelliJ,"<p>I'm working on an interactive pre-commit Git Hook to ensure that a certain set of criteria have been met prior to the commit (eg. updating particular files in the repo). I've been basing my checklist off of the example <a href=""https://vickylai.com/verbose/interactive-pre-commit-hook-checklist/"" rel=""nofollow noreferrer"">here</a>. My hook has identical implementation but has different question text. Currently, it works perfectly in Git Bash.</p>

<p>However, for a team-wide implementation I need to have it working within IntelliJ, as most developers use Git functionality within the IDE. Using the example hook linked above, my commits fail with the error:</p>

<p><code>0 files committed, 1 file failed to commit: COMMIT TEST MESSAGE Would you like to play a game? .git/hooks/pre-commit: line 6: /dev/tty: No such device or address</code></p>

<p>I would like to have the complete interaction contained within IntelliJ, if possible. If this is not possible, I would begin looking into IntelliJ plugin development in order to implement this within organizational restrictions.</p>

<p>For convenience, the Git hook linked above is pasted below.</p>

<pre><code>#!/bin/sh

echo ""Would you like to play a game?""

# Read user input, assign stdin to keyboard
exec &lt; /dev/tty

while read -p ""Have you double checked that only relevant files were added? (Y/n) "" yn; do
case $yn in
    [Yy] ) break;;
    [Nn] ) echo ""Please ensure the right files were added!""; exit 1;;
    * ) echo ""Please answer y (yes) or n (no):"" &amp;&amp; continue;
esac
done
while read -p ""Has the documentation been updated? (Y/n) "" yn; do
case $yn in
    [Yy] ) break;;
    [Nn] ) echo ""Please add or update the docs!""; exit 1;;
    * ) echo ""Please answer y (yes) or n (no):"" &amp;&amp; continue;
esac
done
while read -p ""Do you know which issue or PR numbers to reference? (Y/n) "" yn; do
case $yn in
    [Yy] ) break;;
    [Nn] ) echo ""Better go check those tracking numbers!""; exit 1;;
    * ) echo ""Please answer y (yes) or n (no):"" &amp;&amp; continue;
    esac
done

exec &lt;&amp;-
</code></pre>
",2,1310546,,
54222391,1940466,1/16/2019 17:31,1,477,<git><github><hook><githooks>,Can a git pre-push hook warn me if my current branch's source code contains a string?,"<p>I frequently forget to remove debugging code (like <code>console.log()</code> from my <code>git</code> branches before they are reviewed. I'm ok with <em>committing</em> the <code>console.log()</code> calls, <em>as long as</em> I remember to remove them before squashing and merging the branch.</p>

<p>I'm wondering how to write a pre-push hook that will check whether any <code>console.log()</code> calls are retained in my current branch. I don't want the hook to block me from merging, but rather just to remind me to remove those lines of code. Can a pre-push hook do this?</p>
",2,1940466,,
54226297,3521109,1/16/2019 22:22,9,370,<git><latex><gitlab><githooks>,Duplicating git client hooks on the server side,"<p>I've defined a post-commit hook in <code>.git/hooks</code> that I want to also execute on the server side (<a href=""https://gitlab.com"" rel=""noreferrer"">Gitlab.com</a> in my case).</p>

<p>Background: I'm using gitinfo2 along with a post-commit hook in a LaTeX project to quote info about the latest git tag within the pdf. This works well on my computer, but fails when I push the repo to Gitlab.</p>

<p>It doesn't cause an error, but gives the following warning, which basically means that the git hook never executed.</p>

<pre><code>Package gitinfo2 Warning: I can't find the file '.git/gitHeadInfo.gin'.
(gitinfo2)                All git metadata has been set to '(None)'.
</code></pre>

<p>From what I've read online so far, client side git hooks don't execute on the server - but why not? In a situation like this, I would want the hook to execute on both the client and the server.</p>

<p>So, basically, I want the sequence of events to be like this:</p>

<ol>
<li>I make a commit of the .tex file.</li>
<li>I push the commit to Gitlab.</li>
<li>Once it's at Gitlab, the git hook is executed leading to a file called <code>gitHeadInfo.gin</code> being created in the <code>.git</code> folder.</li>
<li>The latex document is built using Gitlab CI, with the <code>gitinfo</code> package helping to pull the git version info from <code>gitHeadInfo.gin</code>.</li>
<li>The pdf is deployed to <a href=""https://about.gitlab.com/product/pages/"" rel=""noreferrer"">Gitlab Pages</a>.</li>
</ol>

<p>I've got everything working except step 3. So, my current workaround is to build the pdf on my computer as well and commit it rather than relying on Gitlab CI.</p>

<p>Contents of the git hook:</p>

<pre><code>#!/bin/sh
# Copyright 2015 Brent Longborough
# Part of gitinfo2 package Version 2
# Release 2.0.7 2015-11-22
# Please read gitinfo2.pdf for licencing and other details
# -----------------------------------------------------
# Post-{commit,checkout,merge} hook for the gitinfo2 package
#
# Get the first tag found in the history from the current HEAD
FIRSTTAG=$(git describe --tags --always --dirty='-*' 2&gt;/dev/null)
# Get the first tag in history that looks like a Release
RELTAG=$(git describe --tags --long --always --dirty='-*' --match '[0-9]*.*' 2&gt;/dev/null)
# Hoover up the metadata
git --no-pager log -1 --date=short --decorate=short \
    --pretty=format:""\usepackage[%
        shash={%h},
        lhash={%H},
        authname={%an},
        authemail={%ae},
        authsdate={%ad},
        authidate={%ai},
        authudate={%at},
        commname={%cn},
        commemail={%ce},
        commsdate={%cd},
        commidate={%ci},
        commudate={%ct},
        refnames={%d},
        firsttagdescribe={$FIRSTTAG},
        reltag={$RELTAG}
    ]{gitexinfo}"" HEAD &gt; .git/gitHeadInfo.gin
</code></pre>
",7,3521109,0,0
72209828,14244865,5/12/2022 3:29,0,170,<git><github><jira><githooks>,How can I distinguish merge commit or push commit in pre-receive/post-reveice hook,"<p>I have a post-receive hook that push a timecard to jira when someone push a commit. But merge commit will trgger it too. So how can I distinguish merge commit or push commit in post-reveice hook?</p>
<p>This is my code:</p>
<pre><code>#!/usr/bin/env ruby
#encoding: utf-8

require 'json'

def push_spent_time(msg)
  msg = msg.to_s.rstrip
  msg += &quot; &quot;
  day = msg[/@time.*( \d+d )/, 1]
  hour = msg[/@time.*( \d+h )/, 1]
  min = msg[/@time.*( \d+m )/, 1]
  log = msg[/@time.* \d+[dhm]\s+(.*)$/, 1]
  jira_pattern = /(?&lt;=^|\s|,|\[|\/)([A-Z]{1,32}-[0-9]{1,32})(?=\s|,|\]|\/|$)/
  # Capture the JIRA ID if one is present in the commit message
  jira_id = msg[jira_pattern, 1]

  if msg[&quot;@time&quot;]
    day = day.nil? ? 0 : day[/(\d+)d/, 1] 
    hour = hour.nil? ? 0 : hour[/(\d+)h/, 1]
    min = min.nil? ? 0 : min[/(\d+)m/, 1] 
    # Get spent time in seconds
    spent_seconds = day.to_i * 28800 + hour.to_i * 3600 + min.to_i * 60
 
    user = ENV['GL_USERNAME']
    log = log.empty? || log.nil? ? &quot;[#{user}] [EMPTY MESSAGE].&quot; : &quot;[#{user}] #{log}&quot; 
   

    # Push work log
    result = `curl -X POST --url &quot;http://#{ jira_url }:8080/rest/api/2/issue/#{jira_id}/worklog&quot; -u #{ user } -H &quot;Content-Type: application/json&quot; --data '{&quot;comment&quot;: &quot;#{log}&quot;, &quot;timeSpentSeconds&quot;: #{spent_seconds}}'`
    # puts result
  end
end


if __FILE__ == $0
  $rev_old, $rev_new, $ref = STDIN.read.split(&quot; &quot;)
  #p $rev_old, $rev_new, $ref
  
  msg = `git cat-file commit #{ $rev_new } | sed '1,/^$/d' | sed 's/[^ @,.|\/A-Za-z0-9+-]/ /g'`
  push_spent_time(msg)
end
</code></pre>
<p>When I push a commit just like &quot;com/HAB-001 I did something @time 1d 1h 1m I did some work&quot;, then I will get a worklog on jira.Now merge commit can trigger it too and I can't get correct spent time.
I want add some code to get the type of this commit.If the type is merge commit, will not push the timecard again.</p>
",4,14244865,0,0
54226166,2828958,1/16/2019 22:11,0,2743,<git><githooks>,Git pre-push hook doesn't seem to be working with git push,"<p>I am on my testbranch:</p>

<pre><code>$git branch
  master
* testbranch
</code></pre>

<p>Here is my code in <code>.git/hooks/pre-push</code> file:</p>

<pre><code>#!/bin/bash
protected_branch='testbranch'
current_branch=$(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')

if [ $protected_branch = $current_branch ]
    then
            echo ""Test""
            pwdlsfail

            rc=$?
            if [[ $rc != 0 ]] ; then
                echo ""test failed - push denied. Run tests locally and confirm they pass before pushing""
                exit $rc
            fi
else
# Everything went OK so we can exit with a zero
    exit 0
fi
</code></pre>

<p>Tried running above code as a shell script and works fine:</p>

<pre><code>$./1.sh  
Test
./1.sh: line 8: pwdlsfail: command not found
test failed on rev  - push denied. Run tests locally and confirm they pass before pushing
</code></pre>

<p>But <code>pre-push</code> hook is still not getting called with <code>git push origin testbranch</code>, am I missing something?</p>
",0,2828958,,
54247458,3894497,1/18/2019 3:40,1,55,<git><gitlab><githooks>,how to update mirrored remote repository(own server) when someone has pushed to the main remote repostiory(gitlab)?,"<p>I have the main remote Gitlab repository(A) and clone mirrored to another remote server(B), I would like to know how to update the (B)remote server when someone pushed to the main Gitlab repository(A).   </p>
",1,3894497,0,0
72266766,2698341,5/16/2022 23:51,0,195,<python><git><subprocess><githooks><working-directory>,Git hook python script to call executable binary,"<p>The image shows project structure. There is a binary executable (c++ output) which is supposed to be run by post-checkout script, and it fails.</p>
<p><a href=""https://i.stack.imgur.com/R7loQ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/R7loQ.png"" alt=""enter image description here"" /></a></p>
<p><code>post-checkout</code> is python script</p>
<pre class=""lang-python prettyprint-override""><code>#!/bin/python3

import subprocess

file_path = r'../build/executable.x'
subprocess.check_call([file_path, '-list'], cwd=r'C:/code/MyProject/build')
</code></pre>
<p>The error that I get when running git checkout command is:</p>
<blockquote>
<p>subprocess.CalledProcessError: Command '['../build/executable.x', '-list']' returned non-zero exit status 3221225785.</p>
</blockquote>
<p>However if I run this script from windows cmd, it works fine.
To run it in cmd, I go to <code>.githooks</code> directory, and then run 'python3 post-checkout'</p>
<p>I am wondering if I miss setting the working directory correctly or it is git script that runs in an expected way in windows machine.</p>
",8,2698341,,
54317480,2230115,1/22/2019 22:37,1,200,<bash><git><githooks>,How to get the hash of the attached commit from an annotated tag,"<p>What I'm trying to do, is create a pre-push hook that requires a tag be pointing to the same commit as the current HEAD. We're using git in a slightly unusual way, and  there's no situations where the latest commit should not have a tag. I have a working implementation of this, but found that it only works with lightweight tags.</p>

<pre><code>head=$(git rev-parse HEAD)
last_tag=$(git rev-parse $(git describe --tags))
if [ ""$head"" != ""$last_tag"" ]
then
    echo &gt;&amp;2 'Aborting push - there is no tag on the latest commit.'
    exit 1
fi
</code></pre>

<p>The problem I've found is that even after setting <code>push.followTags</code>, lightweight tags are ignored. It's important to me that tags be pushed and pulled with no extra steps, since we'll be using them pretty heavily.</p>

<p>To work around this issue, we can use annotated tags. The issue is that an annotated tag has it's own hash that's returned by <code>git rev-parse</code>. I'm unable to find a way to get the hash of the commit the tag is linked to. I've tried both</p>

<pre><code>git rev-parse tagname^
git rev-parse $(git rev-parse tagname)^
</code></pre>

<p>Any ideas how this can be done, or if there's another better option?</p>
",1,2230115,,
72273466,1392366,5/17/2022 11:44,4,1451,<android><gradle><githooks><ktlint>,Task 'ktlintCheck' not found in project,"<p>I have a sample project.
The build.gradle (project) is:</p>
<pre><code>// Top-level build file where you can add configuration options common to all sub-projects/modules.
plugins {
    id 'com.android.application' version '7.1.3' apply false
    id 'com.android.library' version '7.1.3' apply false
    id 'org.jetbrains.kotlin.android' version '1.6.21' apply false
    id &quot;org.jlleitschuh.gradle.ktlint&quot; version '10.3.0' apply true
}

subprojects {
    apply plugin: &quot;org.jlleitschuh.gradle.ktlint&quot; // Version should be inherited from parent

    // Optionally configure plugin
    ktlint {
        debug = true
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
</code></pre>
<p>The build.gradle (app) is:</p>
<pre><code>plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id &quot;org.jlleitschuh.gradle.ktlint&quot;
}

android {
    compileSdk 32

    defaultConfig {
        applicationId &quot;com.example.codestyleexpetiment&quot;
        minSdk 21
        targetSdk 32
        versionCode 1
        versionName &quot;1.0&quot;

        testInstrumentationRunner &quot;androidx.test.runner.AndroidJUnitRunner&quot;
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
}

ktlint {
    version = &quot;0.45.2&quot;
}
dependencies {

    implementation 'androidx.core:core-ktx:1.7.0'
    implementation 'androidx.appcompat:appcompat:1.4.1'
    implementation 'com.google.android.material:material:1.6.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.3'
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'
}
</code></pre>
<p>I have installed the pre-commit hook successfully.</p>
<p>The 4 below attempts are working the same way even if use app:ktlintCheck.</p>
<ul>
<li><p>I can run the ktlintCheck from Gradle window in Android studio.</p>
</li>
<li><p>I can run the task from command line gradlew ktlintCheck</p>
</li>
<li><p>If i substitute the ktlintCheck with signingReport (or any other task from android plugin) in pre-commit script I can run it as well.</p>
</li>
<li><p><strong>BUT, I cannot run the ktlintCheck and ktlintFormat from pre-commit script</strong> and I receive this error:</p>
<p>Commit failed with error
0 file committed, 1 file failed to commit: Reformat 1
Running ktlint over these files:
app/src/main/java/com/example/codestyleexpetiment/MainActivity.kt</p>
<pre><code>         FAILURE: Build failed with an exception.

         * What went wrong:
         Task 'ktlintCheck' not found in project ':app'.

         * Try:
         Run gradlew tasks to get a list of available tasks. Run with --info or --debug option to get more log output. Run with --scan to get full insights.

         * Exception is:
         org.gradle.execution.TaskSelectionException: Task 'ktlintCheck' not found in project ':app'.
         at org.gradle.execution.DefaultTaskSelector.getSelection(DefaultTaskSelector.java:113)
         at org.gradle.execution.DefaultTaskSelector.getSelection(DefaultTaskSelector.java:78)
         at org.gradle.execution.CompositeAwareTaskSelector.getSelection(CompositeAwareTaskSelector.java:93)
         at org.gradle.execution.commandline.CommandLineTaskParser.parseTasks(CommandLineTaskParser.java:43)
         at org.gradle.execution.TaskNameResolvingBuildConfigurationAction.configure(TaskNameResolvingB... (show balloon)
</code></pre>
</li>
</ul>
<p>The pre-commit script is:</p>
<pre><code>#!/bin/sh
######## KTLINT-GRADLE HOOK START ########

CHANGED_FILES=&quot;$(git --no-pager diff --name-status --no-color --cached | awk '$1 != &quot;D&quot; &amp;&amp; $NF ~ /\.kts?$/ { print $NF }')&quot;

if [ -z &quot;$CHANGED_FILES&quot; ]; then
    echo &quot;No Kotlin staged files.&quot;
    exit 0
fi;

echo &quot;Running ktlint over these files:&quot;
echo &quot;$CHANGED_FILES&quot;

diff=.git/unstaged-ktlint-git-hook.diff
git diff --color=never &gt; $diff
if [ -s $diff ]; then
  git apply -R $diff
fi

./gradlew --stacktrace ktlintCheck -PinternalKtlintGitFilter=&quot;$CHANGED_FILES&quot;
gradle_command_exit_code=$?

echo &quot;Completed ktlint run.&quot;


if [ -s $diff ]; then
  git apply --ignore-whitespace $diff
fi
rm $diff
unset diff

echo &quot;Completed ktlint hook.&quot;
exit $gradle_command_exit_code
######## KTLINT-GRADLE HOOK END ########
</code></pre>
<p>The library/plugin I used is <a href=""https://github.com/JLLeitschuh/ktlint-gradle"" rel=""nofollow noreferrer"">this</a>. Am I missing/forgetting something?</p>
",0,1392366,0,0
54338028,2828958,1/24/2019 1:14,0,45,<linux><bash><shell><scripting><githooks>,Unable to get input from user in shell script which is called by git hook pre-push script,"<p>I am running a shell script from another shell script which is a <code>git-hook pre-push</code>.</p>

<p>This is the content of .git/hooks/pre-push:</p>

<pre><code>#!/usr/bin/env bash

protected_branch='master'
current_branch=$(git symbolic-ref HEAD | sed -e 's,.*/\(.*\),\1,')

if [ $protected_branch = $current_branch ]; then
    sh test.sh
    if [ $? != 0 ]; then
        echo ""Error""
        exit 1
    fi
else
    exit 0
fi
</code></pre>

<p>This is the content of test.sh:</p>

<pre><code>#!/bin/bash
run_base=1
    run_test () {
        read -p ""enter varname: "" varname
        echo $varname
    }
time {
        if [ ""$run_base"" = ""0"" ] ; then 
            echo ""skipped""
        else 
            time { run_test ; }
            echo ""run_test done"";
        fi
}
</code></pre>

<p>If I run <code>pre-push</code> script directly, then it works fine, but it doesn't work when I execute <code>git push origin master</code> and <code>pre-push</code> gets triggered automatically.</p>

<p><code>read</code> in test.sh is not being executed when I trigger the <code>pre-push</code> hook script. Do I need to do anything specific in order to execute <code>read</code> in <code>test.sh</code> which is called from <code>pre-push</code>?</p>
",0,2828958,,
54352602,635523,1/24/2019 17:47,3,5353,<git><githooks><git-commit><pre-commit-hook>,Find out staged files in git `pre-commit` hook when using `git commit -a`,"<p>I'm using a <code>git</code> <code>pre-commit</code> hook to automatically format all of my staged files. I'm determining the staged files via <code>git diff --name-only --cached</code> and then call a script on those files.
This all works well in the standard use case, however it doesn't work when I commit via</p>

<pre><code>git commit -a ..
</code></pre>

<p>because the files are not yet staged.</p>

<p>Is there some way to:</p>

<ol>
<li><p>Run the <code>-a</code> effect (add files to staging area) before the <code>pre-commit</code> hook?</p></li>
<li><p>Find out that the pre-commit runs in a <code>-a</code> commit?</p></li>
</ol>

<p>There must be a way to handle this.</p>
",0,635523,0,0
72290449,3095538,5/18/2022 13:49,2,525,<bash><git><githooks><shebang>,Conditional shebang for Git hooks cross platform,"<p>In our projects we have developers who use windows and some use linux. We have githooks which uses shebang pointing to local windows shell executor, for example:</p>
<pre class=""lang-sh prettyprint-override""><code>#!C:/Program\ Files/Git/usr/bin/sh.exe

REGEX_ISSUE_ID=&quot;[a-zA-Z0-9,\.\_\-]+-[0-9]+&quot;
BRANCH_NAME=$(git symbolic-ref --short HEAD)
ISSUE_ID=$(echo &quot;$BRANCH_NAME&quot; | grep -o -E &quot;$REGEX_ISSUE_ID&quot;)
LAST_COMMIT_MSG=$(git show -s --format=%s)
</code></pre>
<p>As you can see the shebang is pointing to the windows folder. This would never work for linux users. Is there a better way of handling this to work cross platform?</p>
",4,3095538,,
72303887,2954075,5/19/2022 11:38,0,21,<git><githooks>,How to update prepare-commit-msg,"<p>This is so nice. And I would so much like to implement it on an existing repository.</p>
<p>But after changing it I get:</p>
<pre><code>Your branch is up to date with 'origin/jarls_test'.

nothing to commit, working tree clean
</code></pre>
<p>When doing git status. As I understand .git is not managed by git, which makes sense. But the hooks folder, now can I push it so that when someone new clones the repo the hooks are automatically installed?</p>
<p>Thanks in advance</p>
",2,2954075,,
72319181,74089,5/20/2022 12:46,3,52,<git><github-actions><githooks>,Code comment with scheduled Git changeset,"<p>I'm wondering if something like the code sample below is possible:</p>
<pre class=""lang-ruby prettyprint-override""><code>val = calculate_method1()

# GIT-COMMAND-DELETE date=&quot;2022-05-23&quot; msg=&quot;About time to delete it&quot;
val = temporary_overriden__calculate_method1()
# GIT-COMMAND-DELETE

# GIT-COMMAND-ADD date=&quot;2022-05-29&quot; msg=&quot;Something changed, fail from now on&quot; delete-body-comment=true
# raise(&quot;By that time it had to be already fixed&quot;)
# GIT-COMMAND-ADD
</code></pre>
<p>Basically, it's a code comment with some sort of git command that needs to be executed automatically some time in the future and committed(e.g. as a feature-branch/pull-request).</p>
<p>Is there an existing Github Action for such need or any other alternative solution?</p>
",0,74089,,
54531547,1871886,2/5/2019 9:46,5,3210,<git><sh><githooks>,sh shell script on windows causes error: /dev/tty: No such device or address,"<p>On Windows in a git commit-msg I want to run following script:</p>

<pre><code>MSG=""$1""
if ! grep -s -qE ""#[0-9]"" ""$MSG"";then
    exec &lt; /dev/tty
    cat ""$MSG""
    echo ""Your commit message does not contain a reference to a work item. Continue? [y/n]""
    read -s -n 1 sure
    if [[ $sure == ""y"" ]]; then
        exit 0
    else
        echo ""Aborting commit...""
        exit 1
    fi
fi
</code></pre>

<p>It runs fine when I use Git extensions.</p>

<p>But when I want to commit directly from Visual Studio (Team Explorer or Git Changes) an error with following message is occurring:</p>

<pre><code>Your git-hook, '.git/hooks/commit-msg' (line 23) is not supported, likely because it expects interactive console support./r/nSee your administrator for additional assistance.
</code></pre>

<p><strong>My question:</strong>
Is there a possibility to check, whether <em>exec &lt; /dev/tty</em> can be executed? Otherwise I would just print a corresponding message.</p>

<p>Thanks in advance.</p>
",0,1871886,0,0
54530011,11016359,2/5/2019 8:05,0,1877,<git><github><githooks>,pre-commit hook to read commit message,"<p>How to read commit message from git commit -m ""message"" using pre-commit hook.
Or Is there any hook that reads commit message.</p>

<p>commit-msg hook can read the message but we need to provide a text file as input which I don't want.</p>
",6,11016359,,
54537710,3562187,2/5/2019 15:23,-1,160,<git><githooks><git-remote><git-bare>,Git cannot push to remote bare repo,"<p><strong>What I would like to do :</strong>
I would like to create a remote that points to a bare git repository on a vps server accessible through ssh. This bare repository will embed a hook to fetch the latest branch version into another directory on the same vps server.</p>

<p><strong>Where I'm stuck :</strong></p>

<ul>
<li>The bare repository is created on vps server</li>
<li>The remote is created from local computer</li>
<li>The server is accessible via SSH</li>
<li>When performing ""git push production master"" with <em>production</em> being my remote name, git just stops without exiting leaving the following prompt :</li>
</ul>

<p><a href=""https://i.stack.imgur.com/tJOnH.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/tJOnH.png"" alt=""enter image description here""></a></p>

<p>Here is the part of my .git/config file for the remote definition</p>

<p><a href=""https://i.stack.imgur.com/wQ8Iw.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/wQ8Iw.png"" alt=""enter image description here""></a></p>

<p>Whether the hook is enabled or not, it gives me the same output. Do you have any hint on what is wrong here ? I checked the remote repositories are both</p>

<ul>
<li>at the correct path</li>
<li>with a correct permission set</li>
</ul>

<p>Thank you for your time.</p>
",4,3562187,,
54545396,6359753,2/6/2019 1:15,4,9628,<git><github><gitlab><githooks><git-remote>,How to bypass: remote: GitLab: Author <non-member-email-here> is not a member of team?,"<p>I have a GitLab project (origin) that was originally cloned from another GitHub project (github).</p>

<pre><code>$ git remote
github
origin
</code></pre>

<p>I made this happen by:</p>

<pre><code>git remote add github https://the-git-hub-remote.git
</code></pre>

<p>Now I want to merge GitHub's new changes into my local code. so I did the following</p>

<p>In my local computer, I pulled changes from GitHub</p>

<pre><code>git fetch github
</code></pre>

<p>I then copy the GitHub's <code>master</code> branch into a local branch called <code>github-master</code></p>

<pre><code>git checkout -b github-master github/master
</code></pre>

<p>Now I want to push it to my GitLab repo but it complains:</p>

<pre><code>$ git push origin
Enumerating objects: 6813, done.
Counting objects: 100% (6083/6083), done.
Delta compression using up to 8 threads.
Compressing objects: 100% (1842/1842), done.
Writing objects: 100% (5721/5721), 2.09 MiB | 42.05 MiB/s, done.
Total 5721 (delta 4008), reused 5313 (delta 3735)
remote: Resolving deltas: 100% (4008/4008), completed with 224 local objects.
remote: GitLab: Author 'brian.riley@ucop.edu' is not a member of team
To my-git-lab-remote.git
 ! [remote rejected]   github-master -&gt; github-master (pre-receive hook declined)
error: failed to push some refs to 'git@my-git-lab-remote.git'
</code></pre>

<p>What should I do?</p>

<p>Basically, I have the same problem as Velmurugan Velayutham in <a href=""https://gist.github.com/DavideMontersino/810ebaa170a2aa2d2cad"" rel=""nofollow noreferrer"">https://gist.github.com/DavideMontersino/810ebaa170a2aa2d2cad</a></p>

<p>Thanks!</p>
",0,6359753,0,0
54561272,344286,2/6/2019 19:35,2,236,<git><githooks><git-post-receive>,Why doesn't `git -C` work from Python in a post receive hook?,"<p>Try this:</p>

<pre><code>mkdir /tmp/one
cd /tmp/one
git init
echo -e ""#!/usr/bin/env python3\nimport os\nos.system('git -C /tmp/one show')"" &gt; /tmp/one/.git/hooks/post-receive
chmod +x /tmp/one/.git/hooks/post-receive
touch test.txt
git add test.txt
git commit -m 'Initial commit'
cd /tmp/
git clone one two
cd two
git checkout -b test
echo ""Why doesn't this work?"" &gt;&gt; test.txt
git add test.txt
git commit -m ""testing""
git push -u origin test
</code></pre>

<p>And observe the very confusing message:</p>

<pre><code>remote: fatal: Not a git repository: '.'
</code></pre>

<p>What?</p>

<p>Seriously, what the actual heck? Why is this completely broken? I can go to a literal folder that is not a git repository (<code>cd / &amp;&amp; git -C /tmp/one/show</code>) and it works fine. Why doesn't this command work?</p>

<p>It also doesn't work if I do <code>os.chdir('/tmp/one')</code>. I cannot make the post-receive hook actually figure out what the heck is going on. It's more than happy to run some other commands, like <code>git merge</code>, but it will not understand git show, git status, or more importantly for me, <code>git -C /tmp/one checkout master</code>. I've also tried with just a bare</p>

<pre><code>#!/bin/sh
git -C /tmp/one status
</code></pre>

<p>And it gives me the same error mesage - <code>not a git repostiory: '.'</code></p>

<p>Any clue what in the world is going on here?</p>
",0,344286,,
56563692,9436122,6/12/2019 13:42,3,1729,<git><jenkins><gitlab><webhooks><githooks>,How to trigger a git hook in server-side using GitLab,"<p>So I need to make a validation in some files names during merge from any branch to develop branch in my repository. I searched a lot but only examples I found is to integrate Jenkins and GitLab to build project in each commit/push, etc.</p>

<p>But is it possible to configure somehow a pre-push script to be executed (maybe by Jenkins) in server-side so each time a push is received to merge something to this develop branch I execute my custom script? I don't want to build it, only make this validation of files to be able to stop or not the push request.</p>
",0,9436122,0,0
73324712,2135819,8/11/2022 17:27,0,362,<git><gitlab><githooks>,How to get the git refs name directly from gitlab server repository?,"<p>I'm trying to create an update server-side hook script in a local gitlab server.</p>
<p>From my update hook script, I need to get the commit msg as well as the ref name for the new_commit.</p>
<p>From a remote machine, if I run the following command I get the correct value:</p>
<pre class=""lang-bash prettyprint-override""><code>john@machine:/tmp/test-hooks$ git log --format=%d -n 1 632f8f615d5904020b7bf1111d1eda3e163d9af3
 (origin/main, origin/HEAD)
</code></pre>
<p>But, inside the gitlab server, running the same command in the repository, I'm getting a different value:</p>
<pre class=""lang-bash prettyprint-override""><code>root@71c6482bcfa9:/var/opt/gitlab/git-data/repositories/@hashed/d4/73/d4735e3a265e16eee03f59718b9b5d03019c07d8b6c51f90da3a666eec13ab35.git/custom_hooks# git log --format=%d -n 1 632f8f615d5904020b7bf1111d1eda3e163d9af3
 (refs/keep-around/632f8f615d5904020b7bf1111d1eda3e163d9af3)
</code></pre>
<p>How can I get the same <code>(origin/main, origin/HEAD)</code> instead of the <code>(refs/keep-around/632f8f615d5904020b7bf1111d1eda3e163d9af3)</code> directly from the gitlab server project repository ?</p>
",0,2135819,,
56578380,9353523,6/13/2019 10:20,1,5017,<githooks><pre-commit-hook><prettier><husky><lint-staged>,pre commit rules failing when used with lint-staged,"<p>I am trying to set the pre commit git hooks for angular5 project. I am using husky with lint-staged. Prettier and stylelint linters run fine. But when lint-staged encounters 'ng lint', it just throws error:</p>

<pre><code>
    Project '/Users/sneha.vantamuri/Documents/customerportal/aviportal-ui/src/app/components/dashboard/dashboard.component.ts' could not befound in workspace.
    Error: Project '/Users/sneha.vantamuri/Documents/customerportal/aviportal-ui/src/app/components/dashboard/dashboard.component.ts' couldnot be found in workspace.
      at Workspace.getProject (/Users/sneha.vantamuri/Documents/customerportal/aviportal-ui/node_modules/@angular-devkit/core/src/workspace/workspace.js:83:19)
      at Architect.getBuilderConfiguration (/Users/sneha.vantamuri/Documents/customerportal/aviportal-ui/node_modules/@angular-devkit/architect/src/architect.js:96:41)
      at MergeMapSubscriber._loadWorkspaceAndArchitect.pipe.operators_1.concatMap [as project] (/Users/sneha.vantamuri/Documents/customerportal/aviportal-ui/node_modules/@angular/cli/models/architect-command.js:64:55)
      at MergeMapSubscriber._tryNext (/Users/sneha.vantamuri/Documents/customerportal/aviportal-ui/node_modules/@angular/cli/node_modules/rxjs/internal/operators/mergeMap.js:69:27)
      at MergeMapSubscriber._next (/Users/sneha.vantamuri/Documents/customerportal/aviportal-ui/node_modules/@angular/cli/node_modules/rxjs/internal/operators/mergeMap.js:59:18)
      at MergeMapSubscriber.Subscriber.next (/Users/sneha.vantamuri/Documents/customerportal/aviportal-ui/node_modules/@angular/cli/node_modules/rxjs/internal/Subscriber.js:67:18)
      at TapSubscriber._next (/Users/sneha.vantamuri/Documents/customerportal/aviportal-ui/node_modules/@angular/cli/node_modules/rxjs/internal/operators/tap.js:65:26)
      at TapSubscriber.Subscriber.next (/Users/sneha.vantamuri/Documents/customerportal/aviportal-ui/node_modules/@angular/cli/node_modules/rxjs/internal/Subscriber.js:67:18)
      at MergeMapSubscriber.notifyNext (/Users/sneha.vantamuri/Documents/customerportal/aviportal-ui/node_modules/@angular/cli/node_modules/rxjs/internal/operators/mergeMap.js:92:26)
      at InnerSubscriber._next (/Users/sneha.vantamuri/Documents/customerportal/aviportal-ui/node_modules/@angular/cli/node_modules/rxjs/internal/InnerSubscriber.js:28:21)
    npm ERR! code ELIFECYCLE
    npm ERR! errno 1
    npm ERR! avi-portal-ui@0.0.0 lint: `ng lint ""/Users/sneha.vantamuri/Documents/customerportal/aviportal-ui/src/app/components/dashboard/dashboard.component.ts""`
    npm ERR! Exit status 1
    npm ERR!
    npm ERR! Failed at the avi-portal-ui@0.0.0 lint script.
    npm ERR! This is probably not a problem with npm. There is likely additional logging output above.

</code></pre>

<p>here is my husky and lint-staged configuration in package.json</p>

<pre><code>    ""hooks"": {
      ""pre-commit"": ""lint-staged""
    }
  },
  ""lint-staged"": {
    ""*.{ts,scss,json}"": [
      ""npm run prettier:check"",
      ""npm run stylelint"",
      ""npm run lint"",
      ""git add""
    ]
  }
</code></pre>

<p>also: </p>

<pre><code>""scripts"":{
""lint"": ""ng lint"",
 ""prettier:check"": ""prettier --config ./.prettierrc --check './src/**/*.{ts,scss,json}'"",
 ""stylelint"": ""stylelint \""src/**/*.scss\"""",
}
</code></pre>

<p>""npm run prettier:check"",
 ""npm run stylelint"",
These 2 commands run properly but npm run lint has error</p>
",0,9353523,,
56639251,10335,6/17/2019 21:41,0,452,<git><gitlab><githooks><gitlab-ce>,How to configure a global git hook in GitLab version 11.11?,"<p>I'm really confused about how to configure a GitLab global hook. The documentation is clear about <a href=""https://docs.gitlab.com/11.11/ee/administration/custom_hooks.html#set-a-global-git-hook-for-all-repositories"" rel=""nofollow noreferrer"">how to set a global hook</a>. So I login in my GitLab instance, go to the directory <code>/opt/gitlab/embedded/service/gitlab-shell/hooks</code>, and it has 3 files:</p>

<pre><code>-rwxr-xr-x 1 root root 131 Jun 10 16:22 post-receive
-rwxr-xr-x 1 root root 131 Jun 10 16:22 pre-receive
-rwxr-xr-x 1 root root 131 Jun 10 16:22 update
</code></pre>

<p>All the files have the same content:</p>

<pre><code># cat pre-receive
#!/bin/sh
echo ""The gitlab-shell hooks have been migrated to Gitaly, see https://gitlab.com/gitlab-org/gitaly/issues/1226""
exit 1
</code></pre>

<p>Since they all have a <code>exit 1</code>, clearly these hooks aren't being executed anymore.</p>

<p>The <a href=""https://gitlab.com/gitlab-org/gitaly/issues/1226"" rel=""nofollow noreferrer"">linked issue</a>, is really confusing. It is a roadmap to implement something called <a href=""https://docs.gitlab.com/ee/administration/gitaly/"" rel=""nofollow noreferrer"">Gitaly</a> but I really don't see how to use it to implement global Git hooks.</p>

<p>Does anyone can show me the step by steps configuration of a git global hook in GitLab CE edition?</p>
",0,10335,0,0
56660929,5404976,6/19/2019 6:00,0,715,<java><git><intellij-idea><githooks><intellij-plugin>,Intellij Idea not able to execute git pre-push hook,"<p>I would like to execute a git pre-push hook from the IntelliJ IDEA.
Git pre-push hook can able to execute via a Terminal but not from the IntelliJ IDEA.</p>

<p>I have posted the Version Control console: 
<a href=""https://i.stack.imgur.com/icrKs.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/icrKs.png"" alt=""enter image description here""></a>
And Its saying <code>JAVA_HOME</code> is not set.</p>

<h3>Used Versions</h3>

<pre><code>Java : 1.8.0_211
IntelliJ IDEA : IntelliJ IDEA 2019.2 EAP (Ultimate Edition), Build #IU-192.4787.16
Ubuntu : 18.04
Git : 2.17.1
</code></pre>

<h3>Git pre-push hook script</h3>

<pre><code>source ~/.bash_profile
remote=""$1""
url=""$2""
echo “Running Tests”
pwd
./gradlew test
exit $?
</code></pre>

<p>I am not getting the where is a problem exactly and How can I solve this issue ?</p>
",0,5404976,,
55427220,4918541,3/30/2019 1:09,2,1810,<git><typescript><gulp><githooks><husky>,How can I bump the package.json version when I commit based on the commit message?,"<p>I am trying to bump the version of my package.json file when I commit, but only if the commit message is prefixed correctly: <code>MJ</code> prefix triggers a patch bump, <code>^</code> prefix triggers a minor bump. I wrote a gulp task to do this and it works, the only problem is that I can't get the message of the current commit, execute the task, then add package.json to the commit and continue. </p>

<p>I tried running my task on these two git hooks:</p>

<h1><code>pre-commit</code></h1>

<p>Problem:</p>

<ul>
<li>I only have access the previous commit message in this hook, not the one we're doing right now.</li>
</ul>

<p>What works</p>

<ul>
<li>I can bump the version, but only based on the previous commit message</li>
<li>I can stage package.json</li>
<li>package.json can then be added to the commit along with the rest</li>
</ul>

<h1><code>prepare-commit-msg</code></h1>

<p>Problem:</p>

<ul>
<li>staging package.json does not add it to the commit</li>
</ul>

<p>What works</p>

<ul>
<li>I can bump the version based on the current commit message</li>
<li>I can stage package.json

<hr></li>
</ul>

<p>This is my gulp task that I've tried with the two hooks. I removed some noise to try to keep it minimal. </p>

<pre><code>import * as fs from ""fs"";
import gulp from ""gulp"";
import * as shell from ""shelljs"";
import pkg from ""./package.json"";

const getCommitMsg = () =&gt; fs.readFileSync("".git/COMMIT_EDITMSG"", ""utf8"");
gulp.task(
    BUMP_VERSION.task,
        (done) =&gt; {

            const message = getCommitMsg();
            const isMinor = message.startsWith(MINOR_PREFIX);
            const isPatch = message.startsWith(PATCH_PREFIX);

            if (!isMinor &amp;&amp; !isPatch) {
                done();
                return exit(EC.NOT_VERSION);
            }

            const newPatch = isPatch ? parseInt(patch) + 1 : 0;
            const newMinor = isMinor ? parseInt(minor) + 1 : minor;

            const newVersion = `${major}.${newMinor}.${newPatch}`;
            const newPkg = Object.assign({}, pkg, { version: newVersion }); // update version
            fs.writeFileSync(""./package.json"", JSON.stringify(newPkg, null, 4));

            shell.exec(""git add ./package.json"");

            done();
        },
);
</code></pre>

<p>Pretty much everything relies on the commit message, which is fetched using the <code>getCommitMsg</code> function. Maybe <code>fs.readFileSync("".git/COMMIT_EDITMSG"", ""utf8"");</code> isn't the way to go? Perhaps there is another command I could run (with <code>shelljs</code>) to get the current commit message in the <code>pre-commit</code> hook? Otherwise if I use the <code>prepare-commit-msg</code> hook, then I can get the correct message, but then how would I add it to the current commit along with the other staged files?</p>
",0,4918541,,
72576414,19314813,6/10/2022 15:04,0,310,<git><githooks>,git hook not running in Mac Monterey,"<p>I have a pre-commit hook that is not running. I already tried with different shebangs:</p>
<pre><code>#!/usr/bin/env zsh
# tried:
#/bin/zsh
#/bin/sh
#/usr/bin/bash
#/usr/bin/zsh
#/usr/bin/sh
#/usr/bin/env
#/usr/bin/env zsh
#/usr/bin/env bash
#/usr/bin/env sh
</code></pre>
<p>I tried giving it permission with</p>
<pre><code>chmod ug+x .git/hooks/*
</code></pre>
<p>The hook has no extension as requested. after I try git commit nothing happens other than the usual &quot;files changed, etc&quot; text</p>
",3,19314813,,
55595384,1901526,4/9/2019 14:37,1,780,<bash><git><sh><githooks><pre-commit>,How to fix the pre-commit-msg in my git environment?,"<p>Has someone have experienced a weird behaviour of .git/hooks/pre-commit-msg?
The file has proper permission in being executed.
And actually it is executed. The issue is that the commits, any commits with correct or uncorrect messages, make the execution goes into the error.
Always.</p>

<p>The correct message should be something like these examples: </p>

<ul>
<li>""ABC-123/ticket-task blah blha""</li>
<li>""ABC-234/ticket-task fixed some things""</li>
<li>""ABC-123/ticket-task added some""</li>
</ul>

<p>where the first word after [test], or [fix], or [feat] is chosen between a set (like Added, Fixed, Upgraded..)</p>

<p>Working on OSX, with git, with zsh shell.</p>

<pre><code>#!/bin/bash
#

commit_message=$(cat .git/COMMIT_EDITMSG)
commit_error=""Error in the commit message. Prefix with 
JIRA ticket. For example UXD-1234/git-hook""


if [[ ! $commit_message =~ /([A-Z]+[-][\d]+\/\S+)/  ]]; then
  echo &gt;&amp;2 $commit_error
  exit 1
fi
</code></pre>

<p>Is there an error in this code?</p>

<p>Thanks in advance</p>
",4,1901526,,
72611583,6180721,6/14/2022 4:35,2,2156,<git><go><githooks><pre-commit.com>,getting error when running pre-commit hook for golang repo [named files must be .go files: ./...],"<p>This is the contenct of my <strong>.pre-commit-config.yam</strong>l file,</p>
<pre><code>repos:
- repo: local
  hooks:
    - id: static-checks-pramod
      name: Static Analysis
      description: This hook does static analysis
      entry: staticcheck -tests=false ./...
      language: golang
      types: [text]
</code></pre>
<p>on running the hooks locally for all the files locally im getting below error,</p>
<pre><code>pramodchoudhari@Pramods-MacBook-Pro-2 my-repo % pre-commit run --all-files
Static Analysis..........................................................Failed
- hook id: static-checks-pramod
- exit code: 1

-: named files must be .go files: ./...
-: named files must be .go files: ./...
-: named files must be .go files: ./...
-: named files must be .go files: ./...
-: named files must be .go files: ./...
-: named files must be .go files: ./...
-: named files must be .go files: ./...
-: named files must be .go files: ./...
</code></pre>
<p>but if i run staticcheck command locally, it work fine as below,</p>
<pre><code>pramodchoudhari@Pramods-MacBook-Pro-2 my-repo % staticcheck -tests=false ./...         
pramodchoudhari@Pramods-MacBook-Pro-2 my-repo % 
</code></pre>
<p>I'm not sure what i'm doing wrong in pre-commit-config.</p>
<p>PS: I'm using <a href=""https://staticcheck.io/"" rel=""nofollow noreferrer"">this</a> linter for doing static analysis of my repo</p>
",2,6180721,,
55629974,2425851,4/11/2019 10:10,4,571,<git><android-studio><githooks>,How to print errors from git-hooks to Android Studio Event Log?,"<p>I have git-hook:</p>

<p><strong>pre-commit</strong></p>

<pre><code>#!/bin/bash
java -jar ktlint --color ""/\**/src/**/*.kt""
if [[ $? -gt 0 ]]; then
  echo -e ""\033[0;31mKotlin Code style violation. Please check errors above!\033[0m\n""
  echo -e ""Hint: use \""./ktlint  -F &lt;file pattern&gt;\"" for autocorrection.\n""
  exit 1
fi
</code></pre>

<p>When I use terminal command:</p>

<p><code>&gt;git commit -m ""Any message""</code></p>

<p>Output is in terminal , and it's ok for me:
<a href=""https://i.stack.imgur.com/wk23O.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/wk23O.png"" alt=""enter image description here""></a></p>

<p>But when I use <code>Android Studio</code> -> <code>VCS</code> -> <code>Commit...</code> <kbd>Ctrl+K</kbd>
Output is in <code>Event Log</code>, and it's not understandable:<a href=""https://i.stack.imgur.com/h0xMz.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/h0xMz.png"" alt=""enter image description here""></a></p>
",0,2425851,0,0
55655874,11352582,4/12/2019 16:20,1,753,<git><github><ssh><githooks>,"How to call a script from the server, when 'git push' to the git Gogs repository?","<p>I need to run the script on my server, when calling <code>git push</code> from the local repository to the git gogs repository</p>

<pre><code>#!/bin/sh
git pull origin test

source env/bin/activate
pip install --upgrade pip
pip install -r requirements.txt

python manage.py migrate
python manage.py collectstatic --noinput

sudo systemctl restart gunicorn.service
sudo systemctl restart celery-worker.service
sudo systemctl restart celery-beat.service
</code></pre>

<p>Subtracted on the Internet - that you need to use git Hooks. Figured out how to edit hooks. </p>

<p>Question - how can I run a file from a server via SSH from git Hooks ???</p>

<pre><code>ssh user@my.server
</code></pre>

<p><strong>This does not work!</strong></p>
",0,11352582,0,0
55666940,5360912,4/13/2019 15:12,0,160,<git><sqlite><git-merge><githooks>,Merge SQLite file in git hooks,"<p>I have a git repo that has a single <code>.sqlite</code> file.</p>

<p>It's a special DB in that it only ever has new values added; nothing is ever changed or removed. But it is possible that two branches will have the same data entered (same primary key, same values). I have code written, <code>merge_db.py</code>, that will merge two versions of that database into one. </p>

<p>What I'm looking for is a foolproof way to automatically merge these on a <code>git pull</code> or <code>git merge</code> action. </p>

<p>Are git hooks, like a pre-merge hook appropriate for this? If so, it appears this hook does not get copied with a <code>git clone</code>. Is there a way to pull it down with a <code>git clone</code>? Again, I'm looking to make it foolproof so that each user can simply clone the repo and use it with <code>commit</code>, <code>push</code>, <code>pull</code>.  </p>

<p>Note: I'm not using a proper multi-user database like Postgres because I need it to be duplicated for each user, and available offline.  </p>
",4,5360912,,
72624904,6025788,6/15/2022 1:12,0,73,<git><version-control><githooks><pre-commit>,Git hook for `git add` or other alternatives that run earlier than pre-commit?,"<p>I'd like to always try to perform a <code>pull</code> before <code>git add</code> runs so that any remote changes can be synced before the local commit is made, assuming no conflicts.</p>
<p>Is there any way to do this besides to use an aliased command? Is there a hook I could use?</p>
<p>The rationale for this is to avoid annoying commits that only exist to merge two divergent branches.</p>
",7,6025788,,
55699071,1403991,4/16/2019 0:48,-1,25,<git><github><githooks><semaphore-ci>,Best practice for changing files automatically once checked in on GitHub,"<p>We have two environments. This code can't use environment variables, as it's client-side JavaScript.</p>

<p>We need to change a key in an object based on the environment. I don't want to use an if statement because there are multiple places in code.</p>

<p>I only need to change it on the Semaphore CI deployment environment.
I'm thinking maybe post-commit hook might be the best way, and just run a command line tool like <code>sed</code> in it to do something like <code>%s/my_local_web/my_staging_web/g</code>. I'm open to any suggestions, or alternative ways of thinking.</p>
",0,1403991,,
72632739,2591343,6/15/2022 13:54,0,49,<git><gitlab><jekyll><githooks>,How can I automate copy operations before Git commits?,"<p><strong>Context:</strong> I want to create a Jekyll collaborative blog. I created a subtree to insulate the collaborative portion of it from the rest of the site. However, as those goes into <code>_posts</code>, any blobs there are ignored when Jekyll renders the site.</p>
<p>Now, what I do is to copy everything from a specific folder (<code>_posts/assets/</code>) to <code>assets/</code>, so Jekyll can use those files after rendering the site.</p>
<p>I'm using Gitlab to host Jekyll, so I need to have this <em><strong>before</strong></em> pushing to Gitlab, so I do manually this now by do</p>
<pre><code>cp -R _posts/assets/* assets
git add -A
git commit &quot;New files for articles&quot;
</code></pre>
<p>Can I put this on pre-commit hook so I can automate this process? Any tips?</p>
",1,2591343,,
55709671,1901526,4/16/2019 13:43,2,620,<git><exception><commit><githooks>,Is there a way to force a message on `git commit` indipendently by prepare-commit-msg?,"<p>I've a regex on my <code>prepare-commit-msg</code> git hook that works like a charm!</p>

<p>But when there are some rare occasions where I would like to force specific commit messages, so I would like to overrule this hook.</p>

<p>Is there a way?</p>

<p>I know the flag <code>-n</code> and <code>--no-verify</code> have no effect on this hook? Am I looking for something impossible?</p>

<p>Thanks a lot</p>
",4,1901526,,
55723913,1901526,4/17/2019 9:09,1,55,<git><push><githooks><git-push>,Is it possible to avoid to `git push` a branch to REMOTES - ORIGIN if any commits was done?,"<p>I would need a hook that checks the <code>git push</code> operation.</p>

<p>If a brand new branch is created and it is identical to master, I would like a hook that prevent to push it to the remote origin.
Once the first commit to this branch is done, then the push to origin becomes possible.</p>

<p>Basically I want to avoid this situation</p>

<pre><code>$ (master) git checkout -b ticket-abc master

$ (ticket-abc) git push origin ticket-abc
</code></pre>

<p>I would like to block this second line if there are no commits related to this new branch. Is there a way to manage this with git hooks?</p>

<p>Thanks a lot</p>
",6,1901526,,
55735630,2012677,4/17/2019 20:37,0,220,<git><rspec><githooks>,"pre-push no such file, when file is available","<blockquote>
  <p>fatal: cannot run .git/hooks/pre-push: No such file or directory</p>
</blockquote>

<h2>pre-push file in .git/hooks/pre-push</h2>

<pre><code>#!/bin/env bash
echo ""Running RSpec""
bundle exec rspec spec
spec=$?

if [ $spec -eq 0 ]; then
  echo -en ""\\033[32mTests are green, pushing...\\033[0;39m\n""
  exit 0
else
  echo -en ""\\033[1;31mCannot push, tests are failing. Use --no-verify to force push.\\033[0;39m\n""
  exit 1
fi
</code></pre>

<p>I ran..</p>

<pre><code>chmod u+x .git/hooks/pre-push
</code></pre>

<p>and got the code from here:</p>

<p><a href=""https://gist.github.com/johnhamelink/577b8613ae82d2b3037b"" rel=""nofollow noreferrer"">https://gist.github.com/johnhamelink/577b8613ae82d2b3037b</a></p>
",4,2012677,,
55767423,1647320,4/19/2019 20:21,0,56,<tfs><githooks><pivotaltracker>,Pivotal tracker story is not getting updated after code push,"<p>We had pivotal tracker integrated with GitHub and when we used to commit with story id, it used to update the story with a commit message update story status.</p>

<p>We recently migrated to <a href=""https://visualstudio.microsoft.com/tfs/"" rel=""nofollow noreferrer"">Team Foundation Server</a> from GitHub and that integration is not working anymore.</p>

<p>Looks like there is no <a href=""https://www.pivotaltracker.com/integrations"" rel=""nofollow noreferrer"">integration App</a> exists yet.</p>

<p>Is there a programmatic way of doing it?</p>
",0,1647320,,
55783650,3672883,4/21/2019 14:35,0,48,<git><bitbucket><githooks><bitbucket-pipelines>,How can I create a simple hook in Bitbucket?,"<p>It is possible to create a server-side hook in Bitbucket for reject push if the pipeline fails?</p>

<p>I am reading about these possibilities but only in Bitbucket Server and not on the bitbucket website.</p>

<p>Any idea or tutorial about how can I do this?</p>

<p>Thanks</p>
",0,3672883,,
55795893,8474689,4/22/2019 14:21,2,557,<git><gitlab><githooks>,Git pre receive hook - allow push but block merge commits,"<p>I have situation where I want to allow developers to directly push changes to master, blocking at the same time their local branch merges. For example if they perform merge from the origin into the local master and try to push I would like to identify this as a merge commit and block it. Gitlab branch protector does not assist in that way,  also according to their support the only option is a pre-receive hook. How can I setup such pre-receive hook?</p>
",1,8474689,,
55808678,2144408,4/23/2019 9:59,1,459,<windows><bash><git><cmd><githooks>,Make git-hook call cmd.exe without waiting for that process to finish,"<p>On a windows computer, I am adding a git-hook that starts a build; this needs to be run through cmd.exe, and I do not want the git-hook script to wait for that to finish executing, as that would mean each push would take a long time to finish.</p>

<p>To reproduce the problem, run these commands in an empty directory from git bash on windows:</p>

<pre><code>mkdir githooks &amp;&amp; cd githooks/
git init --bare
cd ..
git clone githooks clone
cd clone
git commit --allow-empty -m ""1""
</code></pre>

<p>And save the following to ./githooks/hooks/update</p>

<pre><code>#!/bin/bash
cmd.exe /c ""sleep 2""
exit 1;
</code></pre>

<p>In the git bash window, from the clone directory I left you in, run <code>git push</code>. Note that ending the update script with <code>exit 1;</code> is convenient as you can re-run the git push after every edit to the git-hook script.</p>

<p>I have tried every combination I can think of for the two methods of ""not waiting for the called script to exit""; in bash, you append an ampersand &amp;:</p>

<pre><code>cmd.exe /c ""sleep 2"" &amp;
</code></pre>

<p>in cmd.exe (bat files), you would <code>start</code> the line:</p>

<pre><code>cmd.exe /c ""start \""title\"" sleep 2""
</code></pre>

<p>I would expect either of these approached to work - i.e. the <code>git push</code> should fail quickly, rather than wait 2 seconds before failing.</p>

<p>Nesting cmd's does not seem to affect this:</p>

<pre><code>cmd.exe /c ""cmd.exe /c \""start \""\"" sleep 2\"""" &amp;
</code></pre>

<p>When submitting an answer, be sure to also check that the command given to cmd.exe actually executes, by replacing <code>sleep 2</code> with e.g. <code>mkdir ..\foo</code> so that you can check that, not only does the script finish quickly when given a sleep command, but when given a mkdir command, the directory is actually created.</p>

<pre><code>cmd.exe /c ""mkdir ..\foo""
</code></pre>

<p>For instance, the following finishes immediately, but that is because the sleep 2 never gets executed, as /c needs the next parameter to be quoted.</p>

<pre><code>cmd.exe /c start \""title\"" sleep 2
</code></pre>
",6,2144408,,
72697464,4948798,6/21/2022 8:22,-1,172,<bash><git><shell><githooks>,Hard-coded commit message policy,"<p>I am trying to write a server side hook to check the pattern of the commit messages using bash.</p>
<p>I want to reject the push if any commit not followed the specific <code>Commit-Message</code> format.</p>
<p>For example,</p>
<p><strong>Commit didn't follow the specific commit message format:-</strong></p>
<pre><code>$ git log -1
commit 98yad93c64d06f8cd49a8905b2b28f7509c87aef (HEAD -&gt; master)
Author: Admin &lt;admin@company.com&gt;
Date:   Mon Jun 20 16:33:00 2022 +0530

    Updated java file.
</code></pre>
<p>For the above case, script need to reject to follow the hard-coded commit message format.</p>
<p>For the below commit message case, push should allow.</p>
<pre><code>$ git log -1
commit c4d4a5c1d83ca1327c1b7e57f60eabe161d467b3 (HEAD -&gt; master)
Author: Admin &lt;admin@company.com&gt;
Date:   Mon Jun 20 16:33:00 2022 +0530

    1. Project Name: Java App
    2. Jira ID: 12345
    3. Testing Status: Completed
    4. Employee Name: Robby Nithin
    5. Office: Norway
</code></pre>
<p>I have below script to enforce the hard-coded commit message policy.</p>
<pre class=""lang-bash prettyprint-override""><code>#!/bin/bash

echo $@

COMMIT_MSG=&quot;Project Name:&quot;,&quot;Jira ID:&quot;,&quot;Testing Status:&quot;,&quot;Employee Name:&quot;,&quot;Office:&quot;

# Hard-coded template
FORMAT=$(cat /opt/template)

if echo &quot;$FORMAT&quot; | grep -qE &quot;$COMMIT_MSG&quot; ;then
    echo &quot;Commit message validation is success!&quot;
    exit 0
else
    echo &quot;Validation failed!&quot;
    exit 1
fi
</code></pre>
<p>Script is getting success even the commit not followed the commit message format.</p>
<p>Need help to enforce a specific(Hard-coded) commit message format. Thanks in advance.</p>
",6,4948798,0,0
72702994,10721913,6/21/2022 14:56,-1,527,<git><githooks>,Checking git commit message using commit-msg hook,"<p>I am trying to achieve following structure for git commit msg:</p>
<pre><code>Description one line
Type:   Internal / Bugfix / New Feature / Enhancement
Jiras:  XXX
Any text
</code></pre>
<p>This is my commit-msg file:</p>
<pre class=""lang-bash prettyprint-override""><code>#!/bin/bash -x

MSG=&quot;$1&quot;
#MATCH=&quot;(?s)(.{4,}[\r\n]Type:(\s*| )?(Internal|Bugfix|New Feature|Enhancement)[\r\n]Jiras:(\s*| )?((PRODUCTS|SYSDEV|LOCSRV|LTESYS|SRD|WIFI|MCU|SLBL|GNSS|SYSTOOL)-[0-9]{1,}(, )?){1,}([\r\n].*)?)&quot;
MATCH=&quot;\s*[\r\n]Type:(\s*| )?(Internal|Bugfix|New Feature|Enhancement)[\r\n]&quot;
echo $MATCH
value=$(cat $MSG)
echo &quot;$value&quot;

if [[ ! &quot;$value&quot; =~ $MATCH ]]; then
    echo &quot;Your commit message is in wrong format&quot;
    exit 1
fi
</code></pre>
<p>I always get a wrong format message for example for the commit message below which is correct:</p>
<pre><code>Add function
Type: Internal
Jiras: SRD-474
Problem:
</code></pre>
",1,10721913,,
55848549,3424163,4/25/2019 11:44,1,1254,<git><githooks><git-commit><git-push>,Is it possible to trigger another commit and push by git hook?,"<p>I work with software which uses git repository to generate  (or update) some file on a disk after a successful commit. I'd like to automatically add this generated (updated) file to the git repository. It can be contained in the same or the next commit and needs to be also pushed to the remote.</p>

<p>I was trying to use git hooks:
* pre-commit can't be used because before committing the file which I want to add is not updated 
* pre-push: updated file can be added and committed to the git, but I'm unable to have it pushed automatically (only first of the two commits is pushed). I'm using a script like:</p>

<p>pre-push:
'cp../updatedfile . ; git add updatedfile; git commit - m ""msg""'</p>

<p>The ideal solution would be to use something which is triggered after the successfull push of the first commit and then create a second commit (containing updated file) and push them. Do you know how to resolve it? </p>
",0,3424163,0,0
72739071,893898,6/24/2022 4:39,2,146,<powershell><gradle><githooks>,How to show Gradle build info using UTF-8 correctly in Powershell,"<p>Currently I changed my PowerShell to use code page 65001(aka UTF-8).</p>
<p>I have researched some questions on StackOverFlow, and changed my project <em>gradle.properties</em> and add the following properties.</p>
<pre><code>org.gradle.jvmargs='-Dfile.encoding=UTF-8'
</code></pre>
<p>But when starting Powershell, and execute Gradle build. And then execute Git commit/push, it includes a <a href=""https://github.com/jeremymailen/kotlinter-gradle#git-hooks"" rel=""nofollow noreferrer"">Kotlinter Git hook</a>.</p>
<p><a href=""https://i.stack.imgur.com/uypLK.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/uypLK.png"" alt=""enter image description here"" /></a></p>
<p>The standalone build task is ok, but the Git hook command that calls Gradle tasks and shows console info like the image.</p>
",1,893898,,
55871934,10163606,4/26/2019 16:50,0,1598,<git><gitlab><githooks>,How to get commit message in gitlab server side pre-receive hooks,"<p>I am trying to develop a server side pre-receive hook on gitlab. where I should get the commit message from the new commits which are getting added.</p>

<p>I tried using the <code>git log --pretty=%B -n 1</code>. This is returning the old committed message. How can I get the commit message form the new unaccepted changes ?</p>

<p>When I tried to get the refname or argument in to the script it did not hold any values. (thinking that might be of help)</p>

<pre><code>#!/bin/bash
ref_name=$refname
echo $ref_name
ref_name=$1
echo $ref_name
echo ""refname""
issue=`git log --pretty=%B -n 1`
echo $issue #this is printing old commit message
</code></pre>

<p>Result:</p>

<pre><code>Counting objects: 3, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 306 bytes | 0 bytes/s, done.
Total 3 (delta 1), reused 0 (delta 0)
remote:
remote:
remote:
remote: refname
</code></pre>
",1,10163606,,
72747193,5110683,6/24/2022 16:52,2,216,<gradle><githooks><pre-commit-hook>,Performing a commit inside a pre-commit hook,"<p>I'm using this pre-hook script because I run a task editing some classes, then I would automatically add all the edited files and commit them, but the result is that the commit is done and then the files are added but not committed. It seems like they are added after the commit and not before it.</p>
<p>The script is this:</p>
<pre><code>#!/bin/bash 
pwd
cd application 
echo &quot;Running Lint and Spotless&quot; 
bash gradlew lint spotlessApply
git add *
</code></pre>
<p>How could I do it?</p>
",5,5110683,0,0
55959771,438581,5/2/2019 20:25,2,94,<git><githooks><git-notes>,Git hooks with git notes?,"<p>Is it possible to use any <code>git</code> hooks with <code>git notes</code>? </p>

<p>In other words, are any <code>git</code> hooks triggered by a <code>git notes add -m ""Some note""</code>? </p>

<p>I have tried a few hooks (<code>update</code>, <code>post-commit</code>) but so far none seem to be triggered on a <code>git notes add</code>. </p>
",1,438581,0,0
55963158,7021694,5/3/2019 4:07,1,634,<git><unit-testing><githooks>,Git pre-receive hook automatically run unit tests being pushed in the current ref,"<p>I am having a problem in my flow, I setup a <code>pre-receive</code> hook to run unit tests for branches <code>master</code> and <code>dev</code> as following:</p>

<pre class=""lang-sh prettyprint-override""><code>#!/bin/bash
while read oldrev newrev ref
do
        if [[ ${ref} = refs/heads/master ]];
        then
                BRANCH=master
                WORKING_DIR=""/var/www/project/project_api""
        elif [[ ${ref} = refs/heads/dev ]]
        then
                BRANCH=dev
                WORKING_DIR=""/var/www/project/project_api_dev""
        else
                echo ""Ref $ref received. Will not run unit tests.""
        fi
done

if (test ""$BRANCH"" != """"); then
        echo ""Running Unit Tests...""
        cd ""$WORKING_DIR""
        npm test
        rc=$?
        if [[ $rc != 0 ]] ; then
                echo ""Unit Tests FAILED""
                echo ""Push is REJECTED""
                exit $rc
        fi

        echo ""Unit Tests PASSED""
fi

exit 0
</code></pre>

<p>With this setup, I want to reject the push if one of the unit tests <strong>(being pushed)</strong> fail.</p>

<p>The issue is that it runs the tests that are already checked out to the working directory <code>$WORKING_DIR</code>, not the tests that are being pushed in the current <code>ref</code>.</p>

<p>I thought of always checking out the <code>tests</code> folder before running the npm test, but I am not sure if this is the right way to automate running unit tests before pushing.</p>
",0,7021694,0,0
55959023,2734259,5/2/2019 19:26,1,281,<git><githooks>,Call Githooks as standalone scripts,"<p>I've been given a git pre-push hook to include in some checking inside a VS Code extension.</p>

<p>The request made to me was to run this hook against some code, but not actually push anything, just return the result.</p>

<p>The file I've been given has no file type from what I can tell, so my question is --- In theory couldn't I just copy this as a separate file and make it a .sh script, and then call it with whatever arguments it accepts (in this case two)?</p>
",4,2734259,0,0
55965712,11188195,5/3/2019 8:09,16,25379,<git><clang><githooks><pre-commit-hook>,How do I add clang-formatting to pre-commit hook?,"<p>I am new to commit hooks as well as Clang formatting and am attempting to integrate the two. I have the pre-commit hook set up and I know how to run the Clang formatting on the command line, but am unsure of how to add it to the file. </p>

<p>This is the code I run in the command line for formatting: 
<code>clang-format -i -style=llvm fileName</code></p>

<p>I am also trying to run this on all files that are staged for commit. <code>git diff --cached --name-only</code></p>

<p>This is my <code>pre-commit</code> file:</p>

<pre><code>hook_enabled=true

# Redirect output to stderr.
exec 1&gt;&amp;2

# If the hook is enabled and there are one or more files added to the commit run
# code formatting.
if [ ""$hook_enabled"" != ""false"" ] &amp;&amp;
    test $(git diff --cached --name-only $against | wc -c) != 0
then
    cat &lt;&lt;\EOF
  Code formatting changed some files, please review and re-add files with git add
EOF
    exit 1
</code></pre>

<p>I also added the clang-formatting to <code>package.json</code>:</p>

<pre><code>    ""pre-commit"": ""check-clang-format"",
    ""format"": ""git-clang-format"",
</code></pre>

<p>Please help me integrate the clang-formatting.</p>
",1,11188195,0,0
56022969,8114475,5/7/2019 12:46,0,239,<regex><bash><shell><githooks>,Regular expression on bash/shell/python for githook pre-commit,"<p>I am trying to work with regular expression
I have a string in format</p>

<pre><code>[+/-] Added Feature 305105:WWE-108. Added Dolph Ziggler super star
</code></pre>

<p>Let's look on each part of string</p>

<pre><code>1) [+/-] – bracket quotes are important. it can [+] or [-]. or [+/-]. not ""+"", or ""-"", or ""+/-"" without bracket quotes
2) Added – it can be ""Added"", ""Resolved"", ""Closed""
3) 305105 – any numbers
4) Feature – it can be ""Feaute"", ""Bug"", ""Fix""
5) : – very imporant delimiter
6) WWE-108 – any text with delimiter ""–"" and with numbers after delimiter
7) . – very imporant delimiter
8) Added Dolph Ziggler super star – any text
</code></pre>

<p>What I tried to do
Let's try to resolve each part: <br>
1) <code>echo '[+]' | egrep -o ""[+/-]+""</code>. Yes, it works, but, it works also for <code>[+/]</code>, or <code>[/]</code>. and I see result without bracket quotes <br>
2) <code>echo ""Resolved"" | egrep -o ""Added$|Resolved$|Closed$""</code>. It works <br>
3) <code>echo '124214215215' | egrep -o ""[0-9]+$""</code>. It works <br>
4) <code>echo ""Feature"" | egrep -o ""Feature$|Bug$|Fix$""</code>. It works too <br>
5) I have not found how <br>
6) <code>echo ""WWE-108"" | egrep -o ""[a-zA-Z]+-[0-9]+""</code>. It works too <br>
7) I have not found how
8) Any text</p>

<p>The main question. How to concatenate, all these points via bash with spaces, according to this template. <code>[+/-] Added Feature 305105:WWE-108. Added Dolph Ziggler super star</code>. I am not familiar with regexp, as for me, I'd like to do something like this:</p>

<pre><code>string=""[+/-] Added Feature 305105:WWE-108. Added Dolph Ziggler super star""
first=$(echo $string | awk '{print $1}')

if [[ $first == ""[+]"" ]]; then
echo ""ok""
echo $first
elif [[ $first == ""[*]"" ]]; then
echo ""ok2""
echo $first
elif [[ $first == ""[+/-]"" ]]; then
echo ""ok3""
echo ""$first""
else
echo ""not ok""
echo $first
exit 1
fi
</code></pre>

<p>But it is not ok. Can you please help me in a little bit with creation of regexp on bash. Also, python it is ok too for me.</p>

<p>Why I am doing this ? I want to make pre-commit hook, in format like this.
<code>[+/-] Added Feature 305105:WWE-108. Added Dolph Ziggler super star</code>. This is a reson, why I am doing this.</p>
",3,8114475,,
56048300,8114475,5/8/2019 20:07,1,519,<regex><string><bash><shell><githooks>,RegEx for matching characters in square brackets in bash,"<p>I need to implement my regexp for some characters with square brackets: <br>
1) <code>[+]</code> for this <br>
2) <code>[*]</code> and for this <br>
3) <code>[+/*]</code> and for this <br>
4) <code>[*/+]</code> and for this <br></p>

<p>I made this on bash:</p>

<pre><code>[root@testmachine5 ~]# echo ""[+]"" | egrep -o ""^\[(\+|\*|\+/\*)\]""
[+]
[root@testmachine5 ~]# echo ""[*]"" | egrep -o ""^\[(\+|\*|\+/\*)\]""
[*]
[root@testmachine5 ~]# echo ""[+/*]"" | egrep -o ""^\[(\+|\*|\+/\*)\]""
[+/*]
[root@testmachine5 ~]# echo ""[*/+]"" | egrep -o ""^\[(\+|\*|\+/\*)\]""
[root@testmachine5 ~]#
</code></pre>

<p>How you can see, it works, in first, second and third variants. But it does not work in last variant. </p>

<p>How do I solve this problem?</p>
",1,8114475,,
72870948,19451608,7/5/2022 14:15,0,75,<bash><git><githooks>,Is there a way to make a Git pre-commit hook only prevent a commit once?,"<p>I have written a git hook that prevents files over a certain size from being committed. However, I would only like a pop-up warning and prevention of a commit the first time the user tries to commit, and they would have the opportunity to ignore the warning and commit anyway. The post-commit wouldn't really work for this since I would like to block the commit once.</p>
<p>I was looking at taking user input but it seems like STDIN for git hooks don't really work without a very hacky approach (that doesn't work for me anyway), and there isn't really any other way to &quot;ignore&quot; a pre-commit hook and commit anyway.</p>
<p>Is there an alternative to skipping a git hook on the second go without just completely disabling the hook? Preferably using bash.</p>
",8,19451608,,
56068823,1223975,5/9/2019 23:30,19,11047,<git><githooks><git-config>,"If we change `git config core.hooksPath`, how to revert back to default","<p>By default, it looks like this is empty when run in a git repo root:</p>

<pre><code>git config core.hooksPath
</code></pre>

<p>If we change git config core.hooksPath to <code>git config core.hooksPath myhooks</code>, my question is - how do we change it back to the default? Should we unset the value (how?), or should we set it to <code>.git/hooks</code> as in <code>git config core.hooksPath .git/hooks</code>?</p>
",3,1223975,0,0
56079472,602257,5/10/2019 14:15,0,280,<git><macos><githooks>,"post-receive hook is not executed after a git push, however the pre-push does","<p>Already viewed the following answers before posting this:</p>

<ul>
<li><a href=""https://stackoverflow.com/questions/41205159/git-not-executing-post-receive-hook"">Git not executing post-receive hook</a></li>
<li><a href=""https://stackoverflow.com/questions/14922396/git-post-receive-hook-not-running-following-push"">Git post-receive hook not running following push</a></li>
<li><a href=""https://stackoverflow.com/questions/29807115/git-post-receive-hook-is-not-working"">Git post-receive hook is not working</a></li>
</ul>

<p>Although the pre-push hook is triggered successfully, the post-receive hook is not. I don't think this is a permission issue because they both have exactly the same rights:</p>

<pre><code>-rwxr-xr-x@  1 Malloc  staff    86 May 10 15:57 post-receive
-rwxr-xr-x@  1 Malloc  staff    90 May 10 15:51 pre-applypatch
-rwxr-xr-x@  1 Malloc  staff    82 May 10 15:51 pre-commit
-rwxr-xr-x@  1 Malloc  staff   153 May 10 16:05 pre-push
</code></pre>

<p>Here is the content of the post-receive executable:</p>

<pre><code>#!/bin/sh
echo ""post-receive hook successfully triggered""
</code></pre>

<p>The following content is put in the pre-push hook:</p>

<pre><code>#!/bin/sh
echo ""pre-push hook successfully triggered""
</code></pre>

<p>Once I push to remote, the pre-push message is printed to the Terminal but not the post-receive.</p>

<p>Any idea what may be going wrong?</p>
",10,602257,,
56125394,9261300,5/14/2019 7:49,2,216,<gitlab><githooks><self-hosting>,custom_hooks not working on gitlab/docker,"<p>I use a docker image of gitlab, <a href=""https://hub.docker.com/r/sameersbn/gitlab/"" rel=""nofollow noreferrer"">https://hub.docker.com/r/sameersbn/gitlab/</a> on a synology nas to manage our pipeline dev. 
I plan to deploy any push in the master branch to a production folder, where all our software looks to load scripts/ plugins.</p>

<p>To deploy to the production server, on the same server but outside the docker image.
the production folder is set as a clone of the server</p>

<pre><code>git clone /gitserver/path /prod/folder/path
</code></pre>

<p>all works as planned</p>

<p>then, I've tryied to use a custom_hook for a repo as described on the documentation here : <a href=""https://docs.gitlab.com/ee/administration/custom_hooks.html"" rel=""nofollow noreferrer"">https://docs.gitlab.com/ee/administration/custom_hooks.html</a>
the custom hooks is called ""post-update"", chmod +x and rights allowed to anyone (for testing). here is the content of the hook</p>

<pre><code>#!/bin/bash
echo ""********** publishing to prod *********"" 
cd /prod/folder/path
unset GIT_DIR
git pull origin master
echo ""********** Publish to prod complete *********"" 
</code></pre>

<p>when I push to the git server, nothing happened. 
If I run manually the post-update script, all work as espected so it seems that the problem come from gitlab custom_hooks support.
I have seen many posts about problems with custom hooks but none of them helps me</p>

<p><a href=""https://gitlab.com/gitlab-org/gitlab-ce/issues/1742"" rel=""nofollow noreferrer"">https://gitlab.com/gitlab-org/gitlab-ce/issues/1742</a></p>

<p><a href=""https://gitlab.com/gitlab-org/gitlab-ce/issues/38193"" rel=""nofollow noreferrer"">https://gitlab.com/gitlab-org/gitlab-ce/issues/38193</a></p>

<p><a href=""https://stackoverflow.com/questions/29350152/gitlab-custom-hook-not-running"">Gitlab custom hook not running</a></p>

<p>how can I make custom_hooks works ?</p>
",0,9261300,,
56144989,2551082,5/15/2019 8:40,2,529,<git><tfs><azure-devops><githooks>,Triggering powershell scripts when creating/updating/deleting Git branches on TFS,"<p>I 've some Git repositories on a TFS2017 server. The goal is to implement a method to deploy a web everytime a branch is created on this git repository, update the web when the branch is updated and delete the web when the branch is deleted.</p>

<p>I though using a powershell script for this, and I already have it implemented. The problem now is to execute this script every time a branch is created/updated/deleted.</p>

<p>I tried to use the Server-Side Git Hooks events to do this, but then I realized TFS is not implementing those hooks.</p>

<p>I was thinking in using a CI build setup to solve the creating/updating part of the problem, but then I realized that creating a branch from the server control panel will not trigger the CI's build.</p>

<p>So I'm looking for a solution for the creating/deleting problem.</p>

<p>I readed about Integrated Services in TFS. Looking at the list the only one which I find usefull for this problem is sending a HTTP request to a service (I would made a service for executing my scripts) but then I couldn't find any appropiated trigger on the drop-down menu for creating/deleting branches...</p>

<p>I'm a bit lost here, any suggestion will be very appreciated.</p>
",0,2551082,0,0
56185505,10353504,5/17/2019 11:28,0,41,<git><github><branch><checkout><githooks>,Hook to create branch from latest develop,"<p>I'm looking for a git hook that can help me with the current problem, when i create new branch i want first to pull the latest develop version and after that to create that x branch from latest develop. Unfortunately from what i know there are not pre-branch hooks. I want that because in our team sometimes we forget to take latest develop branch when we create new branch.</p>
",3,10353504,,
72982640,4828893,7/14/2022 14:59,1,148,<git><githooks>,Skip prepare-commit-message git hook?,"<p>I have a prepare-commit-message set up that runs on every commit. I want to skip this hook on this one specific commit.</p>
<p>Using the --no-verify option is no help, since <a href=""https://git-scm.com/docs/githooks#_prepare_commit_msg"" rel=""nofollow noreferrer"">the prepare-commit-message hook is not affected by that option</a>.</p>
<p>Is there any way for me to just skip the hook this one time without changing my configuration?</p>
",0,4828893,,
73000182,207384,7/15/2022 22:35,2,134,<git><githooks>,"githooks(5): what is the Git ""null-ref""","<p>On the documentation for the <a href=""https://git-scm.com/docs/githooks#_post_checkout"" rel=""nofollow noreferrer""><code>post-checkout</code> hook</a>, it says</p>
<blockquote>
<p>It is also run after <a href=""https://git-scm.com/docs/git-clone"" rel=""nofollow noreferrer"">git-clone[1]</a>, unless the <code>--no-checkout</code> (<code>-n</code>) option is used. The first parameter given to the hook is the null-ref, the second the ref of the new HEAD and the flag is always 1. Likewise for <code>git worktree add</code> unless <code>--no-checkout</code> is used.</p>
</blockquote>
<p>What does the &quot;null-ref&quot; refer to here?</p>
",0,207384,0,0
56208737,11316909,5/19/2019 14:25,1,371,<linux><git><shell><githooks>,File or Directory not found when using script with git hooks,"<p>I'm currently trying to create a custom mLinux Image and I'm following the instructions from this website: <a href=""http://www.multitech.net/developer/software/mlinux/mlinux-building-images/building-a-custom-linux-image/"" rel=""nofollow noreferrer"">http://www.multitech.net/developer/software/mlinux/mlinux-building-images/building-a-custom-linux-image/</a></p>

<p>I followed them and everything worked until this point.</p>

<p>When i'm trying to run the setup file (including this code:</p>

<pre><code>set -e
BUILDCONF=build/conf/local.conf

if [ ""$1"" != ""--update"" ]; then
  echo """"
  echo ""Setting up git hooks...""
ln -s ../../scripts/git-hooks/post-merge .git/hooks/post-merge || true
ln -s ../../scripts/git-hooks/post-checkout .git/hooks/post-checkout || 
true
  ln -s ../../scripts/git-hooks/pre-commit .git/hooks/pre-commit || true
  ln -s ../../scripts/git-hooks/pre-push .git/hooks/pre-push || true
fi

echo """"
echo ""Updating git submodules...""
git submodule update --init
</code></pre>

<p>)</p>

<p>I get the following Error Message for each of the Hooks:
Shortcut .gt/hooks/(name of the hook) could not be created: file or directory not found (translated from German).
Additionally also: git: submodule is not a command.
Has anybody got an idea, what I could have forgotten/ what is wrong?</p>

<p>Thank you in Advance!</p>
",3,11316909,0,0
56224156,5561293,5/20/2019 15:38,1,701,<githooks><husky>,Git hooks not generated,"<p>I am working on a project that has some git hooks setup using <code>husky</code>. I ran <code>npm install</code> and I can see that husky is installed but the hooks are not generated.</p>

<p>How can I generate the same?</p>

<p>PS I do not have any pre-existing hooks.</p>

<p>Any help would be appreciated.</p>
",0,5561293,0,0
56228439,,5/20/2019 21:32,0,1698,<git><github><gitlab><azure-pipelines><githooks>,What is the difference between git hooks and Azure DevOps pipelines?,"<p>I am trying to understand git hooks and Azure DevOp pipelines from scratch. I need to understand about the difference between both. Why do we need one over the other? My test environment is Unix and Azure DevOps repository on the server.</p>
",1,,,
73014362,3052438,7/17/2022 18:31,0,145,<git><githooks><fast-forward>,Skip post-merge hook when fast-forwarding,"<p>I have <code>post-merge</code> hook that check a few things after a merge/pull.
However, these check are unnecessary after a fast-forward merge and they just wasting several seconds for no good reason.
This is rather annoying.</p>
<p>How can I detect that the <code>post-merge</code> script was called for a fast-forward merge, in order to skip it?</p>
<p>According to <a href=""https://git-scm.com/docs/githooks#_post_merge"" rel=""nofollow noreferrer"">the documentation</a> the only parameter passed to the script informs whether it was a squash merge. I don't see anything about fast-forwarding there.</p>
<p>(Someone will probably point out that <code>post-merge</code> is not the best place to put checks because it it too late to stop the merge. I know that but specifics of my project cause that running them earlier is not possible.)</p>
",0,3052438,,
73018020,7944883,7/18/2022 6:19,1,528,<node.js><push><githooks><autorelease><husky>,How do I pass parameters to the husky or git pre-push hook?,"<p>I have a project in node. In this project I want to standardize commits and versioning. I installed husky, commitzen, commitlint and standard-version.
They work great, my commit is running git-cz and I'm able to standardize my commits. So far so good! But every time I need to run the command &quot;yarn standard-release&quot; and &quot;git push --follow-tags origin branch_whatever&quot;, and this is not productive for me.</p>
<p>What I want is, every time I do a &quot;git push&quot; command after a commit (fix, feat or chore), I want to run the standard-release add the options &quot;--follow-tags origin branch_whatever&quot; and then yes run the &quot;git push&quot; command, but if I put this command inside the pre-push hook, it loops on the husky, I've already tried using --no-verify, HUSKY=0 and it doesn't work.</p>
<p>Inside the pre-push hook script I can run the standard-release and &quot;git push --follow-tags origin branch_whatever&quot; without looping, any suggestions to solve this?</p>
<p>Note: Running this on CI/CD is not feasible for me at the moment.</p>
<p>Thanks!</p>
<p><strong>package.json</strong></p>
<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""false"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>{
  ""name"": ""app"",
  ""version"": ""1.0.0"",
  ""main"": ""index.js"",
  ""scripts"": {
    ""test"": ""echo \""Error: no test specified\"" &amp;&amp; exit 1"",
    ""start"": ""node index.js"",
    ""prepare"": ""husky install"",
    ""release"": ""standard-version"",
    ""commit"": ""git-cz""
  },
  ""keywords"": [],
  ""license"": ""ISC"",
  ""dependencies"": {
    ""express"": ""^4.18.1""
  },
  ""devDependencies"": {
    ""@commitlint/cli"": ""^17.0.3"",
    ""@commitlint/config-conventional"": ""^17.0.3"",
    ""commitizen"": ""^4.2.5"",
    ""cz-conventional-changelog"": ""3.3.0"",
    ""husky"": ""^8.0.1"",
    ""standard-version"": ""^9.5.0""
  },
  ""commitlint"": {
    ""extends"": [
      ""@commitlint/config-conventional""
    ],
    ""rules"": {
      ""subject-case"": [
        2,
        ""never"",
        [
          ""start-case"",
          ""pascal-case""
        ]
      ]
    }
  },
  ""config"": {
    ""commitizen"": {
      ""path"": ""./node_modules/cz-conventional-changelog""
    }
  }
}</code></pre>
</div>
</div>
</p>
<p>=======
<strong>.husky/commit-msg</strong></p>
<p>#!/usr/bin/env sh
. &quot;$(dirname -- &quot;$0&quot;)/_/husky.sh&quot;</p>
<p>yarn commitlint --edit &quot;$@&quot;</p>
<p>=======
<strong>.husky/pre-push</strong></p>
<p>#!/usr/bin/env sh</p>
<p>#. &quot;$(dirname -- &quot;$0&quot;)/_/husky.sh&quot;</p>
<p>yarn release
git push --follow-tags origin &quot;$(git rev-parse --abbrev-ref HEAD)&quot;</p>
<p>=======
<strong>terminal:</strong></p>
<p>$ git add .
$ yarn commit</p>
<p>Select example, feat commit</p>
<p>returned: feat: add new router</p>
<p>$ git push</p>
<p>enter hook pre-push</p>
<p>execute script, but looping pre-push script</p>
",1,7944883,,
73018098,218349,7/18/2022 6:28,0,246,<git><githooks>,Git `pre-commit hooks` how to refer from parent directory instead of direct folder,"<p>My <code>.husky</code> placed in the parent directory. in the child I have the <code>nx workspace</code> code. in this case how can I add the reference link to check my script in the parent directory?</p>
<pre><code>    parent/
├─ nx-workspace/
│  ├─ package.json
│  ├─ apps
│  ├─ libs
.git
.husky
</code></pre>
<p>here the package.json scripts should read the git and husky details.</p>
",0,218349,,
73027611,615533,7/18/2022 19:25,0,46,<git><githooks><git-crypt>,Make git-crypt exit with error code target file unencrypted,"<p>I'd like to write a git hook such that commit will fail if our <code>.env</code> file is not encrypted. However, <code>git status</code> always exits with code 0. How can I have this command exit with an error code when the the file is not committed.</p>
<pre class=""lang-bash prettyprint-override""><code># file encrypted
git-crypt status .env &amp;&amp; echo &quot;exit 0&quot; || echo &quot;exit 1&quot;
# encrypted: .env
# exit 0

# file not encrypted
git-crypt status package.json &amp;&amp; echo &quot;exit 0&quot; || echo &quot;exit 1&quot;
# not encrypted: package.json
# exit 0
</code></pre>
",0,615533,,
56262579,2246890,5/22/2019 18:04,0,75,<git><gitlab><githooks>,"How to: At push/merge to master, commit/push specific files to another project","<p>When a user merges to master, merge those files to another project master the user doesn't have access to.  I'm giving non-technical users access to edit some config files, that I then push to production systems through saltstack.  which uses a different project on the same gitlab server for its configs.</p>

<p>I think i need a git hook setup on the initial project and that git hook would run a script to do the rest, but i'm not sure if this can be accomplished with git-cherrypick commands or deploy key.</p>

<p>The users are logging into gitlab and editing the file in the gitlab UI, which does a commit/merge request automatically, then an admin will complete the merge request/merge.  </p>

<p>I then expect that I can take those files, copy them to my saltstack state /files/ directory where a highstate would run and push the config out to production servers. I'm just missing the automated mechanism to do so, I'm kind of a newb at git, and wonder if there is a git mechanism for this before I write a shitty bash script to accomplish it.</p>
",1,2246890,,
56267999,8237911,5/23/2019 4:15,0,1640,<git><git-submodules><githooks>,Is there a specific hook that is executed on git submodule update?,"<p>I'd like to ask if there is a possible way that a hook is executed on git submodule update; possibly like a post-update hook? thanks! :)</p>

<p>I like to execute a script (for now it just contains echo msg) that is executed every time git submodule update is run.</p>

<p>I have tried post-update hook but it seems that submodule update does not trigger this. I'd appreciate help. thank you very much!</p>
",0,8237911,0,0
56290307,5949840,5/24/2019 10:00,3,1438,<git><npm><bitbucket><githooks>,How to use separate git branch as npm package dependency in different corresponding local branch package.json?,"<p>I want to install a common-utility git repo as a dependency in my different services. For different branch on each service i want to include corresponding branch of common-utility as a dependency in package.json</p>

<p><strong>I know i can install a git module as a dependency by doing</strong></p>

<p><code>npm i git+ssh://git@&lt;gitlab_url&gt;.git</code> 
or </p>

<p><code>npm i git+ssh://git@&lt;gitlab_url&gt;.git#master</code> for a specific branch.</p>

<p>but using this approach i can only use a specific branch of utility in my all branches in every service.</p>

<p>Because when i merge the two branches, package.json also gets updated and at the end every branch have same branch of utility as dependency.</p>

<p>Let's say i have a Services using Utility as npm module and service has 2 branches <code>master</code> and <code>staging</code></p>

<p><strong>Current Scenario</strong></p>

<p><code>utility#master -&gt; ServiceA#master</code></p>

<p><code>utility#master -&gt; ServiceA#staging</code></p>

<p><strong>What i actually want</strong></p>

<p><code>utility#master -&gt; ServiceA#master</code></p>

<p><code>utility#staging -&gt; ServiceA#staging</code></p>

<p>Is there any workaround by which i can keep corresponding branch as dependency and even after merging two branches it follow similar pattern.</p>
",0,5949840,0,0
56304790,11064982,5/25/2019 12:24,0,43,<php><git><githooks>,Git Hook Pull with PHP not working on Shared Hosting,"<p>I have a script to pull a repository like this </p>

<pre><code>&lt;?php 

function execPrint($command) {
    $result = array();
    exec($command, $result);
    foreach ($result as $line) {
        print($line . ""\n"");
    }
}


print(""&lt;pre&gt;"" . execPrint(""git pull https://username:password@gitlab.com/repo/dummy-hooks.git master"") . ""&lt;/pre&gt;"");

?&gt;
</code></pre>

<p>i've been try on my own VPS it's working well but when I try on shared hosting it's not working ..</p>

<p>Anyone can help me out ? </p>
",2,11064982,,
73092034,3052438,7/23/2022 15:37,2,157,<git><parent><githooks><git-rebase><git-amend>,"In pre-commit hook, find hash of the parent of the commit that's being created","<p>I have some tests in my <code>pre-commit</code> hook which require the hash of the previous commit to work.
By previous commit I mean the one that will become the parent of the commit that's being created right now.</p>
<p>Normally, I can just use <code>git rev-parse HEAD</code>.
However, during an <code>--amend</code> commit, the <code>HEAD</code> points to the commit which will be deleted and replaced, so what I really need is <code>HEAD^</code>.</p>
<p>I also a little concerned about rebasing.
I have no idea what weird things can happen then.</p>
<p>How can I reliably get the parent commit's hash (as described) in the <code>pre-commit</code> hook?</p>
",0,3052438,,
56345621,5556606,5/28/2019 15:33,1,33,<github><githooks>,"What fires first in GitHub on a ""push"", the pre-receive hook or the webhook?","<p>I am working on various hook scripts and was wondering if there could be a possible 'race condition' WRT the firing of similar ""push"" hooks. For example, if I have a pre-receive hook that uses the default GH environment (e.g., not running in a container), and a webhook that is set to fire on a ""push"" operation, does one hook fire first, are they fired in-parallel, or is it ""random"" depending on server load, the hook's functionality, etc? I'm setting up a test scenario, but was wondering if someone had already gone through this and had feedback.</p>

<p>Thanks in advance!</p>
",0,5556606,,
73113615,3137910,7/25/2022 18:13,0,16,<git><version-control><githooks>,Can I script telling git which changes to discard when a change is made to a file?,"<p>I have a set of XML files that I'm tracking in git that are rather large (10k lines each). The tool that generates these file will produce changes that I don't necessarily want to stage. Using a tool like SourceTree or Gitkraken, I can go through the file and discard the changes I don't want manually; however, I'm wondering if it's possible to script this.</p>
<p>The current workflow is that I will generate the XML files and manually replace them in the tracked directory, after which git will create the diff, and I will discard the changes I don't want.</p>
<p>I wanted to script this so that when git detects changes to a given file, it provides the original file and the changed file/diff into a script, where I can define rules for if I want to keep the change or discard it.</p>
<p>Because the file is XML, I wanted to be able to tell git to ignore changes to particular attributes on particular tags.</p>
<p>I've looked at using pre-commit hooks for this purpose, but I'm not sure I have access to both the original and the changed files as part of the hook's data.</p>
<p>Any ideas for how I can achieve this?</p>
<p>Thanks!</p>
",1,3137910,,
73115006,19620532,7/25/2022 20:28,0,54,<git><azure-devops><githooks>,How to replicate pre-receive server-side hooks functionalities in Azure DevOps?,"<p>I'm trying to stop commits from being pushed to a remote branch using pre-receive server-side hooks, but I realized that Azure DevOps doesn't use hooks. Also, I'm working with Azure resources like Data Factory and Synapse, so using client-side hooks are not an option.<br />
I know I can use Github Enterprise to use server-side hooks, but I was wondering if there's a creative way to replicate pre-receive server-side hooks functionalities in Azure DevOps.</p>
<p>Thank you :)</p>
",0,19620532,,
56368528,11575149,5/29/2019 21:08,1,30,<git><githooks>,Email notifications after 'git archive'?,"<p>Custom requirement: How to notify specific people, using email as soon as a git archive command is run to download a single file?</p>

<p>Couldn't find a hook which can do so.</p>
",1,11575149,0,0
56379208,7138492,5/30/2019 13:22,7,3045,<git><githooks>,Ignoring merge commits for prepare-commit-msg git hook,"<p>I came up with the following prepare-commit-msg git hook:</p>

<pre><code>#!/bin/sh

BRANCH=`git branch | grep '^*' | sed -e 's/^\* //'`
MESSAGE=`cat ""$1""`
JIRA_ID=$(echo ""$BRANCH"" | grep -Eo ""[A-Z0-9]{1,10}-?[A-Z0-9]+-\d+"")

if [ -z ""$JIRA_ID"" ]; then
    echo ""$MESSAGE"" &gt; ""$1""
else
    echo ""[$JIRA_ID] $MESSAGE"" &gt; ""$1""
fi
</code></pre>

<p>It does its job by adding branch name (which is in a form of BRANCH-123) to every commit message. However, I don't want this to work with merge commits which have auto-generate commit messages s.a. <code>Merge branch 'master' into BRANCH-123</code>. Which with my hook converts into <code>BRANCH-123 Merge branch 'master' into BRANCH-123</code></p>

<p>I need to edit the script to somehow ignore (not apply the hook) commits starting with <code>Merge branch</code>. </p>
",0,7138492,,
73200641,2671470,8/1/2022 23:58,2,750,<git><git-commit><githooks><pre-commit-hook>,How to get arguments from githook?,"<p>From the <a href=""https://git-scm.com/docs/githooks"" rel=""nofollow noreferrer"">githook's doc</a> says:</p>
<blockquote>
<p>Hooks can get their arguments via the environment, command-line arguments, and stdin. See the documentation for each hook below for details.</p>
</blockquote>
<p>But what are the mentioned arguments?</p>
<p>If I do commit with this command:</p>
<pre><code>git commit -m &quot;my commit&quot; --trailer &quot;Helped-by: Nganu &lt;committer@example.com&gt;&quot;
</code></pre>
<p>How to get <code>trailer</code> value in pre-commit or prepare-commit-msg hook?</p>
<p>I don't see any documentation about getting arguments in <code>pre-commit</code> or <code>prepare-commit-msg</code> hooks. And I tried using <code>$0</code> like bash argument, but it failed.</p>
",1,2671470,,
56449677,618099,6/4/2019 18:48,7,872,<javascript><git><visual-studio-code><jsx><githooks>,VSCode: trigger organizeImports when git staging,"<p>I like the automated organize feature in VSCode, but having it doing it on every save has given me some trouble.</p>

<pre><code>...
""editor.codeActionsOnSave"": {
    ""source.organizeImports"": true
  },
...
</code></pre>

<p>Is it possible to set up some git hooks that organize the imports (either via vscode or some other script/lib) when I stage them?</p>

<h2>Issues</h2>

<p>If I hit save too early (do it to kick off prettier all the time) before I have used the imported methods - then it removes it and I have to write the import again.</p>

<p>If I break the code (.jsx) and something appears to not be used and I hit save (to trigger prettier), then it removes the imports. I then have to import them again.</p>
",0,618099,0,0
