Post Link,User Link,CreationDate,Score,ViewCount,Tags,Title,Body,CommentCount,OwnerUserId,AnswerCount,FavoriteCount
"38762641","5396946","2016-08-04 08:48:26","0","968","<git><gitignore>","gitignore allow certain file only in named subfolder","<p>I am currently cleaning up a git-repository, moving dependencies and so on.
I have decided to have a global folder which contains all third-party libraries that we use. Except for these <code>*.dll</code> files, I want to ignore any other dll-Files in the project.</p>

<p>So my <code>gitignore</code> in the root directory of the project contains these lines:</p>

<pre><code>*.dll
!external\ libraries/*.dll
</code></pre>

<p>Which apparently does not work.
I also tried placing a .gitignore file into the <code>external libraries</code> directory, containing the line <code>!*.dll</code>, which did not work either.</p>

<p>What am I doing wrong?</p>

<p>e/</p>

<p>Output of ls in <code>external libraries</code></p>

<pre><code>/external libraries (branchname)
$ ls
file1.dll*
file2.dll*
</code></pre>

<p>In the root directory <em>ls</em> returns all folders as expected.</p>
","7","5396946","",""
"19671892","1448031","2013-10-30 00:51:24","3","1259","<git><joomla><github><gitignore>","Different Joomla .gitignore files in different repos","<p>I am trying to use .gitignore file for my Joomla repo. I have noticed that the official joomla .gitignore file is much shorter as compared to the .gitignore provided by Github, which has an exhaustive list. Not sure why they are different.</p>

<p>This is joomla's .gitignore file: <a href=""https://github.com/joomla/joomla-cms/blob/master/.gitignore"" rel=""nofollow"">https://github.com/joomla/joomla-cms/blob/master/.gitignore</a></p>

<p>This is from github: <a href=""https://github.com/github/gitignore/blob/master/Joomla.gitignore"" rel=""nofollow"">https://github.com/github/gitignore/blob/master/Joomla.gitignore</a></p>

<p>Was that intentional or is there a reason behind that?</p>

<p>My other question is what is the best practice to use .gitignore in my repo? Do I pull it from the remote repo or do I manually create a .gitignore file in my local repo?</p>
","0","1448031","",""
"19672367","2934410","2013-10-30 01:42:27","0","194","<git><gitignore>",".gitignore overly ignores files","<p>I'm working on a project on linux, with git version 1.8.x .
I tried to set some rules with .gitignore and quickly realized that listing everything you don't want to track is not what I actually want.
So I tried instead to precise which patterns git should track, ie:</p>

<pre><code>*

#code files
!**/*.cpp
!**/*.h
</code></pre>

<p>But then, git doesn't track any new files anymore.
So is it possible to find a way to make it works?
Moreover using !**.cpp works only for the currents folders files.</p>

<p>Thanks o/</p>
","7","2934410","",""
"57530472","11639503","2019-08-16 20:00:03","1","47","<git><gitignore>","How to select multiple files of same format except a specific name in gitignore","<p>I have multiple .txt files to include in gitignore. Also, I need a few of the .txt files to be commited.</p>

<p>Presently, I'm doing:<br>
1) *.txt in .gitignore<br>
2) Followed by git add -f fill_2_add.txt</p>

<p>Is there a way to avoid forcefully including the required .txt files?
I tried using '!fill_2_add!.txt' as given in documentation but to no avail</p>
","1","11639503","0","0"
"19585408","921538","2013-10-25 08:55:43","0","486","<git><github><gitignore>","How to commit directory structure (directories with subdirectories) without files to git?","<p>I'm trying to commit the following directory structure to git:</p>

<pre><code>web
    /uploads
            /avatars
            /video
</code></pre>

<p>I put <code>.gitkeep</code> into <code>/web/uploads/avatars/</code> and <code>/web/uploads/video/</code> and added the following lines to <code>.gitignore</code> in the root of the repo:</p>

<pre><code>/web/uploads/
!/web/uploads/avatars/.gitkeep
!/web/uploads/video/.gitkeep
</code></pre>

<p>But <code>git status</code> does not show any new files. Invoking <code>git add web/uploads/avatars/.gitkeep</code> outputs the following message:</p>

<pre><code>The following paths are ignored by one of your .gitignore files:
web/uploads/avatars/.gitkeep
Use -f if you really want to add them.
fatal: no files added
</code></pre>

<p>How can I commit an empty directory structure into git repository?
P.S. git version is git version 1.8.4.msysgit.0</p>
","1","921538","",""
"38711272","6315090","2016-08-02 03:21:56","1","4995","<laravel><github><gitignore><git-add>","Why is vendor package not pushing to github even when ""/vendor"" is not listed in .gitignore file?","<p>When I add files to my local repository, some vendor packages are excluded even though they are not listed in the .gitignore file.  Since they are not pushed to the remote repository, other developers are not able to pull the vendor packages.</p>
","1","6315090","",""
"66129837","12728552","2021-02-10 01:52:59","3","1175","<android><git><gitignore>","About the .gitignore question, .cxx folder in the Android project","<p>Here's a question about Git, .gitignore on Android!</p>
<p>======================================================</p>
<p><strong>Q1) What files are created in myproject/app/.cxx?</strong></p>
<p>I am using ndk, jni in android project.
It seems that the files related to this are being automatically changed in myproject/app/.cxx.</p>
<p>When I try to branch move, the files in this folder are changed, so I have a problem that I have to commit.</p>
<p>So I want to add that directory to .gitignore,
I don't know exactly what that directory is, so I'm wondering if I can add it to .gitignore</p>
<p>======================================================</p>
<p><strong>Q2) I have multiple .gitignore files.</strong></p>
<p>If I add that directory (myproject/app/.cxx) to .gitignore,</p>
<p>There is also a .gitignore file in the &quot;myproject&quot; folder,</p>
<p>There is also a .gitignore file in the &quot;myproject/app&quot; folder.</p>
<p>Should i edit .gitignore in &quot;myproject/app&quot;??</p>
","0","12728552","",""
"29386242","2746924","2015-04-01 08:34:52","7","6786","<android><git><gitignore>","Android studio gitignore won't ignore .iml","<p>Iv'e added:</p>

<pre><code>*.iml 
</code></pre>

<p>to all of the gitignore files in my project.
They are still being tracked, even after committing the .gitignore.</p>
","0","2746924","0","0"
"49148044","197134","2018-03-07 09:13:52","0","37","<git><github><gitignore>","Git commit changes in folder from .gitignore once","<p>is it possible to have a folder ignored by git even if sometimes this folder is committed?</p>

<p>The background is that in open source projects I don't want others to commit the <code>dist/</code> folder, however when I build a new version I need to obviously commit the <code>dist/</code> folder. Is there a solution to this ""problem""?</p>

<p>Thanks</p>
","1","197134","",""
"51796951","2204305","2018-08-11 06:03:58","1","1527","<git><react-native><node-modules><gitignore>","React native node modules: how to keep changes in Android modules in git?","<p>I have a React native project which requires to change some code inside the Android project of some library. The problem is that the library is positioned inside the node_modules folder and it's not been saved when pushing to get, because node_modules is ignored. I know I can remove node_modules from .gitignore but I think there should me another way, some better practice?</p>
","1","2204305","",""
"51800282","1532020","2018-08-11 13:49:57","2","1198","<git><converters><gitignore><ignore><plasticscm>","Convert .gitignore into ignore.conf","<p>In my Plastic SCM repository, how can I make use of existing well-crafted .gitignore files (such as <a href=""https://github.com/github/gitignore"" rel=""nofollow noreferrer"">the ones on GitHub</a>)? I'm looking for an automated conversion from .gitignore to the ignore.conf format that Plastic SCM understands.</p>

<p>There's an <a href=""https://plasticscm.uservoice.com/forums/181648-git-bisync/suggestions/3326017-ignore-conf-and-gitignore"" rel=""nofollow noreferrer"">old request</a> for such a conversion tool, or even for Plastic SCM to read .gitignore files directly. I don't see either having been implemented yet.</p>

<p>Also, the format of ignore.conf is not systematically documented <a href=""https://git-scm.com/docs/gitignore#_pattern_format"" rel=""nofollow noreferrer"">like .gitignore is</a>. The best documentation I found is <a href=""http://blog.plasticscm.com/2014/11/configuring-ignored-items-on-your.html"" rel=""nofollow noreferrer"">this blog post</a>. Apparently comments, exception rules, and wildcards work in the same way as in .gitignore.</p>

<p>Differences I have noticed between ignore.conf and .gitignore:</p>

<ol>
<li>Plastic doesn't seem to understand Git's range syntax <code>[abc]</code>.</li>
<li>Trailing slash in Git matches only folders, not files or symbolic links. Without a trailing slash the name can match file and folder alike. In Plastic there seems to be no way to tell a file from a folder.</li>
<li>In Git, <code>folder/</code> with a trailing slash ignores the folder and all files under it. In Plastic, it will only ignore the files under it.</li>
<li>There's a peculiarity with folders that begin with a dot. In Git, <code>.vs/</code> ignores the folder and its contents (and you could alternatively use <code>.vs</code> which would also match a regular file by that name). In Plastic, you need both <code>.vs</code> to ignore the folder and <code>.vs/</code> to ignore its contents.</li>
</ol>
","0","1532020","",""
"54610395","3691980","2019-02-09 20:24:28","0","1650","<git><jar><gitlab><gitignore>","gitlab doesn't ignore file","<p>I have this line in the .gitignore file at the root of my project</p>

<pre><code>!gradle/wrapper/gradle-wrapper.jar
</code></pre>

<p>But when I do push, I still get the message</p>

<blockquote>
  <p>remote: GitLab: File name gradle/wrapper/gradle-wrapper.jar was blacklisted by the pattern .(jar|war|ear|class\b|keep|dll|exe|msi|pbl|pbd|zip|rar|tar|gz|7z|doc\b|docx|docm|dot|dotx|dotm|xlt|xltx|xltm|ppt|pptx|pptm|pot|potx|potm|vsd|vdx|key\b)$. </p>
</blockquote>

<p>Any thoughts?</p>
","0","3691980","",""
"76130582","19571076","2023-04-28 14:26:25","1","82","<django><github><gitignore>",".gitignore file in django","<p>i should do a push of my small project in django/redis and python on github but i noticed that after creating some users and doing the push, they are also saved on github. Reading on the internet I should create a gitignore file but I don't know what to write in it.
I should obviously save the migrations but not the data that has been entered in the database.
i found a file on gitignore.io but i am not sure if everything in it fits my case. do you have any tips or sites where i can check this?</p>
","2","19571076","",""
"76158159","21799431","2023-05-02 19:15:52","0","38","<git><gitignore>","Exclude the ""build"" folder from a repository (.gitignore), except files with extension "".bin"" located in any folder/subfolder","<p>I'm using .gitignore to exclude the &quot;build&quot; folder from a repository, but i would like to keep .bin files located anywhere.</p>
<p>I tried this:</p>
<pre><code>/build/**
!**/*.bin
</code></pre>
<p>And tried this:</p>
<pre><code>/build/*
!**/*.bin
</code></pre>
<p>The result: .gitignore keep .bin files in &quot;build&quot; folder, but doesn't keep .bin files located in subfolders (&quot;build/bootloader&quot;, for example)</p>
<p>I also tried:</p>
<pre><code>/build/*
!build/*.bin
!build/bootloader/*.bin
</code></pre>
<p>What else can i try to keep .bin files from subfolders?, Many thanks for your help!</p>
","4","21799431","",""
"76231397","7984318","2023-05-11 20:29:03","-1","31","<git><gitignore>","git status, how to ignore some folders","<p>My project structure is like this:</p>
<pre><code>├── myProject
│   ├── myapp
│   ├── myenv
│   └── db.sqlite3
</code></pre>
<p>Each time I run:</p>
<pre><code>git status
</code></pre>
<p>I received many status changes of myenv which are not important to me, but the myenv changes are too many, it is very annoying.</p>
<p>I tried to ignore it by creating a .gitignore file:</p>
<pre><code>├── myProject
│   ├── myapp
│   ├── myenv
    ├── db.sqlite3
    └── .gitignore
</code></pre>
<p>Inside it:</p>
<pre><code>db.sqlite3
dir_to_ignore/myenv/
</code></pre>
<p>But it does not work, after running <code>git status</code>, still lots of status changes of myenv came out.</p>
<p>How can I solve this?</p>
","0","7984318","",""
"76251053","21508336","2023-05-15 05:20:34","1","51","<windows><git><gitignore><utf-16>","Git not ignoring an new untracked file even though it is in .gitignore","<p>Hi I'm a beginner to Git and am not sure why .gitignore is not working for me when I create new files. I've seen that Git will continue to track files that had previously been staged/committed in the repo but these are NEW untracked files so shouldn't they be ignored. Please help, thanks!</p>
<pre><code>&gt;&gt;&gt; echo hello &gt; file1.txt
&gt;&gt;&gt; echo file1.txt &gt; .gitignore
&gt;&gt;&gt; git status
On branch master
Untracked files:
  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)
        .gitignore
        file1.txt
</code></pre>
<p>Tried to debug by checking git ls-files and double checking the .gitignore contents. However, all seems non-problematic so I'm not sure why the file is not ignored.</p>
<p>I tried adding <code>*.txt</code> in .gitignore too to no avail</p>
<p>I used git check-ignore which returns me nothing, so it suggests that the .gitignore is not implemented properly?</p>
","5","21508336","",""
"76332366","21950386","2023-05-25 12:39:23","0","29","<git><gitignore>","Why does log log/ log/* log/** work the same in gitignore","<p><a href=""https://i.stack.imgur.com/xWj4x.png"" rel=""nofollow noreferrer"">enter image description here</a>
log log/ log/* log/** should work differently in gitignore,But you can see that they are doing the same thing. Why is that</p>
<p>I think log and log/ should not ignore its subdirectories and files.
log/* should not ignore files in its subdirectories.
log/** is going to ignore everything in it.</p>
","2","21950386","",""
"76338877","11133602","2023-05-26 08:09:41","0","20","<git><gitignore>","gitignore - how do I ignore all files, except files with certain extension, anywhere in the repository?","<p>What should I put in <code>.gitignore</code> so that git ignores everything except JSON files (with file extension .json) anywhere in the repo (could be deep inside of some dir)?</p>
<p>I tried this, but it didn't work:</p>
<pre><code># Ignore everything
*

# But not .json files (including those in subdirectories)
!/**/*.json
</code></pre>
","4","11133602","",""
"76385107","1980846","2023-06-01 19:28:08","0","31","<git><gitignore>","Revert excluded files from .gitignore","<p>I have the following folder structure:</p>
<pre><code>a/b/c/
a/b/d/s/g/foo.js
a/b/e/t/h/i/foo.js
a/b/f/u/j/foo.js
</code></pre>
<p>and I am trying to ignore the folder <code>a/b</code> but exclude the file <code>foo.js</code></p>
<p>In <code>.gitignore</code> I have tried</p>
<pre><code>a/b/*
!a/b/**/foo.js
</code></pre>
<p>but it doesn't seem to work.</p>
<p>Any suggestions?</p>
","0","1980846","",""
"76394368","14584368","2023-06-03 02:48:16","0","35","<gitignore><railway>","Does RailwayCLI ignore files defined in .gitignore?","<p>The command <code>railway up</code> takes your current local project and uploads it directly to railway without having to link a Github repo to your railway project.</p>
<p>Does RailwayCLI take into account .gitignore file like Git does? if not what is the proper way to ignore files (not upload them) when using the command.</p>
<p>I couldn't find anything relevant mentioned in their docs.</p>
","0","14584368","",""
"76413683","5040610","2023-06-06 10:26:34","0","26","<gitignore>","How do I get git to ignore files that have a certain extension but do not start with a certain prefix?","<p>I have a folder of files, some of which begin with a certain prefix like &quot;prefix_&quot; and end with a specific extension, like &quot;.txt&quot;.</p>
<p>How to I create an entry in .gitignore that will exclude all files that end with &quot;.txt&quot; but do not start with the prefix &quot;prefix_&quot;?</p>
<p>Thanks!</p>
","0","5040610","",""
"76419233","15301910","2023-06-07 00:44:50","0","43","<github><gradle><intellij-idea><gitignore>","gitIgnore is not working in my repository","<p>I added files that need to be ignored,but IntellIJ Idea continue to add t in Repository.I deleted previous repository, and create a new to check will it be working, and it still cannot be ignored.Does anyone know, what the can be problem here?</p>
<pre><code># Compiled class file
*.class

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.nar
*.ear
*.tar.gz
*.rar
*.iml

# Project gen files
.idea
.allure/
.gradle/
allure-results/
gradle/
build/
bin/
out/
logs/
target/
.classpath
.project
.settings/org.eclipse.buildship.core.prefs
.vscode
/gradlew
/gradlew.bat
.todo
*.properties
</code></pre>
<p><a href=""https://i.stack.imgur.com/8BtUz.png"" rel=""nofollow noreferrer"">Thats only added my commit for files</a></p>
","2","15301910","",""
"76418208","5002671","2023-06-06 20:25:56","0","35","<git><git-merge><gitignore><git-checkout>","Why .gitignore files are appearing in master while they are ignored in development branch?","<p>I have a development branch, where in one of the sub-directories I created a .gitignore file, added the file(s) to be ignored, committed and pushed the change to development branch. But now when I checkout to master (because I want to merge development to master), the ignored files show up as unstaged changes. Why does it happen this way? What am I doing wrong in the workflow? How can I fix it? (I am using VS code for my work).</p>
","0","5002671","",""
"76446451","6908282","2023-06-10 13:34:51","2","77","<git><gitignore>","gitignore files temporarily for 2 days","<p>Is there a way to gitignore files for a selected duration?</p>
<p>I'm aware that we can use <code>git update-index --assume-unchanged</code> as mentioned <a href=""https://stackoverflow.com/a/26549583/6908282"">here</a>. But</p>
<ul>
<li>using this method, I need to manually set &amp; unset this, so there's a chance that I might forget to unset.</li>
<li>more importantly, its not a recommended approach as documented in <a href=""https://git-scm.com/docs/gitfaq#ignore-tracked-files"" rel=""nofollow noreferrer"">git-scm</a> - <em>(thanks to <a href=""https://stackoverflow.com/questions/76446451/gitignore-files-temporarily-for-2-days?noredirect=1#comment134795978_76446451"">bk2204's comment</a> below for the reference)</em></li>
</ul>
<hr />
<p>So, I'm looking for a way to automatically start including the files in git changes.</p>
<p>The use-case here is that I use Obsidian which is a Personal Knowledge Management application. And this applications saves the configuration setting of the UI layout in a json format anytime I open a file. It keeps track of</p>
<ol>
<li>all the currently active files and top 10 recently opened files which constantly change and I don't want that to trigger the git change</li>
<li>the layout of the application (similar to VS Code workspace layouts) - which I need to save whenever its changed</li>
</ol>
<p>So I don't want to include them in git changes regularly, but I want to include them at-least every 2 days to ensure that any layout changes are included.</p>
<p>How do I achieve this?</p>
<hr />
<p>To add more clarity based on the comments:</p>
<ul>
<li><p>The challenge is not to commit them on a regular basis, it is to ignore the files whenever I commit in the 2 days span. The reason for that is that I have been using <code>git add .</code> or <code>git commit -a -m 'My commit comments'</code> as a practice for a very long time. And it has become second nature to me at this point. And I want git to ignore these files when I do that within the span of 2 days.</p>
<p>So an ideal solution would mean that I don't have to keep a lookout for these files every time I commmit and manually ignore them and then manually add them the 2nd day - since they will be automatically un-ignored the 2nd day</p>
</li>
<li><p>The use-case I mentioned above is just one example, there can be other use-cases like that for other kind of tools. So i'm looking for a solution using git workflow.</p>
</li>
</ul>
","4","6908282","",""
"76530977","13294641","2023-06-22 10:31:52","0","10","<git><gitignore>",".gitignore hiding appsettings.json index","<p>I am writing an API for Task Management.  I adjusted .gitignore and added ***/appsetting.json. It worked and I don't see appsettings.json on github repo. But I want something like that: appsettings.json will be seen on GitHub but it will not show my connection string. Are there any ways to do this?
I couldn't find any information about this.
Also when one of my friends pull repo. It will download appsettings.json but Connection String willl be shown like this &quot;!!!!!!!&quot;</p>
","0","13294641","",""
"76545333","14353544","2023-06-24 09:08:57","0","34","<git><gitignore>","Difference between *.zip and .zip in .gitignore (zip is a example)","<p>In <code>.gitignore</code> I specified <code>.zip</code> and it didn't work.
But when I did <code>*.zip</code> it filtered my files to be commited.</p>
<p>What's the difference between these two?</p>
","3","14353544","",""
"76556670","796940","2023-06-26 12:26:03","0","17","<git><git-submodules><gitignore><ignore>","Git repo: ignore any sub-directories that have their own git repos","<ul>
<li>I want to track <code>*.md</code> files recursively under my main <code>~/Documents</code> dir.  And nothing else.</li>
<li>However there's some subdirs under there that are their own projects with their own <code>.git</code> repos
<ul>
<li>So those dirs can be ignored entirely, I don't need to track their <code>*.md</code> files in my main <code>~/Documents/.git</code> repo</li>
<li>But I still want to leave those subdirs where they are</li>
</ul>
</li>
</ul>
<p>In my <code>~/Documents/.gitignore</code> file I have:</p>
<pre><code>*
!*/
!*.md
</code></pre>
<p>When I try running <code>git add -A</code> ... it fails with an error on the first subdir it comes across that has its own <code>.git</code> repo:</p>
<pre><code>error: 'some-subdir-project-that-can-be-ignored/' does not have a commit checked out
</code></pre>
<p>How can I get git to just skip any of those subdirs, without needing to specifically specify every one of them to be ignored by name (either now, or any others that appear in there later on).</p>
","2","796940","",""
"76578945","3416648","2023-06-29 07:37:18","-1","18","<git><gitignore>","gitignore cannot exclude folders from exclusion","<p>I have troubles excluding a pattern from .gitignore (I want the folder to be added)</p>
<p>currently my .gitignore is like:</p>
<pre><code>/*
!file1.conf
!file2.ini
!*.xml
!confs/*
</code></pre>
<p>in a hierarchy that have really many files</p>
<p>When I <code>git add .</code> it correctly add <code>xml</code>s present in the root directory along with <code>file1.conf</code> and <code>file2.ini</code> but no file from <code>confs/</code> folder is added.</p>
<p><code>git status</code> returns:</p>
<pre><code>file1.conf  
file2.ini
data1.xml
logback.xml
</code></pre>
<p>but the expected <code>confs/filea.json</code> is missing</p>
","0","3416648","",""
"21499082","577052","2014-02-01 14:13:55","1","425","<c#><vb.net><gitignore>","Strong Names Keyfile in .gitignore","<p>I compile a library in C# and wonder whether I put the .snk file used to sign the library with a strong name in the .gitignore file or if I commit it to the repository?</p>
","2","577052","",""
"40515126","1253667","2016-11-09 20:07:22","0","98","<git><visual-studio><gitignore>","How to exclude project from .gitignore","<p>I have a Visual Studio solution, inside my solution I created a new project named: <code>MyProject.Log</code></p>

<p>I committed but saw there is nothing to commit.</p>

<p>Then I opened my .gitignore file and saw a <strong>*.log</strong> and <strong>[Ll]og/</strong>. So Im sure that why <code>MyProject.Log</code> folder is exluded.</p>

<blockquote>
  <p>What do I have to add in my .gitignore file so my new project is added but everything inside is filtered with the .gitignore patterns?</p>
</blockquote>
","0","1253667","",""
"59321637","65545","2019-12-13 11:25:10","3","477","<c#><visual-studio><version-control><gitignore>","Can a gitignore file have a generic pattern for XML documentation files?","<ul>
<li>Enable the <code>XML documentation file</code> from the C# Project Properties > Build tab.</li>
<li>Build the project</li>
</ul>

<p>By default, git will suggest adding this to the repo.</p>

<p>Since it's a build artifact, this is not desired.</p>

<p>However, it needs to be manually excluded for each instance in e.g. gitignore files.</p>

<p><a href=""https://i.stack.imgur.com/j45jq.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/j45jq.png"" alt=""Project properties""></a></p>
","2","65545","",""
"40705932","850781","2016-11-20 15:40:28","3","449","<git><gitignore>","How do I ignore numeric logs in git?","<p>Python <a href=""https://docs.python.org/2/library/logging.handlers.html#logging.handlers.RotatingFileHandler"" rel=""nofollow noreferrer""><code>RotatingFileHandler</code></a> creates logs like <code>foo.log</code>, <code>foo.log.1</code>, ..., <code>foo.log.213</code>....</p>

<p>How do I ignore all these in <code>git</code>? (I know that <code>*.log</code> are ignored automatically).</p>

<p>E.g., adding</p>

<pre><code>*.log.[0-9]
*.log.[0-9][0-9]
*.log.[0-9][0-9][0-9]
</code></pre>

<p>to <a href=""https://git-scm.com/docs/gitignore"" rel=""nofollow noreferrer""><code>.gitignore</code></a> would probably work for the first 1,000 log files, it looks ugly.</p>

<p>Is there a better way?</p>
","0","850781","",""
"3066698","93979","2010-06-18 01:32:18","23","6451","<iphone><xcode><git><version-control><gitignore>","What is the 'standard' content of .gitignore for an iPhone (Xcode) project?","<p>What is considered the 'standard' content of .gitignore file for an iPhone (Xcode) project?</p>

<p>PS: not sure if this needs to be a CW.</p>
","1","93979","0","0"
"59601854","331785","2020-01-05 16:26:26","2","63","<git><gitignore>","understanding gitignore with subdirs","<p>If I have the following directory layout:</p>

<pre><code>/
 - a
   - b
     - c.txt
</code></pre>

<p>and the following <code>.gitignore</code></p>

<pre><code>b/
</code></pre>

<p>it will match (i.e. ignore) the file, but if the <code>.gitignore</code> is</p>

<pre><code>b/*
</code></pre>

<p>it won't?</p>
","0","331785","",""
"59614944","1230198","2020-01-06 15:41:00","0","221","<git><visual-studio><gitignore>","Visual studio Ignore the .gitignore file","<p>I add to my project root the .gitignore file but I don't know why I still get the bin and debug folder
here is my .gitignore file</p>

<p><a href=""https://github.com/geshtop/5780_final1/blob/master/.gitignore"" rel=""nofollow noreferrer"">https://github.com/geshtop/5780_final1/blob/master/.gitignore</a></p>

<p>in the ignore file I have</p>

<pre><code>*/bin/
</code></pre>

<p>and still files in bin folder shown</p>

<p><a href=""https://i.stack.imgur.com/oa1AE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/oa1AE.png"" alt=""enter image description here""></a></p>
","2","1230198","",""
"3203228","162325","2010-07-08 11:54:13","440","144297","<git><gitignore>","git ignore exception","<p>I have a gitignore file that makes git ignore <code>*.dll</code> files, and that is actually the behavior I want. However, if I want an exception ( i.e. to be able to commit <code>foo.dll</code>), how can I achieve this?</p>
","3","162325","0","0"
"3207016","93311","2010-07-08 19:04:10","0","1151","<ruby-on-rails><ruby><repository><github><gitignore>","Github and Non-Ignoring files in the .gitignore","<p>I had a file I needed to edit in my .gitignore file.</p>

<p>I edited .gitignore, committed it, and still my file was unavailable to commit.</p>

<p>I deleted the file, readded it, and once it has the same name, its still unavailable to commit.</p>

<p>I tried -f, which then added an empty version of the file to my repository. And the worst apart about that is that if I deployed, it would break my entire application at this point. </p>

<p><b>Update:</b></p>

<p>The file I want to add is :</p>

<pre><code> public/javascripts/ckeditor/config.js
</code></pre>

<p>my .gitignore file says :</p>

<pre><code> public/stylesheets/*.css
 *.swp
 *.pid
 .idea
 config/database.yml
 log/*.log
 db/*.sqlite3
 tmp/**/*
 doc/api
 doc/app
 doc/plugins
 public/system/*
 coverage.data
 coverage/*
 .DS_STORE
 .DS_Store
 solr/data/**/*
 solr/pids/**/*
 config/initializers/mail_delivery_override.rb
</code></pre>

<p>Git status reveals this :</p>

<pre><code>  # On branch testing
  # Changed but not updated:
  #   (use ""git add &lt;file&gt;..."" to update what will be committed)
  #   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
  #
  # modified:   public/javascripts/ckcustom.js
  #
  no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>That ckcustom.js is a compiled file form the ckeditor suite that is made by other changes. But I can't just edit that file, I had to edit its inner workings.</p>
","1","93311","",""
"59703735","","2020-01-12 12:20:26","1","1509","<github><gitignore>","How to add subfolder to gitignore file?","<p>I have .gitignore in learning_python folder,</p>

<p>need to add .ipynb_checkpoints folder to .gitignore.</p>

<p>.ipynb folder location:</p>

<pre><code>learning_python/python_crash_course/.ipynb_checkpoints/
</code></pre>
","0","","0","0"
"21955941","2232874","2014-02-22 14:56:16","3","2191","<android><git><gitignore>","what folders should git ignore in an Android project","<p>I am building an Android app using Eclipse and git. Everytime I do a commit I see changes in files I am not shure I need to track (for instance, some inside the bin folder). Which folders can git safely ignore in this kind of project? </p>
","0","2232874","0","0"
"3360092","405332","2010-07-29 06:49:41","10","7935","<git><repository><push><gitignore>","Protecting files in git repository","<p>I have a central repository with a subset of files that I want to protect from being changed (by pushing) from other users. If I add these files to <code>.gitignore</code>, they would not be cloned.</p>

<p>Is it possible to give the ability to clone all files, but after cloning add some of them to <code>.gitignore</code> on the client side?</p>
","2","405332","0","0"
"22073593","2697793","2014-02-27 15:53:27","2","1514","<git><sqlite><gitignore><git-pull>","Git pull problems with gitignore","<p>I've added my files to the gitignore:</p>

<pre><code>db/development.sqlite3
log/development.log
</code></pre>

<p>And I've removed them from tracking on both my local computer and server:</p>

<pre><code>git rm --cached db/development.sqlite3
git rm --cached log/development.log
</code></pre>

<p>Then I push from my local computer to the repo, and pull to the server using </p>

<pre><code>git pull origin master
</code></pre>

<p>and I still get this error:</p>

<pre><code>error: The following untracked working tree files would be removed by merge:
        db/development.sqlite3
        log/development.log
Please move or remove them before you can merge.
</code></pre>

<p>I do not want these files overwritten or deleted, I just want git to pull everything and ignore the existing files that store my database information.  How do I get past this?</p>
","0","2697793","0","0"
"59810325","10314925","2020-01-19 13:11:49","1","38","<git><gitignore>","gitignore contents of subdirectories","<p>I've have directory structure like :</p>
<pre><code>a
|-- b
|   |-- qfq.txt
|   |-- ewfw.txt
|   | ...
|
|-- c
|   |-- wgfw.txt
|   |-- wjkh.txt
|   | ...
| ...

</code></pre>
<p>I need to gitignore all txt files in <code>a/*/</code> . I  tried <code>/a/*/*.txt</code> and <code>/a/**/*.txt</code>, but they don't work.</p>
<p>Please help. Thank you.</p>
<br>
<hr>
<p>Updated :
Solved <br></p>
<p><code>/a/**/*.txt</code> works. Also, I came to know that <a href=""https://stackoverflow.com/a/14541263/10314925"">git doesn't commit empty folders</a>, not knowing which I thought the commands not working properly. <br></p>
<p>Thanks @JonathonReinhar, @phd,  pankaj for quick response.</p>
","6","10314925","",""
"59810034","12306639","2020-01-19 12:32:35","0","257","<git><heroku><flask><gitignore>","In Flask, how are you supposed to deploy to Heroku if you store production and development variables in a .gitignore file?","<p>What is the best practice for managing:</p>

<ol>
<li>That I have to use git for Heroku and therefore have to upload the configuration variables, such as database URLs</li>
<li>That these are private and I was told never to upload them to git</li>
</ol>

<p>Is it to simply: make sure the git repository is private and leave out the .gitignore file?
Or is there another way to keep a file private?</p>
","4","12306639","",""
"41088259","1501700","2016-12-11 16:18:01","0","39","<git><gitignore>","Define project_name/Debug in .gitignore","<p>I have Visual C++ project on disc:</p>

<pre><code>project_name.sln
/project_name/project_name.vcxproj
/project_name/Debug
/project_name/Release
</code></pre>

<p><code>.gitignore</code> is placed in in the same directory like <code>project_name.sln</code>. Hot to tell <code>.gitignore</code> not include <code>/project_name/Debug</code> and <code>/project_name/Release</code> in universal way - without defining <code>project_name/</code> directory? </p>
","1","1501700","",""
"3387455","78182","2010-08-02 11:54:45","4","265","<git><file><ignore><gitignore><glob>","Ignoring a directory chain in git?","<p>I need to ignore the following.</p>

<p>In paths like <code>/a/b/c/d/e/f/g</code>, I need to ignore <code>/d/e/f/g</code>. I also need to be able to ignore every place <code>/d/e/f/g</code> appears beneath <code>a</code>. I tried <code>d/e/f/g</code>, but that did not work. Thoughts?</p>
","0","78182","0","0"
"22204376","2036867","2014-03-05 17:05:47","0","225","<git><git-branch><gitignore><git-checkout>","GIT - Fail to checkout to other branch when nothing to commit - when file is in gitignore","<p>Trying to checkout to another branch </p>

<p>I have a .gitignore file with </p>

<pre><code>.someFile
</code></pre>

<p>trying to checkout to another branch fails even when i dont have any changes </p>

<pre><code>dev@cool:~/proj/source$ git status
# On branch master
nothing to commit, working directory clean
dev@cool:~/proj/source$ git checkout someBranchName 
error: Your local changes to the following files would be overwritten by checkout:
    .someFile
Please, commit your changes or stash them before you can switch branches.
Aborting
dev@cool:~/proj/source$ 
</code></pre>

<p>removing the file from .gitignore and add it again didnt help</p>

<p>running command :</p>

<pre><code>      git update-index --assume-unchanged .someFile
</code></pre>

<p>or</p>

<pre><code> git rm --cached .someFile
</code></pre>

<p>didnt help</p>

<p>any idea ?</p>
","1","2036867","",""
"41201729","1243494","2016-12-17 18:25:26","0","2925","<git><gitignore>",".gitignore adding all files in folder recursively to white list?","<p>This looks like basic, thing but I just can't find any good examples. So I have a solution that contains bin folder with DLLs inside. I want them ALL to be pushed to the repo no matter what global .gitignore says.
So  should I write in local .gitignore</p>

<pre><code>!/*.*
OR
/*.*
</code></pre>

<p>?</p>
","3","1243494","",""
"3533470","424592","2010-08-20 17:48:20","4","493","<git><commit><gitignore><git-commit>","How to forbid git commit if there are untracked files?","<p>Sometimes, it makes sense to forbid git commit when there are untracked files, because you should add them either to files to commit or gitignore. And an option like -f to force this commit is also necessary. So is there any option/plugin/etc to do that? Thank you very much.</p>
","0","424592","",""
"22219711","1046374","2014-03-06 09:08:40","0","334","<gitignore><github-api><gist>","List of all supported languages and their file extensions for .gitignore and gist","<p>Is it possible to get list of all github supported languages for gist files and projects (.gitignore)? List of .gitignore supported languages displayed on the image below on the left side. And list of all gist languages is on the right side.</p>

<p>Also it would be greatfull to get list of appropriate extensions to these languages.</p>

<p><img src=""https://i.stack.imgur.com/HPJfL.png"" alt=""List of .gitignore and gist languages""></p>
","4","1046374","",""
"59934525","12719159","2020-01-27 15:50:19","1","1224","<git><merge><gitlab><git-merge><gitignore>","How to add .gitignore while merging branches or ignore files on merging?","<p>I am about to merge my developer branch to my master on gitlab. I commited by mistake a lot of files that I didnt wanna have on my master (they are about 150 files). I have created a merge request, but havent merged the branches yet. Is there any way to not merge all these 150 files and merge only the ones I want? Is there maybe any way to add a .gitignore file while merging? I am new to git and cant really find my way around this problem.</p>

<p>Thanks in advance for your help!</p>
","0","12719159","0","0"
"22230959","398461","2014-03-06 16:55:20","1","1846","<xcode><git><gitignore>","git not ignoring folder specified by .gitignore","<p>I am using <a href=""http://goo.gl/vyNoNl"" rel=""nofollow"">the .gitignore file from here</a> but I still am still finding that</p>

<pre><code> CalFoo.xcodeproj/project.xcworkspace/xcuserdata/wcochran.xcuserdatad/UserInterfaceState.xcuserstate
</code></pre>

<p>is staged for a commit?</p>

<p>Why isn't the folder <code>xcuserdata</code> excluded?</p>
","1","398461","",""
"41220928","3672184","2016-12-19 10:49:51","2","432","<git><svn><gitignore><svnignore>","ignore .git .gitignore from svn and .svnignore .svn from git","<p><strong>Background :</strong></p>

<p>To ignore <code>.svn</code> and <code>.svnignore</code> using <code>.gitignore</code> there is no problem.
But to do so in the inverse I didn't achieve that.</p>

<p><strong>What I have tried :</strong> </p>

<pre><code>svn propset svn:ignore -R -F .svnignore .
</code></pre>

<p><strong>.svnignore</strong></p>

<pre><code>*~
*.sw[mnpcod]
*.log
*.tmp
*.tmp.*
log.txt
*.sublime-project
*.sublime-workspace

.idea/
.vscode/
.sass-cache/
.versions/
coverage/
dist/
node_modules/
tmp/
temp/
$RECYCLE.BIN/

.DS_Store
Thumbs.db
UserInterfaceState.xcuserstate

.package.tmp.json

src/themes/version.scss
scripts/e2e/webpackEntryPoints.json
scripts/build/e2e-generated-tsconfig.json
*.css.ts

# demo stuff
demos/node_modules
demos/polyfills
demos/css
demos/fonts
demos/src/**/*.js*
demos/src/**/*.ngfactory.ts
demos/src/**/*.d.ts
demos/src/**/*.metadata.json

node_modules/
platforms/

# Git files
.git
.gitignore
</code></pre>

<p><strong>Result</strong></p>

<p>Every file/directory become under version except .git</p>

<pre><code>property 'svn:ignore' set on '.'
property 'svn:ignore' set on '.idea'
property 'svn:ignore' set on '.idea/copyright'
property 'svn:ignore' set on 'hooks'
property 'svn:ignore' set on 'hooks/after_platform_add'
property 'svn:ignore' set on 'hooks/after_plugin_add'
property 'svn:ignore' set on 'hooks/after_plugin_rm'
property 'svn:ignore' set on 'hooks/after_prepare'
property 'svn:ignore' set on 'hooks/before_platform_add'
property 'svn:ignore' set on 'node_modules'
property 'svn:ignore' set on 'node_modules/.bin'
property 'svn:ignore' set on 'node_modules/abbrev'
property 'svn:ignore' set on 'node_modules/sparkles'
property 'svn:ignore' set on 'node_modules/spdx-correct'
property 'svn:ignore' set on 'node_modules/spdx-expression-parse'
property 'svn:ignore' set on 'node_modules/spdx-license-ids'
property 'svn:ignore' set on 'node_modules/sshpk'
property 'svn:ignore' set on 'node_modules/sshpk/bin'
property 'svn:ignore' set on 'node_modules/sshpk/lib'
property 'svn:ignore' set on 'node_modules/sshpk/lib/formats'
property 'svn:ignore' set on 'node_modules/sshpk/man'
property 'svn:ignore' set on 'node_modules/sshpk/man/man1'
property 'svn:ignore' set on 'node_modules/sshpk/node_modules'
property 'svn:ignore' set on 'node_modules/sshpk/node_modules/assert-plus'
property 'svn:ignore' set on 'node_modules/stream-consume'
property 'svn:ignore' set on 'node_modules/stream-consume/test'
property 'svn:ignore' set on 'node_modules/string-width'
property 'svn:ignore' set on 'node_modules/string_decoder'
property 'svn:ignore' set on 'node_modules/stringstream'
property 'svn:ignore' set on 'node_modules/strip-ansi'
property 'svn:ignore' set on 'node_modules/strip-bom'
property 'svn:ignore' set on 'node_modules/strip-indent'
property 'svn:ignore' set on 'node_modules/supports-color'
property 'svn:ignore' set on 'node_modules/tar'
property 'svn:ignore' set on 'node_modules/tar/examples'
property 'svn:ignore' set on 'node_modules/tar/lib'
property 'svn:ignore' set on 'node_modules/tar/test'
property 'svn:ignore' set on 'node_modules/through2'
property 'svn:ignore' set on 'node_modules/user-home'
property 'svn:ignore' set on 'node_modules/vinyl'
property 'svn:ignore' set on 'node_modules/vinyl/lib'
property 'svn:ignore' set on 'node_modules/vinyl/test'
property 'svn:ignore' set on 'node_modules/vinyl-fs'
property 'svn:ignore' set on 'node_modules/vinyl-fs/lib'
property 'svn:ignore' set on 'node_modules/vinyl-fs/lib/dest'
property 'svn:ignore' set on 'node_modules/vinyl-fs/lib/dest/writeContents'
property 'svn:ignore' set on 'node_modules/vinyl-fs/lib/src'
property 'svn:ignore' set on 'node_modules/vinyl-fs/lib/src/getContents'
property 'svn:ignore' set on 'node_modules/vinyl-fs/node_modules'
property 'svn:ignore' set on 'node_modules/vinyl-fs/node_modules/.bin'
property 'svn:ignore' set on 'node_modules/vinyl-fs/node_modules/clone'
property 'svn:ignore' set on 'node_modules/vinyl-fs/node_modules/graceful-fs'
property 'svn:ignore' set on 'node_modules/vinyl-fs/node_modules/graceful-fs/test'
property 'svn:ignore' set on 'node_modules/vinyl-fs/node_modules/readable-stream'
property 'svn:ignore' set on 'node_modules/vinyl-fs/node_modules/readable-stream/lib'
property 'svn:ignore' set on 'node_modules/vinyl-fs/node_modules/strip-bom'
property 'svn:ignore' set on 'node_modules/vinyl-fs/node_modules/through2'
property 'svn:ignore' set on 'node_modules/vinyl-fs/node_modules/vinyl'
property 'svn:ignore' set on 'node_modules/xtend'
property 'svn:ignore' set on 'node_modules/y18n'
property 'svn:ignore' set on 'node_modules/yallist'
property 'svn:ignore' set on 'node_modules/yallist/test'
property 'svn:ignore' set on 'node_modules/yargs'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/doc'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/doc/de'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/doc/es'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/doc/fr'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/doc/it'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/doc/ja'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/doc/ko'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/doc/pl'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/doc/ru'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/doc/zh'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/src'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/src/android'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/src/blackberry10'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/src/blackberry10/native'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/src/blackberry10/native/device'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/src/blackberry10/native/public'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/src/blackberry10/native/public/json'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/src/blackberry10/native/simulator'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/src/blackberry10/native/src'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/src/browser'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/src/firefoxos'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/src/ios'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/src/tizen'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/src/ubuntu'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/src/windows'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/src/windows/GlobalizationProxy'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/src/windows/GlobalizationProxy/GlobalizationProxy'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/src/windows/GlobalizationProxy/GlobalizationProxy/Cordova'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/src/windows/GlobalizationProxy/GlobalizationProxy/Cordova/JSON'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/src/windows/GlobalizationProxy/GlobalizationProxy/Globalization'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/src/windows/GlobalizationProxy/GlobalizationProxy/Properties'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/src/wp'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/tests'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/www'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/www/browser'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/www/firefoxos'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/www/firefoxos/locales'
property 'svn:ignore' set on 'plugins/cordova-plugin-globalization/www/ubuntu'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/doc'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/doc/de'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/doc/es'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/doc/fr'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/doc/it'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/doc/ja'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/doc/ko'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/doc/pl'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/doc/ru'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/doc/zh'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/src'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/src/android'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/src/blackberry10'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/src/browser'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/src/ios'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/src/tizen'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/src/ubuntu'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/src/wp'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/tests'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/tests/ios'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/tests/ios/CDVSplashScreenTest'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/tests/ios/CDVSplashScreenTest/CDVSplashScreenLibTests'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/tests/ios/CDVSplashScreenTest/CDVSplashScreenTest.xcodeproj'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/tests/ios/CDVSplashScreenTest/CDVSplashScreenTest.xcodeproj/project.xcworkspace'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/tests/ios/CDVSplashScreenTest/CDVSplashScreenTest.xcodeproj/project.xcworkspace/xcshareddata'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/tests/ios/CDVSplashScreenTest/CDVSplashScreenTest.xcodeproj/xcshareddata'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/tests/ios/CDVSplashScreenTest/CDVSplashScreenTest.xcodeproj/xcshareddata/xcschemes'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/tests/ios/CDVSplashScreenTest.xcworkspace'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/tests/ios/CDVSplashScreenTest.xcworkspace/xcshareddata'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/tests/ios/CDVSplashScreenTest.xcworkspace/xcshareddata/xcschemes'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/tests/ios/doc'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/tests/ios/doc/de'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/tests/ios/doc/es'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/tests/ios/doc/fr'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/tests/ios/doc/it'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/tests/ios/doc/ja'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/tests/ios/doc/ko'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/tests/ios/doc/pl'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/tests/ios/doc/zh'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/www'
property 'svn:ignore' set on 'plugins/cordova-plugin-splashscreen/www/windows'
property 'svn:ignore' set on 'plugins/cordova-plugin-statusbar'
property 'svn:ignore' set on 'plugins/cordova-plugin-statusbar/doc'
property 'svn:ignore' set on 'plugins/cordova-plugin-statusbar/doc/de'
property 'svn:ignore' set on 'plugins/cordova-plugin-statusbar/doc/es'
property 'svn:ignore' set on 'plugins/cordova-plugin-statusbar/doc/fr'
property 'svn:ignore' set on 'plugins/cordova-plugin-statusbar/doc/it'
property 'svn:ignore' set on 'plugins/cordova-plugin-statusbar/doc/ja'
property 'svn:ignore' set on 'plugins/cordova-plugin-statusbar/doc/ko'
property 'svn:ignore' set on 'plugins/cordova-plugin-statusbar/doc/pl'
property 'svn:ignore' set on 'plugins/cordova-plugin-statusbar/doc/ru'
property 'svn:ignore' set on 'plugins/cordova-plugin-statusbar/doc/zh'
property 'svn:ignore' set on 'plugins/cordova-plugin-statusbar/src'
property 'svn:ignore' set on 'plugins/cordova-plugin-statusbar/src/android'
property 'svn:ignore' set on 'plugins/cordova-plugin-statusbar/src/browser'
property 'svn:ignore' set on 'plugins/cordova-plugin-statusbar/src/ios'
property 'svn:ignore' set on 'plugins/cordova-plugin-statusbar/src/windows'
property 'svn:ignore' set on 'plugins/cordova-plugin-statusbar/src/wp'
property 'svn:ignore' set on 'plugins/cordova-plugin-statusbar/tests'
property 'svn:ignore' set on 'plugins/cordova-plugin-statusbar/www'
property 'svn:ignore' set on 'plugins/cordova-plugin-whitelist'
property 'svn:ignore' set on 'plugins/cordova-plugin-whitelist/doc'
property 'svn:ignore' set on 'plugins/cordova-plugin-whitelist/doc/de'
property 'svn:ignore' set on 'plugins/cordova-plugin-whitelist/doc/es'
property 'svn:ignore' set on 'plugins/cordova-plugin-whitelist/doc/fr'
property 'svn:ignore' set on 'plugins/cordova-plugin-whitelist/doc/it'
property 'svn:ignore' set on 'plugins/cordova-plugin-whitelist/doc/ja'
property 'svn:ignore' set on 'plugins/cordova-plugin-whitelist/doc/ko'
property 'svn:ignore' set on 'plugins/cordova-plugin-whitelist/doc/pl'
property 'svn:ignore' set on 'plugins/cordova-plugin-whitelist/doc/zh'
property 'svn:ignore' set on 'plugins/cordova-plugin-whitelist/src'
property 'svn:ignore' set on 'plugins/cordova-plugin-whitelist/src/android'
property 'svn:ignore' set on 'plugins/cordova-plugin-x-toast'
property 'svn:ignore' set on 'plugins/cordova-plugin-x-toast/screenshots'
property 'svn:ignore' set on 'plugins/cordova-plugin-x-toast/src'
property 'svn:ignore' set on 'plugins/cordova-plugin-x-toast/src/android'
property 'svn:ignore' set on 'plugins/cordova-plugin-x-toast/src/android/nl'
property 'svn:ignore' set on 'plugins/cordova-plugin-x-toast/src/android/nl/xservices'
property 'svn:ignore' set on 'plugins/cordova-plugin-x-toast/src/android/nl/xservices/plugins'
property 'svn:ignore' set on 'plugins/cordova-plugin-x-toast/src/blackberry10'
property 'svn:ignore' set on 'plugins/cordova-plugin-x-toast/src/blackberry10/native'
property 'svn:ignore' set on 'plugins/cordova-plugin-x-toast/src/blackberry10/native/device'
property 'svn:ignore' set on 'plugins/cordova-plugin-x-toast/src/blackberry10/native/device/public'
property 'svn:ignore' set on 'plugins/cordova-plugin-x-toast/src/blackberry10/native/device/src'
property 'svn:ignore' set on 'plugins/cordova-plugin-x-toast/src/blackberry10/native/public'
property 'svn:ignore' set on 'plugins/cordova-plugin-x-toast/src/blackberry10/native/public/json'
property 'svn:ignore' set on 'plugins/cordova-plugin-x-toast/src/blackberry10/native/simulator'
property 'svn:ignore' set on 'plugins/cordova-plugin-x-toast/src/blackberry10/native/simulator/public'
property 'svn:ignore' set on 'plugins/cordova-plugin-x-toast/src/blackberry10/native/simulator/src'
property 'svn:ignore' set on 'plugins/cordova-plugin-x-toast/src/blackberry10/native/src'
property 'svn:ignore' set on 'plugins/cordova-plugin-x-toast/src/ios'
property 'svn:ignore' set on 'plugins/cordova-plugin-x-toast/src/wp8'
property 'svn:ignore' set on 'plugins/cordova-plugin-x-toast/test'
property 'svn:ignore' set on 'plugins/cordova-plugin-x-toast/www'
property 'svn:ignore' set on 'plugins/de.appplant.cordova.plugin.local-notification'
property 'svn:ignore' set on 'plugins/de.appplant.cordova.plugin.local-notification/src'
property 'svn:ignore' set on 'plugins/de.appplant.cordova.plugin.local-notification/src/android'
property 'svn:ignore' set on 'plugins/de.appplant.cordova.plugin.local-notification/src/android/notification'
property 'svn:ignore' set on 'plugins/de.appplant.cordova.plugin.local-notification/src/ios'
property 'svn:ignore' set on 'plugins/de.appplant.cordova.plugin.local-notification/src/windows'
property 'svn:ignore' set on 'plugins/de.appplant.cordova.plugin.local-notification/www'
property 'svn:ignore' set on 'plugins/ionic-plugin-keyboard'
property 'svn:ignore' set on 'plugins/ionic-plugin-keyboard/src'
property 'svn:ignore' set on 'plugins/ionic-plugin-keyboard/src/android'
property 'svn:ignore' set on 'plugins/ionic-plugin-keyboard/src/blackberry10'
property 'svn:ignore' set on 'plugins/ionic-plugin-keyboard/src/blackberry10/native'
property 'svn:ignore' set on 'plugins/ionic-plugin-keyboard/src/blackberry10/native/device'
property 'svn:ignore' set on 'plugins/ionic-plugin-keyboard/src/blackberry10/native/device/public'
property 'svn:ignore' set on 'plugins/ionic-plugin-keyboard/src/blackberry10/native/device/src'
property 'svn:ignore' set on 'plugins/ionic-plugin-keyboard/src/blackberry10/native/public'
property 'svn:ignore' set on 'plugins/ionic-plugin-keyboard/src/blackberry10/native/public/json'
property 'svn:ignore' set on 'plugins/ionic-plugin-keyboard/src/blackberry10/native/simulator'
property 'svn:ignore' set on 'plugins/ionic-plugin-keyboard/src/blackberry10/native/simulator/public'
property 'svn:ignore' set on 'plugins/ionic-plugin-keyboard/src/blackberry10/native/simulator/src'
property 'svn:ignore' set on 'plugins/ionic-plugin-keyboard/src/blackberry10/native/src'
property 'svn:ignore' set on 'plugins/ionic-plugin-keyboard/src/ios'
property 'svn:ignore' set on 'plugins/ionic-plugin-keyboard/src/windows'
property 'svn:ignore' set on 'plugins/ionic-plugin-keyboard/www'
property 'svn:ignore' set on 'plugins/ionic-plugin-keyboard/www/android'
property 'svn:ignore' set on 'plugins/ionic-plugin-keyboard/www/browser'
property 'svn:ignore' set on 'plugins/ionic-plugin-keyboard/www/ios'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/docs'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/example'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/example/server'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/hooks'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/hooks/windows'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/spec'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/spec/helper'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/android'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/android/com'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/android/com/adobe'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/android/com/adobe/phonegap'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/android/com/adobe/phonegap/push'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/browser'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/GGLInstanceID'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/GGLInstanceID/Headers'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/GGLInstanceID/Headers/Public'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/GGLInstanceID/Libraries'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/Google'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/Google/Headers'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/Google/Headers/GGLCloudMessaging'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/Google/Headers/GGLCloudMessaging/Public'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/Google/Headers/GGLCore'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/Google/Headers/GGLCore/Public'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/Google/Headers/ModuleHeaders'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/Google/Libraries'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/GoogleCloudMessaging'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/GoogleCloudMessaging/Headers'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/GoogleCloudMessaging/Headers/Public'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/GoogleCloudMessaging/Libraries'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/GoogleIPhoneUtilities'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/GoogleIPhoneUtilities/Libraries'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/GoogleInterchangeUtilities'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/GoogleInterchangeUtilities/Libraries'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/GoogleNetworkingUtilities'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/GoogleNetworkingUtilities/Libraries'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/GoogleSymbolUtilities'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/GoogleSymbolUtilities/Libraries'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/GoogleUtilities'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/ios/GoogleUtilities/Libraries'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/src/windows'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/www'
property 'svn:ignore' set on 'plugins/phonegap-plugin-push/www/browser'
property 'svn:ignore' set on 'resources'
property 'svn:ignore' set on 'resources/android'
property 'svn:ignore' set on 'resources/android/icon'
property 'svn:ignore' set on 'resources/android/splash'
property 'svn:ignore' set on 'resources/ios'
property 'svn:ignore' set on 'resources/ios/icon'
property 'svn:ignore' set on 'resources/ios/splash'
property 'svn:ignore' set on 'rest'
property 'svn:ignore' set on 'scss'
property 'svn:ignore' set on 'www'
property 'svn:ignore' set on 'www/app'
property 'svn:ignore' set on 'www/app/XXX'
property 'svn:ignore' set on 'www/app/XX/YY'
property 'svn:ignore' set on 'www/app/XXXX'
property 'svn:ignore' set on 'www/app/XXX/YY'
property 'svn:ignore' set on 'www/app/BB'
property 'svn:ignore' set on 'www/app/home'
property 'svn:ignore' set on 'www/app/WWW'
property 'svn:ignore' set on 'www/app/WWW/YY'
property 'svn:ignore' set on 'www/app/login'
property 'svn:ignore' set on 'www/app/login/searchLogin'
property 'svn:ignore' set on 'www/app/model'
property 'svn:ignore' set on 'www/app/model/local'
property 'svn:ignore' set on 'www/app/profil'
property 'svn:ignore' set on 'www/app/push'
property 'svn:ignore' set on 'www/app/services'
property 'svn:ignore' set on 'www/app/services/dataJson'
property 'svn:ignore' set on 'www/app/services/rest'
property 'svn:ignore' set on 'www/app/start'
property 'svn:ignore' set on 'www/css'
property 'svn:ignore' set on 'www/dataJson'
property 'svn:ignore' set on 'www/img'
property 'svn:ignore' set on 'www/js'
property 'svn:ignore' set on 'www/js/services'
property 'svn:ignore' set on 'www/js/services/img'
property 'svn:ignore' set on 'www/lib'
property 'svn:ignore' set on 'www/lib/angular'
property 'svn:ignore' set on 'www/lib/angular-animate'
property 'svn:ignore' set on 'www/lib/angular-resource'
property 'svn:ignore' set on 'www/lib/angular-sanitize'
property 'svn:ignore' set on 'www/lib/angular-translate'
property 'svn:ignore' set on 'www/lib/angular-translate-loader-static-files'
property 'svn:ignore' set on 'www/lib/angular-ui-router'
property 'svn:ignore' set on 'www/lib/angular-ui-router/api'
property 'svn:ignore' set on 'www/lib/angular-ui-router/release'
property 'svn:ignore' set on 'www/lib/angular-ui-router/src'
property 'svn:ignore' set on 'www/lib/ionic'
property 'svn:ignore' set on 'www/lib/ionic/css'
property 'svn:ignore' set on 'www/lib/ionic/fonts'
property 'svn:ignore' set on 'www/lib/ionic/js'
property 'svn:ignore' set on 'www/lib/ionic/js/angular'
property 'svn:ignore' set on 'www/lib/ionic/js/angular-ui'
property 'svn:ignore' set on 'www/lib/ionic/scss'
property 'svn:ignore' set on 'www/lib/ionic/scss/ionicons'
property 'svn:ignore' set on 'www/lib/ngCordova'
property 'svn:ignore' set on 'www/lib/ngCordova/dist'
property 'svn:ignore' set on 'www/login'
property 'svn:ignore' set on 'www/login/searchLogin'
property 'svn:ignore' set on 'www/templates'
property 'svn:ignore' set on 'www/translations'
</code></pre>
","0","3672184","",""
"3551569","82322","2010-08-23 20:47:56","3","855","<git><gitignore>","Limit depth of .gitignore","<p>For various reasons, I have the entry in my <code>.gitignore</code> in the root of a project: </p>

<pre><code> *.c
</code></pre>

<p>As I desire, this ignores all C files from being included. However, I really only want the C files to only be ignored in the root directory, and not all the sub-directories:</p>

<pre><code> foo.c
 bar.c
 folder/baz.c
</code></pre>

<p>In the above scheme, I only want foo.c and bar.c ignored. I do not want this gitignore rule to work recursively. How do I do this?</p>

<p>I'm aware of being able to negate the rule with <code>!*.c</code>, but I'd rather not do that for every subdirectory. (This is what I am currently doing).</p>
","0","82322","0","0"
"22364827","928171","2014-03-12 22:00:57","0","138","<git><gitignore><google-chrome-app>","Mobile Chrome App .gitignore","<p>While developing a Mobile Chrome App, which files should I include in .gitignore? Maybe both build directories for Android and iOS platforms?</p>

<p>I know that I shouldn't include binaries in git, but I don't know which files in the build folder I can ignore. </p>

<p>Thanks! </p>
","0","928171","",""
"41463221","575530","2017-01-04 11:55:43","0","125","<git><visual-studio><gitignore>","Why don't the build result directories start ** in VS .gitignore","<p>There's a standard Visual Studio .gitignore file available <a href=""https://github.com/github/gitignore/blob/master/VisualStudio.gitignore"" rel=""nofollow noreferrer"">here</a>.</p>

<p>It includes this section:</p>

<pre><code># Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/
</code></pre>

<p>Why don't those lines start with the <a href=""https://git-scm.com/docs/gitignore"" rel=""nofollow noreferrer"">gitignore pattern format</a> <code>**/</code> so that the search includes all subdirectories?</p>
","0","575530","",""
"41463063","366064","2017-01-04 11:47:27","2","1088","<git><unity-game-engine><gitignore>","How to ignore one file in gitignore while unignoring its parent folder","<p>I want to ignore everything in my project except for</p>

<ol>
<li><em>.gitignore</em> file</li>
<li><em>Assets</em> folder</li>
<li><em>ProjectSettings</em> folder</li>
</ol>

<p>Additionally I want to ignore one file <em>ProjectSettings/ProjectSettings.asset</em></p>

<hr>

<p>I searched around and wrote this in my gitignore file:</p>

<pre><code># Ignore Everything
/*

# Except for these:
!/.gitignore
!/Assets
!/ProjectSettings

# Ignore just ProjectSettings
!/ProjectSettings/*
/ProjectSettings/ProjectSettings.asset
</code></pre>

<hr>

<p>The problem is it is still including <em>ProjectSettings/ProjectSettings.asset</em> in my commits. How can I ignore this file while un-ignoring its parent folder?</p>
","3","366064","0","0"
"60184159","10059226","2020-02-12 08:35:52","60","36261","<git><yarnpkg><gitignore><yarnpkg-v2>","Yarn v2 gitignore","<p>I upgraded yarn from v1.22.0 to v2.0.0-rc.29. It generated <em>.yarn</em> folder with:</p>
<ul>
<li>folders: <em>cache</em>, <em>releases</em>, <em>unplugged</em></li>
<li>files: <em>build-state.yml</em></li>
</ul>
<p>Should I add whole .yarn folder to <em>.gitignore</em>? Or maybe some nested folders in there like <em>.yarn/cache</em>?</p>
<p>Also, what to do with <em>.pnp.js</em>. Do I commit it, or add to <em>.gitignore</em></p>
","0","10059226","0","0"
"22498891","1785501","2014-03-19 07:19:17","2","114","<ios><git><configuration><build><gitignore>","iOS schemes/build configurations and git","<p>I have created two additional schemes to my iOS project, and two build configurations. When I push the changes to my remote github repository the schemes and build configurations are not added. Should I refactor my gitignore file?</p>
","1","1785501","",""
"3876168","237016","2010-10-06 19:28:48","9","4940","<git><gitignore>","How can I write a rule in gitignore to ignore all files except directories in some directory?","<p>So lets say I have a directory structure like so</p>

<pre><code>uploads/
--dir1/
----one.txt
----two.txt
----dir2/
------one.txt
------two.txt
</code></pre>

<p>I would like any directory and sub directories of uploads to be tracked but not any files in it with the exception of a dummy file because git doesn't track directories.  </p>

<p>I would think something like this would work but it doesn't.</p>

<pre><code>*
!.gitignore
</code></pre>
","0","237016","0","0"
"60307495","959460","2020-02-19 19:03:51","0","193","<git><gitignore>","gitignore all files with extension pattern","<p>I have seen a number of SO articles on doing this, but the below is not working for me:</p>

<pre><code>/src/client/*.bs.js
</code></pre>

<p>I would not mind if the pattern was</p>

<pre><code>**/*.bs.js

</code></pre>

<p>But that also does not work.</p>

<p>I am using VSCODE with Git for Windows.</p>
","7","959460","",""
"41593375","2871542","2017-01-11 14:24:05","-1","238","<git><apache><.htaccess><gitignore>","What is the usual approach, should we skip .htaccess file from git repository","<p>Should we add .htaccess file in .gitignore, how we manage this file?</p>
","1","2871542","0","0"
"4035779","116859","2010-10-27 17:08:59","85","30144","<git><configuration><blob><gitignore><large-files>","gitignore by file size?","<p>I'm trying to implement Git to manage creative assets (Photoshop, Illustrator, Maya, etc.), and I'd like to exclude files from Git based on file size rather than extension, location, etc.</p>

<p>For example, I don't want to exclude all .avi files, but there are a handful of massive +1GB avi files in random directories that I don't want to commit. </p>

<p>Any suggestions?</p>
","8","116859","0","0"
"60310802","491894","2020-02-19 23:26:47","7","331","<git><gitignore>","Is there a simple way to show .gitignore rules that are not matched by any file in the directory tree?","<p>I need to clean up my .gitignore file. I run some commands and then go through the .gitignore file and delete any line that isn't needed anymore.</p>

<p>The command finds all files in a tree, runs git's check-ignore, greps out only matches that are in my .gitignore file, cleans up the line, and then uniquely sorts the results. Any rule that doesn't appear in this output is a candidate for removal.</p>

<pre><code>find . -type f -not -path .git -exec git check-ignore -v '{}' \; | grep '^.gitignore:' | sed 's/.*:\(.*\)\t.*$/\1/' | sort -u &gt;&gt; .gitignore
</code></pre>

<p>This command can take quite some time, especially in repositories with a lot of files and mounted on an NFS.</p>

<p>Is there a simpler method that will show me rules that are not matched by any file in the tree?</p>
","4","491894","",""
"60330359","10050942","2020-02-21 00:06:46","1","26","<git><gitignore>","Get a list of all gitignore files in my current branch, unrelated to their tracking or modification state","<p>I asked this question already again, but it was closed prematurely, since the given link did not answer my question as explained. I have a Git repo and would like to get a list of files, which are ignored by Git in my current branch, and those which are not, unrelated to if they are tracked, or not, or what their state is.</p>

<p>I found <code>git-check-ignore</code>, but my repository has a few thousand files, and checking it on a per file basis takes simply too long to spawn a process for each file.</p>

<pre><code>git check-ignore /file/to/foo
</code></pre>

<p>Does Git have another command that allows me to get a list of files which are ignored by git?</p>
","3","10050942","",""
"60331709","10050942","2020-02-21 03:16:57","1","100","<git><gitignore>","gitignore doesn't ignore files in subdirectories","<p>I am new to git and try to understand <code>gitignore</code>. So far I have a directory I want to exclude called <code>build</code>, <strong>except</strong> files with the name <code>BUILD</code>. </p>

<pre><code>build/**
!build/**/BUILD
</code></pre>

<p>But it seems the BUILD file is excluded as well. Does anyone know what I am doing wrong?</p>

<pre><code>resource/obj1/BUILD
resource/obj2/BUILD
resource/obj3/BUILD
</code></pre>
","9","10050942","0","0"
"41625534","1136709","2017-01-13 00:31:04","2","277","<git><gitignore>",".gitignore ignoring a file even though no rules specify it","<p>This is my <code>.gitignore</code> file:</p>

<pre><code>smarty/templates_c
config.codekit
components/**/styles/
components/**/js/
!components/root/js-dev/plugin/select2-4.0.3/dist/js/
!components/root/js-dev/plugin/chartjs/
.sass-cache/
/node_modules/
/dbv-parkrooau/
/pma-parkrooau/
count.php
</code></pre>

<p>Hence, if I make a change inside of <code>components/foo/js-dev/main.js</code>, then <code>.gitignore</code> will track its change, and include it in my repository; this is fine.</p>

<p>However, I have a file located at <code>components/theygo/js-dev/shoppingcart.js</code> - <code>.gitignore</code> does <strong>not</strong> track changes to this file, for a reason that is beyond me. <code>components/theygo/js-dev/main.js</code> works fine, as does <code>components/root/js-dev/main.js</code>, as does every other JavaScript file I've created so far - just this one file, and I'm not sure why.</p>

<p>If I remove <code>components/**/js/</code> from my <code>.gitignore</code>, it tracks the file, but also tracks all files in the <code>js</code> subdirectory, inside of any directory inside of <code>components</code>.</p>

<p>If I add in this line:</p>

<pre><code>!components/theygo/js-dev/shoppingcart.js
</code></pre>

<p>It tracks the file correctly.</p>

<p>Can someone explain why this is happening, and what I can do to best fix this, rather than adding in a dirty inclusion statement?</p>
","5","1136709","",""
"60426770","11106650","2020-02-27 05:28:24","1","1881","<git><gitignore>","How do I gitignore a word document?","<p>For example, I have a word document titled <code>results.docx</code> inside of the directory <code>research</code>. How would I gitignore this word document from the <code>research</code> directory?</p>
","1","11106650","",""
"41739819","4101921","2017-01-19 10:44:18","0","26","<git><gitignore><sourcetree>","Git - Editing /git/info/exclude has no effect for SourceTree","<p>I have a config file that contains settings of our project for my local machine, so i shouldn't push this config on remote, but should track changes of it's structure from remote (i guess i would merge that changes to my config when the time comes). 
So my options are: </p>

<ol>
<li>Add it to ignore, but it modifies a <code>.gitignore</code> file and i can't
push it to remote because everyone should track changes. </li>
<li>Add it to exclude file. I did. And SourceTree still shows it as modified!</li>
<li>Just let the file be modified. Sore on an eye and i risk accidentally commit it somewhere.</li>
</ol>

<p>I really like 2nd solution, but it doesn't work! </p>

<ul>
<li>Q1: Am i wrong somewhere?  </li>
<li>Q2: Why SourceTree works that way?</li>
</ul>
","6","4101921","",""
"41747127","2718180","2017-01-19 16:40:44","0","352","<ruby-on-rails><git><github><gitignore><delete-file>","Why do I get an Large File Warning from Github for a file that i have listed in gitignore?","<p>Without really thinking about it, I've been committing and then pushing to my Github repository the images I am using in development. </p>

<p>After discovering that this was causing issues that prevented me from pushing my project to my branch, I searched for a solution to remove those images from my repository then add those images to my gitignore file. </p>

<p>I found several solutions: <a href=""https://stackoverflow.com/questions/1143796/remove-a-file-from-a-git-repository-without-deleting-it-from-the-local-filesyste"">StackOverflow</a>, <a href=""http://www.gpickin.com/index.cfm/blog/git-for-dummies-using-gitignore-files-to-exclude-certain-files-and-folders"" rel=""nofollow noreferrer"">this blog</a>, <a href=""https://git-scm.com/docs/gitignore"" rel=""nofollow noreferrer"">git</a> and a few others. They all seemed to be pushing me the same way:</p>

<pre><code>git rm --cached -r /public/uploads/image/file/** 
</code></pre>

<p>I've run a few variations of this code, like dropping <code>**</code>, <code>file/**</code>, <code>--cached</code>, and <code>image/file/**</code>, but it doesn't change the fact that I can still see the files on my GitHub branch.</p>

<p>Also I've added this to my gitignore file: <code>/public/uploads/image/file/**</code></p>

<p>But when I push to the repository branch I get this info telling me why I can't push to Github:</p>

<p>I started from <code>git add .</code> for context.</p>

<pre><code>ruby 2.3.3-p222
╳  project_name categories ◆ git add .                                                               

ruby 2.3.3-p222
╳  project_name categories ◆ git commit -m ""trying to get a commit in after purging development environment image data""
[categories 8c13b0a] trying to get a commit in after purging development environment image data
 1 file changed, 1 insertion(+), 3 deletions(-)

ruby 2.3.3-p222
╳  project_name categories  git push origin categories                                               
Counting objects: 3840, done.
Delta compression using up to 8 threads.
Compressing objects: 100% (3664/3664), done.
Writing objects: 100% (3672/3672), 163.83 MiB | 3.98 MiB/s, done.
Total 3672 (delta 1242), reused 0 (delta 0)
remote: Resolving deltas: 100% (1242/1242), completed with 57 local objects.
remote: error: GH001: Large files detected. You may want to try Git Large File Storage - https://git-lfs.github.com.
remote: error: Trace: 85ba931580b369a222fcf5903416f84e
remote: error: See http://git.io/iEPt8g for more information.
remote: error: File public/uploads/image/file/30/show_55MiEk4_-_Imgur.gif is 119.49 MB; this exceeds GitHub's file size limit of 100.00 MB
To git@github.com:Lenocam/project_name.git
 ! [remote rejected] categories -&gt; categories (pre-receive hook declined)
error: failed to push some refs to 'git@github.com:Lenocam/project_name.git'
</code></pre>

<p>So, now I'm confused because doesn't adding <code>/public/uploads/image/file/**</code> to my gitignore file tell git to ignore the folder and the files inside of it? Why does the file continue to be pushed to my repository?</p>

<p>It seems to me I've asked git/Github to get rid of those old files(through the terminal command) and completely forget they ever existed so they will stop asking me about them(through gitignore).</p>

<p>I assume I've done something out of order or otherwise incorrectly. Any assistance you're able to give me will be appreciated.</p>
","0","2718180","",""
"57602939","","2019-08-22 06:06:40","0","17","<gitignore><ignore>","ignoring subdirectories using gitignore and ignore files in general","<p>Say I want to ignore node_modules, but also node_modules for subdirectories:</p>

<pre><code>project/
   node_modules
   bar/
     node_modules
   foo/
     node_modules
   baz/
     node_modules
   .gitignore
</code></pre>

<p>what do I need to put in my .gitignore file too ignore all node_modules folders?</p>
","0","","",""
"57659893","6703783","2019-08-26 14:28:46","0","135","<git><intellij-idea><gitignore>","how to include only one file and ignore the rest of the directory in git","<p>I use <code>IntelliJ</code> IDE for development. In the <code>.idea</code> folder, there is a <code>workspace.xml</code> file which I want to version control. I don't want to version control the rest of the folder. </p>

<p>I have added the following rule in <code>.gitignore</code> but I still can't get to version control the file.</p>

<p>The rule I am using is <code>!code_relate/code/frontend/web/.idea/workspace.xml</code></p>

<p>The <code>.gitignore</code> file is</p>

<pre><code>#ignore files for web project - codingjedi\code_related\code\frontend\web

code_related/code/frontend/common/javascripts/vendor/jquery/jquery*.js
code_related/code/frontend/common/javascripts/vendor/jquery/jquery*.map
code_related/code/frontend/common/javascripts/vendor/bootstrap/bootstrap*.map
code_related/code/frontend/common/javascripts/vendor/bootstrap/bootstrap*.js
code_related/code/frontend/common/javascripts/vendor/bootstrap/popper*.js
code_related/code/frontend/common/css/vendor/bootstrap/bootstrap*.map
code_related/code/frontend/common/css/vendor/bootstrap/bootstrap*.css
code_related/code/frontend/common/javascripts/vendor/popper/umd/popper*.js
code_related/code/frontend/common/javascripts/vendor/popper/umd/popper*.map
code_related/code/frontend/web/ui/.gitignore
code_related/code/frontend/web/ui/.editorconfig
logs
project
target
tmp
.history
dist
.idea
*.iml
out
.idea_modules
.classpath
.project
RUNNING_PID
.settings
public
dist-server
out-tsc
node_modules

.c9
*.launch
*.sublime-workspace

# misc
.sass-cache
connect.lock
coverage
libpeerconnection.log
npm-debug.log
testem.log
typings

# e2e
code_related/code/frontend/web/ui/e2e/*.js
code_related/code/frontend/web/ui/e2e/*.map

# System Files
.DS_Store
Thumbs.db

#MS temp generated files for xls, doc etc.
~$*

#include these files though
!code_relate/code/frontend/web/.idea/workspace.xml
</code></pre>
","2","6703783","",""
"19655622","1241400","2013-10-29 10:30:16","30","5976","<visual-studio-2010><git><connection-string><gitignore>","Best practice with .gitignore for connection strings inside App.config or Web.config","<p>I've tried several approaches with <code>*.gitignore</code> for managing connection strings when working on a larger team.</p>

<p>From the official repository of <code>.gitignore</code> files at <a href=""https://github.com/github/gitignore"" rel=""noreferrer"">gitignore</a>, I've downloaded <a href=""https://github.com/github/gitignore/blob/master/VisualStudio.gitignore"" rel=""noreferrer"">VisualStudio.gitignore</a> and used it as a starting point for all the projects.</p>

<p>The same process can be done by visiting <a href=""http://gitignore.io/"" rel=""noreferrer"">http://gitignore.io/</a>, typing VisualStudio, then downloading the file.</p>

<p><img src=""https://i.stack.imgur.com/dCsEN.jpg"" alt=""enter image description here""></p>

<p>The approach I currently use is by leveraging the <a href=""http://msdn.microsoft.com/en-us/library/system.configuration.sectioninformation.configsource.aspx"" rel=""noreferrer"">SectionInformation.ConfigSource Property</a></p>

<pre><code>&lt;connectionStrings configSource=""myConnectionStrings.config"" /&gt;
</code></pre>

<p>and then adding <strong>myConnectionStrings.config</strong> to <code>.gitignore</code>, which is nice because it doesn't add the entire <code>*.config</code>.</p>

<p>Also you can use the same <strong>myConnectionStrings.config</strong> inside another project (your <strong>MyProject.Data</strong> layer)</p>

<pre><code>&lt;configuration&gt;
  &lt;connectionStrings configSource=""myConnectionStrings.config""/&gt;
&lt;/configuration&gt;
</code></pre>

<p>Just remember to set <strong>Copy always</strong>!</p>

<p><img src=""https://i.stack.imgur.com/ANJad.jpg"" alt=""enter image description here""></p>

<p>Also I've tried using <a href=""https://www.kernel.org/pub/software/scm/git/docs/gitattributes.html#_tt_filter_tt"" rel=""noreferrer""><strong>filters</strong> </a> as described at <a href=""https://stackoverflow.com/questions/15150317/git-ignoring-a-specific-modification-to-a-config-file"">Git - Ignoring a specific modification to a config file</a>, but I find that to be an overkill.</p>

<p>I wonder if there is any other approach that is considered a best practice?</p>
","8","1241400","0","0"
"19674184","1448031","2013-10-30 04:57:12","0","198","<git><gitignore>","How to redo git push with a new modified .gitignore file?","<p>I did <code>git push</code> and realised my .gitignore needs a few more entries in it. Now how do I undo my last changes and redo <code>git push</code> with the modified .gitignore file?</p>
","1","1448031","",""
"19675659","2935137","2013-10-30 06:52:16","3","2455","<git><gitignore>","Exclude newly created Makefile from .gitignore","<p>I have few folders in git repo. Every folder contains an ""arm"" folder which is included to <code>.gitignore</code> file. But I have a few Makefiles in ""arm"" folder and in subfolders of arm folder. When I make changes in Makefiles which is under source control <code>git status</code> show me the changes. But if I create new subfolder in ""arm"" folder and add Makefile <code>git status</code> output is empty. How can I change <code>.gitignore</code> file to see untracked Makefiles in <code>git status</code> output? </p>
","1","2935137","0","0"
"579871","37984","2009-02-23 23:38:18","14","6076","<git><vim><gitignore>","Can I make vim respect my .gitignore files?","<p>I was wondering if there is a way to get vim to read .gitignore files and use them to determine options not to present when auto-completing filenames. </p>

<p>For example, working in python, I'd like to not see .pyc files offered for editing. I think vim has its own mechanism for this, I was wondering how to load information from .gitignore into it.</p>
","0","37984","0","0"
"49275294","1185892","2018-03-14 10:28:51","2","5515","<git><gitignore>",".gitkeep - whitelist or force add?","<p>I'm using git very intensively for quite some time now and I'd say that I have a quite good understanding of how git works under the hood but there is one question that I couldn't find a satisfactory answer to:</p>

<p><em>""What is the best way to track an empty directory?""</em></p>

<p>I know there are discussions about whether you should place a <code>.gitignore</code> (which is a documented file in git) or a <code>.gitkeep</code> file (which seems to be just a convention) inside the directory. But that should not be the question.</p>

<p>I'm a fan of the <code>.gitkeep</code> for some reasons:</p>

<ul>
<li>I like having all ignore rules in one file and using <code>.gitkeep</code> prevents from someone putting ignore rules in sub directories.</li>
<li>For me it's more like saying 'ignore the contents but keep this directory' than 'ignore this director but hey, you need it so do not ignore it completely' (although that's what you are doing when you whitelist the <code>.gitkeep</code>..)</li>
</ul>

<p>I'm aware of two techniques to achieve what I want:</p>

<ul>
<li>ignore the directory contents, whitelist the <code>.gitkeep</code> file and add it as usual</li>
<li>ignore the whole directory but force add the <code>.gitkeep</code> file.</li>
</ul>

<p>Until now I used the <em>whitelist</em> method but I had trouble with it now and then especially when working in a team and someone desides to ignore a parent directory of a directory that is already ignored:</p>

<pre><code>/some/path/to/ignore/aaa/**
!/some/path/to/ignore/aaa/.gitkeep
/some/path/to/ignore/bbb/*
/some/path/to/ignore/bbb/.gitkeep
# ... somewhere later in the file ...
/some/path/to/ignore
</code></pre>

<p>I know the directories <code>aaa</code> and <code>bbb</code> are ignored and when I add <code>ccc</code> I add the ignore / whitelist rule. But I can't see the <code>.gitkeep</code> file now because of the last rule.</p>

<p>So I thought maybe the <em>force add</em> method would be better. But are there any side effects doing so?</p>
","6","1185892","0","0"
"49280614","4887726","2018-03-14 14:41:21","8","2577","<git><gitignore>","difference between * and /* in gitignore","<p>I find <code>/*</code> and <code>*</code> has different means when I compare with the setting:</p>

<pre><code>*

!/init.el
!/README.md
!.gitignore
!/lib/
</code></pre>

<p>VS</p>

<pre><code>/*

!/init.el
!/README.md
!.gitignore
!/lib/
</code></pre>

<p>The former not track <code>/lib/</code> but the latter track it.</p>

<p>How to undertand <code>*</code> and <code>/*</code>?</p>

<p><strong>UPDATE</strong><br>
I think this question is not exactly same as another one. Because he is focus on <code>dir/**</code> and <code>dir/*</code> but this one is focus on <code>/*</code> and <code>*</code>.</p>
","9","4887726","",""
"49304550","8960316","2018-03-15 16:25:48","1","258","<git><gitignore>","How to forbid atom to watch all changes stated in .gitignore?","<p>I have added framework and modules files into my project. I also wrote <code>.gitignore</code> to avoid uploading the changes but Atom watch all changes with project and added approximately 8000 files of framework as those that  are ready to pushed. My .gitignore already contains:
{!/folder_of_modules_i_wish_to_hide} What will you suggest?</p>
","9","8960316","0","0"
"49305201","8087129","2018-03-15 16:59:53","75","36009","<git><github><gitignore>",".gitignore only on local","<p>I would like to know how to gitignore files but only on local, without pushing it (because the other people working on the project should not get this update of gitignore of files I added there.</p>
<p>To be simple, after a git status I only have :</p>
<pre><code>modified:   .gitignore
</code></pre>
<p>because I added my files to ignore to my gitignore but well now I want the line above gone without pushing it.</p>
","1","8087129","0","0"
"14293280","459384","2013-01-12 12:25:58","2","104","<git><github><gitignore>","what will happen if I add a file to my git repo and later add a pattern in gitignore that suggests that file is to be ignored","<p>Suppose I have an android project in my repo and I add the apk file. Later I add a gitignore let's say <a href=""https://github.com/github/gitignore/blob/master/Android.gitignore"" rel=""nofollow"">this one</a>. What will happen in the future to this apk file? The file will keep on changing after each build so will it be checked by git or not? In my case, I want it to continue tracking this file.</p>
","1","459384","",""
"49339393","4699375","2018-03-17 16:46:08","-1","218","<java><git><github><netbeans><gitignore>","Push the gitignore file alone at the begin","<p>We are five students in a team and  we must work in the same project using git.
What i did is:</p>

<ol>
<li>create an empty project </li>
<li><p>add gitignore file</p>

<p>The gitignore file
contains:</p>

<pre><code>*.class
nbproject/private/
build/
nbbuild/
dist/
nbdist/
nbactions.xml
nb-configuration.xml
</code></pre></li>
<li><p>git init</p></li>
<li><p>git add .</p></li>
<li><p>git commit -m ""Initial commit""</p></li>
<li><p>set up the remote and push</p></li>
</ol>

<p>But we have a conflict in nbproject/private/private.properties file.
This file contains:</p>

<pre><code>user.properties.file=C:\\Users\\Houssem\\AppData\\Roaming\\NetBeans\\8.2\\build.properties
user.properties.file=C:\\Users\\ASUS\\AppData\\Roaming\\NetBeans\\8.2\\build.properties
</code></pre>

<p>One of us he had cloned the repository and he can't add any java class in his local project.</p>
","2","4699375","0","0"
"49346260","3736230","2018-03-18 09:18:28","6","1943","<git><macos><gitignore>","Copy files without .gitignore?","<p>I had a few Javascript projects and I need to copy or move to another machine. And I would like to ignore files which are already in <code>.gitignore</code>. Now, when I copy the folder I got git ignored folders and files. But, I want to ignore those when I copy (<kbd>Command</kbd> + <kbd>C</kbd>). How can I configure it?</p>
","5","3736230","",""
"32169238","3424096","2015-08-23 17:08:24","6","5249","<git><gitignore>","Does .gitignore work on commit, push, or upon reaching the server?","<p>Say I have a <code>.gitignore</code> to ignore all <code>.class</code> files.</p>

<p>Are these files kept out of the remote origin when...</p>

<ul>
<li><p>I commit/add my files locally? Does my <code>git</code> look for a <code>.gitignore</code> when add/commit is used, and based on what it says, removes things from the commit?</p></li>
<li><p>I push my commits? Does <code>git</code> git only push files that aren't being described in the <code>.gitignore</code>?</p></li>
<li><p>It reaches the origin? Does the server that is holding the git repository keep out files based on it's <code>.gitignore</code>?</p></li>
</ul>
","0","3424096","0","0"
"14691262","1000282","2013-02-04 16:42:56","1","73","<git><gitignore>","Short syntax for ignoring directory/ and .directory/ in .gitignore?","<p>Is there a short syntax for ignoring</p>

<pre><code>directory/
.directory/
</code></pre>

<p>at my .gitignore (something in the lines of <code>\.?directory/</code>)?</p>
","0","1000282","",""
"68253371","15812438","2021-07-05 09:00:25","1","299","<gitignore><parceljs>","Should I add .parcel-cache in .gitignore?","<p>There is lot of files in <code>.parcel-cache</code>. <code>.parcel-cache</code> is really important for the project.
I also want to push in Github.</p>
","0","15812438","",""
"14700835","85443","2013-02-05 05:36:21","84","126573","<git><gitignore>",".gitignore a folder content","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/343646/ignoring-directories-in-git-repos-on-windows"">Ignoring directories in Git repos on Windows</a>  </p>
</blockquote>



<p>My web app has the following directory layout:</p>

<pre><code>myapp/
    .gitignore
    .git/
        ...

    static/
            mytest.txt
            fgs.ico
    ledgerware/
        static/
            mytest.txt
            fgs.ico
        ...
</code></pre>

<p>I'd like to edit existing myapp/.gitignore file so that when git push it ignores all files inside myapp/ledgerware/static folder, but NOT myapp/static folder. Can someone help me with this?</p>
","2","85443","0","0"
"32184481","2419954","2015-08-24 14:12:13","2","916","<wordpress><git><gitignore>",".gitignore is ignoring files in a directory","<p>I have a .gitignore file which I am trying to only let git see the dirs and files in /wp-content/plugins/event-manager and /wp-content/themes/StringsV2.</p>

<p>The one for the theme is working but the plugin one only includes the dir and ignores all the files.</p>

<pre><code># Ignore everything in the root except the ""wp-content"" directory.
/*
!.gitignore
!wp-content/
!wp-config.php

# Ignore everything in the ""wp-content"" directory, except the ""plugins""
# and ""themes"" directories.
wp-content/*
!wp-content/plugins/
!wp-content/themes/

# Ignore everything in the ""plugins"" directory, except the plugins you
# specify (see the commented-out examples for hints on how to do this.)
wp-content/plugins/*
!wp-content/plugins/event-manager/

# Ignore everything in the ""themes"" directory, except the themes you
# specify (see the commented-out example for a hint on how to do this.)
wp-content/themes/*
!wp-content/themes/StringsV2/
</code></pre>

<p>Any ideas where it is going wrong? Thanks</p>
","3","2419954","",""
"14707172","1611830","2013-02-05 12:06:47","0","135","<git><gitignore><git-checkout>","No checkout because of gitignore","<p>I have a project under git. In my gitignore file, I have a folder folder/ I don't want git to care about. The problem, is each time I want to checkout a branch , I am asked to error: The following untracked working tree files would be overwritten by checkout:</p>

<p>error: The following untracked working tree files would be overwritten by checkout:
folder/somefile
folder/subfolder/somefile...</p>

<p>So I moved away the folder/, commited again and then took back the folder/ in my git repo. But why is this message always appearing ? (In my .gitignore, I have a line :  folder/)</p>
","0","1611830","",""
"68317999","1754307","2021-07-09 13:55:40","1","12","<python><git><jupyter-notebook><gitignore>","How to exclude Jupyter notebook checkpoints from git","<p>My .gitignore file is as follows:</p>
<pre><code>.ipynb_checkpoints
*/.ipynb_checkpoints/*
</code></pre>
<p>But when I do git status, I still get checkpoints being tracked.</p>
<pre><code>C:\python_git\python3&gt;git status
On branch main
Your branch is up to date with 'origin/main'.

    Changes not staged for commit:
      (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
      (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)
            modified:   Lists/.ipynb_checkpoints/List Basic Operations-checkpoint.ipynb
            modified:   Lists/List Basic Operations.ipynb
    
    Untracked files:
      (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)
            .gitignore
    
    no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)
</code></pre>
","2","1754307","",""
"50021220","4472596","2018-04-25 11:32:15","0","95","<git><gitignore>","gitignore rule doesn't work","<p>I have .gitignore file with following rules:</p>

<pre><code># Directories #
###############
/icecream/test.*
/icecream/_common_/*.txt
/icecream/cache/**
/icecream/include/compiled/**
/icecream/include/configure/**
/icecream/include/configure/important.php

# Confirmation files #
######################
google*.html
yandex*.html
</code></pre>

<p>And it works fine except this 2 rules:</p>

<pre><code>/icecream/include/configure/**
/icecream/include/configure/important.php
</code></pre>

<p>What can I do to make it work?</p>
","5","4472596","",""
"68658586","10366175","2021-08-04 22:18:35","0","27","<git><gitignore>","I can't understand how .gitignore works","<p>In the root of my (versioned) project I create a folder with a .sh file inside and a README file. Then with the command <code>git status</code> the output (correctly) was that I've to <code>git add</code> the new files.</p>
<p>I don't <code>git add</code> the files but I added them to <code>.gitignore</code> file.
After that, with <code>git status</code> the output was that I have to <code>git add</code> the modified <code>.gitignore</code>.</p>
<p>Then I print <code>git add .</code> and <code>git commit</code> commands.
Now my two initial files are not present and I can't understand why.</p>
<p>With adding files in <code>.gitignore</code> I thought that the files were present but the changes were not tracked but not that they disappeared.</p>
<p>Did I get it wrong or did I make some mistakes?
What happened to those files?</p>
","5","10366175","",""
"50328433","6266952","2018-05-14 10:45:22","0","68","<git><gitignore><ignore>","Ignoring one specific file in git doesn't work, no matter what I try","<p>So I am trying to ignore a file called my_settings.py in git. If I make any changes, git actually ignores them and doesn't tell me to commit them. But every time I change the branch, the file either gets overwritten or git won't let me change the branch, because <code>your changes would be overwritten by checkout</code>. I'm working in a developer team and am the only one left with this issue. The file is not part of <code>.gitignore</code>, because one should be able to pull it, then make changes to it that don't get commited. This works for everyone in my team but me and I don't get it. A colleague pulled the repo again and the problem was gone for him. He didn't even need to use any commands such as <code>git update-index</code>. I tried that and it didn't work. I tried <code>git update-index --assume-unchanged</code>, I tried <code>git update-index --skip-worktree</code>, I tried adding the file to <code>info/exclude</code>. Nothing works. I really have no idea how to fix this. </p>
","7","6266952","",""
"32504123","1841828","2015-09-10 14:06:42","22","12415","<git><gitignore>","Unignore specific Files in Subdirectory with .gitignore","<p>I have a problem to get .gitignore to do what I want. My folder structure looks like so:</p>

<pre><code>assets
├── img
|   ├── thousands
|   ├── of
|   ├── folders
|   ├── KEEP_SOMETHING_IN_THIS_FOLDER
|   |   ├── another
|   |   ├── thousands
|   |   ├── of
|   |   ├── folders
|   |   ├── KEEP_THIS_FILE_1.jpg
|   |   ├── KEEP_THIS_FILE_2.jpg
|   |   ├── KEEP_THIS_FILE_3.jpg
</code></pre>

<p>I try to keep the three jpgs. I tried</p>

<pre><code>/assets/img/*
!/assets/img/KEEP_SOMETHING_IN_THIS_FOLDER/
/assets/img/KEEP_SOMETHING_IN_THIS_FOLDER/*/
!/assets/img/KEEP_SOMETHING_IN_THIS_FOLDER/KEEP_THIS_FILE_*.jpg
</code></pre>
","0","1841828","0","0"
"32505684","1083572","2015-09-10 15:13:39","18","8209","<git><macos><gitignore>","Where is .gitignore_global saved on OS X?","<p>I have created a <code>.gitignore_global</code> file by running</p>

<pre><code>git config --global core.excludesfile ~/.gitignore_global
</code></pre>

<p>However, I can't find the file in question in my file system? Where was it saved? </p>
","2","1083572","0","0"
"32506510","264031","2015-09-10 15:54:35","8","3071","<c#><git><gitignore>","filtering of files and paths from gitignore","<p>I would like to find all file paths that are <em>not</em> filtered by a .gitignore (or any nested .gitignore files within sub-directories) using C#. This is similar to the <a href=""https://stackoverflow.com/questions/19981583/php-filtering-files-and-paths-according-gitignore"">question here</a> with regard to PHP. I'm wondering if someone knows if this code had already been made available (in C#) somewhere online.</p>

<p>UPDATE: To answer what I want this for, it is so I can run my own little periodic backup of my source files for certain projects (zipping the result), for added peace of mind. The hard part is getting a robust .gitignore parser to get the filtered file paths (and exclude the others), without wanting to become too embroiled in learning that spec if someone else already has done it for me.</p>
","8","264031","0","0"
"15423024","1001938","2013-03-15 01:09:33","3","7824","<git><gitignore>","Git: Revert a file that is in my .gitignore","<p>I want to revert a file in Git to a previous commit. The file is ignored by my .gitignore file. In my most recent commit, I accidentally forced it in. </p>

<p>This question answers how to revert any specific file: <a href=""https://stackoverflow.com/questions/215718/how-do-i-reset-revert-a-specific-file-to-a-specific-revision-using-git"">Reset or revert a specific file to a specific revision using Git?</a></p>

<p>Running:</p>

<p><code>git checkout 234234234b234234234c123424 build/includes/initialize.php</code></p>

<p>Error: </p>

<p><code>error: pathspec 'build/includes/initialize.php' did not match any file(s) known to git.</code></p>

<p>Any ideas? </p>
","5","1001938","0","0"
"15459335","2178954","2013-03-17 09:37:55","6","3235","<version-control><meteor><gitignore>","Why does .meteor have a .gitignore file?","<p>I am creating a new meteor app and would like to put the whole thing under git source control. When cloning a working copy of my meteor directory, meteor gives : run: You're not in a Meteor project directory.</p>

<p>After inspecting the .meteor directory, I see that the files in here are being excluded in my local clone.</p>

<p>Is there a particular reason this is done?</p>
","2","2178954","0","0"
"19444705","999973","2013-10-18 08:12:19","6","9952","<git><gitignore>","Removing a directory from .gitignore so git starts to track changes in it","<p>I have a directory <code>doc</code> that was in .gitignore. I decided git should track changes in it. But after removing <code>doc</code> entry from .gitignore, git didn't automatically start tracking the directory.</p>

<p><strong>How can I force git to watch for changes in that directory?</strong></p>

<p>My second concern is, while looking for an answer to above question I found this thread: <a href=""https://stackoverflow.com/questions/1139762/gitignore-file-not-ignoring"">Ignore files that have already been committed to a Git repository</a> and performed these operations:</p>

<pre><code>git rm -r --cached .
git add .
git commit -m "".gitignore is now working""
</code></pre>

<p>I understand that it was wrong move; the above thread discussed totally opposite situation. <strong>Did I ruined something rather badly?</strong> </p>

<p>All this is done on a private, semi-serious project.</p>

<p>Thank you very much!</p>
","1","999973","",""
"19464991","804827","2013-10-19 10:25:31","0","70","<git><gitignore>","Remove folder from git by wildcard","<p>If you have software that automatically creates folders like:</p>

<pre><code>images/user1
images/user2
images/user3
</code></pre>

<p>What can I put in the .gitignore file to insure that they are not stored in the repo?  I have tried:</p>

<pre><code>images/user*/
images/user*/.jpg
images/user*
</code></pre>

<p>But none of these are working as desired.  I do not want any of the dynamically created folders stored in git.</p>

<p>Thanks!</p>
","0","804827","",""
"19496199","2246068","2013-10-21 13:41:49","5","5236","<git><gitignore>","Can't disappear ""untracked"" folder in git status","<p>I'm new to Git. A couple of days ago I tried to undo a ""git add --all"" with ""git reset"" after a quick Google suggested that. Luckily it appears no material harm was inflicted on my working directory, however Git has added a folder of angularjs modules I had listed in .gitignore, and now this folder (and everything in it) is showing up as ""untracked"" in ""git status"". It didn't prior to the reset, and nothing else in gitignore is doing this. I've tried a few solutions including ""git rm -r --cached node_modules"" and this <a href=""https://stackoverflow.com/questions/11525358/git-untracked-files-list-is-wrong"">Git untracked files list is wrong</a> but it's still there. All suggestions appreciated!</p>
","0","2246068","0","0"
"57555418","9746570","2019-08-19 11:00:08","1","213","<git><phpstorm><gitignore>","problem with ignoring files/folders that are already in the remote repository (github)","<p>I am working on PhpStorm. There are some files/folders that I would like git to ignore. These are on the remote repository, too. I just don't want to reflect any more changes about them but they have to stay - not be deleted - from remote repo since I am going to pull from this repo to the production server.</p>

<ul>
<li>I have added them to the .gitignore file which is in the project root.</li>
<li>I have added them to PhpStorm Settings > Version Control > Ignored Files section as described here <a href=""https://intellij-support.jetbrains.com/hc/en-us/community/posts/115000154070-How-to-gitignore-idea-files"" rel=""nofollow noreferrer"">https://intellij-support.jetbrains.com/hc/en-us/community/posts/115000154070-How-to-gitignore-idea-files</a></li>
<li><a href=""https://stackoverflow.com/questions/7231608/how-to-ignore-files-which-are-in-repository"">How to ignore files which are in repository?</a> this question describes my problem exactly, yet I have tried both methods which are described in the accepted answer, here is what happened:

<ul>
<li><code>git rm -r --cached .idea/</code>
I did this and related files/folders were deleted from my remote repository too, which I don't want because I think it will result in deleting those when I pull on the production server.</li>
<li><code>git update-index --assume-unchanged .idea/</code>
I did this, ""Ignoring path .idea/"" was written in the terminal, I hoped that it would work but when I wanted to commit, I saw that folder again as tracked.</li>
</ul></li>
</ul>

<p>What am I doing wrong?</p>

<p>Note: .idea folder may not be important for the production server, but there are some important folders needed for the code to run.</p>
","0","9746570","",""
"38673875","656912","2016-07-30 12:18:08","3","1694","<git><gitignore>","How do I track only specific files using .gitignore?","<p>What should I put in my Git repository's <code>.gitignore</code> to exclude all files and directories there <em>except</em> specific ones. For example if I have a large number of files and directories in a repo, and just want Git to track <code>fileX</code>, <code>.fileY</code>, and <code>directoryZ</code>, but completely ignore everything else, what should be in my <code>.gitignore</code>?</p>
","4","656912","0","0"
"38674314","2083766","2016-07-30 13:11:45","14","26441","<node.js><git><bower><gitignore><git-bash>","How to add a folder to the .gitignore","<p>Maybe my Googling skills are lacking but this seems like a question that should give me back thousands of hits and yet, I can't find a straight answer.</p>

<p>Simple as this:</p>

<p>I do constant pushes to github to share with a remote developer. We both have <code>npm</code> and <code>bower</code> installed. No need to push these huge folders to github all the time. My <code>node_modules</code> are ignored. But I can't seem to get <code>gitignore</code> to ignore my <code>bower_components</code> folder</p>

<p>I'm not too savvy on cmd, I barely scratch the surface so if you ar going to suggest that, please don't assume I know what you are talking about. Otherwise if it is as easy as adding it to the file itself using an IDE, well, I did that and no cigar. Here is my .gtignore file for your review</p>

<pre><code># Logs
logs
*.log
npm-debug.log*

# Runtime data
pids
*.pid
*.seed

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage

# nyc test coverage
.nyc_output

# Grunt intermediate storage (http://gruntjs.com/creating-plugins#storing-    task-files)
.grunt

# node-waf configuration
.lock-wscript

# Compiled binary addons (http://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules
jspm_packages
bower_components

# Optional npm cache directory
.npm

# Optional REPL history
.node_repl_history
</code></pre>

<p>Am I missing anything? How do I make the bower_components ignored? </p>

<p>Thank you</p>
","2","2083766","0","0"
"12102836","351614","2012-08-24 03:41:17","4","1958","<git><svn><git-svn><gitignore>","git svn ignore paths use ignore file","<p>I am converting a svn repo to a git repo and we have a number of binary files that have been checked in over the years that shouldn't have, along with images and other files, I don't really want these files present in the git repo taking up space.</p>

<p>I have played around with git-svn to convert the repo and have used its -ignorepaths property but I'd like to be able to feed a list into the ignore paths rather than having to specify a ignorepaths for each pattern/directory I want to exclude, if I could use a svnignore/gitignore file during the conversion that would take out this junk that would be even better.</p>

<p>Is there a way to do this or do I just have to bit the bullet and specify each pattern/path individually?</p>

<p>EDIT: updated question to be more clear as to what I was asking</p>
","2","351614","",""
"19663093","597076","2013-10-29 15:50:12","530","398982","<git><gitignore>","Apply .gitignore on an existing repository already tracking large number of files","<p>I have an existing Visual Studio project in my repository. I recently added a .gitignore file under my project and I assume that tells Git to ignore the files listed in the file. </p>

<p>My problem is that all those files are already being tracked and as far as I know Git will not ignore a file that was already tracked before a rule was added to this file to ignore it.</p>

<p>It was suggested to use: <code>git rm --cached</code> and manually un-track them but that's going to take me forever to go through them one by one. </p>

<p>I thought about deleting the repository and recreating it again but this time with .gitignore file present, but there must be a better way to do this.</p>
","4","597076","0","0"
"29759079","4812305","2015-04-20 21:51:00","1","1046","<git><gitignore><git-stage>","why file in gitignore will be modified after android studio compile?","<p>I have a file called VersionUtil and set it into the gitignore.
In the gitignore file, I have</p>

<pre><code># Git info
app/src/main/java/com/test/util/VersionUtil.java
</code></pre>

<p>Before I run the project in android studio, there's a line of code in VersionUtil.java:</p>

<pre><code>public static final String COMMIT_INFO = ""info"".
</code></pre>

<p>I ran  git status and it returned</p>

<pre><code>Your branch is up-to-date with 'origin/develop'.
</code></pre>

<p>However, after I run the project, VersionUtil.java was changed. That line is:</p>

<pre><code>public static final String COMMIT_INFO = ""6a604 XXXXX "".
</code></pre>

<p>The git status returned</p>

<pre><code>modified:   app/src/main/java/com/test/util/VersionUtil.java
</code></pre>

<p>Do you guys have any idea? Why the file in gitignore is still being tracked? Any help would be appreciated.</p>
","1","4812305","",""
"12144633","592540","2012-08-27 15:07:07","404","61012","<git><gitignore>","Explain which gitignore rule is ignoring my file","<p>Is there any way to see why some file is getting ignored by git (i.e. which rule in a <code>.gitignore</code> file is causing the file to be ignored)?</p>

<p>Imagine I have this (or a much more complex scenario, with hundreds of folders and tens of <code>.gitignore</code> files:</p>

<pre><code>/
-.gitignore
-folder/
    -.gitignore
    -subfolder/
              -.gitignore
              -file.txt
</code></pre>

<p>If I run <code>git add folder/subfolder/file.txt</code> git may complain of it being ignored:</p>

<pre><code>The following paths are ignored by one of your .gitignore files:
folder/subfolder/file.txt
Use -f if you really want to add them.
</code></pre>

<p>Is there any way to know which of all the possible <code>.gitignore</code> have a rule to ignore this file, and also show the rule? Like:</p>

<pre><code>The following paths are ignored by your folder/.gitignore file (line 12: *.txt)
folder/subfolder/file.txt
Use -f if you really want to add them.
</code></pre>

<p>Or just:</p>

<pre><code>$ git why-is-ignored folder/subfolder/file.txt
folder/.gitignore:12:*.txt
</code></pre>
","3","592540","0","0"
"29802433","2690556","2015-04-22 15:37:11","3","513","<git><gitignore>","gitignore file but not folder","<p>I have a folder named the format </p>

<pre><code>*.*.*.*.log
</code></pre>

<p>I also want to ignore *.log files
but the entry </p>

<pre><code>*.log 
</code></pre>

<p>In gitignore is ignoring my whole folder.</p>

<p>How do I ignore *.log files but not *.log directories?</p>
","0","2690556","0","0"
"29803693","4694621","2015-04-22 16:31:16","4","1510","<macos><git><gitignore>","Is it possible to ignore a particular executable file using .gitignore?","<p>Suppose I get <code>myProgam</code> executable file on Mac as a result of compiling my code like this:</p>

<pre><code> gcc -o myProgram myProgram.c
</code></pre>

<p>How can induce my <code>.gitignore</code> file to actually ignore the <code>myProgram</code> file? I'm not looking for the solution where I make a separate folder for my executable files.</p>

<p>My question might seem obvious to many but I cannot actually find any solution online although I've searched a few pages and tutorials already as well as the StackOverflow resources.</p>

<p>I'll be grateful for any hints. </p>
","3","4694621","0","0"
"19842692","1978617","2013-11-07 17:31:43","0","2348","<git><gitignore>","add files with period in name to .gitignore","<p>I have a problem with creating some entries for the <code>.gitignore</code> file. There are directories with <code>.</code> in their names, like so:</p>

<pre><code>Thing1.This/bin  
Thing1.That/bin 
Thing1.TheOther/bin  
</code></pre>

<p>I want to exclude the bin directories. These directories can be added explicitly, but there are a lot which would make this tedious. I also tried using both these lines, but neither of them worked either:</p>

<pre><code>*/bin
[Bb]in
</code></pre>

<p>How can this be specified?</p>

<p>I'm working on Windows 7.</p>
","2","1978617","",""
"12191254","1632167","2012-08-30 06:42:28","9","2374","<git><gitignore>","gitignore continue to track file after adding it once by force","<p>I have a file mentioned in .gitignore, but I added it by <code>git add -f</code> because I wanted to add 
it only once and then ignore it as usual.</p>

<p>However, it is now tracked by default. How do I undo this?</p>
","0","1632167","0","0"
"33062408","5258815","2015-10-11 07:02:10","2","52","<meteor><global-variables><commit><gitignore><api-key>","the concepts of git ignore and not commiting, but still using, global variables","<p>I'm a bit of a newbie, but already running apps with Meteor.js. Since I'm now working with API keys I'm finally realizing that security is a thing, and so I placed my keys in a settings.json, and am instructed not to commit, or to .gitignore the file. But despite reading the documentation, this all seems very counter-intuitive. If I need the variables to make my HTTP requests, then how can my app possibly function without adding my keys, in some form, to the repo? I know the answer is ""it can,"" but how? (in general terms, I don't need a Meteor specialist yet) .</p>

<p>Typing this question out makes me feel pretty ignorant for the stage I'm at, but the docs out there for some reason are not clarifying this for me. </p>
","0","5258815","0","0"
"50541935","4684797","2018-05-26 10:47:41","1","1285","<git><gitignore>","gitignore fails to ignore files/folders with whitespaces","<p>This is my .gitignore file:</p>

<pre><code>Textfusion\ Pro/bin/Debug/
Textfusion\ Pro/bin/Release/
.gitignore
.vs/
</code></pre>

<p>But If I execute <code>git status</code> then the folder is still appearing.</p>

<p><a href=""https://i.stack.imgur.com/0mSSG.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/0mSSG.png"" alt=""t""></a></p>

<p>I also tried it like this:</p>

<ul>
<li>Textfusion Pro/bin/Release/</li>
<li>Textfusion*Pro/bin/Release/</li>
<li>""Textfusion Pro""/bin/Release/</li>
<li>""Textfusion Pro/bin/Release/""</li>
</ul>
","0","4684797","",""
"16511956","2375725","2013-05-12 20:55:51","1","67","<git><merge><gitignore>","git merge omits files within ignored folder?","<p>I have a branch that contains a folder <em>resources/</em> that is in the <em>.gitignore</em>. However, within this folder are a few files that are managed by git. (We use this for 3rdparty-libraries that we compile ourself and want to have the sources in our git)</p>

<p>Now we merged this branch back to the master (<em>git merge &lt;branch&gt;</em>) and these files have not been ""transfered"" to the master. Since we didn't notice this immediately, redoing the whole merge (after removing the whole folder from <em>.gitignore</em>) would be a lot of work.</p>

<p>I already tried removing it and merging again. This does not work, as the respective commits have been merged.
I also tried cherry-picking the commits for this folder, but this resulted in lots of merge conflicts.</p>

<p>Is there any way to fix this?</p>
","0","2375725","0","0"
"33086710","595605","2015-10-12 17:13:30","3","65","<git><gitignore>","Remove a file from git locally, but not on remote","<p>I have a file full of tests that fail locally, because my local environment doesn't have some software installed. The tests succeed on our continuous integration system, and I never touch the code being tested, so I would like to remove this file locally so that tests pass locally, but not remove the file from the remote server. Is this possible using git's ignoring mechanisms?</p>
","2","595605","",""
"33086822","1300440","2015-10-12 17:21:03","0","843","<git><intellij-idea><gitignore>","Trouble with command `git rm -r --cached /.idea`","<p>In my case I have new project. Developer before me commit all files in git (with build folder, .idea folder etc). I create .gitignore and now I want delete autogeneric and system files. Earlier I do same in 3 step:
1) remove all autogeneric and system files in repository; commit and push on git.
2) create and fill .gitignore; commit and push
3) restore removed file (ussually via IDEA recreate project from gradle.build)</p>

<p>Now I try new way without deleting files from repository:
1) create .gitignore
2) use commands: git rm -r --cached .gitignore, git rm -r --cached /.idea; etc
3) after that I going to commit and push.
4) use command: git add . and commit and push again</p>

<p>But I have trouble with command <code>git rm -r --cached /.idea</code></p>

<pre><code>fatal: /.idea: '/.idea' is outside repository
</code></pre>

<p>Help me fix this problem=)</p>
","1","1300440","",""
"33108604","3043868","2015-10-13 17:09:37","0","3675","<git><gitignore>","Adding a node.js config file to .gitignore","<p>This is a very basic question probably, but I cannot figure out how to use .gitignore to ignore a file during commits. </p>

<p>I am creating a Twitterbot in Node.js and have a config.js file with all my API keys. That's all I want to hide. </p>

<p>Do I just make a file called "".gitignore"" and type out the name of the file (in this case, ""config.js"") and save it in my repo?</p>

<p>I'm a total newbie so thanks for any and all help! </p>
","2","3043868","0","0"
"16535793","1694106","2013-05-14 05:30:51","1","161","<git><github><gitignore>","how to avoid a files get override on server using git?","<p>I have followed following mentioned link &amp; but failed<br>
<a href=""https://stackoverflow.com/questions/1139762/gitignore-file-not-ignoring"">Ignore files that have already been committed to a Git repository</a>  </p>

<p>Here is the situation:
I have download script on server A, which download the files &amp; kept it into the <strong>public/downloads/-files-</strong> folder.  when I run <strong>git push</strong> it overwrites the local files to server.</p>

<p>Ex: 
File status on localhost (Only one file present in git repo for download folder)</p>

<pre><code>localhost /downloads/sample.txt
</code></pre>

<p>File status on server after download script run on server A</p>

<pre><code>server A /downloads/a.swf
server A /downloads/b.swf
server A /downloads/c.swf
</code></pre>

<p>after <strong>git push</strong> run file status on server A</p>

<pre><code>server A /downloads/sample.txt
</code></pre>

<p>What I need is I don't want to get folder files overwrite with sample.txt.</p>

<p><a href=""https://stackoverflow.com/questions/1139762/gitignore-file-not-ignoring"">Ignore files that have already been committed to a Git repository</a>  </p>

<p>As ref. to above link I tried following things</p>

<p>I implemented gitignore option after removing or uncaching index,   but it remove <strong>/downloads/</strong> dir from server</p>

<p>also I tried</p>

<pre><code>git update-index --assume-unchanged &lt;file&gt;
</code></pre>

<p>but not helped</p>

<p>let me know, if I am doing anything wrong or how to achieve expected result.</p>

<p>thanks in advanced.</p>
","1","1694106","",""
"16550688","450913","2013-05-14 18:54:34","155","125617","<git><gitignore>","How to .gitignore files recursively","<p>I'm trying to avoid the following pattern in my <code>.gitignore</code> file.</p>

<pre><code>MyPrject/WebApp/Scripts/special/*.js
MyPrject/WebApp/Scripts/special/*/*.js
MyPrject/WebApp/Scripts/special/*/*/*.js
MyPrject/WebApp/Scripts/special/*/*/*/*.js
MyPrject/WebApp/Scripts/special/*/*/*/*/*.js
MyPrject/WebApp/Scripts/special/*/*/*/*/*/*.js
MyPrject/WebApp/Scripts/special/*/*/*/*/*/*/*.js
</code></pre>

<p>We tried:</p>

<pre><code>MyPrject/WebApp/Scripts/special/**.js
MyPrject/WebApp/Scripts/special/**/*.js
</code></pre>

<p>This however didn't work. This is git on Windows. Is there a more concise way to do this without repeating things?</p>
","1","450913","0","0"
"33143013","129805","2015-10-15 08:00:08","1","41","<git><gitignore>","Amending .gitignore, removing files from git while keeping them locally","<p>All of the developers have files which should have been in .gitignore from the start of the project, but which were not.</p>

<p>Is there a git command to remove files from git, while keeping them locally <strong>and</strong> keeping them locally on all the other developer machines, when they <code>git pull</code>?</p>

<p>Ideally this should look at a diff of .gitignore to decide what needs to be removed but kept locally.</p>

<p>At the moment, I am considering the following manual procedure:</p>

<p>My Machine:</p>

<ol>
<li>get full paths of all files which match the new <code>.gitignore</code>, but which don't match the old <code>.gitignore</code></li>
<li>add all of those files to an out-of-tree tar file</li>
<li><code>git rm</code> all those files</li>
<li><code>commit</code> and <code>push origin master</code> the changes</li>
<li>email the tar file to all the other developers</li>
</ol>

<p>Every other developer's machine:</p>

<ol>
<li><code>git pull</code> which will update <code>.gitignore</code> and <em>remove</em> their local copies of the files which should now be ignored.</li>
<li>untar the tar file over the top of the local repo to reinstate the removed files  </li>
</ol>

<p><strong>This procedure has huge scope for manual errors - is there a better way?</strong></p>

<p>I've looked at:</p>

<p><a href=""https://stackoverflow.com/questions/32887956/remove-file-from-git-without-deleting-them-locally-and-remotely"">Remove file from Git without deleting them locally and remotely</a></p>

<p><a href=""https://stackoverflow.com/questions/16674732/removing-a-file-from-versioning-but-keeping-it-locally"">Removing a file from versioning but keeping it locally?</a> and </p>

<p><a href=""http://gitready.com/intermediate/2009/02/18/temporarily-ignoring-files.html"" rel=""nofollow"">http://gitready.com/intermediate/2009/02/18/temporarily-ignoring-files.html</a></p>
","1","129805","",""
"50559213","8292435","2018-05-28 04:40:15","4","57","<git><github><heroku><gitignore>","Is it possible to make remote-specific .gitignores?","<p>I use two services, GitHub and Heroku. I have set up remotes for each of the repositories online. However, I want one file to be pushed to Heroku, but not pushed to GitHub. Is there an easy way to do this without having to edit .gitignore every time I push to a different service?</p>
","0","8292435","0","0"
"16598257","473792","2013-05-16 22:05:16","63","19081","<git><gitignore><ignore>","Ignore specific changes to a file in git, but not the entire file","<p>I have a file in a git repository that has a local change on it. I want to have git ignore the local change forever, but not the file. In particular,</p>

<ul>
<li>If the file isn't touched besides this change, <code>git add .</code> should never stage it.</li>
<li>Likewise, <code>git commit -a</code> shouldn't commit it.</li>
<li>If I ever make an additional change to the file, I should be able to stage and commit that change - but the change I'm ignoring should <em>not</em> be staged and committed.</li>
</ul>

<p>Is there a way to do this? Doing some research, I read about ""smudge/clean cycles,"" where, if I read correctly,</p>

<ol>
<li>the file would be marked as unchanged,</li>
<li>the change I made would be overwritten when I checkout,</li>
<li>and then a script would automatically reapply the change and then mark the file as unchanged again.</li>
</ol>

<p>I am very new to git and scripting, though (I'm an intern with C# and Java experience), so if that's what I need to do, can you please post detailed directions or a link to a tutorial on how to set a smudge/clean cycle up?</p>

<p><strong>Background:</strong> I want my working branch to be out of sync with the trunk. There is a low priority bug that only affects development machines, so rather than fix it, we're just commenting out the offending code. Obviously, we don't want this code to be removed from production, where it works just fine.</p>
","3","473792","0","0"
"33175721","2605112","2015-10-16 16:54:08","24","39181","<git><csv><gitignore>","How do I get git to ignore my csv files?","<p>I want git to ignore my csv files.  But, when I do <code>git status</code>, I see that the csv is in <code>""Changes not staged for commit""</code>.  But, I swear I added it to the .gitignore file a while ago.  In fact, when I look at the <code>.gitignore</code> file, I see that it is there!</p>

<pre><code>*.csv
</code></pre>

<p>So, how to I get <code>git</code> to ignore my csv's?  The problem is that I want to be able to do <code>git reset</code> and <code>git checkout</code> without having to worry about the <code>csv</code> files being overwritten in my working directory.  </p>
","1","2605112","0","0"
"33189437","4476026","2015-10-17 17:23:13","44","63992","<regex><git><gitignore>","explain gitignore pattern matching","<p>I have the following directory tree:</p>

<pre><code>&gt; #pwd is the repo   
&gt; tree -a
.
├── .git
│   |.....
├── .gitignore
├── README.md
├── f1.html
├── f2.html ... and some more html
├── images
│   └── river.jpg
&gt;
</code></pre>

<p>I also have the following in my <code>.gitignore</code>:</p>

<pre><code>&gt; cat .gitignore
*
!*.html
!images/*.*
&gt;
</code></pre>

<p>I would like all files in the images directory to be included in the repo. But that is not happening. I got it to work using the following in gitignore:</p>

<pre><code>*
!*.html
!images*
!*.jp*g
</code></pre>

<p>What is happening here? Is there a foolproof way to test gitignore. I checked the <a href=""https://git-scm.com/docs/gitignore"" rel=""noreferrer"">documentation</a>. Here is the point it don't understand (this is under <strong>pattern format</strong> heading):</p>

<blockquote>
  <p>Otherwise, Git treats the pattern as a shell glob suitable for
  consumption by fnmatch(3) with the FNM_PATHNAME flag: wildcards in the
  pattern will not match a / in the pathname. For example,
  ""Documentation/*.html"" matches ""Documentation/git.html"" but not
  ""Documentation/ppc/ppc.html"" or ""tools/perf/Documentation/perf.html"".</p>
</blockquote>
","0","4476026","0","0"
"68909370","7298733","2021-08-24 14:44:21","1","487","<flutter><gradle><gitignore>","Can I add project's root .gradle folder to the .gitignore file?","<p>Root folder of Flutter project has a .gradle folder. I'd like to stop tracking it and exclude it from the git index. Could you please advice whether I would meet and issues doing this? What is it responsible for? And is it critical if new developers will pull the project without this folder? I couldn't find any docs regarding this. Also I see that this folder isn't excluded by default.</p>
<p><a href=""https://i.stack.imgur.com/jDbiG.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jDbiG.png"" alt=""project structure"" /></a></p>
","2","7298733","",""
"17349096","2476417","2013-06-27 17:00:38","2","181","<git><gitignore><git-subtree>","Make branches of git-subtrees that don't contain gitignore files","<p>I recently started using git-subtree to keep a few github sub-projects inside a parent repository that syncs to a private server. I'm having trouble managing .gitignore files in my subproject branches. </p>

<p>I need to be able to make branches of the sub-projects, which will then be pushed to github, and to be able to pull down branches of the sub-projects from github as well. I've tried this both by using the ""git subtree split -b"" command and by making branches directly from the github repo and then pulling them down into my parent repository. </p>

<p>However, I've been having trouble with the files listed in .gitignore because I don't want them to be inside these branches. I saw this Stack Overflow post (<a href=""https://stackoverflow.com/questions/2503816/git-subtree-not-properly-using-gitignore-when-doing-a-partial-clone"">Git subtree not properly using .gitignore when doing a partial clone</a>), which describes a similar situation, but I can't just use git clean as suggested because I don't want to delete the files entirely, just to make sure they are not committed or pushed to github. I also don't want to put gitignore files in each of the subtrees, because I don't want the public github repos to contain the names of my private files. </p>

<p>Is there a way to make branches that won't include the ignored files?</p>
","0","2476417","0","0"
"33926256","5462224","2015-11-25 20:56:17","0","1334","<git><gitignore>","git: Can't comment on .gitignore file","<p>I've been trying to write some comments on my <code>.gitignore</code> file.
I started the comments with <code>#</code> but the sentences don't change into comments.
How can I solve this?</p>

<p>My <code>.gitignore</code> file looks like this:</p>

<pre><code># this is a comment 

db/* .sqlite3
</code></pre>
","2","5462224","",""
"33948631","210945","2015-11-27 00:04:23","0","281","<git><git-submodules><gitignore>","Tell git to ignore untracked content in submodules?","<p>Currently if I run <code>git status</code>, I get a bunch of stuff like this:</p>

<pre><code>On branch master
Your branch is up-to-date with 'origin/master'.
Changes not staged for commit:
  (use ""git add &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
  (commit or discard the untracked or modified content in submodules)

        modified:   projects/submodule1 (untracked content)
        modified:   projects/submod2 (untracked content)
        modified:   projects/submodule3 (new commits, modified content, untracked content)
        modified:   projects/submodule4 (modified content, untracked content)
        ...
</code></pre>

<p>I <em>do</em> care about the <code>new commits</code> and the <code>modified content</code>, but a lot of these submodule generate their own crap (like build files, etc), and I don't care about any of that (if it's important, I should be adding it to the submodule and tracking it). Is there a way to get git to ignore <code>untracked content</code> in submodules, but not <code>new commits</code> or <code>modified content</code>?</p>
","3","210945","",""
"33958140","1633446","2015-11-27 13:09:17","37","25510","<git><typescript><gitignore>","how to exclude typescript compiled files from git","<p>I have a visual studio solution with a few asp.net 5 project. Inside every project I have a <strong>wwwroot</strong> directory and inside this an <strong>app</strong> directory that contains the html views, .js and .map files that are typescript files compiled in this position.<br>
  With the standard configuration these files are included in the checkin. How can configure the .gitignore file so all the <strong>.js and .map</strong> files, inside every subdir of the <strong>wwwroot\app</strong> directory of every project in the solution are ignored?</p>
","1","1633446","0","0"
"33960919","567957","2015-11-27 15:52:54","3","63","<git><gitignore>","How to git ignore folders that begin with # sign","<p>Is it possible to create a <code>.gitignore</code> file, that ignores files or folders that begin with <code>#</code>?</p>

<p><strong>Example:</strong></p>

<pre><code>#DATABASE_FILES
#DOCUMENTATION
</code></pre>
","1","567957","",""
"69084527","16849522","2021-09-07 08:08:03","4","723","<git><gitignore><ignore>","What is difference between ""git check-ignore *"" and ""git ls-files --other --ignored --exclude-standard""?","<p>I'm trying to check files that are ignored by git, and I found 2 commands show same result.</p>
<p>which are</p>
<ol>
<li><p><code>git check-ignore *</code></p>
</li>
<li><p><code>git ls-files --others --ignored --exclude-standard</code></p>
</li>
</ol>
<p>It seems different approach, but would it show same result in any condition?</p>
","3","16849522","",""
"33972491","1851977","2015-11-28 14:36:28","18","17884","<android><git><android-studio><bitbucket><gitignore>","Ideal Android Studio gitignore file","<p>i recently created an Android project but it is my first time to work with Android Studio, i placed the project in a Git folder to be able work with another developer remotely through Git and i found that the default .gitignore file contains the following:</p>

<pre><code>*.iml
.gradle
/local.properties
/.idea/workspace.xml
/.idea/libraries
.DS_Store
/build
/captures
</code></pre>

<p>i just wondering is this the ideal gitignore file to be able work together remotely? or i have to edit or remove some files from it?!</p>
","1","1851977","0","0"
"33983210","5317317","2015-11-29 13:17:17","1","490","<git><exception><version-control><gitignore>","Git: .gitignore in subdirectories","<p>I'm trying to manage my <code>neovim</code>'s <code>init.vim</code> with git. 
I want to ignore everything except the <code>init.vim</code> in the same folder as the <code>.gitignore</code>and one <code>kalisi.vim</code> in the directory</p>

<p><code>/bundle/vim-airline/autoload/airline/themes/</code></p>

<p><strong>This is my current <code>.gitignore</code>:</strong></p>

<pre><code># Ignore everything
*

# Exceptions
!.gitinore
!init.vim

!bundle
bundle/*
!bundle/vim-airline
bundle/vim-airline/*
!bundle/vim-airline/autoload
bundle/vim-airline/autoload/*
!bundle/vim-airline/autoload/airline
bundle/vim-airline/autoload/airline/*
!bundle/vim-airline/autoload/airline/themes
bundle/vim-airline/autoload/airline/themes/*
!bundle/vim-airline/autoload/airline/themes/kalisi.vim
</code></pre>

<p><strong>My thoughts about this:</strong></p>

<ul>
<li><p>Ignore everything: <code>*</code></p></li>
<li><p>Except this <code>.gitignore</code>: <code>!.gitgnore</code></p></li>
<li><p>And the <code>init.vim</code> in the same directory: <code>!init.vim</code></p></li>
<li><p>Also don't ignore the folder <code>bundle</code>: <code>!bundle</code></p></li>
<li><p>But everything in it: <code>bundle/*</code></p></li>
<li><p>Except the folder <code>vim-airline</code>: <code>!vim-airline</code></p></li>
</ul>

<p>I think you get the idea...</p>

<p>But if I execute <code>git status</code> now only get <code>bundle/</code> as untracked file. Should't I get <code>kalisi.vim</code> or <code>bundle/vim-airline/autoload/airline/themes/kalisi.vim</code>?</p>

<p>I'm hoping for a more elegant way to be honest. I also heard about placing multiple <code>.gitignore</code>'s in the directories, but the subdirectories are all projects with it's own <code>.gitignore</code> and this would create a huge amount of work to only not-ignore the right <code>.gitignore</code>. </p>

<p>I hope someone has an idea what to do, currently it just seems like the <code>bundle/</code> directory is tracked, but not the content I want...</p>
","0","5317317","0","0"
"69088796","16851562","2021-09-07 13:07:45","1","94","<git><gitignore><status>","I need to unsee characters in git status","<p>I'm currently doing an exercise with Git and I cannot take those '??' in the beginning away and i need to.</p>
<p>Can someone explain to me how to!?</p>
<p>Much appreciate it!</p>
<p>I'm a beginner by the way, obviously!</p>
<p>It is an exercise where i need to write a short shell script where it shows the list of ignored archives present in my local repository.</p>
<p><code>ex06 % git status -s --ignored=traditional | grep '??*'</code></p>
<p><code>?? .DS_Store</code>
<code>?? mywork.c~</code></p>
","0","16851562","",""
"17441279","846910","2013-07-03 06:39:24","3","3393","<git><gitignore><git-pull><git-remote><git-checkout>","git: ignore a file on pull from remote1, but push local version to remote2","<p>I have 3 git repositories:</p>

<ul>
<li><code>local</code>: my development repo on my local machine;</li>
<li><code>remote1</code> used for collaboration with other developers;</li>
<li><p><code>remote2</code> which is a Production server.</p>

<ol>
<li><p>I would like to <code>pull</code> regularly from <code>remote1</code> to my <code>local</code> repo and keep some local tracked files intact (i.e. fetch and merge from <code>remote1</code>, but exclude some local tracked files from being merged).</p></li>
<li><p>On the other side, I would like to regularly <code>push</code> to <code>remote2</code> and I would like local tracked files to be pushed as well.</p></li>
</ol></li>
</ul>

<p>In other words, I would like to have the following versions of <code>file1</code>:</p>

<ul>
<li><code>local</code>: file1 <em>v.1</em></li>
<li><code>remote1</code>: file1, <em>v.2</em></li>
<li><code>remote2</code>: file1, <em>v.1</em></li>
</ul>

<p>Note: <code>file1</code> can be anything (.css, .html, even .png)</p>

<p>I have tried the following approaches:</p>

<ul>
<li><code>.gitignore</code> a file (does not work, the file becomes being tracked again after pull from <code>remote1</code>)</li>
<li><code>git pull --no-ff --no-commit remote1 master</code>, then <code>git checkout --ours file1</code> according to <a href=""https://stackoverflow.com/questions/2073841/how-can-i-discard-remote-changes-and-mark-a-file-as-resolved"">this</a> (does not work, file1 becomes v.2)</li>
<li><code>.git/info/exclude</code> as described <a href=""https://stackoverflow.com/questions/1753070/git-ignore-files-only-locally/1753078#1753078"">here</a> (does not work, nothing is ignored and even if it is ignored, <code>file1</code> will not be pushed to <code>remote2</code> then) </li>
</ul>
","0","846910","0","0"
"17466103","692793","2013-07-04 08:59:55","0","215","<git><rules><gitignore>","I'm using git, and just git init a workspace and never commit, but the .gitignore is not working","<p>I have a project dir, and I <code>git init</code> the dir. Then I created a <code>.gitignore</code> file in the same dir, and copied these<a href=""https://help.github.com/articles/ignoring-files"" rel=""nofollow"">.gitignore</a> rules</p>

<pre><code># OS generated files #
.DS_Store
# SVN control files #
.svn
</code></pre>

<p>and then I tried <code>git add</code>, and the console outputs:</p>

<pre><code>add '.DS_Store'
add '.gitignore'
add '.svn/all-wcprops'
add '.svn/entries'
</code></pre>

<p>the <code>.gitignore</code> seems not working. Can someone help me?</p>

<h2>Add:</h2>

<p>a lot of similar questions says that, use ""git rm -r --cached ."" But i have never commit once, it just dont helpful!</p>

<p>As you wish, here is git status output:</p>

<pre><code>by-01-0497:trunck appleofuestc$ git status
# On branch master
#
# Initial commit
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   .DS_Store
#   .gitignore
#   .svn/
#   SiChuan-Mahjong/
nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>
","3","692793","",""
"17467092","","2013-07-04 09:46:09","1","213","<regex><git><gitignore>","Ignoring a particular file pattern in git","<p>I am using git in my project. My home directory contain few files like</p>

<pre><code>Title v2.12.12.exe
Title v1.4.21.exe
Title v3.42.11.exe
</code></pre>

<p>All these starts with <code>Title v</code> and ends with <code>.exe</code> and contains some version in the middle. What changed should I made in .gitignore to ignore these types of file?</p>
","0","","",""
"34013825","3427735","2015-12-01 06:18:23","0","1029","<git><gitignore>",".gitignore for file extension( ~) not working","<p>I want to ignore all the files that ends with ~.</p>

<p>My .gitignore fille is </p>

<p>*~</p>

<p>I have placed .gitignore file as below.</p>

<p>sci2c|
     |2.3.1
           |various files and folders
           |.gitignore </p>

<p>Its not ignoring the files thats ends with ~ in all directories.</p>

<p>Please help.</p>
","4","3427735","",""
"17479263","2379706","2013-07-04 23:33:33","0","130","<git><gitignore><git-checkout>","Moving gitignored files with branch after git-checkout","<p>I have a single repo where each branch specifies different approaches to the same problem:</p>

<pre><code>$ git branch
approach1
approach2
approach3
</code></pre>

<p>Now for each of these approaches, I have several auxiliary files, but the auxiliary files are specific to each branch.</p>

<p>So my question is: Is it possible to have these files not be tracked, but move with the branch when I <code>git checkout</code> and move to a different branch?</p>

<p>This is what I would like to happen when I move to different branches:</p>

<pre><code>$ git checkout approach1
$ ls
notrack_test1.cpio.gz  notrack_test2.tar  notrack_test2-logging.img
tracked1/  tracked2.tmp

$ git checkout approach2
$ ls
notrack_check1.cpio.gz  notrack_check2.cpio.zip
notrack_check2-no_cam.img  tracked1.img  tracked_source/
</code></pre>

<p>Is this possible? The main reason I need to do this is because I have a large amount of auxiliary files per branch that should not be committed and not tracked.</p>
","2","2379706","",""
"34027914","1968317","2015-12-01 18:54:15","0","101","<git><macos><gitignore><osx-elcapitan>","Git repository in subdirectory is reading .gitignore from parent directory","<p>I like to keep my home directory under version control, to track changes to Bash startup files, various config files, etc.  I have a ~/.gitignore file which ignores everything, followed by various lines which tell Git exactly what files I want to track:</p>

<pre><code>/*
!.bash*
.bash_history
!.ssh/
.ssh/*
!.ssh/config
</code></pre>

<p>Then I have some Git repositories hosted within my home directory, say ~/dev/project/.</p>

<p>Here's my problem.  On my Linux box, I have no problem with these two repositories -- they don't conflict.</p>

<pre><code>[~/dev/project] $ git init .
Initialized empty Git repository in ~/dev/project/.git/
[~/dev/project] $ touch test
[~/dev/project] $ git status
On branch master

Initial commit    
Untracked files:
(use ""git add &lt;file&gt;..."" to include in what will be committed)
test    
nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p>But on my Mac laptop (El Capitan), they do conflict.  The repo in the subdirectory is reading the .gitignore from the home directory, and the first rule, to ignore everything (""/*"") is being applied:</p>

<pre><code>[~/dev/project] $ git init .
Initialized empty Git repository in ~/dev/project/.git/
[~/dev/project] $ touch test
[~/dev/project] $ git status
On branch master

Initial commit    
nothing to commit (create/copy files and use ""git add"" to track)
[~/dev/project] $ mv ~/.gitignore ~/.gitignore.tmp
[~/dev/project] $ git status
On branch master

Initial commit    
Untracked files:
(use ""git add &lt;file&gt;..."" to include in what will be committed)
test
nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p>I can't figure out why this is happening.  Linux box is Debian (stable), Git v.2.1.4; El Capitan is Git v. 2.6.2 (latest).</p>
","0","1968317","",""
"17492207","1600312","2013-07-05 15:21:24","3","1204","<zend-framework2><gitignore>","Is there any good example of gitignore file for Zend Framework 2","<p>Is there any good example or way how to create <code>.gitignore</code> file for <code>Zend Framework 2</code>?</p>
","2","1600312","",""
"17492754","1317240","2013-07-05 15:52:18","1","2376","<git><gitignore>","Why is .gitignore not part of repository by default?","<p>I have created a <code>.gitignore</code> file and it keeps showing up in the unstaged changes area. </p>

<p>Why does git not take care of this automatically as this is kind of configration file for the project(repo)? Can't be a part of the repository by default? Why is such behavior included in design? Are there any use cases for such design?</p>
","1","1317240","",""
"69102876","12085352","2021-09-08 12:11:45","1","72","<git><gitignore>","Different behavior for two whitelisted nested directories in my .gitignore file","<p>I am somewhat losing my seances right now...</p>
<p>I want to whitelist only certain files/folders to control vim, i3, etc</p>
<p>I read <a href=""https://stackoverflow.com/a/29932318"">here</a> that you might need some more lines to achieve the wanted behavior, which is to ignore all files except some specific ones, and and except files in some specific directories.</p>
<p>BUT
I tried it and it didn't work for <code>.config/i3/</code> and while the files in <code>.vim/autoload/</code> get included as intended (with the <code>.gitignore</code> file pictured below) that's not the case for <code>.config/i3/</code>.</p>
<p>Could someone explain that to me please?!</p>
<p>Note <code>.config/i3/</code> and <code>.vim/autoload/</code> share the same height/depth relative to the <code>.gitignore</code> file</p>
<p>Here is the contents of my <a href=""https://i.stack.imgur.com/f18yc.png"" rel=""nofollow noreferrer"">.gitignore file</a>:</p>
<pre><code>/*
!/Scripts/
!/.static/
!/.config/i3/
!/.vim/autoload/

!.bashrc_extension
!.vimrc
</code></pre>
<p>The <a href=""https://i.stack.imgur.com/mMP46.png"" rel=""nofollow noreferrer"">following files</a> are found as untracked or modified in my repo -- notice <code>.vim/autoload</code> is listed but not <code>.config/i3</code>, which should also be listed:</p>
<pre><code>.static
.vim/autoload
Scripts
.bashrc_extension
.gitignore
.vimrc
</code></pre>
","4","12085352","",""
"34142664","1021426","2015-12-07 20:33:18","1","99","<git><gitignore>","Ignore an untracked file without changing .gitignore","<p>I want to ignore one specific untracked/new file without having to edit the .gitignore file for the repo. We'll call it <code>src/foo.xml</code>.</p>

<p>I have tried:</p>

<pre><code>git update-index --assume-unchanged src/foo.xml
git update-index --skip-worktree src/foo.xml
</code></pre>

<p>Both of which told me <code>Fatal: Unable to mark file src/foo.xml</code>, which I'm guessing is because it's not tracked in the first place.</p>

<p>I also tried adding <code>src/foo.xml</code> to .git/info/exclude. When that didn't work, I tried changing it to <code>/src/foo.xml</code>, then <code>C:/work/myproject/src/foo.xml</code>, neither of which worked.</p>

<p>In all cases, if I do <code>git status</code>, foo.xml still shows up as an untracked file to be added.</p>

<p>If I add <code>src/foo.xml</code> to the .gitignore file, it gets ignored as expected, but then I'm changing .gitignore which is exactly what I'm trying to avoid.</p>
","4","1021426","",""
"17640160","1031417","2013-07-14 14:14:08","3","5700","<linux><git><gitignore><gitattributes>","Is it possible to make .gitignore configurable based on environment variables?","<p>Is it possible to add to .gitignore rules depends on environment variables?</p>

<p>for example</p>

<pre><code>if -e $(ENV_VAR) ""AAA""
!liba.so
else
liba.so
</code></pre>

<hr>

<p>Basically what I want is to have a repository such that <code>if ENV_VAR = ""AAA""</code> the local repository will have <code>a.txt</code> and if <code>ENV_VAR</code> isn't set the a.txt will be removed. </p>
","12","1031417","0","0"
"34189794","2659189","2015-12-09 21:59:29","1","289","<git><gitignore>",".gitignore all bin folders only in some directory in subdirectories","<p>Here is a portion of my <code>.gitignore</code> (which was generated by Visual Studio):</p>

<pre><code>[Bb]in/

!src/NWatch_WebUI/buildtools/node_modules/*/[Bb]in/
</code></pre>

<p>I want to check in all the files in the <code>node_modules</code> folder, however, git is flagging any <code>bin</code> folder in the node_modules and deeper.</p>

<p>How do I get around this?</p>
","0","2659189","0","0"
"34219802","5612143","2015-12-11 09:13:13","1","4034","<git><gitignore>","How to ignore an executable file in linux that does not have an extension in .gitignore?","<p>I have a C++ code and after executing it in codeblocks, it generate another two files(ugly.o, and ugly). The latter doesn't have an extension and it is executable. I can ignore it manually by typing in <code>.gitignore</code> as <code>ugly</code>. However it is not a dynamic way. I have to explicitly add another filename in .gitignore when I created a new one. Do you know other ways to make it dynamic, that will treat any file that does't have an extension will be ignored?</p>
","1","5612143","",""
"34230191","3330814","2015-12-11 18:27:41","41","35463","<xcode><github><cocoapods><gitignore>","Added pod files and pushed. How to undo? how to use gitignore in Xcode & github?","<p>This is a two part question:
1) I have added committed and pushed all pod files to github. Is there a way I can remove them and not push them again to github?</p>

<p>2) I know gitignore can help, but I don't know how to use it. Can anyone please walk me through the process of using gitignore? </p>

<p>so I think what I can do is, get the project from github, add gitignore, and then push again. is that correct? </p>

<p>Please help, new to github &amp; Xcode. </p>
","0","3330814","0","0"
"34239392","5662769","2015-12-12 11:39:41","1","2094","<ruby-on-rails><gitignore>",".gitignore not ignoring files","<p>Here is my .gitignore file:</p>

<pre><code># See https://help.github.com/articles/ignoring-files for more about ignoring files.
#
# If you find yourself ignoring temporary files generated by your text editor
# or operating system, you probably want to add a global ignore instead:
#   git config --global core.excludesfile '~/.gitignore_global'

# Ignore bundler config.
/.bundle

# Ignore the default SQLite database.
/db/*.sqlite3
/db/*.sqlite3-journal

# Ignore all logfiles and tempfiles.
/log/*
!/log/.keep
/tmp

# Ignore application configuration
/config/application.yml
/config/application.yml.bak
*.bak
</code></pre>

<p>Now, my repository is at <a href=""https://github.com/rmohan80/learn-rails"" rel=""nofollow"">https://github.com/rmohan80/learn-rails</a></p>

<p>Why would my latest commit -- ""add configuration for email"" add Readme.rdoc.bak but ignore .gitignore.bak</p>

<p>Any clues?</p>
","0","5662769","",""
"17724494","305189","2013-07-18 13:13:19","2","1235","<git><gitignore><git-add>","git add -A vs git add file","<p>I got into the habit of using <code>.gitignore</code> and always doing <code>git add -A</code>, <code>git status</code> to check the modified files, then commit, so I don't need to remember about the files that I have modified and other developers don't need to know which files are ignored.</p>

<p>I still see other people doing <code>git add files</code> for each modified file.</p>

<p>So I was wondering whether there is any advantage of adding each file.</p>

<p>The question is: why not always using <code>git add -A</code> ?</p>
","0","305189","0","0"
"17732175","973155","2013-07-18 19:22:27","0","1061","<asp.net-mvc><asp.net-mvc-3><git><gitignore>",".gitignore debug files in asp.net mvc project","<p>I have an ASP.NET MVC3 application. To get everything started, I created a new repo and pushed ""all"" my changes as the initial commit. This initial commit also contained all the debug files that were generated when I was creating / testing my project (before committing). </p>

<p>How do I add the debug files in my <code>.gitignore</code> file? </p>

<p>I want to ignore all changes in the following directories. This is also what I have in my <code>.gitignore</code> file </p>

<pre><code>my_project/bin
my_project/obj
</code></pre>
","0","973155","",""
"34295738","5566387","2015-12-15 17:32:32","0","779","<xcode><git><github><gitignore>","Remove file types from the .gitignore file","<p>I accidentally added .h files to the gitignore file and need help deleting that file type off of the ignore list. My xcode builds are not finding necessary files because of them being removed. </p>

<p>I am fine with removing the file type or deleting the whole thing. I am on a mac. </p>

<p>Thanks! </p>
","2","5566387","",""
"50799300","9925478","2018-06-11 13:48:13","1","1140","<git><github><filepath><gitignore>","How do I Include ampersand (&) in CODEOWNERS github file","<p>The path of the directory is like:</p>

<p><code>helpers resources/apples &amp; oranges/testing files/</code></p>

<p>I've tried surrounding the entire path in quotes.</p>

<p>I've tried <code>helpers\ resources/apples\ \&amp;\ oranges/testing\ files</code>.</p>

<p>I've tried url encoding the path.</p>

<p>Escaping the spaces in other paths is working fine and the CODEOWNERS file works properly if I remove the path with the <code>&amp;</code>.</p>
","2","9925478","",""
"34314103","3668625","2015-12-16 14:04:17","1","78","<git><symfony><gitignore>","Why is /bin/ added to .gitignore in a symfony2 project? Or is it okay for me to push /bin/ to a remote repo?","<p>The other day <a href=""https://stackoverflow.com/questions/34271297/how-to-setup-a-basic-symfony2-project-after-cloning-it-from-github"">I had trouble setting up a cloned symfony2 project</a>. I soon discovered all my adversity stemmed from not having the /bin/ folder in my project. After I copy/pasted the /bin from another project, everything worked.</p>

<p>So now I'm considering to remove it from .gitignore to make it problem free to clone it again to another computer in the future.</p>

<p>Is there ANY good reason at all why I wouldn't do this? And why has /bin/ been added to .gitignore in the first place when it creates complications when installing after a clone?</p>
","2","3668625","",""
"57526004","5540925","2019-08-16 14:02:19","-1","232","<swift><xcode><git><gitignore>","How to add storyboard canvas orientation in git ignore in Xcode","<p>I know this seems really obvious question but I have gone through a lot of different git ignore files but still I am unable to control this one file.
<strong>What is the issue?</strong>
<a href=""https://i.stack.imgur.com/MVhIF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/MVhIF.png"" alt=""enter image description here""></a></p>

<p><a href=""https://i.stack.imgur.com/AawJo.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/AawJo.png"" alt=""enter image description here""></a></p>

<p><strong>How it occurred?</strong> 
I just changed the one view controller's position in the storyboard.</p>

<p><strong>What I need?</strong>
Any possible way to add this file into git ignore so that I can avoid these simple merge conflicts? Also, I cannot add this storyboard into git ignore because I want to reflect the changes in View Controllers which I actually made. On my previous macbook, it was working fine, no idea why the same git ignore is not working anymore?</p>
","2","5540925","",""
"69157866","12279445","2021-09-13 05:52:38","3","813","<ios><git><flutter><gitignore>","Why ios/build folder is not included to .gitignore file?","<p>Why ios/build is not included to gitignore by default?</p>
<pre><code>Untracked files:
  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)
        ios/build/
</code></pre>
<p><code>/.gitignore</code> file</p>
<pre><code># Miscellaneous
*.class
*.log
*.pyc
*.swp
.DS_Store
.atom/
.buildlog/
.history
.svn/

# IntelliJ related
*.iml
*.ipr
*.iws
.idea/

# The .vscode folder contains launch configuration and tasks you configure in
# VS Code which you may wish to be included in version control, so this line
# is commented out by default.
#.vscode/

# Flutter/Dart/Pub related
**/doc/api/
**/ios/Flutter/.last_build_id
.dart_tool/
.flutter-plugins
.flutter-plugins-dependencies
.packages
.pub-cache/
.pub/
/build/

# Web related
lib/generated_plugin_registrant.dart

# Symbolication related
app.*.symbols

# Obfuscation related
app.*.map.json

# Android Studio will place build artifacts here
/android/app/debug
/android/app/profile
/android/app/release

/lib/credentials.dart
</code></pre>
<p><code>/ios/.gitignore</code> file:</p>
<pre><code>*.mode1v3
*.mode2v3
*.moved-aside
*.pbxuser
*.perspectivev3
**/*sync/
.sconsign.dblite
.tags*
**/.vagrant/
**/DerivedData/
Icon?
**/Pods/
**/.symlinks/
profile
xcuserdata
**/.generated/
Flutter/App.framework
Flutter/Flutter.framework
Flutter/Flutter.podspec
Flutter/Generated.xcconfig
Flutter/app.flx
Flutter/app.zip
Flutter/flutter_assets/
Flutter/flutter_export_environment.sh
ServiceDefinitions.json
Runner/GeneratedPluginRegistrant.*

# Exceptions to above rules.
!default.mode1v3
!default.mode2v3
!default.pbxuser
!default.perspectivev3
</code></pre>
","1","12279445","0","0"
"57571331","6855617","2019-08-20 10:10:39","0","161","<git><visual-studio-code><gitignore>","Cannot include a file from an excluded directory with .gitignore on Vs Code","<p>I have a directory in VS Code which is excluded with <code>.gitignore</code> .
Let's name this directory <code>txt_files</code>.</p>

<p>In this directory i have a file which i would like to be included in my git thought. Let's name this file <code>file.txt</code></p>

<p>This is what's my <code>.gitignore</code> file looks like.</p>

<pre><code>#ignore /venv files 
/venv

#ignore vscode files 
.vscode

# txt_files_folder
/txt_files

# include this file
!/txt_files/file.txt
</code></pre>

<p>but when i hit <code>git status</code> i get no updates to add <code>/txt_files/file.txt</code>.</p>

<p>What am i doing wrong ? </p>
","0","6855617","",""
"34344772","3476826","2015-12-17 21:42:01","2","1545","<gitignore>","gitignore does not ignore .DS_Store files","<p>why gitignore does not ignore .DS_Store files ? </p>

<p>this is my .gitignore file</p>

<pre><code>#Directory based project format
.idea

# Ignore Mac DS_Store files
**/.DS_Store

#node modules for grunt
node_modules

#files generated with grunt
src/app.js
</code></pre>

<p>this works for node modules and src/app.js perfect, but does not ignore DS_Store. </p>

<p>Can anybody tell me why ? </p>
","2","3476826","",""
"17809135","385387","2013-07-23 11:38:38","1","106","<git><version-control><gitignore>","How can I gitignore everything except *.txt?","<p>For example. I have a directory containing a mix of txt files and binaries of various extensions, and I only want to version-control the *.txt files</p>
","0","385387","",""
"17811757","1178797","2013-07-23 13:34:33","3","1162","<git><maven><gitignore>","Why git don't ignore contents of surefire-reports\ folder in maven target folder?","<p>Git correctly ignores everything in my target folder (maven) except folder ""surefire-reports"".</p>

<p>My .gitignore:</p>

<pre><code># Java
*.class
.idea/

# Package Files
*.jar
*.war
*.iml
*.ucls
target/
</code></pre>

<p>But files in target\surefire-reports\ still tracked by git. See git status output:</p>

<pre><code># On branch connectionPane
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   target/surefire-reports/TEST-navalwar.ConsolePlayerTest.xml
#   modified:   target/surefire-reports/navalwar.ConsolePlayerTest.txt
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   gitstatus.txt
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>There are other folders and file in target\ but git don't track them!</p>
","0","1178797","0","0"
"19580313","773896","2013-10-25 02:53:52","3","2941","<javascript><git><api><heroku><gitignore>","How do I deploy to heroku from git when my API key is in a .gitignore file?","<p>I have my API key set to a variable in an apikey.js file, and I reference the variable in another javascript file where the API key is supposed to be. </p>

<p>I added apikey.js to .gitignore so that people wouldn't see it when I pushed it to my (public) github account. </p>

<p>However, when I try to deploy, the app doesn't work because of the .gitignore.</p>

<p>How can I continue to push up files omitting the API key to my repo on git while deploying on heroku?</p>
","1","773896","0","0"
"38706055","3290180","2016-08-01 18:51:02","0","361","<android><git><maven><gitignore><repository-design>","Git: what to write into .gitignore file for this kind of repository?","<p>What to put into .gitignore if the repo is a folder containing a set of different projects? they are Android Studio's, Maven's and developed on many OS.</p>

<p>After a research I think to put these lines, please tell me if there are mistakes or you have better ideas:</p>

<pre><code> **/*~
 *.com
 *.class
 *.exe
 *.o
 *.so
 *.DS_Store
 *.DS_Store?
 *._*
 *.Spotlight-V100
 *.Trashes
 *ehthumbs.db
 *Thumbs.db
 *desktop.ini

 *.apk
 *.ap_
 *.dex
 *.class
 *bin/
 *gen/
 *out/
 *.gradle/
 *build/
 *local.properties
 *proguard/
 *.log
 *.navigation/
 *captures/
 *.iml
 *.idea/workspace.xml
 *.idea/libraries
 */.idea/tasks.xml

*target/
*pom.xml.tag
*pom.xml.releaseBackup
*pom.xml.versionsBackup
*pom.xml.next
*release.properties
*dependency-reduced-pom.xml
*buildNumber.properties
*.mvn/timing.properties
</code></pre>
","2","3290180","",""
"57667119","920504","2019-08-27 02:51:45","2","2936","<angular><file><gitignore>","gitIgnore for .history angular project","<p>Why is gitignore not working for me?
Why are files in .history folder not getting ignored?</p>

<p><a href=""https://i.stack.imgur.com/96gcV.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/96gcV.png"" alt=""enter image description here""></a></p>
","0","920504","0","0"
"19666479","903143","2013-10-29 18:35:30","6","10126","<git><commit><gitignore>","gitignore settings included in commit","<p>I'm trying to commit the right files in git, but having problems configuring my gitignore properly. I followed the instructions <a href=""http://www.gyford.com/phil/writing/2010/09/29/django-environment.php"" rel=""noreferrer"">here</a> to create the gitignore file (django project):</p>

<pre><code># File types #
##############
*.pyc
*.swo
*.swp
*.swn

# Directories #
###############
logs/

# Specific files #
##################
projectname/settings.py

# OS generated files #
######################
.DS_Store
ehthumbs.db
Icon
Thumbs.db
*~
</code></pre>

<p>The problem is that settings.py is getting included in the commit:</p>

<pre><code>Admin$ git add .
Admin$ git status
# On branch master
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#   modified:   projectname/settings.py
</code></pre>

<p>How can I ignore settings in my gitignore? </p>
","1","903143","0","0"
"19684620","551045","2013-10-30 14:10:38","2","3650","<git><gitignore>",".gitignore not ignoring filenames with spaces in them on `git status`","<p>When I do a <code>git status</code> I get:</p>

<pre><code>#       modified:   COM/config/Config/Edit Project Settings.lnk
</code></pre>

<p>But in my .gitignore I have:</p>

<pre><code>*.lnk
</code></pre>

<p>What is going on here? Could it be a problem with whitespaces?</p>
","0","551045","",""
"19688577","413254","2013-10-30 16:31:46","6","2821","<android><intellij-idea><gradle><libraries><gitignore>","add .idea/libraries to .gitignore with Android Studio (and Gradle) a good idea?","<p>With the change to the Gradle build system, I've noticed a bunch of *.xml files added to the .idea/libraries project directory. I'd assume this is how Android Studio/IntelliJ links libraries to the project.</p>

<p>Is it ok/recommended to add .idea/libraries to .gitignore? Since gradle handles all dependencies, I'd think either way these would be added/overwritten. Hoping for some confirmation.</p>
","0","413254","",""
"38817808","73137","2016-08-07 19:36:46","0","266","<java><eclipse><git><gitignore>","Files to be included in gitignore list for an Eclipse Project","<p>What files and directories should I add to my <code>.gitignore</code> file for a java applet style eclipse project? </p>

<p>Later if I clone these projects on a different computer, I should be able to build an eclipse project with minimal effort. </p>

<p>Below is the directory structure of my project. </p>

<pre><code>./.classpath
./.DS_Store
./.project
./build
./build/2.5_week.atom
./build/airports.dat
./build/blankDark-1-3.mbtiles
./build/blankLight-1-3.mbtiles
./build/city-data.json
./build/countries.geo.json
./build/demos
./build/demos/Airport.class
./build/demos/EarthquakeCityMapDemo.class
./build/demos/LifeExpectancy.class
./build/demos/LocationTester.class
./build/demos/MyDisplay.class
./build/demos/MyPApplet.class
./build/demos/Person.class
./build/demos/SearchAndSort.class
./build/demos/SimpleLocation.class
./build/demos/Student.class
./build/HelloUCSDWorld.class
./build/hs_err_pid28422.log
./build/hs_err_pid28889.log
./build/java.policy.applet
./build/LifeExpectancyWorldBank.csv
./build/LifeExpectancyWorldBankModule3.csv
./build/module1
./build/module1/HelloWorld.class
./build/module3
./build/module3/EarthquakeCityMap.class
./build/module4
./build/module4/CityMarker.class
./build/module4/EarthquakeCityMap.class
./build/module4/EarthquakeMarker.class
./build/module4/LandQuakeMarker.class
./build/module4/OceanQuakeMarker.class
./build/module5
./build/module5/CityMarker.class
./build/module5/CommonMarker.class
./build/module5/EarthquakeCityMap.class
./build/module5/EarthquakeMarker.class
./build/module5/LandQuakeMarker.class
./build/module5/OceanQuakeMarker.class
./build/module6
./build/module6/AirportMap.class
./build/module6/AirportMarker.class
./build/module6/CityMarker.class
./build/module6/CommonMarker.class
./build/module6/EarthquakeCityMap.class
./build/module6/EarthquakeMarker.class
./build/module6/LandQuakeMarker.class
./build/module6/LifeExpectancy.class
./build/module6/OceanQuakeMarker.class
./build/OfflineMapApp.class
./build/palmTrees.jpg
./build/parsing
./build/parsing/ParseFeed.class
./build/quiz1.atom
./build/quiz2.atom
./build/routes.dat
./build/sortAndPrint.test2.out.txt
./build/test1.atom
./build/test1.out.txt
./build/test2.atom
./build/test2.out.txt
./data
./data/2.5_week.atom
./data/airports.dat
./data/blankDark-1-3.mbtiles
./data/blankLight-1-3.mbtiles
./data/city-data.json
./data/countries.geo.json
./data/LifeExpectancyWorldBank.csv
./data/LifeExpectancyWorldBankModule3.csv
./data/palmTrees.jpg
./data/quiz1.atom
./data/quiz2.atom
./data/routes.dat
./data/sortAndPrint.test2.out.txt
./data/test1.atom
./data/test1.out.txt
./data/test2.atom
./data/test2.out.txt
./lib
./lib/core.jar
./lib/gluegen-rt-natives-linux-amd64.jar
./lib/gluegen-rt-natives-linux-armv6hf.jar
./lib/gluegen-rt-natives-linux-i586.jar
./lib/gluegen-rt-natives-macosx-universal.jar
./lib/gluegen-rt-natives-windows-amd64.jar
./lib/gluegen-rt-natives-windows-i586.jar
./lib/gluegen-rt.jar
./lib/jogl-all-natives-linux-amd64.jar
./lib/jogl-all-natives-linux-armv6hf.jar
./lib/jogl-all-natives-linux-i586.jar
./lib/jogl-all-natives-macosx-universal.jar
./lib/jogl-all-natives-windows-amd64.jar
./lib/jogl-all-natives-windows-i586.jar
./lib/jogl-all.jar
./lib/json4processing.jar
./lib/libTUIO.jar
./lib/log4j-1.2.15.jar
./lib/sqlite-jdbc-3.7.2.jar
./lib/unfolding.0.9.7-uscd.jar
./LICENSE.txt
./README
./src
./src/demos
./src/demos/Airport.java
./src/demos/EarthquakeCityMapDemo.java
./src/demos/LifeExpectancy.java
./src/demos/LocationTester.java
./src/demos/MyDisplay.java
./src/demos/MyPApplet.java
./src/demos/Person.java
./src/demos/SearchAndSort.java
./src/demos/SimpleLocation.java
./src/demos/Student.java
./src/HelloUCSDWorld.java
./src/module1
./src/module1/HelloWorld.java
./src/module3
./src/module3/EarthquakeCityMap.java
./src/module4
./src/module4/CityMarker.java
./src/module4/EarthquakeCityMap.java
./src/module4/EarthquakeMarker.java
./src/module4/LandQuakeMarker.java
./src/module4/OceanQuakeMarker.java
./src/module5
./src/module5/CityMarker.java
./src/module5/CommonMarker.java
./src/module5/EarthquakeCityMap.java
./src/module5/EarthquakeMarker.java
./src/module5/LandQuakeMarker.java
./src/module5/OceanQuakeMarker.java
./src/module6
./src/module6/AirportMap.java
./src/module6/AirportMarker.java
./src/module6/CityMarker.java
./src/module6/CommonMarker.java
./src/module6/EarthquakeCityMap.java
./src/module6/EarthquakeMarker.java
./src/module6/LandQuakeMarker.java
./src/module6/LifeExpectancy.java
./src/module6/OceanQuakeMarker.java
./src/OfflineMapApp.java
./src/parsing
./src/parsing/ParseFeed.java
</code></pre>

<p>What files can be safely ignored so that I can build these projects later on a different machine? Can I ignore the <code>.jar</code> files? I <a href=""https://stackoverflow.com/questions/116121/should-i-keep-my-project-files-under-version-control/119377#119377"">found</a> <a href=""https://stackoverflow.com/questions/30865009/gitignore-for-folder-of-eclipse-projects"">that</a> it is safe to have my <code>.classpath</code> and <code>.project</code> in Git. My <a href=""https://stackoverflow.com/questions/16736856/what-should-be-in-my-gitignore-for-an-android-studio-project"">current</a> <code>.gitignore</code> file has these items. </p>

<pre><code>.DS_Store
doc/
bin/
gen/
build/

*.html
*.log
*.class
</code></pre>
","2","73137","",""
"38862074","3550480","2016-08-09 23:37:31","1","62","<git><gitignore>","gitignore include specific subfolder","<p>I code in Python and like to include virtual envs inside my project folder. So, I have to put a line in .gitignore to prevent it from tracking venv. But, there is a particular subfolder inside of venv that I want to keep track of.</p>

<p>This isn't working: </p>

<p><code>.gitignore</code></p>

<pre><code>venv
!venv/lib/python2.7/site-packages/nhlscrapi
</code></pre>
","0","3550480","",""
"57822597","2511413","2019-09-06 13:03:36","0","174","<npm><gitignore><yarnpkg><gem-fury>","Gemfury omits folder from package when it is in .gitignore","<p>The company I work for hosts packages on Gemfury. I've recently joined development on a JavaScript repository. Everything seems pretty standard, but I noticed quickly the build artifacts were being checked into source control. So without thinking twice, I added the dist-folder to <code>.gitignore</code>.</p>

<p>However, since then, the package hosted on Gemfury no longer contain this folder when we do a release. I've encountered this problem before with NPM packages, and was always able to solve it by adding an <code>.npmignore</code> file where the dist folder is not mentioned. This however doesn't help in this case, and neither does adding a ""files"" area in <code>package.json</code> (all files mentioned there show up in the package, except the dist folder).</p>

<p>I'm not entirely sure how Gemfury creates the package. The way use Gemfury is to push source to it (add Gemfury as remote, and <code>git push fury master</code>), and Gemfury supposedly picks up that it needs to do a build, and claims to be successful in this task:</p>

<pre><code>Initializing build: done.
-----&gt; Building package...
       npm package build detected
       Packing my-project-1.0.0.tgz
-----&gt; Pushing to ""my-company"" account
       my-project-1.0.0.tgz ... ok
-----&gt; Done!
</code></pre>

<p>That's all I've been able to find out, and I have no idea how I can make the dist-folder reappear. Adding it back to source control is not something I want to do, for obvious reasons.</p>

<p>The repository uses yarn and contains the following build script in <code>package.json</code>:</p>

<p><code>""build"": ""babel src -d dist -D""</code></p>
","2","2511413","",""
"19827602","2792678","2013-11-07 03:40:21","1","444","<php><git><cakephp><version-control><gitignore>","CakePHP - gitignore","<p>If I plan on deploying my cakePHP application on my server which automatically gets its files from git, should I delete the gitignore file? I do not want necessary files not being uploaded to my server, because then my application won't function correctly.</p>
","0","2792678","0","0"
"19941488","1172720","2013-11-12 22:43:25","5","2072","<git><libgdx><gitignore>","What should be in my .gitignore for libGDX auto-generated default project?","<p>So far I've got </p>

<pre><code>bin/
gen/
war/
*.apk
/.settings/
*.class
</code></pre>

<p>But I know I'm missing loads because log files are getting into the repo. I keep seeing conflicting things about this, some people say keep the gen/ folder, and I found <a href=""http://code.google.com/p/libgdx-users/source/browse/.gitignore"" rel=""noreferrer"">a gitignore in the libgdx github</a> with this(which I'm not sure if it's just for the actual library's git):</p>

<pre><code># android specific 
# */gen/*   ### we want these!


### eclipse files we DO want 
    # local.properties 
    # */.loadpath 
    # classpath 
    # settings 
</code></pre>

<p>Anyways, this library seems like quite the big deal, so someone must have <strong><em>The</em></strong> .gitignore file for libGDX projects.</p>
","2","1172720","0","0"
"35048399","1012181","2016-01-27 21:28:12","0","1941","<git><laravel><gitignore>",".gitignore the database file in laravel","<p>I'm sharing my Laravel project with another co-worker. But he's using Mac and I'm using Windows. So there's specific change to his <code>database.php</code> file which is only for Mac mamp. How can I ignore this file from the version controlling? Should I add this file path in the <code>.gitignore</code> at the root directory?</p>
","4","1012181","",""
"57928552","","2019-09-13 18:16:58","1","516","<node.js><npm><gitignore><ignore>","gitignore all node_modules directories and subdirectories","<p>If I put this in .gitignore:</p>

<pre><code>node_modules
</code></pre>

<p>it doesn't appear to ignore subdirectories that contain a node_modules folder.
So my guess is that this will work:</p>

<pre><code>*/node_modules/
</code></pre>

<p>does anyone know what the right syntax is for ignore files to ignore matching subfolders?</p>
","0","","",""
"18570926","568884","2013-09-02 10:25:52","43","13364","<git><gitignore>","Do git update-index --assume-unchanged rules propagate to clients on pull?","<p>There are instances where I can't use a <code>.gitignore</code> file, otherwise, on <code>git push</code>, critical files are purged from the remote. In these cases, I apply <code>git update-index --assume-unchanged &lt;file&gt;</code> to the files that I want to ignore.</p>

<p>After applying the assume-unchanged rules and calling <code>git push</code>, will these rules be attached to the remote branch so that all subsequent pulls (from other clients) will inherit them? Or, must these clients also run the <code>git update-index --assume-unchanged &lt;file&gt;</code> commands individually at their machines?</p>

<p>If the commands are not inherited -- has anybody written a server hook for this before? Instead of mandating that all current and future clients safeguard against it?</p>
","4","568884","0","0"
"57960498","513413","2019-09-16 15:55:00","0","548","<android><git><android-studio><gitignore>",".gitignore doesn't ignore my files after I changed them","<p>I have a bunch of files that should not be under version control. However, if I don't bring them under version control then my build fails. As those files contain key/value content, I added those files in but replaced the actual values with a fake value. Therefore, I am able to get my build passed and also I have not those actual key/value under VC. I committed this change into the VC. I also put the list of those file under .gitignore file like this:</p>

<pre><code>/app/src/main/assets/*.json
/app/src/main/assets/*.kt
</code></pre>

<p>Now the problem is that In order to test my change I need to replace those fake files/values with the actual ones. However, by doing so, I get those files in the list of changed files when I run <code>git status</code>.</p>

<p>I clearly added them under <code>.gitignore</code> so why I see them here again? This is what I see:</p>

<pre><code>hesam(dev)$ git status
On branch dev
Your branch is up to date with 'origin/dev'.

Changes not staged for commit:
  (use ""git add &lt;file&gt;..."" to update what will be committed)
  (use ""git restore &lt;file&gt;..."" to discard changes in working directory)
    modified:   app/src/main/assets/EmergencyContacts.json
    modified:   app/src/main/assets/LocationOfSites.json
    modified:   app/src/main/assets/LocationOfHospitals.json
    modified:   app/src/main/assets/LocationOfOffices.json
</code></pre>
","5","513413","",""
"35054164","1326692","2016-01-28 06:21:11","1","482","<windows><git><gitignore>","gitignore file pattern not working","<p>I have dynamic directory structure like,</p>

<pre><code>dependency
  a
    b
  c
    d  e
  f
    g
      h
</code></pre>

<p>I want to ignore all files under dependency folder recursively except <strong><code>.xml</code></strong> files.</p>

<p>I am using below pattern to achieve the same.</p>

<pre><code>dependencies/**
!dependencies/**/*.xml
</code></pre>

<p>But it seems it's not working for me. It's ignoring all the files but accepting only <code>.xml</code> files which are <strong>directly</strong> inside the dependency folder, <strong>not recursively</strong>. :(</p>

<p>I am using below environment.<BR>
<strong>OS</strong> : Windows 7(64 bit)<BR>
<strong>Git</strong> : 2.6.1.windows.1<BR></p>

<p>Can anyone help me?</p>
","1","1326692","0","0"
"3511312","261251","2010-08-18 10:56:46","12","11295","<windows><linux><git><symlink><gitignore>","Ignore symbolic links in .gitignore","<p>Is it possible to tell Git to ignore symlinks ? I'm working with a mixed Linux / Windows environment and, as you know, symlinks are handled very differently between the two.</p>
","9","261251","0","0"
"5765645","365256","2011-04-23 17:08:02","622","222706","<git><gitignore>","Should you commit .gitignore into the Git repos?","<p>Do you think it is a good practice to commit <code>.gitignore</code> into a Git repo?</p>
<p>Some people don't like it, but I think it is good as you can track the file's history. Isn't it?</p>
","3","365256","0","0"
"64195554","6419679","2020-10-04 14:00:12","0","86","<git><gitignore>","Trouble with "".gitignore""","<p>I would like to ignore some particular files from committing bundle,
so included them into project's &quot;.gitignore&quot; file:</p>
<pre><code>MDK-ARM/test1_prj/
!MDK-ARM/test1_prj/*.hex
!MDK-ARM/test1_prj/*.axf
MDK-ARM/JLinkLog.txt
</code></pre>
<p>But unfortunately, the last line doesn't work, and consistently included in commits, can't explain why.</p>
<p>Another question is how to ignore changing .gitignore itself (except hiding 'em)</p>
<p><em>PS: Briefly saying I want to exclude all compiling and debugging junk except the resulting files.</em></p>
","1","6419679","0","0"
"47177588","1961186","2017-11-08 10:43:37","1","333","<git><gitignore>",".gitignore file for visual studio 2012 .net project","<p>I have the classic .gitignore file for visual studio .net project but when I build my project these files are traced like modified. Do you think it's right to ignore them? If yes how to fix my .gitignore file? Thanks</p>

<p>Here the file traced like modified
- IEO_v1\bin\MakingWaves.EPiImage.dll
- IEO_v1\bin\MakingWaves.EPiImage.pdb
- IEO_v1\obj\Release\Package\PackageTmp\Resources\LanguageFiles\Viewes.xml
- MakingWaves.EPiImage\7.x\bin\MakingWaves.EPiImage.dll
- MakingWaves.EPiImage\7.x\bin\MakingWaves.EPiImage.pdb</p>

<p>Here my .gitignore</p>

<pre><code>## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/

# Visual Studio 2015 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUNIT
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/
**/Properties/launchSettings.json

*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding add-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup &amp; report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Typescript v1 declaration files
typings/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# JetBrains Rider
.idea/
*.sln.iml

# CodeRush
.cr/

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/
</code></pre>
","0","1961186","",""
"68945326","722393","2021-08-26 21:10:37","1","2142","<git><gitignore>","How to use .gitignore to ignore everything in a directory except one file?","<p>I've found several purported solutions to this problem here on SO, but for some unknown reason none of them work for me.</p>
<p>I need to ignore everything in a given folder except for one particular file. Easy, right? Not so fast.</p>
<p>I've tried most every suggested answer for each of these questions:</p>
<ul>
<li><a href=""https://stackoverflow.com/q/987142"">Make .gitignore ignore everything except a few files</a></li>
<li><a href=""https://stackoverflow.com/q/5241644"">Using .gitignore to ignore everything but specific directories</a></li>
<li><a href=""https://stackoverflow.com/q/33520079"">Make .gitignore ignore everything except one file</a></li>
<li><a href=""https://stackoverflow.com/q/36203525"">.gitignore - Ignore everything in a directory except one file</a></li>
<li><a href=""https://stackoverflow.com/q/39450654"">How to ignore everything in a directory except one file</a></li>
<li><a href=""https://stackoverflow.com/q/22896230"">gitignore everything except specific files</a></li>
</ul>
<p>...but I'm no further along than when I started.</p>
<p>Here's the path to the file to include:</p>
<pre><code>D:\Projects\Website\Website\bin\Settings.json
</code></pre>
<p>The repo is at:</p>
<pre><code>D:\Projects\Website
</code></pre>
<p>My <code>.gitignore</code> file was generated by Visual Studio, so it contains this entry:</p>
<pre><code>[Bb]in/
</code></pre>
<p>According to many of the answers to the questions above, I should be able to do something like this:</p>
<pre><code>!/Website/[Bb]in/Settings.json
</code></pre>
<p>...but that doesn't work. The file is still ignored.</p>
<p>None of these permutations do the trick:</p>
<pre><code>!*/Settings.json
!**/Settings.json
![Bb]in/Settings.json
![Bb]in/**/Settings.json
![Ww]ebsite/[Bb]in/Settings.json
!Website/bin/Settings.json
!/Website/bin/Settings.json
</code></pre>
<p>I've also tried putting a separate <code>.gitignore</code> file in <code>bin</code>:</p>
<pre><code># Don't block Settings.json
!Settings.json
!.gitignore
</code></pre>
<p>No luck.</p>
<p>How can I block everything in <code>[Bb]in</code> except for the <code>Settings.json</code> file?</p>
<ul>
<li><p>Expected result:
<code>Website\bin\Settings.json</code> is not ignored</p>
</li>
<li><p>Actual result:
<code>Website\bin\Settings.json</code> continues to be ignored</p>
</li>
</ul>
","7","722393","",""
"19210770","103190","2013-10-06 15:55:05","21","8161","<git><gitignore><libreoffice>","How can I tell git to ignore LibreOffice lock files?","<p>I have a git repo which contains some XSLX files. I edit them with LibreOffice every once in a while. Sometimes LibreOffice won't remove the lock files ( <code>./folder/.~lock.filename.xslx#</code>). This causes those files to be liested as new on every <code>git status</code>. </p>

<p>I would like git to ignore them. I tried the following in <code>.gitignore</code> but doesn't seem to work:</p>

<pre><code>*.~lock*
.~lock*
*/.~lock*
</code></pre>

<p>Any ideas?</p>

<p><strong>UPDATE</strong></p>

<p>Also tried:</p>

<pre><code>.~lock.*#
</code></pre>

<p>As seen in <a href=""http://lists.freedesktop.org/archives/libreoffice-commits/2012-December/040253.html"">http://lists.freedesktop.org/archives/libreoffice-commits/2012-December/040253.html</a>
with no success.</p>
","5","103190","0","0"
"69467990","532647","2021-10-06 14:51:38","2","79","<elixir><gitignore><elixir-mix>","Escript files and .gitignore","<p>I'm going through the <code>Programming Elixir</code> book and currently got to the point of creating a little console using <code>mix escript.build</code> (similar to this documentation example: <a href=""https://hexdocs.pm/mix/Mix.Tasks.Escript.Build.html#module-example"" rel=""nofollow noreferrer"">https://hexdocs.pm/mix/Mix.Tasks.Escript.Build.html#module-example</a>)</p>
<p>Now, it produces an executable <code>myprojname</code> in the project folder, which is cool and good.</p>
<p>BUT I really don't want to track executables in source control.</p>
<p>Coming from .NET, I'm used to <code>.gitignore</code> just ignoring anything under the <code>/bin</code> path, but the binary Elixir generates is:</p>
<ul>
<li>in the project root</li>
<li>has a different name in every project</li>
</ul>
<p>What's the best practice for <code>.gitignore</code>-ing escript files in Elixir project?</p>
<p>So far I've added this line to <code>.gitignore</code> and it works:</p>
<pre><code>myprojname
</code></pre>
<p>But is there a better way that I'm missing? (In .NET, pretty much all projects have the same .gitignore file, because anything to be ignored is usually under a pre-defined path such as <code>/bin</code>, <code>/obj</code> etc. or has an extension like <code>.solutionuseroptions</code>.</p>
","0","532647","",""
"19241568","1997433","2013-10-08 07:24:02","1","55","<git><gitignore>","How can fix the git ignore faltal","<p>I use git as my vcs.</p>

<p>I have a reports folder, and add it in the git control, now I don't want trace this folder, then I add git ignore file, but it seems like git still trace this folder.</p>

<p>I search by Google, some web pages suggest <code>git rm --cached filename</code>, I run it, but get one fatal message <code>pathspec 'filename' did not match any files</code>.</p>

<p>How can fix this problem? And let git don't track these files?</p>

<p>My folder is this:</p>

<p>reports</p>

<p>|--readme.txt</p>

<p>|--report.html</p>

<p>|--screenshots</p>

<p>|----failed.png</p>

<p>And my .gitignore file is this</p>

<pre><code>report/*.html
report/screenshots/
</code></pre>
","4","1997433","",""
"69477113","16693223","2021-10-07 07:33:51","0","75","<ios><xcode><gitignore>","why gitignore my file is not adding up in iOS project?","<p>In my iOS swift project I have MyView.swift which I don't want to commit so I want to add it in <code>.gitignore</code> file.. so I have added <code>MyView.swift</code> in <code>gitignore</code> but in source tree it appearing every time when I make changes... I also try putting <code>MyProject/MyView.swift</code> in <code>.gitignore</code> but no luck</p>
","3","16693223","",""
"69483464","235472","2021-10-07 15:04:59","1","249","<git><repository><gitignore><git-commit>","Can I make a file in the git repository read-only?","<p>If I add a filename to gitignore, this will be ignored by git and will not go in the repository. What I would like to do is to have a specific file in the upstream repository, allow everybody to check it out and modify it according to their needs, but then exclude it from their commits.</p>
<p>Basically I would like the repository to provide a template configuration file that needs to be fine tuned depending on the development environment of each developer, but that must not be modified in the repository.</p>
","2","235472","",""
"19323566","2792038","2013-10-11 17:02:59","3","1044","<git><gitignore>","Git selectively ignoring despite gitignore file","<p>So, I've set up my global .gitignore file to ignore all files with the .iml ending. However, for some reason it's not ignoring one particular iml file. I've got my ignore file and the </p>

<pre><code>~/projects/dhub
calebsutton$cat /home/calebsutton/.gitignore
*.iml

~/projects/dhub
calebsutton$git status
# On branch DM-481
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#   new file:   app/web/src/main/java/com/wellcentive/integration/page/sourcetype/SourceTypeActionPage.java
#   new file:   app/web/src/main/java/com/wellcentive/integration/page/sourcetype/SourceTypeListPage.java
#   new file:   app/web/src/main/java/com/wellcentive/integration/page/sourcetype/grid/SourceTypeListGrid.java
#
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   app/web/src/main/java/com/wellcentive/integration/page/sourcetype/grid/SourceTypeListGrid.java
#   modified:   app/web/web.iml
#
</code></pre>
","0","2792038","0","0"
"35566563","2054434","2016-02-23 00:22:40","2","560","<git><bitbucket><gitignore>",".gitignore not ignoring my files and folders","<p>I don't know exactly when it started, but now my <code>.gitignore</code> doesn't work anymore.  my <code>git push origin master</code> now send every single file / folder to the remote repository (bitbucket)</p>

<p>I'm using windows, and my file type is <code>File GITIGNORE</code>  </p>

<p>Content:  </p>

<pre><code>/vendor
/node_modules
.env
</code></pre>

<p>Already tried this and every other possible solution I could find through google search:  </p>

<pre><code>git rm -r --cached .
git add .
git commit -m ""fixed untracked files""  
</code></pre>

<p>Don't know what else to try. Is it possible that my GIT is NOT well configured and somehow it's not reading the <code>.gitignore</code> file ?  </p>

<p><em>obs:</em> Maybe one curious fact. If I run:<br>
<code>git status</code>  </p>

<p>I get </p>

<blockquote>
  <p>On branch master
  nothing to commit, working directory clean</p>
</blockquote>

<p>Even with a new fresh empty repository. Does it mean something ?</p>
","6","2054434","0","0"
"35569995","5333147","2016-02-23 06:01:46","-1","26","<android-studio><gitignore>","What's the relationship between .gitignore and Dialog of Configure Ignored Files in Android Studio?","<p>I ususally added rules in .gitignore.But today I find there is a Dialog to ignore file.</p>

<p>Do I need to use Dialog of Configure Ignored Files if I put all rule in .gitignore?Or is it better to use the dialog.</p>

<p><a href=""https://i.stack.imgur.com/9dXbs.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/9dXbs.png"" alt=""enter image description here""></a></p>
","0","5333147","",""
"19354936","1357998","2013-10-14 06:56:35","4","2282","<asp.net-mvc><github><gitignore>","Where do I put the gitignore file in a asp.net mvc project?","<p>Hey I am pretty new to git and realized that the bin and debug should not be included when pushing the project. Could anyone tell me where the gitignore file should go? If any one had examples of a basic gitignores for such a project that would also be great! Thanks</p>
","0","1357998","0","0"
"69495041","12224228","2021-10-08 11:21:45","0","21","<git><webstorm><gitignore>","When committing changes WebStorm IDE doesn't ignore files specified in .gitignore","<p>In .gitignore file I have this</p>
<pre><code>#dependencies
/node_modules
</code></pre>
<p>to ignore <code>node_modules</code> folder when committing changes but WebStorm IDE keeps showing changes in the <code>node_modules</code> folder. Anyone encountered this?</p>
<p><a href=""https://i.stack.imgur.com/icgcG.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/icgcG.png"" alt=""enter image description here"" /></a></p>
<p>I tried this: <a href=""https://gist.github.com/pavankjadda/2bb6fbdd8786e1f57fd7bcbcc666b51d"" rel=""nofollow noreferrer"">https://gist.github.com/pavankjadda/2bb6fbdd8786e1f57fd7bcbcc666b51d</a>
But it didn't help</p>
","2","12224228","",""
"19383946","323456","2013-10-15 14:35:45","0","62","<git><gitignore>","gitignore wierdness: check-ignore shows file is ignored, but file shows as modified","<p>git status shows this:</p>

<pre><code># On branch master
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       modified:   InstructorsMvc/InstructorsMvc.Publish.xml
#       modified:   QiActivationMvc/QiActivationMvc.Publish.xml
#       modified:   QiMvc/QiMvc.Publish.xml
#
</code></pre>

<p>but I'm like... uh wait... my Publish.xml files (used by VS Ftp Deploy) are supposed to be ignored!</p>

<p>So I type <code>git check-ignore InstructorsMvc/InstructorsMvc.Publish.xml --verbose</code>:</p>

<pre><code>.gitignore:118:*.[Pp]ublish.xml "".\\InstructorsMvc\\InstructorsMvc.Publish.xml""
</code></pre>

<p>So the file is correctly ignored in gitignore on line 118, but shows modified?</p>

<p>Um... what am I doing wrong here...?</p>
","0","323456","",""
"19391327","938782","2013-10-15 21:21:39","9","5332","<git><gitignore><glob>","Regex-like shell glob patterns for gitignore","<p>When I compile my C++ project, many shared object files are created with extensions such as</p>

<pre><code>.so
.so.0
.so.7
.so.0.7
</code></pre>

<p>I need to add all those to my <code>.gitignore</code> file. Were this a regex, I could use</p>

<pre><code>\.so[\.0-9]*
</code></pre>

<p>However, <a href=""http://git-scm.com/docs/gitignore"" rel=""noreferrer"">the documentation</a> says that <code>.gitignore</code> </p>

<blockquote>
  <p>treats the pattern as a shell glob suitable for consumption by <code>fnmatch(3)</code> with the <code>FNM_PATHNAME</code> flag</p>
</blockquote>

<p>I found no way to do what I want with the <code>fnmatch</code> documentations I found. Is there really no way to do this?</p>
","3","938782","0","0"
"19409158","2887292","2013-10-16 16:48:44","3","2765","<git><github><cloud><gitignore><cloud9-ide>","How to use gitignore on c9.io for adding .c9revisions/ folder","<p>How can i edit gitignore on Cloud9 (c9.io) so i can add the .c9revisions/ folder to it to avoid adding it to my repo on github.</p>

<p>Everytime i use git config --global core.excludesfile ~/.gitignore_global it just does not do anything, can anyone help me out with that, thank you. </p>
","0","2887292","0","0"
"59393792","7721525","2019-12-18 14:07:14","0","38","<gitignore>","What's the possible usage of "".gitignore~"" in a gitignore file?","<p>I can't understand it's usage because tilde is not a metacharacter in Regular expression.</p>

<p>I saw it here:</p>

<p><a href=""https://github.com/spring-guides/tut-rest/blob/master/.gitignore"" rel=""nofollow noreferrer"">https://github.com/spring-guides/tut-rest/blob/master/.gitignore</a></p>

<p><a href=""https://github.com/spring-guides/tut-rest/commit/a086df26fd7e6b54b369d4fa0b45522c9bc3a570#diff-a084b794bc0759e7a6b77810e01874f2"" rel=""nofollow noreferrer"">https://github.com/spring-guides/tut-rest/commit/a086df26fd7e6b54b369d4fa0b45522c9bc3a570#diff-a084b794bc0759e7a6b77810e01874f2</a></p>
","0","7721525","",""
"35603769","34134","2016-02-24 13:38:29","1","52","<dart><gitignore><dart-pub>","Should I be adding .pub/bin dir into .gitignore","<p>When creating a Dart library and running my tests, I noticed there's a <code>.pub</code> dir with a <code>.pub/bin/test</code> subdir in it. Should I be adding <code>.pub</code> dir into .gitignore? It doesn't look like something that needs to be in the repo, but I'd like to double check, thus the question.</p>
","0","34134","",""
"61045349","13215289","2020-04-05 15:57:36","9","22665","<linux><git><ubuntu><gitignore>","How to edit gitignore file","<p>I started TheOdinProject on Ubuntu 18.4 and in the Git section it tells me to edit the .gitignore file. I already created it using <code>touch .gitignore</code> and it is showing up when i type <code>ls -la</code> but I don't see it in Files. In the video <a href=""https://www.youtube.com/watch?v=HVsySz-h9r4"" rel=""noreferrer"">https://www.youtube.com/watch?v=HVsySz-h9r4</a> that is referenced the file is already open and there isn't an explanation on how to open it.
<strong>How do I open the .gitignore file from Terminal in order to add something like <code>.DS_Store</code> in it?</strong></p>
","2","13215289","0","0"
"51193722","2824791","2018-07-05 14:22:18","0","386","<git><visual-studio><gitignore>","Can't get git to ignore App_Data mdf file in VS","<p>I have an App_Data folder in my Visual Studio web project.
I have commmitted a *.mdf to the repository and referenced it in web.config:</p>

<pre><code>  &lt;connectionStrings&gt;
    &lt;add name=""foo"" providerName=""System.Data.SqlClient"" connectionString=""Data Source=(localdb)\MSSQLLocalDB;AttachDbFileName=|DataDirectory|\foo.mdf;Integrated Security=True;MultipleActiveResultSets=True;Connection Timeout=30"" /&gt;
  &lt;/connectionStrings&gt;
</code></pre>

<p>When I do a fresh pull from the repository, my project starts and mounts the database. </p>

<p>I do not want to modify this database as part of check-ins.</p>

<p>However, if the database is modified by debugging the app, the *.mdf file appears as a ""Change"".
I added **/App_Data to .gitignore, but it still keeps seeing those files.</p>

<p>I thought it might be a lock problem, but I verifid this happens when there are no locks on files.</p>

<p>If I add a txt file to the folder git ignores it. </p>

<p>Any ideas ???</p>
","4","2824791","",""
"24620108","119592","2014-07-07 21:23:00","10","18680","<git><gitignore>","Show all ignored files in git","<p>I'm having problems with <code>git ls-files --others --ignored --exclude-standard</code> not listing some ignored files. </p>

<p>My project has this directory structure</p>

<pre><code>.
├── aspnet
│   ├── .gitignore
│   ├── __init__.py
│   ├── lib
│   │   ├── &lt;lots of big stuff&gt;
</code></pre>

<p>The <code>aspnet/.gitignore</code> lists <code>lib/*</code>, and <code>git add aspnet/lib/foo</code> reports that this path is ignored. </p>

<p>But <code>git ls-files --others --ignored --exclude-standard</code> does not list the files under <code>lib</code>. These are untracked files, they show up in output if I do <code>git ls-files --others</code>, but not if I provide the ignored flag.</p>

<p>Using git version 1.7.9.5</p>

<p>Edit: works as expected with git version 1.8.5.2 (Apple Git-48), this seems to be a git bug</p>
","3","119592","0","0"
"51209731","4957619","2018-07-06 11:44:01","3","412","<git><gitignore>",".gitignore not working properly for excluding sub folders","<p>I ignore all files except for some folders as shown below in the .gitignore file.</p>

<pre><code>  *
  !.gitignore
  !/sample1/test1/
  !sample1/test1/*
</code></pre>

<p>My issue is , it only keeps track of files under test1 folder which already exist , when i make new file, it ignores to track it.</p>

<p>may i know any solution ?</p>
","0","4957619","",""
"51223302","7123166","2018-07-07 12:36:22","1","780","<git><gitignore>","Exclude folder from .gitignore rule","<p>I have a project where I want to exclude all the pesky *.png files but still want to include the when they are in a specific folder. Essentially, I want to not apply the *.png rule in this folder.
My first attempt did not work.</p>

<pre><code>*.png
!results/*
</code></pre>

<p>Precisely, how to disable certain rules in certain folders?</p>
","4","7123166","0","0"
"26336709","876603","2014-10-13 09:27:29","150","67509","<android><git><android-studio><gitignore>","Android studio - should the entire .idea directory be in git ignore?","<p>I saw a lot of examples for <code>.gitignore</code> files for <strong>AndroidStudio</strong>, some have <code>.idea</code> in them, and some don't.</p>

<p>Is there a good reason not to add the entire .idea dir to .gitignore?</p>

<p>If it should not be completely ignored, are there specific files inside .idea (such as .iml) that should be in .gitignore? </p>
","2","876603","0","0"
"10176875","","2012-04-16 15:16:06","230","131665","<git><gitignore>","Add .gitignore to gitignore","<p>Is it possible to add the <code>.gitignore</code> file to <code>.gitignore</code> itself?</p>

<pre><code>.gitignore
</code></pre>

<p>Doesn't work though</p>

<p>I don't want to see it in edited files</p>
","6","","0","0"
"69552943","9654273","2021-10-13 09:27:18","0","71","<git><gitignore>","How to exclude from git everything except files with specific extension, recursively when some intermediary dir names look like file names?","<p>I'm trying to exclude from a git repository everything except <code>.asd</code> files. The files may be at any level of the directory hierarchy, and <strong>any directory at any level may or may not contain dots in their name</strong>, making them look like file names in that sense.</p>
<p>For example:</p>
<p>Set up repository and some directory structure:</p>
<pre><code>$ mkdir repository &amp;&amp; cd repository &amp;&amp; git init &amp;&amp; touch .gitignore
$ mkdir -p foo/fooo/foooo/fooooo.srcs/fooooo bar/barr.srcs/barr/barrr foo/fooo/foooo/fooooo.cache/fooooo
</code></pre>
<p>Add some <code>.asd</code> files at various levels in the tree that we want to include:</p>
<pre><code>$ touch foo/file1.asd foo/fooo/foooo/fooooo.srcs/file2.asd bar/barr.srcs/file3.asd bar/barr.srcs/barr/barrr/file4.asd foo/fooo/file5.asd
</code></pre>
<p>Majority of the contents of the parent directory hosting the repository is random stuff. The stuff may be files of all sorts of unknown types etc, so specifically declaring everything that should be ignored is not desirable. It is easier (or should be) to declare what we want to include. Add some random stuff:</p>
<pre><code>$ touch huge.pdf asd.yo foo/fooo/foooo/fooooo.cache/foo.txt foo/fooo/foooo/fooooo.cache/fooooo/asd.sh bar/intro.pptx
</code></pre>
<p>With an empty .gitignore, all is included:</p>
<pre><code>$ git status -u -s
?? .gitignore
?? asd.yo
?? bar/barr.srcs/barr/barrr/file4.asd
?? bar/barr.srcs/file3.asd
?? bar/intro.pptx
?? foo/file1.asd
?? foo/fooo/file5.asd
?? foo/fooo/foooo/fooooo.cache/foo.txt
?? foo/fooo/foooo/fooooo.cache/fooooo/asd.sh
?? foo/fooo/foooo/fooooo.srcs/file2.asd
?? huge.pdf
</code></pre>
<p>I've tried among other the following <code>.gitignore</code>:</p>
<pre><code>*.*
!*/**/*.asd
</code></pre>
<p>which only includes <code>file1.asd</code> and <code>file5.asd</code> missing the other 3 <code>.asd</code> files that are within some directories that contain dots in their names. Trying to specifically add one of them reveals the issue:</p>
<pre><code>$ git add foo/fooo/foooo/fooooo.srcs/file2.asd
The following paths are ignored by one of your .gitignore files:
foo/fooo/foooo/fooooo.srcs
Use -f if you really want to add them.
</code></pre>
<p>So is it even possible to only see <code>.asd</code> files using only <code>.gitignore</code> in this kind of repository structure? After all the thing pursued here is more of a &quot;.gitinclude&quot; thing which I guess doesn't exist. Of course I could just forget about trying to define the relevant git scope in <code>.gitignore</code> and instead just use <code>git add *.asd</code> in place of <code>git add .</code> but that is not so nice. E.g. VS Code's git extension stays too colorful then as it considers all the irrelevant files in git's scope too.</p>
","0","9654273","",""
"51285348","6381081","2018-07-11 12:20:52","2","6754","<git><gitignore>","How to stop tracking the content of a directory in git?","<p>I have a directory named <code>img</code>. I want to that directory be exits on the repo, but always it should be empty. I mean just the content of that directory should be untracked.</p>

<p>Here is a simplified of my project:</p>

<pre><code>myproject/
    .git/
    application/
    public/
        img/
            img1.jpg
            img2.jpg
    vendor/
    composer.json
    composer.lock
</code></pre>

<p>I want to make it like this on repository:</p>

<pre><code>myproject/
    .git/
    application/
    public/
        img/
    vendor/
    composer.json
    composer.lock
</code></pre>

<p>How can I do that?</p>

<hr>

<p>According to some researches, I have to use <code>.gitignore</code> file. But how? Should I make a <code>.gitignore</code> file on the root of project and write this in it?</p>

<pre><code>// .gitignore file
public/img/*
</code></pre>

<p>Or should I make a <code>.gitignore</code> inside <code>img</code> directory? If yes should I write what thing in it?</p>

<hr>

<p>Ok, now I got a new problem. Let's explain what I want to do exactly. <strong>Here is the scenario:</strong></p>

<p>I develop my website locally and push it on the github repository. Then I go in the server and do a <code>git pull</code>. Also there is an <code>img</code> directory that contains all user's avatars. All I'm trying to do is to keep the real-users avatar on <code>img</code> directory. If I put the whole <code>img</code> directory inside <code>.gitignore</code>, then avatars won't be created <em>(because of lack of <code>img</code> directory)</em>. If I exclude the content of <code>img</code> directory, then all current user's avatars will be gone when I do a new git pull. Any idea how can I handle such a situation?</p>
","2","6381081","",""
"51291719","1263822","2018-07-11 18:00:38","1","1072","<git><gitignore><git-extensions>","GitExtensions not respecting .gitignore","<p>I am using Windows 10 64-bit and Git Extensions 2.51.01</p>

<p>I have added the <em>.gitignore</em> file from <a href=""https://github.com/github/gitignore/blob/master/VisualStudio.gitignore"" rel=""nofollow noreferrer"">https://github.com/github/gitignore/blob/master/VisualStudio.gitignore</a> to the .gitignore folder in the root of my git repository, including</p>

<pre><code>[Bb]in/
[Oo]bj/
</code></pre>

<p>And git extensions's commit dialog shows far too many files, including many in bin and obj folders. I don't have the ""Show Ignored files"" option activated.</p>

<p>These are files that have not been added to the repository and have + icons next to them.</p>

<p>If I use Git Extensions's ""add to gitignore"" right-click option and then enter bin/ and click ""Ignore"" I get the following error appear:</p>

<pre><code>System.UnauthorizedAccessException: Access to the path ... is denied.
at System.IO.__Error.WinIOError(Int32 errorCode, String maybeFullPath)
at System.IO.FileStream.Init(String path, FileMode mode, FileAccess access, Int32 rights, Boolean useRights, FileShare share, Int32 bufferSize, FileOptions options, SECURITY_ATTRIBUTES secAttrs, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
at System.IO.FileStream..ctor(String path, FileMode mode, FileAccess access, FileShare share, Int32 bufferSize, FileOptions options, String msgPath, Boolean bFromProxy, Boolean useLongPath, Boolean checkHost)
at System.IO.StreamWriter.CreateFile(String path, Boolean append, Boolean checkHost)
at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding, Int32 bufferSize, Boolean checkHost)
at System.IO.StreamWriter..ctor(String path, Boolean append, Encoding encoding)
at
GitUI.CommandsDialogs.FormAddToGitIgnore.&lt;&gt;c__DisplayClass8_0.&lt;AddToIgnoreClick&gt;b__0(String x)
at
GitUI.CommandsDialogs.FormAddToGitIgnore.AddToIgnoreClick(Object sender, EventArgs e)
</code></pre>
","4","1263822","",""
"49125719","8521990","2018-03-06 07:44:03","0","205","<reactjs><console><gitignore>","React app: API key kept in gitignored file returning undefined","<p>This really should be simple, but I'm working on a react web app and have a google API key in a file outside of the src directory called credentials.js, and the file is listed in .gitignore.</p>

<p>As a test, I'm importing the credentials.js in search_bar.js and just consoling out the API key just to see if I am able to pass it, but I get ""undefined"" as the log. I've tried a bunch of suggestions I found on the web but no luck. What am I doing wrong? The actual key is redacted below.</p>

<pre><code>//appName/credentials.js
(I've tried adding a semi colon at the end)

export const GOOGLE_API_KEY = 'redacted'


//appName/.gitignore

credentials.js


//appName/components/search_bar.js


import React, { Component } from 'react';
import GOOGLE_API_KEY from '../../credentials.js';

class SearchBar extends Component {

  constructor(props) {
    super(props);
    this.state = { term: '' };
  }

  render() {
      return (
        &lt;div&gt;
          &lt;input
            value={this.state.term}
            onChange={event =&gt; {console.log(GOOGLE_API_KEY)}}
          /&gt;
        &lt;/div&gt;
      );
  }
}

export default SearchBar;
</code></pre>
","0","8521990","",""
"51349901","6540193","2018-07-15 15:50:59","2","298","<git><gitignore>","How to know which part of .gitignore that is actually responsible for ignoring some file?","<p>Say I have <code>.gitignore</code>:</p>

<pre><code>x64/
x86/
bin/
obj/
FileA
FileB
FileC
etc..
</code></pre>

<p>Now when I build, all build files that I want to ignore, are actually being ignored. However, the build fails for a missing file (Call it FileX).</p>

<p>When I add FileX to the project, it builds fine with no errors. However, GIT does not see that I added that file, and when I do <code>git status --ignored</code>, I see the file under <code>untracked files</code>.</p>

<p>I tried the solution in <a href=""https://stackoverflow.com/questions/17195861/undo-git-update-index-assume-unchanged-file"">undo git assume unchanged</a> with no success.</p>

<p>Why this file is being ignored and I did not add it to .gitignore?</p>
","1","6540193","0","0"
"51408402","10067458","2018-07-18 18:05:13","15","2956","<c#><.net><git><azure-devops><gitignore>","vsts new repo has a gitignore option for many platforms/languages but not .net/c#","<p>I noticed that VSTS has an ""Add a .gitignore"" dropdown with many different platforms/languages options for selection. For example, I could select the option of ""Ruby"" which I'm assuming would provide a default filter for all file types in a compiled Ruby project which should generally not be checked in to a git repo. However, no option exists in the dropdown for .NET/C#.  Does VSTS include some type of equivalent gitignore file within C#/.NET files by default?  Or is there some type of default global filter build into VSTS which enforces this?</p>
","2","10067458","",""
"51410403","8298798","2018-07-18 20:21:59","5","97","<git><gitignore>","How can I ignore everything in a git repository subdirectory except a single file?","<p>I have a repository with a subdirectory called mod/. I want this subdirectory to be included in the repository along with a README file within it, but I do not want other subdirectories within mod/ to be included. I have tried several fixes proposed <a href=""https://stackoverflow.com/questions/1274057/how-to-make-git-forget-about-a-file-that-was-tracked-but-is-now-in-gitignore"">here</a> using .gitignore and committing changes, but <code>git status</code> still shows everything in mod/ is being tracked. Currently, my .gitignore contains:</p>

<pre><code>mod/* # Ignore everything in 'mod'...
!mod/README.md # ... except this.
</code></pre>

<p>But I have also tried setting the first line to:</p>

<pre><code>/mod
mod/
./mod
./mod/*
</code></pre>

<p>and a few other variations...</p>

<p>To 'apply' these settings each time I edit .gitignore, I run:</p>

<pre><code>git rm -r --cached .  
git add .gitignore
git add mod/README.md
git commit -m ""banging my head on the wall""
git status
</code></pre>

<p>and the status continues to show untracked files in mod/.</p>
","2","8298798","",""
"51414730","6856548","2018-07-19 05:07:21","0","1191","<angular><git><gitignore><angular6>","Error: Cannot find module './gitignore'","<p>I have created a angular 6 project. When I run ng build or ng serve I get this error : </p>

<pre><code>Cannot find module './gitignore'
Error: Cannot find module './gitignore'
    at Function.Module._resolveFilename (module.js:536:15)
    at Function.Module._load (module.js:466:25)
    at Module.require (module.js:579:17)
    at require (internal/module.js:11:18)
    at Object.&lt;anonymous&gt; (F:\Centralogic\my-project\node_modules\globby\index.js:6:19)
    at Module._compile (module.js:635:30)
    at Object.Module._extensions..js (module.js:646:10)
    at Module.load (module.js:554:32)
    at tryModuleLoad (module.js:497:12)
    at Function.Module._load (module.js:489:3)
</code></pre>

<p>I have tried deleting and adding it from another project. 
Also tried clearing cache and running npm install.</p>

<p>What have I missed?</p>
","5","6856548","",""
"51445487","6396407","2018-07-20 15:06:02","0","33","<git><gitignore>","Make git ignore files that other memebers don't","<p><br>
I have an unusual question for a git users: <br> 
I want to be a members of a git project which means that I want to be able to pull and push code to/from the repository while maintaining my own version of few files of the project which should not be pushed or pulled to the repository.<br>
My ideal scenario would be one where when I push on git, I upload anything I have changed but not few predefined files, and when I pull, I download everything which is changed but not the just mentioned files. <br> I googled around finding that <strong>"".git/info/exclude""</strong> might help me, but I did not manage to make it work as I intended. So far, the only way I found that seemed to do what I intended, is use <strong>""git update-index --assume-unchanged ""</strong>, but in order to do so, I must issue the command each time I push or pull anything to the repository. <br><br>Is there any cleverer way to accomplish this?</p>
","2","6396407","",""
"51450306","472501","2018-07-20 20:59:49","4","101","<git><gitignore>","Any way to have a versioned and unversioned .gitignore in the same folder?","<p>I have a situation where I am creating a ""starter theme"" let's say, and I'm creating the <code>.gitignore</code> file, however this <code>.gitignore</code> is what is controlling what files to add/ignore to the starter theme repo.</p>

<p>Problem is, when the starter theme repo is cloned and pulled down, I want a totally <em>separate</em> <code>.gitignore</code> file, not the same one.</p>

<p>So ideally I would be able to ignore <strong>this</strong> <code>.gitignore</code> file, and create a separate one that could then be pulled down for use with the starter theme.</p>

<p>Now obviously you won't be able to create two files with the same name, so what if anything is the best way to handle this?</p>

<p>Ideally it would be good for the actual <code>.gitignore</code> file to be the one that is to be used in the starter theme and there was another way I could control what files are ignored so they don't end up in the repo.</p>

<p>I'm aware of <code>git config core.excludesfile</code>; however I have read that this only has <strong>local</strong> effects and it wouldn't carry over to other users; on top of that, the <code>.gitignore</code> file that is to be used in the actual repo will ignore a lot more, so I don't see how having that file around is going to work.</p>

<p>Perhaps the only way to handle this is to create a secondary ignore file, but name it something like <code>.gitignore-rename-me</code> and then ignoring the actual one itself so it doesn't end up in the starter theme?</p>
","0","472501","0","0"
"36656867","3940003","2016-04-15 21:09:44","12","8456","<android><android-studio><gitignore>","How to .gitignore app/app.iml in Android Studio project?","<p>No matter how I structure my .gitignore I can't seem to ignore app/app.iml via Android Studio 2.0.0.</p>

<p>So far, I've tried ignoring all *.iml files per the github's standard Android Studio .gitignore template, as well as targeting the file directly..</p>

<pre><code>app/app.iml
*.iml
</code></pre>

<p>Anybody run into a similar issue with this specific file or other *.iml files? How did you resolve it?</p>
","6","3940003","0","0"
"69602791","11498400","2021-10-17 09:05:00","3","42","<github><gitignore>","Why does GitHub create a .gitignore folder? bug or feature?","<p>I create a new repository (empty) using the GitHub webclient and then add a .gitignore using the Getting Started screen and choose a template.
When I commit the file, it creates the .gitignore file inside a .gitignore folder.</p>
<pre><code>reponame/.gitignore/.gitignore
</code></pre>
<p>But when I set the gitignore with a template on the &quot;Create a new repository&quot; screen it will be just the .gitignore file in the root folder.</p>
<pre><code>reponame/.gitignore
</code></pre>
<p>I'm relatively new to the gitignore concept so I would like to know, is this a bug or a feature I'm not aware of?</p>
","2","11498400","",""
"56705211","8067236","2019-06-21 14:18:47","1","915","<git><gitignore><pyc>","gitignore failing to ignore .pyc files in library","<p>My gitignore has the following lines</p>

<pre><code>__init__.cpython-36.pyc
functions.cpython-36.pyc
.DS_Store
__pycache__
*.pyc
</code></pre>

<p>But my git client is still registering changes to the pyc files</p>

<p><a href=""https://i.stack.imgur.com/K9NqG.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/K9NqG.png"" alt=""enter image description here""></a></p>

<p>After reading online I just don't understand what my problem is. Any ideas? Let me know if I need to provide more information. Thanks</p>
","1","8067236","",""
"56715799","7428072","2019-06-22 13:14:44","1","16474","<git><gitignore>","How to open .gitignore file in Git using any text editor installed in your local machine?","<p>I'm taking course on Udemy in Git, 
The instructor uses Pico texteditor to edit .gitignore file
I don't have it installed on my machine (Windows 10)</p>

<p>I'd like to know how to open .gitignore file using locally installed text editor using command line?</p>

<p>This is for Git 2.22.0.windows.1, I tried to open .gitignore file with Visual Studio Code (and wordpad) and got the error;</p>

<blockquote>
  <p>'Visual' is not recognized as an internal or external command,
  operable program or batch file.</p>
</blockquote>

<p>Here is what I wrote:</p>

<pre><code>VisualStudio Code .gitignore
</code></pre>
","4","7428072","",""
"73504877","18185259","2022-08-26 17:56:54","-1","307","<git><gitignore>","How to gitignore all .md files","<p>When I go to upload project, or update it on github, from git, I want to hide specific file type, all files of that kind of file, such as notes, .md files.</p>
","0","18185259","",""
"56751106","4262057","2019-06-25 09:43:18","31","8777","<git><github><google-cloud-platform><gitignore><gcloud>","How to include files in .gcloudignore that are ignored in .gitignore","<p>I have certain folders that I ignore in my <code>.gitignore</code> as I do not want it to be published on Github.</p>

<p>However, these files are essential for when deploying to Google Cloud (local packages).</p>

<p>If I take out <code>.gitignore</code> from <code>.gcloudignore</code> then the files that I do want to ignore (like <code>venv, .idea, .pyc</code>) are uploaded, which is what I do not want.</p>

<p>How can I there include only a portion of <code>.gitgnore</code> in <code>.gcloudignore</code>?</p>

<hr>

<p><strong>.gcloudignore</strong></p>

<pre><code>.gcloudignore
.git
.gitignore

node_modules
#!include:.gitignore
</code></pre>

<p><strong>.gitignore</strong></p>

<pre><code># This I want to ignore in .gcloudignore
.Python
env/
build/

# This I want to keep in .gcloudignore
module_data_import
module_calendar
</code></pre>
","1","4262057","0","0"
"73522466","18259274","2022-08-28 21:40:26","0","102","<git><gitignore>",".gitignore exception not working for one directory","<p>I have a <code>.gitignore</code> file in root directory</p>
<pre><code># Ignore everything in this directory
*
# Except this file
!.gitignore
!portal
!app.js
!node_modules
!README.md
</code></pre>
<p>All exceptions are working except for <code>portal</code>. I added <code>portal</code> later to this file (It wasn't there from the beginning). But <code>git add .</code> doesn't add that folder and its content. What is the problem?</p>
","0","18259274","",""
"56785749","1113684","2019-06-27 07:08:13","-1","508","<git><commit><gitignore><tracking>","What is the use of gitignore?","<p><em>This question is from rest of other question because it asks why .gitignore is useful compared to git commands?</em></p>

<p>I have recently started using git using command line. 
I created a local repo and created a file <code>test.txt</code> inside this repo.
Command <code>git status</code> tells me that <code>test.txt</code> is a untracked file. Command <code>git add test.txt</code> adds my file to be tracked. Then command <code>git commit -m ""message""</code> commits my tracked file.</p>

<p>My question is if i can already specify which files should be tracked and commit from commands then what is the use of .gitignore file? In which case should i use the .gitignore file?</p>
","5","1113684","",""
"73547255","3724989","2022-08-30 18:54:28","2","79","<git><gitignore>","how to omit the ""-f"" for ""git add"", if the previous version is already in git?","<p>I would like to track only a very restricted set of files, explicitly
added to the repository using &quot;git add -f&quot;. But how can I avoid having
to use the &quot;-f&quot; again and again for files that are already in?</p>
<p>Sample:</p>
<pre><code>% cat .gitignore 
/*

% git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use &quot;git restore --staged &lt;file&gt;...&quot; to unstage)
        modified:   playlists/README

% git add playlists/README
The following paths are ignored by one of your .gitignore files:
playlists
hint: Use -f if you really want to add them.
hint: Turn this message off by running
hint: &quot;git config advice.addIgnoredFile false&quot;

% git check-ignore -v playlists/README
% echo $?
1

% git commit -a -m &quot;fixed some typo&quot;
[master 039d616] fixed some typo
 1 file changed, 1 deletion(-)

% git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use &quot;git push&quot; to publish your local commits)

nothing to commit, working tree clean

% git version
git version 2.37.2
</code></pre>
<p>The playlists/README was explicitly mentioned on the command line, and yet I
have to use &quot;-f&quot;? git commit wasn't so picky.</p>
<p>Of course I checked the man page. It says</p>
<pre><code>   A gitignore file specifies intentionally untracked files that Git should
   ignore. Files already tracked by Git are not affected; see the NOTES
   below for details.
</code></pre>
<p>But the &quot;NOTES below&quot; didn't tell. playlists/README is already tracked, and yet it
was affected. Please excuse if I am too blind to see.</p>
<p>Every insightful comment is highly appreciated</p>
<p>Additional information:
Using</p>
<pre><code>*
!*/
</code></pre>
<p>in .gitignore I get</p>
<pre><code>% git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
  (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)
        modified:   .gitignore
        modified:   playlists/README

Untracked files:
  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)
        code/
        debian.old/
        origin/


It took 3.75 seconds to enumerate untracked files. 'status -uno'
may speed it up, but you have to be careful not to forget to add
new files yourself (see 'git help status').
no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)
</code></pre>
<p>git add was very weird:</p>
<pre><code>% git add .
warning: adding embedded git repository: code
hint: You've added another git repository inside your current repository.
hint: Clones of the outer repository will not contain the contents of
hint: the embedded repository and will not know how to obtain it.
hint: If you meant to add a submodule, use:
hint: 
hint:   git submodule add &lt;url&gt; code
hint: 
hint: If you added this path by mistake, you can remove it from the
hint: index with:
hint: 
hint:   git rm --cached code
hint: 
hint: See &quot;git help submodule&quot; for more information.
warning: adding embedded git repository: debian.old/raw-xbmc/raw-xbmc-13alpha8
warning: adding embedded git repository: origin

% git status
On branch master
Your branch is up to date with 'origin/master'.

Changes to be committed:
  (use &quot;git restore --staged &lt;file&gt;...&quot; to unstage)
        modified:   .gitignore
        new file:   code
        new file:   debian.old/raw-xbmc/raw-xbmc-13alpha8
        new file:   origin
        modified:   playlists/README

Changes not staged for commit:
  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
  (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)
  (commit or discard the untracked or modified content in submodules)
        modified:   debian.old/raw-xbmc/raw-xbmc-13alpha8 (modified content, untracked content)
</code></pre>
<p>Apparently unwanted files haven't been added.</p>
","4","3724989","",""
"56793697","3535729","2019-06-27 14:51:16","-1","51","<git><xpages><gitignore>","how to include a sub directory in a excluded directory in gitignore file?","<p>For my XPages application I have set a .gitignore file to exclude the directory where my javascript modules are installed via this definition:</p>

<pre><code>ODP/WebContent 
</code></pre>

<p>In that same WebContent folder I have a sub-directory WEB-INF with sub-directories that I want to include for SCM.</p>

<p>How can I do this?</p>
","2","3535729","0","0"
"73587068","13702898","2022-09-02 19:14:43","0","73","<react-native><gitignore>","How to set up gitignore file React Native build","<p>I am new to React Native CLI. I made my first build today, and while I was building I had to run grabble clean (not sure if it's related to the matter). I noticed that I got a lot of changes tracked, 1K+, changes I can't even group together semantically. I have a regula gitignore that looks like this:</p>
<p><a href=""https://i.stack.imgur.com/BkNkJ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/BkNkJ.png"" alt=""my gitignore file"" /></a></p>
<p><a href=""https://i.stack.imgur.com/Z6i7h.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Z6i7h.png"" alt=""files in my Source Control"" /></a></p>
<p>How should I configure my gitignore for these changes not to be tracked? Thank you!</p>
","0","13702898","",""
"73608091","10546172","2022-09-05 10:42:12","0","73","<git><visual-studio-code><gitignore>",".gitignore is being ignored by VSCode","<p>Whenever I make changes to our .gitignore file, it never gets tracked by VSCode. It still wants to commit, or if I include them, still ignores. Why is VSCode not listening to my file and the changes that i make there?</p>
<p><a href=""https://i.stack.imgur.com/Pd4VW.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Pd4VW.png"" alt=""VScode screenshot of gitignore"" /></a></p>
","9","10546172","",""
"73618836","19929688","2022-09-06 08:18:36","0","136","<github><gitignore>","How to recover files from .gitignore","<p>while uploading files to the repository in GitHub, I accidentally click to the button to ignore the files from the upload. Now these files are in a folder called '.gitignore'.
How can I recover these files?</p>
<p>I'm able to see and modify them, I just want to know how to upload them in the repository.</p>
<p>Thanks in advance</p>
","0","19929688","",""
"56882911","2391849","2019-07-04 07:39:59","1","48","<git><gitignore>","git ignore everything except files and folders under those folder matching a pattern","<p>I want git ignore to ignore everything except those files and folders which are subfolders of all folders matching a given name pattern.</p>

<p>example file structure:</p>

<pre><code> - .temp
 - stuff/
 - readme.txt
 - crap/pattern/more/stuff
 - crap/pattern/.temp
 - crap/pattern_test/
 - crap/more/pattern_test/

</code></pre>

<p>What I want to achieve is now something like:</p>

<pre><code>/*
/*/
!.gitignore
!*/pattern*/*
</code></pre>

<p>So from the top example I would like git to not ignore:</p>

<pre><code> - crap/pattern/*
 - crap/pattern/more/*
 - crap/pattern/more/stuff/*
 - crap/pattern_test/*
 - crap/more/pattern_test/*

</code></pre>

<p>Is that possible? I tried a lot of patterns without any success:</p>

<pre><code>!/pattern*/*
!/pattern*/
!*/pattern*/*
!*/pattern/*
...
</code></pre>
","0","2391849","",""
"39642527","5102638","2016-09-22 15:00:09","5","1851","<git><gitignore><tortoisegit>","git very slow with many ignored files","<p>I have set up a repository to include a working directory that has many tens of thousands of files, thousands of directories, with many Gb of data.  This directory is located on a samba share.  I only want to have a few dozen source files within this directory under version control.</p>

<p>I have set up the gitignore file thusly and it works:</p>

<pre><code># Ignore everything
*

# Except a couple of files in any directory
!*.pin
!*.bsh
!*/
</code></pre>

<p>Operations on the repository (such as commit) takes several minute to carry out.  This is too long to reasonably get any work done.  I suspect that the slowdown is because git is trawling through every directory looking for files that may have been updated.  </p>

<p>There are only a few locations in the working directory where I have files that I want to track, so I tried to narrow down the set of files to examine using this query:</p>

<pre><code>*
!/version_2/analysis/abcd.pin
!/version_2/analysis/*.bsh
!*/
</code></pre>

<p>This also works, but it is still just as slow as the less qualified gitignore.  I'm guessing it is that final line that is the killer, but no matter how I tried to make the unignore patterns be very specific, I always had to include that final wildcard clause in order for the process to find any files to commit.  </p>

<p>So my two part question is</p>

<p>1) Is there a better way to set up the gitignore file that will help speed up the commit process by only including the very narrow set of directories and file types that contain relevant results?</p>

<p>2) Is there some other tweaks to git or samba that are required to make this work more efficiently?</p>

<p>Thanks,</p>

<p>Tom</p>
","3","5102638","",""
"23047483","3327617","2014-04-13 19:35:48","0","546","<git><gitignore><git-add><rabbitvcs>","How to finally ignore a file in all sub-directories via .gitignore","<p>I know there are lots of duplicate questions but I'm fully confused. I should admit I'm completely new to Git. I'm using RabbitVCS, However, I edit the .gitignore file using gedit manually. That's what I have done:</p>

<ol>
<li>I have created a repository in Github.</li>
<li>I cloned it in my local computer using RabbitVCS.</li>
<li>I have pasted all files and folders of project into the repository.</li>
<li>I have created a <code>.gitignore</code> file in the root of repository which includes this pattern: <code>*~</code>.</li>
</ol>

<p><strong>I haven't commited anything yet</strong>.</p>

<p>I want to ignore all <code>~</code> and such other temp files in root and sub-directories. It ignores all files in root, but has no effect in sub-directories. When I want to commit using RabbitVCS, I can see them in the commit window.</p>

<p>I'm confusing because in Bazaar, we first add files, then commit them. But it Git, it seems we should just commit to add new files! Is it right?</p>

<p>What am I doing wrong? should I commit first?</p>
","8","3327617","",""
"43073908","221650","2017-03-28 15:37:17","0","48","<git><gitignore>","File included in .gitignore gets deleted from time to time with no apparent reason","<p>I have a file ignored with .gitignore, from time to time the file just dissapears.<br>
The file's inclusion in .gitignore is present in all the branches so I don't think switching branches is deleting it.<br>
Any idea what may happen with this?  </p>

<p>I think the file was tracked at some point but it's now untracked and ignored because it depends on the environment and each installation needs its own version.<br>
There is no deploy script that may be deleting it.  </p>

<p>Edit:<br>
I realized that master's <em>.gitignore</em> had global reference <code>env.php</code> and staging's <em>.gitignore</em> had local reference<code>subdir/env.php</code>, so maybe that was the issue.  </p>
","2","221650","",""
"24620969","2442227","2014-07-07 22:31:09","0","334","<git><version-control><gitignore><git-status>","Filter git status by not showing ignored files/folders","<p>Is there a way in git to filter git status by <strong>not</strong> showing ignored files/folders
I have gone through the documentation for .gitignore. I dint find any solution for this. 
I added few files and directories in .git/info/exclude file in order not to commit those files. (.pyc files, .class files etc)
However when I execute following command I can see which files are ignored. </p>

<pre><code>git status --ignored  
</code></pre>

<p>How ever I am searching for command that is exactly opposite to above command something pseudo like this:</p>

<pre><code>git status --showNotIgnoredFilesOnly
</code></pre>

<p>Is there a way in GIT to filter as mentioned above?</p>
","4","2442227","",""
"62915091","7732132","2020-07-15 12:41:19","3","58","<git><gitignore>","Is there a .gitnotice file?","<p>I have a directory where I want to keep track of only a few files out of many.
The <code>.gitignore</code> file would become unnecessarily long compared to a <code>.gitnotice</code>.
Is it possible to tell git to ignore everything except the designated files?</p>
","1","7732132","",""
"11508445","444255","2012-07-16 16:23:28","6","7534","<git><github><gitignore><smartgit>","How to ignore existing, committed files in git?","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/4633681/git-ignoring-version-controlled-files"">GIT: Ignoring Version-Controlled Files</a>  </p>
</blockquote>



<p>There are plenty of answers around <code>.gitignore</code> on Stackoverflow, still I haven't found an answer:</p>

<p>I have an existing git project, with a <code>readme.md</code> and a <code>sample_folder/</code>, both on top-level. I do want to remove these from my git(hub) repository in general. But I would like to ignore them, that is, preventing them to be pulled at all, in a certain cloned local repository, i.e. on a deployment machine.</p>

<p><code>.gitignore</code> I understand, is only about ignoring <em>non-committed</em> files? Frankly, I don't find anything around hiding (from pull+commit) stuff that already <em>is</em> committed...</p>

<p>In the days of Perforce I would simple exclude it from the respective 'client spec' (which is pretty close to a locally cloned repo):</p>

<pre><code>//whatever/myProject
-//whatever/myProject/readme.md
-//whatever/myProject/sample_folder
</code></pre>

<p>Sure, I could settle for a second branch where I simply delete readme and the entire sample folder. But then, I would have to keep merging over every tiny fix from 'develop'. Which is something, I would rather avoid... I'd rather prefer a local 'exception' over a (tracked) branch.</p>

<p>Also, I think <code>git rm --cached</code> whenever I do commits (which may also happen now and then from my 'deployment repo')...</p>
","3","444255","0","0"
"51788375","9559251","2018-08-10 14:09:58","0","178","<javascript><teamcity><webstorm><gitignore><code-inspection>","Cannot commit file that is NOT inside gitignore file","<p>I am trying to allow TeamCity do JavaScript code inspection by following this tutorial: <a href=""https://blog.jetbrains.com/teamcity/2012/06/javascript-code-inspection-server-side/"" rel=""nofollow noreferrer"">https://blog.jetbrains.com/teamcity/2012/06/javascript-code-inspection-server-side/</a></p>

<p>The problem is that the first step tells me to Share Scope in WebStorm and then commit it to source control. I have .idea/* added to gitignore file but right underneath to NOT ignore .idea/scopes/* where the necessary <code>.idea/scopes/JavaScript.xml</code> lives.</p>

<p>So eventually it looks like this</p>

<pre><code>.idea/*
!.idea/scopes/*
</code></pre>

<p>Even with this added to gitignore I still cannot commit my JavaScript.xml file. Has anyone came across this and knows how to fix/commit it?</p>

<p>It looks like the problem is with the !.idea/scopes/* bit because after running <code>git status --ignored</code> I can see <code>.idea/</code> on the list</p>
","0","9559251","",""
"69683079","7351363","2021-10-22 21:06:48","1","55","<git><gitignore>",".gitignore will not untrack a file after removing it from the working tree","<p>I am running into an issue whereby .gitignore will not ignore a file ('private/config.php').</p>
<p>The .ignore file is as follows:</p>
<pre><code>public/uploads/
logs/
private/config.php
</code></pre>
<p>The file was initially included in the tracked files so I removed it from the branch as follows, but as you will see from the <code>git ls-tree</code> command, it still shows in the list of tracked files...</p>
<pre><code>ubuntu@MYMACHINE:/var/www/gig$ git rm --cached private/config.php
rm 'private/config.php'
ubuntu@MYMACHINE:/var/www/gig$ git ls-tree -r main --name-only
.gitignore
README.md
private/config.php
private/initialize.php
[...]
</code></pre>
<p>Strangely, I run into the same issue when issuing the commands in the local folder:</p>
<pre><code>ubuntu@MYMACHINE:/var/www/gig/private$ git rm --cached config.php
fatal: pathspec 'config.php' did not match any files
ubuntu@MYMACHINE:/var/www/gig/private$ git rm --cached private/config.php
fatal: pathspec 'private/config.php' did not match any files
ubuntu@MYMACHINE:/var/www/gig/private$ git ls-tree -r main --name-only
config.php
initialize.php
</code></pre>
<p>Any clues on how to purge this file out of the tracked files?</p>
","0","7351363","",""
"57444352","988445","2019-08-10 17:41:49","0","196","<git><github><gitignore>","How can I make gitignore apply to a certain extension except those a certain folder?","<p>Our company has our projects in GitHub in a private organization. One of these projects, in Delphi, has a number of third-party libraries associated with it, contained in the same repository.</p>

<p>The nature of Delphi is that a .PAS file produces a .DCU file (compiled), and by nature, .DCU files are one of those things we don't want in GitHub (unnecessary and takes up space). In fact, when generating a new default .gitignore file for ""Pascal"", .DCU is among the things it ignores by default.</p>

<p>However, one of the third-party libraries does not include the original source (.PAS), but instead only the compiled (.DCU) files. So when we tried to clone this repo on another machine, that library was missing pretty much all the files it needed.</p>

<p>I found a few other questions here on SO similar to this topic, but those typically referred to ignoring <em>everything</em> except certain things. I tried this:</p>

<pre><code>!Path\to\a\folder\I\still\want\dcu\files\from\*.dcu
</code></pre>

<p>But it is still ignoring these files. </p>

<p>How can I make the git ignore file exclude all DCU files except for those in a particular directory and its subdirectories? </p>

<p>Note: This directory has many subdirectories, each of which has DCU files I want.  So I'd like this to be recursive rather than listing each folder individually.</p>
","1","988445","",""
"74217983","278851","2022-10-27 07:03:16","0","37","<git><gitignore>",".gitignore is ignoring all files in subdirectories","<p>I added my composer vendor folder in gitignore using the lines below:</p>
<pre><code>application/cache/*
public/uploads/*
application/config/credentials.php
application/logs/*
vendor/
.env
.DS_STORE
temp/
composer.lock
</code></pre>
<p>Thus it is excluding the vendor folder in the root of my application (same directory as <code>.gitignore</code> file)</p>
<p>However, it is also ignoring all files located at <code>/public/resources/member/js/vendor</code>.</p>
<p>How do I ensure that .gitignore only ignores the vendor folder at the root of the application ?</p>
","2","278851","",""
"57460706","11801787","2019-08-12 11:53:21","0","624","<visual-studio><github><gitignore>","How to enable .gitignore file in private repository in GitHub with GUI","<p>I can't uploud a project in private repository even I'have .gitignore file(where I made a mistake, because .gitignore doesn't work). Message is that I have more than a hundred files, and simply I can't uploud it in one piece, just one by one folder or file.</p>

<p>I have make a new private repository in GitHub, and at the start of making it's offering to make a gitignore file, so I done that step(I chose a Visual Studio gitignore file, and then I put all files I don't need, even a whole folders I don't need from my project I've made in VS). But problem is in uplouding folders after I make the repository. Every time I try to uploud it, I get a message that I have more than a hundred files. I've even opened a whole new private repository in case git alredy tracked the files in this one. And it seems nothing is working. I have reed all official documentacion about gitignore files in GitHub, I've seen a bunch of Youtube tutorials and tryed to make a gitignore file direct in VS but also doesn't work.
Maybe it's seems funy to most of you and it is probably a banal mistake but I just can't figure this out.
SENCE I'M A TOTAL BEGINNER please can anyone tell me where I make a mistake?</p>

<p>Here is a piece of my .gitignore file, most of it is official code, and it is very big.</p>

<ul>
<li>*.tlh</li>
<li>*.tmp</li>
<li>*.tmp_proj</li>
<li>*.log</li>
<li>*.vspscc</li>
<li>*.vssscc</li>
<li>.builds</li>
<li>*.pidb</li>
<li>*.svclog</li>
<li>*.scc</li>
<li>App_Data/</li>
<li>Content/</li>
<li>fonts/</li>
<li>Scripts/</li>
<li>*/favicon.ico</li>
<li>*/packages.config</li>
</ul>

<p>I just want my whole project uploud it in one piece without unnecessary files from VS.</p>

<ul>
<li>List item</li>
</ul>
","0","11801787","",""
"57467359","3822038","2019-08-12 19:43:32","0","198","<git><gitignore>","gitignore does not exclude vcs.xml but works on others","<p>My .gitignore file does not exclude vcs.xml but works on others  </p>

<p>Here is my .gitignore :</p>

<pre><code>#################
## Pycharm
#################
.idea
.idea/*.xml
.idea/*
*/.idea/*
</code></pre>

<p>The rest of the files in the .idea folder are excluded, but <code>vcs.xml</code> does not obey the <code>.idea/*.xml</code> rule:
<a href=""https://i.stack.imgur.com/X8iGj.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/X8iGj.png"" alt=""github""></a></p>

<p>I have tried:</p>

<ul>
<li>using the right menu option to exclude <a href=""https://i.stack.imgur.com/4ZnBe.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4ZnBe.png"" alt=""github menu""></a></li>
<li>excluding the folder entirely .idea/*</li>
<li>excluding all file under folder .idea</li>
<li>restarting GitHub desktop</li>
<li>restarting the computer </li>
</ul>

<p><a href=""https://i.stack.imgur.com/mtqlz.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/mtqlz.png"" alt=""gitignore""></a></p>
","2","3822038","",""
"57469060","","2019-08-12 22:33:31","0","260","<git><gitignore><ubuntu-18.04>","Why doesn't my project .gitignore work? The global .gitignore does","<p>I can't get git to ignore any files or folders listed in .gitignore.</p>

<ol>
<li>Create empty .gitignore file in same folder as .git. To be clear, it's not inside of the .git folder, it's in the project root folder.</li>
<li>Add one line ""stupidfilename"" to .gitignore.</li>
<li>Create ""stupidfilename"", which has never existed in the repo.</li>
<li>Run ""git add .""</li>
<li>Gasp as ""stupidfilename"" is staged.</li>
</ol>

<p>Files listed in my global .gitignore file are successfully ignored. But I'd like to have project-level ignores.</p>

<p>Setup</p>

<ul>
<li>Ubuntu 18.04</li>
<li>Oh-my-zsh</li>
<li>WSL2, and also GCP</li>
<li>Cmder</li>
</ul>

<p>Any idea what's going on here? I can't find any explanation on the internet.</p>
","3","","0","0"
"74254749","17481035","2022-10-30 16:22:55","0","12","<gitignore>","local git directory with files not on a github clone","<p>I added a directory with files to the local git repo and did the commit. When it was pushed to github it looked like it was added. When I do a clone from github the directory does not show up. I do not find a .gitignore file. Doing a check-ignore --verbose to one of the files added does not return anything.</p>
<p>For an experiment (with the clone up-to-date) I added a directory &quot;gittest&quot; with a file &quot;hello.txt&quot;; did the commit &amp; push. The push appears to show the addition. A pull in the clone appears to show the addition, but the directory/file does not show. Other than starting a new repo and deleting the old one I am stuck as what to do next.</p>
","0","17481035","",""
"74259638","10187530","2022-10-31 06:49:44","2","162","<github><terminal><gitignore><github-cli>","How to specify --gitignore argument in gh repo create cli command?","<p>I'm trying to create remote repository using GitHub CLI and I can not find how to specify a particular gitignore file  with argument <code>--gitignore</code>, say, <code>github/gitignore/C++.gitignore</code>. There is an error <code>HTTP 422: Repository creation failed. (https://api.github.com/user/repos) gitignore_template is an unknown gitignore template.</code></p>
<p>Unsuccessfully have been trying to find an example on internet and stackoverflow also.</p>
","0","10187530","",""
"74304051","127954","2022-11-03 13:39:54","2","143","<git><windows-subsystem-for-linux><gitignore><rider>","ignore a folder in any git project?","<p>So where I work we use a variety of IDEs. I'm the only one that is using Rider so I don't want to add it to the project <code>.gitignore</code> file. Rider creates a <code>.run</code> folder in the root of every project. I want to tell git to ignore this folder in all projects. I added a local <code>~/.gitignore</code> with the following content:</p>
<pre><code>.run/
</code></pre>
<p>Yet i'm still seeing the <code>.run</code> in <code>git status</code>. The <code>.run</code> folder is untracked:
<a href=""https://i.stack.imgur.com/H7lkB.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/H7lkB.png"" alt=""enter image description here"" /></a></p>
","3","127954","",""
"74330516","12111269","2022-11-05 18:39:31","0","48","<git><gitignore>","Using .gitignore as an Allowlist","<p>I'd like to use git to backup my ~/.config folder, and I would like to just upload specific folders. My goal is to make my ~/.config folder into a Git Repo and adding a <code>~/.config/.gitignore</code> that allows me to just do <code>git add . &amp;&amp; git commit</code>, and just having a hand selected set of folders committed to the Repo.</p>
<p>Now my Problem is, that when I try to make a <code>.gitignore</code> that ignores everything and then excludes the selected Directorys from that, git just ignores everything and does not care about the Directories I'm trying to be not ignored.</p>
<p>Here's my <code>.gitignore</code>:</p>
<pre><code>*
!.gitignore
!Jetbrains/**
!Google/**
!autostart/**
!git/**
!nvim/**
!obsidian/**
!polybar/**
</code></pre>
","1","12111269","",""
"73710001","8486764","2022-09-13 23:21:14","1","102","<git><gitignore>","How to setup gitignore to track specific folders/files multiple levels down?","<p>I'm trying to set up a repository for multiple projects that uses Visual Studio.</p>
<p>I'm using a laptop and a desktop, but VS seems to have issues when stuff is on different drives (VS is installed on C drive for both computers, but on my desktop, my projects and external library are on the D drive while they are on the C drive for my laptop).</p>
<p>I want to track just the <code>.cpp</code> and <code>.h</code> source files, but I also want to keep the file structure so I don't have to manually move files around every time I pull from the repo, so I want to track the parent <code>src</code> folder and its parent (the project folder) as well. I don't want to have to add in another line to the gitignore for every project I add.</p>
<p>The files would be organized something like this...</p>
<pre><code>-root
  -.gitignore
  -project1/
    -bin/
    -src/
      -main.cpp
      -foo.cpp
      -foo.h
    -project1.sln
    -project1.vcxproj
    -donttrack2.txt
  -project2/
    -bin/
    -src/
      -main.cpp
      -bar.cpp
      -bar.h
    -project2.sln
    -project2.vcxproj
  -donttrack.txt
</code></pre>
<p>I've tried <a href=""https://git-scm.com/docs/gitignore"" rel=""nofollow noreferrer"">looking at the documentation</a> and <a href=""https://stackoverflow.com/questions/5533050/gitignore-exclude-folder-but-include-specific-subfolder"">another answer</a> but I can't seem to get it working. Any help would be appreciated.</p>
","4","8486764","0","0"
"73740497","5024157","2022-09-16 06:03:33","2","1749","<git><gitignore>","How can I ignore the .env file in git?","<p>I made changes in my .env file and wrote after that in terminal <code>git status</code>:</p>
<pre><code>Changes not staged for commit:
  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
  (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)
    modified:   .env
</code></pre>
<p>I would like that the changes in the .env file be igonored by git so I added this line in .gitignore:</p>
<pre><code>/.env
</code></pre>
<p>Now when I write <code>git status</code> I get the result:</p>
<pre><code>Changes not staged for commit:
  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
  (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)
    modified:   .env
    modified:   .gitignore
</code></pre>
<p>What can I do now? Why is gitignore not ignored?</p>
","2","5024157","0","0"
"73748447","1234120","2022-09-16 17:31:35","0","17","<xcode><git><substring><gitignore>","How to .gitignore specific substring patterns within a file?","<p>When working with Xcode, we have a mandatory project settings file named: <code>project.pbxproj</code></p>
<p>Now, this file contains numerous important details, such as: Directory structure, file hierarchy, included-file references, development IDs, formatting, build paths and much, much more. It has many dynamic parts and is ever changing.</p>
<p>However, there is a specific substring within this file that makes collaborating via git especially tedious, that is:</p>
<p><code>DEVELOPMENT_TEAM = XXXXXXXXXX;</code></p>
<p>Not only does this line contain a private ID number, but it also requires that the value be reset to your own provisioning identifier – however many times that it's mentioned throughout the file – each time you wish to pull and build the project. Furthermore, since these properties are set near the bottom of the file, every little change made to the project – whether that be adding a new file, setting a new property or rearranging directory structure – the line number for these substrings will always change.</p>
<p>Is there any way to ignore all lines, within this file, that contain this substring pattern?</p>
","0","1234120","",""
"56975616","11023277","2019-07-10 17:14:08","0","59","<git><github><gitignore>","I have a gitignore file that doesn't ignore a folder since I previously commited and pushed it","<p>I have a .gitignore file that ignores a folder. When I commit and push it, it says:</p>

<blockquote>
  <p>remote: error: File /myFolder/fild.tz is 452.27 MB; this exceeds GitHub's file size limit of 100 MB</p>
</blockquote>

<p>even though I ignored the folder. I tried doing:</p>

<pre><code>git filter-branch --index-filter 'git rm -r --cached --ignore-unmatch &lt;file/dir&gt;' HEAD
</code></pre>

<p>but it still looks for the file when I commit and push it. 
I made another repository and copy and pasted my project to another folder locally and intialized a .git with the gitignore file. This time, it pushes without the folder. How can I push without it looking for it?</p>
","2","11023277","",""
"56995358","6843153","2019-07-11 18:31:16","9","12883","<python><git><gitignore>","git continues to control changes on __pycache__ even when it is in gitignore","<p>This is my <code>.gitignore</code>:</p>
<pre><code>*__pycache__*
*.pyc
db.sqlite3
*.DS_Store
media/
res/
</code></pre>
<p>I can see on my <strong>Atom</strong> that <code>__pycache__</code> directories are VcsIgnored (which implies that are recognized as not version controlled by <strong>git</strong>)</p>
<p><a href=""https://i.stack.imgur.com/kzyEc.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/kzyEc.png"" alt=""enter image description here"" /></a></p>
<p>But, any way, when I make changes to a file, I get several <code>__pycache__</code> files as modified and unstaged on my <strong>Atom</strong> git window:</p>
<p><a href=""https://i.stack.imgur.com/8PJT2.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/8PJT2.png"" alt=""enter image description here"" /></a></p>
<p>I don't know wether the problem is in <strong>git</strong> or in <strong>Atom</strong>.</p>
","2","6843153","0","0"
"73845116","4596099","2022-09-25 14:04:36","0","621","<android><git><gitignore>","How to ignore .idea and .gradle files while commit to git","<p>I am try ignore the <code>.idea</code> and <code>.gradle</code> folders from android project while commit the code. I already added <code>.idea</code> and <code>.gradle</code> on the <code>.gitignore</code> file inside the app folder.</p>
<p>while run the command <code>git status</code>, It shows the files inside <code>.idea</code> and <code>.gradle</code> are showing in</p>
<p><em><code>Changes not staged for commit:</code></em></p>
<p>Here is my <code>.gitignore</code> file.</p>
<pre><code># idea files
.idea/

# Gradle files
.gradle/

/build
</code></pre>
","0","4596099","",""
"57034935","10233916","2019-07-15 07:20:23","1","68","<git><gitignore>","gitignore not ignoring files/folder","<p>I want to working with git properly but some issue are occur.On GitStatus, there files shown modified.</p>

<pre><code> modified:   dev/tests/acceptance/.gitignore
    modified:   dev/tests/acceptance/.htaccess.sample
    modified:   dev/tests/acceptance/tests/_bootstrap.php
    modified:   dev/tests/acceptance/tests/_data/lorem_ipsum.txt
    modified:   dev/tests/acceptance/tests/_suite/WYSIWYGDisabledSuite.xml
    modified:   dev/tests/acceptance/tests/_suite/suite.xml.sample
    modified:   dev/tests/acceptance/tests/functional/Magento/FunctionalTest/ConfigurableProductCatalogSearch/LICENSE.txt
    modified:   dev/tests/acceptance/tests/functional/Magento/FunctionalTest/ConfigurableProductCatalogSearch/LICENSE_AFL.txt
    modified:   dev/tests/acceptance/tests/functional/Magento/FunctionalTest/ConfigurableProductCatalogSearch/README.md
    modified:   dev/tests/acceptance/tests/functional/Magento/FunctionalTest/ConfigurableProductCatalogSearch/Test/EndToEndB2CGuestUserTest.xml
    modified:   dev/tests/acceptance/tests/functional/Magento/FunctionalTest/ConfigurableProductCatalogSearch/Test/EndToEndB2CLoggedInUserTest.xml
    modified:   dev/tests/acceptance/tests/functional/Magento/FunctionalTest/ConfigurableProductWishlist/ActionGroup/StorefrontCustomerWishlistActionGroup.xml
    modified:   dev/tests/acceptance/tests/functional/Magento/FunctionalTest/ConfigurableProductWishlist/LICENSE.txt
    modified:   dev/tests/acceptance/tests/functional/Magento/FunctionalTest/ConfigurableProductWishlist/LICENSE_AFL.txt
    modified:   dev/tests/acceptance/tests/functional/Magento/FunctionalTest/ConfigurableProductWishlist/README.md
    modified:   dev/tests/acceptance/tests/functional/Magento/FunctionalTest/ConfigurableProductWishlist/Test/EndToEndB2CLoggedInUserTest.xml
    modified:   dev/tests/api-functional/.gitignore
</code></pre>

<p>Here my ignore file:</p>

<pre><code>/dev/*   
/dev/test/*
</code></pre>

<p>I already studied many articles but I can't get a soluton.
Reference Article:<a href=""https://stackoverflow.com/questions/24410208/gitignore-does-not-ignore-folder"">gitignore does not ignore folder</a></p>

<p>I try this command :<code>git rm -r --cached</code>.Now, This show the following files as deleted.So when i run <code>git add.</code> &amp; <code>git push origin master</code> it delete from master or not? </p>
","0","10233916","",""
"73885277","5432156","2022-09-28 16:59:49","0","18","<git><docker><gitignore><docker-secrets>","git is not ignoring docker_secrets file even when it is added to .gitignore","<pre><code>docker_secrets
</code></pre>
<p>The above line is in my .gitignore file.</p>
<p>Yet it is still tracking changes to that file.</p>
","0","5432156","",""
"73910605","14177746","2022-09-30 14:57:05","1","124","<git><github><jenkins><gitignore><git-fetch>","Can I set in Jenkins to not fetch every file from gitHUB?","<p>I have a project on gitHUB where I have two '.txt' file at .project level. I would use them for comparison a previus run to a new run to find out the difference.</p>
<p><a href=""https://i.stack.imgur.com/tRS1F.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/tRS1F.png"" alt=""enter image description here"" /></a></p>
<p>I use Jenkins to build the project, but every time when a new Run starts, the git fetch overwrite thoso two '.txt' so it doesn't make sense anymore.</p>
<p>Can I set in Jenkins somehow to not overwrite all the files -or skip those two- when git fetch starting in the beggining of the run?</p>
","0","14177746","",""
"57122427","1514892","2019-07-20 06:45:11","1","40","<git><gitignore>","Git command within ignored folders - can it truly ignore that it is within a git repo?","<p>I'm having a git repo setup in my main users directory in order to sync configuration among my computers like so:</p>

<pre><code>/Users/myusername/.versionedConfigFile
/Users/myusername/myOtherFolders &lt;-- to be igored
/Users/myusername/projects/somerepo/.git &lt;-- to be igored
</code></pre>

<p>Besides these configuration file I want everything else to be ignored in my git repo, which is why my .gitignore looks like this:</p>

<pre><code>   *
   !.gitignore
   !.versionedConfigFile
</code></pre>

<p>While .gitignore allows me to exclude all my other files from <em>tracking</em>, I can still see that I'm in a git repository when I cd into ""myOtherFolders"" for example and running git commands like ""git status"". I would prefer to see ""not a git repository"" here to not get confused when working with other git repos in my directory tree (which still works of course). </p>

<p>Is there a way to ""truly"" exclude the folders from the .git repository?</p>
","1","1514892","0","0"
"73966445","17220986","2022-10-05 21:19:21","2","77","<git><gitignore>",".gitignore is not ignoring files even if it is untracked already","<p>I read a lot of similar articles but none of them actually solves the problem.<br />
I have a .gitignore file that looks like this:</p>
<pre><code>*.class 
 
.idea/ 
./a1-basic/build/ 
./a1-basic/.gradle/ 
</code></pre>
<p>I want to ignore the <code>build</code> folder and <code>.gradle</code> folder. And these two folders are not currently tracked by git.<br />
<a href=""https://i.stack.imgur.com/YmHkO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/YmHkO.png"" alt=""enter image description here"" /></a></p>
<p>However, when I run <code>git add .</code>, it still adds these two folders. I have tried the method found online to run <code>git rm -r --cached .</code>. But these folders are still added when I <code>git add .</code>.<br />
Please advise what to do. Thank you</p>
","1","17220986","",""
"57190033","3000433","2019-07-24 19:30:07","1","639","<git><xamarin><gitignore>","How to ignore simulator files for Xamarin in .gitignore?","<p>I have been banging my head on the wall every time I load up my project in an actual iPhone device I would get a list of simulator files in my git. (shown below)</p>

<p><a href=""https://i.stack.imgur.com/1nBOv.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/1nBOv.png"" alt=""Github Desktop log""></a></p>

<p>I thought that by adding the whole folder of ExWU.iOS/bin/IPhone/Debug it should ignore the whole folder as a whole. Is there anything else I need to do to ignore all these files?</p>

<p><a href=""https://i.stack.imgur.com/TXHkh.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/TXHkh.png"" alt="".gitignore file""></a></p>
","3","3000433","",""
"57190406","6606090","2019-07-24 19:58:29","6","4056","<javascript><node.js><visual-studio-code><gitignore>","should i write jsconfig.json or tsconfig.json in .gitignore file?","<p>i have to use jsconfig file in my project, jsconfig file looks like that:</p>

<pre><code>{
    ""compilerOptions"": {
        ""baseUrl"": ""."",
        ""paths"": {
            ""*"": [
                ""src/*""
            ],
            ""test/*"": [
                ""test/*""
            ]
        }
    }
}
</code></pre>

<p>in nodejs or any front end project, should we ignore jsconfig.json or tsconfig.json in .gitignore file?
what is the best practice for that?</p>
","0","6606090","",""
"74006609","","2022-10-09 16:43:41","0","198","<python><gitignore><python-venv>",".gitignore - Conventional way of excluding virtualenv sub-directories","<p>Before getting the question closed, I would like to mention that I have already read this article:
<a href=""https://stackoverflow.com/questions/42306410/gitignore-syntax-how-to-exclude-virtualenv-sub-directories"">.gitignore syntax - how to exclude virtualenv sub-directories?</a> which is actually why I am posting this question. Let me elaborate.</p>
<p>In <a href=""https://codesolid.com/pip-vs-pipenv-which-is-better-and-which-to-learn-first/"" rel=""nofollow noreferrer"">this</a> article, it is mentioned that in order to exclude the &quot;venv&quot; directory all you need to do is type <code>**/venv</code> or <code>**/.venv</code> in gitignore. I tested that and it works (I think since the directory was excluded in my next clone of the project on my github repo.
However, it is worth noting I had already managed to do that with another way which I will mention below).</p>
<p>Also, the <a href=""https://github.com/github/gitignore/blob/main/Python.gitignore"" rel=""nofollow noreferrer"">official documentation</a> on how to exclude directories in .gitignore (mentioned in the stack overflow article mentioned above) notes that the way to exclude venv is simply typing <code>.venv</code> or <code>venv/</code>, which also works as far as I know.</p>
<p>Another thing I noticed is that by cloning the repository on my H: drive (located on the University Server) and then copying the path of the venv and pasting it in the .gitignore file, that also works! (this is the method I originally used)</p>
<p>However, I feel like the last method is unreliable, even though I have tested it on my personal computer and it still does not push the venv directory to the repository. Regardless, I would like to be certain of what the conventional way to exclude venv is and how it is performed by professional developers.</p>
<p>Thank you for your time.</p>
","0","","",""
"57210587","2089899","2019-07-25 21:53:38","0","910","<git><gitignore>","Any way to gitignore by file size?","<p>I fairly regularly attempt to add/commit a file above 100Mb accidentally, then scramble to try and remember how to backtrack these errors. Is there any way to place a safeguard that just has the effect of skipping <code>git add</code> for files that are too large? </p>
","2","2089899","",""
"57237223","11499570","2019-07-28 01:08:53","1","253","<xcode><git><github><gitignore><xcode10>","Xcode - Hiding .xcodeproj on files on GitHub repo via .gitignore","<p>I am using Xcode to as my IDE for coding questions that I publish and commit to my GitHub account. However, I don't want the ProjectName.xcodeproj to be shown in the repo. Is this possible?
Also, how do you suggest managing .gitignore files in Xcode? The only solution I have come across is managing it manually via terminal.</p>

<p>I've tried creating a .gitignore file via gitignore.io and then going into the project directory via terminal and using curl <a href=""http://gitignore.io/api/c++,xcode"" rel=""nofollow noreferrer"">http://gitignore.io/api/c++,xcode</a>  > .gitignore. This has no effect whatsoever.</p>
","0","11499570","0","0"
"74040197","20196115","2022-10-12 10:18:14","0","75","<github><gitignore><hidden-files>","Tried to create a global .gitignore file while following a beginner YT video, but failed","<p>There is a lot on .gitignore but not specifically to the issue I'm having at the point of creating/editing the file. I executed the <code>git config --global core.excludesfile ~/.gitignore_global</code> locally fine. However when I execute <code>open ~/.gitignore_global</code> it fails saying the file does not exist.</p>
<p>It says the file is not in <code>users/me</code>, however when I do a <code>git config --get core.excludesfile</code> it shows the same path. So this has stumped me...?</p>
<p>Also if I check via finder with hidden files off I can see hidden files but not that one anywhere on my system, let alone users/me.</p>
<p>My intention is to add .DS_Store to the file once I can access it.</p>
<p>I have watched a couple different YT'RS now and they all seem to work fine but don't mention any potential dependencies to function correctly.</p>
","0","20196115","",""
"74044806","3307720","2022-10-12 15:58:04","0","42","<git><intellij-idea><gitignore>","Prevent IntelliJ from asking to add files to git if they're already declared in .gitignore","<p>When IntelliJ detects a file in the project that isn't in git, it will ask if I want to add the file(s).  This is normally fine, but it's asking even if that file matches an entry in .gitignore.  I know it matches, and that IJ knows it matches, because the commit dialog won't show that file.  Is there a way to make it stop asking about adding these files, but continue asking for other files?  The only thing I can think of that's unusual is I open IJ at a subfolder rather than the root of the git project.  That doesn't seem like it should be significant.</p>
<pre><code> % git status
On branch master
Your branch is up to date with 'origin/master'.
</code></pre>
<p>.gitignore contains</p>
<pre><code>**/dbUpdate.log
**/dbRollback.log
**/DBSchemaContent.lst
</code></pre>
<p>and IJ will ask about adding files when these files get created.</p>
","5","3307720","",""
"57253059","3258059","2019-07-29 11:37:29","3","250","<git><git-branch><gitignore><git-stash>","How to apply local changes to git repo after every pull from master without ever pushing to master","<p>My development setup is quite different to the other developers in the team - mac vs linux
- docker vs vagrant</p>

<p>Every time I pull a new branch I have to make a load of changes to config files and docker related files to get my dev environment functioning.</p>

<p>I need to avoid pushing these to my working branches as they can't be merged into master.</p>

<p>At the moment I am leaving these files off <code>git add</code> and then manually adding them back every time I switch branches and perform a pull.</p>

<p>The following SO question suggests I could <code>git stash</code> and then <code>git stash apply</code> <a href=""https://stackoverflow.com/questions/48273898/how-to-keep-the-git-local-changes-without-commit-and-apply-to-different-repos-af"">How to keep the git local changes without commit and apply to different repos after switch</a></p>

<p>I think that would work providing I keep my git stashes neat and the last one is restricted to my dev changes. I'm wondering if there is a better way to handle this workflow.</p>

<p>Can I save these changes in a dev-setup branch and use in a similar way to the stash method? </p>
","0","3258059","",""
"74055592","18346539","2022-10-13 12:13:27","-1","93","<github><hosting><gitignore><git-repo>","Can be .gitignore file be used only in GitHub Repo?","<p>I am creating a React App and my superior would want the app to be hosted anywhere but not on GitHub, so I recommended Hostinger.
My question is:
Can I add a <code>.gitignore</code> file in Hostinger, or any other hosting service that is not GitHub?</p>
","1","18346539","",""
"57265522","3004258","2019-07-30 06:27:07","1","206","<git><gitignore>","Need to have two gitignore files in single project","<p>I want to have two .gitignore files. </p>

<p>I would like to have two <code>.gitignore</code> files for my project. One is already committed to the repo. I do not want to change that file &amp; at the same time I want to ignore some other files (We are a big team &amp; strict code review practice stops us from committing <code>.gitignore</code> files to repo)</p>

<p>Can I point my repo to two <em>ignore files</em>? Or can I have a local <code>gitignore</code> file &amp; a <code>global gitignore</code> file?</p>

<p>Can we even replicate this in some sandbox &amp; see a live example online. </p>
","4","3004258","",""
"74067565","15547208","2022-10-14 09:57:45","-1","1602","<c#><git><gitignore>",".gitignore with C# visual studio","<p>I've just started this C# project <code>Reversi</code>, copied some C# .gitignore template into my folder. I've just done my first commit:</p>
<p><a href=""https://i.stack.imgur.com/CvmMb.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/CvmMb.png"" alt=""enter image description here"" /></a></p>
<p>To my eyes it is saving wayy too many files with git, but I'm not sure what is and what is not neccesary. What should I add to the <code>.gitignore</code> to reduce the clutter but not throw away anything usefull?</p>
<p>Any help is greatly appreciated!!</p>
","0","15547208","",""
"57298076","9473729","2019-07-31 20:01:49","1","382","<git><github><gitignore>",".gitignore ignore directories/packages matching patterns","<p>So, I'm trying to exclude all the python packages in my project.</p>

<p>For example- </p>

<pre><code>project/
|--- dir1/
|    |-- pymysql/
|    |-- PyMySQL-0.8.0.dist-info/
|
|--- dir2/
|    |-- pymysql/
|    |-- PyMySQL-1.8.0.dist-info/
</code></pre>

<p>Now I need to ignore all the occurences of <code>pymysql</code> and <code>PyMySQL</code>(regardless of the dist version) from all my directories. </p>

<p>Having <code>*pymysql/</code> and <code>*PyMySQL*/</code> in <code>.gitignore</code> seems to work fine here.</p>

<p>But, is there any better/efficient way to do this since I could have any number of packages in my project - and I'll have to hardcode each of them in my <code>.gitignore</code> in this case.</p>
","0","9473729","0","0"
"74091750","7361479","2022-10-17 01:16:53","0","35","<git><gitignore>","Problem detecting new (unversioned) files with .gitigore and negation patterns","<blockquote>
<p><em>Note: Despite having been previously marked as a duplicate of <a href=""https://stackoverflow.com/questions/5533050/gitignore-exclude-folder-but-include-specific-subfolder"">.gitignore exclude folder but include specific subfolder</a> and
<a href=""https://stackoverflow.com/questions/68945326/how-to-use-gitignore-to-ignore-everything-in-a-directory-except-one-file"">How to use .gitignore to ignore everything in a directory except one file?</a>, this is NOT a duplicate of those questions. The important issue is <strong>auto-detection of new files in supposedly non-ignored directories</strong>, and why that's not happening. The content of this question illustrates that I already understand the questions answered at those other links.</em></p>
</blockquote>
<p>If I add a new directory, subdirectory, and file to the root of a project like this:</p>
<pre><code>foo/
  bar/
    baz.txt
</code></pre>
<p>After this, <code>git status -u</code> reports:</p>
<pre><code>Untracked files:
  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)
        foo/bar/baz.txt
</code></pre>
<p>Not surprisingly, if I add then line <code>/foo</code> to the end of my <code>.gitignore</code> file, the untracked file is no longer reported.</p>
<p>What does surprise me, however, is if I follow <code>/foo</code> with <code>!/foo/bar</code>, the file <code>baz.txt</code> is still ignored, even though I have negated the ignore pattern for the <code>bar</code> directory.</p>
<pre><code>/foo
!/foo/bar
</code></pre>
<p>What am I missing? Why doesn't negating the exclusion of a subdirectory restore automatic detection of new, unversioned files in that subdirectory?</p>
<p>Even when I specifically re-include the file itself like this:</p>
<pre><code>/foo
!/foo/bar
!/foo/bar/baz.txt
</code></pre>
<p>...<code>git status -u</code> provides me no warning that there's a new file which hasn't been added to version control.</p>
<p><strong>I realize that I can explicitly add any new file to version control</strong>, despite what <code>.gitignore</code> rules in or rules out. What I want is the safety of Git discovering files that I might have forgotten to add, finding them and warning me about them.</p>
<p>For the record, I'm using git 2.23.0 on macOS.</p>
","0","7361479","",""
"57306001","9695946","2019-08-01 09:33:35","0","225","<git><asp.net-core><gitignore>","How to .gitignore across the whole solution","<p>I've recently started using .NET Core and git ignore. The original project that was created has the .gitignore and seems to work ok. However, upon adding new projects to the solution, when i try and commit there are lots of unwanted changes that the .gitignore file covers but doesn't apply to the new projects. I've copied the ignore file into the new projects but the unwanted files still appear. Any thoughts?</p>
","5","9695946","",""
"57309756","9135945","2019-08-01 13:08:06","3","385","<git><gitignore>",".gitignore How to exclude all direct files of a specific folder but include all subfolders of that folder?","<p>I want to exclude all direct files of the folder <code>reports</code> but include all subfolders.
At first I didn't knew that there were any subfolders in this folder and I pushed <code>reports/*</code>, to not push any automatically generated reports. 
But now all the template files in the subfolders are marked as deleted in the staging area, and I want to fix this:</p>

<p><strong>Exclude:</strong> </p>

<ul>
<li>reports/report1.pdf</li>
<li>reports/report2.txt</li>
<li>reports/report3PlainFile</li>
<li>...</li>
</ul>

<p><strong>Include:</strong></p>

<ul>
<li>reports/A/a_1_template.rpt</li>
<li>reports/A/a_2_template.rpt</li>
<li>reports/B/a_2_template.rpt</li>
<li>...</li>
</ul>

<p>I have tried:</p>

<pre><code>    reports/*
    !reports/*/
</code></pre>

<p>and</p>

<pre><code>    reports/*
    !reports/*/*
</code></pre>

<p>but it doesn't seem to work.</p>

<p>Now everyting in the <code>reports</code> folder is excluded. 
But I want to only exclude all direct files and include all subfolders (and their contents).</p>
","0","9135945","",""
"57316698","1732833","2019-08-01 20:41:46","7","646","<gitignore>","As a dev, do you use .gitignore to ignore everything and purposefully include? Or do you just exclude with it?","<p>We have an internal discussion going here and we are somewhat torn on the best practice for using .gitignore on projects that contain a lot of files (like a CMS).</p>

<h3>Method 1</h3>

<p>Method 1 would be to purposefully .gitignore all files that come standard with your build. That would generally start like:</p>

<pre><code># ignore everything in the root except the ""wp-content"" directory.
!wp-content/

# ignore everything in the ""wp-content"" directory, except:
# ""mu-plugins"", ""plugins"", ""themes"" directory
wp-content/*
!wp-content/mu-plugins/
!wp-content/plugins/
!wp-content/themes/

# ignore these plugins
wp-content/plugins/hello.php

# ignore specific themes
wp-content/themes/twenty*/

# ignore node dependency directories
node_modules/

# ignore log files and databases
*.log
*.sql
*.sqlite
</code></pre>

<p>Some staff members like this approach since if you create something outside of the standard files, for example like a <code>/build</code> folder, then it would automatically be detected for inclusion. However, writing custom theming and plugins require you to add a few layers to this file to ""step in"" to the folders you want to keep, and generally, the file is a bit messier to read.</p>

<h3>Method 2</h3>

<p>Method 2 ignores everything, and then you whitelist what you want in the repo. That would look like</p>

<pre><code># Ignore everything, but all to descend into subdirectories
*
!*/

# root files
!/.gitignore
!/.htaccess.live
!/favicon.ico
!/robots.txt

# theme
!/wp-content/themes/mytheme/**
/wp-content/themes/mytheme/style.css # Ignore Compiled CSS
/wp-content/themes/mytheme/js # Ignore Compiled JS

# plugins
!/wp-content/plugins/my-plugin/**

# deployment resources
!/build/**
</code></pre>

<p>Some staff like this since it's cleaner, you have to purposefully add something (which makes accidental adds harder), and it also in effect shows you your .git folder structure.</p>

<p>What is the best practice? Which method do you enjoy and would you recommend doing one over the other?</p>
","3","1732833","0","0"
"57324398","1909969","2019-08-02 10:13:13","3","454","<javascript><publish><gitignore><yarnpkg><npmignore>","yarn publish <folder>.gitignore overriding .npmignore","<p>I'm trying to publish a module I have created.
The module has multiple entries in it and I want to publish from within my build folder.</p>

<p>Every time I try to publish with yarn. I get:</p>

<blockquote>
  <p>Output:
  The following paths are ignored by one of your .gitignore files:
  build/package.json
  Use -f if you really want to add them.</p>
</blockquote>

<p>I tried <code>yarn publish build</code>
And also <code>cd build &amp;&amp; yarn publish</code> where I copy the package.json and npmignore and all the relevant files.</p>

<p>It's always the same result.</p>

<p>I have a .gitignore in my root and an .npmignore in my root.</p>

<p>If I publish the build folder from the root it works but I dont want the path to include the build/lib folder.</p>

<p>If I do <code>yarn build &amp;&amp; cd build &amp;&amp; npm publish &amp;&amp; cd ../</code> that will also work.
But I'd rather use <code>yarn</code>.</p>

<p>Does anyone have a solution for it?</p>

<p>All I want is to publish my already created build folder content. I have all the needed files there.</p>

<p><strong>EDIT</strong></p>

<p>After much research and looking into other packages,</p>

<p><strong>I ended up just creating a small copy script that copies my essential files to a build folder and clears up my package.json from all unwanted items</strong>. </p>

<p>Then my ci publishes from the build folder.
That was our solution that we've implemented </p>
","0","1909969","0","0"
"74121646","20280070","2022-10-19 07:47:52","0","20","<c#><git><unity-game-engine><gitignore>","Unity gitignore file doesn't seem to work","<p>If I simply turn off and on the Unity project, git asks me to commit the file below.</p>
<pre><code>Library\ArtifactDB
Library/CurrentLayout-default.dwlt
Library/SourceAssetDB
</code></pre>
<p>Is this a normal situation?</p>
<p>I added the git ignore file and it is as below.</p>
<pre><code># This .gitignore file should be placed at the root of your Unity project directory
#
# Get latest from https://github.com/github/gitignore/blob/master/Unity.gitignore
#
[Ll]ibrary/
[Tt]emp/
[Oo]bj/
[Bb]uild/
[Bb]uilds/
[Ll]ogs/
[Mm]emoryCaptures/

# Asset meta data should only be ignored when the corresponding asset is also ignored
!/[Aa]ssets/**/*.meta

# Uncomment this line if you wish to ignore the asset store tools plugin
# /[Aa]ssets/AssetStoreTools*

# Autogenerated Jetbrains Rider plugin
[Aa]ssets/Plugins/Editor/JetBrains*

# Visual Studio cache directory
.vs/

# Gradle cache directory
.gradle/

# Autogenerated VS/MD/Consulo solution and project files
ExportedObj/
.consulo/
*.csproj
*.unityproj
*.sln
*.suo
*.tmp
*.user
*.userprefs
*.pidb
*.booproj
*.svd
*.pdb
*.mdb
*.opendb
*.VC.db

# Unity3D generated meta files
*.pidb.meta
*.pdb.meta
*.mdb.meta

# Unity3D generated file on crash reports
sysinfo.txt

# Builds
*.apk
*.unitypackage

# Crashlytics generated file
crashlytics-build.properties
</code></pre>
<p>As I changed the structure of the folder,</p>
<p>I tried to remove '/' from the front and add '**/', but I don't think it's a problem.</p>
<p>ex) /[Ll]ibrary/, **/[Ll]ibrary/</p>
<p>Is there anyone who knows?</p>
<p><em>P.S. I'm not a native speaker, so my words can be awkward. I'm sorry.</em></p>
","2","20280070","",""
"74165890","12636602","2022-10-22 18:00:40","1","158","<git><powershell><version-control><gitignore><git-add>","Although seemingly correct Syntax .gitignore File is ignored","<p>I have written some powershell code, since I wanted to achive two things.
The first one was to organize my gists and the second one to learn ps1 script syntax.
Until now I guess I've managed some impressive things on one hand, on the other I got stuck...</p>
<p>I read lots of interesting and sophisticated articles on git and earlier on I also used <code>.gitignore</code> files quite successfully.</p>
<p>Now this particular script does EVERYTIME Ignore the <code>.gitignore</code> seamingly not dependend on what im doing.</p>
<p>May somebody of you help me busting this mystery why this script always ignores my gitignore - it sucks that everytime on the first hand it uploads itself everywhere (which is the reason why it writes itself to the <code>.gitignore</code> in line: <code>40 ++</code>) and even more it gets wierd if everytime the <code>node_modules</code> where uploaded too</p>
<p>(testing this script on a freshly generated <code>npx create-react-app testapp</code> in the apps root folder)</p>
<p>By the way, to make things easier I also cleaned the cache with <code>git rm -r --cached .</code> in line 88 before the <code>git add .</code> this also does not work</p>
<p>Filename : <code>git-create-repo.ps1</code></p>
<p>Sourcecode:</p>
<pre><code>$workdir = Convert-Path $pwd

$gituser = &quot;l00tz1ffer&quot;
$gitserver = &quot;lootziffers-welt.de&quot;
$defaultRemoteName = &quot;origin&quot;
$targetBranchName = &quot;master&quot;

$gitHubExists = 0

$workDirName = $workdir.Substring(($workdir.LastIndexOf(&quot;\&quot;) + 1), ($workdir.Length - 1 ) - $workdir.LastIndexOf(&quot;\&quot;))

$git_dir_string = $workDirName + &quot;.git&quot;
echo $workDirName



git remote -v | Out-File -FilePath remotes.temp -Encoding utf8 -Append
$File = 'remotes.temp'

foreach ($line in Get-Content $File) {
    $remoteListingLine = $line
    $remoteHostName = $remoteListingLine.Substring(($remoteListingLine.IndexOf(&quot;@&quot;) + 1), ($remoteListingLine.LastIndexOf(&quot;:&quot;) - 1 ) - $remoteListingLine.IndexOf(&quot;@&quot;))
    echo $remoteHostName
    if ($remoteHostName -contains &quot;github.com&quot;) {
        echo &quot;GitHub Repo found&quot;
        $remoteListingLine = $remoteListingLine -replace $defaultRemoteName, &quot;github&quot;
        echo &quot;Renaming properly ...&quot;
        echo $remoteListingLine

        git remote rename $defaultRemoteName &quot;github&quot;
        $gitHubExists = 1

    }

}
Remove-Item 'remotes.temp'



if (-not (Test-Path -Path .gitignore)) {
    New-Item -Path '.gitignore' -ItemType File
}


If ( $workDirName -ne &quot;git-create-repo&quot; -and $workDirName -ne &quot;git-create-repo.git&quot;) {
    $File = '.gitignore'

    foreach ($line in Get-Content $File) {
        if (-not (Test-Path -Path new.gitignore)) {
            New-Item -Path 'new.gitignore' -ItemType File
        }

        echo &quot;.gitignore enthÃ¤lt folgenden Wert: $line&quot; 
        if ($line -contains &quot;git-create-repo.ps1&quot;) {
            echo &quot;Duplicate entry found, Removing it&quot;
        }
        elseif ($line.Length -eq 0) {
            echo &quot;Empty Line Found in .gitignore -&gt; Removing it&quot;
        }
        elseif ($line -contains $null) {
            echo &quot;Empty Line Found in .gitignore -&gt; Removing it&quot;
        }
        else {
            line | Out-File -FilePath new.gitignore -Encoding utf8 -Append
 
        }
    }
    
    Remove-Item '.gitignore'
    Rename-Item 'new.gitignore' '.gitignore'
    &quot;git-create-repo.ps1&quot; &gt;&gt; | Out-File -FilePath .gitignore -Encoding utf8 -Append

}

Start-Sleep -Seconds 3


git remote rm $defaultRemoteName
git branch -mv main $targetBranchName


ssh git@$gitserver &quot;cd  $gituser &amp;&amp; mkdir $git_dir_string &amp;&amp; cd $git_dir_string &amp;&amp; git init --bare&quot;


#if (Test-Path -Path '.git' -PathType Container) {
git init
echo &quot;Lokales Repo wurde Initialisiert&quot;

git rm -r --cached .
git add .\.gitignore

$timestamp = (get-date).ToString('G')
git commit -m &quot;Autogenerated Commit from ${[System.Environment]::UserName} -&gt; Zeit: $timestamp&quot;
echo &quot;Autogenerated Commit -&gt; Zeit: $timestamp&quot;
    
git rm -r --cached .
git add .
echo &quot;Dateien wurden zum Lokalen Repository hinzugefuegt&quot;
#}


$timestamp = (get-date).ToString('G')
git commit -m &quot;Autogenerated Commit from ${[System.Environment]::UserName} -&gt; Zeit: $timestamp&quot;
echo &quot;Autogenerated Commit -&gt; Zeit: $timestamp&quot;


$git_repo_string = &quot;git@lootziffers-welt.de:&quot; + $gituser + &quot;/&quot; + $workDirName + &quot;.git&quot;
echo &quot;Der Verwendete Remote Git Repo string lautet: $git_repo_string&quot; 

git remote add $defaultRemoteName $git_repo_string
git push $defaultRemoteName $targetBranchName
if ($gitHubExists -eq 1) {
    git push github $targetBranchName
}

 

scp git@${gitserver}:${gituser}/repos.txt repos.txt
if (-not (Test-Path -Path .gitignore)) {
    New-Item -Path 'repos.txt' -ItemType File
}
$File = &quot;repos.txt&quot;
foreach ($line in Get-Content $File) {
    echo &quot;repos.txt enthÃ¤lt folgenden Wert: $line&quot; 
    if ($line -contains $git_repo_string) {
        echo &quot;Duplicate entry found, Removing it&quot;
    }
    elseif ($line.Length -eq 0) {
        echo &quot;Empty Line Found in .gitignore -&gt; Removing it&quot;
    }
    elseif ($line -contains $null) {
        echo &quot;Empty Line Found in .gitignore -&gt; Removing it&quot;
    }
    else {
        line | Out-File -FilePath new.repos.txt -Encoding utf8 -Append
    }
}
Remove-Item 'repos.txt'
Rename-Item 'new.repos.txt' 'repos.txt'



${git_repo_string}.ToString() | Out-File -FilePath repos.txt -Encoding utf8 -Append
scp repos.txt git@${gitserver}:${gituser}/repos.txt
Remove-Item 'repos.txt'




Start-Sleep -Seconds 5
</code></pre>
<p>Here i will give you a basic idea of how my <code>.gitignore</code> file looks like</p>
<pre><code># See https://help.github.com/articles/ignoring-files/ for more about ignoring files.
# dependencies
/node_modules/*
node_modules/
/node_modules
/.pnp
.pnp.js
# testing
/coverage
# production
/build
# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local
npm-debug.log*
yarn-debug.log*
yarn-error.log*
git-create-repo.ps1

</code></pre>
<p>Thank you my dear friends out there for your quick support and taking time to overview this huge bulk of code.</p>
<p>Sincierly</p>
","7","12636602","",""
"74168807","2300132","2022-10-23 05:12:17","0","132","<git><gitignore><atlassian-sourcetree>","Update gitignore changes in all branches","<p>In my case I often meet such case:</p>
<ol>
<li>I got develop branch which is a parent for all features branches</li>
<li>Importing some assets to feature branch with some files to be ignored I add it to
.gitignore file</li>
<li>I merge that new feature with updated .gitignore file to develop branch.</li>
</ol>
<p>Pretty common, but I still wish to keep ignored files locally and the problem is when I move to any other feature branch I can't merge develop into it because there are ignored files in project.</p>
<p>Is there any way to force update .gitignore changes in all the branches?</p>
","2","2300132","",""
"57418326","2384088","2019-08-08 17:59:11","2","250","<git><directory><gitignore><ignore>","why is git finding directories that don't exist in my home directory?","<p>I am running a git repository on Windows 10 in my home directory. When I run <code>git status</code>, Git finds directories that don't exist on my machine:</p>

<pre><code>warning: could not open directory 'AppData/Local/Application Data/': Permission denied
warning: could not open directory 'AppData/Local/ElevatedDiagnostics/': Permission denied
warning: could not open directory 'AppData/Local/History/': Permission denied
warning: could not open directory 'AppData/Local/Microsoft/Windows/INetCache/Content.IE5/': Permission denied
warning: could not open directory 'AppData/Local/Microsoft/Windows/INetCache/Low/Content.IE5/': Permission denied
warning: could not open directory 'AppData/Local/Microsoft/Windows/Temporary Internet Files/': Permission denied
warning: could not open directory 'AppData/Local/Temporary Internet Files/': Permission denied
warning: could not open directory 'Application Data/': Permission denied
warning: could not open directory 'Documents/My Music/': Permission denied
warning: could not open directory 'Documents/My Pictures/': Permission denied
warning: could not open directory 'Documents/My Videos/': Permission denied
warning: could not open directory 'Local Settings/': Permission denied
On branch master
Your branch is up to date with 'origin/master'.
</code></pre>

<p>Many of the directories above do not exist.  Why is Git trying to open these <strong><em>nonexistent</em></strong> directories?</p>

<p>My .gitignore:</p>

<pre><code>#===============================================================================
# Blacklist everything, then whitelist sub-directories
#===============================================================================
# this allows me to whitelist individual FILES in sub-directories
*
!*/


#===============================================================================
# WHITELIST SPECIFIC THINGS
#===============================================================================
!.gitignore
!.bashrc
!.alias.sh
!.update.home.sh
!.startup.sh
!.todo
!dictionary.txt
!./.config/git/gitk
!Documents/ShareX/ApplicationConfig.json
</code></pre>
","2","2384088","",""
"57418769","423125","2019-08-08 18:31:39","18","8602","<git><gitignore>","Definitive retroactive .gitignore (how to make Git completely/retroactively *forget* about a file now in .gitignore)","<h2>Preface</h2>

<p>This question attempts to clear the confusion regarding applying .gitignore <strong>retroactively</strong>, not just to the present/future.<sup>1</sup></p>

<h2>Rationale</h2>

<p>I've been searching for a way to make my current .gitignore be retroactively enforced, <strong>as if I had created .gitignore in the first commit</strong>.  </p>

<p>The solution I am seeking:  </p>

<ul>
<li>Will <em>not</em> require manually specifying files</li>
<li>Will <em>not</em> require a commit</li>
<li>Will apply retroactively to all commits of all branches</li>
<li>Will <em>ignore</em> .gitignore-specified files in working dir, <strong>not delete</strong> them (just like an originally root-committed .gitignore file would)</li>
<li>Will use git, not BFG</li>
<li>Will apply to .gitignore exceptions like:</li>
</ul>

<pre><code> *.ext
 !*special.ext
</code></pre>

<hr>

<h2>Not solutions</h2>

<pre><code>git rm --cached *.ext
git commit
</code></pre>

<p>This requires 1. manually specifying files and 2. an additional commit, which will result in newly-ignored file <em>deletion</em> when pulled by other developers. (It is effectively just a <code>git rm</code> - which is a <em>deletion</em> from git tracking - but it leaves the file alone in the local (<em>your</em>) working directory.  <em>Others</em> who <code>git pull</code> afterwards will receive the file <em>deletion</em> commit)</p>

<pre><code>git filter-branch --index-filter 'git rm --cached *.ext'
</code></pre>

<p>While this <em>does</em> purge files retroactively, it 1. requires manually specifying files and 2. <a href=""https://stackoverflow.com/a/57419809/423125""><em>deletes</em> the specified files from the <strong>local</strong> working directory</a> just like plain <code>git rm</code> (and so also for others who <code>git pull</code>)!</p>

<hr>

<h2>Footnotes</h2>

<p><sup>1</sup>There are many similar posts here on SO, with less-than-specifically-defined questions and even more less-than-accurate answers. See <a href=""https://stackoverflow.com/q/1274057"">this question with 23 answers</a> where the <a href=""https://stackoverflow.com/a/1274447"">accepted answer with ~4k votes</a> is <strong>incorrect</strong> according to the standard definition of ""forget"" <a href=""https://stackoverflow.com/a/56051380"">as noted by one mostly-correct answer</a>, and <a href=""https://stackoverflow.com/a/1274126/423125"">only</a> 2 <a href=""https://stackoverflow.com/a/56051380/423125"">answers</a> include the <strong><em>required</em></strong> <code>git filter-branch</code> command.</p>

<p><a href=""https://stackoverflow.com/q/936249/423125"">This question with 21 answers</a> <strike>is</strike> was marked as a duplicate of the previous one, but the question is defined differently (ignore vs forget), so while the answers may be appropriate, it is <strong>not</strong> a duplicate.</p>

<p><a href=""https://stackoverflow.com/q/43463687"">This question</a> is the closest I've found to what I'm looking for, but the answers don't work in all cases (paths with spaces...) and perhaps are a bit more complex than necessary regarding creating an external-to-repository .gitignore file and copying it into every commit.</p>
","14","423125","0","0"
"74340379","15757667","2022-11-06 22:56:21","-1","434","<git><environment-variables><gitignore>",".gitignore not working. My environment variables are being pushed to my repo when they should be un-tracked","<p>Common sense says don't push environment variables on a public git repo. I always make sure to add my environment variable to my .gitignore file.</p>
<p>This time I do everything correct and when I do a git push files the environment variable is in the repo! I immediately remove it. I go back for a re-do.</p>
<p>I called my environment variable <code>important.env</code></p>
<p>The un-tracked file under <strong>git status</strong> shows <code>important.env.env</code> Why does it have <strong>.env</strong> twice under the un-tracked filename?</p>
","4","15757667","",""
"74351620","5279274","2022-11-07 19:02:02","-1","75","<git><npm><version-control><node-modules><gitignore>","Include one specific node_modules package in git version control","<p>I usually put <code>/node_modules</code> in my <code>.gitignore</code> file.</p>
<pre><code># .gitignore

/node_modules
</code></pre>
<p>But this time, I would like to include one specific node_modules-package in my git version control.</p>
<p>I.e when I commit and push to remote, the node_modules folder should be included, but all modules inside it are gone, except <code>my-package</code> under the organization <code>@my-organization</code>. I.e:</p>
<pre><code>/node_modules
    /@my-organization
        /my-package
            /&lt;files and folders&gt;
</code></pre>
<p>How can I modify my <code>.gitignore</code> to accomplish this?</p>
","0","5279274","",""
"74357437","13155333","2022-11-08 08:04:04","0","137","<node.js><regex><gitignore>","How to exclude gitignore folder named in a UUID pattern in Node.js","<p>I'm trying to git ignore a folder name with a UUID regex pattern - <code>6cbe8cac-c0b4-4e0b-b335-4db9a89c3119</code>.</p>
<p>How do i achieve that?</p>
<p>I added</p>
<pre><code>root-folder/[0-8]*-[0-4]*-[0-4]*-[0-4]*-[0-12]
</code></pre>
<p>to my <code>.gitignore</code> file but that didn't work.</p>
","2","13155333","",""
"74381567","19067446","2022-11-09 21:25:32","0","120","<git><gitignore>","Ignoring sensitive files with .gitignore","<p>How to prevent exposure of sensitive files while keeping them in the local repository?</p>
<p>Scenario: I have sensitive files in my local repo. As a security measure, I specify those files in .gitignore file, so they are not pushed to the remote. A collaborator deletes my .gitignore file and pushes that change to the remote repo. I pull his changes. My sensitive files are not ignored anymore and I will push them accidentally to the remote. My sensitive files are now exposed.</p>
<p>Can scenario like this happen? How to prevent it?</p>
","2","19067446","",""
"74452924","12728698","2022-11-15 22:26:18","0","60","<git><gitignore>","Subfolder gitignore not un-ignoring files ignored by parent gitignore","<p>First let me say that this is not my project, I'm pulled into it, and I'm not supportive of ignore all.... That said, this is where I stand...</p>
<p>Root of the repo has the following <code>.gitignore</code></p>
<pre class=""lang-bash prettyprint-override""><code>#########
#Exclude all
#########
################# many other project specific files unignored*****
*
!*/
!.gitignore
#########
#C-Sharp-files
#########
!*.cs
!*.csproj
!*.sln
!*.resx
!*.config
!*.ico
!*.settings
!*.exe
!*.dll
!*.ld
</code></pre>
<p>and in a subfolder <code>alpha/test_gui/gui_source</code> there is a <code>bin</code> folder. within the <code>test_gui</code> folder I have another <code>.gitignore</code> file that that has the following line</p>
<pre class=""lang-bash prettyprint-override""><code>[Bb]in/
</code></pre>
<p>I do want to ignore this folder, however, within the <code>bin</code> folder, there is a <code>scripts</code> folder I want to commit to source. the only way I can get this to work is by adding the following to the root <code>.gitignore</code></p>
<pre class=""lang-bash prettyprint-override""><code># ./.gitignore
!alpha/test_gui/gui_source/bin/scripts/*
</code></pre>
<p>and the following to the <code>.gitignore in </code>alpha/test_gui/gui_source`</p>
<pre class=""lang-bash prettyprint-override""><code># ./alpha/test_gui/gui_source/.gitignore
![Bb]in/
[Bb]in/*
![Bb]in/scripts/*
</code></pre>
<p>Is there a cleaner way of doing this?</p>
","0","12728698","",""
"74453941","8267825","2022-11-16 00:59:13","1","149","<.net><.net-core><gitignore>","Should .net framework and .net core/.net 5+ have different .gitignore files?","<p>I'm migrating one of <code>.net 4.5</code> projects to from <code>svn</code> to <code>git</code> and as far as I can tell <code>svn</code> configuration does not ignore any files. Usally I'm generating <code>.gitignore</code> files by unsing <code>dotnet new gitignore</code> or one templates by <a href=""https://github.com/github/gitignore/blob/main/VisualStudio.gitignore"" rel=""nofollow noreferrer"">github</a> or <a href=""https://www.toptal.com/developers/gitignore"" rel=""nofollow noreferrer"">gitignore.io</a>, but it seems like all of those are <code>.net core</code>/<code>.net5+</code> specific.</p>
<p>Should the <code>.gitignore</code> files be different for <code>.net framework</code> and later versions of <code>.net</code>? If so where can I find an (preferably official) example of <code>.gitignore</code> for <code>.net framework</code>?</p>
","2","8267825","",""
"74465617","19503816","2022-11-16 18:40:57","0","219","<git><jupyter-notebook><gitignore><jupyter-lab>","How to create a .gitignore file in juypter notebook?","<p>I could not find a way to create a .gitignore file in my repo that works.
I tried using <code>touch .gitignore</code> from the command line. I tried creating gitignore.txt and renaming it via the command line to .gitignore.
I dont get an error message but I also dont see a .gitignore file showing up.
When clicking on git-&gt;open .gitignore in the nav bar it says there is no such file.
Does anyone know how I can create the .gitignore file otherwise?</p>
","1","19503816","",""
"74472307","15398691","2022-11-17 08:32:10","0","28","<git><github><gitignore>","How do i specify which files to remove from the .gitignore which are still visible in the repository","<p>I want specific files to not be visible in my github repo after adding the gitignore</p>
<p>I only tried deleting from my github repo but it seems like that is not the way to do it, i want them to automatically get ignored when committing to my repo.</p>
","0","15398691","",""
"74477073","4096742","2022-11-17 14:21:49","0","28","<git><macos><gitignore>","What should I check in git config for a path that has been ignored until now?","<p>.DS_Store files have been ignored for over 3 years</p>
<p>.DS_Store file has begun listing in &quot;git status&quot; as modified.</p>
<p>~/.gitignore_global has entry .DS_Store</p>
<p>.gitconfig has listing core.excludesfile=/Users//.gitignore_global</p>
<p>git check-ignore -v -n .DS_Store
output &gt; :: .DS_Store</p>
<p>brew upgrade git</p>
<p>macOS 11.7 git 2.38.1</p>
<p>git user 8+ years</p>
","0","4096742","",""
"74498370","20545930","2022-11-19 07:55:24","2","326","<javascript><typescript><github><gitignore><github-cli>","No .gitignore template for javascript when using ""gh repo"" command? (Github CLI)","<p>I'm trying to use Github's Command Line Interface to create a new web project.</p>
<p>When I use the <code>gh repo</code> command to create a new repo, why is there no option for a <code>Javascript</code> or <code>Typescript</code> .gitignore template?</p>
<p>What kind of .gitignore do you recommend for a javascript or typescript project when setting up a git repository this way?</p>
<p><a href=""https://i.stack.imgur.com/5Xfg9.png"" rel=""nofollow noreferrer"">Choose a .gitignore template</a></p>
<p>I tired scrolling through the options for .gitignore templates, including looking next to the <code>Java</code>, and <code>Typo3</code> terms. I expected there to be a Javascript or Typescript option.</p>
","1","20545930","",""
"74498852","7870777","2022-11-19 09:26:16","2","33","<gitignore><subdirectory>","Using gitignore, what is the proper way to ignore a directory with everything in it, i.e. with double asterisk or single or none?","<p>I want to find out the proper way to exclude a subdirectory with everything in it in <code>.gitignore</code> For this, I am trying to understand the different ways of excluding a specific directory in <code>.gitignore</code>. For this, I performed a test (below), but it is a bit confusing and unclear what the difference between different uses is.</p>
<p>Test files:</p>
<pre class=""lang-bash prettyprint-override""><code>$ tree hey/
hey/
├── a
├── ab
└── abc
    └── a

2 directories, 2 files
</code></pre>
<ul>
<li>Method 1: Only the name, without slash and asterisk (<code>hey</code>)</li>
</ul>
<pre class=""lang-bash prettyprint-override""><code>$ tail -1 .gitignore
hey
$ git check-ignore -v hey hey/ hey/* hey/*/*
.gitignore:10:hey   hey
.gitignore:10:hey   hey/
.gitignore:10:hey   hey/a
.gitignore:10:hey   hey/ab
.gitignore:10:hey   hey/abc
.gitignore:10:hey   hey/abc/a
</code></pre>
<ul>
<li>Method 2: With slash, without asterisk (<code>hey/</code>)</li>
</ul>
<pre class=""lang-bash prettyprint-override""><code>$ tail -1 .gitignore
hey/
$ git check-ignore -v hey hey/ hey/* hey/*/*
.gitignore:10:hey/  hey
.gitignore:10:hey/  hey/
.gitignore:10:hey/  hey/a
.gitignore:10:hey/  hey/ab
.gitignore:10:hey/  hey/abc
.gitignore:10:hey/  hey/abc/a

</code></pre>
<ul>
<li>Method 3: With slash and asterisk (<code>hey/*</code>)</li>
</ul>
<pre class=""lang-bash prettyprint-override""><code>$ tail -1 .gitignore
hey/*
$ git check-ignore -v hey hey/ hey/* hey/*/*
.gitignore:10:hey/* hey/
.gitignore:10:hey/* hey/a
.gitignore:10:hey/* hey/ab
.gitignore:10:hey/* hey/abc
.gitignore:10:hey/* hey/abc/a
</code></pre>
<ul>
<li>Method 4: With slash and asterisk (<code>hey/**</code>)</li>
</ul>
<pre class=""lang-bash prettyprint-override""><code>$ tail -1 .gitignore
hey/**
$ git check-ignore -v hey hey/ hey/* hey/*/*
.gitignore:10:hey/**    hey/
.gitignore:10:hey/**    hey/a
.gitignore:10:hey/**    hey/ab
.gitignore:10:hey/**    hey/abc
.gitignore:10:hey/**    hey/abc/a
</code></pre>
<p>The use of asterisks in <code>.gitignore</code> are defined as follows:</p>
<div class=""s-table-container"">
<table class=""s-table"">
<thead>
<tr>
<th>Expression</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td><code>*</code></td>
<td>matches zero or additional characters</td>
</tr>
<tr>
<td><code>**</code></td>
<td>matches any file or zero or additional directories</td>
</tr>
</tbody>
</table>
</div>
<p>The results of the test above suggest that:</p>
<div class=""s-table-container"">
<table class=""s-table"">
<thead>
<tr>
<th>Expression</th>
<th></th>
</tr>
</thead>
<tbody>
<tr>
<td>Method 1 <code>hey</code></td>
<td>Excludes everything that is <code>hey</code> (<code>hey</code> file, <code>hey/</code> directory,<code>hey/*/*</code> etc)</td>
</tr>
<tr>
<td>Method 2 <code>hey/</code></td>
<td>Same as <code>hey</code></td>
</tr>
<tr>
<td>Method 3 <code>hey/*</code></td>
<td>Does not exclude <code>hey</code> as a file, but excludes it if it is a directory</td>
</tr>
<tr>
<td>Method 4 <code>hey/**</code></td>
<td>Same as <code>hey/*</code> for this specific case</td>
</tr>
</tbody>
</table>
</div>
<p>My questions are:</p>
<ul>
<li>In this use case, could there be any scenarios where there would be a difference between using <code>hey/*</code> and <code>hey/**</code>? Or would they work the same way?</li>
<li>Why does <code>hey/</code> work the same way as <code>hey</code>?</li>
<li>What is the best practice for excluding a specific subdirectory with everything in it?</li>
</ul>
","0","7870777","",""
"74560589","492307","2022-11-24 12:10:31","0","168","<git><gitignore>","Nested .gitignore files -- difference between /folder/* and !folder/","<p>I have the folder structure thus</p>
<pre><code>project/
       ----A/
            ----B/
                 -1.txt
                 -2.txt
                 -.gitignore [ content is: (Line1) * (Line2) !1.txt ]
            -.gitignore [ content is: (Line1) /B/* ]
       -.gitignore [ content is: (Line1) /A/*
.git/
-.gitignore [content is: (Line1) /project/*]
</code></pre>
<p>The above does not track <code>1.txt</code> nor does it track <code>2.txt</code></p>
<p>My understanding of <code>project/.gitignore</code> which contains:</p>
<pre><code>/A/* 
</code></pre>
<p>was:</p>
<p>Ignore everything under folder <code>A/</code> <em>except</em> for exceptions you may encounter in deeper <code>.gitignore</code>s in subfolders, for instance, due to, say <code>project/A/B/.gitignore</code> which is:</p>
<pre><code>*
!1.txt
</code></pre>
<p>that force you to track <code>1.txt</code>. That was also my interpretation of <code>project/A/.gitignore</code> which is:</p>
<pre><code>/B/*
</code></pre>
<p>That is, ignore everything under folder <code>B/</code> <em>except</em> for exceptions you may encounter in deeper <code>.gitignore</code>s in subfolders, for instance, due to, say <code>project/A/B/.gitignore</code>.</p>
<p>Since in the example above neither <code>1.txt</code> nor <code>2.txt</code> are tracked, I am unclear what the right interpretation of <code>/A/*</code> and <code>/B/*</code> mean in the context above.</p>
<p>Everything else being the same, the following change to <code>project/.gitignore</code> of:</p>
<pre><code>!A/
</code></pre>
<p>tracks <code>1.txt</code> while not tracking <code>2.txt</code>.</p>
<p>I would like to understand clearly why <code>/A/*</code> does not work while <code>!A/</code> works in this case.</p>
","3","492307","",""
"74576728","18718362","2022-11-25 18:29:11","1","156","<python><django><gitignore><env-file>",".env file not gitignored. I had someone do it manually for me once","<p>So im currently working on a project and my my .env file is not greyed out (gitignore?). Trying to figure out what I need to do globally because I do have the file but my .env is never greyed out. Any suggestions? I can provide screenshots if needed.</p>
<p>I had someone do a a few commands in the terminal and was able to get my .env to go grey once. But I believe he told me he wasn't able to do it globally.</p>
<p>Reach out for help.</p>
","1","18718362","",""
"74587728","648368","2022-11-27 05:31:05","0","33","<git><visual-studio><ide><gitignore><ignore>","location of tasks.vs.json ignored by vs recommended .gitignore","<p>In every .gitignore template for Visual studio (e.g. <a href=""https://github.com/github/gitignore/blob/main/VisualStudio.gitignore"" rel=""nofollow noreferrer"">Here</a>)<br />
the <code>.vs</code> cache directory is marked as <strong>to ignore</strong>.</p>
<p>but when i create a Task (right click on solution explorer &gt;&gt; Configure tasks), it create a file named <code>tasks.vs.json</code> inside the <code>.vs</code> folder!</p>
<p>I noticed I can move the file out of that directory and have the tasks available, but still 'Configure Tasks' will create a new file inside <code>.vs</code>!</p>
<p>I know I can &quot;un-ignore&quot; specific files in GitIgnore, thats an option, but I seek a cleaner way.</p>
<p>So my questions are:</p>
<ol>
<li>Can I tell VS that my Task.vs.json belong outside <code>.vs</code> folder?</li>
<li>Did MS intend the Tasks to be user specific ? (unlikely)</li>
</ol>
","3","648368","",""
"74647600","11857974","2022-12-01 20:05:07","0","363","<git><github><gitignore>","How to ignore some files and directories using .gitgnore?","<p>I have a directory structured like this:</p>
<pre><code>main_folder
 .git
 .gitignore
 rootfolder
  .DS_Store
  folder1
   .ipynb_checkpoints/filename-checkpoint.csv
   abc.txt
   def.json
   somedir
    more.json
  folder2
   .DS_Store
   .ipynb_checkpoints/file-filename2-checkpoint.csv
   rty.csv
   somedir
    uis.py
    .ipynb_checkpoints/filename1-checkpoint.csv
    .DS_Store
</code></pre>
<p>Being in the main_folder, I would like to commit everything, except all folders and files having the <code>DS_Store</code> or <code>ipynb_checkpoints</code> substring.</p>
<p>In this specific case, I would like to commit:</p>
<pre><code>main_folder
 rootfolder
  folder1
   abc.txt
   def.json
   somedir
    more.json
  folder2
   rty.csv
   somedir
    uis.py
</code></pre>
<p>In <code>.gitignore</code>-file, I have added:</p>
<pre><code>**/checkpoint.csv
**/.DS_Store
</code></pre>
<p>But not all checkpoint files have being ignored.
What command lines should I add into my <code>.gitignore</code> file located in <code>main_folder</code>-directory</p>
","1","11857974","",""
"74822390","17409864","2022-12-16 09:17:59","3","210","<git><gitignore><pre-commit-hook>","Can I make .gitignore ignore all folders that contain a folder with a particular name?","<p>For example, given the worktree below, if I init git repo in folder <code>my_folder</code> and type <code>git add .</code>, I <strong>do not</strong> want the folders <code>django-backend</code> and <code>test-vue</code> added or tracked by Git.</p>
<pre><code>my_folder/
  audio/
    Michael Jackson.mp3
  images/
    nature.jpg
  projects/
    projects_info.md
    django-backend/
      .git/
      manage.py
      poetry.lock
    test-vue/
      .git/
      yarn.lock
</code></pre>
<p>I tried this but didn't get the desired effect:</p>
<pre><code>.git/**/*
</code></pre>
","5","17409864","",""
"74868812","19366635","2022-12-20 20:57:24","-1","24","<git><gitignore>","How do I make git stop tracking files with the same extension?","<p>I want git to stop tracking the .class files of my folder, I don't really need them to be tracked, I know I can put their names on .gitignore but is there a way to just ignore any future, past and present things that has the .class extension?</p>
","5","19366635","",""
"74903220","2415183","2022-12-23 19:09:29","0","36","<json><git><github><gitignore>","Can files added to gitignore be used if the repo has been pulled or cloned?","<p>I have some json files for a mock server I use for automation tests I have created. I don't want to commit those json files because they have tokens in them that I don't want to push to my repo. I know I can use gitignore to not track those json files but I need for anyone who pulls or clones my repo to be able to run my automation tests and those tests need those json files. If someone pulls or clones my repo will they still be able to run my tests even if I have the files in gitignore?</p>
","5","2415183","",""
"74931162","9672287","2022-12-27 15:27:21","0","54","<visual-studio-code><gitignore>","VSCode Explorer always excludes files in .gitignore","<p>Using VS Code 1.74.2, any files or folders in .gitignore are excluded from the File Explorer tree. None of the solutions seen on the web work...</p>
<pre><code>&quot;explorer.excludeGitIgnore&quot;: false, doesn't work
files: exclude doesn't work
</code></pre>
<p>Isn't .gitignore meant to indicate files and folders you don't want in the repository? If yes, then why does it also remove them from the VS Code file explorer. What can I do to stop files and folders going into the repository but still have them visible in the File Explorer tree?</p>
<p>Thanks</p>
","5","9672287","",""
"74936749","16129964","2022-12-28 05:59:36","2","41","<git><gitignore>","Why is gitignore ignoring all my files despite writing only one file to be ignored?","<p>I created a gitignore in the root of my project folder like this:</p>
<pre><code>*

!src/
!.gitignore
</code></pre>
<p>And in my src folder, I have 2 files and a file I want to keep in the local folder but exclude from the repository (3 files in total). So I created another gitignore file in the src folder like this:</p>
<pre><code>file.txt
</code></pre>
<p>The command line:</p>
<pre><code>git add .
git commit -m &quot;message&quot;
git push
</code></pre>
<p>When I went to my repo, it indeed excluded everything but the src folder and the gitignore file, but in the src folder in the repo, I found only the gitignore file and not the other files.</p>
","0","16129964","",""
"74970977","18616233","2022-12-31 16:58:14","-2","327","<kotlin><console-application><gitignore>","What do I add in the .gitignore of a console application with kotlin?","<p>I want to upload a console project made in kotlin to my repository on GitHub, but I don't know which files should go in the .gitignore</p>
<p>I searched the internet for files to put, but I have nothing clear</p>
","0","18616233","",""
"74996394","12121732","2023-01-03 17:01:46","0","53","<angular><gitignore>","Yet another .gitignore not ignoring .angular/cache entry","<p>So I have looked at all the answers relating to the .angular/cache folder not being ignored when pushing a project to a remote repo. I have created a new project with Angular 14.</p>
<p>Here is my .gitignore file in root of the project (just part of the ignore file, this is the last entry in the file).</p>
<pre><code># Angular
/.angular
</code></pre>
<p>here is a screen shot of my project showing that the .angular folder is greyed out, which I am assuming means the folder is being ignored by git.
<a href=""https://i.stack.imgur.com/yfGjc.png"" rel=""nofollow noreferrer"">project structure</a></p>
<p>I have run the following commands:</p>
<pre><code>git rm -r --cached .
git add .
git commit -m &quot;.gitignore is now working&quot;
</code></pre>
<p>I have tried different entries in the .gitignore file</p>
<pre><code>.angular/cache
/.angular/cache
.angular
.angular/
.angular/*
</code></pre>
<p>I have tried removing from cache the .angular folder specifically</p>
<pre><code>Massimos-MBP:paradolia-admin skypirate$ git rm -r --cached /.angular
fatal: /.angular: '/.angular' is outside repository at '/Users/skypirate/Projects/paradolia-admin'
</code></pre>
<p>or this</p>
<pre><code>Massimos-MBP:paradolia-admin skypirate$ git rm -r --cached .angular
fatal: pathspec '.angular' did not match any files
</code></pre>
<p>I double checked and the folder .angular is definitely in the project folder root.</p>
<p>I have even tried removing the .angular folder completely from the project.</p>
<p>No matter what I try I get the following error when I run:</p>
<pre><code>git push -u origin main
</code></pre>
<pre><code>Massimos-MBP:paradolia-admin skypirate$ git push -u origin main
Enumerating objects: 1691, done.
Counting objects: 100% (1691/1691), done.
Delta compression using up to 2 threads
Compressing objects: 100% (1667/1667), done.
Writing objects: 100% (1691/1691), 66.38 MiB | 2.30 MiB/s, done.
Total 1691 (delta 274), reused 0 (delta 0), pack-reused 0
remote: Resolving deltas: 100% (274/274), done.
remote: warning: File .angular/cache/15.0.2/angular-webpack/54656bafcc60881502aad32eb4a45285fa9bc9e6/1.pack is 98.46 MB; this is larger than GitHub's recommended maximum file size of 50.00 MB
remote: error: Trace: 2fb04feb3b57a0caa4fd663ff04799796e001b6a7a7b055a5f6ed0120d4bbf0f
remote: error: See http://git.io/iEPt8g for more information.
remote: error: File .angular/cache/15.0.2/angular-webpack/e3ac25d47496cbc2f9e3adbe205cac2ccb01848d/0.pack is 285.25 MB; this exceeds GitHub's file size limit of 100.00 MB
remote: error: File .angular/cache/15.0.2/angular-webpack/54656bafcc60881502aad32eb4a45285fa9bc9e6/0.pack is 112.29 MB; this exceeds GitHub's file size limit of 100.00 MB
remote: error: GH001: Large files detected. You may want to try Git Large File Storage - https://git-lfs.github.com.
To https://github.com/Bluemax86/paradolia-admin.git
 ! [remote rejected] main -&gt; main (pre-receive hook declined)
error: failed to push some refs to 'https://github.com/Bluemax86/paradolia-admin.git'
</code></pre>
<p>Is there a path specified somewhere that tells git which .angular folder to look at?</p>
<p>Any help would be appreciated.</p>
","3","12121732","",""
"75076010","11377572","2023-01-10 21:23:06","1","31","<git><pycharm><gitignore>","gitignore cannot ignore folders from last commit","<p>I try to ignore .idea directory when commit and push to remote repository. I set my .gitignore file in following way:</p>
<pre><code>### IntelliJ IDEA ###
.idea
*.iws
*.iml
*.ipr
</code></pre>
<p>But when I committed and pushed to tfs repository, I found the .idea folder is still pushed to repo.</p>
<p>Is there anyway to remove .idea folder from repository and ignore it in future commit and push?</p>
<p>Note: I have already committed and pushed to remote repository without setting up .gitignore file. I think the .idea folder in repo is from last commit.</p>
<p><a href=""https://i.stack.imgur.com/91ymf.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/91ymf.png"" alt=""enter image description here"" /></a></p>
","6","11377572","",""
"75092537","2597758","2023-01-12 06:49:01","1","65","<gitignore>","Why are some files under `.gradle/` not ignored despite .gradle in .gitignore?","<p>This is my <code>.gitignore</code> (.gradle/ in the 17th line):</p>
<pre><code># Built application files
*.apk
*.aar
*.ap_
*.aab
# Files for the ART/Dalvik VM
*.dex
# Java class files
*.class
# Generated files
bin/
gen/
out/
#  Uncomment the following line in case you need and you don't have the release build type files in your app
# release/
# Gradle files
.gradle/
build/
# Local configuration file (sdk path, etc)
local.properties
# Proguard folder generated by Eclipse
proguard/
# Log Files
*.log
# Android Studio Navigation editor temp files
.navigation/
# Android Studio captures folder
captures/
# IntelliJ
*.iml
.idea/
# .idea/workspace.xml
# .idea/tasks.xml
# .idea/gradle.xml
# .idea/assetWizardSettings.xml
# .idea/dictionaries
.idea/libraries
# Android Studio 3 in .gitignore file.
.idea/caches
.idea/modules.xml
# Comment next line if keeping position of elements in Navigation Editor is relevant for you
.idea/navEditor.xml
# Keystore files
# Uncomment the following lines if you do not want to check your keystore files in.
*.jks
*.keystore
# External native build folder generated in Android Studio 2.2 and later
.externalNativeBuild
.cxx/
# Google Services (e.g. APIs or Firebase)
google-services.json
# Freeline
freeline.py
freeline/
freeline_project_description.json
# fastlane
fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots
fastlane/test_output
fastlane/readme.md
# Version control
vcs.xml
# lint
lint/intermediates/
lint/generated/
lint/outputs/
lint/tmp/
# lint/reports/
# MacOS
.DS_Store
# App Specific cases 
app/release/output.json
.idea/codeStyles/
# Android Profiling
*.hprof
</code></pre>
<p>Yet, when I view the list of unstaged changes, I see there some files under the <code>.gradle/</code> folder:</p>
<p><a href=""https://i.stack.imgur.com/Wuls6.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Wuls6.png"" alt=""Unstaged Changes via Git Gui"" /></a></p>
<p>Why aren't these files ignored like other .gradle files?</p>
","3","2597758","",""
"75122440","13876967","2023-01-15 01:41:30","1","215","<git><next.js><gitignore><vercel>","Using .gitignore files in Vercel","<p>I have a Next.js project. I want to push it to GitHub and link it to Vercel. However, there are files in .gitignore that I need Vercel to see. Instead of adding all that data into my environment file, I am looking for another way to hide these files from GitHub but make visible to Vercel. Any suggestions?</p>
","2","13876967","",""
"75136512","997979","2023-01-16 15:41:10","1","43","<git><gitignore>","How to check which tracked files are currently gitignore'd/non-gitignore'd?","<p>I have modified my <code>.gitignore</code> file to keep it cleaner, but I expect it has the same behaviour than previously and I would like to check that it would not ignore any of my already tracked files (if they were not tracked).</p>
<p>How can I check it? Is there some way to list the tracked files that would be covered by the current <code>.gitignore</code> rules (so ideally this list would be empty)?</p>
<p>Thanks!</p>
","2","997979","",""
"75200069","11011605","2023-01-22 11:34:38","0","29","<android><git><android-studio><gitignore>","Andorid misc.xml and gradle.xml files problem when changing git branches","<p>Well I face this situation for long time in multiple projects. I always solve it on different ways, but I would like to know what is the best solution and explanation why this happens.</p>
<p>For example I git cloned new project from git and imported it in my android studio. At the beginning I am on master branch. Now I want to change to UnitTesting branch. But when I try to do it, I get message:
&quot;Your local changes to the following files would be overwritten....&quot;. And it shows me misc.xml and gradle.xml files.</p>
<p>Why are these files changed and I don't have identical project that I cloned? I guess they contain some settings info related to the IDE that I use locally and the author of project on git has so it makes some differences to adapt project to my IDE..? Can I get little bit explanation.</p>
<p>And what is best approach to solve these kind of situations.
Thanks in advance!</p>
","0","11011605","",""
"75254714","4770853","2023-01-27 06:26:32","1","47","<git><gitignore>","Adding all .ipyn checkpoint files to git ignore","<p>I am a data scientist and I do a lot of prototyping in jupyterlab.  The problem is jupyterlabn autosaves a lot of checkpoint files and when I do git add -A this will rope them in as well forcing me to either add more pointedly (which can be annoying if I've generated a bunch of image files of plots that I want to keep) or to remove them to the commit before running git commit and pushing.  How can I add a general block on all file containing this substring <code>.ipynb_checkpoints</code> so for instance none of the checkpoint files will be included in this list:</p>
<pre><code>new file:   .ipynb_checkpoints/High_IEG_expressing_cells-checkpoint.Rmd
#       modified:   DGC_Cck_to_Malat1_BehaviouralAxis.Rmd
#       new file:   EngramCellClassifier/Chen2020_GSE152632/.ipynb_checkpoints/ExcitatorySampleCorrelation-checkpoint.png
#       new file:   EngramCellClassifier/Chen2020_GSE152632/.ipynb_checkpoints/ExcitatorySamplesAllGenesExpression-checkpoint.png
#       new file:   EngramCellClassifier/Chen2020_GSE152632/.ipynb_checkpoints/Filterddata_ExcitatorySampleCorrelation-checkpoint.png
#       modified:   EngramCellClassifier/Chen2020_GSE152632/.ipynb_checkpoints/Pavlab_remotememory_DEG_analysis-checkpoint.ipynb
#       new file:   EngramCellClassifier/Chen2020_GSE152632/.ipynb_checkpoints/RemoteMemoryMarkersExpressionSampleLevel-checkpoint.png
#       new file:   EngramCellClassifier/Chen2020_GSE152632/.ipynb_checkpoints/pseudobulk_sample_corrrealtionmatrix-checkpoint.jpeg
#       new file:   EngramCellClassifier/Chen2020_GSE152632/.ipynb_checkpoints/test-checkpoint.jpg
#       new file:   EngramCellClassifier/Chen2020_GSE152632/ExcitatorySampleCorrelation.png
#       new file:   EngramCellClassifier/Chen2020_GSE152632/ExcitatorySamplesAllGenesExpression.png
#       new file:   EngramCellClassifier/Chen2020_GSE152632/Filterddata_ExcitatorySampleCorrelation.png
#       modified:   EngramCellClassifier/Chen2020_GSE152632/Pavlab_remotememory_DEG_analysis.ipynb
#       new file:   EngramCellClassifier/Chen2020_GSE152632/RemoteMemoryMarkersExpressionSampleLevel.png
#       new file:   EngramCellClassifier/Chen2020_GSE152632/pseudobulk_sample_corrrealtionmatrix.jpeg
#       modified:   High_IEG_expressing_cells.Rmd
</code></pre>
","1","4770853","",""
"75356471","9643759","2023-02-06 00:35:08","0","12","<security><github><gitignore><repo>","Are there any files in a Windows Form App (without a gitignore) that could potentially leak any private information?","<p>This visual studio windows form app project was uploaded alongside a Visual Studio Code project that already contains a gitignore file. I'm not in the mood to add more to the gitignore file if this isn't a privacy issue when the repo goes public.</p>
","0","9643759","",""
"75366970","2636054","2023-02-06 21:54:51","0","43","<git><version-control><gitignore><git-add>","Does git add -A respect .gitignore?","<p>I have several <code>target</code> subdirectories in my project that I do not want to track. So I removed them all with:</p>
<p><code>find . -type d -name 'target' -print0 | xargs -0 git rm --cached -r --</code></p>
<p>I also added <code>./*/target/</code> to my <code>.gitignore</code> file.</p>
<p>I then ran <code>git add -A</code> and it appears all of my <code>target</code> subdirectories were tracked and I had to remove them again.</p>
<p>Does <code>git add -A</code> simply not respect <code>.gitignore</code>? Will I have to run <code>git add</code> with a different option?</p>
","2","2636054","",""
"75370867","19931081","2023-02-07 08:47:19","-1","166","<git><commit><gitignore>","Is package-lock.json file important? How do you add the file package-lock.json to gitignore?","<p>I need to add <code>package-lock.json</code> to gitignore before doing a commit. How do I do it ?</p>
","0","19931081","",""
"75406416","19290956","2023-02-10 02:36:43","1","94","<git><version-control><gitignore>","correct way to use .gitignore? Is it potentially dangerous?","<p>From my understanding .gitignore makes git ignore files that are &quot;irrelevant&quot; to the project, and those files are just sit there in your harddrive, won't be affected no matter how you use git.</p>
<p>However, recently when I'm using gitea and its gitignore templates, I've encountered this situation that seems quite dangerous:</p>
<p>*.dll was somehow added to .gitignore, thus when I clone my project from server to my new device, those dlls disappeared and the project become unusable. (Fortunately I still have copy on my old device)</p>
<p>It seems gitea's ignore templates are not 100% safe to use, but I myself can't figure out much on what files can be SAFELY ignored. Currently I have to just leave .gitignore blank.</p>
<p>So what's the proper way to use .gitignore?</p>
","2","19290956","",""
"75425606","3746069","2023-02-12 07:58:23","0","95","<git><git-submodules><gitignore><git-subtree>","Nested folder structure with multiple git repos: submodules, subtrees or .gitignore?","<p>I have set up a set of large Repositories (interlinked HTML-Documentation) and have these requirements:</p>
<ol>
<li>since they are large, i needed to split them up into multiple Repos</li>
<li>Repos need to be checked out into a fixed Folder structure so the relative Links work</li>
<li>users should be able to pick and check out individual repos</li>
<li>all Repos have a simple, linear history with usually only 'main' branch</li>
<li>The actual Version of each repo is not critical (unlike with Code), as long as the files are not moved (which is forbidden, users are asked to leave a forwarding tombstone)</li>
<li>List item</li>
</ol>
<p>This is what I have tried:</p>
<ol>
<li><p>nested submodules: these quickly created conflicts with me, because they track the individual version of each sub-repo which is different in each clone. (Sub-question: are these conflicts 'normal'? Does this ever work in a distributed environment where submodules constantly change or it it a bad idea to use submodules?)
We have started to no longer check in the upper/downstream Repos to avoid conflicts, but one result is that it is always 'dirty'</p>
</li>
<li><p>nested repositories in Folders marked as .gitignore: This seems to works and is sufficient, because the versions between individual repos are not critical. I wonder though if this is a good practice. Mind that cloning all sub-repos is a hassle, but individual users must be able to pick sub-sections. I think about checking in scripts to clone and pull whole sub-directories of repos, but is there maybe a better way?</p>
</li>
<li><p>subtrees: AFAIK these track the full history of the nested repos within the upper/root repo, which would be way too huge. Can someone comment on this?</p>
</li>
</ol>
","3","3746069","",""
"75463018","13100028","2023-02-15 16:51:42","-2","64","<git><gitignore><python-venv>","how do I make git stop staging files that are included in .gitignore?","<p>I'm learning git and completely lost track of what I'm doing in the process. I cloned my repo, created a folder structure and a virtual environment (which I wanted to exclude in .gitignore) and staged the whole creation.</p>
<p>What I did cronologically, is as follows:</p>
<ol>
<li>I created a folder &quot;python-projects&quot; and cloned my git repo into it.</li>
<li>Then I created the folder structure in it as below:</li>
</ol>
<p>python-projects/<br />
...   .git<br />
...   README.md<br />
...   django4/<br />
... ... projcet-blog/<br />
... ... project-jobapp/</p>
<ol start=""3"">
<li><p>created a virtual environment named &quot;env&quot; in the folder project-jobapp (<code>python3 -m venv env</code> --&gt; hence the folder &quot;env&quot; below)</p>
</li>
<li><p>started a django project named &quot;jobapp in the folder project-jobapp (hence the folder jobapp below)</p>
</li>
<li><p>I created a .gitignore file in the folder project-jobapp with the content &quot;.venv&quot;. so in the end i had the following structure:</p>
</li>
</ol>
<p>python-projects/<br />
...   .git<br />
...   README.md<br />
...   django4/<br />
... ...      projcet-blog/<br />
... ...      project-jobapp/<br />
... ... ...     .gitignore<br />
... ... ...      jobapp/<br />
... ... ...      env/</p>
<ol start=""6"">
<li>in the folder project-jobapp I ran <code>git add *</code>.</li>
</ol>
<p>What happened is that git staged the whole virtual environment as well, i see it in <code>git status</code>. However, this was exactly what I did not want it to do.</p>
<p>What I actually wanted to do: stage the whole folder strucutre WITHOUT the virtual environment.</p>
<p>So, I tried to solve it with the following steps:</p>
<ol>
<li><p>in the folder project-jobapp I ran <code>git reset HEAD *</code> --&gt; this cleared my staging area, thus I was at the beginning, as if I had done nothing yet...</p>
</li>
<li><p>I googled solutions for how to not stage, and stumbled upon <code>git rm --cached</code>, so tried it on the README.md in the parent folder... now I succesfully removed it from being tracked... but...</p>
</li>
</ol>
<p>If i run <code>git add *</code> in the parent folder, the venv still gets staged, but README.md no more... :D</p>
<p>To sum it up, I find no solution for:</p>
<ol>
<li>add README.md back to the tracked files</li>
<li>remove my venv from being tracked and staged</li>
<li>what would have been the correct sequence of steps, and the correct way to ignore the virtual environment, now, that you know what i wanted to achieve?</li>
</ol>
<p>Thank you very much in advance!</p>
","2","13100028","",""
"75489718","11982253","2023-02-17 22:17:52","-1","65","<git><github><gitignore>","Set up .gitignore file for .NET project","<p><a href=""https://i.stack.imgur.com/PSQwJ.png"" rel=""nofollow noreferrer"">enter image description here</a>
Can you please tell me how to set .gitignore in such a way that only the project and source code files remain when committing a .NET project?</p>
<p>I just try set up my .gitignore)))</p>
","0","11982253","",""
"75499422","13433795","2023-02-19 10:21:20","1","67","<flutter><git><github-actions><gitignore>","Accidentally deleted git ignored file in Flutter project","<p>I accidentally deleted a file that was in <code>.gitignore</code>, let's call the file <code>abc</code>. Since the file was an important asset and was located in <code>pubspec.yaml</code> under the &quot;asset&quot; entry, every time the workflow starts it fails when it runs &quot;flutter analyze&quot;. Any suggestions?</p>
","0","13433795","",""
"75497368","10305444","2023-02-19 01:02:15","1","36","<git><gitignore>","gitignore include specific sub-directory from ignored/excluded directory","<p>I want ignore everything EXCEPT for one folder in my <code>node_modules</code>. So here is what I have put in my <code>.gitignore</code>:</p>
<pre><code>!/node_modules/abc/*
/node_modules
</code></pre>
<p>Also tried:</p>
<pre><code>!node_modules/abc/*
node_modules/*
</code></pre>
<p>But it is not working, as it is supposed to. This is making every folder inside <code>node_modules</code> getting ignored.</p>
","0","10305444","",""
"75528931","","2023-02-22 06:22:40","0","63","<git><github><gitlab><gitignore>",".gitignore does not ignore defined folders for Fullstack app","<p>I have a fullstack app and the folder structure as shown below:</p>
<pre><code>
my-app
  |_____ .git
  |_____ backend
  |_____ frontend 
  |_____ .gitignore  
</code></pre>
<p>As I want to keep all project files in a single repo on GitHub, I init my <code>.git</code> repo in the root folder (there is no <code>.git</code> or <code>.gitignore</code> in the project directories (backend or frontend). However, although I included the target folders and log directory in my backend project, I still see these directories as changes when I execute <code>git status</code> as shown below:</p>
<pre><code>modified:   .gitignore
modified:   backend/logs/application.log
modified:   backend/target/account-api-0.0.1-SNAPSHOT.jar
modified:   backend/target/classes/com/company/common/Constants.class
</code></pre>
<p>I tried various combinations by following <a href=""https://www.atlassian.com/git/tutorials/saving-changes/gitignore"" rel=""nofollow noreferrer"">https://www.atlassian.com/git/tutorials/saving-changes/gitignore</a>. But does not make any sense. Here is related part of my <code>.gitignore</code>. I am not sure if I should restart command Window or make anything the changes take effect.</p>
<pre><code>target/
logs/
!.mvn/wrapper/maven-wrapper.jar
!**/src/main/**/target/
!**/src/test/**/target/

### Java ###
# Compiled class file
*.class

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar

...
</code></pre>
<p>So, how should I update related ignore files and locations when I move <code>.gitignore</code> from:</p>
<blockquote>
<p>from backend folder --&gt; to my-app folder</p>
</blockquote>
<p>I also tried to add <code>backend</code>, or <code>/backend</code> to some fields, but still no changes. Of course it would be better use a wildcard to cover all the related folders e.g. target. Any idea?</p>
","8","","",""
"75584669","10864356","2023-02-27 19:14:14","0","22","<git><react-native><gitignore>","React Native: adding *.hprof to gitignore doesn't work","<p>I get a list of about 10 errors analogous to the following one when running <code>git push origin master</code>: <code>remote: error: File android/java_pid60072.hprof is 564.94 MB; this exceeds GitHub's file size limit of 100.00 MB</code></p>
<p>From <a href=""https://stackoverflow.com/questions/33330771/git-lfs-this-exceeds-githubs-file-size-limit-of-100-00-mb"">this post</a> I added <code>*.hprof</code> to my .gitignore file. I then made some additional edits, did a commit, and it still generated this list of errors.</p>
<p>Why might my build be failing to ignore the hprof files? Here's the relevant section of my .gitignore:</p>
<pre><code># Android/IntelliJ
#
build/
.idea
.gradle
local.properties
*.iml
*.hprof
</code></pre>
","5","10864356","",""
"75597991","10534633","2023-02-28 22:39:52","0","30","<git><directory><gitignore>","Why does Git tracks only some directories with ./ prefix from .gitignore?","<p>I'm used to using <code>./</code> prefix for directories, which is why I've created such a <code>.gitignore</code> file:</p>
<pre><code>./test1/
./test2/
./test3/
./bin/
</code></pre>
<p>However, it was not working properly, and I spent a lot of time trying to remove the first three directories from <code>git status</code> output (only <code>./bin</code> was not listed out).</p>
<pre><code>$ git status
On branch nowe
Untracked files:
  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)
        test1/
        test2/
        test3/

nothing added to commit but untracked files present (use &quot;git add&quot; to track)
</code></pre>
<p>Then, I came up with an idea to remove the <code>./</code> prefix from <code>.gitignore</code> file and it worked:</p>
<pre><code>$ git status
On branch nowe
Changes not staged for commit:
  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
  (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)
        modified:   .gitignore

no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)
</code></pre>
<p>Removing / restoring the <code>./</code> prefix for <code>./bin</code> folder changes nothing.</p>
<p>This situation seems to be unusual and illogical. Why does it happen?</p>
","6","10534633","",""
"75633834","21329868","2023-03-04 05:27:38","1","79","<github><gitignore><github-desktop>","i can add folders in gitignore with [] names","<p>i can add folders in gitignore with [] names  i have folder wit this names</p>
<pre><code> [exampel] / [example2] / folder / file.lua

</code></pre>
<p>in github desktop when i want to gitignore this file
right click and gitignore this file
github add this to gitignore</p>
<pre><code>+\[exampel\]/\[example2\]/folder /json/data.json

</code></pre>
<p>i want manually add  like **\folder<br />
not work
all of then
i cant do anything on my folder have [] in names in gitignore</p>
<p>add folder to gitignore</p>
","0","21329868","",""
"75660144","21347986","2023-03-07 09:30:39","-1","54","<git><macos><terminal><gitignore>","KevinCookieCompany: .gitignore is not ignoring .txt file on Mac","<p><strong>Created .gitignore in TextEdit and saved as plain text document.</strong></p>
<p>(hashtag) ignore all .txt files</p>
<p>*.txt</p>
<p><strong>When I check git status in terminal the file Employee Salaries.txt still shows up.</strong>
On branch main</p>
<p>No commits yet</p>
<p>Untracked files:
(use &quot;git add ...&quot; to include in what will be committed)
.DS_Store
.gitignore.txt
Employee Salaries.txt
KCC Logo.png
index.htm
secret recipe.htm</p>
<p><strong>[Photo of how it looks]</strong>(<a href=""https://i.stack.imgur.com/feniL.png"" rel=""nofollow noreferrer"">https://i.stack.imgur.com/feniL.png</a>)
<strong>The files are all in red and not commited.</strong></p>
<p><strong>Thought maybe .gitignore file needed another format. Changed it from a .txt file to a .rtf file. Did not make a difference. In Finder it shows as .gitignore</strong>
<strong>[Photo of how its saved]</strong><a href=""https://i.stack.imgur.com/NqRWP.png"" rel=""nofollow noreferrer"">1</a></p>
","1","21347986","",""
"75692486","4401676","2023-03-10 05:16:04","0","51","<git><github><gitignore>","How to exclude file from ignore list of gitignore","<p>I have two files .cat and .inf which are not mentioned in the .gitignore file. But still, they are greyed out in VS code which shows that they are not getting committed/uploaded to the git repo.</p>
<p><code>my-file.cat</code>
<code>my-file.inf</code></p>
<p>I am using the visual studio default .gitignore file.</p>
<p>ref: <a href=""https://github.com/github/gitignore/blob/main/VisualStudio.gitignore"" rel=""nofollow noreferrer"">https://github.com/github/gitignore/blob/main/VisualStudio.gitignore</a></p>
<p>how to explicitly mention to include some files. or are there any global ignore settings in which these files are mentioned to be ignored by default?</p>
","3","4401676","",""
"75743950","21403057","2023-03-15 11:14:38","1","33","<git><gitignore>","Git gitignore undos the ./git/info/exclude files","<p>I have a conflict between gitignore and ./git/info/exclude.</p>
<p>Folder content</p>
<pre><code>.git
.gitignore   
test_file.txt
</code></pre>
<p>./git/info/exclude</p>
<pre><code>test_file.txt
</code></pre>
<p>.gitignore</p>
<pre><code>*
!*.txt
</code></pre>
<p>git status</p>
<pre><code>On branch master

No commits yet

Untracked files:
  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)
        test_file.txt

nothing added to commit but untracked files present (use &quot;git add&quot; to track)
</code></pre>
<p>I know that the problem is in .gitignore, and .git/info/exlude executes before .gitignore. But if I add the <code>test_file.txt</code> after <code>!*.txt</code>, it will work. How do I can solve that without changing .giignore file? How to tell git to apply .git/info/exclude after .gitignore?</p>
","1","21403057","",""
"75829086","21476928","2023-03-24 00:26:23","0","130","<git><macos><unity-game-engine><github><gitignore>","unity gitignore on mac, will not exclude library files","<p>The problem: I have a project that I have to use a mac for - I want to push the repo to a remote on my github but my gitignore is causing an absolute headache.</p>
<p>It isnt ignoring the unity library at all.</p>
<pre><code># This .gitignore file should be placed at the root of your Unity project directory
#
# Get latest from https://github.com/github/gitignore/blob/master/Unity.gitignore
#
/[Ll]ibrary/
/[Tt]emp/
/[Oo]bj/
/[Bb]uild/
/[Bb]uilds/
/[Ll]ogs/
/[Mm]emoryCaptures/

# Never ignore Asset meta data
!/[Aa]ssets/**/*.meta

# Uncomment this line if you wish to ignore the asset store tools plugin
# /[Aa]ssets/AssetStoreTools*

# TextMesh Pro files
[Aa]ssets/TextMesh*Pro/

# Autogenerated Jetbrains Rider plugin
[Aa]ssets/Plugins/Editor/JetBrains*

# Visual Studio cache directory
.vs/

# Gradle cache directory
.gradle/

# Autogenerated VS/MD/Consulo solution and project files
ExportedObj/
.consulo/
*.csproj
*.unityproj
*.sln
*.suo
*.tmp
*.user
*.userprefs
*.pidb
*.booproj
*.svd
*.pdb
*.mdb
*.opendb
*.VC.db

# Unity3D generated meta files
*.pidb.meta
*.pdb.meta
*.mdb.meta

# Unity3D generated file on crash reports
sysinfo.txt

# Builds
*.apk
*.unitypackage

# Crashlytics generated file
crashlytics-build.properties


</code></pre>
<p>Im in the early stages of the project so i've been able to completely delete the directory and start over using 'rm -fr .git' , i have tried untracking all files using 'git rm --cached -r .' these work, but when I 'git add .' it doesnt ignore the library, and when i check 'git status' the library is staged.</p>
<p>The .gitignore is saved in the root of the directory and I have tried checking 'git check-ignored' to see if its actually functioning but it doesn't come up with anything - which made me think that the git ignore wasn't working - I then checked to see if this was because the .gitignore was saved as a .rtf - it was and I removed the .rtf extension and it still doesn't work - so I'm at a loss.</p>
<p>I hope this is formatted okay.</p>
<p>Thanks in advance,</p>
<p>A</p>
","4","21476928","",""
"75829827","14607220","2023-03-24 03:38:13","-2","59","<reactjs><git><node-modules><gitignore>","git-ignore doesn't ignoring node_modules","<p><a href=""https://i.stack.imgur.com/50NfL.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/50NfL.png"" alt=""My folder structure"" /></a></p>
<p>I include node_modules in gitignore but still github desktop suggest changes to push.</p>
","0","14607220","",""
"75862631","12172940","2023-03-28 05:34:12","0","51","<github><three.js><gitignore>","How do I have github ignore the three.js dependencies I have installed?","<p>So I'm a student trying to learn how to code front end of websites. I'm currently using HTML, CSS and some JS frameworks and pushing them to a github repository through VSCode. Just for practice and understanding, I installed Three.js through npm but want to ignore the node_module files through gitingore. Only thing is and I don't know how to do it in VSCode.</p>
<p>P.S I'm also learning react and so have managed to install Three.JS on it as it comes with it's own git ignore in the react package. I just want to know to install Three.js otherwise and have it work cause I generally don't like linking the script through a URL. It would be cool if somebody could explain to me and how git ignore generally works and if there is anything specific I have to do for the aforementioned situation</p>
<p>I eventually intend to upload these files to github which is connected to netlify and is hosting a static website for me on my own domain, but that's a bit far off in my plans right now</p>
<p>Again just here to learn because the documentation online is a bit confusing for a less coding centric student</p>
","0","12172940","",""
"75868564","1943849","2023-03-28 16:05:52","1","77","<linux><git><gitignore>","What does ""./"" mean in .gitignore, and why it prevents the directory from being matched?","<p>The following <code>.gitignore</code> doesn't prevent <code>node_modules</code> from being tracked:</p>
<pre><code>./cdk/node_modules/
</code></pre>
<p>While any of these do:</p>
<pre><code>cdk/node_modules/
</code></pre>
<pre><code>/cdk/node_modules/
</code></pre>
<p>I didn't find any mentioning of <code>./</code> in the <a href=""https://git-scm.com/docs/gitignore"" rel=""nofollow noreferrer"">doc</a>.</p>
<p>Is there any meaning attached to <code>./</code> in <code>.gitignore</code>, or is it just a &quot;dot&quot; folder? Is it possible to have such folder at all? If not, does this mean <code>./</code> in the beginning of the <code>.gitignore</code> line is always a mistake?</p>
","9","1943849","",""
"75889731","17957840","2023-03-30 14:49:18","0","13","<python><key><gitignore><secrets>","Deploy my machine's code on Heroku or ignore gitignore (on Heroku only)","<p>I'm currently using Heroku to run my web application. It is currently closed source, but I'd like to make it open source. I was wondering how I could push my local machine code to Heroku before I commit it to github (or for it to still read the files of my Gitignore) as I have all my database login details, private keys, etc. inside certain files which my application requires to run.</p>
<p>I haven't really found any solution yet.</p>
","0","17957840","",""
"75958806","21589271","2023-04-07 13:21:21","0","51","<git><gitignore>","Using a single .gitignore for multiple repositories","<p>I have a number of git repos that have the same overall development use, tooling, and file/folder structure.  The .gitignore is the same for each repo.  Is there a way to use a single .gitignore for all the repos to reduce the maintenance burden, rather than updating each individually?  I have maybe 3 styles of repositories, so 3 versions of common .gitignore files.</p>
<p>The only approach I can think of is to store the .gitignore files in their own repo, include the repo as a submodule in every repository that would use them, then create the top level .gitignore as a symlink to the desired version in the submodule.  This approach seems overly complex.</p>
","3","21589271","",""
"75980443","8865110","2023-04-10 20:23:22","1","77","<git><docker><dockerfile><gitignore><dockerignore>","Docker cannot find file listed in .gitignore","<p>I got an issue where Docker could not find files listed in .gitignore.</p>
<p>For example, my directory structure looks like this:</p>
<pre><code>- project_folder
  - WebServer.py
  - DockerFile 
  - config
    - privateKey.json
</code></pre>
<p>I added <code>config/</code> to <code>.gitignore</code> file to protect the private key, but I got <code>FileNotFoundError: [Errno 2] No such file or directory: config/privateKey.json</code> error when deploying my project with <code>gcloud run deploy</code>. The error went away if I deleted <code>config/</code> from .gitignore.</p>
<p>Is there a way to solve this issue and keep <code>config/</code> in <code>.gitignore</code>?</p>
<p>Thanks!</p>
<p>Here is my DockerFile:</p>
<pre><code>
# Use the official lightweight Python image.
# https://hub.docker.com/_/python
FROM python:3.10-slim

# Allow statements and log messages to immediately appear in the Knative logs
ENV PYTHONUNBUFFERED True

# Copy local code to the container image.
ENV APP_HOME /app
WORKDIR $APP_HOME
COPY . ./
# Install production dependencies.
RUN pip install --no-cache-dir -r requirements.txt

# Run the web service on container startup. Here we use the gunicorn
# webserver, with one worker process and 8 threads.
# For environments with multiple CPU cores, increase the number of workers
# to be equal to the cores available.
# Timeout is set to 0 to disable the timeouts of the workers to allow Cloud Run to handle instance scaling.
CMD exec gunicorn --bind :$PORT --workers 1 --threads 8 --timeout 0 &quot;WebServer:create_app()&quot;

</code></pre>
<p>My dockerignore</p>
<pre><code>Dockerfile
README.md
*.pyc
*.pyo
*.pyd
__pycache__
.pytest_cache
weight_upload_workflow.py
.git
.gitignore
</code></pre>
","1","8865110","",""
"75992953","20766621","2023-04-12 07:29:12","0","36","<macos><visual-studio-code><gitlab><gitignore>","VSCODE Restore Files removed in untracked folder using gitignore","<p>I am working in a MacOS with VSCODE.
I have a remote repository on gitlab.</p>
<p>I lost all of my files that were not tracked (all files in git ignore)
I cannot remember exactly what commands led to this incident, but I assume it might have been &quot;git fetch&quot;.</p>
<p>I tried looking at my MacOS trash, but the files are not there. I don't know where else to look.</p>
","0","20766621","",""
"76036501","21665112","2023-04-17 14:56:45","0","41","<github><gitignore><.env>","How to ignore a file located in the same folder as .gitignore","<p>My .env file is located in the same folder as my .gitignore file.
Therefore, my .env file is not taken into account and is offered to me to be sent to git. How can I do?</p>
<p><img src=""https://i.stack.imgur.com/VmwlT.png"" alt=""image of my folder"" /></p>
<p>How can i ignore my .env file ?</p>
","0","21665112","",""
"76040645","17964245","2023-04-18 02:32:04","0","86","<git><gitignore>","How can I add my executable file to .gitignore when the file has no extension?","<p>I've created a C++ file and it runs perfectly. But the problem comes when I push my code to GitHub. There is an executable file as the result of building my C++ program, and it's being added to source control. I don't want that.</p>
<p>In Windows, executables have the file extension <code>.exe</code> and I can write <code>*.exe</code> in the <code>.gitignore</code>. But in Ubuntu, executables don't need an extension. How do I make Git ignore that?</p>
","2","17964245","",""
"76044460","267702","2023-04-18 12:11:17","0","23","<git><github><gitignore>","How to exclude a file when running git add","<p>I have modified several files for debugging purposes.  I don't want to add them to <code>.gitignore</code> because they are valid files that need to be in the repo.  However, while debugging I need to make settings changes that I don't want to check in. Right now I am using <code>git restore --staged</code> after running <code>git add -all</code> to remove these files from my commit.</p>
<p>Is there a better way to do this?</p>
","2","267702","",""
"76084389","15230022","2023-04-23 10:44:18","1","88","<git><gitignore>","gitignore all content in a folder except a folder with all its content","<p>I am working with Grav CMS with this folder structure (simplified):</p>
<pre><code>/user/
  /pages/
  /plugins/
    /admin/
    /devtools/
    /google-photos/
    .gitkeep
</code></pre>
<p>and this <code>.gitignore</code> file:</p>
<pre><code>/user/plugins
!.gitkeep
!/user/plugins/google-photos/
</code></pre>
<p>I want to ignore all files and folders (with subfolders) in <code>/user/plugins</code> except all <code>.gitkeep</code> files. This works so far. But now I would like to include a single plugin in git (google-photos) with all its content. I tried this, but it didn't work: <code>!/user/plugins/google-photos/</code></p>
<p>How can I do this?</p>
<p>I already visited these, but they couldn't help:</p>
<ul>
<li><a href=""https://stackoverflow.com/questions/8024924/gitignore-ignore-all-files-then-recursively-allow-foo/8025106#8025106"">.gitignore ignore all files then recursively allow *.foo</a></li>
<li><a href=""https://stackoverflow.com/questions/987142/make-gitignore-ignore-everything-except-a-few-files"">Make .gitignore ignore everything except a few files</a></li>
<li><a href=""https://stackoverflow.com/questions/30792426/gitignore-all-except-one-folder-and-all-its-content-regardless-of-the-nesting"">Gitignore all except one folder and all its content - regardless of the nesting level</a></li>
</ul>
","0","15230022","",""
"76092553","4923949","2023-04-24 13:43:16","0","71","<git><gcloud><gitignore><google-cloud-build><gcloudignore>","Why do I manually need to add !package.json in .gcloudignore when setting **/package.json in .gitignore","<p>I would like both git and gcloud to ignore all <code>package.json</code> files except the one in the base folder. I've set <code>**/package.json</code> in the .gitignore file which works fine except that gcloud also ignores the <code>package.json</code> in the base directory.</p>
<p>I have solved this by creating a <code>.gcloudignore</code> file with the content:</p>
<pre><code>.git
.gitignore

#!include:.gitignore
!package.json
</code></pre>
<p>As I want exactly the same behaviour from gcloud and git I would have expected to be able to only set the <code>.gitignore</code> file. Am I doing something wrong?</p>
","0","4923949","",""
"76096336","11734832","2023-04-24 21:45:58","2","66","<git><github><gitignore>",".gitignore ignores .github folder even though it's explicitly included","<p>I have a <code>.gitignore</code> which uses a global exclusion pattern to ignore any unwanted files. It looks like this:</p>
<pre><code>#&quot;git-include&quot; pattern
*.*
*/**

!.github/**
!src/**

!.gitignore
!.dockerignore
!README.md
</code></pre>
<p>Despite this, I'm still seeing my .github folder be ignored.</p>
<pre><code>$&gt; git ls-files -ci --exclude-from=.gitignore
.github/workflows/main.yml
</code></pre>
<p>I'd really prefer my .gitignore to match what is actually cached. I'm wondering if this has something to do with the &quot;.git&quot; prefix, though that sounds kind of strange and I can't find anything after a quick look at the documentation.</p>
<p>I've tried various .gitignore configurations that would try to include the .github directory. e.g.:</p>
<pre><code>!*github/**
!.github/workflow/*
!.github/workflow/main.yml
</code></pre>
<p>None of these would unignore the files.</p>
<p>I tried changing from <code>*/**</code> to <code>/*/**</code> as described <a href=""https://stackoverflow.com/questions/25003448/gitignore-ignoring-whitelisted-folder"">here</a> but that didn't work.</p>
<p>I did manually include the file using <code>git add .github/** -f</code></p>
","0","11734832","",""
"76101151","20624891","2023-04-25 12:25:14","0","43","<git><gitignore>","how can I .gitignore files under a directory except ones with a pattern?","<p>Imagine I have a config-files directory. I want all under this dir and subdirs except the ones with starting name of <code>example.</code> to be ignored.</p>
<p>I tried some approaches but none of them work and most of them result in all files under config-files directory to be untracked. Here are two examples of what I tried to do:</p>
<pre><code># Ignore everything in the config-files directory
/config-files/**

# Allow tracking of files starting with &quot;example.&quot;
!/config-files/**/example.*
</code></pre>
<pre><code># Ignore everything in the config-files directory
/config-files/*

# Allow tracking of files starting with &quot;example.&quot;
!/config-files/example.*
!/config-files/**/example.*
</code></pre>
<p><strong>Note:</strong> the config-files itself is consisted of sub-directories like <code>db</code>, <code>jwt</code> and etc.</p>
","3","20624891","",""
"59589881","1833423","2020-01-04 10:33:04","1","109","<filenames><gitignore><atlassian-sourcetree>","Sourcetree and .gitignore: I don't find an explicitly ignored file name","<p>I wanted to ignore a certain file for only its project's repository, and by accident I selected to add the ignore entry to the global ignore list.</p>

<p>My Sourcetree preferences says my <code>.gitignore_global</code> file is at path <code>/Users/myuser/.gitignore_global</code>. I go there and indeed I see the modification date of that file matches the time I selected to add the ignore entry, but when I open it, I don't see any explicit file name there.</p>

<p>So, how could I revert the change I made?</p>
","0","1833423","0","0"
"3675641","370887","2010-09-09 10:15:52","7","6085","<iphone><xcode><git><macos><gitignore>","git ignore for directories with spaces on Mac OS X","<p>I'm trying to add some patterns to my <code>.gitignore</code> file to ignore *.mode1v3 and *.pbxuser files generated by Xcode. However, my app name has a space in it, so the files I want to ignore are in the <code>Foo Bar.xcodeproj/</code> directory. Adding variants of these patterns don't seem to work:</p>

<pre><code>*.mode1v3
Foo Bar.xcodeproj/
Foo Bar.xcodeproj/*.mode1v3
Foo Bar.xcodeproj/username.mode1v3
</code></pre>

<p>What should the .gitignore patterns be?</p>
","0","370887","0","0"
"41725745","3367720","2017-01-18 17:25:24","1","4707","<git><laravel-5.3><gitignore>","fatal: cannot use .git/info/exclude as an exclude file","<p>I have a Laravel 5.3 project with its <code>.gitignore</code> file but when I execute <code>git status</code> I get this message:</p>

<pre><code>fatal: cannot use .git/info/exclude as an exclude file
</code></pre>

<p>I have executed this command to say where the <code>.gitignore</code> is</p>

<pre><code>git config --global core.excludesfile C:\xampp\htdocs\codehacking5.3\.gitignore
</code></pre>

<p>But does not work.</p>

<p>Any idea please?</p>
","5","3367720","",""
"42020674","5724610","2017-02-03 09:16:08","0","111","<git><gitignore>","gitignore in subdirectory is not allowing a whitelisted entry","<p>git is located in a subdirectory(""web"" folder) along with .gitignore.  The following gitignore code is giving me some issues.</p>

<pre><code>**/app/themes/  #Should ignore all folders in the themes subdirectory
!*/app/themes/folder1  #allow one single folder and it's content to be versioned
</code></pre>

<p>I've tried a few combinations like /app/themes, and */app/themes -- any help would be wonderful! Thanks in advance!!</p>
","0","5724610","",""
"62796118","1407315","2020-07-08 13:38:21","2","39","<git><git-merge><gitignore><atlassian-sourcetree>","How to manage local files in git, prevent merge to master","<p>Let's say i have a dev branch for local development.
On this branch there are files with local specific settings, eg composer.json, .lock, etc/config.php.</p>
<p>What would be the best way to manage these files.
I want to commit them to my dev branch, but that would merge them in master at a later point.</p>
<p>I don't want to stash these files all the time, thats just inconvenient.
I dont want to cherry pick all the commits each time merging to master.
Should i add these to gitignore? What if i change composer.json at a later point with an update that actually needs to get merged to my master.</p>
<p>Any tips or flows would be appreciated. I'm using sourcetree.</p>
","1","1407315","",""
"25554504","456645","2014-08-28 17:20:02","35","20024","<git><gitignore>","What does !*/ mean in .gitignore","<p>With git version 1.7.1, I'm trying to exclude all files except .php files.</p>

<p>The working solution I found relies on the command <code>!*/</code></p>

<pre><code># Ignore Everything
*

# Except these files
!.gitignore
!*/
!*.php
</code></pre>

<p>Without the <code>!*/</code>, it will only include the <code>*.php</code> files in the root directory. What is <code>!*/</code> doing that allows this to work?</p>
","1","456645","0","0"
"7354710","836041","2011-09-08 21:27:06","1","828","<git><gitignore>",".gitignore is not ignoring file ""login.php""","<p>I have a .gitignore file in my repo.</p>

<pre><code>#DB Ignore
db_connect.php

#Environment Banner
template.php

#LDAP - ldap_start_tls() error
login.php
</code></pre>

<p>However, it is not ignoring the changes I make to ""login.php"". Both ""db_connect.php"" and ""template.php"" ignore just fine. Any idea as to why this is happening? </p>

<p>As a side note, in vi, the word ""log"" in ""login.php"" is highlighted in orange.</p>
","2","836041","",""
"44151669","6526446","2017-05-24 07:25:05","4","4481","<git><gitignore>","Use exclamation in .gitignore to track something specially?","<p>Here is my project folder:</p>
<pre><code>aaa
  ├─ bbb.txt
  ├─ ccc.txt
  └─ ddd.txt
.gitignore
</code></pre>
<p>For my own, I wanna ignore all the files or folders in <code>aaa</code> except <code>bbb.txt</code></p>
<p>So, I write the <code>.gitignore</code> like this:</p>
<pre><code>aaa/
!aaa/bbb.txt
</code></pre>
<p>But <code>bbb.txt</code> is also tracked.</p>
<p>So, could you tell me how to solve this?</p>
<p><strong>Update:</strong></p>
<p>After I read the comment and the answer, I begin to understand how to fix this question.</p>
<p>But I come to a new question:</p>
<p>What's the difference between <code>a/</code> and <code>a/*</code> and <code>a/**</code>?</p>
","4","6526446","0","0"
"25569676","3442621","2014-08-29 13:47:19","0","1867","<git><gitignore>","How can I create a .gitconfig file?","<p>I've cloned a brand new empty remote git repo which I need to put all my project files. Upon cloning I don't see the .gitconfig file, which I would like to set file exclusion.</p>

<p>I'm quite new to git and haven't created a repo by myself before.</p>

<p>Please help.</p>
","4","3442621","",""
"44155648","1758058","2017-05-24 10:23:48","9","3376","<git><gitignore>","ignore a particular folder only in .gitignore but allow other folders with same name to be checked in","<p>I want to ignore a dist folder at top level of my project, but then I have another dist folder inside my project for my styles, which I want to keep. So keeping a <code>dist</code> in <code>.gitignore</code> causes both of them to be ignored. What is the correct way to handle this.</p>
","1","1758058","0","0"
"44157448","6526446","2017-05-24 11:43:45","9","2186","<git><gitignore>","The difference between a/ and a/* and a/** in .gitignore?","<p>Here is my file folder.</p>
<pre><code>a
├─ b
│  ├─ b1.txt
│  └─ b2.txt
├─ a1.txt
└─ a2.txt
.gitignore
</code></pre>
<p><strong>Firstly:</strong></p>
<p>I found if I wanna ignore the folder a, <code>a/</code> and <code>a/*</code> and <code>a/**</code> all can complete.</p>
<p><strong>Secondly:</strong></p>
<p>I wanna ignore all the things in folder <code>a</code> except the folder <code>b</code>, the only way to do this is:</p>
<pre><code>a/*
!a/b/
</code></pre>
<p>I don't know why <code>a/**</code> can't do this?</p>
<pre><code># this way can't except folder b
a/**
!a/b/
</code></pre>
<p>Or you can tell me how can I use <code>a/**</code> ?</p>
","5","6526446","",""
"25593379","1282424","2014-08-31 15:21:59","4","3897","<git><composer-php><gitignore>","How do I make git ignore the .git folders under vendor/?","<p>I am using composer, and for development I want to keep the .git folders in the vendor directory, so I can track diffs, etc.  So my project structure is:</p>

<pre><code>projectroot/
  .gitignore
  file1
  file2
  vendor/
    dir1/
      module1/
        .git/
        module1file1
        module1file2
        ...
    dir2/
      module2/
        .git/
        module2file1
        ...
</code></pre>

<p>I would like to commit to git, these files:</p>

<pre><code>file1
file2
vendor/dir1/module1/module1file1        
vendor/dir1/module1/module1file2    
vendor/dir2/module2/module2file1        
...
</code></pre>

<p>What should my projectroot/.gitignore file be?  From <a href=""https://getcomposer.org/doc/faqs/should-i-commit-the-dependencies-in-my-vendor-directory.md"" rel=""nofollow"">the composer docs</a> I tried</p>

<pre><code>vendor/*.git
</code></pre>

<p>and </p>

<pre><code>vendor/*/.git
</code></pre>

<p>but in both cases, git 1.8.3 still wants to commit <code>vendor/dir1/module1</code> and <code>vendor/dir2/module2</code> as submodules, where I want to commit the files underneath instead.</p>

<p>What should the .gitignore syntax be in that case?</p>
","1","1282424","",""
"7406031","90066","2011-09-13 17:34:35","3","494","<git><ignore><gitignore><pull><git-clone>","Ignore a file in git but have it downloaded when the project is cloned","<p>I have a file that suffers modification every time I run my project. Thus, I don't want git to track it and so I add it to my .gitignore file.</p>

<p>However, I do wish for the file to be pulled when cloning the project.</p>

<p>How can I achieve this?</p>

<p>Thank you in advance.</p>
","0","90066","0","0"
"44399808","3159399","2017-06-06 21:04:38","10","1282","<git><npm><gitignore><package.json><npmignore>",".npmignore extending / inheriting from .gitignore","<p>I know I can't use them both at once, but is there a way to make <code>.npmignore</code> file extending <code>.gitignore</code>? I have dozens of rules in <code>.gitignore</code> and I want to use them all + one additional for npm package. How can I do it without duplicating all the rules?</p>
","0","3159399","0","0"
"63048252","13980491","2020-07-23 06:34:55","0","282","<windows><github><gitignore>","Why is gitignore not working even after i put the file name in?","<p>I have a file called sohuku.txt. I have another folder named .gitignore.txt inside which I have put 'sohuku.txt', but when I type 'git add .' in PowerShell and then type git status, it shows the file in changes to be committed. what to do?</p>
","2","13980491","",""
"63052322","7517227","2020-07-23 10:38:28","1","1554","<git><visual-studio-code><gitignore>","Add to .gitignore in Visual Studio","<p>When I add a file to .gitignore changes in file are still tracked in Visual Studio Code.</p>
<p>The file is in the root where is .gitignore file added by VSC and file that should be ignored is entred in the .gitignore file by the VSC. The file name is <code>bs-config.js</code></p>
<pre><code>node_modules
vendor
bs-config.js
package-lock.json
</code></pre>
<p><img src=""https://i.stack.imgur.com/ZozPh.png"" alt="".gitignore file"" /></p>
<p>Am I missing something?</p>
","0","7517227","",""
"25852611","1083584","2014-09-15 16:28:33","0","68","<linux><git><version-control><gitignore>","Cannot make git ignore a directory","<p>My project is very old. Multiple things happened with <code>/.gitignore</code> and the directory in question (<code>/cache/</code>).</p>

<p>Right now when I <code>clone</code> the project the directory does not get created.
I have only one (root) <code>.gitignore</code> and for test purposes I emptied it.</p>

<p><code>~/.config/git/ignore</code> does not exist, <code>/.git/info/exclude</code> is empty.</p>

<p>The problem is that whatever I do (create or delete) with the directory <code>git status</code> shows no changes and <code>git rm --cached cache/</code> finds no entries, so I can neither add the directory to git nor delete and ignore it.</p>

<p>Any suggestions how to fix this?</p>
","1","1083584","",""
"44409892","5401648","2017-06-07 10:20:06","0","361","<wordpress><git><wildcard><gitignore>","How to ignore wildcard folder structures with gitignore","<p>Example folder structure where <code>/</code> is <code>wp-content/</code></p>

<pre><code>/
/plugins
/plugins/akismet
/plugins/gravityforms
/plugins/woocommerce
/plugins/woocommerce-call-for-price
/plugins/woocommerce-dropdown-cart
</code></pre>

<p>etc etc...</p>

<p>How can I, using gitignore, ignore all the woocommerce related folders, without doing them all manually?</p>

<p>I was thinking something like <code>/plugins/woocommerce-**</code> but I honestly have no idea.</p>

<p>This is my current gitignore file</p>

<pre><code># Start default WordPress gitignore 
https://github.com/github/gitignore/blob/master/WordPress.gitignore
*.log
wp-config.php
wp-content/advanced-cache.php
wp-content/backup-db/
wp-content/backups/
wp-content/blogs.dir/
wp-content/cache/
wp-content/upgrade/
wp-content/uploads/
wp-content/wp-cache-config.php
wp-content/plugins/hello.php

/.htaccess
/license.txt
/readme.html
/sitemap.xml
/sitemap.xml.gz

# Ignore root files/folders as they are only changed with WP updates which we don't care to track
wp-admin/
wp-includes/
index.php
wp-activate.php
wp-blog-header.php
wp-comments-post.php
wp-config.php
wp-cron.php
wp-links-opml.php
wp-load.php
wp-login.php
wp-mail.php
wp-settings.php
wp-signup.php
wp-trackback.php
xmlrpc.php
README.md

# Ignore everything in wp-content apart from themes as this is essentially the WD
/wp-content/*
!/wp-content/themes
!/wp-content/themes/*

# Allow certain plugins through gitignore
!/wp-content/plugins/*
/wp-content/plugins/*
!/wp-content/plugins/woocoomerce
</code></pre>
","2","5401648","",""
"7692541","113674","2011-10-07 20:25:54","17","5604","<heroku><github><gitignore>","Pushing .gitignore files to specific remote","<p>I made a Sinatra app, that will be hosted on Heroku, and the source will be up on GitHub. The problem is that i have a file with API keys, that is currently in .gitignore. Is there a way, that I can push my repo to heroku with the key file and exclude the file when pushing to GitHub?</p>

<p>Thanks in advance!</p>
","0","113674","0","0"
"44411660","5501935","2017-06-07 11:41:52","0","413","<git><github><gitignore>","How to move angular code from my local to github?","<p>When i try to commit it displays the following,</p>

<p>On branch gh-pages
Untracked files:
        node_modules/max-buffer-exceeded-error/</p>

<p>nothing added to commit but untracked files present</p>
","3","5501935","",""
"25856561","","2014-09-15 20:41:56","9","10105","<git><gitignore>","gitignore not removing files","<p>I looked into the official documentation</p>

<p><code>**/packages</code> is supposed to remove file/directory packages from being tracked</p>

<p>I tried but without any luck I still see the following:</p>

<p><strong>**********NOTE: THESE FILES ARE SYMLINKS*********</strong></p>

<p>Changes not staged for commit:
  (use ""git add ..."" to update what will be committed)
  (use ""git checkout -- ..."" to discard changes in working directory)</p>

<pre><code>modified:   src/main/resources/webapp/dart/packages/route_hierarchical
modified:   src/main/resources/webapp/dart/packages/shadow_dom
modified:   src/main/resources/webapp/dart/packages/source_maps
</code></pre>

<p>my complete .gitignore</p>

<pre><code>target/
.idea
.DS_Store
session-store
*.iml
banzai_auth_cache.ser
banzai_rm_cache.ser
**/packages
</code></pre>

<p>These are the steps:</p>

<ul>
<li>I clone the project with git clone I add gitignore and then</li>
<li>commit/push </li>
<li>I change the files under packages with ""pub get"", these files are symlinks </li>
<li>I see them when I do git status</li>
</ul>

<p>Okay, I tried add </p>

<pre><code>symlinks = false
</code></pre>

<p>to .git/config, without luck too. I'm looking and I will update my question if I find something</p>

<p>I also tried adding those symlinks one by one to git ignore</p>
","3","","0","0"
"25861341","134063","2014-09-16 05:37:19","1","207","<git><git-submodules><gitignore>","Git Submodules conflicting gitignore","<p>I have a repository where I am ignoring a whole directory, however there is an individual directory inside there that I want to be a submodule. So my git ignore file has the line, </p>

<pre><code>wp-content/plugins/
</code></pre>

<p>I was planning on adding the line</p>

<pre><code>!wp-content/plugins/my-plugin
</code></pre>

<p>So it would then track only the submodule code, correct?</p>

<p>So I attempted to add it as a submodule and was given a ""use -f flag"" message. So I did. Now git status shows that plugin even though the directory is still ignored.</p>

<p>Does the -f force it to override the git ignore directives? And if so, can I then just omit the ! like in my ignore file and commit it all?</p>

<p>Thank you.</p>
","0","134063","0","0"
"44437230","2493849","2017-06-08 13:34:56","1","1599","<git><gitignore>",".gitignore two or more extensions file","<p>I have the next files in my local repository:</p>

<p><code>app.component.js
core.component.js
core.service.local.js
core.service.power.ts</code></p>

<p>My question is very simple, How can I do to ignore the files with the extension .component.js and .service.local.js and other, I mean any file to end with .Any_String.ext</p>
","3","2493849","",""
"63084828","6501141","2020-07-25 05:44:03","16","5464","<android><git><ionic-framework><gitignore><capacitor>","`.gitignore` for an Ionic project with Android target","<p>I'm creating an Ionic project using Capacitor <em>(edit: the newer recommended framework compared to Cordova)</em> and added Android as a target.</p>
<p>I've been able to build the app and add the Android target, which creates a bucketload of files under <code>android/</code>, using:</p>
<pre class=""lang-sh prettyprint-override""><code>ionic build
ionic cap add android
</code></pre>
<p>Then, I was able to launch Android Studio and emulate my app, using <code>npx cap open android</code>, with &quot;Run App&quot; in Android Studio. This added a few more bucketloads of files.</p>
<p>I was able to get most of them to be ignored by adding the &quot;ionic&quot; and &quot;AndroidStudio&quot; gitignore entries from <a href=""https://gitignore.io"" rel=""nofollow noreferrer"">gitignore.io</a>, but if someone clones the repo, they can rebuild the entire Android directory from scratch, right? Do I just consider everything in the android folder to be a build artifact that can be recreated from the core ionic project using capacitor (i.e. &quot;cap&quot;).</p>
<p>Is there anything that needs to be saved to the repo in the ionic android directory? If so, which files - or should I fall back to ionic/Android Studio gitignore entries for the android folder?</p>
","2","6501141","0","0"
"63091358","6220486","2020-07-25 17:26:14","1","4445","<git><visual-studio><github><gitignore>",".gitignore not working with Visual Studio 2019","<p>I cannot get <code>.gitignore</code> to work with <em>Visual Studio 2019</em> Community.</p>
<p><a href=""https://i.stack.imgur.com/iQEQx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/iQEQx.png"" alt=""enter image description here"" /></a></p>
<p>Above is an image of the &quot;Team Explorer&quot; tab showing a portion of the list of files which are to be committed. The directory in which these files appear, x64\Debug, is under  C:\Users\<em>username</em>\Source\repos\Tetris_System\Tetris_Game.  C:\Users\<em>username</em>\Source\repos\Tetris_System contains the <code>.git</code> and <code>.vs</code> folders and the <code>.gitignore</code> file.</p>
<p>I have a very simple <code>.gitignore</code> file with a single line in it:</p>
<pre><code>*.obj
</code></pre>
<p>My understanding is, that this single line should remove all the <code>*.obj</code> files from the commit list. Shouldn't those <code>*.obj</code> files disappear from the list?</p>
<p>From previous commits, all those <code>*.obj</code> are on the GitHub repository.</p>
","1","6220486","0","0"
"25909293","1169096","2014-09-18 09:43:00","3","539","<git><gitignore><git-status>","how to make git ignore ignores in .gitignore","<p>I have a Git repository that contains a <code>.gitignore</code> file, which lists a few files (that are created during the build) to be ignored.</p>

<pre><code>$ cat .gitignore
foo
$ ls
bar
$ git status
On branch master
nothing to commit, working directory clean
$ touch foo
$ ls
bar foo
$ git status
On branch master
nothing to commit, working directory clean
$
</code></pre>

<p>In a specific clone of that repository, I <em>do</em> want to see the files listed in <code>.gitignore</code>.</p>

<p>This can be done with the <code>--ignored</code> option to <code>git status</code>:</p>

<pre><code>$ git status
On branch master
nothing to commit, working directory clean
$ git status --ignored
On branch master
Ignored files:
  (use ""git add -f &lt;file&gt;..."" to include in what will be committed)

    foo

nothing to commit, working directory clean
$
</code></pre>

<p>Nice. My question is: how can I make this permanent for a <strong>given</strong> repository, so that I do not have to remember to add the <code>--ignored</code> flag?</p>

<pre><code>$ git status
On branch master
Ignored files:
  (use ""git add -f &lt;file&gt;..."" to include in what will be committed)

    foo

nothing to commit, working directory clean
$
</code></pre>

<p>I'm sure there is some <code>git config</code>uration that allows me to configure my clone to ignore the contents of <code>.gitignore</code>...</p>

<p>Also, I don't want to have this option for <em>all</em> repositories; only for a select few.</p>
","2","1169096","",""
"25912441","190803","2014-09-18 12:19:39","28","7712","<git><gitignore>","Can I add a .gitignore file just for me that overrides the project .gitignore?","<p>I am using Git in Android Studio on a OS X machine, and I would like to have a personal <code>.gitignore</code> file that overrides the <code>.gitignore</code> that are in the project (I want mine to ignore <code>.iml</code> files). Can this be done and how?</p>

<p>I have tried to create a <code>.gitignore</code> file in my home dir with the following lines in:</p>

<pre><code># Android Studio
.*.iml
*.iml</code></pre>

<p>And the I have used this command to make git use my file <code>git config --global core.excludesfile ~/.gitignore</code>, but it does not work.</p>

<p>Any ideas?</p>
","4","190803","0","0"
"63342780","9298629","2020-08-10 15:01:59","14","4072","<android><maven><android-studio><gitignore><auto-import>","How can I decide to add .idea/jarRepositories.xml in .gitignore","<p>I found an unfamiliar file <code>.idea/jarRepositories.xml</code>, when I updated Android Studio <code>3.5.3</code> to <code>4.0.1</code> on Mac. The content is as follows:</p>
<pre><code>&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;
&lt;project version=&quot;4&quot;&gt;
  &lt;component name=&quot;RemoteRepositoriesConfiguration&quot;&gt;
    &lt;remote-repository&gt;
      &lt;option name=&quot;id&quot; value=&quot;central&quot; /&gt;
      &lt;option name=&quot;name&quot; value=&quot;Maven Central repository&quot; /&gt;
      &lt;option name=&quot;url&quot; value=&quot;https://repo1.maven.org/maven2&quot; /&gt;
    &lt;/remote-repository&gt;
    &lt;remote-repository&gt;
      &lt;option name=&quot;id&quot; value=&quot;jboss.community&quot; /&gt;
      &lt;option name=&quot;name&quot; value=&quot;JBoss Community repository&quot; /&gt;
      &lt;option name=&quot;url&quot; value=&quot;https://repository.jboss.org/nexus/content/repositories/public/&quot; /&gt;
    &lt;/remote-repository&gt;
    &lt;remote-repository&gt;
      &lt;option name=&quot;id&quot; value=&quot;BintrayJCenter&quot; /&gt;
      &lt;option name=&quot;name&quot; value=&quot;BintrayJCenter&quot; /&gt;
      &lt;option name=&quot;url&quot; value=&quot;https://jcenter.bintray.com/&quot; /&gt;
    &lt;/remote-repository&gt;
    &lt;remote-repository&gt;
      &lt;option name=&quot;id&quot; value=&quot;Google&quot; /&gt;
      &lt;option name=&quot;name&quot; value=&quot;Google&quot; /&gt;
      &lt;option name=&quot;url&quot; value=&quot;https://dl.google.com/dl/android/maven2/&quot; /&gt;
    &lt;/remote-repository&gt;
  &lt;/component&gt;
&lt;/project&gt;
</code></pre>
<p>There is already a <a href=""https://stackoverflow.com/q/62905875/9298629"">question</a> on it, and <a href=""https://stackoverflow.com/a/62908315/9298629"">VonC answered</a> that it can be added to <code>.gitignore</code>.</p>
<p>I was wondering if I should add it in <code>.gitignore</code> and shouldn't commit it to git. How can I decide to add it to <code>.gitignore</code>?</p>
<h2>JetBrains.gitignore</h2>
<p>The popular repository <a href=""https://github.com/github/gitignore"" rel=""noreferrer"">gitignore</a> of <a href=""https://github.com/github"" rel=""noreferrer"">github</a> has <a href=""https://github.com/github/gitignore/blob/master/Android.gitignore"" rel=""noreferrer""><code>Android.gitignore</code></a>, but it has no <code>.idea/jarRepositories.xml</code> at the time of writing this question.</p>
<p>On the other hand, <a href=""https://github.com/github/gitignore/blob/master/Global/JetBrains.gitignore"" rel=""noreferrer""><code>Global/JetBrains.gitignore</code></a> has the following comments.</p>
<pre><code># Gradle and Maven with auto-import
# When using Gradle or Maven with auto-import, you should exclude module files,
# since they will be recreated, and may cause churn.  Uncomment if using
# auto-import.
# .idea/artifacts
# .idea/compiler.xml
# .idea/jarRepositories.xml
# .idea/modules.xml
# .idea/*.iml
# .idea/modules
# *.iml
# *.ipr
</code></pre>
<p>As you can see, it has <code>.idea/jarRepositories.xml</code> and the line is commented out. It also has the following notes:</p>
<blockquote>
<p><strong>Gradle and Maven with auto-import</strong></p>
<p>When using Gradle or Maven with auto-import, you should exclude module files,
since they will be recreated, and may cause churn.  Uncomment if using
auto-import.</p>
</blockquote>
<p>In Android Studio <code>4.0.x</code>, is it possible to use Gradle without auto-import?</p>
<h2>Remote Jar Repositories</h2>
<p>In the above <code>Global/JetBrains.gitignore</code>, the line <code># .idea/jarRepositories.xml</code> has been added by davidkron's <a href=""https://github.com/github/gitignore/pull/3254/files"" rel=""noreferrer"">pull request</a>, and he <a href=""https://github.com/github/gitignore/pull/3254"" rel=""noreferrer"">commented</a> as follows:</p>
<blockquote>
<p>Since IntelliJ 2019.3 this file appeared automatically in our git changes. It seems these are just cached information about remote repositories that are defined in Maven/Gradle.</p>
<p><strong>Reasons for making this change:</strong></p>
<p>In a Maven/Gradle build, automatically generated files should should not be commited.</p>
<p><strong>Links to documentation supporting these rule changes:</strong></p>
<p>I haven't found a documentation or article about this file, but I'm basing my assumption on the following steps:</p>
<ul>
<li>in IntelliJ the &quot;Remote Jar Repositories&quot; can be managed in the Settings menu</li>
<li>I deleted every entry in the list -&gt; file disappeared</li>
<li>I re-imported the Maven/Gradle project again</li>
<li>the file appeared again with the same entries present as before</li>
</ul>
</blockquote>
<p>As his comment, Android Studio <code>4.0.1</code> has <code>Remote Jar Repositories</code> settings, as you can see in the following screen shot.</p>
<p><a href=""https://i.stack.imgur.com/Xc2ZL.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/Xc2ZL.png"" alt=""enter image description here"" /></a></p>
<p>I checked the release notes of Android Studio <code>4.0.0</code>, and found <a href=""https://developer.android.com/studio/releases#4.0-idea-2019-3-3"" rel=""noreferrer"">a section</a> as follows:</p>
<blockquote>
<p><strong>IntelliJ IDEA 2019.3.3</strong></p>
<p>The core Android Studio IDE has been updated with improvements from IntelliJ IDEA through the 2019.3.3 release.</p>
<p>To learn more about the improvements from other IntelliJ versions that are included cumulatively with version 2019.3.3, see the following pages:</p>
<ul>
<li>IntelliJ IDEA 2019.3</li>
<li>IntelliJ IDEA 2019.3.3</li>
</ul>
</blockquote>
<p>I'm not sure but was wondering if I should add <code>.idea/jarRepositories.xml</code> in <code>.gitignore</code> and shouldn't commit it to git. How can I decide to add it or not? I really appreciate it if someone could clarify the criteria.</p>
<h1>Update:</h1>
<p>In the source code of Android Studio <code>4.0.0</code>, I found source files, which define the file name <code>jarRepositories.xml</code>:</p>
<p><a href=""https://android.googlesource.com/platform/tools/idea/+/refs/tags/studio-4.0.0/jps/model-serialization/src/org/jetbrains/jps/model/serialization/jarRepository/JpsRemoteRepositoriesConfigurationSerializer.java#40"" rel=""noreferrer"">JpsRemoteRepositoriesConfigurationSerializer.java</a></p>
<pre class=""lang-java prettyprint-override""><code>public JpsRemoteRepositoriesConfigurationSerializer() {
  super(&quot;jarRepositories.xml&quot;, &quot;RemoteRepositoriesConfiguration&quot;);
}
</code></pre>
<p><a href=""https://android.googlesource.com/platform/tools/idea/+/refs/tags/studio-4.0.0/java/java-impl/src/com/intellij/jarRepository/RemoteRepositoriesConfiguration.java#23"" rel=""noreferrer"">RemoteRepositoriesConfiguration.java</a></p>
<pre class=""lang-java prettyprint-override""><code>@State(name = &quot;RemoteRepositoriesConfiguration&quot;, storages = @Storage(&quot;jarRepositories.xml&quot;))
public class RemoteRepositoriesConfiguration implements PersistentStateComponent&lt;RemoteRepositoriesConfiguration.State&gt; {
  // ...
}
</code></pre>
<p>I also found their origins in the repository of JetBrain's IntelliJ IDEA Community Edition.</p>
<ul>
<li><a href=""https://github.com/JetBrains/intellij-community/commit/23a1ede1f36d76d5b211eff5e60db2ad9dbc69d1#diff-adaf74dfe1f10585dd79e2e9fb49d3caR41"" rel=""noreferrer"">JpsRemoteRepositoriesConfigurationSerializer.java</a></li>
<li><a href=""https://github.com/JetBrains/intellij-community/commit/23a1ede1f36d76d5b211eff5e60db2ad9dbc69d1#diff-01393b3b89cd7aee042876491e110cfbR38"" rel=""noreferrer"">RemoteRepositoriesConfiguration.java</a></li>
</ul>
<p><code>Jps</code> stands for <strong>JetBrains Project System</strong>, according to <a href=""https://jetbrains.org/intellij/sdk/docs/reference_guide/frameworks_and_external_apis/external_builder_api.html#accessing-project-model-and-configuration-from-external-build"" rel=""noreferrer"">a document</a>:</p>
<blockquote>
<p>The project model in External Build process is provided by JPS (JetBrains Project System).</p>
</blockquote>
<p><a href=""https://github.com/JetBrains/JPS"" rel=""noreferrer"">JPS's previous repository</a> describes itself as:</p>
<blockquote>
<p>Gant based build framework + dsl, with declarative project structure definition and automatic IntelliJ IDEA projects build</p>
</blockquote>
","0","9298629","0","0"
"63350540","748133","2020-08-11 02:12:48","0","238","<git><gitignore>",".gitignore *.user ignoring new files","<p>I have a .NET project in Visual Studio 2019 and am using a git repo via Azure Dev Ops to track the code.</p>
<p>I have noticed that when I add a new file to the project, in this case .cs files, they are being ignored.</p>
<p>I ran:</p>
<pre><code>git check-ignore -v filename
</code></pre>
<p>This told me that the line in the .gitignore it had a problem with was with *<strong>.user</strong></p>
<p>Does anyone know why this is this causing .cs files to be ignored?</p>
<p>Removing it fixes the issue.</p>
<p>You can see this in the default file for Visual Studio: <a href=""https://github.com/github/gitignore/blob/master/VisualStudio.gitignore"" rel=""nofollow noreferrer"">https://github.com/github/gitignore/blob/master/VisualStudio.gitignore</a></p>
","3","748133","",""
"44711502","2640636","2017-06-23 00:59:41","0","443","<git><gitignore>",".gitignore un-ignore .cc files","<p>I have a <code>.gitignore</code> file in which I ignore everything, and then un-ignore specific files and directories. However, one part of it doesn't seem to work.</p>

<pre><code>/*

!.gitignore
!Makefile
!include/
!src/
!test/*.cc

**.swp
</code></pre>

<p>New <code>*.cc</code> files in the <code>test</code> directory don't appear in <code>git status</code>.</p>
","3","2640636","",""
"8422045","110238","2011-12-07 20:27:37","4","1832","<git><gitignore>",".gitignore is whitespace sensitive?","<p>My .gitignore file seems to be working unpredictably.  Here is an example:</p>

<p>I make a new repo foo with a file bar.txt, which I want to ignore:</p>

<pre><code>pon2@kann4:~$ mkdir foo
pon2@kann4:~$ cd foo/
pon2@kann4:~/foo$ touch bar.txt
pon2@kann4:~/foo$ git init
Initialized empty Git repository in /home/pon2/foo/.git/
pon2@kann4:~/foo$ git status
# On branch master
#
# Initial commit
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       bar.txt
nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p>As expected, bar.txt shows up as untracked.  So I tell git to ignore .txts, but I accidentally add some trailing whitespace:</p>

<pre><code>pon2@kann4:~/foo$ echo ""*.txt "" &gt; .gitignore
</code></pre>

<p>Now when I check the repo status, git doesn't ignore bar.txt:</p>

<pre><code>pon2@kann4:~/foo$ git status
# On branch master
#
# Initial commit
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       .gitignore
#       bar.txt
nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p>What's going on?</p>
","3","110238","0","0"
"26213865","67579","2014-10-06 09:58:01","3","245","<git><mime-types><gitignore>","Ignoring mimetype in git","<p>Is it possible not only to ignore on <em>filename</em> only, but on the <em>mimetype</em> as well? Since the mimetype sometimes depends on the ""magical numbers"" in a file, this can generate an additional disambiguation between different kind of files.</p>
","4","67579","0","0"
"26855209","697040","2014-11-10 23:54:00","1","74","<git><gitignore>","Issue with gitignore negating a directory but then re-including a file within a sub directory","<p>I am having problems with ignoring a directory but then re-including a file within a sub-directory of the same directory I've ignored.</p>

<ul>
<li><strong>WORKS</strong></li>
</ul>

<p>Folder Setup:</p>

<pre><code>folder/
   commit-me.txt
   ignore-me.txt
</code></pre>

<p>.gitignore:</p>

<pre><code>folder/*
!folder/commit-me.txt
</code></pre>

<hr>

<ul>
<li><strong>DOESN'T WORK</strong></li>
</ul>

<p>Folder Setup:</p>

<pre><code>folder/
   sub/
       commit-me.txt
       ignore-me.txt
   ignore-me.txt
</code></pre>

<p>.gitignore:</p>

<pre><code>folder/*
!folder/sub/commit-me.txt
</code></pre>
","0","697040","",""
"9554156","601909","2012-03-04 10:31:09","5","5456","<ruby-on-rails><git><gitignore>","Git ignoring my .gitignore on a Rails project","<p>I'm having some deployment problems, due to Rails' <code>tmp/cache/assets</code> folder and git not ignoring <code>tmp/*</code> or <code>tmp/</code>. My entire <code>.gitignore</code> is:</p>

<pre><code>*.rbc
*.sassc
.sass-cache
capybara-*.html
.rspec
/.bundle
/vendor/bundle
/log/*
/tmp/*
/db/*.sqlite3
/public/system/*
/coverage/
/spec/tmp/*
**.orig
rerun.txt
pickle-email-*.html
</code></pre>

<p>It's taken from GitHub <a href=""https://github.com/github/gitignore/blob/master/Rails.gitignore"" rel=""noreferrer"">gitignore repo</a>. What can I do to fix it? I get tons of errors due to local changes (in the <code>tmp/</code> folder) on my server, such as <code>error: Your local changes to 'tmp/cache/assets/D32/A10/sprockets%2F13fe41fee1fe35b49d145bcc06610705' would be overwritten by merge.  Aborting.</code>, so I can't deploy on my dev machine :(</p>
","1","601909","0","0"
"27326441","4064901","2014-12-05 23:39:41","0","89","<git><awk><gitignore>","Use .gitignore to find if any files are cached in git","<p>My team is using Visual Studio and they accidentally pushed everything without using a .gitignore. I now have the .gitignore in place, however, files are stilled stored in the git cache. So I want to search my directory to find these files</p>

<p>I am imagining doing this with something like</p>

<p><code>awk '/$/ {print $1} .gitignore | xargs git rm'</code></p>

<p>or, since I obviously don't want to test this by deleting everything, something safer like this</p>

<p><code>awk '/$/ {print $1} .gitignore | xargs find -iname'</code></p>

<p>but I'm slightly off. Can anyone help me?</p>
","0","4064901","",""
"9587722","1162226","2012-03-06 16:24:32","4","1764","<git><spring-roo><gitignore>","What is in your .gitignore when you use Spring Roo?","<p>I have some problem about merge conflict on target directory or <em>log.roo</em>. How do people solve this simple problem?</p>
","0","1162226","",""
"45210790","1930516","2017-07-20 09:31:59","4","1089","<git><bash><gitignore>","How to reliably check whether a file is ignored by git?","<p>I'm encountering a problem where <code>git check-ignore</code> is not respecting <code>.gitignore</code>'s 'not' (<code>!</code>) rules. It's returning ""Ignored"" if a file matches any entry in the <code>.gitignore</code> file, regardless of whether that entry is telling it to not ignore the path (via the <code>!</code> operator)</p>

<p><a href=""https://git-scm.com/docs/git-check-ignore"" rel=""nofollow noreferrer""><code>git check-ignore</code>'s documentation</a> states the return codes map as follows:</p>

<blockquote>
  <p><strong>EXIT STATUS</strong></p>
  
  <ul>
  <li><strong>0</strong>: One or more of the provided paths is ignored.</li>
  <li><strong>1</strong>: None of the provided paths are ignored.</li>
  <li><strong>128</strong>: A fatal error was encountered.</li>
  </ul>
</blockquote>

<p>This doesn't match what I'm seeing when I add ""Do not ignore"" rules, i.e. sticking <code>!</code> in front of an entry.</p>

<p>As an example, let's create a file structure as follows:</p>

<pre><code>.gitignore
files/
    path-not-ignored
ignored-files/
    path-ignored
    path-not-ignored
</code></pre>

<p>and a <code>.gitignore</code> containing:</p>

<pre><code>ignored-files/*
!ignored-files/path-not-ignored
</code></pre>

<p>According to the documentation, I'd expect the files in <code>files/</code> and <code>ignored-files/path-not-ignored</code> to return exit status 1 (not ignored), and <code>ignored-files/path-is-ignored</code> to return 0 (ignored).</p>

<p>What I'm seeing instead of everything in <code>ignored-files</code> returning exit status 0 (ignored):</p>

<pre><code>File                             | Expected exit status | Actual exit status | Summary
-------------------------------- | -------------------- | ------------------ | -------
`files/path-not-ignored`         | 1 (Not ignored)      | 1 (Not ignored)    | Expected
`ignored-files/path-ignored`     | 0 (Ignored)          | 0 (Ignored)        | Expected
`ignored-files/path-not-ignored` | 1 (Not ignored)      | 0 (Ignored)        | Unexpected
</code></pre>

<p>(Exit status codes are being checked with <code>git check-ignore &lt;file&gt;;echo $?</code>)</p>

<p>This doesn't match Git's internal behaviour, because I can <code>git add add ignored-files/path-not-ignored</code> just fine:</p>

<pre><code>File                             | `git add`?                   | Matches `git check-ignore` output?
-------------------------------- | ---------------------------- | ----------------------------------
`files/path-not-ignored`         | Adds file (as expected)      | Yes
`ignored-files/path-ignored`     | Throws warning (as expected) | Yes
`ignored-files/path-not-ignored` | Adds file (as expected)      | No


git status
On branch master

Initial commit

Changes to be committed:
  (use ""git rm --cached &lt;file&gt;..."" to unstage)

    new file:   files/path-not-ignored
    new file:   ignored-files/path-not-ignored

Untracked files:
  (use ""git add &lt;file&gt;..."" to include in what will be committed)

    .gitignore
</code></pre>

<hr>

<p>As <code>git check-ignore</code> is unreliable in this case, are there any other commands I could use to check whether Git is ignoring / not ignoring a given file?</p>

<p>Something that returns exit codes would be ideal, as I'm using this in a bash script.</p>
","6","1930516","0","0"
"9620360","313141","2012-03-08 15:39:16","3","873","<git><git-svn><gitignore><svnignore>","Can I commit a file with git, but automatically ignore it when doing a git svn dcommit?","<p>I'm starting now to adopt Git for my personal workflow at an SVN office, so git-svn is a tool I'm going to be relying on heavily.  One issue I've come across that I don't know how to resolve is how to ignore in one direction.</p>

<p>The specific use case for me is that our ant build file references things like svn and svnversion.  Obviously, if I'm using git-svn, I'm not planning on using either of those.  I have replaced them in my local build.xml with git equivalents, which are working just fine.</p>

<p>However, I clearly don't want to commit that change in a git svn dcommit.  I want to keep this change locally, and commit it locally so I don't lose it, but I don't want it to ever get committed back to the main SVN repo, because it will break pretty much the entire company's use of SVN, if I do.  A similar case using SVN alone is presented in <a href=""https://stackoverflow.com/questions/895548/subversion-ignore-modifications-to-a-file-locally-on-one-client-only"">this question</a>.</p>

<p>Is there any solution that would allow me to commit build.xml locally, continue to take build.xml changes from SVN (which has a lot of stuff not related to SVN as well), and never commit it back up using dcommit, without jumping through hoops every time I try to commit?</p>
","0","313141","0","0"
"45221551","6916098","2017-07-20 17:34:43","1","3188","<visual-studio-2017><gitignore>","gitignore how to ignore wwwroot/lib and wwwroot/dist folders visual studio 2017","<p>I need to exclude wwwroot/lib and wwwroot/dist folders from the git repository. </p>

<p>The folders i want to exclude looks like this: </p>

<pre><code>+-Web
+--wwwroot
+---lib
+---dist
</code></pre>

<p>the gitignore file has below configuration: </p>

<pre><code># Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/ 
</code></pre>

<p>Any help is much appreciated.. Thanks!</p>
","0","6916098","0","0"
"27368818","758299","2014-12-08 23:17:51","4","1436","<git><gitignore><git-rm>","When changing .gitignore, do all developers need to run `git rm --cached <path>`?","<p>If I add file that is <strong>already tracked by Git</strong> to my <code>.gitignore</code>, I can simply run</p>

<pre><code>git rm --cached &lt;path&gt;
</code></pre>

<p>to apply the new rules. I push that to the server, and the server will no longer receive my changes. Will I have to tell everyone on my dev team that they need to run the <code>git rm</code> command to make sure nobody ever pushes changes to the new file?</p>
","1","758299","",""
"27398404","270143","2014-12-10 10:16:57","0","72","<git><gitignore>","Problems with a specific filename in .gitignore","<p>My <code>.gitignore</code> for this doesn't seem to be working:</p>

<pre><code>*Previous.wtp
-- Previous.wtp
</code></pre>

<p>But I think that the rest of the exclusions work correctly in the file.</p>

<p>What am I doing wrong? I'm not an expert and I did search but it was hard to find a good concise list of <code>.gitignore</code> syntax.</p>

<p>The second line is the exact filename; it's in a subdirectory called Templates. Does that matter?</p>
","5","270143","0","0"
"27409164","233928","2014-12-10 19:21:50","0","99","<git><gitignore>","After removing .gitignore, git still giving error?","<p>In keeping with the advice from this question:
<a href=""https://stackoverflow.com/questions/1139762/ignore-files-that-have-already-been-committed-to-a-git-repository"">Ignore files that have already been committed to a Git repository</a></p>

<p>We did the following:</p>

<pre><code>git rm -r --cached .
git add .
$ git commit -m"".gitignore is now working""
On branch master
Your branch and 'origin/master' have diverged,
and have 2 and 24 different commits each, respectively.
  (use ""git pull"" to merge the remote branch into yours)
git commit -m"".gitignore now works""
git pull

git says:
$ git pull
error: The following untracked working tree files would be overwritten by merge:
dir/.classpath
</code></pre>

<p>How do we force git to ignore the .classpath file?</p>
","1","233928","",""
"27410517","438563","2014-12-10 20:47:03","3","1251","<git><gitignore>","How to git ignore file with same name as container directory?","<p>The file named as ""project"" is resultant of a build which produces a binary file with the same name as the container directory:</p>

<pre><code>project/
    src/
    main.c
    project &lt;-- binary file, same name as container directory
</code></pre>

<p>Being more general, how to ignore a file that have the same name as their container directory? Keep in mind that if ""project"" directory is renamed the resultant built file will change name too.</p>
","0","438563","",""
"45673218","6342729","2017-08-14 11:11:58","1","251","<git><git-branch><gitignore><git-checkout>","After git checkout node_modules are saved in other branch","<p>I have added new folder where are node_modules and they are ignored, like this:</p>

<pre><code>folder
 -node_modules
folder1
 -node_modules
 -app
</code></pre>

<p>folder1 and folder are in second branch, and in master branch is just folder.</p>

<p>After I switch from second branch to master node modules are saved and I get like this in master:</p>

<pre><code>folder
 -node_modules
folder1
 -node_modules
</code></pre>

<p>How to prevent this behaviour?</p>
","6","6342729","",""
"45702681","1817330","2017-08-15 22:51:07","7","6830","<git><visual-studio><visual-studio-2013><gitignore>","Visual Studio ignores *.jfm entry in the gitIgnore file","<p>I'm having a problem with Visual Studio 2013 locking a .jfm file. I am unable to save project changes to the local git repository when the project is open. </p>

<p>The error looks like this when clicking on the <strong>Commit</strong> button in the <em>Team Explorer -> Changes</em> panel:</p>

<blockquote>
  <p>""An error occurred. Detailed message: Could not open 'C:/Uers/Username/Documents/Visual Studio 2013/Projects/ProjectName/ProjectNameSQL/ProjectNameSQL.jfm': The process cannot access the file because it is being used by another process.""</p>
</blockquote>

<p>For example, when I make a change to the <em>default.aspx</em> in the project and look for changes in the Changes panel, only the <em>default.aspx.designer.vb</em> and <em>default.asp.vb</em> files show that changes have been made. only after closing the solution do I see a third file, <em>default.aspx</em>, appear in the Included Changes list of files.</p>

<p>I have already added <em>.jfm</em> to <em>.gitignore</em> and cleared the cache as noted in a previous solution described in <a href=""https://stackoverflow.com/questions/37704514/visual-studio-2015-database-project-directory-contains-a-file-with-extension-jfm"">this thread</a>.</p>

<p>I am using the visualstudio.com git repository to sync changes and have  manually edited the <em>.gitignore</em> file there as well.  </p>

<p>How would I fix this error?</p>
","1","1817330","0","0"
"63681124","4971866","2020-09-01 03:51:26","2","122","<python><github><gitignore>","Github python gitignore, why is c extension ignored? Is there a better way to use C in Python?","<p>Recently I pushed a Python package to github, and I noticed that all <code>.so</code> files are not uploaded.</p>
<p>And in the default <code>.gitignore</code>, I found out</p>
<pre><code># C extensions
*.so
</code></pre>
<p>Why?</p>
<p>I'm not familiar with C++, and I was told that the <code>.so</code> files are created with <code>pybind</code>.</p>
<p>Does this mean that there is a better way to use C++ code in python?</p>
","1","4971866","0","0"
"63692720","5728096","2020-09-01 17:33:25","0","37","<git><gitignore><git-push>","Rest git changes files before push to remote origin?","<p>I want to reset changes of specific files before the push to the remote origin and after pushed successfully all changes come back to files, also I don't want to use <code>.gitignore</code> because I need these files to be in tracking by git</p>
","0","5728096","",""
"45725154","1944451","2017-08-17 01:09:24","0","977","<git><github><gitignore><git-commit><git-add>","git add . or -A is adding .gitignore file in commit list, how to get ridoff this?","<p>If I change a bunch of files and then run command <code>git add .</code> it includes all the files along with <code>.gitignore</code> in my commit list.</p>

<p>If I use <code>git rm --chached .gitignore</code> then it is showing as <code>deleted: .gitignore</code> and <code>git add .</code> is adding the deleted <code>.gitignore</code> file</p>

<p>How can I IGNORE <code>.gitignore</code> itself so that <code>git add .</code> command adds only my changes in actual files or directories. </p>
","1","1944451","",""
"45732458","7545915","2017-08-17 10:18:45","7","4423","<git><version-control><gitignore>","Ignore files committed to git and also remove them from history","<p>I forgot to add certain files to my .gitignore when I began my project and consequently committed files I shouldn't have. <a href=""https://stackoverflow.com/questions/1139762/ignore-files-that-have-already-been-committed-to-a-git-repository"">I ignored the files afterwards as described here.</a> The damage has already happened though since the files still exist in the history of my repository and now my repository is 10gb in size!</p>

<p>I have not pushed the files for the aforementioned reason, so rewriting history should be okay. In short, what I need to do is to rewrite history so that afterwards none of the files in the current <code>.gitignore</code> exist in any commit in the repository.</p>

<p>Edit: There are lots of small files contributing to the large size, so the suggested duplicate about how to remove all files above a certain size threshold does not solve this problem.</p>
","2","7545915","0","0"
"27805938","869809","2015-01-06 19:39:09","0","131","<eclipse><git><gitignore>","git is not ignoring an eclipse .version file","<p>It may be something simple, but I cannot make git ignore this. I have put different combinations of things into the .gitignore file in the directory at the root of my repository.</p>

<p>But I still see:</p>

<pre><code> $ git status
 On branch master
 Your branch is up-to-date with 'origin/master'.

  Changes not staged for commit:
    (use ""git add &lt;file&gt;..."" to update what will be committed)
    (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

    modified:   .gitignore
    modified:   MyProject/build/.version

 no changes added to commit (use ""git add"" and/or ""git commit -a"")
 $ 
</code></pre>

<p>I have ""build"" in my .gitignore file. I have tried ""MyProject/build/.version"", ""build/.version"", "".version"" and various combinations thereof. But perhaps not the right combination.</p>
","1","869809","",""
"45813101","6950238","2017-08-22 08:54:16","2","897","<git><gitignore><tizen><tizen-native-app><tizen-studio>","What should be in .gitignore for wearable native C/C++ Tizen Studio project?","<p>So, what should be in <code>.gitignore</code> for wearable native C/C++ Tizen Studio project? There are solution for some separate files like <a href=""https://developer.tizen.org/ko/forums/sdk-ide/what-.rds_delta-file?langswitch=ko"" rel=""nofollow noreferrer"">this</a>, but seems not complete <code>.gitignore</code> file sample for wearable native C/C++ application.</p>
","2","6950238","",""
"45821289","959734","2017-08-22 15:07:51","0","2186","<git><github><gitignore>","git ignore file ending with certain suffix doesn't work","<p>In my repo's <strong>.gitignore</strong> file, I have :</p>

<pre><code>*.xcuserstate
</code></pre>

<p>which means I would like to ignore all files ending with <code>.xcuserstate</code>. </p>

<p>I added that ignore rule long time ago. However, today I still see changes not stated for commit with following file </p>

<pre><code>MyApp/MyApp.xcodeproj/project.xcworkspace/xcuserdata/john.xcuserdatad/UserInterfaceState.xcuserstate
</code></pre>

<p>Why? Why .gitignore doesn't work?</p>
","4","959734","",""
"63793685","10808467","2020-09-08 12:13:15","0","310","<java><git><intellij-idea><gitignore>","Intellij ignores .gitignore file - gray icon, no sign, slash circle, slash symbol","<p>For some reason Intellij ignores my .gitignore file. The .idea folder and so on are tracked. Does anyone have any idea why this is the case? What is the meaning of the gray icon in the bottom right corner?</p>
<p><a href=""https://i.stack.imgur.com/sGosK.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/sGosK.png"" alt="".gitignore with no sign"" /></a></p>
","2","10808467","0","0"
"45855025","6796618","2017-08-24 07:03:23","1","292","<gitignore>","Subfolder's .gitignore should override","<p>I have a project which tree structure looks like this:</p>

<p><code>
+ /Root
- .gitignore
+ - - /Folder A
- - - .gitignore      &lt;--- this fellow
+ - - - /bin
- - - - - fileA
+ - - - - fileB
+ - - - /Folder AA
+ - - /FolderB
+ - - - /bin
...
</code></p>

<p>The <code>.gitignore</code> in the root-folder has a lot of rules, among them is to ignore all <code>/bin</code>-folders.
However, in my <code>FolderA</code> I would like everything to stay as it is - all the way down in <strong>that</strong> folder.
<code>FolderB/bin</code> on the other hand should be ignored.</p>

<p>I know this is possible by adding another <code>.gitignore</code> in <code>FolderA</code>, and let this override the root folder's <code>.gitignore</code>. But I can't remember how.</p>

<p>What should I write in <code>FolderA/.gitignore</code>?</p>

<p><strong>Edit</strong>:
In other words: <em>""<code>FolderA</code> is a sacred folder, and must have all files in it stay in it, disregarding what any other <code>.gitignore</code>-files must say""</em></p>
","4","6796618","",""
"45863625","3541320","2017-08-24 13:59:51","1","2934","<git><laravel><gitignore>","git, ignore files with a pattern in Laravel","<p>I have this .gitignore file:</p>

<pre><code>/node_modules
/public/storage
/public/hot
/storage/*.key
/vendor
.idea
Homestead.json
Homestead.yaml
.DS_Store
Thumbs.db
*.sublime-project
*.sublime-workspace
.project
/nbproject
_ide_helper.php
composer.phar
error.log
Todo.rtf
.vagrant
/.vagrant
npm-debug.log
.env
/public/css/backend.css
/public/css/frontend.css
/public/js/backend.js
/public/js/frontend.js
/public/mix-manifest.json
/public/mix.js
</code></pre>

<p>Right now I'm ignoring last lines (starting with <code>/public/...</code>) but they are specific files. In my project I have a lot of compiled files like:</p>

<pre><code>/public/css/backend.345346n345jkn3454.css
/public/css/frontend.679nkj67n9n79n679.css
/public/js/backend.2345b34j5bn345m34..js
/public/js/frontend.234234234n234f.js
/public/mix-manifest.json
/public/mix.9b87a1da741f957f3f09.js
</code></pre>

<p>Etc... so I want to include all the files that has the ""backend"", ""frontend"" and ""mix"" text in the beginning of the name. It is possible to do something like this?:</p>

<pre><code>/public/css/backend*.css
/public/css/frontend*.css
/public/js/backend*.js
/public/js/frontend*.js
/public/mix*.js
</code></pre>

<p>I did that but it doesn't work, so I don't know how to do it.</p>

<p>EDIT: This question is not about ignoring already commited files on a repository. I wanted to know the use of wildcards for my specific situation.</p>
","2","3541320","",""
"63856833","14005902","2020-09-12 04:35:24","2","1067","<python><django><github><gitignore>","which gitignore file shall i use when uploading a django project which contain a secret key?","<p>I am new to GitHub:  I have uploaded a django project without a <code>.gitignore</code> file and GitHub Community banned my account.</p>
<p>That is why I need to know how to use a <code>.gitignore</code> file as well as adding a license.</p>
","1","14005902","0","0"
"63885485","11762152","2020-09-14 13:38:23","0","37","<c++><git><github><executable><gitignore>","gitignore extension-less files from ONE directory","<p>I want to ignore all extension-less files (c++ executables) from one directory in my repository.
The file structure is something like this:</p>
<pre><code>|--REPO
|   |--CPP
|   |   |--dir1
|   |   |    |--code1.cpp
|   |   |    |--executable1
|   |   |--dir2
|   |   |    |--code2.cpp
|   |   |    |--executable2
|   |--otherStuff
</code></pre>
<p>What I tried:</p>
<pre><code>**/CPP/**/*
!**/CPP/**/*.*
!**/CPP/**/*/
</code></pre>
<p>But it doesn't ignore the executables.</p>
","1","11762152","",""
"63901207","2364843","2020-09-15 11:48:40","-1","73","<git><gitignore>","Is there a way to have git ignore files in the root directory if they don't match a specific naming convention?","<p>Ok, so I've already looked for some way to do this on Google and have searched on Stackoverflow but so far haven't seen anything yet that states how this could be done (or if it's jut not possible).</p>
<p>What I need to do is to be able to ignore all .txt files in the root directory, <em>except</em> for those with certain kind of naming pattern to them. For example the following files would be ones I'd want &quot;seen&quot; and able to be committed to the repository:</p>
<ul>
<li>W1234_M01.txt</li>
<li>W4321_M99.txt</li>
<li>C9999_M00.txt</li>
<li>W4321R1_M49.txt</li>
<li>W1234_M1Z.txt</li>
<li>W1234_M1AA.txt</li>
<li>ReadMe.txt</li>
</ul>
<p>Basically, if the file has a name that follows the pattern &quot;[letter][4 numbers][(optional) letter followed by a number]_[M][any digit][at least 1 alphanumeric character].txt&quot; or &quot;ReadMe.txt&quot; then I'd want it to not be ignored. Likewise, any .txt files that don't match this pattern in the root directory would need to be ignored. Is there any way to do this?</p>
","1","2364843","",""
"27845275","1301891","2015-01-08 16:46:29","1","332","<gradle><android-studio><android-gradle-plugin><gitignore>","Safe to put 'build.gradle-e' in .gitignore?","<p>After one of the recent upgrades of Android Studio and/or the Gradle plugin, I've noticed that a build.grade-e file is created after I edit a build.gradle file.  The build.gradle-e file is a copy of the pre-edited copy of build.gradle and I assume it is simply a backup.</p>

<p>Trying to google this filename has been difficult since Google ignores the hyphen. </p>

<p>Since build.gradle-e seems to be a backup, I don't see a need to introduce it into my git repository.</p>

<p>Is is safe/good to add build.gradle-e to my .gitignore?</p>
","1","1301891","",""
"27967504","4312585","2015-01-15 15:55:02","0","101","<git><gitignore>","How to quickly incorporate all untracked files and directories in .gitignore?","<p>I have a large Git repository that has many random files and directories in it that should be ignored.  When I run <code>git status</code>, I get a lot of noise.</p>

<p>Those files and directories don't follow a specific pattern.  I could manually add them one by one to <code>.gitignore</code>, but this is tedious.</p>

<p>Is there a rapid way to add many or all of the ""untracked files"" returned by <code>git status</code> to <code>.gitignore</code>?  This seems like such an obvious task that I imagine a solution must exist.</p>
","4","4312585","",""
"9978341","702275","2012-04-02 14:34:00","1","777","<git><github><gitignore>","git add/commit deleting and not just ignoring .gitignore ignored file","<p>i've tried what was suggested by a previous Stackoverflow question about how to ignore files: <a href=""https://stackoverflow.com/questions/1139762/gitignore-file-not-ignoring"">Ignore files that have already been committed to a Git repository</a></p>

<p>what was suggested:</p>

<pre><code>git rm -r --cached .
</code></pre>

<p>the command I'm using: </p>

<pre><code>git rm -r --cached application/config/config.php
//i only want to ignore this one file
</code></pre>

<p>Unfortunately, when I do <code>git add.</code> and then <code>git commit</code> my config.php is <strong>deleted</strong> from the repository and not just ignored.</p>

<p>I have a .gitignore file in my root directory and it contains the following list item:</p>

<pre><code>application/config/config.php
</code></pre>

<p>might someone be able to help me understand why this config.php file is being <strong>deleted</strong> and just not being ignored?</p>

<p>here's what my git status shows:</p>

<pre><code>$ git status
# On branch master
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   .gitignore
#   modified:   application/config/config.php
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>thank you,</p>

<p>tim</p>
","4","702275","",""
"64488439","2847689","2020-10-22 18:29:46","1","462","<wordpress><git><gitignore>","Adding folder in ignored directory to git","<p>I am using <code>git version 2.17.1</code>.</p>
<p>I would like to ignore <code>wp-content/uploads/*</code> and <code>!wp-content/uploads/mailster/templates/sartre</code> to my git repository.</p>
<p>I used the last 3 lines in the script to accomplish this.</p>
<p>However, the files do not get added to my repository.</p>
<p>Find below my <code>*.gitignore</code> file:</p>
<pre><code>*.log
wp-config.php
wp-content/advanced-cache.php
wp-content/backup-db/
wp-content/backups/
wp-content/blogs.dir/
wp-content/cache/
wp-content/upgrade/
wp-content/wp-cache-config.php
wp-content/plugins/hello.php

/.htaccess
/license.txt
/readme.html
/sitemap.xml
/sitemap.xml.gz

# Do not Ignore
package.json
acf-export-2019-11-15.json

# Ignore everything in the &quot;wp-content&quot; directory, except the &quot;plugins&quot;,
# &quot;themes&quot; and &quot;mu-plugins&quot; directories.
wp-content/*
!wp-content/plugins/
!wp-content/mu-plugins/
!wp-content/themes/
!wp-content/uploads/

# Ignore everything in the root except the &quot;wp-content&quot; directory.
/*
!.gitignore
!wp-content/

# Ignore everything in the &quot;plugins&quot; directory, except the plugins you
# specify (see the commented-out examples for hints on how to do this.)
wp-content/plugins/*
!wp-content/mu-plugins
!wp-content/plugins/calendar
wp-content/plugins/calendar/vendor
wp-content/plugins/calendar/vendor/


# Ignore everything in the &quot;themes&quot; directory, except the themes you
# specify (see the commented-out example for a hint on how to do this.)
wp-content/themes/*
/wp-content/themes/twentynineteen/vendor/
!wp-content/themes/twentynineteen

# Ignore everything in the &quot;uploads&quot; directory, except the uploads you use
wp-content/uploads/*
!wp-content/uploads/mailster/templates/sartre
</code></pre>
<p>I appreciate your replies!</p>
","1","2847689","",""
"46261152","1574104","2017-09-17 05:55:20","1","41","<git><gitignore>","failed to add a file to gitignore","<p>I have a file I have to be ignored by git 
I have done this actions</p>

<ol>
<li>git rm --cached <code>path_to_file/filename.py</code></li>
<li>added <code>path_to_file/filename.py</code> to .gitignore</li>
</ol>

<p>The file does not show up on git indeed but when I switch branches or even switch back to the original branch, the file is gone. </p>
","6","1574104","0","0"
"65399034","9361576","2020-12-21 19:46:36","0","4093","<xcode><git><image><gitignore>","Xcode 12 Source control -> .gitignore file","<p>I'm trying to ignore all images from my project.</p>
<p>I have a .gitignore file in the root directory where the project file is located. I created this file with &quot;touch .gitignore&quot; then I applied a generated input from <a href=""https://www.gitignore.io"" rel=""nofollow noreferrer"">https://www.gitignore.io</a> with the keywords swift and xcode. After that I applied below the &quot;Others&quot; comment following pattern</p>
<p>*.png
*.imageasset</p>
<p>to ignore all images.</p>
<p>For specific folders and files it works, the source control in xcode doesnt show me this files anymore for a commit, but the images will always shown. I also tried to block a image through the Preferences -&gt; Source Control -&gt; Git -&gt; Ignore files, but it didnt worked.</p>
<p><strong>By the way</strong>
The image files are not in my repository, I have never committed them.</p>
<p>The .gitignore file:</p>
<pre><code># Created by https://www.gitignore.io/api/swift,xcode

### Swift ###
# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore &amp; Swift.gitignore

## Build generated
build/
DerivedData/

## Various settings
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3
xcuserdata/

## Other
*.moved-aside
*.xccheckout
*.xcscmblueprint
*.png
*.imageasset

## Obj-C/Swift specific
*.hmap
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
.build/

# CocoaPods - Refactored to standalone file

# Carthage - Refactored to standalone file

# fastlane
#
# It is recommended to not store the screenshots in the git repo. Instead, use fastlane to re-generate the
# screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots
fastlane/test_output

### Xcode ###
# Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore &amp; Swift.gitignore

## Build generated

## Various settings

## Other

### Xcode Patch ###
*.xcodeproj/*
!*.xcodeproj/project.pbxproj
!*.xcodeproj/xcshareddata/
!*.xcworkspace/contents.xcworkspacedata
/*.gcno

# End of https://www.gitignore.io/api/swift,xcode
</code></pre>
","3","9361576","",""
"65413079","4723732","2020-12-22 17:20:59","1","1302","<git><gitignore>","How to write .gitignore to work both for backend and frontend?","<p>My project structure</p>
<pre><code>drwxrwxr-x  7 jholmes jholmes 4096 дец 11 09:48 .
drwxr-xr-x 71 jholmes jholmes 4096 дец 22 18:08 ..
drwxrwxr-x 11 jholmes jholmes 4096 дец 10 11:54 backend
drwxrwxr-x  6 jholmes jholmes 4096 дец 22 18:08 frontend
drwxrwxr-x  8 jholmes jholmes 4096 дец 22 18:10 .git
-rw-rw-r--  1 jholmes jholmes  250 нов 25 12:25 .gitignore
drwxrwxr-x  4 jholmes jholmes 4096 дец 11 09:52 .history
-rw-rw-r--  1 jholmes jholmes   46 окт 27 11:35 README
drwxrwxr-x  2 jholmes jholmes 4096 дец  4 21:17 .vscode
</code></pre>
<p>I added .gitignore to my frontend</p>
<pre><code>drwxrwxr-x   2 jholmes jholmes   4096 дец 15 16:39 components
-rw-rw-r--   1 jholmes jholmes    248 дец 22 17:48 config.js
-rw-rw-r--   1 jholmes jholmes    193 дец 22 18:08 .gitignore
drwxrwxr-x   5 jholmes jholmes   4096 дец 15 17:07 .next
-rw-rw-r--   1 jholmes jholmes    170 дец 22 17:44 next.config.js
drwxrwxr-x 452 jholmes jholmes  20480 дец 15 16:44 node_modules
-rw-rw-r--   1 jholmes jholmes    407 дец 15 16:44 package.json
-rw-rw-r--   1 jholmes jholmes 225100 дец 15 16:44 package-lock.json
drwxrwxr-x   2 jholmes jholmes   4096 дец 15 16:40 pages
</code></pre>
<p>When I push my repo to Github, I still have .next folder uploaded. This is my frontend</p>
<pre><code>.gitignore

/node_modules

# testing
/coverage

# next.js
.next/
next.config.js

# production
/build

# misc
.DS_Store

# debug
npm-debug.log*
yarn-debug.log*
yarn-error.log*
</code></pre>
<p>How to deal with multiple folders?</p>
","4","4723732","",""
"46868801","8812636","2017-10-21 22:41:02","0","83","<git><directory><gitignore>","How to gitignore sub-directories under parent folder?","<p>I have the following structure:</p>

<pre><code>FolderA
-FolderB
--FolderB1
---FileB1
---FileB2
--FolderC
---FolderC1
----FileC1
</code></pre>

<p>Suppose if I am working under FolderC1 and wanted to gitignore Folder B and below contents? </p>
","5","8812636","0","0"
"11041925","300408","2012-06-14 21:58:11","5","3213","<git><gitignore><glob>","gitignore file type within root directory only","<p>I'm trying to ignore all <code>.log</code> file types (ie <code>foo.log</code>) in the repository root directory ONLY.</p>

<p>Both <code>*.log</code> and <code>/*.log</code> match all files of that type within the root directory, but they also match recursively (ie <code>/foo/bar/baz.log</code>)</p>

<p>Note: I'm using git on windows (git extensions)</p>

<p>How do I match all files with a specific file type within the repository root directory ONLY?</p>
","4","300408","0","0"
"28966926","3791380","2015-03-10 14:53:42","0","499","<git><deployment><gitignore>","Separate gitignore for specific branch?","<p>I am looking for a possibility to make a specific gitignore for a specific branch.</p>

<p>Here is the scenario:
I have currently a git repo with 3 branches. Development, Master and Production. And I am using Mina to deploy the production branch to our server / hoster.</p>

<p>But there is a problem, I can't install things on the remote production server and the project I am working on is using bower and less. So after deploying I cant run a bower install &amp;&amp; grunt build, because there is no bower nor grunt on the server.</p>

<p>As I was working alone on the project I just kept the vendor bower files, the generated css and minified css in the repo. And could easily deploy.</p>

<p>But now I am working with someone else on it and I had to ignore at least the generated css and minifed css /js stuff, because they produce always merge conflicts.</p>

<p>So my idea was to create a special gitignore for the production branch, where the css and min.css are not ignored. So I can deploy it. But so far I couldnt find anything about it.</p>
","3","3791380","0","0"
"11050487","545877","2012-06-15 12:17:05","29","60570","<git><gitignore>","Git - Creating a .gitignore file","<p>I'm looking to create a <code>.gitignore</code> file so certain files are do not get checked in to the repository. Does anyone have a guide on how and where to place this file? I have tried placing it in my working directory, ran git status and it is still picking up on the files I would like it to ignore.</p>

<p>I used this <code>.gitignore</code> file I have found:</p>

<pre><code>###################
# compiled source #
###################
*.com
*.class
*.dll
*.exe
*.pdb
*.dll.config
*.cache
*.suo
# Include dlls if they’re in the NuGet packages directory
!/packages/*/lib/*.dll
# Include dlls if they're in the CommonReferences directory
!*CommonReferences/*.dll
####################
# VS Upgrade stuff #
####################
UpgradeLog.XML
_UpgradeReport_Files/
###############
# Directories #
###############
bin/
obj/
TestResults/
###################
# Web publish log #
###################
*.Publish.xml
#############
# Resharper #
#############
/_ReSharper.*
*.ReSharper.*
############
# Packages #
############
# it’s better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip
######################
# Logs and databases #
######################
*.log
*.sqlite
# OS generated files #
######################
.DS_Store?
ehthumbs.db
Icon?
Thumbs.db
</code></pre>
","6","545877","0","0"
"47219985","6741215","2017-11-10 09:54:04","12","10896","<git><gitignore><git-lfs><gitattributes>",".gitignore vs .gitattributes","<p>Considering I have <code>*.pdf</code> files in both my <code>.gitignore</code> and <code>.gitattributes</code>, how does git behave and prioritize between the two? Does it ignore pdf files or stores them as LFS?</p>
","2","6741215","0","0"
"47227574","7209737","2017-11-10 16:48:34","0","677","<git><yii2><symlink><gitignore>","gitignore inside Symlink folder","<p>I'm here with a problem that I can not solve!
I am using the Yii2 Advanced framework and create a symbolic link for a folder, inside that folder I have two files and one of them is a gitignore file.
Here is my working tree:</p>

<p><code>
backend
        web
                uploads       &lt;- symbolic link
</code>
<code>
frontend
        web
                uploads       &lt;- original folder
                        index.php
                        .gitignore
</code></p>

<p>When I try to stash from my working tree git returns the following:
<code>error: 'backend / web / uploads / .gitignore' is beyond a symbolic link
fatal: Unable to process path backend / web / uploads / .gitignore
Can not save the current worktree state</code></p>
","2","7209737","",""
"29010443","430989","2015-03-12 12:57:42","3","1042","<git><gitignore>","gitignore all except file in sub-sub folder","<p>I already tried many combinations of the .gitignore but none worked for what I need. I have this tree:</p>

<pre><code>jobs/
jobs/projecta/config.xml
jobs/projecta/garbage
jobs/projecta/more/garbage
jobs/projectb/config.xml
jobs/projectb/garbage
jobs/projectb/more/garbage
</code></pre>

<p>Garbage means any other file. I want to commit only the config.xml files, and ignore everything inside jobs/ except them. So I tried:</p>

<pre><code>/jobs/*
!/jobs/*/config.xml
</code></pre>

<p>This way, everything inside jobs are ignored, including the config.xml file. With the inverse order, same happens. So, I can force add all config files and changes to them will be tracked, but if I add a new folder inside jobs, it's config.xml won't appear as a untracked file, so this way people can forgot to add them.</p>

<p>I already tried with **, but I got the same.</p>

<p>Any ideas?
Thanks!</p>
","4","430989","0","0"
"65776556","14334343","2021-01-18 14:37:21","23","6622","<git><gitignore>","Exclamation mark in .gitignore doesn't work","<p>I have this file structure</p>
<pre><code>aaafolder
└─ bbbfolder
   ├─ filename0.txt
   ├─ dddfolder
   │  ├─ filename1.txt
   │  └─ filename2.txt
   ├─ cccfolder
   └─ filename.txt
</code></pre>
<p>I want all the contents of the <code>aaafolder</code> folder to be hidden, but all files in the <code>dddfolder</code> folder must be present.</p>
<p>So in the repository, I want to get in Git this:</p>
<pre><code>aaafolder
└─ bbbfolder
   └─ dddfolder
      ├─ filename1.txt
      └─ filename2.txt
</code></pre>
<p>My <code>.gitignore</code> looks like this:</p>
<pre><code>/source/aaafolder/**
!/source/aaafolder/bbbfolder/dddfolder/*
</code></pre>
<p>However, the entire <code>aaafolder</code> folder is ignored</p>
","2","14334343","0","0"
"65777914","13419995","2021-01-18 15:56:39","-2","788","<django><git><github><version-control><gitignore>","Is it good practice to add .git folder to Github?","<p>After i entered <code>git init</code> I have directory <code>D:myproject\.git</code></p>
<p>Is it good to add <code>.git</code> folder it in Github or should i add it in .gitignore?</p>
","2","13419995","",""
"47239132","2707727","2017-11-11 14:45:46","3","2431","<git><ssh><gitignore>",".gitignore file for ssh directory","<p>I am trying to make sure the contents of the .ssh directory do not get into the Git Repository:</p>

<p><strong>executeS:~$ git diff --stat --cached origin/master</strong></p>

<pre><code>.gitignore           |   7 ------
 .ssh/.gitignore      |   2 ++
 .ssh/authorized_keys |   1 +
 .ssh/id_rsa          |  51 ++++++++++++++++++++++++++++++++++++++
 .ssh/id_rsa.pub      |   1 +
 .ssh/known_hosts     |   2 ++
 .viminfo             | 123 +++++++++++++++++++++++++++++++++++++++++++++++++++-----------------------------------------
</code></pre>

<p><strong>I then take them out as follows:</strong></p>

<pre><code>executeS:~$ git rm --cached .ssh/authorized_keys
rm '.ssh/authorized_keys'
executeS:~$ git rm --cached .ssh/id_rsa
rm '.ssh/id_rsa'
executeS:~$ git rm --cached .ssh/id_rsa.pub
rm '.ssh/id_rsa.pub'
executeS:~$ git rm --cached .ssh/known_hosts
</code></pre>

<p><strong>I have the following .gitignore file</strong></p>

<pre><code>executeS:~/.ssh$ pwd
/home/dockcclubdjango/.ssh

executeS:~/.ssh$ cat .gitignore
.*
!/.gitignore
</code></pre>

<p>But then if I do, ""git add . -A"", I get waht I had in step 1 all over
again. What can I do to make sure that .ssh NEVER gets into the
repository?</p>
","2","2707727","",""
"29023274","4052494","2015-03-13 01:21:41","3","1426","<git><github><intellij-idea><android-studio><gitignore>","Is the default .gitignore that comes with each new Android Studio project good enough?","<p>I'm just wondering if the two .gitignores that are automatically generated with each Android Studio project ignore all the truly unnecessary files? 
When I pushed the project to GitHub, there still seems to be a lot of clutter, but I don't know if it is necessary clutter? 
For example, I'm not sure if all the gradle files are necessary: <em>gradlew</em>, <em>settings.grade</em>, the <em>gradle/wrapper</em> directory, etc.
Here are the default .gitignore files:</p>

<p>The one in the <strong>Project</strong> folder:</p>

<pre><code>.gradle
/local.properties
/.idea/workspace.xml
/.idea/libraries
.DS_Store
/build
.idea/
app/app.iml
*.iml
</code></pre>

<p>And the one in the <strong>app</strong> folder:</p>

<pre><code>/build
</code></pre>

<p>And here's my GitHub repository for a visual of what else got pushed: </p>

<p><a href=""https://github.com/quinteroheg2/AndroidWorkspace"" rel=""nofollow"">https://github.com/quinteroheg2/AndroidWorkspace</a></p>
","0","4052494","",""
"11115829","15108","2012-06-20 08:43:02","15","2940","<git><git-svn><gitignore>","How to permanently prevent specific part of a file from being committed in git?","<p>I have cloned a remote SVN repository with git-svn. I have modified a pom.xml file in this cloned repo in a way that the code compiles. This setup is exclusive for me. Thus I don't want to push the changes back on the remote repo.</p>

<p>Is there a way to prevent this (partial) change of a file from being committed into the repo? I'm aware of the fact, that I could use a personal branch, but this would mean certain merging overhead. Are there other ways?</p>

<p>I've looked into this <a href=""https://stackoverflow.com/questions/655243/ignore-modified-but-not-committed-files-in-git"">question</a> and this <a href=""https://stackoverflow.com/questions/10220063/git-how-to-prevent-committing-files-that-were-modified-just-for-debugging-purpo"">one</a>, but they are for rather temporal changes.</p>

<p>Update: I'm also aware of the .gitignore possibilities, but this would mean to exclude the file completely.</p>
","3","15108","0","0"
"11116636","406652","2012-06-20 09:33:06","50","17516","<git><gitignore>","How do I ignore file extensions in git regardless of case?","<p>I want to tell git to ignore e.g. jpg files regardless of how the extension is written.</p>

<p>e.g.</p>

<blockquote>
  <p>*.jpg</p>
</blockquote>

<p>should ignore</p>

<blockquote>
  <p>.jpg, .JPG., .Jpg</p>
</blockquote>

<p>etc.</p>

<p>Is that possible without telling git to ignore case altogether?</p>
","1","406652","0","0"
"29028769","2129654","2015-03-13 09:28:30","2","9435","<eclipse><git><project><gitignore>",".factorypath added to .gitignore is not taken into account","<p>In <code>.gitignore</code> under the same directory there is </p>

<pre><code>.factorypath
/.factorypath
</code></pre>

<p>added for eclipse project. But whenever any change occur in this file it is still visible as modified under git or smartgit.</p>

<p>Any idea why ?</p>
","3","2129654","0","0"
"47250449","785535","2017-11-12 15:22:21","0","1087","<windows><git><visual-studio><gitignore>","windows .gitignore is not ignoreing visual studio temporatry files","<p>I can't ignore directory in windows git. I downloaded this file:- <a href=""https://gist.github.com/kmorcinek/2710267"" rel=""nofollow noreferrer"">https://gist.github.com/kmorcinek/2710267</a>. But still all the time I see as:-</p>

<p><a href=""https://i.stack.imgur.com/VVhSM.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/VVhSM.png"" alt=""enter image description here""></a>  </p>

<p>It must not complain any modification under .vs/ directory. I'm sure I added .gitignore file in the correct location as follows:-</p>

<p><a href=""https://i.stack.imgur.com/HQsZP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/HQsZP.png"" alt=""enter image description here""></a>  </p>

<p>My .gitignore file:-</p>

<pre><code>    # Download this file using PowerShell v3 under Windows with the following comand:
    # Invoke-WebRequest https://gist.githubusercontent.com/kmorcinek/2710267/raw/ -OutFile .gitignore
    # or wget:
    # wget --no-check-certificate http://gist.githubusercontent.com/kmorcinek/2710267/raw/.gitignore

    # User-specific files
                *.suo
                *.user
                *.sln.docstates

    # Build results

                [Dd]ebug /
                [Rr]elease /
                x64 /
                build /
                [Bb]in/
                [Oo]bj /

    # NuGet Packages
    *.nupkg
    # The packages folder can be ignored because of Package Restore
    * */ packages/*
    # except build/, which is used as an MSBuild target.
    !**/packages / build /
    # Uncomment if necessary however generally it will be regenerated when needed
    #!**/packages/repositories.config

    # MSTest test Results
    [Tt]est[Rr]esult */
    [Bb]uild[Ll]og.*

    *_i.c
    * _p.c
    *.ilk
    *.meta
    *.obj
    *.pch
    *.pdb
    *.pgc
    *.pgd
    *.rsp
    *.sbr
    *.tlb
    *.tli
    *.tlh
    *.tmp
    *.tmp_proj
    *.log
    *.vspscc
    *.vssscc
    .builds
    *.pidb
    *.log
    *.scc

    # OS generated files #
    .DS_Store *
    Icon ?

    # Visual C++ cache files
    ipch /
    *.aps
    *.ncb
    *.opensdf
    *.sdf
    *.cachefile

    # Visual Studio profiler
    *.psess
    *.vsp
    *.vspx

    # Guidance Automation Toolkit
    *.gpState

    # ReSharper is a .NET coding add-in
    _ReSharper */
    *.[Rr]e[Ss]harper

    # TeamCity is a build add-in
    _TeamCity *

    # DotCover is a Code Coverage Tool
    *.dotCover

    # NCrunch
    *.ncrunch *
    .* crunch *.local.xml

    # Installshield output folder
    [Ee]xpress /

    # DocProject is a documentation generator add-in
    DocProject / buildhelp /
    DocProject / Help/*.HxT
    DocProject/Help/*.HxC
    DocProject/Help/*.hhc
    DocProject/Help/*.hhk
    DocProject/Help/*.hhp
    DocProject/Help/Html2
    DocProject/Help/html

    # Click-Once directory
    publish/

    # Publish Web Output
    *.Publish.xml

    # Windows Azure Build Output
    csx
    *.build.csdef

    # Windows Store app package directory
    AppPackages/

    # Others
    *.Cache
    ClientBin/
    [Ss]tyle[Cc]op.*
    ~$*
    *~
    *.dbmdl
    *.[Pp]ublish.xml
    *.pfx
    *.publishsettings
    modulesbin/
    tempbin/

    # EPiServer Site file (VPP)
    AppData/

    # RIA/Silverlight projects
    Generated_Code/

    # Backup &amp; report files from converting an old project file to a newer
    # Visual Studio version. Backup files are not needed, because we have git ;-)
    _UpgradeReport_Files/
    Backup*/
    UpgradeLog *.XML
    UpgradeLog *.htm

    # vim
    *.txt~
    *.swp
    *.swo

    # svn
    .svn

    # Remainings from resolvings conflicts in Source Control
    *.orig

    # SQL Server files
    * */ App_Data/*.mdf
    **/App_Data/*.ldf
    **/App_Data/*.sdf


    #LightSwitch generated files
    GeneratedArtifacts/
    _Pvt_Extensions/
    ModelManifest.xml

    # =========================
    # Windows detritus
    # =========================

    # Windows image file caches
    Thumbs.db
    ehthumbs.db

    # Folder config file
    Desktop.ini

    # Recycle Bin used on file shares
    $RECYCLE.BIN/

    # Mac desktop service store files
    .DS_Store

    # SASS Compiler cache
    .sass-cache

    # Visual Studio 2014 CTP
    **/*.sln.ide

    # Visual Studio temp something
    .vs /

    # VS 2015+
    *.vc.vc.opendb
    *.vc.db

    # Rider
    .idea /

    # Output folder used by Webpack or other FE stuff
    **/ node_modules/*
    **/wwwroot/*

    # SpecFlow specific
    *.feature.cs
    *.feature.xlsx.*
    *.Specs_*.html

    #####
    # End of core ignore list, below put you custom 'per project' settings (patterns or path)
    #####
</code></pre>

<p>What is wrong I have done? Why do I see .vs/ConsoleApp/v15/sqlite3/storage.ide modified? Please tell me how to ignore files and directories in windows?  </p>
","2","785535","",""
"11123248","660896","2012-06-20 15:46:55","76","128102","<c#><.net><visual-studio><git><gitignore>",".gitignore and Visual Studio project: Ignore bin/Debug directory but not bin/Release directory","<p>I have a C# Visual Studio project in a git repository. I want to ignore the contents <code>bin/Debug</code> directory but not the contents of the <code>bin/Release</code>' directory. I've added <code>bin/Debug</code> to my <code>.gitignore</code> file, but it doesn't seem to work - it is including the entire contents of the <code>bin</code> directory. What would the correct entry be to do this?</p>
","2","660896","0","0"
"47264243","3719167","2017-11-13 12:19:48","1","200","<git><gitignore>","git ignore file completely","<p>I am using <code>git</code> to organise my code in better way.</p>

<p>I have setup <code>git</code> on <code>localhost</code> and <code>production server</code></p>

<p>There is a median <code>GitLab</code> to store all commits and branches.</p>

<p>On the <code>server</code>, I have setup two subdomains, one to host <code>master</code> branch on <code>app.example.com</code> and another one for <code>dev</code> branch on <code>dev.example.com</code></p>

<p>I have initialized and set up the same remote on both subdomains to pull master branch to <code>app</code> and dev branch to <code>dev</code>.</p>

<p><strong>I want some files to be separate in all three places.</strong></p>

<p>Like I have two files in my application <code>database_config.php</code> and <code>app.php</code></p>

<p><code>database_config.php</code> file contains the database credentials and since database credentials for <code>localhost</code>, <code>app</code> and <code>dev</code> are different. I need it to be different and not be affected by merge, push and pull.</p>

<p>Similarly, I have <code>app.php</code> through which <code>debug</code> is enabled on <code>localhost</code> and <code>dev</code> but it will always be disabled on <code>app</code>.</p>

<p>although I have included these files in <code>.gitignore</code> file on localhost, it is not pushed to <code>GitLab</code>. When in case of conflict I need to <code>reset</code> HEAD on production which also deletes the both files on production because they does not exists on <code>GitLab</code> repository.</p>

<p><strong>How can I prevent these files from any action of the git and it will always be intact of any event?</strong></p>
","2","3719167","0","0"
"65804902","15042574","2021-01-20 07:29:31","0","379","<git><visual-studio><unity-game-engine><bitbucket><gitignore>","Git stages changes that should be ignored by the .gitignore","<p>I've made a Unity Project and want to exclude some folders. I made the .gitignore look like this:</p>
<pre><code>[Ll]ibrary/
[Tt]emp/
[Oo]bj/
[Bb]uild/
[Bb]uilds/
[Ll]ogs/
[Uu]ser[Ss]ettings/

# Visual Studio cache directory
.vs/

# Autogenerated VS/MD/Consuelo solution and project files
ExportedObj/
.consulo/
*.csproj
*.unityproj
*.sln
*.suo
*.tmp
*.user
*.userprefs
*.pidb
*.booproj
*.svd
*.pdb
*.mdb
*.opendb
*.VC.db
</code></pre>
<p>But some files in that folders are still being staged.</p>
<p>List of changes:</p>
<p><a href=""https://i.stack.imgur.com/qk5QL.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/qk5QL.png"" alt=""enter image description here"" /></a></p>
","1","15042574","",""
"29052342","459095","2015-03-14 18:04:56","39","65126","<android><git><repository><gitignore>","Android Studio Git .gitignore vs Project > Settings > Version Control > Ignored Files","<p>I am somewhat confused, I noticed that upon setting up my first Git repository in Android Studio all of the correct files to ignore were automatically added to the Project's Settings under Settings > Version Control > Ignored Files.</p>

<p>This appeared to be magic, I never told it what to ignore. Moreover, there is no .gitignore file in any directory of my project as I'm used to creating.</p>

<p>This being said, I can't get my second project to automatically add ignored files, and really, I just want to use the simple .gitignore method.</p>

<p>Does anyone know how to override Android Studio's ignored files list and simply use a .gitignore instead? I'd like the ease of copying my .gitignore to all other projects I make, it does not appear you can copy Settings > Version Control > Ignored Files.</p>

<p>Thank you for commenting on how I can just use .gitignore.</p>
","2","459095","0","0"
"11145131","1466717","2012-06-21 19:11:30","8","9716","<git><github><gitignore>","How to config gitignore?","<p>I want to ignore some of my files (/config/environments/production.rb , /webrat.log , /config/database.yml ).  My gitignore:</p>

<pre><code>/.bundle
/db/*.sqlite3
/doc/
*.rbc
*.sassc
.sass-cache
capybara-*.html
.rspec
/vendor/bundle
/log/*
/tmp/*
/public/system/*
/coverage/
/spec/tmp/*
**.orig
rerun.txt
pickle-email-*.html

/config/environments/production.rb
/config/*.yml
/*.log
</code></pre>

<p>But this doesn't work. What's wrong?</p>
","0","1466717","0","0"
"47275128","8812032","2017-11-13 23:16:52","2","112","<python><github><gitignore>","Selecting an appropriate .gitignore so it doesn't upload itself.","<p>I have received feedback on my first ever programming assignment in Python. In general, it was pretty good but I don't fully understand one point. To mark the assignment my teacher cloned my repo via github. The feedback advised using ""an appropriate .gitignore that doesn't upload .gitignore itself"".</p>

<p>Can anyone expand on this point for me? Still trying to get familiar with git and don't fully understand gitignore. </p>
","3","8812032","",""
"29058585","3980755","2015-03-15 08:12:30","1","233","<git><gitignore>","Git keeps track of files after adding them to .gitgnore","<p>Working on a project on Yii using the PHPStorm IDE I ran into a problem: after adding the configuration file <code>/prorected/config/db.php</code> in the <code>.gitignore</code> Git system continues to monitor it and proposes to add in a commit. The same situation with the contents of folders <code>/protected/runtime/*</code> (with a .log files of app) and <code>/assets/*</code></p>

<p>I'm trying to run following command: <code>$ git rm --cached protected/config/db.php</code> - no effect((</p>

<p>What am I doing wrong?
Many thanks in advance!</p>
","2","3980755","",""
"66131263","11070293","2021-02-10 05:16:29","0","65","<powershell><gitignore>",".gitignore all except one specific file (via a full/fuller file path)","<h2>The Goal:</h2>
<p>How to use <code>.gitignore</code> to exclude all folders &amp; files <strong>except</strong> PowerShell $Profile?</p>
<p>The answer should help expand the current <em>exception file list</em> to more files in other subfolders. If possible, reduce wildcards to minimum, and use <strong>as specific as possible (full/fuller file path)</strong>. Why? For instance, <code>Book1.xlsx</code> may exist in multiple subfolders but I want to be able to choose only the specific desired subfolders.</p>
<p>Thanks in advance!</p>
<hr>
<h2>Current status:</h2>
<p>On Windows 10 (not Linux Distros):</p>
<ol>
<li><p><code>git init</code> initiated on top level directory <code>C:\</code>. [Please don't suggest to start from other subfolders. Just remain with <code>C:\</code>, as I will include more files to the exception list]</p>
</li>
<li><p><code>C:\.gitignore</code> containing the below:</p>
</li>
</ol>
<pre>

    <b># Ignore All</b>
    /*
    
    <b># Exception List [eg. PowerShell's $Profile (please use FULL/FULLER FILE PATH, if possible)]</b>
    !.gitignore
    
    !Microsoft.PowerShell_profile.ps1
    
    !Users/John/Documents/WindowsPowerShell/Microsoft.PowerShell_profile.ps1
    !Users\John\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1

    !C:/Users/John/Documents/WindowsPowerShell/Microsoft.PowerShell_profile.ps1
    !C:\Users\John\Documents\WindowsPowerShell\Microsoft.PowerShell_profile.ps1    

</pre>
<ol start=""3"">
<li>With the above codes, <code>git status</code> successfully returned only <code>.gitignore</code> as 1 untracked file. <code>Microsoft.PowerShell_profile.ps1</code> remained missing from untrack listing.</li>
<li>I've tried alternative ways (wildcard, partial subfolder name with pattern, etc) but <strong>all failed</strong> to return the  <strong>fuller file path <em>PowerShell $Profile</em></strong>.</li>
</ol>
","2","11070293","",""
"66133116","4898202","2021-02-10 08:13:17","0","115","<git><gitignore><git-status><git-untracked><git-subrepo>","How do I remove untracked directory tree (submodule / sub-repository) from main git repository?","<p>For the life of me I can't seem to 'remove' an untracked sub-module/directory from the main git repository. I've tried various syntaxes, but I keep getting the 'pathspec' error stating there was no match, even though the folder is there in plain site. I added it to the <code>.gitignore</code> and it has not been added or committed to the main repository at all yet, but it keeps showing up in red under <code>Untracked files:</code> when I run <code>git status</code> and I can't get rid of it. <code>git clean -n</code> shows nothing either.</p>
<p>Any clues as to what I'm doing wrong here?</p>
<p><em><strong>To be clear:</strong> I <strong>don't want to delete</strong> the sub-repo, I merely want to <strong>track the sub-repo entirely separately</strong> and have the main-repo totally ignore it as if it does not exist.</em></p>
<pre class=""lang-git prettyprint-override""><code>### /home/user/  &lt;-- main/master repository (ACTUAL), separate git-directory

$pwd
/home/user


$cat .git
gitdir: /home/git-repositories/user-main


### /home/user/ntc-templates/   &lt;-- sub repository, separate git-directory

$cat ntc-templates/.git
gitdir: /home/git-repositories/ntc-templates


$git status
On branch master
Changes not staged for commit:
  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
  (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)
    modified:   .recently-used

Untracked files:
  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)
    ntc-templates/     ### &lt;&lt;------------------ how do I get rid of this line?

no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)


$git rm -rf ntc-templates/
fatal: pathspec 'ntc-templates/' did not match any files


$git rm -rfn --cached ntc-templates/
fatal: pathspec 'ntc-templates/' did not match any files


$git rm -rfn --cached ntc-templates
fatal: pathspec 'ntc-templates' did not match any files


$git rm -rfn --cached ~/ntc-templates
fatal: pathspec '/home/user/ntc-templates' did not match any files


$ll ntc-templates/
total 168
drwxr-xr-x  6 user user  4096 Feb 10 11:49 ./
drwxr-xr-x 49 user user  4096 Feb 10 11:59 ../
-rw-r--r--  1 user user 29276 Feb 10 11:48 CHANGELOG
-rw-r--r--  1 user user 15443 Feb 10 11:48 development_scripts.py
-rw-r--r--  1 root root    45 Feb 10 11:49 .git
drwxr-xr-x  2 user user  4096 Feb 10 11:48 .github/
-rw-r--r--  1 user user    54 Feb 10 11:48 .github_changelog_generator
-rw-r--r--  1 user user  2622 Feb 10 11:48 .gitignore
drwxr-xr-x  3 user user  4096 Feb 10 11:48 lib/
-rw-r--r--  1 user user   601 Feb 10 11:48 LICENSE
-rw-r--r--  1 user user    29 Feb 10 11:48 MANIFEST.in
-rw-r--r--  1 user user   232 Feb 10 11:48 pyproject.toml
-rw-r--r--  1 user user 22240 Feb 10 11:48 README.md
-rw-r--r--  1 user user  1412 Feb 10 11:48 setup.py
drwxr-xr-x  2 user user 36864 Feb 10 11:48 templates/
drwxr-xr-x 37 user user  4096 Feb 10 11:48 tests/
-rw-r--r--  1 user user   243 Feb 10 11:48 tox.ini
-rw-r--r--  1 user user   101 Feb 10 11:48 .travis.yml
-rw-r--r--  1 user user   703 Feb 10 11:48 .yamllint


$git-ignore | grep ntc
ntc-templates/**
ntc-templates/CHANGELOG
ntc-templates/development_scripts.py
ntc-templates/lib
ntc-templates/LICENSE
ntc-templates/MANIFEST.in
ntc-templates/pyproject.toml
ntc-templates/README.md
ntc-templates/setup.py
ntc-templates/templates
ntc-templates/tests
ntc-templates/tox.ini


$
</code></pre>
<p>Thanks.</p>
","0","4898202","",""
"47603812","2121601","2017-12-02 01:56:13","2","622","<git><unity-game-engine><git-submodules><gitignore>","Adding files ignored by a git submodule","

<p><strong>TL;DR:</strong> I want a submodule to ignore some files, but I want those files tracked by the parent project</p>

<p><strong>Details</strong></p>

<p>This is for a Unity project. I want to add a bunch of code and assets I frequently used into a submodule, so I can easily share it between projects.</p>

<p>The problem is that Unity needs to keep track of "".meta"" files, that get stored along each asset. And these .meta files are unique for each project, so they can't be shared through the submodule.</p>

<p>So, I added a .gitignore file into the submodule, telling it not to track .meta files</p>

<p>So far things go as planned. I added the submodule into the project, and it correctly ignores the project's meta files. However, although I need to commit those into the main git repository, anything under the submodule is getting ignored, so I can't add the meta files into the main repository.</p>

<p><strong>Example:</strong></p>

<pre><code>Assets
L Game Files
  L some_asset.jpg
  L some_asset.jpg.meta
L Submodule    
  L shared_asset.jpg
  L shared_asset.jpg.meta
</code></pre>

<p>In this scenario, I want the main git repository to track:</p>

<pre><code>Assets
L Game Files
  L some_asset.jpg
  L some_asset.jpg.meta
L Submodule    
  L shared_asset.jpg.meta
</code></pre>

<p>And the submodule:</p>

<pre><code>shared_asset.jpg
</code></pre>

<p>I combed the web, I tried different .gitignore combinations but nothing works. I'm starting to think this is probably impossible, but if anyone has any idea, I would greatly appreciate it!</p>

<p>Thanks in advance!</p>






","0","2121601","0","0"
"47605405","6733153","2017-12-02 06:49:41","3","1091","<git><gitignore>","What's the difference between /media and media/ in a .gitignore file?","<p>I've tried both and I'm getting similar results. Haven't been able to find an answer.</p>
","0","6733153","0","0"
"29404850","4740848","2015-04-02 04:11:16","9","49378","<java><git><gitignore>","Example of gitignore file for java","<p>Can you show me example of <code>.gitignore</code> file for java, that consider a lot of different files that are not included(jar, war, classpath, files that IDEA and other IDE generates and so on and on). I mean really big <code>.gitignore</code>.</p>

<p>What I currently have is </p>

<pre><code>**/target/
/target/
*/target/*
.classpath
.project
.settings

# Package Files #
*.jar
*.war
*.ear

*.iml
*.idea
</code></pre>
","4","4740848","0","0"
"11542687","805284","2012-07-18 13:35:39","166","218693","<git><gitignore>","git: How to ignore all present untracked files?","<p>Is there a handy way to ignore all untracked files and folders in a git repository?<br/>
(I know about the <code>.gitignore</code>.)</p>

<p>So <code>git status</code> would provide a clean result again.</p>
","6","805284","0","0"
"11543789","1535093","2012-07-18 14:32:14","24","38305","<git><gitignore>","Git: how to ignore hidden files / dot files / files with empty file names via .gitignore?","<p>These files should all be ignored:</p>

<pre><code>.weirdBackupFileType
.travis.yml
</code></pre>

<p>The following files should not be ignored:</p>

<pre><code>_.weirdBackupFileType
Z.travis.yml
</code></pre>
","1","1535093","0","0"
"47616680","6733153","2017-12-03 08:33:18","16","26530","<python><django><git><gitignore>","Creating a .gitignore file for a Django website","<p>I'm ready to push my existing Django project (which i've been running in a local environment) to a Bitbucket repository so I can run it on a public server. At the moment I feel like there's a lot of files created in local development that needs to be added to <code>.gitignore</code>. </p>

<p>I found <a href=""https://github.com/github/gitignore/blob/master/Python.gitignore"" rel=""noreferrer"">this <code>.gitignore</code> file on github</a> however I still feel it's missing some things, for example it doesn't seem to remove files from each <code>migrations</code> folders. There's also a lot of stuff there that I don't know what they do - I understand not all of it is needed. Any advice is appreciated. </p>
","2","6733153","0","0"
"11600188","378170","2012-07-22 12:11:04","1","1290","<git><gitignore>","gitignore - allow folder creation but ignore all files inside - can we do it with exclamation mark (!)?","<p>When we push a certain project somewhere, we wish to deploy empty necessary folders too. For example: <code>/runtime/</code> folder.</p>

<p>However, we must ignore all files inside <code>/runtime/*</code> ;</p>

<p>I'm aware of ""<em>the create a useless file inside your empty directories</em>"" solution and also, aware of some sort of bash process to make that <em>add of useless files</em> automatic, but isn't there any other way? </p>

<p>I mean:</p>

<p>Is it possible to accomplish this by having on our .gitignore something like:</p>

<pre><code>!/runtime/
/runtime/*
</code></pre>
","0","378170","0","0"
"11618023","378170","2012-07-23 18:09:26","1","673","<git><gitignore>","Untracked Working Tree .gitignore - no luck with clean -f or git rm - How to reset the all thing?","<p>Each time the remote is Pulling changes into Dev [Hub's post-update hook],</p>

<p>I'm getting:</p>

<blockquote>
  <p>error: Untracked working tree file 'somepath/here/.gitignore' would be
  overwritten by merge.  Aborting</p>
</blockquote>

<p>If I do <code>git status</code> on the <strong>remote</strong> I get:</p>

<pre><code>#On branch dev nothing to commit
(working directory clean)
</code></pre>

<p>I understand that the file is there, I've stupidly create it directly on the remote machine (without doing push);</p>

<p>I understand git refuses to merge it.</p>

<p>Updated:</p>

<p>I've tried on the remote machine do:</p>

<pre><code>git rm .gitignore
</code></pre>

<p>but I got:</p>

<pre><code>fatal: pathspec 'path/.gitignore' did not match any files
</code></pre>

<p>I've tried on the remote machine do:</p>

<pre><code>git clean -f
</code></pre>

<p>Did nothing and the same <code>Untracked working tree file</code> error appears.</p>

<p>I've run: </p>

<pre><code>git clean -f -d -x
</code></pre>

<p>It removed that file and folders untracked on the remote.</p>

<p>Update:
I've change no matter what file to trigger the push option.
When pushed, the bare detected changes and has made them.</p>

<p>For some reason yet not clear, a .css file (and perhaps more things) where not taken on that refresh on the remote server, so I change no matter what on that css just to trigger the push, and again, all was clear.</p>

<p>This is obviously the way we SHOULDN'T do it. It apparently is ok. But I cannot tell for sure.</p>
","3","378170","0","0"
"47627884","8911348","2017-12-04 06:46:12","2","3488","<c#><asp.net><git><dll><gitignore>","Setup .gitignore for ASP.NET project","<p>I tried to setup a <code>.gitignore</code> for ASP.NET project but it does not work.</p>

<p>I did this example: <a href=""https://gist.github.com/indyfromoz/4109296"" rel=""nofollow noreferrer"">.Gitignore for ASP.NET</a> </p>

<p>What can I do that in a commit it will not pass unnecessary files like ddl, cache, etc.?</p>
","5","8911348","0","0"
"66167253","12084471","2021-02-12 06:26:49","0","54","<git><gitignore>","I want to ignore a file from git local repository so i have added .gitignore and .swp file inside but still file showing in the ""git status""","<pre><code>ubuntu@ip-172-31-100-164:/etc/ansible/roles$ cat .gitignore
# These are some examples of commonly ignored file patterns.
# You should customize this list as applicable to your project.
# Learn more about .gitignore:
#     https://www.atlassian.com/git/tutorials/saving-changes/gitignore
*.swp
*xcore/vars/.main.yml.swp
</code></pre>
<pre><code>git status 
    modified:   .gitignore
    modified:   argo_setup.yml
    modified:   xcore/tasks/argocd_apps.yml
    deleted:    xcore/vars/.main.yml.swp
    modified:   xcore/vars/main.yml
</code></pre>
<p>I want to ignore above file please help me!</p>
","6","12084471","0","0"
"11633974","","2012-07-24 15:15:57","0","213","<git><gitignore>","How to gitignore everything except hidden subdir?","<p>I'm using this <code>.gitignore</code> file for excluding everything in the current dir and subdirs, except the <code>!</code> prefixed entries:</p>

<pre><code>*
!.profile
!.vim/snippets
!.vimrc
</code></pre>

<p>The <code>.profile</code> and <code>.vimrc</code> files are showing up as untracked in <code>git status</code> but not the <code>.vim/snippets</code> directory. Any idea how to include this directory as well? I've tried <code>!.vim/snippets/</code> but it doesn't work either. Thanks</p>
","2","","",""
"29428328","3327360","2015-04-03 07:50:57","3","204","<codeblocks><gitignore>","How to add codeblocks executable in gitignore?","<p>I am using codeblocks IDE for opencv programming in c, so when i build and run the program it generate executable which opens through AptURl
,how to add that executable in .gitignore ?</p>
","0","3327360","0","0"
"66175487","13568667","2021-02-12 16:28:02","0","1152","<laravel><git><gitignore><git-pull>","Does the ""git pull"" command delete folders and files that are in gitignore?","<p>I have been developing a site locally (Laravel 7) and I have a repo on GitHub.</p>
<p>Every time I made a change locally, I pushed to the repository and from the VPS where the site is (via SSH) I did <code>git pull</code>. I realized that some folders previously placed in <code>.gitignore</code> were actually not being ignored. Then I saw that it was possible to clear the git cache. I did it that way and the next push actually ignored what I wanted it to ignore:</p>
<pre><code>git rm -rf --cached .
git add .
git commit -am &quot;cleaning git cache&quot;
git push
</code></pre>
<p>Now I have <em>a terrible doubt</em>. I have, for example, this in the file <code>.gitignore</code></p>
<pre><code>/storage
/storage/*/*
</code></pre>
<p>When I do <code>git pull</code> on the VPS, <em>will the <code>storage</code> folder I have there (which is full of useful files that should not be deleted at all) be deleted?</em> I can't afford that.</p>
<p><strong>EDIT :</strong> I read contradictory responses. And that's not reassuring....</p>
<p><strong>EDIT 2 :</strong> I retraced my steps in this way and everything went back to the way it was.</p>
<p><em>Locally:</em>
<code>git reset HEAD~1</code> <code>git add .</code> <code>git commit -m &quot;Today's commit&quot;</code> <code>git push -f origin master</code></p>
<p><em>On VPS:</em>
<code>git pull</code></p>
<p>Situation restored. Thanks anyway</p>
","8","13568667","",""
"26843187","","2014-11-10 11:50:04","9","17322","<git><gitignore><git-pull>","Git pulls files in .gitignore","<p>I use Git pull to download changes from remote repo to my local dev folder.
the problem is every time I pull changes, git downloads some file that exists in .gitignore file (e.g. /app/config/config.yml)</p>

<p>what am I doing wrong ??
here is my .gitignore </p>

<pre><code># Parameters
/app/config/parameters.yml
/app/config/parameters.ini
/app/config/config.yml
</code></pre>

<p>but when I pull <code>git pull</code> I find a new config.yml !!</p>
","3","","0","0"
"26569681","1291122","2014-10-26 04:02:56","4","1147","<git><gitignore>","Unable to ignore .idea file via .gitignore","<p>I pushed my code without putting <code>.idea/</code> in .gitignore. But now when I realised it, I saw <a href=""https://stackoverflow.com/questions/9550437/how-to-make-git-ignore-idea-files-created-by-rubymine"">this</a> SO answer. So when I tried to undo that commit/push using <a href=""https://stackoverflow.com/a/1270608/1291122"">this</a> SO answer, it works. But after adding <code>.idea/*</code> to .gitignore, and then doing git add and pushing the code, the .idea directory appears again and I can see all my previous commits(which I did undo).</p>

<p>What to do now?</p>
","0","1291122","0","0"
"26592390","2697793","2014-10-27 16:37:29","1","56","<git><gitignore>","Confusion on gitignore file tracking","<p>I'm having trouble understanding exactly how the .gitignore file works.</p>

<p>Say I have the following .gitignore:</p>

<pre><code>/db/*.sqlite3
/log/*.log
/public/uploads/*
</code></pre>

<p>On all of my computers, I have a file <code>/db/development.sqlite3</code></p>

<p>My questions are:</p>

<ol>
<li><p>If the file is already in the repository, will it pull down the version in the repo every time I git pull?</p></li>
<li><p>Do files in the gitignore file need to be untracked on all systems in order to not pull or push to or from the repo?</p></li>
<li><p>If I decide to add another line /tmp/** /* to my gitignore after the fact, do I need to go into each workstation/live server to untrack the files?  And do I need to push a version to the repo that has /tmp/** deleted?**</p></li>
</ol>
","0","2697793","",""
"8832729","135665","2012-01-12 09:31:33","26","26605","<git><shell><glob><gitignore>","Difference between ** and * in glob matching (.gitignore)","<p>I have the following directory structure and files.</p>

<pre><code>pw-spec/
|-- event_spec.coffee
|-- event_spec.js
|-- integration
|   `-- service
|       |-- auth_spec.coffee
|       |-- auth_spec.js
|       |-- chat_spec.coffee
|       |-- chat_spec.js
|       |-- transport_spec.coffee
|       `-- transport_spec.js
|-- message_spec.coffee
|-- message_spec.js
|-- pw_spec.coffee
|-- pw_spec.js
|-- run.coffee
|-- run.html
|-- run.js
|-- service
|   |-- auth_spec.coffee
|   |-- auth_spec.js
|   |-- chat_spec.coffee
|   |-- chat_spec.js
|   |-- stream_spec.coffee
|   `-- stream_spec.js
|-- spec.coffee
|-- spec.js
`-- stub
    |-- stream.coffee
    |-- stream.js
    |-- transport.coffee
    `-- transport.js

4 directories, 27 files
</code></pre>

<p>I would like to ignore all <code>*.js</code> files anywhere within <code>pw-spec</code> directory.</p>

<p>However, adding the following patterns to <code>.gitignore</code> doesn't cut it:</p>

<pre><code>pw-spec/*.js
pw-spec/**/*.js
</code></pre>

<p>The problem is that the second one only matches js files that are exactly 1 level
deep within the tree, while I want to match all js files under <code>pw-spec</code>.</p>

<p>Doing </p>

<pre><code>ls pw-spec/**/*.js
</code></pre>

<p>produces [1]:</p>

<pre><code>pw-spec/service/auth_spec.js
pw-spec/service/chat_spec.js
pw-spec/service/stream_spec.js
pw-spec/stub/stream.js
pw-spec/stub/transport.js
</code></pre>

<p>As you can see </p>

<pre><code>pw-spec/integration/service/auth_spec.js
pw-spec/integration/service/chat_spec.js
pw-spec/integration/service/transport_spec.js
</code></pre>

<p>are missing from [1].</p>
","1","135665","0","0"
"8850203","612304","2012-01-13 11:56:20","3","1518","<git><gitignore>","gitignore match files with pre and suffix in subdirectory","<p>I like to track only files that start with ""es"" and end with *.h or *.m</p>

<p>so i tried this:</p>

<pre><code>#exlude all
*
#except
!es*.h
!es*.m
</code></pre>

<p>and</p>

<pre><code>#exlude all
*
#except
!*/es*.h
!*/es*.m
</code></pre>

<p>but neither works for files in subdirectories</p>
","7","612304","",""
"26636321","953553","2014-10-29 16:55:14","1","39","<git><gitignore>","What is the exact impact of following content of `.gitignore` file in one of subdirectories?","<p>What is the exact impact of the following content of <code>.gitignore</code> file in one of the subdirectories:</p>

<pre><code>*

!.gitignore
</code></pre>
","0","953553","",""
"8865848","359862","2012-01-14 22:25:04","735","180088","<git><comments><gitignore>","Comments in .gitignore?","<p>Can you write comments in a <code>.gitignore</code> file?</p>

<p>If so, should the line be preceded with a <code>#</code> or some other indicator?</p>
","2","359862","0","0"
"26654808","2104921","2014-10-30 13:50:34","3","2747","<git><gitignore>","Is ""tags"" a reserved keyword in git?","<p>One of my projects has a sub folder called ""tags"". As it looks like, this folder is ignored by git although I've not defined it in my .gitignore file. </p>

<p>So I guess there is a list of ""keywords"" like ""tags"" that is ignored by git on default? </p>

<p>Here is the content of the .gitignore file</p>

<pre><code># Java: https://github.com/github/gitignore/blob/master/Java.gitignore
*.class
**/classes/

# Package Files #
*.jar
*.war
*.ear

# IDEA: https://github.com/github/gitignore/blob/master/Global/IntelliJ.gitignore

*.iml
*.ipr
*.iws
.idea/

# Mac OS X: https://github.com/github/gitignore/blob/master/Global/OSX.gitignore

.DS_Store
.AppleDouble
Icon


# Thumbnails
._*

# Files that might appear on external disk
.Spotlight-V100
.Trashes

# Gradle
.gradle/
**/build/
out/

# Leiningen and others
**/target/
</code></pre>
","1","2104921","",""
"26670878","1340942","2014-10-31 09:06:09","2","433","<git><gitignore>","gitignore my windows username","<p>My Keil projects often store a <code>.username</code> file which I want to ignore using gitignore. </p>

<p>I thought I could do <code>*.$(echo %username%)</code> in my <code>.gitignore</code>, since <code>echo %username</code> will print my name in the regular Windows prompt. I am using git bash, and appearently it cannot fetch these global variables (path, username, appdata etc). </p>

<p>How can I achieve my goal? </p>
","4","1340942","",""
"26678955","2180567","2014-10-31 16:09:10","18","5932","<git><github><gitignore><ignore>","Un-ignore all files in global .gitignore","<p>After looking at <a href=""https://stackoverflow.com/questions/3203228/git-ignore-exception"">git ignore exception</a>, I realized that one can ignore files in a repository from a global .gitignore file.</p>

<p>Is there any way that you can override all rules from the global .gitignore file, so that the repository will have everything in it and nothing ignored? (besides un-ignoring every file individually)</p>
","2","2180567","0","0"
"26685866","846844","2014-11-01 03:08:43","0","1189","<git><bower><gitignore>","Why is git ignoring my /bower_components folder?","<p>Why is git ignoring my /bower_components folder? It will commit /bower_components/bootstrap, but none of the folders contents, or any of the other folders in bower_components.</p>

<pre><code>git add --all
git commit -m ""adding bootstrap""
On branch master
Your branch is up-to-date with 'origin/master'.
nothing to commit, working directory clean

git clean -ndX                                 
Would remove App_Data/packages/NoGit.0.0.8/node_modules/nogit/node_modules/globa
l-tunnel/node_modules/                     

dir bower_components
Volume in drive C is BOOTCAMP
Volume Serial Number is 28B2-7D02

Directory of c:\Projects\Blog6\Publish\Latest\bower_components

10/31/2014  10:00 PM    &lt;DIR&gt;          .
10/31/2014  10:00 PM    &lt;DIR&gt;          ..
10/31/2014  10:00 PM    &lt;DIR&gt;          angular
10/31/2014  10:00 PM    &lt;DIR&gt;          angular-route
10/31/2014  10:46 PM    &lt;DIR&gt;          bootstrap
...
</code></pre>

<p>I created my own .gitignore file, just to see if it would help the issue. But it didn't.</p>

<pre><code># Compiled source # 
###################
*.com
*.pdb

# Packages #   
############
# it's better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Logs and databases #
######################
*.log
*.sql
*.sqlite

# OS generated files #
######################
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db
</code></pre>
","0","846844","",""
"26693125","1780148","2014-11-01 20:52:46","10","2140","<git><vim><gitignore><ctrlp>","CtrlP: ignore files in subdirectory within a git repo","<p>For my repo, suppose it's called <code>top</code></p>

<pre><code>top\
  .gitignore
  foo\
  bar\
</code></pre>

<p>I want CtrlP to list files that are  </p>

<ol>
<li>Under <code>foo\</code>  </li>
<li>Is not ignored by <code>.gitignore</code> defined in <strong>top\</strong></li>
</ol>

<p>If I cd into <code>top\foo\</code>, and open vim from there, 1 would be satisfied but not 2.<br>
If I open vim on <code>top\</code>, 2 would be satisfied but not 1.</p>

<p>How do I achieve both 1 and 2?</p>

<p>I tried <a href=""http://www.vim.org/scripts/script.php?script_id=2557"">this gitignore vim script</a>, but it only parses <code>gitignore</code> when I open vim in the root folder of a repo, so I can't do both 1 and 2 together.<br>
Same for <code>let g:ctrlp_user_command = 'ag %s -l --nocolor -g """"'</code>, <code>ag</code> doesn't try to go up to the repo root and read gitignore from there.<br>
Setting <code>g:ctrlp_working_path_mode</code> as <code>r</code> let CtrlP honors <code>.gitignore</code> in the top folder, but everything under <code>top\</code> would be listed by CtrlP. I just want files in <code>foo\</code>.</p>

<p>Thanks.</p>
","4","1780148","",""
"26712896","275088","2014-11-03 11:05:23","10","1186","<git><gitignore>","What files/directories does git ignore by default?","<p>I noticed that in a newly created git repo, directories like <code>__pycache__</code> or .<code>svn</code> are already ignored. I don't remember configuring git to ignore these directories. How can I view the list of patterns that are currently ignored by git? I'm using git v2.1.3.</p>
","0","275088","0","0"
"8943936","226473","2012-01-20 15:42:39","3","2124","<ruby-on-rails><git><github><gitignore>","ignoring local config files in git","<p>There are some local files (that are part of our repository) in a rails app that I would like git to ignore. Basically, I'd like git to ignore all changes I make to anything in the config/environments directory and to the config/application.rb file. I don't want to use .gitignore because I don't want OTHER people working on the code base to have their configurations ignored by git. Basically I'm doing a lot of testing that modifies the config files and sometimes my config changes are checked into a github which at a minimum is embarassing and at worst causes issues with the production environment.</p>

<p>What's the best approach here?</p>
","2","226473","",""
"26744580","1054423","2014-11-04 20:38:17","0","49","<git><wildcard><gitignore>",".gitignore **/* but not <something>/*","<p>I have a <code>.gitignore</code> (specifically in the webapp folder of a partially generated spring application) that contains:</p>

<pre><code>**/*
!.gitignore
!META-INF/*
!WEB-INF/*
!index.jsp
</code></pre>

<p>I want to be ignoring all files except those with the negate lines, but the <code>!&lt;some folder&gt;/*</code> lines don't work and all files in those folders are ignored.</p>

<p>I tried replacing the <code>**/*</code> entry with: <code>*</code>, <code>/*</code>, <code>/**/*</code>, none of which solve the issue.</p>

<p>I would prefer not to explicitly list what not to ignore and not to explicitly add items, though I am currently doing so.</p>

<p>Any ideas?</p>
","0","1054423","",""
"26757730","1329111","2014-11-05 12:54:28","1","493","<git><merge><gitignore>","git merge doesn't update .gitignore","<p>I have a problem with updating the .gitignore file across multiple branches. I have no clue what I'm doing wrong.</p>

<p>The steps I took are the following:</p>

<ul>
<li>git checkout master</li>
<li>add 2 lines to the pre-existing file .gitignore</li>
<li>git commit</li>
<li>git push</li>
<li>git checkout develop</li>
<li>git merge master</li>
<li>""Already up to date""</li>
</ul>

<p>I went back to master - where my 2 lines are still present in .gitignore -, tried to commit again (""No changes detected""), tried to push again (""Nothing to push""), checked out develop again and merged master again (""Already up to date"").</p>

<p>So now my .gitignore file differs on my 2 branches and there seems to be no way to get the change from master into develop.</p>

<p>(Of course I could manually add the same 2 lines I added in master, in develop, but that doesn't solve the nature of the problem.)</p>
","4","1329111","0","0"
"8981472","603840","2012-01-24 02:52:39","73","63388","<git><gitignore>","Ignore all files with the same name in git","<p>Is there a way to have a <code>git ignore file</code> to ignore all files with the name test in them?</p>

<p>I have files like this:</p>

<pre><code> - css/test.css 
 - js/subfolder/test.js 
 - lib/main/sub/test.html
</code></pre>

<p>and so on.</p>

<p>I want <code>git</code> to avoid adding or committing any files with the name test.</p>
","2","603840","0","0"
"26767267","1009332","2014-11-05 21:15:27","0","109","<git><gitignore>","How to ignore git controlled file for pending changes locally","<p>On my project, the team is not supposed to ever checkin changes to schema.rb. Schema.rb is, however, controlled by git.</p>

<p>Basically, I just don't want to see schema.rb show up as a pending change ever.</p>
","1","1009332","",""
"26791458","4224933","2014-11-06 23:35:38","4","2687","<git><compilation><vhdl><gitignore>","gitignore for VHDL project","<p>I'm beginning to work on an already started project in VHDL: many simulations and compiling have already been done on this project.</p>

<p>I decided to use Git to be able to work from many computers but I still have to push the files to the repository. Since the project is full of .exe and other compile output files it takes forever to upload (I know Git is very in efficient in the conversion to binary files).</p>

<p>However it's the first time I work with VHDL so I can't distinguish between source files and simulation/compile outputs.</p>

<p>I'm working on a Xilinx Spartan-6, with the Xilinx ISE (can't tell if it's the WebPack or the Design Suite, but I'd say the WebPack)</p>

<p>What file extensions should I include in the <code>.gitignore</code>?</p>
","0","4224933","",""
"9049835","744184","2012-01-29 00:22:26","27","11331","<git><gitignore>","How can I ignore all files except those with a certain extension in git?","<p>I need to ignore all files except those ending in <code>.php</code>, <code>.css</code>, <code>.html</code> or <code>.js</code>.</p>

<p>This is what I have in my .gitignore file for now:</p>

<pre><code>*
!.php
!/*.php
!*.php
</code></pre>

<p>It does ignore everything, but only permits <code>.php</code> files in root directory, while hiding all the rest.</p>
","0","744184","0","0"
"57742829","11996947","2019-09-01 02:34:43","0","674","<git><gitignore>","Adding .netlify/state.json to .gitignore doesn't work","<p>I am trying hide this file .netlify/state.json by adding it to my git
but it still shows in my github repo. I just want to hide the state.json file somehow. </p>

<p>My .gitignore file is in my root directory.
The .netlify folder is in my root directory.</p>

<p>I have already tried adding several variations of the directory to the .gitignore file. </p>

<p><code>.netlify/state.json</code></p>

<p><code>state.json</code></p>

<p><code>.netlify</code></p>

<p><code>../.netlify</code></p>

<p><code>.netlify/state.json</code></p>

<p>but it still none of them worked.</p>

<p>Here is the link to my github repo:</p>

<p><a href=""https://github.com/able-leopard/a-day-in-the-life-on-mars"" rel=""nofollow noreferrer"">https://github.com/able-leopard/a-day-in-the-life-on-mars</a></p>

<p>Thank you very much in advance!</p>
","1","11996947","",""
"19754126","1762404","2013-11-03 14:42:22","3","5867","<ios><xcode><git><gitignore>","Xcode .git ignore","<p>My question is should you ignore the debugger folder and the Breakpoints_v2.xcbkptlist file. Or should the files be committed as well.</p>

<p>Is there a standard Xcode 5 git ignore file like the one listed <a href=""https://stackoverflow.com/questions/49478/git-ignore-file-for-xcode-projects"">here</a> but for Xcode 5. I like this one because its comments explains every ignore file in detail for people who aren't as advanced like myself.</p>
","1","1762404","",""
"19756445","1243445","2013-11-03 18:32:04","5","1198","<git><gitignore>","gitignore based on unix file permissions","<p>I am working on a C project which generates lots of binaries. I try to keep the source under source control. However, I would like the binaries to be ignored without having to add them to the gitignore file whenever I create a new one. This is a sandbox of sorts and so I create lots of new binaries as I try out new things. I could build all my binaries in a single directory or give them a suffix, but I dislike these reasons. Since GCC automatically sets the executable bit on the binaries it produces, can I use that flag to ignore them?</p>
","2","1243445","",""
"19781206","1944352","2013-11-05 02:59:57","2","2377","<android><eclipse><git><github><gitignore>","Android Eclipse: .gitignore not ignoring bin and gen directories at all","<p>I am trying to ignore some eclipse generated files that are not relevant for a push and here is my folder structure:</p>

<pre><code>Project1/
   .gitignore
   extras/
      ..some stuff here
   Project1/
      bin
      gen
      libs
      res
      ..and so forth
</code></pre>

<p>so I need the inner Project1 that is inside of outer Project1 because Eclipse was getting all crazy for not having a folder structure like that and it wouldn't import my project so that's that. The git ignore seems to work for the extras folder but not for bin, and gen or anyhting inside inner Project1 folder. I tried adding the folder like Project1/bin  but nothing was hapening and git stil notices changes.</p>

<p>Here is my file: </p>

<pre><code># built application files
*.apk
*.ap_

# files for the dex VM
*.dex

# Java class files
*.class

# generated files
bin
gen
extras

# Local configuration file (sdk path, etc)
local.properties

# Eclipse project files
.classpath
.project
project.properties

# Proguard folder generated by Eclipse
proguard/

# Intellij project files
*.iml
*.ipr
*.iws
.idea/
</code></pre>

<p>This is my first android github project so I am still learning. Please do not mind if my questions or  assumptions are wrong. Thank you!</p>
","4","1944352","",""
"19832721","1831404","2013-11-07 09:51:54","0","46","<git><gitignore>","command 'git add .' add the file I needn't when i created the gitignore file","<p>This is my .gitignore file content:  </p>

<pre><code># Executables

[0-1][1-5]/my*
</code></pre>

<p>my git dir is:</p>

<pre><code>    .
    |-- 01
    |   `-- more02.c
    |-- 02
    |   |-- cp01.c
    |   |-- tmp
    |   |-- tmp.cop
    |   |-- utmplib.h
    |   `-- who01.c
    |-- 03
    |   |-- ls01.c
    |   |-- ls02.c
    |   |-- myls
    |   |-- myls2
    |   `-- utility.h
    |-- 04
    |   |-- mypwd
    |   `-- spwd.c
    |-- 05
    |   |-- mystty
    |   `-- showtty.c
    |-- 06
    |   |-- myerror
    |   |-- myplayagain
    |   |-- myplayagain3
    |   |-- myplayagain5
    |   |-- mysignal
    |   |-- play_again3.c
    |   |-- play_again.c
    |   `-- signaldemo1.c
    |-- 07
    |   |-- hello2.c
    |   |-- hello3.c
    |   |-- myhello
    |   |-- myhello2
    |   |-- myticker1
    |   `-- ticker_demo1.c
    |-- LICENSE
    `-- README.md
</code></pre>

<p>I want exclude the file under dir [01] [02] ... start with my*, but when i use the command 
<code>git add .</code> , the file my* appears in the gitrepostory.</p>

<p>someone can tell me the reason?</p>
","1","1831404","",""
"38917837","2256006","2016-08-12 12:19:50","1","582","<git><gitignore>","How to ignore files which is already versioned by git?","<p>For example, when I run my java project in my local machine ,I want always comment some code which is used for user identification ,but of course, these local modification should never be commited and pushed to the remote. What can I do ? I know <strong>.gitignore</strong> file, but as I know , this can only be used for files <strong>which is not versioned by git</strong>.So any suggestions?</p>
","1","2256006","",""
"639647","77339","2009-03-12 17:28:22","17","9812","<asp.net-mvc><git><gitignore>","git and ASP MVC","<p>Anyone know of good articles for setting up a new project with <code>git</code> and <code>ASP.NET MVC</code>?</p>

<p>Just wondering what to include and <code>ignore</code> and what to do about deployment.</p>
","0","77339","0","0"
"57857027","773648","2019-09-09 15:28:46","0","34","<git><visual-studio-2017><gitignore>","Visual Studio 2017 won't exclude some .user, .pubxml, and .csproj files despite them being in .gitignore (or the .gitignore file itself)","<p>My .gitignore has entries for *.pubxml and *.user, as well as a specific project file that I don't want to see in the changes tab of Team explorer.  However, I'm still seeing .user files in two of the project folders, the .csproj file, and a .pubxml folder in the properties\publishprofiles folder of one of the projects.  Not sure why this is the case when other .user and .pubxml folders are removed.  Is there a way to force these to be removed?  Also the .gitignore file itself shows up and I have it listed as well.</p>

<p>Here is my .gitignore:</p>

<pre><code>################################################################################
# This .gitignore file was automatically created by Microsoft(R) Visual Studio.
################################################################################

## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

# User-specific files
*.rsuser
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Mono auto generated files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/

# Visual Studio 2015/2017 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
Generated\ Files/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUnit
*.VisualState.xml
TestResult.xml
nunit-*.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.pdb
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*_wpftmp.csproj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding add-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# NuGet Symbol Packages
*.snupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup &amp; report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- [Bb]ackup.rdl
*- [Bb]ackup ([0-9]).rdl
*- [Bb]ackup ([0-9][0-9]).rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# Ionide (cross platform F# VS Code tools) working folder
.ionide/

/.vs
/.gitignore
/Org/bin
/Org/obj
/packages
/Mycare.Analytics/bin
/Mycare.Analytics/obj
/Mycare.Core/bin
/Mycare.Core/obj
/Mycare.CoveredServices/bin
/Mycare.CoveredServices/obj
/Mycare.CscDirectory/bin
/Mycare.CscDirectory/obj
/Mycare.OrgLocator/bin
/Mycare.OrgLocator/obj
/Mycare.PlanFinder/bin
/Mycare.PlanFinder/obj
/Mycare.Repository/bin
/Mycare.Repository/obj
/Mycare.Repository/Mycare.Repository.csproj
/Mycare.SitecoreClient/bin
/Mycare.SitecoreClient/obj
/Mycare.MasterTDS/bin
/Mycare.MasterTDS/obj
/Website/bin
/Website/obj
/debug.log
/UpgradeLog.htm
/UpgradeLog2.htm
/Org/Properties/PublishProfiles/DevCMS.pubxml
</code></pre>
","4","773648","",""
"19981583","483112","2013-11-14 15:25:43","6","2942","<php><git><path><gitignore>","PHP filtering files and paths according .gitignore","<p>I want to use PHP to read all files and paths ignored by .gitignore configuration. Just like how git does.</p>

<p>It's possible to read directory repeatedly and use regular expression for each file to filter. But it`s so ineffective if the path have too much files.</p>

<p>Any good and most effective way to read target files and path ignored by .gitignore?</p>
","1","483112","0","0"
"19981419","2992617","2013-11-14 15:18:27","4","2203","<git><gitignore><git-stash>","git stash restores ignored files","<p>I committed in the past some wrong files to git. After that I excluded and ignored these files:</p>

<pre><code>git rm --cached -r config.php
git reset config.php
echo ""config.php"" &gt;&gt; .gitignore
git update-index --assume-unchanged config.php
</code></pre>

<p>Now git commit works great. Changes in config.php are not committed.</p>

<p>But: If I stash the working directory for example to switch the branch, than config.php is restored from the local repos.</p>

<p>How can I use <code>git stash</code> without changing ignored (and from index excluded) files?</p>
","2","2992617","",""
"39088698","5124520","2016-08-22 21:02:44","5","124","<git><gitignore>","How to I switch to a git branch that ignores files without deleting these files?","<p>I have branch <code>master</code> that ignores <code>.idea</code> in its <code>.gitignore</code>.
From that, I created branch <code>noIgnore</code> that has no <code>.gitignore</code>.</p>

<p>I found that <code>checkout master</code> deletes <code>.idea</code>.</p>

<p>That's not the behavior I want. I want to keep <code>.idea</code>, just not track it, not on <code>master</code>. How do I do that?</p>
","3","5124520","0","0"
"39089026","1312080","2016-08-22 21:29:15","0","1271","<svn><gitignore><svnignore>","Is svn:ignore fully equivalent to .gitignore?","<p>In <code>git</code> any user can modify <code>.gitignore</code>, list patterns to be ignored, and then actually commit the gitignore so that it is propagated to other users when they rebase.</p>

<p>I am just trying to find out whether the same functionality is available in <code>svn</code>. I am aware of <a href=""https://stackoverflow.com/questions/86049/how-do-i-ignore-files-in-subversion""><code>svn:ignore</code></a> but I am not sure if it does the same thing and <a href=""https://stackoverflow.com/questions/39087166/which-file-does-svnignore-modify"">in the same way</a> (by modifying an actual file that can be checked in) or just writes it in some local settings that can't be shared with the team.</p>

<p>My suspicion is that the ignore list in svn is administered on the repo level by the admin and can't be distributed by a regular user like it can in git using gitignore, which is more ""democratic"" for the lack of a better term.</p>
","0","1312080","",""
"58097225","8136667","2019-09-25 11:21:02","0","579","<git><gitignore>","git ignore some files but its not in .gitignore","<p>I have local git repository and there are a .gitignore and .gitattributes files in the directory.
my .svg files are being ignored by git but its not in the .gitignore file</p>

<p>this is my .gitignore file</p>

<pre><code># CakePHP specific files #
##########################
/config/app.php
/config/.env
/logs/*
/tmp/*
/vendor/*

# OS generated files #
######################
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
Icon?
ehthumbs.db
Thumbs.db

# Tool specific files #
#######################
# vim
*~
*.swp
*.swo
# sublime text &amp; textmate
*.sublime-*
*.stTheme.cache
*.tmlanguage.cache
*.tmPreferences.cache
# Eclipse
.settings/*
# JetBrains, aka PHPStorm, IntelliJ IDEA
.idea/*
# NetBeans
nbproject/*
# Visual Studio Code
.vscode
# Sass preprocessor
.sass-cache/
.phpstorm.meta.php/*
.github

</code></pre>

<p>i used this command to show me the ignoed files
<code>git status --ignored</code> 
and this is the result:</p>

<pre><code>.github/
.idea/
.phpstorm.meta.php/
codealike.json
config/app.php
logs/
plugins/AdminView/
plugins/MetronicAdminView/
plugins/SiteView/webroot.zip
tmp/
vendor/

</code></pre>

<p>the folder plugins is where the .svg files are</p>

<p>but when I used  <code>git check-ignore **/ -v</code> to see where I ignored this the folder plugin doesn't show at all</p>

<pre><code>.gitignore:5:/logs/*    logs/
.gitignore:6:/tmp/*     tmp/
.gitignore:7:/vendor/*  vendor/

</code></pre>

<p>how can I find where the problem is?</p>
","1","8136667","",""
"39288073","2519875","2016-09-02 08:45:32","0","236","<git><branch><gitignore>","git after the branches switch disappears files in .gitignore","<p>Let's say I have branches <code>1234</code> and <code>5678</code>. I have <strong>.gitignore</strong> with the 
<code>config/main.config.php</code> which is supposed to store this config file locally and not push merge pull it and so on anywhere, simply ignore it like it is doesn't exists.</p>

<p>In branch <code>1234</code> I see this <code>config/main.config.php</code>
but when I switch to the branch <code>5678</code>, this file disappears!</p>

<p>When I switch back to <code>1234</code>, this file appears again.</p>

<p><code>1234</code> is an old branch. <code>5678</code> is a new branch created from another branch (not <code>1234</code>).</p>

<p>I don't understand why this happens if <code>config/main.config.php</code> is in the <strong>.gitignore</strong> and not under version control.</p>

<p>this way it works only on the remote server, on my local PC file not disappear when i switch between branches
this file mentioned to be ignored in <strong>.gitignore</strong> on the both local and server.</p>
","8","2519875","",""
"58218550","3832111","2019-10-03 11:53:07","0","241","<git><gitignore>","Override subdirectory gitignore's ""must include"" rule with local .git/info/exclude","<p>Suppose I have the following git repository structure</p>

<pre><code>&gt; tree -a
.
├── .git
│   ├── info
│   │   └── exclude
└── a
    ├── .gitignore
    ├── mustinclude.txt
    └── my-local-file-to-ignore.txt
</code></pre>

<p>And the gitignore file says to always track txt files</p>

<pre><code>&gt; cat a/.gitignore
*
!*.txt
</code></pre>

<p>Is it possible to configure git so that it will ignore <code>a/my-local-file-to-ignore.txt</code> just for myself? The motivation for this is I want to include local scratch files (for testing or whatever) but I don't want other people using the repository to know about the existence of such a file.</p>

<p>I have tried putting that file in the info/exclude file but it doesn't work. I think this is because the gitignore file in a specifies to always include txt file.</p>

<pre><code>&gt; cat .git/info/exclude
a/my-local-file-to-ignore.txt
</code></pre>

<pre><code>&gt; git status
On branch master

No commits yet

Changes to be committed:
  (use ""git rm --cached &lt;file&gt;..."" to unstage)
    new file:   mustinclude.txt
    new file:   my-local-file-to-ignore.txt
</code></pre>
","2","3832111","",""
"39378357","4200910","2016-09-07 20:19:19","19","23150","<git><repository><gitignore><ignore>","gitignore, how to exclude a specific directory","<p>I'm trying to utilize a <code>.gitignore</code> file to exclude a specific directory, but I'm having some trouble. I looked up how to do this previously on a few forums, including stackoverflow, and while I found it a bit confusing, I had thought I understood it, but it seems to not be working as I thought.</p>

<p>So I have a repo here, and there's a specific directory in the top level called ""images"" that I want to exclude. Here's what I put in my <code>.gitignore</code> file:</p>

<pre><code>images/
</code></pre>

<p>I added and committed everything, all well and good, it ignored the images director in the top level. But then I realized it also ignored forums/images. So what's the deal? How do I handle ignoring a specific directory, but not any others with the same name?</p>
","0","4200910","0","0"
"58397860","1463355","2019-10-15 15:12:03","18","6729","<git><flutter><cocoapods><gitignore>","Should we add Podfile.lock to .gitignore in Flutter projects?","<p>Of course in normal Xcode projects, Podfile.lock should <em>always</em> be checked in to version control. However, Flutter's iOS runner app isn't a ""normal"" Xcode project (in the sense that it's managed by Flutter and rarely touched by developers).</p>

<p>Flutter uses Cocoapods and our team noticed that the Podfile.lock contains references to full paths on the developer's machine. However, this doens't cause any direct issues since, apparently, the Podfile.lock is regenerated every time you build/run the Flutter app and the full paths are changed to whatever the path is on your machine. Also, deleting Podfile.lock doesn't cause any harm because it's automatically generated anyway.</p>

<p>The thing is that it causes annoying merge conflicts in git that have to be resolved every single time. Since it's automatically generated, I wonder if in this case it's really necessary to check it into version control or if it's safe to just ignore the file in .gitignore.</p>

<p><a href=""https://github.com/flutter/flutter/issues/9299"" rel=""noreferrer"">There is more debate about this on Github</a>, however I can't seem to find a definitive answer there.</p>

<p>—edit—
For clarification: I know what Podfile.lock is for, I’m just not sure if my assumption that Flutter overrides it is correct.</p>
","0","1463355","0","0"
"20535867","3093381","2013-12-12 05:39:46","1","921","<wordpress><git><directory><gitignore>","Trying to set up a .gitignore file for Wordpress Installation","<p>I am trying to set up git for a Wordpress installation and am attempting to write a .gitignore file that will exclude EVERYTHING BUT my child theme folder. Here is what I have so far:</p>

<pre><code># Ignore everything in the root except the ""wp-content"" directory.
/*
!.gitignore
!wp-content/

# Ignore everything in the ""wp-content"" directory, except the ""plugins""
# and ""themes"" directories.
wp-content/*
!wp-content/plugins/
!wp-content/themes/

# Ignore everything in the ""plugins"" directory, except the plugins you
# specify (see the commented-out examples for hints on how to do this.)
wp-content/plugins/*
# !wp-content/plugins/my-single-file-plugin.php
# !wp-content/plugins/my-directory-plugin/

# Ignore everything in the ""themes"" directory, except the themes you
# specify (see the commented-out example for a hint on how to do this.)
wp-content/themes/*
!wp-content/themes/my-theme/
</code></pre>

<p>This is only showing the child theme folder itself, not the contents. I feel like this can't be right based on the documentation I've seen so far (<a href=""https://gist.github.com/jdbartlett/444295"" rel=""nofollow"">https://gist.github.com/jdbartlett/444295</a>). Any suggestions?</p>
","1","3093381","0","0"
"39592469","5241603","2016-09-20 11:07:02","1","96","<git><android-studio><gitignore><git-push>","How to undo git push without changing the local code?","<p>I confused to push all file codes include lib file which is in .gitignore in android studio. How can we undo git push file without changing the local code. I am afraid, my new local code is omitted if I reset Head.</p>

<p>I am very new with git. Please help and thank. </p>
","0","5241603","",""
"58553737","2806819","2019-10-25 07:02:45","2","871","<git><gitignore>",".gitignore - Ignore all files in target folder except 1 JAR file","<p>I have a maven project:</p>

<pre><code>...
target/
|__ my-application-1.0.0-standalone.jar
</code></pre>

<p>I would like to ignore everything in the target folder except for the JAR file that matches the pattern:</p>

<pre><code>my-application-&lt;version&gt;-standalone.jar
</code></pre>

<p>I need to include a specific pattern as above.</p>
","1","2806819","0","0"
"1818895","4991","2009-11-30 10:02:26","177","109847","<git><gitignore>","Keep ignored files out of git status","<p>I would like to stop Git from showing ignored files in <code>git status</code>, because having tons of documentation and config files in the list of <em>Changed but not updated</em> files, renders the list half-useless.</p>

<p>Is it normal for Git to show these files? </p>

<p>I put the ignore information in a <code>.gitignore</code> file in the root directory of the Git repository and they are not added when using <code>git add .</code> but it seems that they are not fully ignored either, as they show up in the aforementioned list and <strong>do not</strong> show up in the list printed by <code>git ls-files --others -i --exclude-standard</code>. Only files matched by the patterns in <code>~/.gitignore</code> show up there.</p>

<p>Could it be because at an earlier stage I didn't ignore them and they were thus committed at least once?</p>
","0","4991","0","0"
"58687362","7344314","2019-11-04 04:51:42","1","140","<git><gitignore>","commiting updated gitignore after failed commit","<p>I made some changes to the code, added, committed then pushed. This resulted in an error due to large files. Now I update .gitignore to track those large files. </p>

<p>How to push updated .gitignore only but leave out rest of the files that have been already commited??</p>

<p>Even after just adding and committing the updated gitignore file, when I push, it will push in the rest of the change sets that I have already previously committed but failed due to error.</p>
","2","7344314","0","0"
"1836742","29262","2009-12-02 23:55:23","184","97515","<git><gitignore>","Using git, how do I ignore a file in one branch but have it committed in another branch?","<p>I've got a project that I'm deploying to <a href=""http://heroku.com"" rel=""noreferrer"">Heroku</a>.  The source code tree includes a bunch of mp3 files (the website will be for a recording project I was heavily involved with). </p>

<p>I'd like to put the source code for it up on <a href=""http://github.com"" rel=""noreferrer"">GitHub</a>, but GitHub has a 300 MB limit on their free accounts.  I don't want to use 50 MB of my limit on a bunch of mp3 files.  Obviously, I could add them to the <code>.gitignore</code> file to keep them out of my repo.</p>

<p>However, I deploy to Heroku using <code>git push heroku</code>.  The mp3 files must be present in the branch I push to Heroku so that they get get deployed.</p>

<p>Ideally, I'd like to <code>.gitignore</code> the mp3 files in my local master branch so that when I push that to GitHub, the mp3s are not included.  Then I'd keep a local production branch that has the mp3s committed rather than ignored.  To deploy, I would merge master into production, and then push the production branch to Heroku.</p>

<p>I can't get this to work right.</p>

<p>Here's an example of what I'm trying to do...</p>

<pre><code>$ git init git-ignore-test
$ cd git-ignore-test
$ echo ""*.ignored"" &gt;&gt; .gitignore
$ git add .gitignore &amp;&amp; git commit -m ""Ignore .ignored files""
$ touch Foo.ignored
</code></pre>

<p>At this point, Foo.ignored is ignored in my master branch, but it's still present, so my project can use it.</p>

<pre><code>$ git checkout -b unignored
$ cat /dev/null &gt; .gitignore
$ git add Foo.ignored .gitignore &amp;&amp; git commit -m ""Unignore .ignored files""
</code></pre>

<p>Now I've got a branch with these files committed, as I want.  However, when I switch back to my master branch, Foo.ignored is gone.</p>

<p>Anyone got any suggestions for a better way to set this up?</p>

<p>Edit: just to clarify, I want the mp3 files to be present in both branches so that when I run the site locally (using either branch) the site works.  I just want the files ignored in one branch so when I push to GitHub they are not pushed as well.  Usually .gitignore works well for this kind of thing (i.e. keeping a local copy of a file that does not get included in a push to a remote), but when I switch to the branch with the files checked in, and then back to the branch with the files ignored, the files vanish.</p>
","9","29262","0","0"
"39900777","1942656","2016-10-06 16:04:54","1","355","<github><asp.net-core><gitignore>","restore.dg is not fitlered by .gitignore","<p>In my newest .NET Core ASP.MVC project I seem to be unable to ignore the restore.dg file. By default, the Visual Studio .gitignore file is set to ignore the whole .vs/ folder, in which the file is located. As this did not work, I tried several methods how to get rid of the file, yet unsuccessfully. </p>

<pre><code># Visual Studio 2015 cache/options directory
.vs/
restore.dg
*.dg
.vs/*
</code></pre>

<p>Could somebody help me?</p>
","0","1942656","",""
"39911851","1103561","2016-10-07 07:33:52","7","833","<git><gitignore>",".git/info/exclude replacement for git submodule?","<p>I'm having python script to download dependencies for my library (that is extracted as git <strong>repository</strong>) and it adds lines to <code>.git/info/exclude</code> for git repository. But when it's extracted as <strong>submodule</strong> no .git/info/exclude file exists and i still need to exclude some paths without adding them to '.gitignore'. Any change to do it?</p>

<pre><code>repo
├─.git
│ └─info
│   └─exclude
└─mylibrary (as_submodule)
  ├─extract_deps.py
  └─some_dep  (created by `extract_deps.py` and should be excluded) 
</code></pre>

<p>In the picture above i need to exclude <code>some_dep</code> from git changes.</p>

<p>Adding <code>mylibrary/some_dep</code> to <code>repo/.git/info/exclude</code> does not help since <code>git status</code> still shows that <code>mylibrary/some_dep</code> is added and untracked.</p>
","1","1103561","0","0"
"58820974","12116902","2019-11-12 14:44:26","0","1145","<git><dll><gitignore>","How to make gitignore to allow some files?","<p>I have a standard asp.net MVC git ignore file where it is instructed to ignore all dll files. But in my Project, I am referencing some third party dll's. Now how can I make the gitignore to allow only this dll's and ignore other dll's.</p>

<p>I have seen people adding ! before the file name to exclude. But this is not working for me. I don't know why?</p>

<p>Actual gitignore file:</p>

<pre><code>###################
# compiled source #
###################
*.com
*.class
*.dll
*.exe
*.pdb
*.dll.config
*.cache
*.suo
# Include dlls if they’re in the NuGet packages directory
!/packages/*/lib/*.dll
!/packages/*/lib/*/*.dll
# Include dlls if they're in the CommonReferences directory
!*CommonReferences/*.dll
####################
# VS Upgrade stuff #
####################
UpgradeLog.XML
_UpgradeReport_Files/
###############
# Directories #
###############
bin/
obj/
TestResults/
###################
# Web publish log #
###################
*.Publish.xml
#############
# Resharper #
#############
/_ReSharper.*
*.ReSharper.*
############
# Packages #
############
# it’s better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip
######################
# Logs and databases #
######################
*.log
*.sqlite
# OS generated files #
######################
.DS_Store?
ehthumbs.db
Icon?
Thumbs.db
[Bb]in
[Oo]bj
[Tt]est[Rr]esults
*.suo
*.user
*.[Cc]ache
*[Rr]esharper*
packages
NuGet.exe
_[Ss]cripts
*.exe
*.nupkg
*.ncrunchsolution
*.dot[Cc]over
/.vs
/Content
/Images
/Scripts
/Views
/favicon.ico
/Global.asax
/Web.config
</code></pre>

<p>At the end, I tried adding !bin/myLib.dll and !myLib.dll. This is not working.</p>

<p>Can somebody help me to solve this? so that I can included those dll files.</p>
","1","12116902","",""
"2209810","48659","2010-02-05 19:29:55","95","16768","<git><gitignore>","add #*# glob to .gitignore?","<p>I want to add emacs autosave files to my .gitignore with the glob <code>#*#</code> but of course, lines starting with a hash are comment lines.</p>

<p>How can I get this into my .gitignore without it being treated as a comment?</p>
","0","48659","0","0"
"21134692","1845894","2014-01-15 10:17:48","0","319","<git><gitignore>","How can I git unignore subfolders inside folder with some pattern name?","<p>How can I unignore every folder with name <code>config</code>? Recursively</p>

<p>For example I want to put my <code>/</code> under git. I put <code>*</code> in <code>.gitignore</code> to ignore everything. Now I want unignore folders and subfolders and subsubfolders... with name <code>config</code>. </p>

<p>Suppose I don't know full path to this <code>config</code> folders. I want something like: <code>!**/config/**</code>, but it doesn't work.</p>

<p>my <code>.gitignore</code>:</p>

<pre><code>*
!**/config/**
</code></pre>

<p>May be someone suggests another way to do it?</p>
","1","1845894","",""
"21212700","2193350","2014-01-19 03:02:35","0","562","<git><gitignore><git-rm>","'git rm -r --cached bin/' is not working","<p>When I type: </p>

<blockquote>
  <p>git rm -r --cached bin/ </p>
</blockquote>

<p>I get the following: </p>

<blockquote>
  <p>fatal: pathspec 'bin/' did not match any files</p>
</blockquote>

<p>The folder exists. I don't know why this is not working. I've found several answers that say this is the correct syntax.</p>
","3","2193350","",""
"59055542","12439464","2019-11-26 16:37:10","1","90","<gitignore>","Do I need .gitignore in nested subfolders for different projects?","<p>I have a nested project using Angular and Dotnet Web API - I have a gitignore on the root folder in which these two are contained. Do I need gitignores in each? Does gitignore include subfolders? I had some issues with bin and obj and so on but I tried resolving it and it didn't work well - Cleared cache and everything... But I guess it's cest la vie on that workload - but anyway will gitignore be needed in each project folder or can I just set one in the root folder?</p>
","2","12439464","0","0"
"59055847","10429169","2019-11-26 16:55:42","5","12908","<git><github><gitignore>","Ignoring .env files in my project with .gitignore","<p>I'm doing a project in JavaScript (React / Node) and I want to ignore every .env files in it,</p>

<p>I don't only have one .env file at the root of the project, because I have a folder for the front-end and another for the back-end,</p>

<pre><code>Root
  backend
    .env
  frontend
    .env
  .gitignore
</code></pre>

<p>And in the .gitignore file : </p>

<pre><code>/node_modules
/backend/node_modules
/frontend/node_modules
/backend/.env
/frontend/.env
</code></pre>

<p>node_modules folders are ignored but not the env files,</p>

<p>The gitignore file is at the root, but should I have a gitignore file in every folder ?...</p>
","1","10429169","",""
"40230842","3575850","2016-10-25 03:22:35","12","7610","<python><django><git><python-3.x><gitignore>","I cannot ignore pycache and db.sqlite on Django even though it refers them at .gitignore","<p>I'd like to ignore the changes of pycache and db.sqlite of Django project. I refer them at <code>.gitignore</code>,however git catches the variation of them. Could you tell me what is problem if you know it?
I attached my .gitignore at the end of sentence.</p>

<p><a href=""https://i.stack.imgur.com/0RRxe.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/0RRxe.png"" alt=""enter image description here""></a>
<strong>.gitignore</strong></p>

<pre><code># Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class
media/
settings.py

.idea/

# C extensions
*.so

# Distribution / packaging
.Python
env/
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*,cover
.hypothesis/

# Translations
*.mo
*.pot

# Django stuff:
*.log
local_settings.py

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# IPython Notebook
.ipynb_checkpoints

# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule

# dotenv
.env

# virtualenv
.venv/
venv/
ENV/

# Spyder project settings
.spyderproject

# Rope project settings
.ropeproject

# Database stuff
*.sqlite3
migrations/
db.sqlite3

# Atom config file
.editorconfig

# Other unwanted stuff
.idea
.DS_Store
.DS_STORE
</code></pre>
","2","3575850","0","0"
"59061945","12442101","2019-11-27 01:57:13","0","80","<windows><git><gitignore><git-bash><openssh>","Can I use .gitignore or .git/info/exclude to impede specific users from pulling/pushing files that are deemed ""restricted"" to them?","<p>I'm hosting a bare repository on Windows Server 2008 with Windows Git and OpenSSH. 
For legal reasons, I want some files to be inaccessible for a specific user but remain accessible to all other users. In other words, I want certain ""restricted"" files to be ignored (non-pullable) for a specific user. </p>

<p>Assume we have two users (Administrator and Guest) and a Git repository with 2 files : (a.txt and b.txt).</p>

<p>Assume ""b.txt"" is a restricted file that Guest should not have access to. </p>

<p><code>git clone guest@ipaddress:C:/path/to/repository.git</code> or 
<code>git pull guest@ipaddress:C:/path/to/repository.git</code></p>

<p>should clone or pull ""a.txt""</p>

<p><code>git clone administrator@ipaddress:C:/path/to/repository.git</code> or 
<code>git pull administrator@ipaddress:C:/path/to/repository.git</code></p>

<p>should clone or pull both files. </p>

<p>Is there a way to achieve this result with .gitignore or .git/info/exclude?</p>
","0","12442101","",""
"2330471","141229","2010-02-24 23:24:34","19","15768","<windows><git><msysgit><gitignore>",".gitignore does not understand my folder wildcard on windows","<p>I'm encountering a weird issue with <code>.gitignore</code> on Windows.  </p>

<p>I want git to ignore all <code>.exe</code> files, except those in the <code>Dependencies</code> folder (and all subfolders).</p>

<p>So I have:</p>

<p><code>.gitignore</code>:  </p>

<pre><code>*.exe
!/Dependencies/**/*.exe
</code></pre>

<p>This, unfortunately, does not work.  </p>

<p>Meanwhile, this does:</p>

<pre><code>*.exe
!/Dependencies/folder/subfolder/*.exe
</code></pre>

<p>So I'm wondering, am I messing something up, or is this some kind of bug?  </p>

<p>I'm running msysgit on Windows (Windows 7 x64) version 1.6.5.1-preview20091022</p>

<p>Thanks in advance for any input :)</p>
","1","141229","0","0"
"2415873","42636","2010-03-10 09:52:48","270","81445","<git><gitignore>","Exceptions in .gitignore","<p>How can I add an exception to .gitignore, like ""ignore all the .dll files <strong>BUT</strong> myfile.dll""?</p>
","0","42636","0","0"
"40319831","436560","2016-10-29 13:59:13","0","1667","<git><versioning><gitignore>","When is .gitignore applied?","<p>Let us suppose I want to make sure that there will be a folder called foo and a file inside it called bar. After I have made sure foo/bar exists I do not intend to version it, therefore I add it to .gitignore.</p>

<p>Bullet-proof approach:</p>

<ul>
<li>create foo</li>
<li>create foo/bar</li>
<li>commit</li>
<li>push</li>
<li>deploy</li>
<li>add foo to .gitignore</li>
<li>commit</li>
<li>push</li>
<li>deploy</li>
</ul>

<p>Shorter approach:</p>

<ul>
<li>create foo</li>
<li>create foo/bar</li>
<li>commit</li>
<li>add foo/bar to .gitignore</li>
<li>commit</li>
<li>push</li>
<li>deploy</li>
</ul>

<p>I wonder whether the shorter approach is guaranteed to create the folder, file and to ignore it. I have done a test and the result seemed to confirm my assumption that the shorter approach will add foo/bar at remote locations as well and then stop versioning it. Is this a rule applicable to all versions?</p>
","11","436560","",""
"21393416","48067","2014-01-27 22:54:03","0","305","<git><gitignore>","Why is git removing my scripts folder?","<p>I've just updated my .gitignore file to not include node and bower module files. </p>

<pre><code>node_modules/
.tmp
.sass-cache
sample/bower_components/
sample/node_modules/
sample/images/
</code></pre>

<p>But when I run <code>git clean -f</code>, my terminal responded with </p>

<pre><code>Removing sample/scripts
</code></pre>

<p>of course, the <code>sample/scripts</code> is the folder that I want to keep in the project, and I haven't specified it in the .gitignore, so why is it being removed??</p>
","3","48067","",""
"40409084","4009451","2016-11-03 18:46:23","0","1174","<git><gitignore>","gitignore not ignoring config files","<p>I have already read <a href=""https://stackoverflow.com/questions/4250063/how-to-gitignore-all-files-folder-in-a-folder-but-not-the-folder-itself"">this question</a> as well as <a href=""https://stackoverflow.com/questions/115983/how-can-i-add-an-empty-directory-to-a-git-repository"">this one</a> but they do not seem to be working for me.</p>

<p>I have a <code>git</code> project with the following directory structure:</p>

<pre><code>myapp/
    src/
    .gitignore
    build/
</code></pre>

<p>Where the <code>myapp/.gitignore</code> is:</p>

<pre><code>### gitignore ###
build/
</code></pre>

<p>I now need to add a top-level <code>config</code> directory, and would like to add config files to it for local development/testing purposes, but do not want them committed. I only want the (""empty"") <code>config</code> directory committed. So I read those two questions above and tried implementing their advice. Now my project looks like:</p>

<pre><code>myapp/
    src/
    .gitignore
    build/
    config/
        .gitignore
        test.json
</code></pre>

<p>Where <code>myapp/.gitignore</code> is:</p>

<pre><code>### gitignore ###
build/
!config/.gitignore
</code></pre>

<p>And where <code>config/.gitignore</code> is just:</p>

<pre><code>!.gitignore
</code></pre>

<p>However when I do a <code>git add . -n</code> (dry run) I see:</p>

<pre><code>add '.gitignore'
add 'config/.gitignore'
add 'config/test.json'
</code></pre>

<p>...so it looks like its going to try and add my <code>test.json</code> config file anyways. I just want it to add the config directory, so that the command would output:</p>

<pre><code>add '.gitignore'
add 'config/.gitignore'
</code></pre>

<p>Any ideas where I'm going awry (and why)?</p>
","0","4009451","",""
"2545602","124856","2010-03-30 13:37:25","702","722023","<git><directory><ignore><gitignore>","How to git ignore subfolders / subdirectories?","<p>I have a lot of projects in my <strong>.Net</strong> solution. I would like to exclude all &quot;bin/Debug&quot; and &quot;bin/Release&quot; folders (and their contents), but still include the &quot;bin&quot; folder itself and any dll's contained therein.</p>
<p><code>.gitignore</code> with &quot;bin/&quot; ignores &quot;<strong>Debug</strong>&quot; and &quot;<strong>Release</strong>&quot; folders, but also any dll's contained in the &quot;bin&quot; folder.</p>
<p><code>bin/Debug</code> or <code>bin/Release</code> in the <code>.gitignore</code> file does not exclude the directories unless I fully qualify the ignore pattern as <code>Solution/Project/bin/Debug</code> - which I don't want to do as I will need to include this full pattern for each project in my solution, as well as add it for any new projects added.</p>
<p>Any suggestions?</p>
","3","124856","0","0"
"59231510","497681","2019-12-08 00:35:49","1","231","<git><version-control><repository><gitignore><atlassian-sourcetree>","Making git stop tracking generated files","<p>I have files that are generated by a build that got committed to a repository. Since the generated files cause errant merge conflicts, I have added them to the .gitignore. </p>

<p>After adding them to the gitignore, I deleted them from both my working copy as well as the the remote branch (4 people working on a single branch) directly and manually.</p>

<p>I ran the following commands as well:</p>

<pre><code>git rm --cached assets/js/bundle.js
git rm --cached assets/sass/main.css
</code></pre>

<p>However, the files keep coming back any time I pull. I am working with people who are not knowledgeable in git and cannot control what they commit or how they merge.</p>

<p>I cannot pull until I manually delete the auto-generated files in my working copy since the two files keep coming back.</p>

<p>How can I make git stop tracking them forever? I don't understand why other dev's machines would keep bringing it back when I have already added it to the gitignore as well as completely removed it from the remote repository.</p>
","9","497681","0","0"
"681262","60072","2009-03-25 11:59:02","67","37119","<gitignore>","Difference in the paths in .gitignore file?","<p>I've been using git but still having confusion about the <em>.gitignore</em> file paths.</p>

<p>So, what is the difference between the following two paths in <em>.gitignore</em> file?</p>

<pre>
tmp/*
public/documents/**/*
</pre>

<p>I can understand that <code>tmp/*</code> will ignore all the files and folders inside it. Am I right?
But what does that second line path mean?</p>
","6","60072","0","0"
"19897125","453273","2013-11-11 00:37:38","0","206","<git><gitignore>","Make git commands not find parent repo in .gitignore'd directories","<p>How can I make git commands (e.g. <code>git status</code>) not operate on a repository if my working directory is ignored by that repository? For example:</p>

<ol>
<li><p>I run <code>git init</code> in ~ to create a repo to track dotfiles</p></li>
<li><p>I add a <code>.gitignore</code> file in ~, which looks like this:</p>

<pre><code>*
!.gitignore
!.bashrc
</code></pre>

<p>and I commit <code>.gitignore</code> and <code>.bashrc</code></p></li>
<li><p>I move to ~/src/test, which is not a git repository</p></li>
</ol>

<p>If I now run <code>git status</code>, the message I would like to see returned is</p>

<pre>
fatal: Not a git repository (or any of the parent directories): .git
</pre>

<p>Instead, I will see</p>

<pre>
# On branch master
nothing to commit (working directory clean)
</pre>

<p>because <code>git status</code> went up the directory tree and found the <code>.git</code> file in my home directory, even though I have ignored the working directory in that repo.</p>

<p>The only solution I see is to set the <code>GIT_DIR</code> for the repo in my home directory to something like .home.git, and then run all of my git commands for that repo as</p>

<pre><code>git --git-dir=~/.home.git --work-tree=~ &lt;command&gt;
</code></pre>

<p>I could alias that, but I feel like there is probably a better way to configure git to do this.</p>
","5","453273","",""
"767147","27328","2009-04-20 06:42:27","1027","411274","<git><version-control><dvcs><gitignore>","How can I stop .gitignore from appearing in the list of untracked files?","<p>I just did a <code>git init</code> on the root of my new project.</p>

<p>Then I created a <code>.gitignore</code> file.</p>

<p>Now, when I type <code>git status</code>, <strong>.gitignore</strong> file appears in the list of untracked files. Why is that?</p>
","9","27328","0","0"
"39102007","2291289","2016-08-23 13:02:03","0","1085","<git><gitignore>","Unable to ignore directory using gitignore","<p>Below is my directory structure.</p>

<pre><code>parent_directory
 |--.gitignore
 |--static/
 |   |--js/
 |   |   |--encoding.js
 |   |--css
 |       |--parent.css
 |--tools/
 |    |--static/
 |    |   |--js/
 |    |   |--css/
 |    |--templates/
</code></pre>

<p>I want to ignore <strong>outer</strong> static directory. I tries <code>static/**/</code> , <code>static/</code>, <code>static/**</code> but nothing is working. Whenever I edit <code>encoding.js</code> file it appears in tracked file list.  </p>

<p>Steps I followed - 
1. Edited the .gitignore file and added pattern [all three one at a time]<br>
2. Edited the file encoding.js<br>
3. checked git status. File appeared in tracked file zone. </p>

<p>How should I add the pattern so that any folder or file in <code>./static/</code> folder is not tracked.</p>

<p>Update 1: Added static in the .gitignore file. Still not working. See the attached image. [<strong>Solved</strong>]</p>

<p><a href=""https://i.stack.imgur.com/Vliqn.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Vliqn.png"" alt=""enter image description here""></a>
<a href=""https://i.stack.imgur.com/KywAy.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/KywAy.png"" alt=""enter image description here""></a></p>

<p>Update 2: adding static in .gitignore file ignores the /tools/static/ directory as well which is not suppose to happen. Just the outer static directory should be ignored.</p>

<p><a href=""https://i.stack.imgur.com/TXXbr.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/TXXbr.png"" alt=""enter image description here""></a></p>
","3","2291289","",""
"20105475","2052961","2013-11-20 19:45:06","2","6894","<ios><xcode><github><gitignore><cocoapods>","What can I add to my .gitignore so that I can prevent checking in pods on my github repo?","<p>I am looking to transition to checking in only the podfile in my Github repo instead of constantly checking in every single pod whenever I run a pod install. . right now my gitignore code CocoaPods looks like this looks like this </p>

<pre><code>    Pods/Pods-Acknowledgements.markdown
    Pods/Pods-Acknowledgements.plist
    Pods/resources-to-copy.txt
    Pods/resources-to-copy-*.txt
</code></pre>

<p>I am still getting a ton of xcconfig files from Cocoapods that are being checked in. help please?</p>
","0","2052961","0","0"
"58179913","6240439","2019-10-01 07:25:40","0","296","<git><gitignore>",".gitignore not ignoring files inside folder","<p>I have a folder named = <strong>Hackerrank</strong> inside there are some files I want to ignore into version control, So I add files into .gitignore file but changes are reflected into version control, .gitnore not working. I add <code>HackerRank/whiteBoard.py</code> to ignore file</p>

<p><strong>GitHub Directory</strong></p>

<p><a href=""https://i.stack.imgur.com/Jw1oQ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Jw1oQ.png"" alt=""enter image description here""></a> </p>

<p><strong>Changes are showing on source control</strong> </p>

<p><a href=""https://i.stack.imgur.com/b6cox.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/b6cox.png"" alt=""enter image description here""></a></p>
","1","6240439","",""
"39336726","6323465","2016-09-05 19:38:52","0","38","<git><merge><commit><gitignore>","Git issue. Master branch staging files from .gitignore","<p>So, I have a git repository version controlling a Laravel project. It has a master and a development branch currently. I did an initial commit to the master branch then started working in the development branch. </p>

<p>I use Sourcetree for my commits etc.</p>

<p>I realised I haven't got my most recent changes in my master branch however when I go to my master branch I see that it's trying to stage vendor and storage files etc. </p>

<p>How can I go about fixing this problem? I am quite a few commits behind the development branch.</p>
","2","6323465","",""
"39433387","5026435","2016-09-11 06:15:23","3","877","<wordpress><git><gitignore>","How to handle upload folder in git & wordpress devlopment workflow","<p>I am currently learning use git &amp; wordpress development workflow:</p>

<ol>
<li>develop the wp site locally in mamp enviroment;</li>
<li>push the local wp repo to the remote repo in my serve;</li>
<li>use git hook to automatically push the repo in my server to server site folder;</li>
</ol>

<p>but there is a problem in this workflow, if the user upload a file in my live site, the server repo could not push to the live server, as I have to stash those ""avatar files"" through ssh.</p>

<p>My need is to push my local site to remote server and every will be merger automatically.</p>

<p>How could I do that?</p>

<p>btw, this is my gitignore file :</p>

<pre><code>*.log
.htaccess
/local-config.php
/sql-dump-*.sql
/wp-content/cache/*
.DS_Store
/shared/content/uploads/wp-sync-db
/wp-content/advanced-cache.php
/wp-content/wp-cache-config.php
/wp-content/backup-db/
/wp-content/backups/
/wp-content/upgrade/
/wp-content/cache/
sitemap.xml
sitemap.xml.gz
Thumbs.db
[http] 
    postBuffer = 524288000
</code></pre>

<p>sorry about my English, hope I make things clear... </p>
","2","5026435","0","0"
"39439493","1238353","2016-09-11 18:49:09","0","1136","<eclipse><git><gitignore>","Unable ignore the eclipse setting in gitignore","<pre><code>I am using 
</code></pre>

<p><code>/*/.settings/*</code></p>

<p>OR<br>
 <code>/*/.settings/</code></p>

<p>to ignore eclipse setting.</p>

<blockquote>
  <p>abc.host.client/.settings/org.eclipse.jdt.core.prefs</p>
</blockquote>

<pre><code>but unable to ignore the following files.
</code></pre>

<blockquote>
  <p><code>abc.host.client/.settings/org.eclipse.wst.common.project.facet.core.xml</code></p>
  
  <p><code>abc.host.client/.settings/org.eclipse.wst.common.component</code></p>
</blockquote>

<p>I am using git version <strong>1.7.1</strong>. May I know what is the problem?Thank You.</p>
","3","1238353","",""
"20495455","2945881","2013-12-10 13:09:09","2","639","<gitignore><microsoft-fakes>","What should be my gitignore with Microsoft Fakes?","<p>I'm using Microsoft Fakes and Git.  There are files in FakesAssemblies which change all the time (.fakes.dll, .fakesconfig, .messages, .xml).  Which of these can I exclude in my gitignore.  If I exlude everything, my build server blows up saying it can't find the files. </p>
","1","2945881","0","0"
"39545550","2160616","2016-09-17 10:10:24","2","221","<git><bitbucket><gitignore>","Want to track a file / folder which was earlier ignored by .gitignore","<p>I have a folder <code>public/lib</code> which was ignored by GIT as i added following to <code>.gitignore</code> file :</p>

<pre><code>public/lib
</code></pre>

<p>I made initial committ &amp; pushed changes into remote repository. Later realized i need to commit one folder in <code>public/lib</code> called <code>templates</code>. Then found this approach for <strong><a href=""https://stackoverflow.com/questions/987142/make-gitignore-ignore-everything-except-a-few-files"">Make .gitignore ignore everything except a few files</a></strong></p>

<p>Changed my <code>.gitignore</code> file to :</p>

<pre><code>public/lib
!public/lib/template/**/*
</code></pre>

<p>This is not helping me. I dont see <code>template</code> folder considered by GIT on next <code>git status</code>. </p>

<p>I am new to Git.</p>
","4","2160616","",""
"39610577","5418514","2016-09-21 07:53:22","1","3014","<git><gitignore>","How do I reset .gitignore","<p>I have copied a previous project that has git allready in it. I have removed .git and .gitignore folders. Then reïnitialized git and generated a .gitignore file. Which is completely empty.</p>

<p>But somehow the files ignored in the previous project still remain ignored in this new project...</p>

<p>so when I run the command</p>

<pre><code>git clean -xdn
</code></pre>

<p>there are files shown...
And my .gitignore file is completely empty. Why is this happening?</p>

<p>How can I reset any .gitignore stuff and start over again with a blank sheet?</p>
","3","5418514","",""
"58521631","8263154","2019-10-23 11:16:36","0","189","<linux><git><gitignore>","How to add file to .gitignore with \n in the filename","<p>I just want to add file with <code>file
name</code> (file name contains \n) to .gitignore.</p>

<p>I try:</p>

<pre><code>/file
name

/file\nname

file\
name
</code></pre>

<p>but have no luck.</p>
","1","8263154","0","0"
"20677103","2250406","2013-12-19 08:53:04","1","2914","<git><nested><gitignore>","Nested git repository inherits ignore files from parent git repository. Can this be disabled?","<p>I'm working on a linux system with nested git repositories. My file/directory structure is as follows:</p>

<pre><code>~/
    .git/
    .gitignore
    file1
    project/
        .git/
        file2
        file3
</code></pre>

<p>In my homedir I have created a repo for my linux config files. The ignore file (~/.gitignore) contains only '*' (exclude everything). I have added files with 'git add -f file'. In a nested repo (project) I have discovered that everything is excluded as well even though the correct '(~/project/).git' directory is updated on commit. I have checked this with the following command:</p>

<pre><code>&gt; cd ~/project
&gt; git add file2 
    The following paths are ignored by one of your .gitignore files:
    file2
    Use -f if you really want to add them.
    fatal: no files added

&gt; git check-ignore -v file2
    ~/.gitignore:1:* file2
</code></pre>

<p>The command check-ignore is available as of version 1.8.2 and was motivated by the stackoverflow question: <a href=""https://stackoverflow.com/questions/12144633/which-gitignore-rule-is-ignoring-my-file"">which gitignore rule is ignoring my file</a>.</p>

<p>My question is if there is a way to change the behaviour git regarding ignore files to only process the ignorefiles encountered until the repo is found that git commits to, e.g., stop processing ignorefiles higher up in the directory structure than the first '.git' folder is found (in this case ~/project/.git).</p>

<p>Thank you!</p>
","1","2250406","0","0"
"39728683","3084511","2016-09-27 15:30:19","1","230","<javascript><git><visual-studio-code><gitignore>","Share gitignored files across team","<p>I recently added typings files to my project so that I get intellisense in VS Code for libraries such as Angular, D3, Underscore, etc.</p>

<p>So my changes in this branch were adding a <code>typings/</code> folder with relevant typings files, adding <code>typings.json</code>, and adding <code>jsconfig.json</code>. I also added each of these to my <code>.gitignore</code>. So my diff only shows the <code>.gitignore</code> changes. If I merge this into remote master, when other team members pull it down will they have the <code>typings</code> folder, <code>typings.json</code>, and <code>jsconfig.json</code>. I want them to have access to this so they also get intellisense if using VS Code, but I'm not sure if I'm approaching this correctly.</p>
","3","3084511","",""
"1677121","165119","2009-11-04 22:30:03","132","133479","<git><gitignore><ignore>","Is there an ignore command for git like there is for svn?","<p>I am a new user to <code>git</code> and I am starting a new project. I have a bunch of dot files that I would like to ignore. Is there an ignore command for <code>git</code> like there is for <code>svn</code>?</p>
","1","165119","0","0"
"1753070","66475","2009-11-18 01:36:47","1781","629630","<git><ignore><gitignore>","How do I configure git to ignore some files locally?","<p>Can I ignore files locally without polluting the global git config for everyone else? I have untracked files that are spam in my git status but I don't want to commit git config changes for every single little random untracked file I have in my local branches.</p>
","0","66475","0","0"
"58627619","6303273","2019-10-30 14:28:29","4","3857","<android><git><github><gitlab><gitignore>",".gitignore does not apply to the .cxx folder","<p>I have this .gitignore file in my android project but does not apply to the .cxx folder.
I tested everything but failed.</p>

<pre><code>.cxx
app/.cxx
app/.cxx/
</code></pre>

<p><a href=""https://i.stack.imgur.com/GD7Kc.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/GD7Kc.png"" alt=""Android Studio""></a></p>

<p><a href=""https://i.stack.imgur.com/eLIZL.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/eLIZL.png"" alt=""enter image description here""></a></p>

<p>We had trouble working with my colleagues on this project as they changed .cxx files each time the project was build.</p>

<p>How can i fix this problem ?</p>
","1","6303273","",""
"58700221","6610176","2019-11-04 19:56:27","1","327","<git><maven><parent-child><gitignore><git-bash>","How to add a maven child module to .gitignore","<p>I'm trying to set up a script to automatically rebase changes from the development branch to branches containing Maven child modules.  </p>

<p>The way this project is setup is that the development branch contains the parent module.  All changes go to that module and so are merged to the development branch.  In order for the child modules to get these chagnes, the must be rebased onto development.  The child modules themselves should never be modified in a rebase.</p>

<p>When I try to use my script to rebase the child branch onto development, I get a conflict stating that the child module has been deleted on the development branch.  This makes sense, as that module does not exist in development.  I need the rebase to ignore anything to do with the child module, so I added this line to .gitignore in the project:</p>

<pre><code>*_module/
</code></pre>

<p>The naming convention of each child module has '_module' at the end, so with *, then each branch should be able to ignore the child module in question, regardless of name.  However, this has not worked.  I've yet to find anything regarding this use case, and am wondering if anyone else has any advise on how to proceed.</p>

<p>Here is the general file structure of the development branch:</p>

<pre><code>project+
       |
       +-src+ #parent module
       |    |
       |    +-main #where changes to the code occure
       |
       +.gitattributes
       |
       +.gitignore
       |
       +pom.xml
</code></pre>

<p>And here is the structure of a branch with a child module:</p>

<pre><code>project+
       |
       +-test1_module+ #child module in maven.  Need to ignore this in .gitignore, or some equivalent
       |             |
       |             +-src+ 
       |                  |
       |                  +-assembly
       |                  |
       |                  +-main
       |
       +-src+ #parent module
       |    |
       |    +-assembly
       |    |
       |    +-main 
       |
       +.gitattributes
       |
       +.gitignore
       |
       +pom.xml
</code></pre>

<p>EDIT:
To be clear, I do not want to delete this child module from the git repository; I simply want to ignore or skip over any changes to it during a rebase.</p>
","0","6610176","0","0"
"58704123","1926027","2019-11-05 03:37:00","5","1671","<node.js><gitignore><node-red>","Recommended .gitignore for Node-RED","<p>Is there a standard or recommended .gitignore file to use with Node-RED projects? Or are there files or folders that should be ignored? For example, should files like <em>.config.json</em> or <em>flow_cred.json</em> be ignored?</p>

<p>At present I'm using the Node template generated by <a href=""https://gitignore.io"" rel=""noreferrer"">gitignore.io</a> (see below), but this doesn't contain anything specific to Node-RED.</p>

<p>I found these github projects with .gitignore files:</p>

<ul>
<li><a href=""https://github.com/dceejay/node-red-project-starter/blob/master/.gitignore"" rel=""noreferrer"">https://github.com/dceejay/node-red-project-starter/blob/master/.gitignore</a>  </li>
<li><a href=""https://github.com/natcl/node-red-project-template/blob/master/.gitignore"" rel=""noreferrer"">https://github.com/natcl/node-red-project-template/blob/master/.gitignore</a>  </li>
<li><a href=""https://github.com/natcl/electron-node-red/blob/master/.gitignore"" rel=""noreferrer"">https://github.com/natcl/electron-node-red/blob/master/.gitignore</a></li>
</ul>

<p>But I'm unsure if these are generic to any Node-RED project.</p>

<p>The Node .gitignore file:</p>

<pre><code># Created by https://www.gitignore.io/api/node
# Edit at https://www.gitignore.io/?templates=node

### Node ###
# Logs
logs
*.log
npm-debug.log*
yarn-debug.log*
yarn-error.log*
lerna-debug.log*

# Diagnostic reports (https://nodejs.org/api/report.html)
report.[0-9]*.[0-9]*.[0-9]*.[0-9]*.json

# Runtime data
pids
*.pid
*.seed
*.pid.lock

# Directory for instrumented libs generated by jscoverage/JSCover
lib-cov

# Coverage directory used by tools like istanbul
coverage
*.lcov

# nyc test coverage
.nyc_output

# Grunt intermediate storage (https://gruntjs.com/creating-plugins#storing-task-files)
.grunt

# Bower dependency directory (https://bower.io/)
bower_components

# node-waf configuration
.lock-wscript

# Compiled binary addons (https://nodejs.org/api/addons.html)
build/Release

# Dependency directories
node_modules/
jspm_packages/

# TypeScript v1 declaration files
typings/

# TypeScript cache
*.tsbuildinfo

# Optional npm cache directory
.npm

# Optional eslint cache
.eslintcache

# Optional REPL history
.node_repl_history

# Output of 'npm pack'
*.tgz

# Yarn Integrity file
.yarn-integrity

# dotenv environment variables file
.env
.env.test

# parcel-bundler cache (https://parceljs.org/)
.cache

# next.js build output
.next

# nuxt.js build output
.nuxt

# react / gatsby 
public/

# vuepress build output
.vuepress/dist

# Serverless directories
.serverless/

# FuseBox cache
.fusebox/

# DynamoDB Local files
.dynamodb/

# End of https://www.gitignore.io/api/node
</code></pre>
","0","1926027","0","0"
"20839642","856324","2013-12-30 12:31:32","2","644","<git><github><bitbucket><gitignore>","Git Including an arbitrarily nested subfolder when its parent has been excluded in .gitignore","<p>I'm excluding a folder a and its subfolders, but want to have a specific subfolder b included, where b can be a subfolder somewhere below a, and the exact path to b has not been specified.</p>

<p>My <code>.gitignore</code> contains these lines:</p>

<pre><code>a/**
!a/**/b
</code></pre>

<p>however this does not work. Have tried numerous other permutations of the above, including from other posts on stack overflow, but nothing appears to work.</p>

<p>The previous question on stackoverflow deals with the situation where you can explicitly declare the path to the subdirectory. In this question, the situation I'm addressing is where <code>b</code> can be any subfolder underneath <code>a</code>, and not a predetermined path.</p>

<p>Further the earlier solution requires you to ""unignore"" every parent directory of anything that you want to ""unignore"". However in this case I'm trying to create a generic rule that allows this subdirectory without bothering about where it is in the directory tree. So the earlier solution does not work/apply in this situation.</p>
","6","856324","0","0"
"20840866","1253826","2013-12-30 13:49:44","14","2243","<git><gitignore>","How can I untrack files in Git according to my .gitignore file?","<p>I have tracked many many files early, but I don't want Git to track them any more from now on. </p>

<p>Can I untrack those files according to a <code>.gitignore</code> file?</p>

<p>There are too many files and they are separated in many different directories, so it is not practical to remove them one-by-one, instead, I hope they can be untracked according to patterns in a <code>.gitignore</code> file.</p>
","1","1253826","0","0"
"20974914","1708058","2014-01-07 15:01:17","3","1365","<git><gitignore>",".gitignore Doesn't Seem To Work","<p>My .gitignore:</p>

<pre><code>.DS_Store
/.idea
/.idea_modules
/out
/project
/target
/*.iml
*/resolution-cache/*
*/streams/*
*/target/*
</code></pre>

<p>But nonetheless, the folders <code>.idea</code>, <code>.idea_modules</code> and <code>target</code> have appeared in a repo and are still there. </p>

<p>Your ideas?</p>
","1","1708058","",""
"2143956","141229","2010-01-27 01:24:14","1284","588345","<git><visual-studio><visual-studio-2012><gitignore>",".gitignore for Visual Studio Projects and Solutions","<p>Which files should I include in <code>.gitignore</code> when using <strong>Git</strong> in conjunction with <strong>Visual Studio</strong> Solutions (<code>.sln</code>) and Projects?</p>
","7","141229","0","0"
"40158716","1011591","2016-10-20 15:32:21","1","175","<git><github><gitignore><git-add>","Broke my local git repo","<p>For whatever reason my .gitignore is failing to ignore my <code>node_modules</code> directory. When I do a <code>git status</code> it's returning a bunch of deleted and modified files that are under a directory it's supposed to ignore, and it's not picking up files I've added since the last commit. </p>

<p>What am I doing wrong?</p>

<p>The repo is <a href=""https://github.com/gh0st/ng2do-mean-app-arvindr21"" rel=""nofollow"">here</a>.</p>

<p>My <code>.gitignore</code> is here:</p>

<pre><code>node_modules
.idea

# compiled output
/public/vendor/my-app/dist
/public/vendor/my-app/tmp

# dependencies
bower_components

# IDEs and editors
/.idea

# misc
/public/vendor/my-app/.sass-cache
/public/vendor/my-app/connect.lock
/public/vendor/my-app/coverage/*
/public/vendor/my-app/lib/peerconnection.log
/public/vendor/my-app/npm-debug.log
/public/vendor/my-app/testem.log
/public/vendor/my-app/typings

# e2e
/public/vendor/my-app/e2e/*.js
/public/vendor/my-app/e2e/*.map

#System Files
.DS_Store
</code></pre>

<p>Is there anything else I can paste that would be of help?</p>
","13","1011591","",""
"40164234","3453898","2016-10-20 20:46:56","1","1350","<git><macos><gitignore>","Which global gitignore am I using?","<p>I am new to git.  Some time ago, I have set it up on my MacBook Pro and havent used it for months.  Now I wonder how can I figure out following:</p>

<ol>
<li><p>Did I set already global gitignore and how to find out where it is located on my MacBookPro?</p></li>
<li><p>Did I set multiple global gitignore files and how to find where they are on my system?</p></li>
<li><p>If I have multiple global gitignore files, which one I is set to be used by git currently?</p></li>
</ol>

<p>Please, provide best explanation, I am new to both MacBook terminal and git.
Thanks</p>
","0","3453898","",""
"2347335","28298","2010-02-27 12:42:51","168","165831","<.net><git><gitignore>","How could I ignore bin and obj folders from git repository?","<p>I want to ignore bin and obj folders from my git repository. As I've found out, there is no easy way to do this in .gitignore. So, are there any other way? Using clean solution in Visual Studio?</p>
","4","28298","0","0"
"40250937","6191068","2016-10-25 22:44:37","2","1575","<python><flask><travis-ci><gitignore>","How to use Travis CI with some files in gitignore?","<p>I have a Flask app that has its configurations in a file called settings.py. I've put this file in .gitignore because the project is in a public repo. Travis-CI was working before I added tests into my project even though settings.py was in .gitignore. After adding tests to the project, the build started failing with the following output:</p>

<pre><code>Debugged import:

- 'settings' not found.

Original exception:

ImportError: No module named 'settings'
</code></pre>

<p>My .travis.yml file looks like this:</p>

<pre><code>language: python
python:
  - ""3.4""
  - ""3.5""

# command to install dependencies
install:
  - pip install -r requirements.txt
# command to run tests
script: python tests.py 
</code></pre>

<p>Does this mean that in order to use travis-ci, we have to include all necessary files in the repo? Or is there a workaround? The repo on GitHub can be found <a href=""https://github.com/mikaelm1/blind-chat-api"" rel=""nofollow"">here</a>.</p>
","1","6191068","",""
"40251814","3032227","2016-10-26 00:26:26","1","961","<xcode><gitignore>",".gitignore for xcworkspace, not just xcodeproj?","<p>I have a .gitignore file in MyProject.xcodeproj which ignores the xcuserdata, but the directory is not ignored in my MyProject.xcworkspace and I can't figure out how to do it there? Any suggestions?</p>
","4","3032227","0","0"
"2455752","104815","2010-03-16 15:38:24","1","588","<git><gitignore>","Git - git add in a gitignore directory","<p>If my .gitignore file has tmp\ in it and I do a git add file.test from tmp, Git adds file.test to the repository.  If file.test never changes, than this is as good as a one time add to the repository, right? Say for static files that I want to be in version control.  You want the file in an initial clone and that's it.  </p>

<p>I assume file.test doesn't get tracked, so if there are updates, Git doesn't see it as modified?</p>
","1","104815","",""
"2456533","259662","2010-03-16 17:12:50","27","4584","<git><github><heroku><gitignore>","Is there a way to setup remote-specific .gitignores?","<p>Is there a simple way to setup different .gitignore files for different remotes?  I have a repository I push up to both Heroku and Github.  I need database.yml for Heroku, but don't want some of the information to be pushed up to Github.  So I need a different .gitignore file for each of the remotes.  </p>

<p>I tried having two separate branches, one that ignores database.yml, and one that doesn't.  The problem is that when I checkout the heroku branch and go back into my github branch, the entire database.yml file is gone.  </p>

<p>Any tips?</p>
","1","259662","0","0"
"40422681","3754246","2016-11-04 12:28:19","1","653","<git><gitignore>","Why does ""git add *"" excludes .gitignore?","<p>I've got .gitignore file with names of excluded files. When I delete .git folder and do <code>git init</code>, after <code>git add *</code> I would expect all files to be added that are not ignored by .gitignore. However, .gitignore shows as untracked file in <code>git status</code> and I have to manually add it with <code>git add .gitignore</code> even if I include <code>!.gitignore</code> in .gitignore.</p>
","2","3754246","",""
"2586097","310167","2010-04-06 15:29:08","96","58985","<git><netbeans><gitignore>","what should be in .gitignore file for a netbeans java project?","<p>What should be the content of the .gitignore file for a java project in netbeans?</p>
","3","310167","0","0"
"2815553","338859","2010-05-12 01:14:08","29","14915","<git><qt><qt-creator><gitignore>","What .gitignore I should use with QT projects? (QT Creator)","<p>So, after little thinking I have wrote the following:</p>

<pre>
# In repository we don't need to have:
# Compiled object files
*.o

# Generated MOC, resource and UI files
moc_*.cpp
qrc_*.cpp
ui_*.h

# Debug and Release directories (created under Windows, not Linux)
Debug/
Release/

# .log files (usually created by QtTest - thanks to VestniK)
*.log

# Built windows .exe and linux binaries
# NOTE: PROJECT is a your project's name, analog of PROJECT.exe in Linux
*.exe
*.dll
PROJECT

# Windows-specific files
Thumbs.db
desktop.ini
# Mac-specific things (thanks to Michael Aaron Safyan)
.DS_Store

# Editors temporary files 
*~
</pre>

<p>Please ask, what needs to be added or fixed (especially for Windows - I haven't one under hand now. And Mac too [haven't work in it at all]).</p>

<p>I want to keep my repository clear :-)</p>

<p>UPD: Should I include <code>Makefile</code> and <code>Makefile.*</code> in it? <code>*.pro.user</code>?</p>
","1","338859","0","0"
"12244827","378170","2012-09-03 09:00:33","1","109","<git><gitignore>","What is the difference between /* and / and the very end of a path on .gitignore?","<p>On some .gitignore files we may see:</p>

<pre><code>somedirectory/*
</code></pre>

<p>or </p>

<pre><code>somedirectory/
</code></pre>

<p>Does this means the first will match recursively while the second one, only that directory ?</p>
","0","378170","0","0"
"39111256","6491337","2016-08-23 21:52:24","0","447","<swift><amazon-web-services><gitignore>","Keeping AWS keys out of github","<p>I know I should put the file containing secret AWS keys in a .gitignore, but then the user on github is forced to reconstruct my constants code containing AWS keys ( a swift struct with static let's).  Is there something that would let me substitute a different file when I push? Is there a better way to do this?</p>

<p><strong>Clarification:</strong> I am not concerned with sharing AWS keys with other developers.  In my situation each developer is independent and can use their own AWS keys.  </p>

<p>What I am trying to accomplish is to have a local single development environment where I can develop and test a swift app on Xcode (without changing the keys every time I commit), and yet still be able to push to public GITHUB.</p>

<p>When someone clones the repository, I want them to be able to build after only updating the dummy key values, but I don't ever want my secret keys to be available in any way on GITHUB</p>
","2","6491337","",""
"47755938","265521","2017-12-11 15:16:03","5","3526","<git><gitignore>","Git ignoring .gitignore file in parent directory","<p>I have a structure like this:</p>

<pre><code>projects/
    .gitignore
    foo/
        some_file
    bar/
        another_file
</code></pre>

<p><code>foo</code>, <code>bar</code>, <em>and</em> <code>projects</code> are git projects. In <code>.gitignore</code> I have <code>*</code> (actually I tried loads of things), however when I run <code>git status</code> inside <code>projects/foo</code> it still tells me to add <code>some_file</code>. If I'm reading the <code>.gitignore</code> documentation correctly it says Git should look in all parent folders for <code>.gitignore</code> files and use those. However it seems to totally ignore the one in <code>.gitignore</code>. What is going on here?</p>

<p>I've tried <code>git check-ignore</code> and it just behaves as if the <code>.gitignore</code> did not exist.</p>

<p>To reproduce:</p>

<pre><code>/ $ cd /tmp
/tmp $ mkdir projects
/tmp $ cd projects
/tmp/projects $ echo ""*"" &gt; .gitignore
/tmp/projects $ git init
Initialized empty Git repository in /private/tmp/projects/.git/
/tmp/projects $ mkdir foo
/tmp/projects $ cd foo
/tmp/projects/foo $ git init
Initialized empty Git repository in /private/tmp/projects/foo/.git/
/tmp/projects/foo $ touch some_file
/tmp/projects/foo $ git status
On branch master

Initial commit

Untracked files:
  (use ""git add &lt;file&gt;..."" to include in what will be committed)

    some_file

nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>
","2","265521","0","0"
"39144312","3425913","2016-08-25 11:40:18","0","668","<ruby-on-rails><git><github><amazon-elastic-beanstalk><gitignore>","AWS Elastic Beanstalk and Github with same .gitignore","<p>I m using github for hosting my code and AWS Elastic Beanstalk to deploy my project. There is no any relation between them while deploying.</p>

<p>So I have too big compiled bundle.js files. Its automatically compiles in any code changes. Because of that we are getting too many conflicts with my team.</p>

<p>I have disabled them from .gitignore but when I deployed with: <code>eb deploy</code> ElasticBeanstalk doesn't track the bunle.js files as well.</p>

<p>So I'd like to ignore my files only for github but they should be tracked from eb when I use <code>eb deploy</code>.</p>

<p>Is there any solution for this case.</p>
","0","3425913","",""
"29919252","","2015-04-28 12:16:30","3","1772","<git><gitignore>",".gitignore: track a single file in an ignored directory","<p>I am trying to add a single non-tracked file to a repo within a directory that is in a <code>.gitignore</code>.</p>

<p>I am using the following:</p>

<pre><code>parent/child/*
parent/child/child-02/*
!parent/child/child-02/file.txt
</code></pre>

<p>This usually works on a first-child directory but not in the format above.  What Am I missing?</p>
","0","","",""
"39178676","5509531","2016-08-27 07:36:44","4","295","<git><gitignore>","Make Git rebuild history using the current .gitignore","<p>I did not use .gitignore to ignore files such as compiled binaries in my project, so these compiled binaries have been committed into the Git repository. And now I add .gitignore to my project. I want to rebuild the whole Git repo ignoring the files listed in .gitignore without losing any history. How can I do that?</p>
","2","5509531","0","0"
"29928669","1251684","2015-04-28 19:54:36","3","788","<git><gitignore>","Valid global .gitignore steps won't take effect on Mac OS","<p>I'm trying to set-up global gitignore file on Mac OS but for some reason it doesn't take effect. When I repeat same steps on Linux OS then all go fine. Steps below what I do. Could anyone point out what I'm missing please?</p>

<p>Note: I committed .idea files before so would this be related to it? Just in case I tried adding <code>.idea</code> and <code>.idea/*</code> as well.</p>

<p><strong>STEPS</strong></p>

<pre><code>MacBook-Pro:~ bc$ echo $HOME
/Users/bc
MacBook-Pro:~ bc$ git config --get core.excludesfile
/Users/bc/.gitignore_global
MacBook-Pro:~ bc$ cat .gitignore_global
*~
.DS_Store
.idea/
MacBook-Pro:~ bc$ git config --global core.excludesfile /Users/bc/.gitignore_global
</code></pre>

<p><strong>PROJECT</strong></p>

<pre><code>MacBook-Pro:Project bc$ git branch
* develop
  master
MacBook-Pro:Project bc$ git status
On branch develop
Changes not staged for commit:
  (use ""git add &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

    modified:   .idea/workspace.xml

no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>
","0","1251684","",""
"12296261","378170","2012-09-06 08:47:14","0","204","<git><gitignore>","How to a add a file when a .gitignore is already present on that folder?","<p>As I've been told, git doesn't recognize folders <em>de per se</em>.
In order to have the folder to be on the repo, but not the files inside we did create a .gitignore file inside that folder with the following inside:</p>

<pre><code># Ignore everything in this directory
*
# Except this file
!.gitignore
</code></pre>

<p>It happens however that, inside that directory, we now need to add a new file that SHOULD be tracked by the git.</p>

<p>How can we proceed ?</p>

<p>Should we, do the steps on the following order ?</p>

<ol>
<li><p>Change to:</p>

<pre><code># Ignore everything in this directory
*
# Except this file
!.gitignore
!mynewfile.php
</code></pre></li>
<li><p><code>git add mynewfile.php</code></p></li>
<li><p><code>git commit -a -m ""added new file inside specific folder""</code></p></li>
<li><p><code>git push</code> (so that my remote hub knows about this and syncs with master so that all stay equal).</p></li>
</ol>

<p>Or, should we proceed differently ?</p>
","0","378170","0","0"
"58190463","8550691","2019-10-01 18:33:10","2","6513","<xcode><git><gitignore>","What to add to a .gitignore for an Xcode project","<p>I have just started a collaborative Xcode project and am running into issues with my collaborators having unintentional changes in their projects. What should I add to my .gitignore for a project like this? I have seen issues with <code>.xcuserdata</code> just to give an example.</p>
","0","8550691","",""
"66408195","13606345","2021-02-28 10:47:22","0","100","<java><gitignore>","there are two gitignore files by default and they are not working","<p>I don't have much knowledge on .gitignore, I just know that it helps us untrack the files we don't want to commit to a repository.</p>
<p>In my case, I have two .gitignore files by default</p>
<p>first one -&gt; inside .idea folder</p>
<p><a href=""https://i.stack.imgur.com/AVS0f.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/AVS0f.png"" alt=""enter image description here"" /></a></p>
<p>second one -&gt; inside project directory
<a href=""https://i.stack.imgur.com/pI0TM.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/pI0TM.png"" alt=""enter image description here"" /></a></p>
<p>Tried as I might, I couldn't prevent it from tracking mydb folder, .dat files, .idea folder.</p>
<p>This is what I get when I git status</p>
<pre><code> modified:   .gitignore
        modified:   .idea/.gitignore
        modified:   .idea/APIdesign.iml
        modified:   .idea/libraries/Maven__antlr_antlr_2_7_7.xml
        modified:   .idea/libraries/Maven__ch_qos_logback_logback_classic_1_2_3.xml
        modified:   .idea/libraries/Maven__ch_qos_logback_logback_core_1_2_3.xml
        modified:   .idea/libraries/Maven__com_fasterxml_classmate_1_5_1.xml
        modified:   .idea/libraries/Maven__com_sun_activation_jakarta_activation_1_2_2.xml
        modified:   .idea/libraries/Maven__com_sun_istack_istack_commons_runtime_3_0_11.xml
        modified:   .idea/libraries/Maven__com_zaxxer_HikariCP_3_4_5.xml
        modified:   .idea/libraries/Maven__jakarta_annotation_jakarta_annotation_api_1_3_5.xml
        modified:   .idea/libraries/Maven__jakarta_persistence_jakarta_persistence_api_2_2_3.xml
        modified:   .idea/libraries/Maven__jakarta_transaction_jakarta_transaction_api_1_3_3.xml
        modified:   .idea/libraries/Maven__jakarta_xml_bind_jakarta_xml_bind_api_2_3_3.xml
        modified:   .idea/libraries/Maven__org_apache_derby_derby_10_14_2_0.xml
        modified:   .idea/libraries/Maven__org_apache_logging_log4j_log4j_api_2_13_3.xml
        modified:   .idea/libraries/Maven__org_apache_logging_log4j_log4j_to_slf4j_2_13_3.xml
        modified:   .idea/libraries/Maven__org_aspectj_aspectjweaver_1_9_6.xml
        modified:   .idea/libraries/Maven__org_dom4j_dom4j_2_1_3.xml
        modified:   .idea/libraries/Maven__org_glassfish_jakarta_el_3_0_3.xml
        modified:   .idea/libraries/Maven__org_glassfish_jaxb_jaxb_runtime_2_3_3.xml
        modified:   .idea/libraries/Maven__org_glassfish_jaxb_txw2_2_3_3.xml
        modified:   .idea/libraries/Maven__org_hibernate_common_hibernate_commons_annotations_5_1_2_Final.xml
        modified:   .idea/libraries/Maven__org_jboss_logging_jboss_logging_3_4_1_Final.xml
        modified:   .idea/libraries/Maven__org_slf4j_jul_to_slf4j_1_7_30.xml
        modified:   .idea/libraries/Maven__org_slf4j_slf4j_api_1_7_30.xml
        modified:   .idea/libraries/Maven__org_yaml_snakeyaml_1_27.xml
        modified:   .idea/misc.xml
        modified:   mydb/db.lck
        modified:   mydb/log/log.ctrl
        modified:   mydb/log/log1.dat
        modified:   mydb/log/logmirror.ctrl
        modified:   mydb/seg0/c101.dat
        modified:   mydb/seg0/c111.dat
        modified:   mydb/seg0/c121.dat
        modified:   mydb/seg0/c130.dat
        modified:   mydb/seg0/c141.dat
        modified:   mydb/seg0/c150.dat
        modified:   mydb/seg0/c161.dat
        modified:   mydb/seg0/c171.dat
        modified:   mydb/seg0/c20.dat
        modified:   mydb/seg0/c230.dat
        modified:   mydb/seg0/c31.dat
        modified:   mydb/seg0/c41.dat
        modified:   mydb/seg0/c490.dat
        modified:   mydb/seg0/c4a1.dat
        modified:   mydb/seg0/c51.dat
        modified:   mydb/seg0/c60.dat
        modified:   mydb/seg0/c71.dat
        modified:   mydb/seg0/c81.dat
        modified:   mydb/seg0/c90.dat
        modified:   mydb/seg0/ca1.dat
        modified:   mydb/seg0/cb1.dat
        modified:   mydb/seg0/cc0.dat
        modified:   mydb/seg0/cd1.dat
        modified:   mydb/seg0/ce1.dat
        modified:   mydb/seg0/cf0.dat
        modified:   pom.xml
        modified:   src/main/java/io/theBMan/springBootStarter/Application.java
        modified:   src/main/java/io/theBMan/springBootStarter/lecture/Lecture.java
        modified:   src/main/java/io/theBMan/springBootStarter/lecture/LectureController.java
        modified:   src/main/java/io/theBMan/springBootStarter/lecture/LectureRepository.java
        modified:   src/main/java/io/theBMan/springBootStarter/lecture/LectureService.java
        modified:   src/main/java/io/theBMan/springBootStarter/student/Student.java
        modified:   src/main/resources/application.properties
</code></pre>
<p>my two .gitignore files as follows</p>
<p>inside .idea -&gt;</p>
<pre><code># Compiled class file
*.class

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar
*.dat

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*

mydb/*
*/idea/**
.idea/
</code></pre>
<p>inside project root directory -&gt;</p>
<pre><code>*.class

# Log file
*.log

# BlueJ files
*.ctxt

# Mobile Tools for Java (J2ME)
.mtj.tmp/

# Package Files #
*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar
*.dat

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*

mydb/*
.idea/
target/
.dat
.gitignore
</code></pre>
<p>I also wonder why there are two .gitignore files. If we need both, what are their uses?</p>
<p>Any help is appreciated</p>
<p>Best,</p>
","5","13606345","",""
"30557723","25645","2015-05-31 13:00:14","1","222","<git><github><version-control><gitignore>",".gitignore in xcode not taking effect","<p>My GitHub project has this structure:</p>

<ul>
<li><code>folderA</code>: unrelated stuff</li>
<li><code>folderB</code> -> <code>MyProject</code> -> all Xcode related files including the <code>.xcodeproj</code></li>
</ul>

<p>In MyProject I've downloaded this <code>.gitignore</code>: <a href=""https://github.com/github/gitignore/blob/master/Swift.gitignore"" rel=""nofollow"">https://github.com/github/gitignore/blob/master/Swift.gitignore</a></p>

<p>This <code>.gitgnore</code> has a line that says <code>xcuserdata</code>.
However when seeing the pending changes in git, I clearly still see files inside <code>MyProject.xcodeproj/project.xcworkspace/xcuserdata/</code>.</p>

<p>My GitHub repository was empty, so I did not add any file before trying to add the gitgnore.</p>
","0","25645","",""
"12977534","1701170","2012-10-19 15:27:12","2","380","<git><gitignore>","How did I screw up this very simple .gitignore file?","<p>I only want to track one file in my directory.  This file is <code>buildout.cfg</code>.  So I first ran <code>git init</code>.  Then I created a <code>.gitignore</code> file which reads in its entirety as follows:</p>

<pre><code>* # Blacklist all files
!buildout.cfg # Whitelist the file I'm interested in
</code></pre>

<p>But now when I run the command <code>git add</code>, git goes ahead and adds dozens of files -- everything in the directory.</p>

<p>Why?</p>
","0","1701170","",""
"1329361","151899","2009-08-25 16:24:05","17","34695","<git><gitignore>","Why is git ignoring my changed file?","<p>I make an arbitrary change to a file within my git working directory. </p>

<p><code>git status</code> does not recognized that the file has changed.</p>

<p><code>git add /path/to/file</code> has no effect. </p>

<p><code>git add -f /path/to/file</code> has no effect. </p>

<p><code>git status /path/to/file</code> shows the file as in the 'changes to be committed' bucket. </p>

<p>I removed my .gitignore file, just to be sure. No change to any of the above behaviors.</p>

<p>I have done <code>git reset --hard</code>, re-made my change. No change to any of the above behaviors.</p>

<p>What could be going on here?</p>
","2","151899","0","0"
"20406808","912015","2013-12-05 17:34:24","0","87","<git><gitignore>","git does not ignore a folder that used to be tracked","<p>I have a directory in my git repo that is in <code>.gitignore</code> but didn't use to be. The <code>.gitignore</code> entry is</p>

<pre><code>**/bin/
</code></pre>

<p>Running <code>git rm --cached</code> does not work, it just gives me</p>

<pre><code>fatal: pathspec 'bin/' did not match any files
</code></pre>

<p>I mention <code>git rm --cached</code> because that is what I ran to stop the contents of the directory from appearing in <code>git status</code>.</p>

<p>Running <code>git status</code> tells me that <code>bin/</code> is untracked, so it's not ignored.</p>
","4","912015","",""
"58376170","1175081","2019-10-14 11:50:19","1","544","<git><gitignore><git-add>","Can't add file to git for no apparent reason","<p>I have this file under assets/fonts/myFont.otf</p>

<p>I can't check it into my repo. But it is not ignored as far as I can tell.</p>

<pre><code>git checkout assets/fonts/myFont.otf
error: pathspec 'assets/fonts/myFont.otf' did not match any file(s) known to git.
</code></pre>

<p>But adding it has no effect.</p>

<pre><code>git add assets/fonts/myFont.otf
</code></pre>

<p>I can't get <code>git status</code> to show the file in any way.</p>

<p>I have tried so far:</p>

<ul>
<li>git add -f</li>
<li>git update-index --no-assume-unchanged</li>
<li>git config --global core.excludesfile</li>
<li>checking all .gitignore files in the project</li>
<li>Changeing the file ending from <code>.otf</code> to <code>.ttf</code> -> <strong>It works</strong></li>
<li>Moving /assets/fonts/* to . -> <strong>It works</strong></li>
<li>git check-ignore assets/fonts/* -> empty output</li>
</ul>

<p>I could not find out why <code>*.otf</code> files are ignored in my <code>assets/fonts/</code> folder. Any other things that I can try to find out? Any Ideas what might cause this? OS is macos 13.14.6</p>
","6","1175081","0","0"
"13054083","1562652","2012-10-24 17:02:20","0","224","<git><push><gitignore><wavemaker>",".gitignore file for wavemaker 6.4.6","<p>I need a help about gitignore file and pulling/pushing wavemaker project (6.4.6 version) on bitbucket repository.</p>

<p>I founded that gitignore must contains these:</p>

<p><a href=""http://dev.wavemaker.com/wiki/bin/wmdoc_6.5/Software+Configuration+Management#HExamplegitignorefile"" rel=""nofollow"">http://dev.wavemaker.com/wiki/bin/wmdoc_6.5/Software+Configuration+Management#HExamplegitignorefile</a></p>

<p>but this is for version 6.5 and this is not good for version 6.4.6. </p>

<p>I pushed a project to the repository  and when my colleague tried to pull the latest version from repository, then the project can not be opened because it have error 
like this:
ErrorFailed to open project : SyntaxError: Unexpected token ===</p>

<p>I know that wavemaker generate some of files, and both of us have project export, but when one of us push the new code on repository, then other after pulling can't open the project.</p>

<p>Thank you very much!</p>
","0","1562652","",""
"13069704","877353","2012-10-25 13:28:48","2","622","<git><gitignore>",".gitignore syntax issue","<p>I have a given <code>extension</code> directory containing plenty of other directories. 
Among those plenty, one particular named <code>important</code> that I want to be staged by git. The others I don't. So I created a <code>.gitignore</code> file within my <code>extension</code> directory with the following content:</p>

<pre><code>*
!README
!.gitignore
!important/**
</code></pre>

<p>My goal was saying to Git:</p>

<ul>
<li>ignore everything in this directory</li>
<li>but keep the README file</li>
<li>and also keep the .gitignore file</li>
<li>and please, do keep also the <code>important</code> directory</li>
</ul>

<p>But this is not working, only <code>README</code> and <code>.gitignore</code> are kept.
The syntax seems the right one to me so... I do not know where I am wrong. </p>

<p>Any suggestion is most welcomed. </p>
","1","877353","",""
"39618263","4676812","2016-09-21 13:40:26","1","109","<git><gitignore>","gitignore not ignoring files on windows vb.net","<p>I created a folder, added some code, created a <code>.gitignore</code> txt file with the following:</p>

<pre><code>*.cache
*.dll
</code></pre>

<p>Then I run these commands: </p>

<pre><code>git init
git remote add origin htttps://...
git add .
git commit -m ""first commit""
git status
</code></pre>

<p>And I keep on seeing .dll and .cache files... Why isn't .gitignore working?</p>

<p>I also tried : </p>

<pre><code>git rm -r --cached .
git add .
</code></pre>

<p>But the dll and cache files are still being added.</p>

<p>My <code>.gitignore</code> is in the root directory (where I ran <code>git init</code>)</p>
","0","4676812","0","0"
"39679722","4256929","2016-09-24 18:38:23","10","13312","<git><gitignore>",".gitignore .js files made from TypeScript","<p>I Have the following files:</p>

<ul>
<li>ActiveTask.ts</li>
<li>ActiveTask.js</li>
<li>Controller.ts</li>
<li>Controller.js</li>
<li>_config.js</li>
<li>otherFile.js</li>
</ul>

<p>And I want to commit only:</p>

<ul>
<li>ActiveTask.ts</li>
<li>Controller.ts</li>
<li>_config.js</li>
<li>otherFile.js</li>
</ul>

<p>How to ignore .js files that are the same name as the .ts files?</p>
","0","4256929","0","0"
"30685112","1579338","2015-06-06 16:32:01","1","568","<git><gitignore>",".gitignore files deleted but files still ignored (git status doesn't show, can't add)","<p>Well, I'm trying to track all the files I edited in my project, but <code>git status</code> doesn't seem to be working: it doesn't show some files that were changed. I've searched a lot about what could be happening but couldn't go far.</p>

<p>I noticed I have some <code>.gitignore</code> files inside my theme folder /wp-content/themes/mytheme/.gitignore (and subfolders too) and I removed them. Have no idea of how they appeared there. I believe they are ignoring the files I modified.</p>

<p>What I need is to be able to track all modified files to <code>commit</code>, then <code>push</code> to bitbucket. (removing <code>.gitignore</code> files manually didn't solve the problem).</p>
","3","1579338","0","0"
"20633865","3111122","2013-12-17 12:15:00","0","2308","<php><mysql><git><mamp><gitignore>","Using github and MAMP","<p>I have MAMP setup on my mac, and I have a web app installed in the htdocs folder that use my mysql databases. So far everything is working great. The problem is the project is using git, so I installed the github mac app. Theres a .gitignore file that includes a bunch of files, but I'll just list one to explain my problem. This file is in in .gitignore:</p>

<pre><code>/application/config/development/database.php
</code></pre>

<p>But, when I make changes to it, it displays in my change list. Using the github mac app, I right click and choose ignore, and it inserts this path into my .gitignore file:</p>

<pre><code>application/config/development/database.php
</code></pre>

<p>Notice the missing '/'. But then, .gitignore shows up in my uncommitted files, and the database.php file is not ignored! Also, <code>.gitgnore</code> is in the .gitignore file as well. Is this a relative path problem? A git installation problem? Halp!</p>
","1","3111122","",""
"66429530","15229696","2021-03-01 20:58:57","0","21","<git><qt><gitignore>","Qt files with git","<p>I am writing a C++ application with Qt and using <code>git</code> for version control. I know that <code>Debug</code> and <code>Release</code> folders dont need to be pushed to my github repo because they are created by compilation.</p>
<p>My concerns are about Qt specific files. Which should be added to tracking and which can be ignored ? Can I safely ignore the entire <code>x64</code> folders or do they consist of something important which will be needed when somebody would like to run my app by pulling repo on another computer. And what about <code>.ui</code> files ?</p>
","6","15229696","",""
"20693329","3120945","2013-12-19 22:57:34","1","1054","<tomcat><version-control><github><liferay><gitignore>","How to properly configure a .gitignore file for a Liferay project using Tomcat?","<p>I'm trying to start up a Liferay project using Apache Tomcat (embedded in the Liferay directory).
This project works well and I want to push it on my Github account before developing portlets.
However I don't know how to proceed my .gitignore file.</p>

<p>What kind of files and directories should I ignore ?</p>

<ul>
<li>/logs/*</li>
<li>/tomcat/work/* ?</li>
<li>/tomcat/temp/* ?</li>
<li>/tomcat/logs/*</li>
</ul>

<p>Do you have any idea ? It's seems that Tomcat generates huge quantities of temporary files !</p>

<p>Thanks !</p>
","1","3120945","",""
"13131739","188740","2012-10-30 00:48:03","7","2161","<git><github><gitignore>","gitignore not unignoring specific bin folder","<p>I have this directory structure (simplified for illustration purposes):</p>

<pre><code>parent
--directory1
----bin
--directory2
----bin
-directory3
----bin

... and so on
</code></pre>

<p>I would like all 'bin' directories to be ignored by Git, except for just one of them (directory2/bin).  I tried this, but it doesn't seem to work:</p>

<pre><code>[Bb]in
!directory2/[Bb]in
</code></pre>

<p>This doesn't work either</p>

<pre><code>[Bb]in
!parent/directory2/[Bb]in
</code></pre>

<p>I also tried this and it doesn't work: </p>

<pre><code>[Bb]in
!parent/directory2/[Bb]in/*
</code></pre>

<p>Anyone know how I can get this to work?</p>
","7","188740","",""
"30721459","4053170","2015-06-09 01:06:19","1","3669","<git><unity-game-engine><gitignore>","Unity project's .gitignore is ignoring meta files","<p>So I'm pretty familiar with git, but have always had a repo master that has created a .gitignore file for me, so this is my first time dealing with it by myself. My problem is that when I commit my Unity project, and pull it from a different computer, the metafiles have been ignored (I suspect), and all of the GameObjects in my scene get deleted. <a href=""https://stackoverflow.com/questions/21573405/how-to-prepare-a-unity-project-for-git"">Here</a>  is the tutorial I followed with the gitignore file I am using.</p>
","6","4053170","",""
"13142749","1285360","2012-10-30 15:48:13","1","79","<git><gitignore>","gitignoring a particular folder","<p>I am trying to use a .gitignore file to ignore a top level /assets directory, so my file says:</p>

<p>assets/</p>

<p>This is working - however other folders at lower levels of my app are also getting ignores - any folder called assets is being ignored.  eg. /style/img/assets.  </p>

<p>So how to I specify I only want the /assets directory at the top level to be ignored?</p>
","0","1285360","",""
"13159979","603270","2012-10-31 14:14:00","8","6389","<git><git-submodules><gitignore><git-config>","How to make git ignore changes to submodules by default","<p>Since gitmodules were introduced in Git, I like to add them like so:</p>

<pre><code>[submodule ""actionbarsherlock""]
path = actionbarsherlock
url = git://github.com/JakeWharton/ActionBarSherlock.git
ignore = dirty
</code></pre>

<p>The important part here is <code>ignore = dirty</code>.</p>

<p>When using the <code>git submodule add</code> command, I'm forced to add this line by myself in the <code>.gitmodules</code> file.</p>

<p>How can I make this the default behavior for every <code>git submodule add</code> I'll make in the futur?</p>

<p>I know about the <code>submodule.&lt;name&gt;.ignore</code> configuration, but how to apply it to all by default?</p>
","4","603270","0","0"
"50970819","3231510","2018-06-21 14:18:37","0","34","<windows><git><gitignore>","How to make git forget about a distant gitignore file?","<p>Git is ignoring a directory that I want to track and index. I do not <em>ignore</em> this dir in any local gitignore file. When I inspect it, I get:</p>

<pre><code>$git check-ignore -v my-ignored-dir
""I:\\path\\to\\external\\project\\.gitignore"":33:my-ignored-dir/ my-ignored-dir
</code></pre>

<p>So the <em>ignore</em> instruction is coming from this external project file. The file belongs to the external project and I can't modify it. I can't find any reference to this project in my account (searching .bat files etc.).</p>

<p>How can I tell git to stop looking in this external file?</p>

<p>More generally, how does git know where to look for gitignore data and what determines the order of preference?</p>
","2","3231510","",""
"58023326","8527172","2019-09-20 07:03:22","1","213","<git><github><gitignore>","How can I ignore subfiles in .gitignore?","<p>I have a lot of subfolders and files like <code>node_modules&gt;yargs-parser&gt;README.md</code>. And I wrote <code>node_modules</code> in <code>.gitignore</code> file but when I change something in a file like <code>README.md</code>, git is not ignoring the changes. How can I ignore?</p>
","7","8527172","",""
"18589731","1218602","2013-09-03 10:18:08","1","169","<git><gitignore>","Tracking file by git","<p>I have strange problem with git. My .gitignore files seems to be tracked, but I can't commit it.</p>

<p>Command lines:</p>

<pre><code>user@STATION ~/repository (my_first_branch)
$ git checkout my_second_branch
error: Your local changes to the following files would be overwritten by checkout:
        .gitignore
Please, commit your changes or stash them before you can switch branches.
Aborting

user@STATION ~/repository (my_first_branch)
$ git add .gitignore

user@STATION ~/repository (my_first_branch)
$ git commit
# On branch my_first_branch
nothing to commit, working directory clean

user@STATION ~/repository (my_first_branch)
$
</code></pre>

<p>So I cannot checkout other branch, because of .gitignore and I can't do anything about it.</p>

<p>The only solution I found is to manually delete .gitignore, but I would like to track it. File .gitignore is not in my .gitignored and I have no idea why it is not tracked.</p>

<p>I cannot commit or stash it.</p>

<p>UPDATE: git status:</p>

<pre><code>user@STATION ~/repository (my_first_branch)
$ git status
# On branch my_first_branch
nothing to commit, working directory clean
</code></pre>
","7","1218602","0","0"
"58086056","10048799","2019-09-24 18:14:07","0","23","<gitignore><glob>",".gitignore files which do not have numbered names","<p>I have many files in my directory but I only want files whose names (not extension) solely contain numbers. I understand I need to write a glob pattern (not regex) which matches numbered names files and then negate it.</p>

<p>Example of valid, uploaded files:</p>

<pre><code>1312.js
1.go
8.py
2.js
</code></pre>

<p>Examples of invalid, local files:</p>

<pre><code>index.html
text2.txt
</code></pre>

<p>Is this possible?</p>
","0","10048799","",""
"985890","","2009-06-12 09:47:39","16","27335","<git><gitignore>","gitignore directory pattern ignores folder with same suffix, but I want to include it","<p>I have the following directory structure:</p>

<pre>
src/
out/
cout/
...
</pre>

<p>and I want to ignore <code>out/</code> but not <code>cout/</code>.</p>

<p>I've tried putting <code>^out/</code>, but that doesn't seem to work.  I've also tried <code>out/</code> but that also ignores <code>cout/</code>.</p>

<p>Any suggestions?</p>
","1","","0","0"
"987142","120898","2009-06-12 15:04:49","2507","834658","<git><gitignore>","Make .gitignore ignore everything except a few files","<p>I understand that a <code>.gitignore</code> file cloaks specified files from Git's version control.</p>
<p>How do I tell <code>.gitignore</code> to ignore everything except the files I'm tracking with Git? Something like:</p>
<pre class=""lang-bash prettyprint-override""><code># Ignore everything:
*

# Do not ignore these files:
script.pl
template.latex
</code></pre>
","1","120898","0","0"
"20129493","2102888","2013-11-21 18:49:50","9","1220","<ruby-on-rails><git><solr><sunspot><gitignore>","Sunspot Solr Gem & .gitignore","<p>I am running the sunspot_solr &amp; sunspot_rails gem in development and I get an insane number of changes to index files and data files every time I start and stop the development and/or sunspot server.  It's driving me crazy doing version control.</p>

<p>gem ""sunspot_solr"", ""~> 2.1.0""
gem ""sunspot_rails"", ""~> 2.1.0""</p>

<p>Which of these files/directories can be safely ignored? These are the culprits:</p>

<p><strong>solr/development/data/index/_dh.fdt</strong></p>

<p><strong>solr/pids/development/sunspot-solr-development.pid</strong></p>

<p><strong>solr/development/data/tlog/tlog.0000000000000000176</strong></p>

<p><strong>solr/development/data/index/write.lock</strong></p>

<p>Thanks!</p>
","0","2102888","",""
"39192071","5458806","2016-08-28 14:00:07","13","24416","<git><laravel><composer-php><gitignore>","Should I add Laravel vendor directory to .gitignore or not?","<p>I'm having my vendor directory in <code>.gitignore</code> file.
 Every time I run <code>composer update</code> , git can not track <code>vendor</code> directory updates and changes and therefor I can not backward these changes!! </p>

<p><strong>My question is:</strong>  Is it possible that application crash OR encounter errors after <code>composer update</code> so there is a need to <code>git reset</code>?  </p>

<p>If it is possible, isn't it better to remove vendor  directory from <code>.gitignore</code> ?
maybe there are other solutions to this problem ? (if it is a problem at all !!)</p>
","1","5458806","0","0"
"18602471","1312080","2013-09-03 22:24:14","8","13477","<git><gitignore>","How to ignore .gitignore files in git status?","<p>When I run <code>git status</code>, it lists a bunch of <code>.gitignore</code> files that I am not interested in seeing in the list (they got updated locally by <code>Eclipse</code>).  I browsed numerous posts in regards to this seemingly common issue but none of the suggested solutions worked for me.</p>

<p>E.g. I went into <code>~/.gitconfig</code> and found that</p>

<p><code>excludesfile = ~/.gitignore_global</code></p>

<p>Then I went into that file and added <code>.gitignore</code> at the tail but that did not change anything.</p>

<p>How do I effectively ignore .gitignore files in git status so they don't clutter the view?</p>
","2","1312080","0","0"
"39231866","2000874","2016-08-30 15:41:20","0","31","<git><gitignore>",".gitignore file ignoring files I want included","<p>A number of files that I <strong>do</strong> want included in the repo were being ignored because I had a mistake in my .gitignore file.</p>

<p>I figured out what I did wrong, but only after I had already committed.</p>

<p>How do I go about updating the repo so that it reads from the updated .gitignore file and these files in question are included?</p>
","0","2000874","",""
"20257984","2545071","2013-11-28 04:53:23","0","155","<tfs><gitignore>","Has TFS 2012 gitignore analog?","<p>I want to ignore some files when check in.
Has TFS 2012 this functionality?
Is it Exclude options?
Thank you!</p>
","0","2545071","",""
"69330276","15292387","2021-09-25 21:46:07","-1","685","<git><gitignore><quartus>","Which files or folders should be in .gitignore in Quartus Prime 18.1 Lite (Verilog) project?","<p>I wish to know which files, extensions and/or folders are cache data that are generated again every time that I compile the project!</p>
","2","15292387","",""
"1158857","8047","2009-07-21 12:20:47","25","12660","<git><gitignore>","working with .git/info/exclude too late","<p>I usually do this:</p>

<pre><code>git init
git add .
git commit .
</code></pre>

<p>And then I realize that it's about to add my nbproject directory, which I want excluded/ignored. Sometimes, I even check in this directory. Had I added it to .git/info/exclude before running git add., everything works fine (it's excluded). </p>

<p>So then I modify .git/info/exclude and then it's too late. git no longer respects changes to .git/info/exclude.</p>

<p>So the questions are:</p>

<ol>
<li><strong>How can I get git to take up the changes in the exclude file in the checkin?</strong> (I tried running git add . again, which doesn't help)</li>
<li><strong>Let's say I check in a directory (or file) that I want excluded. What is the least number of steps to get to the state I want</strong> (with the file excluded). </li>
</ol>
","0","8047","0","0"
"35100146","5799379","2016-01-30 09:35:13","2","204","<gitignore><atlassian-sourcetree>","Does sourcetree automatically load .gitignore file?","<p>I create .gitignore file by textedit on mac.
( by following Adam of link <a href=""https://stackoverflow.com/questions/49478/git-ignore-file-for-xcode-projects"">Git ignore file for Xcode projects</a>    I create empty txt format file, and copy and paste it.)</p>

<p>And I put that file in .git folder in the project folder.</p>

<p>Then, Does sourcetree will 'automatically' load this .gitignore file as soon as I put the file in that folder ?</p>

<p><a href=""https://i.stack.imgur.com/fxtyp.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/fxtyp.png"" alt=""enter image description here""></a></p>
","0","5799379","",""
"35101109","5799379","2016-01-30 11:16:57","0","1727","<gitignore><atlassian-sourcetree>","Does sourcetree provide any tool or screen for editing gitignore file?","<p>Recently I put some extension to global gitignore file by sourcetree.</p>

<p>But I found out it was wrong decision.</p>

<p>So I want to change it.</p>

<p>But I do not know which .gitignore file the sourcetree uses for saveing global ignore list. (I have so many .gitignore file in my computer)</p>

<p>So, I want to know sourcetree provide any good tool or screen for edit global gitignore file list.</p>

<p>I found some articles for doing by command line, but it is kind of hard to do it for me.</p>

<p>Thanks</p>
","0","5799379","",""
"69332243","14998952","2021-09-26 05:59:27","-1","33","<git><gitignore>","gitignore everything except few files in directory is not working","<p>I have many json files in folder log_files/backend_logs I want to ignore all files except file named backend_log_template.json</p>
<p>I have used below rule in .gitignore but this is not working for me</p>
<pre><code>!log_files/backend_logs/backend_log_template.json
</code></pre>
","1","14998952","",""
"1274057","16957","2009-08-13 19:23:22","7866","2167355","<git><gitignore><git-rm>","How do I make Git forget about a file that was tracked, but is now in .gitignore?","<p>I put a file that was previously being tracked by Git onto the <code>.gitignore</code> list. However, the file still shows up in <code>git status</code> after it is edited. How do I force Git to completely forget the file?</p>
","9","16957","0","0"
"39409461","5208543","2016-09-09 10:28:41","12","6971","<git><gitignore>","git - How to ignore only one file without extension?","<p>I wish to ignore only one file without extension. 
I am able to ignore some files by names, but they all have extensions. Unfortunately I work with some files without extension that should not be ignored; thus, I can not use the solution provided here <a href=""https://stackoverflow.com/questions/19023550/how-do-i-add-files-without-dots-in-them-all-extension-less-files-to-the-gitign"">How do I add files without dots in them (all extension-less files) to the gitignore file?</a>.</p>

<p>Does anybody know a way to achieve this?
Any help is appreciated.</p>
","0","5208543","0","0"
"58287035","5629621","2019-10-08 13:10:14","2","2272","<git><docker-compose><gitignore>",".gitignore does not ignore files","<p>I have a folder with source code. It contains the following files and folders:</p>

<pre><code>/.git
/.vs
/bin
/obj
/src
/tests
.gitignore
docker-compose.dcproj
docker-compose.yml
</code></pre>

<p>File <code>.gitignore</code> includes the follwing lines: </p>

<pre><code>/.vs
/bin
/obj
</code></pre>

<p>I excpect no file from <code>.vs</code>, <code>bin</code> and <code>obj</code> folders will be included in my repository. But every time I change my repository I see two files from folder <code>obj</code>. They are <code>\obj\Docker\CachedComposeConfigFilePaths.cache</code> and <code>\obj\Docker\MergedDockerCompose.cache</code>. Why git does not ignore them and how do I fix it? </p>

<p>UPD output after <code>git status</code></p>

<pre><code>Changes not staged for commit:
  (use ""git add &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

        modified:   obj/Docker/CachedComposeConfigFilePaths.cache
        modified:   obj/Docker/MergedDockerCompose.cache
        modified:   // another files

Untracked files:
  (use ""git add &lt;file&gt;..."" to include in what will be committed)

        //some files

no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>
","3","5629621","",""
"1279533","152060","2009-08-14 18:50:34","212","109282","<git><gitignore>","Is there a way to tell git to only include certain files instead of ignoring certain files?","<p>My programs generally generate huge output files (~1 GB) which I do not want to be backing up to the git repository.  So instead of being able to do</p>

<pre><code>git add .
</code></pre>

<p>I have to do something like</p>

<pre><code>git add *.c *.cc *.f *.F *.C *.h *.cu
</code></pre>

<p>which is a little bit cumbersome...</p>

<p>I feel fairly confident I could write a quicky perl script ls the directory contents into .gitignore and then remove files based on a .gitinclude (or some similar name) file, but that seems a little too hackish.  Is there a better way?</p>
","0","152060","0","0"
"35114228","2736516","2016-01-31 13:14:02","3","25036","<java><eclipse><git><gradle><gitignore>","Egit: Set gitignore to ignore all eclipse project files","<p>I have a project up on github and I want to remove all eclipse related files from it and allow people who clone it to use any ide they want. Here is the project: <a href=""https://github.com/vedi0boy/Archipelo"" rel=""nofollow"">https://github.com/vedi0boy/Archipelo</a></p>

<p>What would I have to put in my gitignore? I'm still very new to the whole version control manager thing so you don't have to tell me exactly what to put but maybe explain how it works and what to be careful about so that it will still work.</p>

<p>By the way, it uses gradle so I would also like it so that the gradle related files remain untouched since cloners will need them to build the project and I plan to remove 'APIs' folder and just use gradle dependencies.</p>
","0","2736516","0","0"
"1335302","99877","2009-08-26 14:52:58","97","187946","<git><gitignore>","Add newly created specific folder to .gitignore in Git","<p>I had a clean working directory and brought in a clone from a Git repo last night. 
But now my local server created and contains a stats folder which I want to ignore. </p>

<p>I can't seem to get Git to ignore this folder when I run a git status.</p>

<pre><code>On branch master
Your branch is ahead of 'origin/master' by 1 commit.

Changes to be committed:
  (use ""git reset HEAD &lt;file&gt;..."" to unstage)

    new file: app_public/views/pages/privacy.php
    new file: app_public/views/pages/terms.php
    new file: public_html/stats/ctry_usage_200908.png
    new file: public_html/stats/daily_usage_200908.png
    new file: public_html/stats/dns_cache.db
    new file: public_html/stats/hourly_usage_200908.png
    new file: public_html/stats/index.html
    new file: public_html/stats/usage.png
    new file: public_html/stats/usage_200908.html
    new file: public_html/stats/webalizer.current
    new file: public_html/stats/webalizer.hist

Changed but not updated:
    modified: .gitignore
</code></pre>

<p>I added in my .gitignore a few different lines but it still trying to add them:</p>

<pre><code>public_html/stats
public_html/stats/**
public_html/stats/**/*
public_html/stats/*
</code></pre>
","0","99877","0","0"
"20414853","797519","2013-12-06 02:32:42","1","53","<git><version-control><gitignore>","How do I treat the existing files(already committed) that I ignored later in git?","<p>First the files are in the git repo and were committed thus not ignored. 
Then I ignore it in <code>gitignore</code>, and later those files are changed. 
They will show in <code>git status</code>.
In my project, those are some <code>pyc</code> files. 
I use </p>

<pre><code>git rm &lt;file&gt; --cached
</code></pre>

<p>to remove them. 
I am wondering whether there is a better way to fix this.</p>
","3","797519","",""
"20416706","2926641","2013-12-06 05:32:02","2","2726","<ruby-on-rails><git><gitignore>","Adding folders to .gitignore","<p>Please help me with a git ignoring.</p>

<p>I have files in the public/images directory and don't want to track them. But I need to track files in the /public/images/bonus2 directory. I used this code, and it works.</p>

<pre><code>/public/images/
!/public/images/bonus2/
</code></pre>

<p>But when I try to move tracked files from public/images/bonus2 to public/images/bonus_ordering and make .gitignore like that:</p>

<pre><code>/public/images/
!/public/images/bonus2/
!/public/images/bonus_ordering/
</code></pre>

<p>and make this command:</p>

<pre><code>mv public/images/bonus2 public/images/bonus_ordering
</code></pre>

<p>git track that files in public/images/bonus2 removed, but it don't track that new files public/uploads/bonus_ordering appeared.</p>

<p>I used git add -f public/images/bonus_ordering, but I think that is not good solution. What I need to do instead of that?</p>
","2","2926641","0","0"
"39525036","2143025","2016-09-16 06:29:06","-3","1066","<git><gitignore>","add .env file to gitignore after taking it to live","<p>It is probably asked numerous time and answered even more time. I understand I need to use</p>

<blockquote>
  <p>git rm --cached file_name</p>
</blockquote>

<p>But my problem is that above command changes file status to deleted and if I push this commit to live and pull it my <strong>.env</strong> file will be deleted and hence my site will be down immediately. I cannot afford to go down even for a split second. What can be done in this case.</p>

<p>Thanks</p>
","1","2143025","",""
"1470572","40834","2009-09-24 09:13:51","1444","1044489","<git><gitignore>","Ignoring any 'bin' directory on a git project","<p>I have a directory structure like this:</p>
<pre><code>.git/
.gitignore
main/
  ...
tools/
  ...
...
</code></pre>
<p>Inside main and tools, and any other directory, at any level, there can be a 'bin' directory, which I want to ignore (and I want to ignore everything under it too). I've tried each of these patterns in .gitignore but none of them work:</p>
<pre><code>/**/bin/**/*
/./**/bin/**/*
./**/bin/**/*
**/bin/**/*
*/bin/**/*
bin/**/*
/**/bin/* #and the others with just * at the end too
</code></pre>
<p>Can anyone help me out? The first pattern (the one I think should be working) works just fine if I do this:</p>
<pre><code>/main/**/bin/**/*
</code></pre>
<p>But I don't want to have an entry for every top-level directory and I don't want to have to modify .gitignore every time I add a new one. There are also files and directories that have the substring 'bin' in their names, <strong>which I want to keep</strong>.</p>
<p>This is on Windows using the latest msysgit.</p>
","5","40834","0","0"
"58488597","1736407","2019-10-21 14:35:29","0","127","<git><visual-studio><gitignore>",".gitignore file not ignoring VS files","<p>I have inherited a Visual Studio project, and the git repo did not include a .gitignore file. I downloaded the one located here <a href=""https://github.com/github/gitignore/blob/master/VisualStudio.gitignore"" rel=""nofollow noreferrer"">https://github.com/github/gitignore/blob/master/VisualStudio.gitignore</a> and pushed it to all branches (we maintain several versions of the project and have a separate branch for each).</p>

<p>However, whenever I open the project in Visual Studio, git is still tracking the .user files generated by VS, even though they are included in the .gitignore file.</p>

<p>Have I missed a step somewhere?</p>
","0","1736407","",""
"39704939","1404049","2016-09-26 14:00:10","0","1475","<git><cordova><gitignore>","gitignore file for Cordova 6.3.0","<p>I was working on creating a GitIgnore file for a Cordova application I am creating, for Browser, Android, and IOS.  Everything I am working on is in the www/ so i am trying to figure out what is a good <code>gitignore</code> to use.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>#Cordova Info
platforms/
plugins/
.idea/
www/.idea/

# ANDROID / ECLIPSE

# built application files
*.apk
*.ap_

# files for the dex VM
*.dex

# Java class files
*.class

# generated files - android project subfolder
Android/bin/
Android/gen/
Android/assets/

# generated files
bin/
gen/

# Local configuration file (sdk path, etc)
local.properties

# IOS / Xcode
build/*
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3
*.xcworkspace
!default.xcworkspace
xcuserdata
profile
*.moved-aside
IOS/www/

# OSX
.DS_Store

# Thumbnails
._*

# Files that might appear on external disk
.Spotlight-V100
.Trashes</code></pre>
</div>
</div>
</p>

<p>I didnt know if this was overkill, as this is the combination of a PhoneGap GitIgnore I found + 3 folders I thought to be good to ignore, <strong>platform, plugins, .idea</strong></p>

<p>I have been looking around and havent found anything solid.</p>
","3","1404049","",""
"20712904","1495015","2013-12-20 22:26:57","4","4128","<git><gradle><github><gitignore>","Removing files from githubs repository but not locally","<p>So this is my repository: <a href=""https://github.com/quinnliu/WalnutiQ"" rel=""nofollow"">https://github.com/quinnliu/WalnutiQ</a></p>

<p>I added .gradle &amp; build/ to my .gitignore file. However when I push this change I would like to remove the .gradle file and build/ folder from ONLY my repository and not locally. How can I do this?</p>
","0","1495015","",""
"39773618","6900226","2016-09-29 14:54:03","3","25","<git><gitignore>","gitignore some-path/some-file.ini also ignores some-path/some-file.ini.default","<p>I have the following line in my gitignore:</p>

<pre><code>src/main/resources/properties.ini
</code></pre>

<p>to exclude that particular <code>properties.ini</code> file.</p>

<p>For some reason that <em>also</em> excludes the file <code>src/main/resources/properties.ini.default</code></p>

<p>What am I doing wrong here?</p>
","0","6900226","0","0"
"58668265","7887218","2019-11-02 04:37:55","0","28","<git><gitignore>","Why does git mark as untracked a .gitignored folder?","<p><a href=""https://i.stack.imgur.com/6ZNma.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/6ZNma.png"" alt=""enter image description here""></a></p>

<p>I haven't previously committed this folder.</p>
","0","7887218","",""
"58668437","4779812","2019-11-02 05:13:25","0","55","<git><github><gitignore>","Ignore a specific folder where ever it occurs throughout the project (even if the folder is created in the future) in .gitignore","<p>I want git to ignore __ pycache__ folder in django. As and when I am creating new apps, this folder ""__ pycache __"" will be created in the new apps, but I want them to be ignored automatically , instead of mentioning the path for each __ pycache __ folder in every app.</p>

<p>So how do I write in .gitignore so that it ignores the folder named, ""__ pycache __"" inside the entire project directory.</p>
","0","4779812","",""
"35205141","5709287","2016-02-04 15:36:09","0","58","<git><gitignore>","git Exlude files without pattern (especionally .)","<p>is it possible to add files that match ""pattern"" to the gitignore?
The problem is that the custom build system creates executables without containing a point, so I wanted to exclude them, but neither  <code>!*.*</code> nor <code>[^\.]*</code> worked (the latter because git does not support regex, the fore because it overrode the gitignore in the project root folder).<br>
Are there any other ways to exclude given pattern?</p>
","2","5709287","",""
"58741657","","2019-11-07 03:39:52","1","51","<git><gitignore>",".gitignore not work in any case, what's the failing point here?","<p>.gitignore not work in any what were tried such as cases:   </p>

<ul>
<li><p>The content is in any case<br>
README.md<br>
Readme.md<br>
readme.md   </p></li>
<li><p>It's already cleared,<br>
<code>git rm --cached README.md</code>   </p></li>
<li><p>the Readme.md file in local dir is removed</p></li>
</ul>

<p>but still when doing git push, it'll clear, erase the file lives in remote repo</p>

<p>where's and what's the failure?<br>
help me!</p>
","1","","0","0"
"18739930","2571840","2013-09-11 11:29:27","2","5514","<git><gitignore><git-pull>","unable to pull .gitignore file","<p>I've modified my .gitignore file from my VPS. Then I've commit the change and pushed to remote repo:</p>

<pre><code>git add .gitignore
git commit -m "".gitignore changed""
git push -u origin --all
</code></pre>

<p>and then, I pull it to localhost:</p>

<pre><code>git pull
</code></pre>

<p>But I get the next error:</p>

<pre><code>error: unable to unlink old '.gitignore' (Permission denied)
</code></pre>

<p>I've tried changing permissions of .gitignore local file to 0777, but doesn't work.
The file in remote repo has been changed, but not in my local file
What could be the problem? and how could be solved?</p>
","2","2571840","0","0"
"18745296","1395676","2013-09-11 15:27:35","0","1230","<github><gitignore>","Git .gitignore - Ignore Scripts folder in Visual Studio mvc project","<p>So I uploaded my mvc project on github, but the problem is there are so many .js files in Scripts/ folder like jquery and jquery ui, that github recognizes this as JavaScript projest. I want it to be c# project.</p>

<p>I tried to add .gitignore pattern to ignore Scripts folder like this:</p>

<p>Scripts/</p>

<p>File: <a href=""https://github.com/nukec/real-time-chat/blob/master/.gitignore"" rel=""nofollow"">https://github.com/nukec/real-time-chat/blob/master/.gitignore</a></p>

<p>which I understand it ignores all folders with name Scripts, but it still shows as JavaScript project.</p>

<p>Any tips welcome.
Thanks</p>
","0","1395676","0","0"
"18748942","2571840","2013-09-11 18:45:20","36","30934","<ruby><git><gitignore>","Why is git looking inside vendors directory?","<p>I have the .gitignore file with this code:</p>

<pre><code>/app/cache/*
/app/logs/*
/app/bootstrap*
/vendor/*
/web/bundles/
/app/config/parameters.yml
</code></pre>

<p>but when I do :</p>

<pre><code>$ git status
</code></pre>

<p>in any situation (before and after add and commit), I get a long text output like this:</p>

<pre><code>    ...

    #   deleted:    vendor/doctrine/orm/tools/sandbox/cli-config.php
    #   deleted:    vendor/doctrine/orm/tools/sandbox/doctrine
    #   deleted:    vendor/doctrine/orm/tools/sandbox/doctrine.php
    #   deleted:    vendor/doctrine/orm/tools/sandbox/index.php
    #   deleted:    vendor/doctrine/orm/tools/sandbox/xml/Entities.Address.dcm.xml
    #   deleted:    vendor/doctrine/orm/tools/sandbox/xml/Entities.User.dcm.xml
    #   deleted:    vendor/doctrine/orm/tools/sandbox/yaml/Entities.Address.dcm.yml
    #   deleted:    vendor/doctrine/orm/tools/sandbox/yaml/Entities.User.dcm.yml
    #   modified:   vendor/friendsofsymfony/user-bundle/FOS/UserBundle
    #   modified:   vendor/gedmo/doctrine-extensions
    #   modified:   vendor/herzult/forum-bundle/Herzult/Bundle/ForumBundle
    #   modified:   vendor/kriswallsmith/assetic
    #   modified:   vendor/symfony/property-access/Symfony/Component/PropertyAccess/.gitignore
    #   modified:   vendor/symfony/property-access/Symfony/Component/PropertyAccess/StringUtil.php
    #   modified:   vendor/symfony/symfony/CHANGELOG-2.1.md

    ...
</code></pre>

<p>The vendors directory is in .gitignore file, so I don't know what is happening.
I've tried with:</p>

<pre><code>$ sudo git clean -dxf
</code></pre>

<p>but nothing changes.</p>
","2","2571840","0","0"
"18750179","843528","2013-09-11 20:01:09","9","1215","<git><gitignore>","gitignore loads other gitignores","<p>Is it possible? The <code>git update-index --assume-unchanged</code> is no solution, ignored files have to be tracked. Creating submodules either.</p>

<p>E.g.</p>

<p><em>cat .customgitignore(1|2|3...)</em></p>

<pre><code>i-do-not-need-this.extension
</code></pre>

<p><em>cat .gitignore</em></p>

<pre><code>basic-stuff.extension
&lt;load&gt; .customgitignore1
&lt;load&gt; .customgitignore2
&lt;load&gt; .customgitignore3
 etc
</code></pre>

<p>Issue description for those interested.</p>

<p>I am creating private repo of configs. One branch = one config. Additional branch as workspace. I merge other branches-configs with workspace depending on requirements. Branches-configs each have their own .gitignore which should be applied only after merge. I am trying to omit conflicts in gitignore file.</p>
","0","843528","0","0"
"35232325","1698186","2016-02-05 19:47:37","3","393","<git><gitignore>","Why does git not have a 'git ignore' command?","<p>I understand how to setup git to use the .gitignore file to ignore files but was wondering why this has not been a command feature that makes this task slightly less tedious. I will post this question to the git-scm mailing list later but was wondering if anyone here might have a valid reason for the lack of a ...</p>

<pre><code>'git ignore &lt;pattern&gt;'
</code></pre>

<p>... feature. I am sure there are other developers that would find this feature useful. </p>
","2","1698186","",""
"40047891","1121139","2016-10-14 16:26:03","1","748","<android><git><version-control><gitignore>","*.aar files been ignored by git","<p>I want to push my *.aar files to git but, git is no allowing that, here goes my folder structure:</p>

<pre><code>#Main .gitignore


# Built application files
*.apk
*.ap_

# Files for the Dalvik VM
*.dex

# Java class files
*.class

# Generated files
bin/
gen/

# Gradle files
.gradle/
build/

# Local configuration file (sdk path, etc)
local.properties

# Proguard folder generated by Eclipse
proguard/

# Log Files
*.log

# Android Studio Navigation editor temp files
.navigation/

# Android Studio captures folder
captures/
</code></pre>

<p>Here goes the second git ignore:</p>

<pre><code>#earth/.gitignore   &lt;-- This is the directory where gitignore file is
!build/
</code></pre>

<p>3RD:</p>

<pre><code>#earth/build/.gitignore   &lt;-- This is the directory where gitignore file is
!outputs/
</code></pre>

<p>4TH</p>

<pre><code>#earth/build/outputs/.gitignore   &lt;-- This is the directory where gitignore file is
!aar/
</code></pre>

<p>And inside aar folder are my files, but they never appear. Ideas?
Thanks!</p>
","1","1121139","0","0"
"35243065","4408696","2016-02-06 15:58:33","0","711","<git><branch><gitignore>","Git saying there are changes to my .gitignore but ""git status"" shows ""nothing to commit""","<p>Currently working on a branch off master, and added something to .gitignore. I committed all my changes and tried checking out another branch but I get:</p>

<pre><code>error: Your local changes to the following files would be overwritten by checkout:
  .gitignore
Please, commit your changes or stash them before you can switch branches.
Aborting
</code></pre>

<p>When i run <code>git status</code>, I get:</p>

<pre><code>On branch feature/blahblah
nothing to commit, working directory clean
</code></pre>

<p>Does this mean git is not tracking my .gitignore file? If so, how do I get it to recognize the file?</p>
","6","4408696","",""
"35245658","6999882","2016-02-06 19:49:05","133","41792","<windows><git><gitignore>","""You must type a file name"" error thrown, when I create a .gitignore file on Windows","<p>When I try to do this, I get the following error:</p>

<p><a href=""https://i.stack.imgur.com/IJxts.png""><img src=""https://i.stack.imgur.com/IJxts.png"" alt=""gitignore error""></a></p>

<p>Obviously, Windows Explorer doesn't allow me to create this type of file patterns. How can I overcome this problem?</p>
","2","6999882","0","0"
"40117426","7038628","2016-10-18 20:23:38","0","75","<gitignore>","Can I create local version of .gitignore that applies only to my local repository?","<p>There are some files/directories in the remote git repository for my project that I don't want in my local repository. They are useful to other project members, but not me. And I can't just identify them in the root .gitignore file because when that file becomes part of the remote repository it becomes the rule for everybody else so they change it back. We don't want to get into a .gitignore war. 
Is there a straightforward way for me alone to selectively chose the files/directories that I do or don't want to exchange between the remote repository and my local repository when I do a 'git pull'? To be clear, I'd like to make my selections once and have them take effect every time I do a 'git pull' (or equivalent) and not force them on anyone else.</p>
","4","7038628","",""
"2196982","244005","2010-02-04 02:34:03","7","2389","<git><include><gitignore>","Why is .gitignore not including a file prefixed by a !","<p>My .gitignore file reads as follows:</p>

<pre><code>build/
glucosia.xcodeproj/
!glucosia.xcodeproj/project.pbxproj
core-plot/framework/build
core-plot/framework/CorePlot-CocoaTouch.xcodeproj/
!core-plot/framework/CorePlot-CocoaTouch.xcodeproj/project.pbxproj
.DS_Store
Classes/.DS_Store
</code></pre>

<p>Strangely, <code>glucosia.xcodeproj/project.pbxproj</code> is not ignored, as I would expect.</p>

<p>But, <code>core-plot/framework/CorePlot-CocoaTouch.xcodeproj/project.pbxproj</code> is still being ignored.</p>

<p>Any ideas?</p>

<p>Thanks!</p>
","2","244005","",""
"18773849","137149","2013-09-12 20:33:27","3","434","<eclipse><git><maven><gitignore>","Eclipse GIT reindex loop plus append .gitignore","<p>After a clean install of STS - Spring Tool Suite, whenever it starts the indexing process never ends. </p>

<p>lots of <code>buiding workspace (Sleeping)</code> occour in the progress view</p>

<p>afted investigation, and just by luck I found opening Team View that .gitignore was appearing and desapearing.</p>

<p>Every time a new entry <code>/target</code>is appended to the file and it keep growing.</p>

<p>Does anyone know hot to stop this deadlock?</p>

<p>FIRST ATTEMPT</p>

<p>Just oppended Window -> Preferences -> Team -> Git -> Projects and disabled:</p>

<pre><code>Automatic ignore derived resources by adding the to gitignore
</code></pre>

<p>looks the the loop finished. But no better explanation for this and if its the solution. Looks like not.</p>
","0","137149","0","0"
"18781762","2180697","2013-09-13 08:33:28","3","149","<git><gitignore>","'!' does not exclude file in .gitignore","<p>my <code>.gitignore</code> file:</p>

<pre><code>.DS_Store
temp
!temp/script.txt
</code></pre>

<p>However when I do <code>git status</code> it doesn't display the <code>temp/</code> directory to indicate that the <code>script.txt</code> is not in staged. It only displays the <code>.gitignore</code> file:</p>

<pre><code># Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   .gitignore
</code></pre>

<p>I'm just learning git. Any idea where i'm going wrong?</p>
","3","2180697","0","0"
"35275628","4032689","2016-02-08 17:25:38","0","359","<git><github><gitignore>","ignore git folder without removing from remote repo, and ignore new files","<p>We have a git repository that has a folder in it we would like to untrack, so that:</p>

<ol>
<li>The folder is still in our remote directory, but any changes done locally are not shown when running ""git status""</li>
<li>Any new files that are automatically added to the folder are not tracked as well</li>
</ol>

<p>Looking online we sort of came to the conclusion that if that folder wasn't added to the gitignore when it was created, then adding it to it afterwards simply won't stop tracking the folder. The folder is sort of a program generated folder, but we don't need it to be updated from the remote repo, but would like to still keep it there as it speeds up the process of some things. I've found a few solutions online and saw many people ran</p>

<pre><code>git rm -r --cached &lt;your directory&gt;
</code></pre>

<p>which will un-track the folder, but also remove it from my remote repo, which is not what we want. I saw another solution that involved running  </p>

<pre><code>git update-index --assume-unchanged /dir/to/untrack
</code></pre>

<p>This will print out ""Ignoring path dir"", but if a new file is created in that folder, it shows up when running ""git status"". We also tried editing a file that was one directory below the one we set to untrack ( i.e. dir/to/untrack/dir2/changedThisFile.txt ) and that file still shows up when running ""git status"" too.  </p>

<p>Any help or advice would be greatly appreciated.<br>
Thanks!</p>
","2","4032689","",""
"21278256","2031033","2014-01-22 08:55:52","1","1550","<google-maps><github><gitignore><api-key>","hide the google maps api key for github","<p>I'm following a tutorial for google maps v3 where in the <code>&lt;head&gt;</code> they include:</p>

<pre><code>&lt;script type=""text/javascript""
      src=""https://maps.googleapis.com/maps/api/js?key=API_KEY&amp;sensor=SET_TO_TRUE_OR_FALSE""&gt;
&lt;/script&gt;
</code></pre>

<p>I want to share my code on github but I don't want my API_KEY to be public. Is there something I can do with .gitignore to reference the above script but not share my api key?</p>
","1","2031033","",""
"2503816","255312","2010-03-23 21:37:27","8","2734","<git><version-control><split><gitignore><subtree>","Git subtree not properly using .gitignore when doing a partial clone","<p>I am a graduate student with many scripts, bibliography data in bibtex, thesis draft in latex, presentations in open office, posters in scribus, and figures and result data.  I would like to put everything in one project under version control.  Then when I need to work on a portion such as the bibliography data, I would like to check that subdirectory out, modify it as necessary and merge it back.I would like the ability to check out one version to my home computer, and a different one to my work computer and make changes to each independently and eventually merge them back.  I would also like to be able to check out a piece of code from this big project and import it with versioning into a separate project.  If I may changes I'd like to be able to merge them back to the original project.</p>

<p>Based on my understanding git subtree can do this.</p>

<p><a href=""http://github.com/apenwarr/git-subtree"" rel=""noreferrer"">http://github.com/apenwarr/git-subtree</a></p>

<p>There is an example that is along the lines of what I'm trying to do at:</p>

<p><a href=""http://psionides.jogger.pl/2010/02/04/sharing-code-between-projects-with-git-subtree/"" rel=""noreferrer"">http://psionides.jogger.pl/2010/02/04/sharing-code-between-projects-with-git-subtree/</a></p>

<p>Say the trunk of my project contained the directories: (bib  bin  cfg  data  fig src  todo). </p>

<p>When I use</p>

<pre><code>git subtree split -P bib -b export
git checkout export
</code></pre>

<p>I get a the bib directory, plus <strong>all files that should have been ignored</strong> or considered binary based on .gitignore such as the src directory and everything in it that ends in a tilde or the ./data directory.  </p>

<pre><code>dwickrama@DWwork:~/research/trunk$ ls * -r
biblography.bib  JabRef

src:
script1.sh~ README~         script2.sh~
script3.sh~ script4.R~  script5.awk~
script5.py~ 

cfg:
cfgFile1.ini~  cfgFile2.ini~  cfgFile3.ini~

bin:
bigBinaryPackage1   bigBinaryPackage2

dwickrama@DWwork:~/research/trunk$ 
</code></pre>

<p>My .gitignore file is as follows:</p>

<pre><code>*.doc diff=word
*.tex diff=tex
*.bib diff=bibtex
*.py diff=python
*.eps binary
*.jpg binary
*.png binary
./bin/* binary
*~
</code></pre>

<p>How do I prevent this?</p>
","11","255312","",""
"21369276","3188605","2014-01-26 21:12:35","0","45","<ruby-on-rails><ruby><git><gitignore>",".gitignore not on local server but shows on Git Repository","<p>In my local folders the <code>.gitignore</code> does not show up (like I was told it would Learning Ruby on Rails Tutorial), so I made one using Sublime Text. But when I uploaded the files to Git, suddenly it appeared. Now I have two <code>.gitignore</code>s on Git, but still only 1 shows in local files. Can anyone explain how to resolve this difference?</p>

<p>Screenshot: <img src=""https://s30.postimg.org/z8ze3xur5/Screen_Shot_2014_01_26_at_12_44_31_PM.png"" alt=""""></p>
","0","3188605","",""
"21378809","3239840","2014-01-27 10:47:57","1","306","<git><gitignore><git-add><git-track>","Add files to .git and do not delete them when pushing to upstream","<p>I am looking into adding some files to <code>.git</code> repo directory, and <code>push</code> them to the upstream
without tracking/commiting them. </p>

<p>Example:</p>

<pre><code>.git/information.txt 
</code></pre>

<p>After I do a <code>commit</code>, I add text to <code>information.txt</code>, and then <code>push</code>. 
When I <code>clone</code>/fork I would like to still have this file in <code>.git</code>. </p>

<p>What I basically want is to have files that are not tracked, and the content in the upstream is updated with the existing content in the local repo when <code>git push</code> is issued.</p>

<p>I guess the way to do it is to hack the <code>git-init</code> and add whatever I want, and see what <code>git push</code>/<code>clone</code>/fork does to the <code>.git</code> folder, and keep the new files and send them to upstream. But I am thinking that maybe there is another way.</p>

<p>Is there a config option that I am missing?</p>
","3","3239840","",""
"48427473","435706","2018-01-24 16:38:20","1","30","<git><gitignore>","Preceding `/` preventing gitignore exceptions from working for file extension exclusion","<pre><code>*.dll

!/ThirdPartyLibraries/*.dll
!/ThirdPartyLibraries/*/*.dll
!/ThirdPartyLibraries/*/lib/*.dll
!/ThirdPartyLibraries/*/lib/*/*.dll
</code></pre>

<p>I am trying to include dlls only from that folder but it won't let me</p>

<p>I searched and I searched all I found was directory ignores then directory exceptions which doesn't apply here</p>

<p>if this has been asked before, please forgive my search skills</p>
","10","435706","",""
"48428254","7859059","2018-01-24 17:20:27","0","30","<git><heroku><gitignore>","git get latest remote but not overwrite my file","<p>I have a git repo. In this repo I ignore config.json (using gitignore).<br>
I have ~5 another repos (heroku repos used for apps).<br></p>

<p>I need to get latest version of this repo, but not overwrite .gitignore (I need config.json). <br>
I know first I need to <code>git remote add bot https://git.com/Me/bot</code>.<br>
I want to merge everything from <code>remote bot</code> to my local repo, but not overwrite my <code>.gitignore</code> file.<br>
Can someone help me?</p>
","6","7859059","",""
"35315225","2516943","2016-02-10 12:23:46","6","4229","<symfony><version-control><gitignore>","Why is SymfonyRequirements.php excluded from .gitignore?","<p>If I understand it correctly, the <code>SymfonyRequirements.php</code> file (which lives under <code>/app</code> or <code>/var</code> depending on Symfony version) is handled by Composer. I therefore suppose it should be not be tracked by any version control system. However, I see it is excluded from <a href=""https://github.com/symfony/symfony-standard/blob/master/.gitignore"" rel=""noreferrer"">Symfony Standard Edition's .gitignore file</a>:</p>

<pre><code>/var/*
[...]
!var/SymfonyRequirements.php
</code></pre>

<h3>Edit</h3>

<p>Symfony core developer @Stof says in <a href=""https://github.com/symfony/symfony-standard/issues/669#issuecomment-45850914"" rel=""noreferrer"">a Github issue</a>:</p>

<blockquote>
  <p>given that one of the checks is whether you installed vendors, it must
  be there before installing them (even though we have an automatic
  update of the requirements so that you check the uptodate ones next
  time).</p>
</blockquote>

<p>This is not very clear to me. Can anybody give any more details about this file and explain why it should or should not be tracked by a VCS?</p>
","2","2516943","0","0"
"35316482","2650800","2016-02-10 13:23:11","6","1410","<git><github><gitignore>","Git: How to remove files that are now in gitignore but were added to repo before","<p>I have a couple of files that are in the repo and also in .gitignore. </p>

<p>I would like these files to be removed from the repo but not be deleted from my production server when I do <code>git pull origin master</code></p>

<p>I have tried multiple solutions but none seam to work, in each one I end up deleting the files from the server when I do a pull.</p>

<p>References:</p>

<p><a href=""https://stackoverflow.com/questions/1274057/making-git-forget-about-a-file-that-was-tracked-but-is-now-in-gitignore"">How to make Git &quot;forget&quot; about a file that was tracked but is now in .gitignore?</a></p>

<p><a href=""https://stackoverflow.com/questions/7927230/remove-directory-from-remote-repository-after-adding-them-to-gitignore"">Remove directory from remote repository after adding them to .gitignore</a></p>

<p><a href=""https://stackoverflow.com/questions/13541615/how-to-remove-files-that-are-listed-in-the-gitignore-but-still-on-the-repositor"">How to remove files that are listed in the .gitignore but still on the repository?</a></p>
","0","2650800","",""
"48448426","5838056","2018-01-25 17:09:57","3","2817","<react-native><gitignore>","Why don't we gitignore ios/ and android/ in react-native","<p>In our react-native project we often use the following scripts when switching between drastically different branches to avoid complications.</p>

<pre><code>""eject"": ""rm -rf ios/ &amp;&amp; rm -rf android &amp;&amp; react-native eject"",
""fresh-start"": ""rm -rf ./node_modules &amp;&amp; npm install &amp;&amp; npm run eject""
</code></pre>

<p>However if the <code>react-native eject</code> command changes many generated files in ios/build/ and android, why don't we gitignore ios/ and android/? In many github issues and repositories I see people at best gitignore their build/</p>
","0","5838056","0","0"
"14055650","459384","2012-12-27 13:42:18","2","643","<android><eclipse><git><gitignore>","gitignore android include the apk","<p>In my repository I want to exclude all the binary files, all the generated files etc. But I do want to include the final apk file. I picked up the standard gitignore for android(see <a href=""https://gist.github.com/4388441/revisions"" rel=""nofollow noreferrer"">here</a>) and changed it according to <a href=""https://stackoverflow.com/questions/5533050/gitignore-exclude-folder-but-include-specific-subfolder"">this question</a>. But now it is not ignoring the bin/res folder. Of course I can add another line to manually exclude bin/res also but that does not seem standard. How do I do this?</p>
","0","459384","0","0"
"18850678","197127","2013-09-17 13:03:57","5","7371","<android><eclipse><git><gitignore>","Eclipse Git gitignore file is ignored","<p>I have an Android project in which I wish GIT to ignore the bin and gen folders. Therefore, I have placed in the directory of the project (I have also tried it at a level higher) the following .gitignore file:</p>

<pre><code># built application files
*.apk
*.ap_

# files for the dex VM
*.dex

# Java class files
*.class

# generated files
bin/
gen/

# Local configuration file (sdk path, etc)
local.properties

# Eclipse project files
#.classpath
#.project
</code></pre>

<p>Unfortunately, this file is being ignored by Eclipse and I keep committing .class files and files from both gen/ and bin/. I have also tried to mark the folders as ""Assume unchanged"" but that also does not help.</p>

<p>I am not sure, but it is possible that I have added the file AFTER the first commit.</p>
","0","197127","0","0"
"35334183","1048418","2016-02-11 08:26:42","2","397","<android><git><android-studio><gitignore>","Change default Android Studio git ignore","<p>Is there any way to change default gitignore which is created with new project? I'm not asking how to edit because this is obvious but about changing default.</p>
","1","1048418","0","0"
"48468847","1840365","2018-01-26 20:11:36","0","723","<git><reactjs><azure><gitignore><create-react-app>","create-react-app git pushing node_modules","<p>So I am trying to push my initial commit using the <code>create-react-app</code> from a local git build. My <code>.gitignore</code> looks like such:</p>

<pre><code># See https://help.github.com/ignore-files/ for more about ignoring files.

# dependencies
/node_modules

# testing
/coverage

# production


# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*
</code></pre>

<p>And my directory looks like this:</p>

<p><a href=""https://i.stack.imgur.com/GpsyS.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/GpsyS.jpg"" alt=""enter image description here""></a></p>

<p>Left the directory structure the same by default, so why is it uploaded <code>node_modules</code> as well?</p>

<p><strong>UPDATED INFO:</strong></p>

<p>So revised that in my git ignore, but it seemed to have still pushed the `node_modules'. My git root is theapp > build / node_modules / public / etc... if that helps.</p>

<p>I went ahead and allowed it, but at the end of my push with <code>git push azure master</code>, I got this now:</p>

<p><a href=""https://i.stack.imgur.com/7edRY.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/7edRY.jpg"" alt=""enter image description here""></a></p>

<p>Additionally, within windows, my file explorer looks like this:</p>

<p><a href=""https://i.stack.imgur.com/ap8eG.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ap8eG.jpg"" alt=""enter image description here""></a></p>

<p>Further thoughts?</p>
","0","1840365","",""
"9072977","753603","2012-01-31 00:47:20","5","487","<ios><xcode><macos><git><gitignore>","Naive Git setup, Is it possible to untrack files which are listed on my .gitignore?","<p>I have made a naive mistake while setting up my project. We are 3 developers working on one remote repository. While setting up git we never thought that Xcode would produce non-development files and push them to our remote repo. Now once I learnt after crash and burn I made a <code>.gitignore</code> file.</p>

<p>.gitignore looks like this, please do let me know if I should edit this too. (File credit goes too : <a href=""https://stackoverflow.com/questions/49478/git-ignore-file-for-xcode-projects"">This question's</a> answer given by Abizem)</p>

<pre><code># Mac OS X
*.DS_Store

# Xcode
*.pbxuser
*.mode1v3
*.mode2v3
*.perspectivev3
*.xcuserstate
project.xcworkspace/
xcuserdata/
</code></pre>

<p>But now question is there any possibilities that I can untrack all of those listed files from our source control?</p>

<p>or</p>

<p>Can I list all tracked files with their path and later I know a painful way to remove one by one with,</p>

<pre><code>git rm --cached 'file path'
</code></pre>
","4","753603","0","0"
"9406500","489564","2012-02-23 02:55:55","1","957","<git><gitignore>","how to track certain files in subdirectories but not all the other files with git?","<p>I'd like to track files in this style</p>

<pre><code># Ignore everything
*
# But not these files...
!.gitignore
!/projectA/Makefile
!/projectB/Makefile
</code></pre>

<p>It turns out git can't track the Makefiles in the subdirectories of <code>projectA</code> and <code>projectB</code>. One solution is to create <code>.gitignore</code> file in the subdirectories, but I don't like it because I have to manually create a lot of different <code>.gitignore</code> files. Any idea how to do that in the <code>.gitignore</code> of git root dir? </p>
","0","489564","0","0"
"27162399","1108891","2014-11-27 03:02:45","0","70","<git><gitignore>","Do we have to restart git after updating .gitignore?","<p>We just updated our <code>.gitignore</code>. If we want <code>git status</code> to reflect the updates, do we need to first restart git?</p>
","1","1108891","",""
"63529975","14122919","2020-08-21 20:58:19","1","1009","<git><github><gitignore>",".gitignore - ignoring image files not working","<p>I have this <code>.gitignore</code> file:</p>
<pre><code>.DS_Store
node_modules
/dist
screen

# local env files
.env.local
.env.*.local

# Log files
npm-debug.log*
yarn-debug.log*
yarn-error.log*
pnpm-debug.log*

# Editor directories and files
.idea
.vscode
*.suo
*.ntvs*
*.njsproj
*.sln
*.sw?

# Vue Browser Extension Output
*.pem
*.pub
*.zip
/artifacts

</code></pre>
<p>I'm trying to add a rule that will tell to git to ignore the <code>.jpeg</code> or <code>.jpg</code> and <code>.code-workspace</code> files, but the added rules added are ignored when I push the repository online and these files are anyway copied. Is this syntax correct?</p>
<pre><code># Ignoring psd and image files
*.jpg
*.psd
# Ignoring VS workspace files
*.code-workspace
</code></pre>
","0","14122919","0","0"
"9436405","390977","2012-02-24 18:56:07","150","61309","<git><gitignore>","Why is git is ignoring files that aren't in the .gitignore file?","<p>I have a git repository that is ignoring image files as well as a few other files, but my <code>.gitignore</code> file only has it ignoring a <code>config.php</code> file.  Is there some global ignore file somewhere that I can't seem to find?  I have to specify files to add them now, and it's giving me this warning:</p>

<blockquote>
  <p>The following paths are ignored by one of your .gitignore files.</p>
</blockquote>

<p>The contents of my <code>~/.gitconfig</code> file are only my e-mail address.</p>
","1","390977","0","0"
"45041965","2349082","2017-07-11 18:21:16","1","3758","<git><visual-studio><gitignore>","How to remove (not ignore) specific files using .gitignore?","<p>Below is the image of my project structure:</p>

<p><a href=""https://i.stack.imgur.com/qBHQM.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/qBHQM.png"" alt=""enter image description here""></a></p>

<p>I would like to delete .vs folder, packages folder, .hgignore file and bin and obj directories under Leapfrog.Datafetcher, Leapfrog.Test, and src/LeapfrogDataService.</p>

<p>As of now, my .gitignore file looks like</p>

<pre><code>## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates
packages
.hgignore

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/

# Visual Studio 2015 cache/options directory
.vs/
</code></pre>

<p>Can anyone let me know what is missing in a .gitignore file or is there anything wrong with my path?</p>
","2","2349082","",""
"27181166","772055","2014-11-28 02:41:35","0","401","<git><gitignore>",".gitignore ignoring file with ""production"" in its name","<p>I have a git repo which has datasources.json. I added a new file datasources.production.json in the same repo. When I try to commit and push git is ignoring this file. I verified .gitignore file there is no such rule to ignore this file. I don't know if I am missing anything. Anyone faced this issue?</p>
","4","772055","",""
"9485737","1004388","2012-02-28 16:26:10","4","2183","<git><netbeans><gitignore>","Netbeans displays files as ignored, but they're not in gitignore","<p>Netbeans displays one folder and all underlying files as ignored by VCS (I use Git), but when I use <code>git status</code> or Atlassian SourceTree the files are not ignored and listed as changed and ready for commit.</p>

<p>Specifically NetBeans IDE 7.1 (Build 201112071828) - PHP build, Git plugin version: 1.1.1.1 (shipped with NetBeans IDE 7.1 (Build 201112071828)), CLI git version 1.7.5.4</p>

<p>The ignored folder is <code>www/inc</code> . Unignoring doesn't help. Ignoring and unignoring again changes the <code>.gitignore</code> file accordingly, but the folder is still displayed grey with <code>(I)</code> - the ignored status marker. Also I've noticed some buggy behavior: subfolders of <code>www/inc</code> often turn grey only if I unfold them to see their content, but sometimes they turn grey when I unfold the already grey <code>www/inc</code>.</p>

<p>I checked <code>.gitignore</code> in the top project folder and all the way to ignored one and in the whole project source tree. There's only one file and it states</p>

<pre><code>/nbproject/private/
/log/
/www/debuglogs/*.log
/www/images/goods/*/*
/www/inc/content/
</code></pre>

<p>The <code>.git/config</code> file doesn't contain any mentions of ignoring. In <code>~/.gitconfig</code> global gitignore is defined as <code>/Users/sheershoff/.gitignore_global</code> and the global ignore file is the following:</p>

<pre><code>*~
.DS_Store
</code></pre>

<p>There's no <code>.git/info</code> folder in local Git repository, and the remote bare repository has the <code>project.git/info/exclude</code> file, but it consists of several commented out lines, which, I believe, are default.</p>

<p>Concerning Netbeans, I tried cleaning out cache folder and setting global IDE ignored files settings (<code>Tools-&gt;Options-&gt;Miscellaneous-&gt;Files</code>) to an empty string and restarting the IDE. Also I checked project ignored folders settings - it is empty.</p>

<p>After hours of resultless but effortful digging and googling I managed to resolve similar problem on Windows machine (same Netbeans build number) with the same project pulled from the same remote repo with the same folder disrespectfully ignored by editing some Netbeans properties files (should I mention the <code>ignore.path</code> setting is empty here and was empty there on Windows, and I also set all the includes settings to empty strings since I don't use them in the project). And as far as I can remember, it was something with <strong>includes</strong> section, not with <strong>ignore</strong> section. Though, can't find it in the repo history, probably it was in the private netbeans project settings or some global netbeans settings.</p>

<p>And now this bug repeats on my Mac machine at work and nothing helps me to make Netbeans show the not ignored files as not ignored.</p>

<p>What should I do to make them displayed normal in Netbeans, as they're not ignored according to other Git tools?</p>
","1","1004388","",""
"27244600","242189","2014-12-02 08:10:00","2","356","<git><gitignore>","including multiple gitignore files in one","<p>Here is the content of a gitignore of YADR, a popular project built on top of zsh :</p>

<pre><code>  1 # OSX       taken from: https://github.com/github/gitignore/blob/master/Global/OSX.gitignore
  2 # ----------------------------------------------------------------------------------------------
  3 .DS_Store
  4 # Thumbnails
  5 ._*
  6 # Files that might appear on external disk
  7 .Spotlight-V100
  8 .Trashes
  9
 10 # Windows   taken from: https://github.com/github/gitignore/blob/master/Global/Windows.gitignore
 11 # ----------------------------------------------------------------------------------------------
 12 # Windows image file caches
 13 Thumbs.db
 ...
</code></pre>

<p>That looks like an awful solution.</p>

<p>=> 
Is it not possible to include multiple gitignore, and have them maintained separately ?</p>
","3","242189","0","0"
"27607165","4385832","2014-12-22 17:05:07","3","2882","<wildcard><gitignore><subdirectory>","gitignore files with extension in folder","<p>I'm trying to make git ignore all files with extension .ex but only if they are in a subfolder with the name subf. In man gitignore I read the following:</p>

<pre><code>Two consecutive asterisks (""**"") in patterns matched against full pathname may have special meaning:

   ·   A leading ""**"" followed by a slash means match in all directories. For example, ""**/foo"" matches file or directory ""foo"" anywhere, the same as pattern ""foo"". ""**/foo/bar"" matches file or
       directory ""bar"" anywhere that is directly under directory ""foo"".
</code></pre>

<p>However, if I put my <code>**/subf/*.ex</code> into <code>.gitignore</code> (in repository base directory) my files with <code>.ex</code> extension are not ignored! I read in <a href=""https://stackoverflow.com/questions/10712555/gitignore-all-files-of-extension-in-directory"">this</a> thread that I should add my exclusion rule to the file <code>.git/info/exclude</code>. This seems to work for me but I'm not happy with it since this is not how I understood <code>.gitignore</code>. Can somebody help me understand why putting <code>**/subf/*.ex</code> does not work in <code>.gitignore</code>. Thank you!</p>
","0","4385832","0","0"
"27647889","1675976","2014-12-25 14:06:00","23","19144","<git><webstorm><gitignore>","Should I add .idea/workspace.xml to gitignore?","<p>When I try to checkout another branch, I get this error:</p>

<pre><code>error: Your local changes to the following files would be overwritten by checkout:
        .idea/workspace.xml
Please, commit your changes or stash them before you can switch branches.
Aborting
</code></pre>

<p>I did some research and it seems some people avoided this problem by adding the afformentioned file to <code>gitignore</code>.</p>

<p>Is this a wise thing to do? If <code>git</code> is ignoring your <code>workspace.xml</code> file, won't it mess up your experience in the IDE (in my case, Jetbrains Webstorm)?</p>
","1","1675976","0","0"
"45515263","4557002","2017-08-04 20:46:33","4","9916","<node.js><git><visual-studio-code><gitignore>",".gitignore not ignoring node_modules/ folder","<p>I am trying to get git to ignore my files in node_modules/ and it doesn't seem to be accepting this change.</p>

<p>Here is the content of my <code>.gitignore</code> file:</p>

<pre><code>node_modules/
</code></pre>

<p>and here is my project structure:</p>

<p><a href=""https://i.stack.imgur.com/4olZJ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4olZJ.png"" alt=""enter image description here""></a></p>

<p>I would expect the node_modules folder and all files/folders in it to be ignored by git, but instead I am getting a whole ton of changes listed as pending, and even when I do a git status in the root, node_modules/ is listed as pending. Is there some nomenclature about Windows that is making git act strangely?</p>
","2","4557002","0","0"
"27672645","42610","2014-12-28 00:10:11","3","92","<eclipse><gitignore><working-set>","Working set from .gitignore in Eclipse","<p>How do I have a Project Explorer's Working Set be built automatically from the contents of <code>.gitignore</code>, and then kept in sync with <code>.gitignore</code>?</p>

<p>I am working on a C++ AutoTools project which, as it is common for AutoTools projects, generates quite a lot of files during the build stage. I do have them .gitignored already. Now I'm trying Eclipse on that project, and found that I'd have to carefully pick files to ignore again.</p>
","1","42610","0","0"
"9730486","336920","2012-03-16 01:08:29","164","67649","<git><version-control><repository><gitignore>","Can you have additional .gitignore per directory within a single repo?","<p>Can you create a <code>.gitignore</code> file in a directory that only applies to files (and directories) within that directory?</p>
","0","336920","0","0"
"27704304","842225","2014-12-30 11:06:08","1","57","<git><github><gitignore>","git ignore folders in my case","<p>My project contains the following directories:</p>

<pre><code>moduleA/jars/
moduleB/jars/
moduleC/jars/
...
</code></pre>

<p>I want git to <strong>ignore</strong> all those <code>jars/</code> folders, so I created a <strong><em>.gitignore</em></strong> file with the following content:</p>

<pre><code>**/jars
</code></pre>

<p>Then I commited &amp; pushed everything to remote git repository. But I still see all those <code>jars/</code> folders in remote git repository, why?</p>
","3","842225","0","0"
"45559349","3667142","2017-08-08 04:34:03","1","2414","<git><gitignore>","gitignore file is ignoring the wrong directory","<p>I have a simple directory structure:</p>

<pre><code>gitroot/
└── docker/
    └── critical_dependencies/
</code></pre>

<p>I would like to just ignore the entire contents of the <code>critical_dependencies/</code> directory. My <code>.gitignore</code> file has the following entry: </p>

<pre><code>docker/critical_dependencies/* 
</code></pre>

<p>It doesn't seem to be ignoring any of the folders that are in that directory. What is the proper way to ask the <code>.gitignore</code> file to ignore everything from a sub-directory?</p>
","2","3667142","",""
"45589076","3801239","2017-08-09 11:12:38","0","493","<git><gitignore>","how to ignore a directory and its sub-directories in gitignore","<p>I want to ignore public folder and its inside folders and file in git</p>

<pre><code>public/app
public/dist/file.html
public/dist/bower_components/
public/dist/fonts/
public/dist/scripts/
</code></pre>

<p>i want to ignore all of them and their inside files 
i followed this link 
<a href=""https://stackoverflow.com/questions/1335302/add-newly-created-specific-folder-to-gitignore-in-git"">Add newly created specific folder to .gitignore in Git</a></p>

<p>I am doing it like this in .gitignore file</p>

<pre><code>public/app/*
public/dist//*
public/dist/bower_components/*
public/dist/fonts/*
public/dist/scripts/
</code></pre>

<p>but its not working ,i can stil see these files on <code>git status</code></p>
","1","3801239","",""
"9750606","952129","2012-03-17 14:08:57","406","167658","<git><gitignore>","git still shows files as modified after adding to .gitignore","<p>i'm adding this to <strong>.gitignore</strong> file</p>

<pre><code>.idea/*
</code></pre>

<p>but anyway the status is:</p>

<pre><code>#       modified:   .gitignore
#       modified:   .idea/.generators
#       modified:   .idea/dovezu.iml
#       modified:   .idea/misc.xml
#       modified:   .idea/workspace.xml
</code></pre>

<p>what am i doing wrong ?
i even added .idea/* to the global <strong>~/.gitignore_global</strong>
but git status, anyway shows me:</p>

<pre><code>#       modified:   .gitignore
#       modified:   .idea/.generators
#       modified:   .idea/dovezu.iml
#       modified:   .idea/misc.xml
#       modified:   .idea/workspace.xml
</code></pre>
","1","952129","0","0"
"27769201","1520477","2015-01-04 18:59:46","2","65","<git><gitignore>","Empty file that will indicate currently active git branch?","<p>How can I have an empty file that will indicate which git branch is currently active, and make this work with git?</p>

<p>Repositories I work with have often several branches (ie: dev -> stage -> live).<br>
Ideally, I would want to have something like an empty file named ""_BRANCH_NAME"" in the root, that will show me all the time on which branch am I working.</p>

<p>I have been playing with this and separate <code>.gitignores</code>, but without any luck because branches should merge at certain point.</p>

<p>Is this possible? Is there anything else I can do to mimic this?</p>

<p>Thanks!</p>
","6","1520477","0","0"
"45668635","5031463","2017-08-14 06:31:10","1","172","<git><gitignore>","How to remove certain files from global .gitignore?","<p>Whenever I push my code to Github, the crucial file <code>.angular-cli.json</code> is being filtered out from my <code>git add *</code> files.</p>

<p>So whenever I clone a repo of a new Angular 4 project I get an error, because <code>.angular-cli.json</code> is missing, and when trying to <code>ng serve</code> I get an error.</p>

<p>How do I remove this default settings where <code>.angular-cli.json</code> is being filtered out?</p>

<p>Is there a global <code>.gitignore</code> configuration?</p>
","1","5031463","",""
"64355852","14449824","2020-10-14 14:45:51","0","99","<git><gitignore>","Global .gitignore not working, DS_Store files are still showing in untracked files","<p>I created my global gitignore:</p>
<p><code>vim ~/.gitignore_global</code></p>
<p>I add the line:</p>
<p><code>.DS_Store</code>
(I've also tried all different varations like **/.DS_Store)</p>
<p>Then I try to add the global config file:</p>
<p><code>git config --global core.excludesfile ~/.gitignore_global</code></p>
<p>But it's still not working. I'm certain the files are new and untracked:</p>
<pre><code>Untracked files:
  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)
    app/code/.DS_Store
</code></pre>
<p>Why is this not working? I'm baffled.</p>
","3","14449824","",""
"64365344","12652301","2020-10-15 05:25:16","0","28","<git><gitignore>","No untracked files after git ignoring everything except","<p>I have a git folder with .gitignore structured like this:</p>
<pre><code>input/
src/
output/
additional-1/
additional-2/
file.csv
file.txt
</code></pre>
<p>And my <code>.gitignore</code> currently looks like this:</p>
<pre><code>input/
output/
file.txt
</code></pre>
<p>There are some files already (particularly from <code>src/</code>) added to git, and there are plenty which are not. I have noticed that it would probably be a lot easier for me to ignore all files except some directories/files. Therefore I followed <a href=""https://stackoverflow.com/a/987162/7383971"">this answer</a> and replaced <code>.gitignore</code> body with:</p>
<pre><code>*
!src/*
</code></pre>
<p>or</p>
<pre><code>*
!*/src/
</code></pre>
<p>(not sure which version is correct)</p>
<p>However, now when I print <code>git status</code> I get only modified files from <code>src/</code> directory and no untracked files, whereas there are certainly some files from <code>src/</code> which are not yet added to git. Is is normal behaviour? If they are not recognised by <code>git status</code> how can I <code>git add</code> the new files? Or should I change somehow my &quot;all-except&quot; <code>.gitignore</code> version?</p>
","1","12652301","",""
"64376526","2092927","2020-10-15 17:05:22","2","91","<git><gitignore><pull>","How to remove folders and files from git?","<p>I have some folders which was included in git commits in the past and now I would like to remove it from git.</p>
<p>So I have added the folder in .gitignore. But if I try to pull changes from server it throws me an error:</p>
<blockquote>
<p>Pull failed. Some untracked working tree files would be overwritten by Pull. Please move or remove them before you can Pull.</p>
</blockquote>
<p>In .gitignore is the line</p>
<pre><code>/storage 
</code></pre>
<p>which should ignore everything what is in the storage directory. So why the pull has problem with file in storage/logs/20201455.log file?</p>
","0","2092927","",""
"9959988","1110076","2012-03-31 21:48:01","6","2115","<ruby-on-rails><git><heroku><gitignore>","Force git to ignore a directory and all present and future files within","<p>So, I'm a newbie at git, but I'm using it because I have my rails app deployed through heroku. My app generates a bookmarklet (which is just a js file) for each user upon sign-up. Unfortunately, when I deploy, all of the bookmarklets for the users on the live site get overwritten with the bookmarklets for the users on my dev environment. I've read some other questions about this kind of thing, and I know I'll have to add the bookmarklet folder to the .gitignore file, and something about rm --cache (but I'm not sure exactly what I'll have to do). I tried doing these things, but I'm wondering if the problem is that git is ignoring all of the files that are there now, but isn't ignoring the ones that are generated after doing the whole gitignore process. Either that or I'm just doing it wrong (this is very, very likely). </p>

<p>Any help is welcome. And sorry that this covers the same ground as a lot of other similar questions. I did as much research as I could.</p>

<p>Thanks.</p>
","3","1110076","0","0"
"10274424","1254027","2012-04-23 03:21:19","52","35483","<git><github><gitignore>","Best practice for using multiple .gitignore files","<p>There exists a collection of useful <code>.gitignore</code> files at
<a href=""https://github.com/github/gitignore"" rel=""noreferrer"">https://github.com/github/gitignore</a>. Every ignores file there has an extension <code>.gitignore</code>, e.g. Java.gitignore, vim.gitignore. When I put these files directly into a workdir, they don't work.</p>

<p>Is it necessary to create a single file <code>.gitignore</code> and merge the constituent files into it?</p>

<p>Accordingly, when using a <code>--global</code> <code>.gitignore</code> file, it seems the config points to a single file. If for instance I want to apply all <code>.gitignore</code> files in a Global/ directory, should I manually merge them into a single file? If so, it's extra work to keep this merged file up to date with the ""official"" collection.</p>

<p>To reiterate, I acknowledge that we can use different <code>.gitignore</code> files in different directories, but it is not what I want. I want to apply multiple <code>.gitignore</code> files in a single directory.</p>
","0","1254027","0","0"
"10324649","1170039","2012-04-25 22:20:41","1","874","<git><github><gitignore>","global gitignore being, um, ignored","<p>I am running xampp on my windows machine. I have a load of git repos running locally on c:/xampp/htdocs and wish to add a global ignore to ignore the database config file which is in the applications/config folder of all these repos.</p>

<p>I've created .gitignore_global in the htdocs folder and run <code>git config --global core.excludesfile .gitignore_global</code> whilst in the htdocs folder and then navigated to one of my repos and run <code>git rm --cached application/config/database.php</code> then added, committed and pushed. The file is removed on github, fine, but when I amend database.php and run <code>git status</code> it shows the file there, waiting to be added.... I've researched this and tried a load of things but can't see what I'm doing wrong... any ideas?</p>
","4","1170039","",""
"28316262","904117","2015-02-04 07:59:09","2","401","<git><version-control><gitignore>","Keep part of .gitignore under version control but another part out","<p>I have a <code>.gitignore</code> where I expect that certain parts should be shared across the project but other parts should be individual-specific. How can I achieve this or a similar effect?</p>

<p>My initial thought was to split the <code>.gitignore</code> into two parts, a project-shared and an individual-specific part, where the project-shared part is checked in but the individual-specific part is not. Searching on Google and StackOverflow suggests that there does not exist a splitting/including-other-file mechanism.</p>

<p>Does anyone have a good alternative? Thanks in advance!</p>
","0","904117","0","0"
"10358082","788357","2012-04-27 21:26:00","3","970","<ruby-on-rails-3><asset-pipeline><carrierwave><gitignore>","Rails 3.2 Asset Pipeline, CarrierWave and .gitignore","<p>I'm using CarrierWave gem and Rails 3.2. When in production, Rails requires me to pre-compile the user image folder.</p>

<p>Currently my CarrierWave upload images to public/assets/images and I'm ignoring public folder in .gitignore. </p>

<p>Is there a better practice for this?</p>
","0","788357","",""
"46587808","2612235","2017-10-05 14:11:11","1","33","<gitignore>",".gitignore that ignore all the files that have a peer with a *.in","<p>I have some generated files from templates. Let's say I have in my repository: </p>

<pre><code>foo.c.in
bar.h.in
baz.html.in
</code></pre>

<p>These files could be generated through a Make rule: </p>

<pre><code>$(wildcard *.in): %: %.in
    PYTHONPATH+=. mako-render $&lt; &gt; $@
</code></pre>

<p>I don't want to manually add each of these generated files to my <code>.gitignore</code></p>

<pre><code>foo.c
bar.h
baz.html
</code></pre>

<p>Is there a smarter way?</p>
","1","2612235","0","0"
"10712555","663447","2012-05-23 02:04:12","300","320704","<git><gitignore>","gitignore all files of extension in directory","<p>Is there a way to ignore all files of a type in a directory?</p>

<p><code>**</code> is apparently meaningless to git, so this doesn't work:</p>

<pre><code>/public/static/**/*.js
</code></pre>

<p>The idea is to match arbitrary nested folders.</p>
","1","663447","0","0"
"28659925","4594050","2015-02-22 15:59:59","0","68","<git><gitignore>","Using .gitignore doesn't work for my scenario","<p>I have the following files structure in my server:</p>

<pre><code>app/webroot/media/avatars/original/1424293016.png
app/webroot/media/avatars/original/usrimg.jpg
app/webroot/media/avatars/thumb150/1424293016.png
app/webroot/media/avatars/thumb150/usrimg.jpg
app/webroot/media/avatars/thumb350/1424293016.png
app/webroot/media/avatars/thumb350/usrimg.jpg
app/webroot/media/avatars/thumb70/1424293016.png
app/webroot/media/avatars/thumb70/usrimg.jpg
</code></pre>

<p>I want to exclude all files inside the 'media' directory except 'media/avatars/thumb70' and all it's files.</p>

<p>I can achieve that up to the ""avatars"" directory but when I go deeper it just exludes the whole ""media"" directory.</p>

<p>My logic tells me that I should use this .gitignore:</p>

<pre><code># .gitignore file
app/webroot/media/*
!app/webroot/media/avatars/thumb70/*
</code></pre>

<p>Thanks in advance for any help.</p>
","0","4594050","",""
"10728956","191991","2012-05-23 22:52:22","155","23482","<git><meteor><gitignore>","What should I put in a meteor .gitignore file?","<p>I have a new meteor project. I'm guessing the <code>.meteor</code> dir has a combination of configuration files (needed) and temporary files (not needed). </p>

<p>So what's in your <code>.gitignore</code>?</p>
","2","191991","0","0"
"46908949","288190","2017-10-24 11:07:38","0","1018","<git><gitignore><git-config>","how to reconfigure gitignore_global.txt","<p>Due to a companywide account migration I do see an error while doing a git action like <code>git checkout my/branch</code>: <code>'\\old\now\nonexistent\path\to\my\home\documents\\gitignore_global.txt': Permission denied</code></p>

<p>I would like to reconfigure git, where can I do this? I don't see any local configuration pointing to this directory..</p>
","0","288190","",""
"65468229","5388390","2020-12-27 17:03:50","0","126","<git><gitignore>","The git switch keeps the ignored folder","<p>I have a <code>master</code> and <code>test</code> branch. In a <code>test</code> branch i have a <code>raw</code> folder that is listed in the <code>.gitignore</code> file. When I switch between <code>master</code> and <code>test</code> branches, I can see all the differences in the files as normal. The problem is that the <code>raw</code> folder is kept when I switch from <code>test</code> to <code>master</code>. This folder is ment to be the <code>test</code>-branch's folder and I want it to be removed from the directory when I switch to <code>master</code> branch. How can I make it?</p>
","0","5388390","0","0"
"10744305","734308","2012-05-24 19:48:54","1388","1840496","<git><xcode4.3><gitignore>","How to create a .gitignore file","<p>I need to add some rules to my <code>.gitignore</code> file. However, I can't find it in my project folder. Isn't it created automatically by Xcode? If not, what command allows me to create one?</p>
","9","734308","0","0"
"28687816","2880319","2015-02-24 03:47:41","0","47","<git><github><branch><gitignore>","Excluding a file from branches in git?","<p>Basically what I'm trying to do is make a file be on a ""dev"" branch, but not on a ""master"" branch. I've been looking at <a href=""http://cogniton-mind.tumblr.com/post/63560840467/howto-gitignore-for-different-branches-update"" rel=""nofollow"">this</a> but am having a bit of trouble understanding it. What I want to do is keep a single file to one branch exclusively. Everything I'm reading with <code>.gitignore</code> and <code>excludefiles</code> seems more about excluding the files from the repository in general instead of from a specific branch. </p>

<p>So, would the method in the link work for excluding a file from specific branches? Or is there another way to do it?</p>

<p>(I'm new to using git, and don't entirely understand the remote section at the end)</p>
","2","2880319","",""
"64515533","1352856","2020-10-24 16:21:30","0","627","<laravel><github><gitignore><git-commit>","Laravel git ignoring images uploaded to storage","<p>I'm running into an issue which i haven't been able to solve yet.</p>
<p>I was working on a laravel project and than moved this project folder to a newer version of MAMP. So far so good, everything was working fine. I just copied all the folders and files and all was good until i logged in to my laravel application on localhost and uploaded some images.</p>
<p>I know i can do this on my host but i like to work on localhost to add content and than push it to my prod env. Anyway, after i uploaded some images and did a git add . and commit it didnt add my uploaded images, on phpstorm they also turn out red in the storage/app/public/images folder.</p>
<p>On my previous mamp version everything used to work fine.</p>
<p>Stuff I have already tried:</p>
<p>I tried deleting the symlink storage folder and make a new link, didn't help.
I tried deleting the storage folder from gitignore, also didn't help.</p>
<p>My gitignore file looks like this:</p>
<pre><code>/node_modules
/vendor
/public/hot
/public/storage
/storage/*.key
.env
.env.backup
.phpunit.result.cache
Homestead.json
Homestead.yaml
npm-debug.log
yarn-error.log
/config/database.php
/public/sitemap.xml
</code></pre>
<p>When i login on my prod env and i upload images, they turn up fine, but i prefer sometimes to work from localhost to write content and push it to env.</p>
<p>I have also tried to:
git check-ignore -v -- path/to/file</p>
<p>To check why the file (image) is being ignored but it doesnt return anything.</p>
<p>I got one time a message with: Fatal: pathspec ... is beyond a symbolic link.</p>
<p>I hope someone can push me into the right direction. Thank you.</p>
","2","1352856","0","0"
"64516556","289767","2020-10-24 18:10:50","1","1086","<git><spring-boot><gitignore><spring-initializr>","Spring Initializr .gitignore intent (or making sense of the intent)","<p>I'm creating a new Spring Boot app. I'm more than moderately familiar with <code>.gitignore</code> patterns, but I see something deliberately templated that has the smell of &quot;intent&quot; on it. The below is produced by the Spring Initializr in many IDEs.</p>
<pre><code>target/
!.mvn/wrapper/maven-wrapper.jar
!**/src/main/**/target/
!**/src/test/**/target/
 ...
 ...
build/
!**/src/main/**/build/
!**/src/test/**/build/
</code></pre>
<p>I believe this has something to do with maven's multi-module project feature, but Initializr apps are not multi-module (at start). That aside, <strong>what I'm reading here?</strong> If I took a stab at what I think is being stated it is something I do not want to do (as a general practice).</p>
<blockquote>
<p>&quot;Ignore <code>target/</code> folders wherever encountered, but <code>target</code> folders
below the top-level in
<code>some/path</code><strong><code>/src/main/</code></strong><code>deeper/still</code><strong><code>/target/</code></strong> include
those.</p>
<p>&quot;Oh, do the same for NetBeans <code>build/</code> directories!&quot;</p>
</blockquote>
<p>This doesn't quite make sense. Why would I ever commit target content generated by the build? Thus I'm trying to deduce the intent of the Spring engineers.</p>
<p><strong>Update</strong></p>
<p>In fact, that's exactly what this does, includes <code>target</code> or <code>build</code> directories deeper in the root. <strong>To what end?</strong></p>
<pre class=""lang-sh prettyprint-override""><code>mkdir -p some/path/src/main/deeper/still/target/
touch !$/test.txt
</code></pre>
<p>This new <code>target</code> directory is included for staging and commits. Remove this and it's ignored.</p>
","1","289767","",""
"27995429","658087","2015-01-17 01:58:04","0","41","<git><gitignore>","How can I easily 'assume-unchanged' subdirectores in git?","<p>First let me say that the <code>.gitignore</code> feature is not what I'm asking about.  I have some particular directories that must be munged before cross-platform building.  These are library things that will not change for me on a day-to-day basis.  <a href=""https://help.github.com/articles/ignoring-files/"" rel=""nofollow"">I learned</a> that the way to do this is </p>

<pre><code>git update-index --assume-unchanged
</code></pre>

<p>which indeed is fine, except that it doesn't understand wildcards or interpret a directory name to include everything under it. (well, half-fine; see below)</p>

<p>It would be handiest if I could just give it the top of the tree that contains library stuff that won't change for me, one name.  But, that doesn't work. </p>

<p>It also isn't really the feature for doing that. It prevents spam in the Unstaged Changes, but it also doesn't stop git from putting everything back the way <em>it</em> wants it, from time to time.</p>

<p>Is there some way to do that, or a better way to accomplish what I'm wanting?</p>
","0","658087","",""
"10004693","854987","2012-04-04 03:52:02","1","2685","<gitignore>","Trouble getting .gitignore files to work on OSX and Tower git GUI","<p>I have a cache directory I'm trying to have ignored by git which lives in my CMS's root directory here:</p>

<pre><code>/files/cache/
</code></pre>

<p>I've tried the following variations in a .gitignore file at the root of the project:</p>

<pre><code>/files/cache
/files/cache/*
files/cache
files/cache/*
</code></pre>

<p>But the files still show up in Tower ready to be staged - the only other thing I can think of is that I'm using comments in the file like this:</p>

<pre><code># comment
/files/cache
</code></pre>

<p>Just not sure what I've missed sorry - any help would be much appreciated</p>
","0","854987","",""
"46283059","4452004","2017-09-18 15:27:49","0","376","<django><git><python-3.x><gitignore>","python3 django gitignore project/bin and project/include?","<p>I have a django project called sibs. I'm currently upgrading it to use python3. I noticed that there is a bin and include folder inside my projects folder (~/projects/sibs/sibs) where all the settings and url_confs go.</p>

<p>Should these be in the gitignore? I looked at some examples and they weren't but I find it hard to believe that the bin should be tracked by git. I just want to double check. I assume these will be regenerated upon run-time.</p>

<p>EDIT
My folder hierarchy is like so (I'm using virtualenvwrapper):</p>

<pre><code>~
   | projects
       | sibs
           | sibs
               | settings.py
               | urls.py
               | bin
               | include
           manage.py
   | envs
       | sibs
           | *environment-stuff*
</code></pre>
","0","4452004","",""
"46289616","6575139","2017-09-18 23:34:45","0","526","<git><gitignore>","User specific files to exclude in git","<p>I have been using git for some time now. For my project, I have created a <code>.gitignore</code> file which works well. As the project grows, I have started creating some files of my own (logs, scripts and so on) which I don't want to include in the repository. As of now, when I type <code>git status</code>, I see these files listed and I simply ignore them (which becomes more and more annoying as the list grows). The problem is that I also don't want to pollute the repo's public <code>.gitignore</code> file by adding all my personal stuff to it.</p>

<p>Is there a way to hide these files when I <code>git status</code>?</p>

<p>I have looked for some <code>#include</code>-like directive which all user could use to insert a personal list, but have found nothing so far. Does such an option exist?</p>
","5","6575139","",""
"46290325","4492772","2017-09-19 01:16:00","1","973","<git><directory><gitignore>","gitignore all folders under any folder","<p>I have this structure:</p>

<pre><code>versions
├── library-3.1
│   ├── Dockerfile
│   ├── options
│   └── armhf
│       ├── Dockerfile
│       └── rootfs.tar.xz
├── library-3.6
│   ├── Dockerfile
│   ├── options
│   └── x86_64
│       ├── Dockerfile
│       └── rootfs.tar.xz
...
</code></pre>

<p>I want git to ignore any folder under <code>versions/**/</code> (like <code>versions/**/armhf</code> and <code>versions/**/x86_64</code>), but keep tracking the files <code>options</code> and <code>Dockerfile</code></p>

<p>Any ideas? Thanks!</p>
","0","4492772","0","0"
"46294183","7984963","2017-09-19 07:13:28","2","5119","<git><gitignore>","laravel gitIgnore doesn't ignore my folder","<p>I would like to ignore whole 'public' folder, I added this manually to my gitIgnore file, but still when I commit I can see things from this folder. How to do to file gitignore start ignore this?</p>

<p>My gitignore looks like this:</p>

<pre><code>/vendor
/node_modules
.env
composer.lock
/public
/.idea
.phpstorm.meta.php
_ide_helper.php
npm-debug.log
package-lock.json
.gitattributes
</code></pre>
","5","7984963","0","0"
"65166214","13165629","2020-12-06 08:43:45","0","443","<python><git><gitignore>","Adding lib64 to .gitignore doesn't ignore the directory","<p>Made a new virtual environment using venv.</p>
<pre class=""lang-sh prettyprint-override""><code>python3 venv ./
</code></pre>
<p>It created multiple directories, one of which is a directory named lib64.<br />
I then added all the directories created to my .gitignore file and everything is not being tracked except for the lib64 directory.</p>
<p>.gitignore file</p>
<pre><code>__pycache__/

bin/
include/
lib/
lib64/
share/

*.cfg
</code></pre>
<p>Yet it still shows when I run <code>git status</code></p>
<pre class=""lang-sh prettyprint-override""><code>On branch master
Untracked files:
  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)
    lib64
</code></pre>
","3","13165629","",""
"10405552","680578","2012-05-01 22:58:39","4","3467","<git><gitignore>","Can I use .gitignore_global to ignore file for all users over multiple repos?","<p>In my dev team, we have multiple projects spanned across several git repos. Those projects actually share a few common config elements. We have recently made a local change to one of our shared config files that none of us wish to commit to the production environment.</p>

<pre><code>/www/
|
|-- git repo 1 (containing shared config files)
|-- git repo 2 uses files from 1
|-- git repo 3 uses files from 1
|-- git repo n uses files from 1
</code></pre>

<p>While we were setting up a <code>.gitignore</code> file for each repo, I came across <code>~/.gitignore_global</code></p>

<p>Since <code>.gitignore_global</code> is in <code>~/</code>, its per user, right?</p>

<p>Should I have each developer implement their own .gitignore_global file, or can I apply the regular .gitignore to all of them so it can be committed globally?</p>
","0","680578","0","0"
"46631565","8740919","2017-10-08 13:21:17","0","217","<git><phpstorm><gitignore>","Git does not track the .gitignore exception folder","<p>At the root of the project is <code>.gitignore</code> and the <code>vendor</code> folder. The <em>gitignore</em> file contains:</p>

<p><code>!vendor/folder</code> - except the folder in the vendor.</p>

<p><code>vendor/</code> - exclude the entire vendor,</p>

<p>Git does not track changes to files in the <code>vendor</code> except one - <code>folder</code>. Everything is as it should be.</p>

<p><strong>Problem</strong>: Git does not see the new files when I create them, just noticed. </p>

<p>I'm using PhpStorm and it usually suggests adding a new file to the git, but not for new files in the <code>folder</code>, similarly the console does not see new files. </p>

<p>The question is solved directly by the <code>gid add</code> command with the <code>-f</code> option, and warns in advance that the file is in a <code>folder</code> that is excluded (!) By one of the ignore files.</p>

<p>How to fix the situation and what's the problem?</p>
","4","8740919","",""
"65195417","1390723","2020-12-08 08:21:29","0","80","<bash><git><gitignore>",".gitignore Blacklist all by default & manually whitelist pattern not working","<p>I'm coding a utility for generating .gitignore files. I'm starting with the whitelist pattern of excluding all by default and then using <code>!</code> <a href=""https://git-scm.com/docs/gitignore#_pattern_format"" rel=""nofollow noreferrer"">(not/negative) rules</a> to permit paths back in.</p>
<p>Example of a generated <code>.gitignore</code>:</p>
<pre><code># Blacklist all by default
*

# Then whitelist what want to track
!.bashrc
!.gitconfig
!.gitignore
!.nvidia-settings-rc
!.p10k.zsh
!.profile
!.zprofile
!.zshrc
!bin/gitignoregen
!credentials.json
!.config/autokey/
!.config/VSCodium/User/snippets/
</code></pre>
<p>but then running <code>git add .config/autokey</code> shows:</p>
<pre><code>The following paths are ignored by one of your .gitignore files:
.config/autokey
</code></pre>
<p>where <code>.config/autokey</code> is a directory containing some files and a subdir. What's going on here and how can I ensure the desired effect?</p>
","5","1390723","",""
"28437592","638893","2015-02-10 17:07:04","0","200","<git><jenkins><gitignore><git-add>",".gitignore to retain one file","<p>I'm trying to create a cronjob to backup all my Jenkins configuration in git. The only thing I need to be tracked in my repository is the <code>config.xml</code> in every Jenkins project. The file system is structured like <code>../jenkins/jobs/[PROJECTNAME]/config.xml</code>. The <code>.git</code> is located in jobs.</p>

<p>I don't want to explicitly ignore all other folder/files, but allow only the <code>config.xml</code> in that location. I came up with the following working solution:</p>

<pre><code>*

!.gitignore
!config.xml
!*/

*/workspace
*/modules
/config-history
*/config-history
*/*/config-history
*/*/*/config-history
*/*/*/*/config-history
*/*/*/*/*/config-history
*/*/*/*/*/*/config-history
*/*/*/*/*/*/*/config-history 
</code></pre>

<p>Unfortunate there are many projects and the <code>git add .</code> takes a while. Ignore <code>workspace</code>, the directly with most files in, didn't add any benefit.</p>

<p>Btw. the intuitive and short way didn't work at all:</p>

<pre><code>*
!.gitignore
!*/config.xml
</code></pre>

<p>Any ideas to either optimize my .gitignore or my git add without listing all files in either case?</p>
","0","638893","",""
"10475273","47633","2012-05-06 23:49:54","94","23715","<git><github><gitignore>","git: have different .gitignore file for each remote","<p>I have a remote repo in which I want to commit certain files (the compiled files to deploy them on a cloud computing platform), but I don't want to deploy them on github...</p>

<p>is there some way to have to different .gitignore files, one for each remote?</p>
","5","47633","0","0"
"28762493","1354768","2015-02-27 10:10:51","1","4445","<git><jenkins><gitignore>",".gitignore for Jenkin's config files","<p>I'm using this <code>.gitignore</code> in the Jenkins directory:</p>

<pre><code>*
!.gitignore
!jobs/*/config.xml
jobs/**/modules**/config.xml
</code></pre>

<p>But everything is ignored by Git. What am I doing wrong?</p>

<p>New Version regarding this <a href=""https://stackoverflow.com/questions/9162919/whitelisting-and-subdirectories-in-git/9227991#9227991"">answer</a>- works almost fine:</p>

<pre><code>#Ignore everything
*
#Don't ignore directories
!*/
#Don't ignore these files
!/.gitignore
!jobs/*/config.xml
!jobs/**/modules**/config.xml
</code></pre>

<p>But .gitignore files in subfolders aren't ignored. I want to except only the root .gitignore.</p>
","4","1354768","",""
"46994014","4451931","2017-10-28 20:10:48","14","23485","<git><gitignore><rider>","Using .gitignore with Rider IDE","<p>How can I add <code>.gitignore</code> to my solution in Rider? When I right click on my solution under New, I cannot see anything related to adding <code>.gitignore</code> file. Any help would be appreciated.</p>
","0","4451931","0","0"
"28791020","3913991","2015-03-01 07:01:58","3","411","<git><gitignore><git-fetch>","What if .gitignore ignore itself? Does it affect on ""git fetch""?","<p>Suppose this scene</p>

<ol>
<li>A git server of some sources codes and some elf binary files</li>
<li>This server has no <code>.gitignore</code> file.</li>
<li>I don't know what new binary file will be added to the git server</li>
<li>Every time i build the codes, it will create some new elf binary files.</li>
<li>Since there is no <code>.gitignore</code> file, after building, i can't <code>git fetch</code> or <code>git pull</code> because git will promopts <code>changes not committed</code></li>
</ol>

<p>So i want to solve this, but i can't just make a <code>.gitignore</code> with <code>*.elf</code> because there are some elf files released with git server.</p>

<p>Of course i can't tell <code>.gitignore</code> don't ignore these elf files released with git server because there may be some new elf binary files added to git server in the future</p>

<p>So, what if i create <code>.gitignore</code> that ignore itself, so it won't be pushed to git server, but will it affect my <code>git fetch</code> process? If there is two differenct <code>.gitignore</code> rules in server and in my local computer, which one will <code>git fetch</code> obey?</p>

<p>And how can i solve my problem?</p>
","5","3913991","",""
"28791819","104158","2015-03-01 09:08:41","1","54","<git><meteor><gitignore>","How to work with meteor, git and different dev platforms?","<p>I am on Windows; another developper is on linux.
My release and versions files are not the same as his.</p>

<p>With Git, how can we do development on the same project but on different platforms? What is the strategy? Do we keep local versions of ""release"" and ""versions"" and ignore the two files in Git?</p>
","0","104158","",""
"28792493","571194","2015-03-01 10:29:23","2","222","<git><gitignore><asp.net-core>","Should I add *.kproj.user to gitignore","<p>With a new ASPNET5 project, there is a <code>.kproj.user</code> file which <em>seems</em> to contain user-specific properties for the new project.</p>

<p>Should this file be added to my <code>.gitignore</code>? Or could there be something in this file which would prevent the project from being built on another machine?</p>
","0","571194","0","0"
"47024319","2939675","2017-10-30 21:18:57","0","187","<git><dreamweaver><gitignore>","Git in Dreamweaver: gitignore entire site minus a few specific files","<p>I do a lot of work with CMS like Wordpress, joomla, Open Cart, etc. and I use Dreamweaver as my IDE for the most part.</p>

<p>DW now supports git, but I am having an issue with applying gitignore to most of the files in the local site. Especially in sub/sub/directories.
Ideally, I'd want to gitignore the entire site and then exclude the files in the template directory and the other few areas where I usually interact with the code.</p>

<p>Is there a way in gitignore itself to specify something like:
/directory/ all files (regardless of type)</p>

<p>In fact, it would be a nice thing to know in general when working with CMS frameworks where interaction is limited to a small subset of files and the rest of the files should be ignored.</p>

<p>And before you ask, yes, I could remove those files from my local copy of the server files, but often I need to have them locally as I need to trace or manage them, for instance in case of creating overrides in Joomla, I need to refer to the original file, then create a new file elsewhere to override it. My workflow usually requires that I keep the local and remote files synchronized also in case I need to run the site locally. Therefore a way to gitignore the entire site and then remove only a directory or two from gitignore would be really handy.</p>

<p>Thank you</p>
","0","2939675","",""
"65570647","491894","2021-01-04 22:23:30","0","201","<git><gitignore>","Negating a pattern in gitignore isn't working","<p>I have a top level .gitignore that ignores files with 'txt' extension--the pattern I'm using is <code>*.txt</code>.</p>
<p>I have a number of subdirectories that have '.txt' files that I want to commit, while still keeping the general restriction in place.</p>
<p>I have tried putting the following negated patterns in various instances of .gitignore; in each directory, in a higher directory that contain those directories, and in the top level for the repository. None of them work.</p>
<pre><code>!*.txt
!doc/*.txt
!**/doc/*.txt
</code></pre>
<p>What am I doing wrong?</p>
<p><strong>Edit</strong>: I should note that I'm having this problem with GitForWindows as well as a standard git install on linux. This is my top level <code>.gitignore</code> file.</p>
<pre><code>auth/*
systemlock/*
work/*
.project
.classpath

*.txt

# Allow vim plugin doc files
# GAHH! Why isn't this working?!!??1!!
#!**/docs?/*.txt
#!docs?/*.txt
#!docs?/*.txt
#!doc/*.txt

*~
*.log
*.tar
*.tar.gz
.*.sw[a-z]
*.WIP
.nfs*

# Security files should not be stored in a repository
authfile*
.authfile*

run.out
</code></pre>
<p>The path to the doc directories I'm trying to include do <strong>not</strong> include the words <code>auth</code>, <code>systemlock</code> or <code>work</code>.</p>
<p>I tried the commented patterns in a <code>.gitignore</code> file in the directory immediately above the files I want to unignore, but had the same problem. The path to that location, relative to the top level, is <code>dotfiles/.vim/bundle</code>.</p>
","7","491894","",""
"28801528","3236788","2015-03-02 01:46:10","0","135","<git><gitignore>","gitignore [^.]* vs *","<p>In <code>.gitignore</code> inside a sub-directory I usually use <code>*</code> alone if I want everything in that sub-directory to be ignored. I recently read that I should use <code>[^.]*</code> for this purpose. Is there any difference between these two?</p>

<p>This is <a href=""http://blog.blenderbox.com/2014/04/16/gitignore-everything-inside-a-directory/"" rel=""nofollow"">the blog</a> that I was reading.</p>
","1","3236788","",""
"10879783","131120","2012-06-04 10:24:16","95","24353","<git><gitignore>","git doesn't ignore 2 specifically named files","<p>I want to automatically exclude 2 files from committing, that are part of the git repository but have some changes, that shouldn't be part of the github repo, because they have some changes that are only meaningful to my local system and not the other developers.</p>

<p>I added them to <code>.git/info/exclude</code> in the hopes git understands that he shouldn't commit changes to them:</p>

<pre><code># git ls-files --others --exclude-from=.git/info/exclude
# Lines that start with '#' are comments.
# For a project mostly in C, the following would be a good set of
# exclude patterns (uncomment them if you want to use them):
# *.[oa]
a.conf
b.conf
# *~
</code></pre>

<p>but <code>git status</code> still lists them as staged for committing:</p>

<pre><code># On branch master
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#   modified:   build/conf/a.conf
#   modified:   build/conf/b.conf
#
</code></pre>

<p>I don't want to unstage them regularly with every commit (one time I might just forget), how can I do that?</p>
","3","131120","0","0"
"28833102","896627","2015-03-03 13:31:25","0","71","<git><gitignore><branching-and-merging>","Can I exclude a file in a git repo from branching?","<p>I have a file (specifically my .gitignore file) in the repo that I want to track and push to a central repository, so others will receive a copy when cloning the project.</p>

<p>But I want to exclude the file from being duplicated by branching. I want to have only one version stable in all branches, so when I change it in one, I don't have to commit and merge (or cherry-pick) this change to all other branches manually. </p>

<p>Is there a way to achieve this with git?</p>
","5","896627","",""
"47076716","930928","2017-11-02 13:36:56","8","5650","<git><github><reporting-services><gitignore><ignore>","Which reporting services file types are safe to ignore on git?","<p>I looked this up and almost every answer linked to a <a href=""https://github.com/github/gitignore"" rel=""noreferrer"">gitignore repository</a> or a <a href=""https://www.gitignore.io"" rel=""noreferrer"">website</a>. However, upon inspection I've found that it doesn't ignore files that I'm  having problems with.</p>

<p>The files in question are:</p>

<ul>
<li>PROJECTNAME <strong>.rds</strong> </li>
<li>Reports <strong>.rptproj.user</strong></li>
<li>Reports <strong>.rptproj.rsuser</strong>  </li>
<li><strong>.smss_suo</strong></li>
</ul>

<p>Which of these files are safe to ignore? Which are not? And for what reasons?</p>

<p>Thanks!</p>
","1","930928","0","0"
"65620454","","2021-01-07 21:51:04","0","170","<git><github><gitignore>","eslintcache gets automatically uploaded to github, how to prevent it?","<p>when uploading something to my Git hub repository, this '.eslintcache' gets also there, what it is and how to put this to '.gitignore' ? just copy pasting its name there ?</p>
","10","","",""
"29200658","1495015","2015-03-22 22:33:43","0","438","<git><github><gitignore>","How to make second .gitignore file work?","<p>So I have a github repo with a 2nd .gitignore file that doesn't seem to be working here:</p>

<p><a href=""https://github.com/WalnutiQ/WalnutiQ/blob/feature-issue_169/src/main/java/model/util/javaHeapTracker/.gitignore"" rel=""nofollow"">https://github.com/WalnutiQ/WalnutiQ/blob/feature-issue_169/src/main/java/model/util/javaHeapTracker/.gitignore</a></p>

<p>This is the contents of the file:</p>

<pre><code>heaptrace  
heaptrace.dat  
heaptrace.gclog  
</code></pre>

<p>However when I am in the folder src/main/java/model/util/javaHeapTracker
and type <code>git status</code> I get the following:</p>

<pre><code># On branch feature-issue_169
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       heaptrace
#       heaptrace.dat
#       heaptrace.gclog
</code></pre>

<p>How do I change my .gitignore file to ignore these 3 files? My first .gitignore file is here: <a href=""https://github.com/WalnutiQ/WalnutiQ/blob/master/.gitignore"" rel=""nofollow"">https://github.com/WalnutiQ/WalnutiQ/blob/master/.gitignore</a> if that helps</p>
","1","1495015","",""
"29209471","279712","2015-03-23 11:49:17","3","140","<git><git-submodules><gitignore><subdirectory><git-subtree>","Completely independent Git project within another project using only gitignore","<p>Is it possible to work with two <strong>independent</strong> git projects, one within another in the directory tree and separate them using only gitignore (<em>without <a href=""https://stackoverflow.com/questions/1811730/how-do-i-work-with-a-git-repository-within-another-repository"">submodules</a> or <a href=""https://stackoverflow.com/questions/720669/projects-within-projects-using-git"">subtrees</a></em>)?</p>

<p>Here is the folder structure:</p>

<pre><code>repo_a     &lt;-- repository A folder
   /.git
   /folder_1
   /folder_2
   /repo_b    &lt;-- repository B folder (to be ignored by repository A)
       /.git
       /folder_3
       /folder_4
</code></pre>
","2","279712","",""
"65963542","7561045","2021-01-30 00:45:30","1","33","<unity-game-engine><voip><gitignore>","Appropiate gitignore for a vivox unity project?","<p>Anyone know what the appropriate .gitignore for unity project using the vivox plugin? I couldn't find any reference in the documentation.</p>
","4","7561045","",""
"29218941","2969567","2015-03-23 19:40:33","0","95","<node.js><git><gitignore>","How to add ignored files from develpoment branch to a deploy branch in git","<p>I have a particular issue that isn't quite covered by the scenarios I have found so far, <a href=""http://cogniton-mind.tumblr.com/post/1423976659/howto-gitignore-for-different-branches"" rel=""nofollow noreferrer"">here</a>, <a href=""https://stackoverflow.com/questions/1836742/using-git-how-do-i-ignore-a-file-in-one-branch-but-have-it-committed-in-another"">here</a> and <a href=""https://stackoverflow.com/questions/487753/how-to-realise-a-deployment-branch-in-git"">here</a> (amongst others). </p>

<p>I have a node.js project and have decided not to include the node_modules directory in my git repo (<a href=""https://stackoverflow.com/questions/18128863/should-node-modules-folder-be-included-in-the-git-repository"">Here</a> are some arguments for and against). However, I am setting up a regular deployment to a testing server and for this I would like to deploy the complete application, with the dependencies loaded (maybe in future I will also include the node server too, but for now just the dependencies). </p>

<p>So I create a test-deploy branch, on which I ignore the vagrant folder, some static pages, etc. I include the node_modules by removing it from the .gitignore file and then push the branch to a remote repository where I have set up hooks to inform my test-server there is a new deploy and it should pull from the remote. </p>

<p>How do I now go about checking out my development branch again? I have tried to add the node_modules back to the .gitignore file but when I checkout my development branch git (rightly so) removes all my node modules as they are not seen as part of the project. </p>
","0","2969567","",""
"47434616","5212186","2017-11-22 12:21:44","1","657","<git><heroku><laravel-5><gitignore>",".gitignore not working on heroku","<p>I am not able to stop pushing files to heroku server even mentioned in .gitignore file of laravel 5.2. Below is my gitignore file. I want to stop pushing images of <strong>""public/assets/images""</strong> folder to override old images.</p>

<pre><code>public/assets/images
node_modules
public/storage
storage/*.key
vendor
*.idea
Homestead.json
Homestead.yaml
*.env
npm-debug.log
yarn-error.log    
</code></pre>
","0","5212186","",""
"47438224","3994550","2017-11-22 15:18:52","-5","56","<git><gitignore>","Git won't add file I am changing and there is no gitignore","<p>I have this file inside my project, and no matter how many changes I make to it, git won't add the change. </p>

<p>There is no .gitignore file. And the file is inside the project. I did try --force and I tried git add --all. Nothing helps. I do remember using git add on the entire directory where the file is. Maybe that's the problem. </p>
","4","3994550","",""
"47441267","5701790","2017-11-22 18:04:43","1","805","<git><amazon-web-services><github><amazon-ec2><gitignore>","Cloning a github repository with .gitignore","<p>I have a public repository with my <code>index.js</code> file in <code>.gitignore</code>. I want to clone this for use in AWS EC2 using the command line. The problem is: the <code>index.js</code> file doesn't get cloned over, so the app doesn't work. How do I get around this problem without having to get rid of my <code>.gitignore</code>?</p>
","1","5701790","",""
"47441702","632195","2017-11-22 18:33:49","1","625","<git><gitignore><atlassian-sourcetree>","Source tree .gitignore to ignore everything but specific directories/files","<p>I've seen many <a href=""https://stackoverflow.com/questions/5241644/using-gitignore-to-ignore-everything-but-specific-directories"">examples</a> and they pretty much say the same but for some reason I cannot get it to work using SourceTree.
My folder structure shown below, i want to ignore everything except for folder3 and all it's content, folder2_3_2_1, all it's content and the .ignore file.</p>

<pre><code>folder1
folder2
   folder2_1
   folder2_2
   folder2_3
     folder2_3_1
     folder2_3_2
          folder2_3_2_1
             someOtherFile1.php
             someOtherFile12php
             someNewFolder
     folder2_3_3
   folder2_4
folder3
.ignore
somefile.php
somefile2.php
</code></pre>

<p>in my .ignore I have the following</p>

<pre><code># Ignore everything
/*

#except for
!.gitignore
!folder3/
!folder2/folder2_3/folder2_3_2/
</code></pre>

<p>Strange thing is, if I don't ignore anything and I'm able to see all my files in my unstaged files panel, if I right click and ignore someOtherFile.php and select the option to ignore everything beneath, it does the opposite, sourceTree ignores it's folder (i.e. folder2_3_2_1) and everything within!</p>

<p>SourceTree V 2.3.1.0</p>

<p>Thank you in advance</p>
","0","632195","",""
"47455773","7646621","2017-11-23 12:38:40","0","51","<git><gitignore>","Is there a convenient way to add all the files exclude the files in .gitignore?","<p>I want to use git to add all the files under the repo exclude the .gitignore contains:</p>

<p>I use <code>git add *</code>, but it will says:</p>

<pre><code>$ git add *
The following paths are ignored by one of your .gitignore files:
media
venv
Use -f if you really want to add them. 
</code></pre>

<p>I don't want to add them, and I just want to add the all files exclude the .gitignore write. and looking for a simple way to do that, like <code>add *</code>, but it reports the upper issue. so in my case, I only can add one by one. </p>

<p>Is there a convenient way to realize that?</p>
","0","7646621","",""
"66003756","12485992","2021-02-02 04:42:26","0","229","<android-studio><gitignore>","is it wrong to add folder like *folder in .gitignore file?","<p>I have 3 flavours in android studio.
when I create any flavour apk then release folder with apk(+somefile) generated under respected flavour folder and this considers as an unversioned file for git.
because
I don't want in git so I added *release in .gitignore file
is it the wrong way to do?
will it create problem in future?</p>
<pre><code>myApp
    - .gradle
    - .idea
    - build
    - app
        - build
        - flavour1
            -release
                -app-flavour1-release.apk
                -output-metadata.json
        - flavour2
            -release
                -app-flavour2-release.apk
                -output-metadata.json
        - libs
        - src
            - flavour1
                - somefile
            - flavour2
                - somefile
            - main
            - test
            - androidTest
            - .gigignore
            - build.gradle
            - proguard-rules.pro
            - releasekeystore.jks
        - .gigignore
        - build.gradle
    - openCVLibrary3410
        - build
        - src
        - .gigignore
        - lint.xml
    - scanlibrary
        - build
        - src
        - .gigignore
        - build.gradle
    - .gigignore
    - build.gradle
    - somefile..
</code></pre>
","0","12485992","",""
"29260817","755393","2015-03-25 16:09:25","0","28","<git><gitignore>","Check which commited files can be .gitignore'd now","<p>Is possible I check which commited files can be .gitignore'd now? For instance, I commited <code>a.tmp</code> in an old commit, but now I create a rule like <code>*.tmp</code> on <code>.gitignore</code> and I like to untrack this old files. I like to know which files are this and how I can untrack it.</p>
","1","755393","0","0"
"29261698","2837586","2015-03-25 16:50:03","0","63","<git><heroku><gitignore>","Include the git config file under the .git folder","<p>I have a code repo that has multiple remotes, and the remotes were configured locally on my computer.</p>

<p>After pushing the code to origin and having a colleague pull the code, I have to set up the list of remotes again.</p>

<p>Is there a way to include the .git/config file as part of the repo's commits?  If not, would be happy to hear other recommendations too.</p>

<p>FYI, I've tried both adding the include path as suggested <a href=""https://stackoverflow.com/questions/1557183/is-it-possible-to-include-a-file-in-your-gitconfig"">here</a> as well as adding the !filename line to .gitignore, to no effect.  </p>

<p>Thanks ahead for your help/suggestions.</p>
","0","2837586","",""
"29269356","2060292","2015-03-26 01:06:14","4","2338","<git><gitignore>","git ignore to folder end with the same string","<p>I am using git 1.9.5 and have some folders which are end with the same string.</p>

<p>e.g.</p>

<pre><code>a.Rcheck
b.Rcheck
c.Rcheck
</code></pre>

<p>I have tried .*Rcheck, but seems not work for me.</p>

<p>How could I use git rules to ignore it?</p>

<p>Thanks for any suggestion. </p>
","3","2060292","",""
"11376418","527962","2012-07-07 15:49:29","1","1728","<git><git-submodules><gitignore>","git - Submodule issue with .gitignore","<p>I'm having the following error:</p>

<blockquote>
  <p>git.exe submodule add  -- ""D:/Programming/boost_1_50_0"" 
  ""C:/Users/qwerty/Documents/Visual Studio 2010/Projects/framework""</p>
  
  <p>The following path is ignored by one of your .gitignore files:
  C:/Users/qwerty/Documents/Visual Use -f if you really want to add it.</p>
  
  <p>git did not exit cleanly (exit code 1)</p>
</blockquote>

<p>none of my gitignore files specifies <em>C:/Users/qwerty/Documents/Visual</em> even remotely.</p>

<p>When I try the -f flag I get the following message:</p>

<blockquote>
  <p>Adding existing repo at 'C:/Users/qwerty/Documents/Visual Studio
  2010/Projects/ framework' to the index fatal:
  'C:/Users/qwerty/Documents/Visual Studio 2010/Projects/framework' is
  outs ide repository Failed to add submodule
  'C:/Users/qwerty/Documents/Visual Studio 2010/Projects/ framework'</p>
</blockquote>
","5","527962","",""
"29952519","3291506","2015-04-29 19:11:12","0","245","<git><gitignore>","How to ignore everything except a folder and all it's subfolders / contents in git","<p>In my <code>.gitignore</code> I have:</p>

<pre><code>*
!file.txt
!folder1
!folder1/
!folder1/*
</code></pre>

<p>This almost does what I want except whenever I add something beyond one folder past <code>folder/</code> it does not get committed. For instance <code>folder1/test/folder2/test.txt</code> will not be committed.  Is there any way to fix this without adding endless <code>*</code> to my <code>.gitignore</code>?</p>
","0","3291506","",""
"12332069","631619","2012-09-08 15:37:00","4","3361","<git><gitignore>","gitignore - how to ignore .idea/ directory for rubymine","<p>I've placed .idea/ in both my <code>~/.gitignore_global</code> and in my projects specific <code>.gitignore</code> file (and committed the later) but I still see the file as unstaged.</p>

<p>How can I really ignore these files?</p>

<p>I've done this:</p>

<pre><code>git config --global core.excludesfile ~/.gitignore_global 
</code></pre>

<p>but it didn't help.</p>

<p>the filename is ok:</p>

<pre><code>$ ls ~/.gitignore_global
/home/durrantm/.gitignore_global
</code></pre>

<p><img src=""https://i.stack.imgur.com/NLmuv.png"" alt=""enter image description here""></p>
","0","631619","0","0"
"29970885","2391849","2015-04-30 14:48:49","95","34562","<cordova><gitignore>","Cordova 5.0.0: Which files should I commit to git?","<p>I use Cordova 5.0.0 and i have the following project structure:</p>

<pre><code>MyProject
    - hooks
    - platforms
    - plugins
    - resources
    - www
    - config.xml
</code></pre>

<p>My question now is: Which of these folders can I omit? I ask it because I work on three different platforms. I Develop on linux for android, windows for windows phone and on mac for ios. If I commit the whole project I always get warnings and error for the not supported platforms.</p>

<p>What I want is a minimalistic git repository.</p>

<p>One problem for example are the plugins. When I delete the plugin folder from the repository I have to add them on each of my developing platform manually.</p>

<p>Another problem is the resources folder. I automatically generate icons and splashscreens using ionic. When I now try to build the project on ios, it is complaining about the images for android.</p>

<p>So what do I need and what can I omit?</p>
","0","2391849","0","0"
"12337072","1542339","2012-09-09 06:40:55","0","73","<git><svn><version-control><gitignore><svnignore>","how to make svn or git only monitor a list of files, but ignores anything else","<p>for example there are lots of files in one directory, but i only want to monitor Makefile and rules.mk ... , what i should input to .gitignore or .svnignore?</p>

<pre><code>ls
bin        Config.in  docs                include  **Makefile**  Packages     README.SDK  scripts      target
build_dir  dl         feeds.conf.default  LICENSE  package   Packages.gz  **rules.mk**    staging_dir  tmp
</code></pre>
","0","1542339","",""
"12341207","1565284","2012-09-09 17:22:24","0","511","<git><version-control><project-management><gitignore>","gitignore globbing or RE?","<p>I have a little trouble with some auto generated binary files in my project.</p>

<p>So, I have 2 questions:</p>

<p>1)Does gitignore ( the file from a git repository which says which files should not be tracked) uses globbing or regular expressions ?</p>

<p>2)FOr files that are included in gitignore, but are already tracked, do they become untracked ?</p>
","0","1565284","",""
"66311275","5696601","2021-02-22 07:00:01","1","660","<git><powershell><gitignore>","Exclude large files from git respository","<p>I would like to tell git not to commit files larger than 250 MB to my remote repository.</p>
<p>First, initiated the repository:</p>
<pre><code>cd existing_folder
git init
git remote add origin https://git.xxx.com/username/repository_name.git
</code></pre>
<p>Next, I would like to tell git, not to commit files larger than 200 MB to my remote repository. For this, I came across <a href=""https://stackoverflow.com/a/22108679/5696601"">this</a> answer on Stackoverflow which suggests to run the following code.</p>
<pre><code>echo &quot;# Files over 250mb&quot; &gt;&gt; .gitignore
find * -size +250M -type f -print &gt;&gt; .gitignore
</code></pre>
<p>However, when I run the code in Windows PowerShell ISE it says</p>
<pre><code>PS C:\Users\Username\Rep&gt; find * -size +250M -type f -print &gt;&gt; .gitignore
find : FIND: Parameter format not correct
At line:1 char:1
+ find * -size +250M -type f -print &gt;&gt; .gitignore
+ ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    + CategoryInfo          : NotSpecified: (FIND: Parameter format not correct:String) [], RemoteException
    + FullyQualifiedErrorId : NativeCommandError
</code></pre>
<p>Next I would have just run the following code. As I understand, in theory, from now on git would always exclude files larger than 250 MB.</p>
<pre><code>git add .
git commit -m &quot;Initial commit&quot;
git push -u origin main

</code></pre>
<p>How can I correctly tell git not to commit files larger than 250MB to my remote repository?</p>
","1","5696601","",""
"12390194","514176","2012-09-12 14:14:44","1","294","<git><version-control><gitignore>","Are there any bad side effects by ignoring .gitignore?","<p>Example .gitignore:</p>

<pre><code>.gitignore
.DS_Store 
.project
.pydevproject
...
</code></pre>

<p>Is it bad to add .gitignore?  I don't need it tracked and I don't like clutter.  </p>

<p>An acceptable answer is, ""You are being a whiny brat who gets annoyed at things that shouldn't ruffle your feathers.  So knock it off your wasting our time.""</p>

<p>Thanks for the suggestions!</p>
","0","514176","",""
"30033613","1250021","2015-05-04 15:12:56","8","614","<android-studio><gitignore>","Change default gitignore file when creating a new project","<p>Is there a way to change the default file <code>.gitignore</code> that Android Studio creates when creating a new android project? I searched for it in the Settings but could not find anything. </p>
","0","1250021","0","0"
"66319508","5238942","2021-02-22 16:25:47","2","27","<gitignore>","gitignore > some ignored files still added to the repository","<p>I don't understand why ignored files are still added to the repository. Are there some circumstances when files which are in the .gitignore list, can be still added to the repository</p>
<p>I added directory to the <code>.gitignore</code> before I did anything with the project (project is clean, no trucked or untracked files). Then I built the project. During the build process some files were modified. When the build was done, most of the modified files were ignored, but some were added to the repository. I don't understand this git's selectivity.</p>
<p><a href=""https://i.stack.imgur.com/R7fu1.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/R7fu1.png"" alt=""enter image description here"" /></a></p>
","0","5238942","0","0"
"12431747","257527","2012-09-14 20:45:44","5","1859","<git><version-control><gitignore>","why .gitignore not works?","<p>my issue is not the same as <a href=""https://stackoverflow.com/questions/8156299/why-doesnt-gitignore-work-in-this-case"">Why doesn&#39;t gitignore work in this case?</a> nor <a href=""https://stackoverflow.com/questions/11451535/gitignore-not-working"">.gitignore is not working</a></p>

<p>files/conf.php is already in .gitignore, but git status still shows its modification, why?</p>

<p>i mean this file should not be tracked if it is in .gitignore...</p>

<pre><code>cat .gitignore
files/conf.php
[root@home blogmi]# git status
# On branch master
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       modified:   files/conf.php
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>
","2","257527","",""
"30893497","1177745","2015-06-17 13:45:28","0","431","<android><git><android-studio><gitignore>","Android Studio .gitignore file works in Mac OS X but not in Windows 7","<p>I am using this .gitignore file in Mac OS X for my Android Studio project:</p>

<pre><code>.gradle
/local.properties
/.idea/workspace.xml
/.idea/libraries
.DS_Store
/build
</code></pre>

<p>That works just fine there, but I have started using a Windows based machine where it seems this gitignore file is being ignored:</p>

<p><img src=""https://i.stack.imgur.com/f5Auy.jpg"" alt=""Files not ignored""></p>

<p>Any ideas why this is happening?</p>

<p>I have tried to modify forward slashes for back slashes, as Windows and Mac OS X represent paths in different ways, but it didn't work.</p>

<p>Thanks for your help.</p>
","6","1177745","",""
"13341374","274677","2012-11-12 09:43:02","16","54125","<git><ant><gitignore>","git ignore directories ""build"" and all their contents but not ""build.xml""","<p>I am using <strong>git</strong> in a project where <strong>Ant</strong> is the build system.
Since I do not wish to add ""build"" directories to <strong>git</strong> but need to add <strong>build.xml</strong> files I have resorted to the following two lines in my <strong>.gitignore</strong> files:</p>

<pre><code>build/
!build.xml
</code></pre>

<p>Is there a better / more concise way ?</p>

<p><strong>UPDATE:</strong>
turns out <strong>build.xml</strong> was ignored due to a <strong>.gitignore</strong> in a directory higher up the path. Once that was removed, <strong>build/</strong> correctly ignores only the build folder, not the <strong>build.xml</strong> file beside it.</p>
","2","274677","0","0"
"30907829","1058406","2015-06-18 06:18:41","29","69892","<git><gitignore><atlassian-sourcetree>","Sourcetree adding files in global .gitignore, not in repository .gitignore","<p>I am using SourceTree for my GIT repositories.</p>

<p>Today I need to ignore some files; when I added these files to ignore list from SourceTree's ""Ignore file"" menu and check local .gitignore file, the ignored files are not listed there. Instead these are listed in the global .gitignore.</p>

<p>How can I get SourceTree to add the files to the repository-specific .gitignore?</p>
","1","1058406","0","0"
"47947112","5970352","2017-12-22 20:37:51","0","80","<git><gitignore>",".gitgnore file but not when under a specific directory","<p>I have a Java project in which I am ignoring all jar files with the pattern in <em>.gitignore</em>:</p>

<pre><code>*.jar
</code></pre>

<p>However, there are dependency files in the folder <em>dependencies</em> which are jar files but I don't want to exclude them.
How do I setup the <em>.gitignore</em> for this?</p>
","2","5970352","",""
"30911877","5023370","2015-06-18 09:42:42","4","1711","<git><gitignore>","Add previously ignored git files. git add -f not working","<p>I used </p>

<pre><code>git status --ignored 
</code></pre>

<p>To check which files were ignored as follows : </p>

<pre><code> git status --ignored
# On branch SIT
# Ignored files:
#   (use ""git add -f &lt;file&gt;..."" to include in what will be committed)
#
#       web/sites/default/files/
</code></pre>

<p>So, that's fine. But when I use : </p>

<pre><code>git add -f web/sites/default/files/
</code></pre>

<p>And then use ""git status --ignored"" again it shows the same file. Even after adding these to a commit. </p>
","2","5023370","0","0"
"30912693","2639304","2015-06-18 10:20:31","0","264","<git><github><gitignore><gitattributes>","git add file to archive","<p>When I run this command, the files of my latest commit are <strong>saved to a ZIP</strong>.</p>

<pre><code>git archive -o ../code_version0.9.zip HEAD 
</code></pre>

<p>However <strong>the files</strong> in <code>node_modules</code> and <code>build/</code> <strong>are missing.</strong></p>

<p>That Is because my <code>.gitignore</code> is the following one:</p>

<pre><code>node_modules
build/
</code></pre>

<p><strong>How can I ignore files, but Include them In the archive?</strong> 
I looked into the documentation for <code>.gitattributes</code> but I couldn't find a include statement. </p>
","0","2639304","",""
"30945532","4434808","2015-06-19 19:05:03","4","1329","<git><github><commit><gitignore><git-commit>","Can git filter out certain lines before commit?","<p>I have a repo on github that I am working out of and I often have comments on my <code>.py</code> files that starts with the ""<code># TODO:</code>"" to keep a personal note of things to be done.</p>

<pre><code># TODO: do this &lt;code&gt;
</code></pre>

<p>I obviously do not want that to go in a commit.</p>

<p>I want GitHub to search all the files when I am about to commit them and not include lines that start with <code># TODO:</code></p>

<p>Does Git already do this? I know certain version control like perforce already have this feature. </p>

<p>Any thoughts?</p>
","1","4434808","0","0"
"66630777","7218182","2021-03-14 23:59:09","2","72","<git><github><gitignore>",".gitignore not ignoring file that hasn't been added to the repo","<p>I have a file in my git repo that has never been comitted or added with
<code>git add</code>. But .gitignore doesn't seem to work. This file is called</p>
<blockquote>
<p>bit_train_[3].json</p>
</blockquote>
<p>No previous commits contain this file.
In my .gitignore (same folder as this file) I added the line</p>
<blockquote>
<p>bit_train_[3].json</p>
</blockquote>
<p>If I use <code>git status -u</code> it says</p>
<blockquote>
<p>Untracked files: bit_train_[3].json</p>
</blockquote>
<p>Why is this file still visible?
I suspect that the brackets <code>[3]</code> in the file name might cause the issue but I'm unsure</p>
<p>There are other .json files that I want to keep in my repos so I can't use <code>*.json</code> in my gitignore</p>
","0","7218182","0","0"
"14037075","1140593","2012-12-26 06:58:49","0","888","<git><gitignore>","How to use conditions in gitignore","<p>I'm managing several <code>pdf</code> and <code>graffle</code> files with git. I want to add <code>pdf</code> files to repository only if <code>graffle</code> with same filename does not exists, e. g.</p>

<p>only add <code>foo.pdf</code> and <code>bar.graffle</code> into repository in the directory</p>

<pre><code>$ ls
foo.pdf
bar.pdf
bar.graffle
</code></pre>

<p>If such target can't be completed only with <code>gitignore</code>, is there any work arounds exist? </p>

<p><code>bar.pdf</code> can only be generated with <code>bar.graffle</code> through several steps in GUI, so I want to keep them on commit.</p>
","4","1140593","0","0"
"14041338","603003","2012-12-26 13:35:27","3","1144","<git><cakephp><version-control><gitignore>","Ignore modifications after git add -f","<p>I've just <em>downloaded</em> (not cloned!) CakePHP 2.2.4.
The directory containains a <code>.gitignore</code> file:</p>

<pre><code># only the relevant part here
/app/Config
/app/tmp
</code></pre>

<p>Now I executed these command because the directories (and their initial contents) <em>Config</em> and <em>tmp</em> would otherwise never been committed:</p>

<pre><code>git add -f Config
git add -f tmp
</code></pre>

<p>I have no problems with the <em>tmp</em> directory because no files are changed there, only new files will be created!</p>

<p>In contrast, I had to modify some files (e.g. database configuration) in the <em>Config</em> folder.
But Git now wants me to <code>git add</code> these modified files again!</p>

<p><strong>How can I ignore these modifications?</strong></p>

<p>I could also reinit the whole Git repo because I didn't created/modified too much.</p>

<p><hr />
<strong>My modifications to CakePHP for solving the actual problem</strong></p>

<p>My new <code>*.gitignore</code> file for CakePHP:</p>

<pre><code># removed: /app/Config/

# start edit
/app/Config/*
!/app/Config/Schema/
!/app/Config/*.default.php
# end edit

/app/tmp
/lib/Cake/Console/Templates/skel/tmp/
/plugins
/vendors
/build
/dist
.DS_Store
/tags
</code></pre>

<p>I've also suffixed all files in <em>/app/Config</em> with <em>.default</em>:</p>

<ul>
<li><p>acl.ini.default.php.</p></li>
<li><p>acl.default.php.</p></li>
<li><p>bootstrap.default.php.</p></li>
<li><p>core.default.php.</p></li>
<li><p>database.php.default --> database.default.php</p></li>
<li><p>email.php.default --> database.default.php</p></li>
</ul>

<p><strong>Edit:</strong> It's better to have <code>*.default.php</code> than <code>*.php.default</code> because this prevents outputting the file to the browser if <code>mod_rewrite</code> fails (though that's very unlikely).</p>
","0","603003","",""
"48414127","685760","2018-01-24 02:55:49","16","30761","<git><gitignore><git-bash>",".gitignore with wildcards for filenames","<p>My .gitignore file has the following entries. I am trying multiple things here as I can't seem to get my file ignored;</p>

<pre><code>WinAppSetup/*.exe
/WinAppSetup/*.exe
WinAppSetup/setup.exe
**/WinAppSetup/setup.exe
</code></pre>

<p>When I run <code>git status</code> from git bash, I still see;</p>

<pre><code>    modified:   WinAppSetup/setup.exe
</code></pre>

<p>What entry in my .gitignore will allow me to ignore this file? </p>

<p>After editing .gitignore, do I need to close and re-open git bash to have the .gitignore file re-read?</p>

<p><strong>UPDATE</strong></p>

<p>As per user2407038's comment, the issue was that the file already existed in the repository. I was able to remove the file locally, stage and then commit those changes and update my remote. A new build of the application then successfully ignored the file.</p>

<p>It seems I can also update my .gitignore file without having to close and re-open git bash too. </p>
","4","685760","0","0"
"48413265","1336427","2018-01-24 00:57:07","1","63","<git><gitignore>",".gitignore file not working properly","<p>I have the following .gitignore file:</p>

<pre><code># Ignore everything
*

# But not these
!.gitignore
!Code
!Materials
</code></pre>

<p>The intention is to ignore everything except the .gitignore file itself, and everything under the Code and Materials directories.  Somehow when I open SourceTree, the .gitignore file is properly excluded, but the Code and Materials directories are ignored.  What did I do wrong?</p>
","1","1336427","",""
"16423433","359862","2013-05-07 15:53:40","0","1659","<git><gitignore>","Dealing with .gitignore and Modified files","<p>I have a <code>Project/ProjectName.iml</code> file which is currently tracked as evidenced by</p>

<pre><code># Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#   modified:   Project/ProjectName.iml
</code></pre>

<p>Additionally my <code>.gitignore</code> contains entry of <code>*.iml</code></p>

<p>At this time, i'd like for git to no longer track <code>Project/ProjectName.iml</code> and ignore the fact that it was <code>modified</code>.</p>

<p>How can this be done please?</p>
","0","359862","0","0"
"16439398","1493269","2013-05-08 11:24:54","1","409","<git><git-branch><gitignore>","How to keep .gitignored files off my gh-pages branch?","<p>In my global <code>.gitignore</code> file I chose to keep my IDE folders out of my versioning. So in my <code>master</code> branch are folders like <code>.idea/</code> or <code>*.iml</code> files. If I now switch to branch <code>gh-pages</code> git keeps those IDE specific files and I'm ending up with <code>/index.html</code>, <code>/src/.idea/</code>, <code>/sample/.idea/</code> on that branch even though I don't want the IDE configuration to appear on <code>gh-pages</code>.</p>

<p>What's the best way to tell git to drop these files on that branch?</p>
","0","1493269","",""
"33030635","5426073","2015-10-09 05:36:12","-3","104","<git><vim><gitignore>",".gitignore to manage vimfiles under windows","<ul>
<li>windows 7 running vim.</li>
<li>want to use the same 
<code>c:\users\xxxx\_vimrc</code> 
<code>c:\users\xxxx\vimfiles\....</code> Across multiple windows 7 computers, e.g. work, home desktop, home laptop.</li>
<li><p>For each of those windows 7 machines, each has its own home directory with different files say videos/photos/music/documents. I do NOT want to sync those files to be the same. Only the <code>_vimrc</code> and folders/files under <code>\vimfiles</code></p></li>
<li><p>The method I am contemplating is using git to manage ONLY <code>c:\users\xxxx\_vimrc</code> and <code>xxxx\vimfiles\....</code> as a repo and ignore all other files. </p></li>
<li>I will arrange all files one 1st win7 home and then commit and push one repo into github, and clone it on multiple win 7 home folders. I understand I have to first clone from github into a local folder say <code>c:\temp\local_git_vim_repo</code>, and then manually copy contents within <code>c:\temp\local_git_vim_repo</code> to home folder so that all the correct git config information is copied over. I did NOT use any git submodules to manage one repo within another repo. The .git folder is copied over after clone. </li>
<li>after this, I will simply add new files/push/fetch/merge on different win 7 home folders.</li>
<li>Above is the plan. If you have better ways to achieve what I want to do, please advice. </li>
<li>The execution of the plan failed at the first step when trying to push the 1st computer's <code>home_folder\_vimrc, vimfiles</code> into github. The files under <code>home_folder\vimfiles\bundle\</code> is empty.</li>
<li><p>Since I do NOT want git to manage any files except for <code>_vimrc, vimfiles\...</code> under <code>home_folder</code>, I will have to gitignore most of the files except for those I want to manage according to the plan.</p></li>
<li><p>my .gitignore looks like the following</p></li>
</ul>

<p><code>c:\users\xxxx\.gitignore</code>
<code>
*
!_vimrc
!*/
!.gitignore
!vimfiles/**
!vimfiles/**/*.vim
</code></p>

<ul>
<li>after I did add/commit/push, vimfiles/bundle's sub folders are only empty folders on git-hub. 
In other words I can NOT stage files such as</li>
</ul>

<p><code>
vimfiles/bundle/tabular/plugin/Tabular.vim
vimfiles/bundle/tabular/doc/Tabular.txt
....
</code></p>

<ul>
<li>it only give me an empty folder unto
<code>vimfiles/bundle/tabular</code>
and there is nothing in that folder.</li>
</ul>
","0","5426073","",""
"1888969","25050","2009-12-11 15:51:49","4","1061","<git><git-svn><gitignore>","git: ignoring files in the origin","<p>Is there a way to tell git to ignore a file that's stored in its origin?  Since the files in question are in the upstream repository, just adding them to .gitignore or .git/info/exclude don't work.</p>

<p><strong>Background</strong>:</p>

<p>My upstream repository has some generated files in it.  Every time I do a local rebuild, these generated files are changed and differ from the committed version.  The generated files are in the repository because many users don't have the software to generate them (and I don't have the power to change this).   These generated files are never generated by hand and I never want to commit them to my git repository.  I have a separate mechanism to push them to the master repository (and I have no control over this separate mechanism).</p>

<p>I'm using a private git repository for making edits to an upstream subversion repository.  To do this, I have a git repository just for pulling commits from subversion.  That git repository is periodically synced via a cronjob.  I then have private git repositories that are clones of the upstream git repository.  I want git to not bug me about the generated files.  I'm happy with either of these two results: the files are no longer tracked by my local git repository (but they should be tracked by the one that syncs with svn), or git will silently update my generated files but it will never commit my changes and the files will never show up in the ""Changed but not updated:"" section of ""git status"".</p>
","0","25050","0","0"
"13192134","1669543","2012-11-02 08:58:33","3","2885","<python><django><git><heroku><gitignore>",".gitignore not ignoring the files Django","<p>So I'm testing out Heroku with a dummy app called hellodjango, and pushing everything to git.</p>

<p>Added my .gitignore file (tell me if I'm wrong, I created a text document called django.gitignore, and the contents are 1 line, no spaces, venv*.log*.pot*.pyclocal_settings.py.</p>

<p>Not sure what I'm doing wrong, but here is my directory</p>

<pre><code>hellodjango/
    django.gitignore
    manage.py
    requirements.txt
    hellodjango/
        __init__.py
        __init__.pyc
        settings.py
        settings.pyc
        urls.py
        urls.pyc
        wsgi.py
        wsgi.pyc
    venv/
        Include/
        Lib/
        Scripts/
</code></pre>

<p>So I don't want to stage any .pyc files or the venv folder. </p>

<p>In my command line, I enter</p>

<blockquote>
  <p>git init</p>
</blockquote>

<pre><code>Initialized empty Git repository in /Users/Chris/hellodjango/.git/
&gt;git add .
&gt;git status
</code></pre>

<p>When I enter git status, all of the files in venv and .pyc are staged. Why is .gitignore not working?</p>
","0","1669543","0","0"
"39943118","5421539","2016-10-09 11:34:14","0","59","<git><github><gitignore>","git repo ignore a subdirectory","<p>I created a git repository and add some directories in that repo. When I push to git server, one of the directory is not recognized by the server. Please see below screenshot,</p>

<p><a href=""https://i.stack.imgur.com/IrJGc.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/IrJGc.png"" alt=""enter image description here""></a></p>

<p>You can see that the nurse360_ios folder is gray. Whatever I updated on that folder, all are ignored by git. </p>

<p>Below is my .gitignore file:</p>

<pre><code>$ cat .gitignore 
Podfile.lock
Pods
#nurse360_ios.xcworkspace
#nurse360_ios.xcodeproj/xcuserdata
</code></pre>

<p>I don't know why it is ignored by git. And I searched and someone say it may be a submodule. But I didn't create submodule. How can I check the root course for this?</p>
","6","5421539","",""
"13206166","119198","2012-11-03 05:12:11","1","65","<git><gitignore>","How not to display files in modified in git","<p>I have followings in the .gitignore file</p>

<pre><code>application/config/database.php
application/config/config.php
</code></pre>

<p>But when I run git status both files are under modified. Isn't that git should ignore these files? How should I do so that these files won't be displayed.</p>

<p>Thanks in advance.</p>
","1","119198","",""
"20931128","119198","2014-01-05 07:16:44","0","137","<git><gitignore>","How do I know if I am using gitignore or gitignore_global?","<p>The title says all. Is there any command to know which gitignore I am using?</p>
","0","119198","",""
"13208833","213269","2012-11-03 11:43:59","2","9119","<git><gitignore>","How do I ignore files with a .gitignore file?","<p>Always when I run <code>git status</code> some files are listed as untracked, that is how it should be. But I would like to not have them listed there everytime I run <code>git status</code>. As what I have understood, I should add those files to an <code>.gitignore</code>-file.</p>

<p>In my project I have a file <code>.classpath</code> and a directory <code>.gradle/*</code> that I want to ingore.</p>

<p>My <code>.gitignore</code> file looks like this:</p>

<pre><code>.classpath
.gradle/*
</code></pre>

<p>but these files are still listed as ""untracked"" when I run <code>git status</code>. Is there anything wrong with my <code>.gitignore</code> file or how should I fix this?</p>

<hr>

<p>Here is my <code>git status</code> output:</p>

<pre><code>C:\myproject&gt;git status
# On branch master
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       modified:   src/Test.java
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       .classpath
#       .gitignore
#       .gradle/
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>
","7","213269","",""
"30825439","3291506","2015-06-14 02:30:20","1","95","<git><github><gitignore>","How to ignore the contents of a previously tracked directory in git?","<p>I have seen <a href=""https://stackoverflow.com/questions/1274057/making-git-forget-about-a-file-that-was-tracked-but-is-now-in-gitignore"">this post</a> about no longer tracking a previously tracked file, but here is my situation. </p>

<p>I previously committed a directory. I now want to untrack everything in that directory but still track the directory itself.  </p>

<p>I have added 
<code>/auto-save-list/*</code> to the  <code>.gitignore</code> file (the directory I am trying to ignore is the <code>auto-save-list</code> directory in the root of the project, and I have run <code>git rm --cached</code> but I still have multiple filed from that directory that show up as new when I go to make a commit.  Similarly the files show up in my origin repo.</p>

<p>Can someone help me ignore the contents of the previously tracked file?</p>
","1","3291506","0","0"
"13269004","351614","2012-11-07 11:38:34","3","823","<git><gitignore>","git commit once and ignore from then on","<p>I'd like to make a commit with git that contains a basic structure for connection strings in our .net application.</p>

<p>For instance we have a web.config that imports connectionStrings.config.</p>

<p>I'd like to commit an initial connectionStrings.config just so we dont have to keep adding one manually and it has the basic settings we need and we can just go an modify the various parts of the string (usually just the server name) and then ignore any changes to that file from that point forward.</p>

<p>Now I've tried adding it to .gitignore but from what I've read tracked files are exempt from the .gitignore I've also tried git update-index --assume-unchanged connectionStrings.config but that seems like a temporary fix as I'm still bugged about pending changes to the file when checking out another branch.</p>

<p>Is there any good way around this?</p>
","1","351614","0","0"
"47936427","1264061","2017-12-22 05:47:03","1","104","<git><gitignore>","Ignore committing a specific directory to git","<p>I am aware that giving the path of file or directory in the .gitignore file does not add those files to my git repository, but I wanted to ignore all ""build"" directories created in my repository, I don't want to specify the complete path of my individual build directory every time. Please suggest the solution.</p>
","2","1264061","",""
"40174247","3982405","2016-10-21 10:28:06","4","6784","<git><gitignore>",".gitignore doesn't ignore files in subdirectories","<p>I have a <em>.gitignore</em> file in my repository top level folder with the following code:</p>

<pre><code># Compiled python modules.
*.pyc

# Backup gedit files.
/*~

# Setuptools distribution folder.
/dist/

# Python egg metadata, regenerated from source files by setuptools.
/*.egg-info
/*.egg
</code></pre>

<p>When I try to run a <code>git add .</code> command the <em>.gitignore</em> does not make any effect, as several /*~ are added. The output for <code>git status</code> is the following:</p>

<pre><code>new file:   uvispace/tests/test_messenger.py
new file:   uvispace/tests/test_messenger.py~
new file:   uvispace/tests/test_robot.py~
new file:   uvispace/uvirobot/__main__.py~
new file:   uvispace/uvirobot/messenger.py~
new file:   uvispace/uvirobot/move_base.py
</code></pre>

<hr>

<h2>Similar Questions</h2>

<p>I have seen several very similar questions, like <a href=""https://stackoverflow.com/questions/11451535/gitignore-not-working"">this one</a>, or <a href=""https://stackoverflow.com/questions/25436312/gitignore-not-working"">this one</a>. They solution is to remove previously added files and then add again the whole repository with the following instructions:</p>

<pre><code>git rm -rf --cached .
git add *
</code></pre>

<p>However, I tried it and there is no difference. Anyone has an idea why is this happening?</p>
","2","3982405","0","0"
"59015606","12420800","2019-11-24 07:43:48","3","301","<npm><gitignore><npmignore>","Do I need to copy-paste stuff form "".gitignore"" to "".npmignore""","<p>So I was reading <a href=""https://docs.npmjs.com/misc/developers#keeping-files-out-of-your-package"" rel=""nofollow noreferrer"">this</a>.</p>

<p>And I'm a bit confuse how it's works, as I understood it:</p>

<p>If I only have <code>.gitignore</code> in my repo npm will use <code>.gitignore</code> but If I have both <code>.gitignore</code> and <code>.npmignore</code> npm will only read <code>.npmignore</code>, right? Or it will read both?</p>

<p>Need to know, if it's only reading <code>.npmignore</code> I have to copy-paste stuff from <code>.gitignore</code> as well.</p>
","0","12420800","0","0"
"13312185","378170","2012-11-09 16:38:35","0","1664","<git><gitignore>","How to ignore some directories but NOT some files inside those directories with git?","<p>Please note the following structure:</p>

<pre><code>/assets --&gt; this dir shouldn't be ignored. but SOME OF their contents SHOULD.;
ignoredfile.jpg --&gt; should be ignored.
ignoredfile2.gif --&gt; --&gt; should be ignored.
 /blog --&gt; this dir shouldn't be ignored. but SOME OF their contents SHOULD.;
  /images --&gt; this dir shouldn't be ignored. but ALL their contents SHOULD.;
</code></pre>

<p>Inside <code>/assets</code> folder I have a gitignore file with:</p>

<pre><code># Ignore everything in this directory
*
# Except this file
!.gitignore
!/images
!/resize
!/blog
</code></pre>

<p>Inside '/assets/blog' I have another <code>.gitignore</code>.</p>

<pre><code># Ignore everything in this directory
*
# Except those files
!.gitignore
!/images
</code></pre>

<p><strong>ISSUE</strong></p>

<p>When I push to the remote server, git DO pushed the <code>/blog</code> directory but NOT the <code>/blog/images</code> one. Why ?</p>

<p>How can I solve this ?</p>
","5","378170","",""
"2476718","755","2010-03-19 11:12:58","66","18308","<git><ignore><gitignore>","How to I add something to the .gitignore so that the match is not recursive?","<p>How to I add something to the <code>.gitignore</code> so that the match is not recursive?</p>

<p>For example, I wish to ignore the directory <code>foo</code> and the file <code>bar.txt</code> in the current directory, but not any that exist in subdirectories.</p>

<p>I have tried this for my <code>.gitignore</code> file:</p>

<pre><code>foo/
bar.txt
</code></pre>

<p>But unfortunately git applies this recursively, so that <code>otherdir/bar.txt</code> and <code>otherdir/foo/</code> also get ignored, which is not what I want.</p>

<p>(Is there a command in git that shows me all ignored files, and reference the <code>.gitignore</code> file that is responsible for the file being ignored?  This would be useful for debugging.)</p>
","0","755","0","0"
"48143396","1713078","2018-01-08 02:05:51","3","817","<git><gitignore>","How to add non printable characters to .gitignore?","<p>On macOS, if you change a folder's icon, a file called ""Icon\r"" (carriage return) is created inside that directory. Now I don't know how to exclude it from git. Listing it as ""Icon?"" works, but that would also match ""IconF"" or anything like this.</p>

<p>Is there any escape sequence git understands in .gitignore files to match exaclty that character?</p>
","0","1713078","",""
"59186588","12091999","2019-12-05 00:40:25","1","41","<gitignore>","gitignore, track all files with some extension, except one specific file","<p>I need to not ignore all files of some extension (json) in sample, but ignore only one specific file with that same extension, for example:</p>

<pre><code># Ignore all files by default, but scan all directories
*
!*/

# track all json files
!*.json

# but don't track this one
Target.json
</code></pre>

<p>problem is that <code>Target.json</code> is tracked, how do I ignore it?</p>
","0","12091999","0","0"
"13922918","849055","2012-12-17 21:59:30","2","305","<git><gitignore>",".gitignore and remove cached makes it so I can't see the file on the server al all?","<p>I want to ignore a few files that need to be different, or do not need to be tracked- I edit my gitignore to skip swp files, the entire tmp dir and a few of the log files inside log/.</p>

<p>I them removed the cached versions from my local install- all seemed well here</p>

<p>then I ran git add . (was this supposed to be a git add -u?)</p>

<p>And then pushed to my remote repository.</p>

<p>The app worked fine still, but I noticed that I couldn't find or access the files on my remote repository I had ignored locally- my log file was gone, as was my database.yml file (again, on remote).</p>

<p>I could still start up the application, so it seems like the file is still there (unless I'm wrong about needing database.yml), but I can't see those files.</p>

<p>If I wanted to always ignore those files (as does the other dev who will pull them), how can I do that without having those files dissapear on the remote?</p>

<p>Thanks</p>

<p>Edit- it seems like what I might be looking for is actually </p>

<pre><code>git update-index --assume-unchanged example.txt
</code></pre>

<p>which seems like it will allow for the file to continue existing in both environments, without monitoring it for any changes.</p>

<p>Am I on the right track?</p>
","0","849055","0","0"
"31437170","4267244","2015-07-15 17:30:07","15","6499","<xcode><git><swift><gitignore><swift-playground>","What should I include in the .gitignore file for Swift playgrounds?","<p>I want to use Git for versioning my playgrounds, but I am not sure which files should be ignored and which ones I should commit.</p>

<p>Currently I use following <code>.gitignore</code> file for playgrounds:</p>

<pre><code># Xcode user data
xcuserdata
</code></pre>

<p>What else should be there?</p>
","3","4267244","0","0"
"40452848","36821","2016-11-06 18:18:46","12","8333","<visual-studio-code><gitignore>","Visual Studio Code - Automatic exclude based on .gitignore","<p>I'd like VSCode to automatically exclude files/folders based on my <code>.gitignore</code> configuration.</p>

<p>For the explorer exclusion I've found an extension (<code>explorer-excluded-files</code> which manages the <code>files.exclude</code> setting), but for the quick open file (<code>cmd + p</code>) I didn't find anything.</p>

<p>I guess I can try and tweak other <code>*.exclude</code> settings but I wonder why isn't there a global method to exclude <code>.gitignore</code> entries in all relevant places? Otherwise I have to manually sync the settings every time <code>.gitignore</code> changes.</p>
","0","36821","0","0"
"21455501","47506","2014-01-30 11:40:57","3","1139","<c#><visual-studio-2010><git><gitignore>","Is it safe to include in .gitignore Visual Studio *.tlog files?","<p>They seem not to be included in the standard .gitignore cited in <a href=""https://stackoverflow.com/questions/2143956/gitignore-for-visual-studio-projects-and-solutions"">a different Stackoverflow post</a>. I am using mainly C#</p>

<p>Thanks</p>
","0","47506","",""
"40461840","1136709","2016-11-07 09:32:30","3","1016","<git><version-control><gitignore>",".gitignore for directories at a specific depth?","<p>I have directories at <code>components/root/js/</code> and <code>components/example/js/</code>, and I don't want these to be tracked by Git.</p>

<p>However, I have a directory <code>components/root/js2/plugins/js/</code>, which I want to have tracked by Git.</p>

<p>I've looked up on this online and only found <code>**</code>, which I believe does not solve my problem.</p>

<p>My current <code>.gitconfig</code> contains the line:</p>

<pre><code>js/
</code></pre>

<p>I've tried changing this to:</p>

<pre><code>components/**/js/
</code></pre>

<p>But this matches for <code>components/root/js/</code>, <code>components/example/js/</code>, but also <code>components/root/js2/plugins/js/</code> (a <code>js</code> folder below the second level of <code>components</code> - I only want to ignore <code>js</code> folders at the second level).</p>

<p>How can I achieve this goal?</p>
","7","1136709","",""
"48169082","6410464","2018-01-09 13:17:12","0","1845","<git><gitignore>","Use `*.sh` in .gitignore but allow `A/B/C.sh` to be tracked","<p><strong>Note: I have removed this question from duplicate because while using !run.sh works for me, i am looking to allow any file in ansible/files as well.(Any file that i might add in the future.) The other solutions for the same that i found did not work for me.</strong></p>

<p>I want to exclude all <code>.sh</code> files from my repository, and for that i've used <code>*.sh</code> but then i want to include any file in <code>ansible/files</code>
Currently, my <code>.gitignore</code> file looks like this:</p>

<pre><code># Ignore python environment
venv/

# Ignore .pyc files
*.pyc

# Ignore .log Files
*.log

# Ignore any __pycache__
__pycache__/

# Ignore .sh files
*.sh

# Allow any `.sh` file(s) in ansible/files folder
!/ansible/files/*.sh

# Allow any file(s) in ansible/files folder
!/ansible/files/*
</code></pre>

<p>But this isn't working, <code>ansible/files/run.sh</code> is a file that exists but doesn't get tracked.
Question: Why is <code>.gitignore</code> ignoring <code>!/ansible/files/*.sh</code> &amp; <code>!/ansible/files/*</code>; how to allow any file in that folder to be tracked?</p>

<p>Note: I have removed this question from duplicate because while using !run.sh works for me, i am looking to allow any file in <code>ansible/files</code> as well.(Any file that i might add in the future.)
The other solutions for the same that i found did not work for me.</p>
","2","6410464","",""
"48173940","9194529","2018-01-09 17:46:03","2","1026","<git><gitignore><ignore>","git - ignoring a folder locally without any changes on remote when committing","<p>Through my research, I have seen people asking for how to keep a folder locally and delete it on the remote, and vice-versa. But I'm having a subtler issue. Sorry if it happens that I've not searched enough.</p>

<p>Hello, I use IntelliJ IDEA to work on a project that is made for Eclipse (I dislike Eclipse that much). Nevertheless, there is a .idea folder on the remote for compatibility reasons. The thing is, it should stay as-is on the remote. Because I'm using IntelliJ, it's consistently getting updated by myself.</p>

<p>Some parts of it are ignored and don't show up in commits (e.g the dependency .xml files created by Gradle import), but files like my workspace.xml are ignored in .gitignore, but the ignore doesn't ""register"", meaning that they're ignored, yet they are included in commits. That's just because they existed already when I ignored them.</p>

<p>So what I want to do is to make it so all files in the .idea folder actually get ignored (don't show up in commits), but <strong>without having to actually delete them from either the index or the file system</strong>. Right now, if I use the ""usual"" methods, they include doing <code>git rm --cached -r folder</code>. If I do that, it shows up as a deletion when committing, and I just want to make it so all changes are ignored without any noticeable change on commit history (e.g deletion).</p>

<p>Hoping I was clear enough, thanks in advance for your answers.</p>
","0","9194529","0","0"
"21551327","1329142","2014-02-04 11:33:41","2","775","<ios><xcode><git><xcode5><gitignore>","Can't exclude user interface state from git in Xcode 5","<p>I'm having troubles with my .gitignore entry</p>

<pre><code>*.xcuserstate
</code></pre>

<p>being ignored in Xcode 5.
The accepted answer to the similar question <a href=""https://stackoverflow.com/questions/17312775/cant-exclude-user-interface-state-from-commit-in-xcode"">Can&#39;t exclude user interface state from commit in xcode</a> seems not to work. Maybe it's a difference between Xcode 4.5 and Xcode 5?</p>

<p>Here's what I did:</p>

<ol>
<li>Committed every pending change via 'Commit' from the Xcode Source Control menu</li>
<li>Entered terminal command <code>git rm --cached *.xcuserstate</code></li>
<li>Restarted Xcode (just to be sure)</li>
<li>Selected 'Commit' again from the Source Control menu.</li>
</ol>

<p>The result is, that Xcode now still wants to commit a change to .xcuserstate: the 'D' (for deleted) next to it suggests that it wants to commit the change, that the .xcuserstate file has been deleted (or does 'D' mean 'deleted from git'?).</p>

<p>If now I decide to commit this 'delete' change, and after that hit 'Commit' again, everything is just like it was before my terminal command. Xcode keeps reporting changes to .xcuserstate ('M' next to the file) every time I'm committing something else.</p>

<p>What am I doing wrong?</p>
","0","1329142","",""
"40554135","1537990","2016-11-11 18:35:07","0","31","<git><gitignore><git-checkout>","git double checkout, folder content gone","<p>I have a git repository with a master and developer branch.<br>
Say my branch is called <code>branch1</code>.<br>
Inside my repo I have a folder called <code>myfolder</code>. I was on <code>branch1</code> and I did</p>

<pre><code>git checkout master
git checkout branch1
</code></pre>

<p><code>myfolder</code> is now empty (sic), how did this happen?   </p>

<p>I should note that <code>myfolder</code> is included in the <code>.gitignore</code> which I suspect is the cause of the problem, but I don't understand why. Also is there a way to restore its content? </p>
","2","1537990","",""
"31461236","984407","2015-07-16 17:53:10","4","915","<gitignore><glob>","Where is gitignore recursive behavior specified?","<p>Referring to <a href=""http://git-scm.com/docs/gitignore"" rel=""nofollow"">the online docs</a>:</p>

<blockquote>
  <p>If the pattern does not contain a slash /, Git treats it as a shell glob pattern and checks for a match against the pathname relative to the location of the .gitignore file (relative to the toplevel of the work tree if not from a .gitignore file).</p>
</blockquote>

<p>To me, this documentation says that given a pattern 'foo', any file or directory named 'foo' will be ignored only relative to the .gitignore file.  I don't read anything explaining its recursive behavior.  Shell globs (from <a href=""http://man7.org/linux/man-pages/man7/glob.7.html"" rel=""nofollow"">what I read</a> and experience) are not recursive.</p>

<p>Now further below it explains the double asterisk:</p>

<blockquote>
  <p>A leading ""**"" followed by a slash means match in all directories. For example, ""**/foo"" matches file or directory ""foo"" anywhere, the same as pattern ""foo""</p>
</blockquote>

<p>so yes there is an example in the docs explaining that <code>**/foo</code> is equal to <code>foo</code>, but the recursive behavior remains implicit.</p>
","0","984407","0","0"
"31469899","4197344","2015-07-17 06:48:57","0","165","<android><git><android-studio><gitignore>",".gitignore for Android Studio on Ubuntu 14.04 not ignoring certain files. [tried the usual solutions]","<p>git always shows me these files for my AS projects.</p>

<pre><code>Changes not staged for commit:
  (use ""git add/rm &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
    modified:   .idea/.name
    modified:   .idea/compiler.xml
    deleted:    .idea/encodings.xml
    modified:   .idea/gradle.xml
    modified:   .idea/misc.xml
    modified:   .idea/modules.xml
    deleted:    .idea/scopes/scope_settings.xml
    modified:   .idea/vcs.xml
    deleted:    Pronto.iml
    modified:   app/app.iml
Untracked files:
  (use ""git add &lt;file&gt;..."" to include in what will be committed)
    ***-****.iml
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>I have tried the approaches like <a href=""https://gist.github.com/iainconnor/8605514"" rel=""nofollow"">.gitignore</a>
using git rm to remove cache. etc.</p>

<p>my .gitignore matches the link to the point. </p>

<p>Help. Thanks.</p>
","0","4197344","",""
"2743864","182779","2010-04-30 10:37:33","1","1438","<git><github><git-submodules><gitignore>","git submodule, ignoring the wrong directory","<p>I am new to git but have spent a good deal of time reading through documentation and gotchas on git submodules before trying them.  I am having a problem that I feel -- probably naively -- is a bug in git:</p>

<p>I have a project, in that root directory I have a plugins folder, which has a submodule called myplugin.  I added it with </p>

<pre><code>git submodule add xxxxxgithub.com/me/myplugin.git plugins/myplugin
</code></pre>

<p>which worked great.  Everything has been working fine for about a week. The framework I'm using has support for overriding views that are inside a plugin.  Those must be stored in </p>

<pre><code>views/plugins/myplugin/customviewfile.  
</code></pre>

<p>The problem is, git thinks that the override folder is also at: </p>

<pre><code> plugins/myplugin 
</code></pre>

<p>Git won't commit anything inside of my views/plugins/myplugin directory, it won't track the files, I can't unignore it no matter what I do.  In Github it shows up with the green arrow indicating that it's a submodule and when I switch branches that directory carries over the way submodules do</p>

<p>I have been pulling my hair out for over an hour and making no progress... any help is greatly appreciated!</p>
","1","182779","",""
"48202015","1840365","2018-01-11 07:41:22","0","149","<node.js><git><azure><azure-web-app-service><gitignore>","My node modules deployed to Azure despite .gitignore","<p>So I pushed my code to an Azure website and had this <code>.gitignore</code> file in place, but it still pushed all of my <code>node_modules</code> folder contents to the site:</p>

<pre><code># dependencies
/node_modules

# testing
/coverage

# production
/build

# misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.local

npm-debug.log*
yarn-debug.log*
yarn-error.log*
</code></pre>

<p>Not sure why it did this. Used the <code>create-react-app</code> to start this project and did an initial push with my local git to Azure. </p>

<p>Why did this happen?</p>

<p>Can I simply delete all the content within the appservice and re-push? If so, isn't there I need to delete or reset to ensure this new push goes right?</p>

<p>Thanks much.</p>

<p>UPDATE:</p>

<p>Here is my file structure with regards to the node modules:</p>

<p><a href=""https://i.stack.imgur.com/qkTq9.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/qkTq9.png"" alt=""enter image description here""></a></p>
","3","1840365","",""
"48204066","1379730","2018-01-11 09:51:10","22","7618","<git><gitignore>","Shorthand for multiple file extensions in.gitignore","<p>Is there a Bash script-like shorthand for matching multiple different extensions in a <code>.gitignore</code> file such as:</p>

<pre><code>*.{bak,save,aux,nav,toc}
</code></pre>

<p>?</p>

<p>The syntax above <em>definitely</em> does <em>not</em> work.</p>
","5","1379730","0","0"
"48204661","178757","2018-01-11 10:20:02","2","1507","<git><gitignore>","Making git ignore all of a directory tree except some files","<p>I'm trying to get git to ignore the entire <code>packages</code> directory except for <code>.targets</code> files inside it, wherever they may be.  I'm trying this in <code>.gitignore</code> but git still ignores the entire <code>packages</code> dir despite the presence of <code>.targets</code> files:</p>

<pre><code>/packages/*
!/packages/**/*.targets
</code></pre>

<p>I've also tried following advice from another SO question and un-blacklisting directories first but it still didn't work (this time, it just included all of the packages dir again):</p>

<pre><code>/packages/*
!/packages/**/
!/packages/**/*.targets
</code></pre>

<p>How can I get this to work?</p>
","1","178757","",""
"31497094","608639","2015-07-19 01:19:26","3","272","<git><gitignore><git-status>","gitignore with platform specific defines?","<p>I'm working on Fedora 22. When I perform a <code>git status</code> it lists all the <code>*.o</code> files. I don't recall seeing the behavior in the past.</p>

<p>I looked at the project's <code>.gitginore</code> file delivered via <code>git clone</code>, and it lacks a rule for <code>*.o</code>. I would like to add <code>*.o</code>, but I would like to do it for non-Windows platforms only. Windows uses <code>*.obj</code>, so its not needed. Plus, <code>*.o</code> is used for some programs on Windows (IIRC).</p>

<p>Is it possible to specify <code>*.o</code> for non-Windows platforms? If so, how?</p>
","3","608639","",""
"31502908","999676","2015-07-19 15:38:41","3","727","<git><symlink><gitignore>","How to add files ignored by a git ignore rule","<p>in my <code>.gitignore</code>, I have:</p>

<pre><code>*.framework
*.a
</code></pre>

<p>However, I am using symlinks to these in various projects and since the symlinks and in <code>.a</code> or <code>.framework</code>, I can't seem to check those into Git. </p>

<p>Is there a command that I am missing or a work-a-round? I would like to check in the symlinks so that I don't have to create them each time. I could always write a bash script to make these if needed.</p>
","1","999676","",""
"13978151","892387","2012-12-20 18:20:21","16","17394","<git><gitignore>",".gitignore isn't ignoring itself","<p>I added .gitignore and another directory to my <code>.gitignore</code> file, but when I <code>git status</code>, <code>.gitignore</code> is still showing up!</p>

<p>I feel like I'm missing something really obvious.</p>
","0","892387","0","0"
"65482531","14446610","2020-12-28 18:47:47","1","3356","<git><github><gitignore><api-key>","Should I use gitignore or ""your-api-key-here"" to hide api key on Github?","<p>I finished a project that contains an API Key and I want to upload it to Github. I want to be careful not to expose the API Key on Github.</p>
<p>Two methods I've discovered are</p>
<ol>
<li>Using .gitignore to hide the file(s) containing sensitive information</li>
<li>Simply changing the API Key value to &quot;YOUR-API-KEY-HERE&quot; before uploading to Github. Like so:</li>
</ol>
<p>ApiKey=&quot;YOUR-API-KEY-HERE&quot;</p>
<p><strong>Questions</strong></p>
<p>If the file containing my API Key is 'hidden' in gitignore and I upload my project to Github, will this cause my project to not function properly by anyone who downloads it because the project can't find the 'hidden' API Key? If someone looks at my project on Github, are the 'hidden' files inaccessible to them?</p>
<p>In which cases should I use Gitignore or the &quot;YOUR-API-KEY-HERE&quot; method?</p>
","1","14446610","0","0"
"65485432","6462301","2020-12-28 23:33:00","0","252","<git><gitignore>",".gitignore to ignore everything aside from files with certain extensions in nested subdirectories associated with some top level subdirectories","<p>I would like for git to ignore all files except those with a few different extensions buried somewhere within a specific set of subdirectories.</p>
<p>For examples, say I have a directory with the following sub-directories:</p>
<pre><code>subdir1
subdir2
subdir3
subdir4
subdir5
...
</code></pre>
<p>Each subdirectory contains an arbitrary number of nested sub-directories. Files with extension <code>.txt</code> or <code>.pdf</code> may be present in some of those nested sub-directories. I would like to have the repo track only the <code>.txt</code> and <code>.pdf</code> files somewhere within <code>subdir2</code> and <code>subdir3</code> and no other files.</p>
<p>Please explain why your solution works.</p>
","0","6462301","0","0"
"65485893","6462301","2020-12-29 00:41:44","1","208","<python><git><pycharm><gitignore>","Which (if any) project files to put in .gitignore for Pycharm projects (beyond those already in .idea/.gitignore)?","<p>Pycharm generates a <code>.idea</code> directory at the root of a Pycharm project.  What files/directories within <code>.idea</code> should be ignored by git in this directory?  Is this properly handled by the <code>.gitignore</code> file automatically generated within <code>.idea</code>:</p>
<pre><code>cat .idea/.gitignore
# Default ignored files
/shelf/
/workspace.xml

</code></pre>
<p>or do I need to add something to the project root's <code>.gitignore</code> file?</p>
","1","6462301","",""
"28708531","4573579","2015-02-24 23:40:41","29","8033","<git><gitignore>","What does *~ do in a .gitignore file?","<p>I just ran across a gitignore file that ends with the line *~ but I have not been able to find a description of what this does.</p>
","0","4573579","0","0"
"10779343","755718","2012-05-28 04:27:00","93","50703","<git><nuget><gitignore>",".gitignore NuGet exclude packages/ include packages/repositories.config","<p>I'm trying to create a .gitignore for a Visual Studio project that uses NuGet. It currently contains:</p>

<pre><code>\packages/*
!packages/repositories.config
</code></pre>

<p>This does not ignore anything in the folder. Everything gets staged on an add. I have also tried:</p>

<pre><code>packages/
!packages/repositories.config
</code></pre>

<p>This ignores everything in the packages folder and does not include the packages/repositories.config.</p>

<p>What am I doing wrong?</p>
","0","755718","0","0"
"65499934","704972","2020-12-29 23:06:12","1","58","<emacs><gitignore><dired>","How can I run recursive `dired-maybe-insert-subdir` while abiding by `.gitignore`?","<p>An Emacs dired buffer for <code>~/.</code> is open.</p>
<p>I move the cursor to <code>~/proj</code> and do the <code>C-u i -alR</code>  dance (recursive <code>dired-maybe-insert-subdir</code>).</p>
<p>But the folder <code>~/proj</code> has a subfolder <code>~/proj/.git</code> and a file <code>~/proj/.gitignore</code>.</p>
<p>How can I run recursive <code>dired-maybe-insert-subdir</code> while ignoring the files and folders that appear in <code>~/proj/.gitignore</code>?</p>
","0","704972","",""
"10806752","1132127","2012-05-29 21:08:43","1","903","<ruby-on-rails><git><gitignore>",".gitignore ignores wrong files rails app","<p>I'm having some trouble to understand why my <code>.gitignore</code> files ignores my files from my Rails app.</p>

<p>For people who are familiar with Rails app it contains a <code>db</code> directory in the root directory of the app which contains all the database migration and some other stuff.</p>

<p>My problem is every time I for example do a: <code>git add .</code>
And I have create or adjusted some files in the db directory.
Git will ignore those changes, something I find very strange!
This is my <code>.gitignore</code> file content:</p>

<pre><code># Git Ignore

# Ignore bundler config
/.bundle

# Ignore all logfiles and tempfiles.
/log/*.log
/tmp

*.rbc
*.sassc
.sass-cache
capybara-*.html
.rspec
/.bundle
/vendor/bundle
/log/*
/tmp/*

/public/assets/*
/public/system/*
/public/stylesheets/*
/coverage/
/spec/tmp/*
.DS_Store
._*
.Spotlight-V100
.Trashes
</code></pre>

<p>Is there somebody who could explain why my <code>.gitignore</code> files ignores this directory and everything inside it?</p>

<p>Thanks a lot in advance!</p>
","6","1132127","0","0"
"65523238","5235665","2020-12-31 16:17:17","0","196","<vue.js><build><gitignore><vue-cli>","Building a distributed Vue CLI project when the build binary is included in gitignore?","<p>New to Vue, and using @vue/cli 4.4.6.</p>
<p>I used Vue CLI to create my project, and noticed that under <code>node_modules/.bin</code> directory (that Vue CLI created), there is -- amongst many other binaries -- one called <code>vue-cli-service</code> that <em>appears</em> to be the Vue CLI build tool.</p>
<p>This is a bit strange to me, coming from a predominantly &quot;backend&quot; background using external build tools like Gradle, Maven and SBT, to have the build tool embedded inside a project! I would have expected a scenario where you download <code>vue-cli-service</code> as a command-line tool (just like I did with <code>vue-cli</code>) and then direct it at the project you want to build. But this would be like each and every Java project containing a copy of Gradle or Maven itself inside of it! Is this really the intention of a properly-formed Vue project or did I mess something up somehow?</p>
<p>I ask because <code>vue create hello-world</code> creates a <code>.gitignore</code> that specifically lists <code>node_modules</code> in it...</p>
<p>...so aren't these mutually exclusive conventions?</p>
<ol>
<li><code>vue create hello-world</code> creates a &quot;raw&quot; (unbuilt) project that contains <code>node_modules/.bin/vue-cli-service</code> which appears to be the way to build it. but it also mentions <code>node_modules</code> in the <code>.gitignore</code></li>
<li>so Developer #1 creates a new project and is able to build it, and they push it to a git repo. Since <code>node_modules</code> is listed in the <code>.gitignore</code>, the build tool is not included in the push</li>
<li>Developer #2 pulls the repo down to work on a new feature branch. But whoops. Since <code>node_modules/.bin/vue-cli-service</code> was ignored, they don't have it in their local branch, and so they can't build it.</li>
</ol>
<p>I <em>know</em> I must be missing something here, I just don't know what it is. Anybody have any ideas?</p>
","0","5235665","",""
"65830290","15053047","2021-01-21 15:11:54","0","68","<git><gitignore>","gitignore - only include certain extension except for filename","<p>I have sql- and bat-files in a folder:</p>
<pre><code>ARCHIVE
log.txt
file_1.sql
file_2.sql
file_3.bat
file_4.bat
password.bat
.gitignore
</code></pre>
<p>I now want to push all *.sql-files and *.bat-files to a gitlab project except for password.bat, because that is where the password is stored. Is that even possible?
My .gitignore looks like this:</p>
<pre><code>*
!*.sql
!*.bat
password.bat
</code></pre>
<p>but that does not work. I also tried <code>!!password.bat</code>, but also failed. It seems after a negation <code>!</code> there is no way to exclude files again. Does anyone have an idea?</p>
<p>Thanks!</p>
","5","15053047","",""
"29075998","4597863","2015-03-16 11:45:50","6","3452","<git><github><gitignore>","Can .gitignore files be named ? (e.g. xxx.gitignore)","<p>I would like to know whether it is possible to have <strong>named</strong> <code>.gitignore</code> files in a repository, such as:</p>

<pre><code>Composer.gitignore
Node.gitignore
</code></pre>

<p>Both of the above examples are shown available in GitHub's <a href=""https://github.com/github/gitignore"" rel=""nofollow noreferrer"">gitignore template repository</a> (perhaps this might be a bit misleading).</p>

<p>I have tried adding <code>Composer.gitignore</code> to my repository and it seems like the file is not read (I'm using SourceTree).</p>

<p><strong>EDIT:</strong></p>

<p>Adding relevant information added by <a href=""https://stackoverflow.com/users/113195/boldewyn"">Boldewyn</a> that does not directly answer the question:</p>

<blockquote>
  <blockquote>
    <p>The page's README says:</p>
    
    <p>A Collection of <code>.gitignore</code> templates
    and that's what it is: Only templates. If you want to use one, pick it, drop it in your repository and rename it to <code>.gitignore</code>.</p>
    
    <p>git recognizes only two places for listing ignored files: <code>.gitignore</code> files in a folder/subfolder and the file <code>.git/info/ignore</code>. See <a href=""https://www.kernel.org/pub/software/scm/git/docs/gitignore.html"" rel=""nofollow noreferrer""><code>git help gitignore</code></a> for in-depth information.</p>
  </blockquote>
</blockquote>
","0","4597863","0","0"
"11173261","1166845","2012-06-23 21:50:13","10","11469","<xcode><git><gitignore><pull>","Xcode says ""Uncommitted Changes"" Whenever I try to git pull or push","<p>I am using git in my projects, whenever I try to pull from Xcode I get ""Uncommitted Changes"" and it prevents me from pulling/pushing.
I try to commit and find one file with extension *.xcuserstate, this file is modified whenever I open/scroll into any project file in Xcode. That leaves me no option but to do a single commit that contains that file, which fill the git commit logs with meaningless commits.</p>

<p>Is this there is a way to stop this behavior?</p>

<p>I tried to put *.xcuserstate and xcuserdata into git ignore but that caused Xcode to crash every time I try to pull.</p>

<p>This happens with Xcode 4.2 and 4.3</p>
","0","1166845","0","0"
"65846892","12391318","2021-01-22 14:19:17","1","682","<git><visual-studio-code><gitignore><git-rm>","Easily remove multiple tracked files and add them to gitignore with VSCode","<p>I have a folder with many files tracked by <code>git</code>, and I would like to untrack many of theses files in a simple way.</p>
<p>Usually when I compile my solution, I see from VSCode source control tab some tracked files that shouldn't be. It's easy to select them all and add them to <code>.gitignore</code> file with the right click, but I can't find any option to untrack them all in an easy way (right click style).</p>
<p>Otherwise I have to do:</p>
<pre><code>git rm --cached &lt;file&gt;
</code></pre>
<p>for each files, which is a pain when I have many file to untrack.
Thanks.</p>
","0","12391318","",""
"47342905","7646621","2017-11-17 03:41:29","11","10931","<python><django><git><gitignore>","What type files should be put into .gitignore file in Django project","<p>From my other <a href=""https://stackoverflow.com/questions/47342829/whats-the-pycache-in-django-project?noredirect=1#comment81637886_47342829"">post</a>, I know the <code>__pycache__</code> should be put into the <code>.gitignore</code> when I use git.  </p>

<p>And in the other <a href=""https://stackoverflow.com/questions/16869024/what-is-pycache?answertab=votes#tab-top"">post</a> I saw, there are also <code>.pyc</code> and <code>.pyo</code> files. </p>

<p>whether them should all be put into the <code>.gitignore</code> file?</p>

<p>Can we summarize in the Python/Django project, what files should be put into <code>. gitignore</code> file? </p>
","1","7646621","0","0"
"47353916","803194","2017-11-17 15:19:41","1","185","<git><gitignore>","How to git ignore folder based on content","<p>Is it possible to ignore a full folder based on some criteria about it's content. For example I want to ignore everything in all folders that contain at least one html file. How can this be done? (If at all)</p>
","1","803194","",""
"11249527","864358","2012-06-28 17:01:40","4","7870","<git><gitignore>","What happens to gitignored, untracked files when pulling them from the remote repo?","<p>If I clone a repo and subsequently add one of the downloaded files to .gitignore, I understand I will have to ""untrack"" them so the .gitignore rules will apply.  After untracking them, and are therefore gitignored, are they re-tracked when pulling any updates to those file from the remote repo again?</p>
","0","864358","0","0"
"47370591","","2017-11-18 20:15:58","2","38","<git><gitignore>","Is there a tried and tested way of creating a .gitignore with all the known recommend ignores?","<p>Bit of a random question - but is there a known method for creating .gitignore files for recommended frameworks etc etc, for example:</p>

<p>Django:</p>

<pre><code>*.pyc
db.sqlite3
</code></pre>

<p>node.js (and others):</p>

<pre><code>/node_modules
</code></pre>

<p>php:</p>

<pre><code>env.local.php
</code></pre>

<p>Just seems like I either a.) can't find this or b.) I'm not using git init or .gitignore creation correctly?</p>
","1","","",""
"47373974","5831209","2017-11-19 05:23:08","-1","553","<github><gitignore><git-bash>","gitignore file doesn't ignore","<p>I am new to git hub and I changed the .gitignore file with following line.</p>

<pre><code>/src/main/webapp/app/app.constants.js
</code></pre>

<p>Then I build the project. But when I type git status in git bash still that app.constants.js file is displayed as a modified file. So where I get wrong? </p>
","1","5831209","",""
"11259778","383759","2012-06-29 10:01:17","23","33111","<git><directory><gitignore>","ignore folders using .gitignore?","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/343646/ignoring-directories-in-git-repos-on-windows"">Ignoring directories in Git repos on Windows</a>  </p>
</blockquote>



<p>I have a few folders, cache scattered throughout a webapp.</p>

<p>I am tracking the project with Git.</p>

<p>I have added empty index.html files to each cache folder.</p>

<p>I want to ignore all contents of the <code>cache</code> folders, but by default the folders are empty, hence the reason for the index.html.</p>

<p>I have tried </p>

<pre><code>*cache/*
!*cache/index.html
</code></pre>

<p>But it is not ignoring them.</p>
","0","383759","0","0"
"29166030","3196990","2015-03-20 12:00:52","11","12012","<laravel><github><composer-php><gitignore>",".gitignore does not work for subfolder of ignored folder","<p>I'm using Laravel and the Github program for subversions. In my .gitignore file i type:</p>

<p><code>/vendor</code></p>

<p>My project structure looks like this:</p>

<pre><code>Root
 app
 bootstrap
 public
 vendor
</code></pre>

<p>And it's all the files in vendor i want to ignore in git. Most of the files works to ignore there with typing /vendor in my .gitignore, but some files don't.</p>

<p>The files that doesn't work are <code>autoload.php - vendor/autoload.php</code></p>

<p>And files in <code>vendor/composer</code> - like:</p>

<pre><code>autoload_classmap.php
autoload_namespaces.php
autoload_real.php
ClassLoader.php
installed.json
</code></pre>

<p>What am i doing wrong in my .gitignore file?</p>
","1","3196990","0","0"
"66196068","13987192","2021-02-14 13:51:46","0","55","<git><gitignore>","glob exclude alphanumeric mix in gitignore","<p><strong>Problem:</strong>
I want to ignore the time directories in openfoam, i.e.</p>
<ol>
<li>foo/1; foo/200</li>
<li>foo/153.6546</li>
<li>foo/0.5e-05</li>
</ol>
<p>thus I've added</p>
<pre><code>#gitignore
[0-9]*/
[0-9]*.[0-9]*/
</code></pre>
<p>but this ignores the casefolder as well if it contains any number, i.e. &quot;testCase1D&quot;.</p>
<p><strong>Question:</strong>  Is there a way to exclude arbitrary alphanumeric combinations in the gitignore file so just pure numerical values are ignored?</p>
<p><strong>My solution approach:</strong></p>
<pre><code>![0-9][a-zA-Z]*/
[0-9]*.[0-9]*e-[0-9][0-9]
</code></pre>
<p>the former helps with the 1D bit, but parametervariations like foo={&quot;density1000&quot;,&quot;density1200&quot;} would still be ignored. The latter ignores the &quot;e-&quot; from problem 3 directories.</p>
","0","13987192","",""
"11788229","128991","2012-08-03 01:55:45","10","17310","<git><gitignore><git-push><composer-php><phpfog>","How do I push files specified in .gitignore?","<p>If I have a ""vendors"" directory in my .gitignore, is there a way I can set up a remote that will receive that directory anyway when I do a push?</p>
","3","128991","0","0"
"11792461","27294","2012-08-03 08:54:23","14","4689","<visual-studio-2010><git><gitignore>","Visual Studio gitignore and mdf, ldf files","<p>I have a database project that generates these files and added to gitignore. However they don't seem to be getting ignored and I need to revert them before commiting, quite annoying. The files are still locked by VS, is this a problem?</p>

<pre><code>#
# Windows and Mac OS X Temp Cache Files
#
[Tt]humbs.db
*.DS_Store

#
#Visual Studio files
#
*.[Oo]bj
*.user
*.aps
*.pch
*.vspscc
*.vssscc
*_i.c
*_p.c
*.ncb
*.suo
*.tlb
*.tlh
*.bak
*.[Cc]ache
*.ilk
*.log
*.lib
*.sbr
*.sdf
*.dbmdl
*.mdf
*.ldf
*.Database.dbmdl
ipch/
obj/
[Bb]in
[Dd]ebug*/
[Rr]elease*/

#
#Tooling
#
_ReSharper*/
*.resharper
[Tt]est[Rr]esult*

#
#Project files
#
[Bb]uild/

#
#Subversion files
#
.svn

#
# Microsoft Office Temp Files
#
~$*

#
# YoureOnTime specific files
#
YoureOnTime.Database.dbmdl


# End of File
</code></pre>
","0","27294","0","0"
"47665962","1615978","2017-12-06 02:40:41","1","618","<git><gitignore>","Including only .gitignore, .bashrc, .vimrc, .vim/ in a Git repo","<p>I thought I was pretty good with <code>.gitignore</code> files until just now.  I'm trying to include <strong>only</strong> the following files in a Git repo:</p>

<ul>
<li>.gitignore</li>
<li>.bashrc</li>
<li>.vimrc</li>
<li>.vim/ (everything in this directory)</li>
</ul>

<p>I have read several other answers on StackOverflow (<a href=""https://stackoverflow.com/questions/8527597/how-do-i-ignore-files-in-a-directory-in-git"">How do I ignore files in a directory in Git?</a>, <a href=""https://stackoverflow.com/questions/2545602/git-ignore-sub-folders"">Git ignore sub folders</a> and <a href=""https://stackoverflow.com/questions/1279533/is-there-a-way-to-tell-git-to-only-include-certain-files-instead-of-ignoring-cer/1279718#1279718"">Is there a way to tell git to only include certain files instead of ignoring certain files?</a>).  But, I can't seem to get my <code>.gitignore</code> file right.  Here's what I have in my <code>.gitignore</code> file presently:</p>

<pre><code>*
.*
!.gitignore
!.bashrc*
!.vimrc
!.vim/
</code></pre>

<p>After I run <code>git init; git add .; git status</code> the repo contains:</p>

<pre><code>$ git init; git add .; git status
Initialized empty Git repository in /home/username/.git/
On branch master

Initial commit

Changes to be committed:
  (use ""git rm --cached &lt;file&gt;..."" to unstage)

    new file:   .bashrc
    new file:   .gitignore
    new file:   .vimrc
</code></pre>

<p>I've tried variations on the last line of my <code>.gitignore</code> file, but to no avail.  Can anyone spot my mistake?</p>

<p>EDIT</p>

<p>I'm trying to find a solution which modifies <strong>only</strong> the <code>.gitignore</code> file.</p>
","3","1615978","0","0"
"66207880","3879958","2021-02-15 12:17:08","13","9156","<javascript><node.js><git><gitignore><husky>","Husky 5 .huskey gitignore","<p>10 days ago, Husky 5 was released
<a href=""https://dev.to/typicode/what-s-new-in-husky-5-32g5"" rel=""noreferrer"">https://dev.to/typicode/what-s-new-in-husky-5-32g5</a></p>
<p>after migrating to it (<a href=""https://typicode.github.io/husky/#/"" rel=""noreferrer"">https://typicode.github.io/husky/#/</a>)</p>
<p>I've noticed that there is a new <code>.husky</code> dir in the project.</p>
<p>by default it contains the following:</p>
<pre><code>.huskey
   -&gt; .gitignore
   -&gt; /_
</code></pre>
<p>the <code>.gitignore</code> file is simply ignoring the <code>_</code> dir</p>
<pre><code>_
</code></pre>
<p>and inside the <code>/_</code> dir there is a <code>huskey.sh</code> file which is obviously meant to be ignored.</p>
<p>in the documentation - you add hook by:</p>
<pre><code>npx husky add .husky/pre-commit &quot;npm test&quot;
</code></pre>
<p>which will create a <code>pre-commit</code> file inside the <code>.husky</code> dir.</p>
<p>Should I commit that dir with the <code>pre-commit</code> file? not sure about that and can't find that in documentation.</p>
","1","3879958","",""
"11852558","1293874","2012-08-07 19:14:45","32","21101","<git><gitignore>","gitignore - only allow certain extensions and files","<p>I'm using the following code to ignore all files except for certain filenames and extension</p>
<pre><code>*
!.gitattributes
!.gitignore
!readme.md
!.gitkeep
!*.php
</code></pre>
<p>For some reason, its only allowing me to commit the .gitignore and readme.md, even though I have php files in subfolders etc. Is there anything wrong with it? Just fyi, I'm using &quot;git add -A&quot; to pick up the files to commit.</p>
","2","1293874","0","0"
"66213701","14385510","2021-02-15 18:48:07","0","729","<git><version-control><gitignore><api-key><git-filter-branch>","Hide API keys from github public repo","<p>I'm looking for a way to prevent api keys and such to wind up in a public repo. (where it's hosted don't actually matter)</p>
<p>So I understand that the common solution is to add the file containing the api keys to .gitignore so that it basically never gets committed to the repo.</p>
<p>The thing is I'd rather commit the file but replace the key itself with 'YOUR API KEY HERE' sort of text in its place.</p>
<p>I've found <a href=""https://stackoverflow.com/a/40866036/14385510"">this</a> answer suggesting to use git filter branch but it seems to be really hit or miss and not really recommended.</p>
<p>Is there any other way to achieve this? Any way to ensure git filter branch will actually work? Any way to do it retroactively? Should it be done after git add or before it?</p>
","0","14385510","",""
"29528137","1543447","2015-04-09 01:21:50","0","225","<git><cakephp><gitignore>","Make .gitignore ignore - currently not working","<p>So I have a CakePHP app, and I have several environments. I just want the gitignore to work so I don't have to reset the database.php and core.php every time I push from one to the other.</p>

<p>This is my .gitignore:</p>

<pre><code># User specific &amp; automatically generated files #
#################################################
/app/tmp
/app/Config/core.php
/app/Config/database.php
/app/webroot/img/users/
/lib/Cake/Console/Templates/skel/tmp/
/plugins
/vendors
/node_modules
/build
/dist
/tags
*.mo

# IDE and editor specific files #
#################################
/nbproject
.idea

# OS generated files #
######################
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
Icon?
ehthumbs.db
Thumbs.db
</code></pre>

<p>But doing this: <a href=""https://stackoverflow.com/questions/1139762/ignore-files-that-have-already-been-committed-to-a-git-repository"">Ignore files that have already been committed to a Git repository</a></p>

<p>Actually deletes all the files from the repo! </p>

<p>How can I make it so that I am just not regarding these files in any of my environment so they don't get carried over from one to the other?</p>
","5","1543447","",""
"29542856","343204","2015-04-09 15:32:05","8","1598","<windows><git><gitignore>",".gitignore blank in Windows Explorer","<p>Why is my <code>.gitignore</code> file blank in Windows (7) Explorer?</p>

<p>Note that both the <code>.htaccess</code> file and the <code>.git</code> folder appear as expected.</p>

<p>See:</p>

<p><a href=""https://i.stack.imgur.com/jWxpR.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jWxpR.png"" alt=""enter image description here""></a></p>
","0","343204","0","0"
"29543060","343204","2015-04-09 15:42:03","3","249","<git><gitignore>",".gitignore not working with fresh repo","<p>I've got a brand new git repo which I've just checked out. I've then made an update to my <code>.gitignore</code> with the following line:</p>

<pre><code>wp-config.php
</code></pre>

<p>My <code>git status</code> now reads:</p>

<pre><code>On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use ""git push"" to publish your local commits)

Changes not staged for commit:
  (use ""git add &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
</code></pre>

<p>I add and commit this file (locally). I then update the <code>wp-config.php</code> file.</p>

<p>However, now, when I run <code>git status</code> I get the following:</p>

<pre><code>On branch master
Your branch is ahead of 'origin/master' by 2 commits.
  (use ""git push"" to publish your local commits)

Changes not staged for commit:
  (use ""git add &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

        modified:   wp-config.php
</code></pre>

<p>I've gone through this <a href=""https://stackoverflow.com/questions/11451535/gitignore-not-working"">.gitignore is not working</a>
but the points made don't seem to be applicable as I'm using a completely fresh repo.</p>

<p>Any further suggestions?</p>

<p>Surely I don't have to commit it to the remote ('origin/master') to ignore it locally?</p>
","2","343204","",""
"11902446","387194","2012-08-10 13:14:52","10","2350","<git><emacs><gitignore><temporary-files>","How can I add pattern that start with hash to gitignore","<p>When I work with Emacs it create temporary files like <code>#foo.txt#</code> how can I add pattern to <code>.gitignore</code> that will ignore those files (# is interpreted by git as comment in .gitignore)</p>
","0","387194","",""
"11968531","21728","2012-08-15 11:32:40","677","551296","<git><intellij-idea><gitignore><webstorm>","What to gitignore from the .idea folder?","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/3041154/intellij-idea-9-10-what-folders-to-check-into-or-not-check-into-source-contro"">Intellij Idea 9/10, what folders to check into (or not check into) source control?</a>  </p>
</blockquote>



<p>I started using WebStorm for web development and am not sure what to add and what to exclude from our Git repository. Clearly some files inside the <code>.idea</code> folder are meant to be version controlled like the external library settings (<code>jsLibraryMappings.xml</code>) but others will probably change very often and are developer-specific (e.g., <code>workspace.xml</code>).</p>

<p>What is the recommended <code>.gitignore</code> pattern for WebStorm / IntelliJ IDEA?</p>

<p>P.S. There are already questions about this but usually focus only on whether to include the whole <code>.idea</code> folder or whether to fully exclude it. I think some of the files inside the <code>.idea</code> folder should be version controlled while others shouldn't and I'm trying to find out which ones.</p>
","3","21728","0","0"
"11979634","336920","2012-08-16 01:46:29","4","1402","<git><git-svn><gitignore>","How do I keep my local version of files, without using .gitignore?","<p>Don't want to change .gitignore because other people want the files in the repo. But I have my own copy that I want to use.</p>

<p>I edited <code>.git/info/exclude</code> and added the following:</p>

<pre><code>/Gemfile
/Gemfile.lock
/config/database.yml
/spec/spec_helper.rb
</code></pre>

<p>This doesn't seem to do anything. <code>git status</code> still shows:</p>

<pre><code># Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       modified:   Gemfile
#       modified:   Gemfile.lock
#       modified:   config/database.yml
#       modified:   spec/spec_helper.rb
</code></pre>

<p>What is the best way to keep my local versions of files without using .gitignore?</p>
","1","336920","0","0"
"11982379","1184717","2012-08-16 07:17:12","4","1430","<git><branch><git-branch><gitignore>","Why doesn't .gitignore work across branches?","<p>Working on a local Git (cloned) repository, I have created a branch and placed <code>.gitignore</code> file within it to exclude few directories from <code>git commit</code>. It works just fine, but after switching to a different branch, those directories (the excluded ones) appear in it (on the branch which does not include those directories).</p>

<p>Is it a normal Git behavior? If so, what is the best practice to avoid the issue above?</p>
","0","1184717","0","0"
"29645376","4375351","2015-04-15 08:33:34","2","1265","<git><gitignore><git-bash>","How to add sub node_modules to .gitignore?","<p>Basically I've created a new repository for small features that my team uses in several projects. </p>

<p>The structure is the following: </p>

<pre><code>[feature1]

|-- [node_modules]

[feature2]

|-- [node_modules]
</code></pre>

<p>1) How can I add all the node_modules inside each feature (same repository for all of them) ? </p>

<p>I've tried : </p>

<pre><code>*/node_modules/
*node_modules/
</code></pre>

<p>2) Is there a way to create a branch for each feature and still all the team members can access them? Or do you think a full repository with all the features and if someone decides to improve one just merge it to the master after they are done? </p>

<p>Thanks.</p>
","1","4375351","",""
"66241583","10568754","2021-02-17 12:03:06","0","868","<git><gitignore><git-add><git-rm>","Undo .gitignore changes","<p>I previously ignored a folder, but now I would like to ignore its content only: How do I remove/modify some entries from my .gitignore file so that git will track them again? I tried updating the gitignore file and adding the folder with <code>git add -f &lt;folder-name&gt;</code>, but it didn't work.</p>
<p>Thank you for your help</p>
","0","10568754","0","0"
"12007698","553473","2012-08-17 14:27:20","0","1902","<git><rebase><gitignore>","stuck in git rebase and ignored/removed files wont remain ignored","<p>Ok first issue:
  I'm not entirely sure how as im rather new to git but I am now stuck with the branch <code>master:REBASE</code>. <strong>EDIT</strong> I was using github's windows client to pull down some changes i had pushed from another pc. Git error-ed saying I had unstaged files and could not complete. I don't have the exact message because I closed the window on accident. I have no idea how to get through this.</p>

<p>Second issue is with untracking files O have <code>git rm --cached &lt;filename&gt;</code> literally 5 times and these three file just keep coming back. I have made sure to add the entire directory to my .gitignore and these are the only three i have problems with.</p>

<p><strong>EDIT</strong><br>
.gitignore contents  </p>

<pre><code>#################  
## Eclipse
#################

    *.pydevproject
    .project
    .metadata
    bin/
    tmp/
    *.tmp
    *.bak
    *.swp
    *~.nib
    local.properties
    .classpath
    .settings/
    .loadpath

    # External tool builders
    .externalToolBuilders/

    # Locally stored ""Eclipse launch configurations""
    *.launch

    # CDT-specific
    .cproject

    # PDT-specific
    .buildpath


############
## Windows 
############

    # Windows image file caches
    Thumbs.db

    # Folder config file
    Desktop.ini

#########
#archives
#########
    *.zip

##############
#OOE Specifics
##############
#Generated files and directories
/txt
/signed 
/unsigned
/hi7
logindetails.csv
/timer/
config.php
</code></pre>

<p>example of file to be ignored/removed:</p>

<pre><code>timer/jquery.timeentry-zh-CN.js  
timer/jquery.timeentry-pl.js  
timer/jquery.timeentry-ru.js
timer/jquery.timeentry-hu.js
</code></pre>

<p>also i want to keep these files in the working directory i just dont want to have them being tracked.</p>

<p>If any more info or clarification is needed please let me know.</p>
","5","553473","",""
"29661059","897523","2015-04-15 21:15:44","0","1893","<git><git-merge><gitignore>","Git deleting .gitignore files on merge?","<p>I am trying to follow this <a href=""https://www.atlassian.com/git/tutorials/comparing-workflows/gitflow-workflow"" rel=""nofollow"">workflow</a>.
But I am having issues. Here's the deal:
I started my repo with master tracking some files.
Immediately I branched into a develop branch.
I later learned that those files should not be tracked (Wordpress core files...I'm learning) so I added them to the .gitignore file.
Now, I am ready for a release, so I branched off into a release for some fine tuning.</p>

<p>So the situation is this: Master is still tracking the files(it only has a single commit).  And release/1.0 is not tracking the files.</p>

<p>Now I am trying to merge my release branch back into master, but when I do that it deletes all my untracked files, instead of just leaving them be.</p>

<p>This is what I'm trying:</p>

<pre><code>git checkout master
git merge release/1.0
</code></pre>
","0","897523","",""
"47719399","2422125","2017-12-08 17:29:14","4","1714","<git><gitignore><atlassian-sourcetree>","Ignore git submodule without read permission","<p><strong>The situation:</strong> </p>

<p>I have a repository that has a submodule.</p>

<p>Normal people (like me) don't have read permissions for this submodule which isn't really a problem as it isn't required to run the project.</p>

<p>My problem is that every time I check something out I get errors telling me that the submodule update failed because the submodule remote couldn't be read:</p>

<pre><code>fatal: Needed a single revision
Unable to find current revision in submodule path 
</code></pre>

<p>no surprise ...</p>

<p>I tried to remove it manually from .gitmodules and then use </p>

<pre><code>git update-index --assume-unchanged .gitmodules
</code></pre>

<p>but this only works until the next checkout as submodules seem to get special treatment. </p>

<p>I tried putting .gitmodules into .gitignore or .git/info/exclude but git ignored that, reported .gitmodules as changed and gave me the original one again at checkout.</p>

<p><strong>My question:</strong></p>

<p>How do I suppress these errors and completely ignore the existence of this submodule locally... including all further remote changes that try to reintroduce it?</p>

<hr>

<p><strong>Note:</strong> Please assume that the solution has to stay on my end and requires no changes on the remote side... as they will not happen (already tried talking to the repo admin)</p>
","2","2422125","",""
"12077206","397991","2012-08-22 16:09:42","21","13465","<git><gitignore>","Can't exclude a folder using .gitignore","<p>I can't exclude files from <code>.idea</code> folder from tracking by git. It is on the same level as <code>.gitignore</code> file and my <code>.gitignore</code> contains:</p>

<pre><code>.idea
</code></pre>

<p>and even:</p>

<pre><code>idea
</code></pre>

<p>Any advice guys?</p>
","2","397991","0","0"
"12090726","1049688","2012-08-23 11:39:12","1","281","<gitignore>",".gitignore rules not working","<p>I'm in the process of building a Lemonstand site, which I'm managing via git. As such, I'm using the following .gitignore rules:</p>

<pre><code># Lemonstand
.htaccess
php.ini
boot.php
index.php
install.php
/config/*
/controllers/*
/init/*
/logs/*
/phproad/*
/temp/*
/uploaded/*
/installer_files/*
/modules/backend/*
/modules/blog/*
/modules/cms/*
/modules/core/*
/modules/session/*
/modules/shop/*
/modules/system/*
/modules/users/*
# add content_*.php if you don't want erase client changes to content

/modules/gallery/*
/modules/lddevel/*
/modules/tweak/*
</code></pre>

<p>(The top block <a href=""https://github.com/github/gitignore/blob/master/LemonStand.gitignore"" rel=""nofollow"">I got from github</a>, with the second block being some additional rules I added myself to avoid issues with Lemonstands updating system).</p>

<p>My problem is that I'm adding a custom invoice to Lemonstand, which (to cut a long story short) requires the addition of a folder and some files within <code>/modules/shop/invoice_templates/</code>, which I've named <code>cm_standard</code>.</p>

<p>Because this is extra to the default Lemonstand, I want to get this tracked with git, so I'm trying to use the following rule to the bottom of my gitignore file:</p>

<pre><code>!/modules/shop/invoice_templates/cm_standard/*
</code></pre>

<p>But when I do a <code>git add -A</code>, it isn't picking up the files within that directory. Even if I do a <code>git add modules/shop/invoice_templates/cm_standard/*</code> it tells me:</p>

<pre><code>The following paths are ignored by one of your .gitignore files:
modules/shop/invoice_templates
Use -f if you really want to add them.
fatal: no files added
</code></pre>

<p>Which further suggests I've not written the rule correctly - can anyone help? Thank you.</p>
","5","1049688","0","0"
"30227858","1995781","2015-05-14 01:31:05","156","128740","<git><gitignore>",".gitignore exclude specific file","<p>I am trying to use <code>.gitignore</code> file to exclude <code>templates.js</code> located in <code>public/app/</code> folder. My <code>.gitignore</code> file looks like this:</p>

<pre><code>/vendor
/node_modules
composer.phar
composer.lock
.DS_Store
templates.js
</code></pre>

<p>But when I check in the Git Gui, the <code>templates.js</code> file is still show in it. How can I specifically exclude a file using <code>.gitignore</code>?</p>
","2","1995781","0","0"
"30239047","1276495","2015-05-14 13:46:53","1","2095","<android><git><android-studio><gitignore>","Typical .gitignore file for Android Studio Project","<p>I have published my <strong>Android Studio Project</strong> on <strong>github</strong>. 
As Android Studio projects has so many new files like <code>gradle</code>, <code>iml</code>, <code>properties</code>, <code>md</code> etc files, I need to know what files should be included in the ignore list.
If any one can share a typical <em>.gitignore</em> file for Android Studio will help me a lot.</p>
","0","1276495","",""
"35342733","21966538","2016-02-11 14:59:29","1","210","<git><gitignore>","Global ~/.gitignore not working for one specific repo","<p>I have a .gitignore in my home folder containing:</p>

<pre><code>.DS_Store
*sublime*
...etc...
</code></pre>

<p>Displaying the git config gives me this:</p>

<pre><code>core.excludesfile=~/.gitignore
</code></pre>

<p>Everything gets ignored nicely in every project repository I'm working with. Except for one that I've cloned from a third party company we're collaborating with. Sublime files, .DS_Store files, ... keep popping up unless I define them in the local .gitignore of the repository. Not a major problem, but annoying.</p>

<p>What could be causing this? 
Could there be specific git settings in the cloned repo that override my settings?</p>

<p>I'm using Tower, btw, not that I think it really matters ;)</p>
","1","21966538","",""
"48485470","4710968","2018-01-28 10:45:19","1","912","<git><gitignore><git-clean>","Understanding .gitignore masking and git clean","<p>I really have hard time to understand how .gitignore file works...</p>

<p>This is how my file looks like:</p>

<pre><code>custom/history
cache
*.log
custom/modules/*/Ext
upload
sugar-cron*
custom/application/Ext
custom/Extenstion/modules/*/Ext/Language
!custom/modules/*/Language/cs_CZ.*
!custom/modules/*/Language/en_us.*
custom/Extenstion/application/Ext/Language
!custom/Extenstion/application/Ext/Language/cs_CZ.*
!custom/Extenstion/application/Ext/Language/en_US.*
.htaccess
config.php
config_override.php
files.md5
</code></pre>

<p>This is how my git status looked like:</p>

<pre><code>apache@cb772759c68a sugarcrm$ git status
# On branch master
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#    LOG.txt
#    deploy_backup/
nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p>So now I wanted to get rid of the two untracked files, but to my surprise a whole bunch of other files was removed too.</p>

<pre><code>apache@cb772759c68a sugarcrm$ git clean -fd
Removing Disabled/upload:/
Removing LOG.txt
Removing custom/Extension/modules/Bugs/Ext/Language/
Removing custom/Extension/modules/Cases/Ext/Language/
Removing custom/Extension/modules/EmailAddresses/
Removing custom/Extension/modules/EmailParticipants/
Removing custom/Extension/modules/ForecastManagerWorksheets/
Removing custom/Extension/modules/ForecastWorksheets/
Removing custom/Extension/modules/Forecasts/
Removing custom/Extension/modules/Meetings/Ext/Layoutdefs/
Removing custom/Extension/modules/Meetings/Ext/WirelessLayoutdefs/
Removing custom/Extension/modules/Meetings/Ext/clients/
Removing custom/Extension/modules/ModuleBuilder/
Removing custom/Extension/modules/OutboundEmail/
Removing custom/Extension/modules/PdfManager/
Removing custom/Extension/modules/ProjectTask/Ext/Language/
Removing custom/Extension/modules/Quotas/
Removing custom/Extension/modules/Quotes/Ext/Dependencies/
Removing custom/Extension/modules/Targets/
Removing custom/Extension/modules/Tasks/Ext/Language/
Removing custom/Extension/modules/TimePeriods/
Removing custom/application/
Removing custom/install/
Removing custom/modules/Administration/
Removing custom/modules/Bugs/
Removing custom/modules/Cases/
Removing custom/modules/Contracts/
Removing custom/modules/Emails/
Removing custom/modules/HHP_Products/
Removing custom/modules/KBContents/
Removing custom/modules/Project/
Removing custom/modules/ProjectTask/
Removing custom/modules/ProspectLists/
Removing custom/modules/Prospects/
Removing custom/modules/Quotas/
Removing custom/modules/Reports/
Removing custom/modules/RevenueLineItems/
Removing custom/modules/Schedulers/
Removing custom/modules/Tags/
Removing custom/modules/Teams/
Removing custom/modules/hhp_assignment_zip/
Removing custom/modules/hhp_zipcode/
Removing custom/working/modules/Calls/
Removing custom/working/modules/Leads/clients/
Removing deploy_backup/
Removing deploy_log/
Removing dist/identity-provider/tests/docker/saml-test/config/simplesamlphp/config/
Removing vendor/sugarcrm/identity-provider/tests/docker/saml-test/config/simplesamlphp/config/
</code></pre>

<p>First point - The removed files were not shown after <code>git status</code> so obviously they were part of gitignore ""mask""... Can anyone explain, how does any of these files match any of the patterns in gitignore? Like <code>vendor/sugarcrm/identity-provider/tests/docker/saml-test/config/simplesamlphp/config/</code> ... Can anyone help me with building a propper gitignore?</p>

<p>Second point - I thought that .gitignore ""protects"" these unversioned files from <code>git clean</code>, that git literally does not take any action up on them. So obviously it does delete them... how can I not delete unversioned files while using <code>git clean</code> ?</p>

<p>EDIT: I confused git clean with git rm, I was talking about git clean the whole time</p>

<p>EDIT 2: it turned out, that the deleted directories which didn't match the .gitignore were ""empty"" after all. (they had subdirectories, but the directory tree was without any files...)</p>
","4","4710968","",""
"59382125","8800839","2019-12-17 21:11:00","0","185","<git><gitignore>","Make exceptions to the exceptions of gitignore","<p>Git enables one to ignore folders / files.
For instance:</p>

<pre><code>folderName
</code></pre>

<p>Git also enables one to make exceptions.
For instance:</p>

<pre><code>!folderName
</code></pre>

<p>My question is, if it is possible to make exceptions of the exception.
For instance, given the following folder structure:</p>

<ul>
<li>sub1

<ul>
<li>subsub1

<ul>
<li>exceptedFolderThatShouldNotBeExcepted</li>
<li>exceptedFolder</li>
<li>exceptedFile</li>
<li>exceptedFile2 </li>
</ul></li>
<li>subsub2</li>
<li>subsub3</li>
</ul></li>
<li>sub2</li>
<li>sub3</li>
</ul>

<p>It has a folder, <code>subsub1</code>, which may contain lots of files that usually are ignored, but should not be ignored.
This is why <code>!sub\subsub1</code> is added to gitignore.
But there should be an exception to that: <code>exceptedFolderThatShouldNotBeExcepted</code> should be ignored.</p>

<p>Thus, I am looking for an option like<code>!!exceptedFolderThatShouldNotBeExcepted</code> that leads to git ignoring just that folder.</p>

<p>The motivation for this is not having to except all the other folders and files (<code>exceptedFolder</code>, <code>exceptedFile</code>, <code>exceptedFile2</code>).</p>
","2","8800839","",""
"66654892","7691287","2021-03-16 12:05:20","1","414","<git><gitignore>",".gitignore exclude folder unless it is in parent folder matching pattern","<p>I have the following folders:</p>
<pre><code>../A/A/bin/
../A/A.source/Bin/
../B/B/bin/
../B/B.source/Bin/
</code></pre>
<p>Folders that match pattern *.source/Bin/ (&quot;../A/A.source/Bin/&quot; &quot;..B/B.source/Bin/&quot;) should not be ignored.</p>
<p>I've tried to achieve this by different ignore rules, but in all cases, it either ignores every bin folder and its content or ignore nothing at all. I've looked through gitignore Documentation, but to no avail.<br />
How can I achieve that?</p>
<p>EDIT: I tried these rules:</p>
<pre><code># everything is ignored
bin
!*.source/bin 

bin/
!*.source/bin/

# everything is allowed
bin/*
!*.source/bin/* 

bin/
!*.source/bin/

bin/*.*
!*.source/bin/*.*
</code></pre>
","4","7691287","",""
"48503493","2307200","2018-01-29 14:25:17","0","17","<python><git><gitignore>","How to clone/load special data mentioned in gitignore from master","<p>I want to keep files in my git master, which should not be downloaded when the git is cloned. Only running an additional script should download these optional files (some trained models).
Is there any git way (e.g. a special command)/pythonic way to do this?</p>
","2","2307200","",""
"48511988","5353036","2018-01-30 00:06:21","0","36","<git><gitignore>","Store the .gitignore file in some other folder","<p>I have tried to put in .gitignore file in the root directory, and that works locally. But the remote repository I use does not allow files to be committed in the root directory.</p>

<p>So I tried pasting the .gitignore file in some other folder, but the files I need ignored are not ignored. I may be missing something, and I need git to look into that folder for the .gitignore file. How do you do this?</p>
","4","5353036","",""
"14075604","841626","2012-12-28 20:48:33","1","666","<git><version-control><gitignore><git-stash>","prevent git stash from resetting files in .gitignore","<p>So I'm using drupal that is version controlled via git</p>

<p>I modified the bootstrap.inc file in drupal that I don't want to push to the origin and should only be in my local environment</p>

<p>I added bootstrap.inc to my ~/.gitignore</p>

<p>however whenever I do a git stash save, my changes in bootstrap.inc gets reset to the head version even though I'm ignoring it...</p>

<p>is there a way to prevent this from happening and still have my own personal changes to bootstrap.inc not being reset by git stash? </p>
","2","841626","",""
"21597743","1670830","2014-02-06 08:38:05","0","10797","<git><xcode5><gitignore>","Which files should I ignore with Git (.gitignore) for an Xcode 5 project?","<p>Which files should I include in <code>.gitignore</code> when using Git with Xcode 5?</p>
","0","1670830","0","0"
"48524417","2371987","2018-01-30 14:58:40","166","158738","<javascript><node.js><git><npm><gitignore>","Should the package-lock.json file be added to .gitignore?","<p>To lock the versions of dependencies that are installed over a project, the command <code>npm install</code> creates a file called <code>package-lock.json</code>. This was made since <a href=""https://nodejs.org/en/blog/release/v8.0.0/"" rel=""noreferrer"">Node.js v8.0.0</a> and <a href=""https://www.npmjs.com/package/npm5"" rel=""noreferrer"">npm v5.0.0</a>, as several of you might know.</p>

<p>Despite of <a href=""https://nodejs.org/en/docs/guides/nodejs-docker-webapp/"" rel=""noreferrer"">Node.js</a> and <a href=""https://docs.npmjs.com/files/package-lock.json"" rel=""noreferrer"">npm</a> recommendations about committing this file, several concerns regarding when you should avoid to do it, are also an option. Typically we commit in our projects, nevertheless, it is a peculiar question.</p>

<p>While we should commit the <code>package-lock.json</code> file by default, we have a specific case we should not. For instance, if we want to test the latest version of our project dependencies, it can be an option to add <code>package-lock.json</code> into <code>.gitignore</code>.</p>

<p>So, the questions are as follows:</p>

<ol>
<li>Should the <code>package-lock.json</code> file be added to <code>.gitignore</code>?</li>
<li>Is there any particular situation that we <strong>MUST</strong> or <strong>MUST NOT</strong> do it?</li>
</ol>
","1","2371987","0","0"
"21689644","1974494","2014-02-10 22:56:23","3","4194","<git><gitignore><ignore>","I can't add directory to .gitignore","<p>I can't add ""taget"" directory to "".gitignore"" file. I do something bad :-(</p>

<pre><code>martin@martin:~/git/gitRepo$ tree -L 3 -a
.
├── .git
  ...
├── .gitignore
└── MyProject
    ├── .classpath
    ├── pom.xml
    ├── .project
    ├── .settings
  ...
    ├── .springBeans
    ├── src
    │   ├── main
    │   └── test
    └── target
        ├── classes
        ├── m2e-wtp
        └── test-classes

269 directories, 32 files
martin@martin:~/git/gitRepo$ 
martin@martin:~/git/gitRepo$ cat .gitignore 
*.*~
*.class
*.jar
*.war
*.ear
MyProject/.classpath
MyProject/.project
MyProject/.settings/
MyProject/target/
/MyProject/target/
target
martin@martin:~/git/gitRepo$ 
martin@martin:~/git/gitRepo$ git status 
# On branch master
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   .gitignore
#   modified:   MyProject/.settings/org.eclipse.wst.validation.prefs
#   modified:   MyProject/target/classes/log4j.xml
#   modified:   MyProject/target/m2e-wtp/web-resources/META-INF/MANIFEST.MF
#   modified:   MyProject/target/m2e-wtp/web-resources/META-INF/maven/example.net/gitRepo/pom.properties
#   modified:   MyProject/target/m2e-wtp/web-resources/META-INF/maven/example.net/gitRepo/pom.xml
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
martin@martin:~/git/gitRepo$ 
</code></pre>

<p>""MyProject/.classpath"" is in ignore list, but I still see in ""git status"" MyProject/target* and MyProject/.settings.
Can you please help me what I do bad?
Thank you!</p>
","1","1974494","0","0"
"40691481","7042795","2016-11-19 09:57:26","5","529","<git><gitignore>",".gitignore does not work for **/*.xyz","<p>My git project contains .cas files that I do not want to be pushed to the repository. I thus added the line</p>

<pre><code>**/*.cas
</code></pre>

<p>to my <code>.gitignore</code> file but <code>.cas</code> files would still appear in <code>git status</code>.
After reading through numerous other posts I checked for the <code>.gitignore</code> entries to not have trailing white spaces and that they do have unix line change specifiers.</p>

<p>I then ran the following commands as advised here:
<a href=""https://stackoverflow.com/questions/6380196/gitignore-does-not-work"">.gitignore does not work</a></p>

<pre><code>git rm -r --cached .
git add .
</code></pre>

<p>but in vain! <code>git status</code> still reports e.g.</p>

<pre><code>new file:   calc/2_preliminary/1_CFD/7_Calc_Fluent/03_stationary_vof_stationary/mesh_04/run_10000.cas
</code></pre>

<p>Any ideas? I would really appreciate it.</p>

<h2>Update</h2>

<p><code>.gitignore</code> file content:</p>

<pre><code>calc/
0_BSc_Alvarez/
calc/0_Test/
documentation/Tutorial_Fluent/
literature/
thunderbird/
**/.idea/
.zim
**/ND800_*
**/*.cas
**/*.dat
**/*.cdat
**/*.uns
**/*.msh
**/*.bak
</code></pre>

<p><strong>git version is 1.7.1</strong></p>
","5","7042795","",""
"40692600","1427758","2016-11-19 11:57:33","3","727","<git><gitignore>","How do I clean up the .gitignore file?","<p>Is there git command that can be used to remove lines in .gitignore that are not used?</p>

<p>In other words, I want to remove patterns that will not make a difference for the project.</p>
","6","1427758","",""
"51046920","2279644","2018-06-26 15:49:45","1","600","<git><android-studio><gitignore>","Android Studio - git Local Changes file list - why is ignore option not clickable?","<p>How is it that sometimes I can right click and ignore files but sometimes not? </p>

<p>image showing no possibility to perform ignore on the selected file:</p>

<p><img src=""https://i.stack.imgur.com/7Bit4.jpg"" alt=""image""></p>
","0","2279644","",""
"2906633","218107","2010-05-25 16:47:46","8","10058","<git><mercurial><gitignore>","Confusing .gitignore syntax","<p>I was reading <a href=""http://www.kernel.org/pub/software/scm/git/docs/v1.7.10/gitignore.html"" rel=""nofollow noreferrer"">http://www.kernel.org/pub/software/scm/git/docs/v1.7.10/gitignore.html</a> and the 6 points used to explain the ignore patterns seem to be describing a custom variant of a glob search syntax.
I am more familiar with Mercurial, which allows to explicitly ignore via glob or regex patterns, no questions asked.</p>

<ul>
<li>Is there any similar functionality in Git?</li>
<li>Can anyone point me to some more exhaustive reference than the Git man page?</li>
</ul>

<p>Best,<br>
t</p>
","5","218107","0","0"
"66675967","26115","2021-03-17 15:15:34","0","71","<asp.net><configuration><gitignore>","A way to have local configuration overrides in Episerver that are not committed to git","<p>I have an issue where developers keep accidentally committing local changes to <code>Web/connectionStrings.config</code> and <code>Web/web.config</code> etc. with values that only work on their machine.</p>
<p>And I don't blame them; in most systems I've used before there's a standard way to have local settings overrides that the server willt ry to import if the local file exists but uses the default settings if it does not exist so that this local override file can be added to .gitignore and never accidentally committed to the repo. (E.g. in django the convention is to have a settins/local.py that is imported by the main settings file)</p>
<p>But I haven't found any way to do this in episerver no matter what I search; but it seems bizarre to me that the system requires you to modify an important configuration file in order to use a local database instead of the common dev database; and then requires every developer to remember to manually add every file <em>except</em> the the config file in order not to cause lots of confusing errors for the others. Surely there must be a better way?</p>
","1","26115","",""
"69402596","3653474","2021-10-01 08:12:09","1","590","<git><gitignore>","gitignore not working .env file getting updated","<p>I have this entry in my gitignore file in laravel</p>
<pre><code>/vendor
.env
</code></pre>
<p>but sometimes .env file also gets updated on live server</p>
<p>i ran this command on my local branch :</p>
<pre><code>git rm .env --cached
</code></pre>
<p>but after that this error is there : <code>fatal: pathspec '.env' did not match any files</code></p>
","0","3653474","",""
"66678460","14894085","2021-03-17 17:42:30","2","520","<git><gitignore>","Why is my subfolder not being ignored in my .gitignore?","<p><strong>Description</strong></p>
<p>I am trying to ignore a subfolder in my project, but it doesn't seem to be working. I have a .gitignore at the root level of my project. Also at the root there is an api folder that contains a firebase folder. This is the folder I am trying to ignore. The structure is:</p>
<pre><code>api/firebase/test.js
</code></pre>
<p><strong>Attempts at solution</strong></p>
<p>I have tried putting the following in my .gitignore at the root level:</p>
<pre><code>firebase/
api/firebase/
**/api/firebase
**/firebase
</code></pre>
<p>And none of it works. Any help is greatly appreciated.</p>
","5","14894085","",""
"18965581","487855","2013-09-23 17:44:58","1","430","<git><arguments><gitignore>","Git pass gitignore file as command line argument","<p>Is there a way to pass the path to a different gitignore file (or pipe the content of a gitignore file) to git commands?  </p>

<p>Basically I want to do <code>git diff --no-index path1 path2</code> but I want git to ignore some files, is there a way?  </p>
","0","487855","0","0"
"48610653","9310229","2018-02-04 16:56:20","1","53","<git><gitignore>","How can I use my `.gitignore` to ignore any file that is named like this: ""*.tmp.*""?","<p>How can I use my <code>.gitignore</code> to ignore any file that is named like this: <code>*.tmp.*</code>?
For example i have a file called <code>image.tmp.jpg</code>, can I be able to mark this without typing the name every time in the gitignore file?</p>

<p>Thanks in advance!</p>
","0","9310229","",""
"35437016","5436419","2016-02-16 15:51:07","1","302","<git><gitignore>","Git - Add files in ignored dir but still apply gitignore to the contents","<p>So I've looked around and understand how to add an ignored directory to a git repo, however all of these methods seem to me to result in every file in that directory being added, even those that should still really be ignored.</p>

<p>E.G. I have an ignored directory called dir/ and I want to add source contained (.cpp etc) to the git repo, while still applying the .gitignore file to items in that directory (i.e. continue ignoring .o files etc). The command that I think should work is:</p>

<pre><code>git add --all /path/to/dir/*
</code></pre>

<p>This, however, also adds files which I still want ignored (.o etc).</p>

<p>Anyone have any thoughts on this? Thanks in advance for the help!</p>
","1","5436419","",""
"48613807","654789","2018-02-04 22:51:23","2","342","<git><gitignore>",".gitignore not being recursively applied","<p><strong>End Goal:</strong>
Have git recursively ignore files of type <code>*.abc</code></p>

<p><strong>Problem:</strong>
Git</p>

<p><strong>Description:</strong></p>

<p>I have the following line in my <code>gitignore</code> top level file located at <code>/home/alma/project-origin/.gitignore</code>. </p>

<pre><code>/**/*.abc
</code></pre>

<p>I issue the following commands and get the following output</p>

<pre><code>cd /home/alma/project-origin/top-secret/subject
touch alma-wade.abc
git status .
On branch master
Untracked files:
  (use ""git add &lt;file&gt;..."" to include in what will be committed)

        alma-wade.abc

nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p>to trouble shoot I create a <code>.gitignore</code> file in that folder and run it again</p>

<pre><code>cd /home/alma/project-origin/top-secret/subject
touch alma-wade.abc
echo ""*.abc"" &gt;&gt; .gitignore
git status .
On branch master
Untracked files:
  (use ""git add &lt;file&gt;..."" to include in what will be committed)

        modified: .gitignore

nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p>I removed the .gitignore local file (<code>rm /home/alma/project-origin/top-secret/subject/.gitignore</code>) and started trouble shooting </p>

<p><strong>(A) Removing from cached</strong></p>

<p><a href=""http://blog.jonathanchannon.com/2012/11/18/gitignore-not-working-fixed/"" rel=""nofollow noreferrer"">Source</a></p>

<pre><code>cd /home/alma/project-origin/top-secret/subject
git rm -r --cached .
git commit -m ""...""
git push origin master
#Successful push
git add .
git status .
On branch master
Untracked files:
  (use ""git add &lt;file&gt;..."" to include in what will be committed)

        alma-wade.abc

nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p><strong>(B) Checking file encoding</strong></p>

<p><a href=""https://stackoverflow.com/questions/32401387/git-add-adding-ignored-files"">Source</a></p>

<pre><code>file -bi /home/alma/project-origin/.gitignore
text/plain; charset=us-ascii
</code></pre>

<p><strong>(C) Checking for trailing spaces</strong></p>

<p>opened <code>/home/alma/project-origin/.gitignore</code> in vim and issued the command <code>:set list</code> and conducted a visual inspection</p>

<p><strong>(D) Using git check-ignore -v</strong></p>

<pre><code>git check-ignore -v --no-index /home/alma/project-origin/top-secret/subject/alma-wade.abc
#no output
echo ""*.abc"" &gt;&gt; .gitignore
git check-ignore -v --no-index /home/alma/project-origin/top-secret/subject/alma-wade.abc
/home/alma/project-origin/top-secret/subject/.gitignore:1:*.abc       /home/alma/project-origin/top-secret/subject/alma-wade.abc
rm .gitignore
</code></pre>

<p><strong>(E) Using git check-ignore -v from top level directory</strong></p>

<p>This is the closest I have come to resolving this issue</p>

<pre><code>cd /home/alma/project-origin/
echo ""/**/*.abc"" &gt;&gt; .gitignore
cd /home/alma/project-origin/top-secret/subject/
git check-ignore -v --no-index /home/alma/project-origin/top-secret/subject/alma-wade.abc
#No output
cd /home/alma/project-origin/
git check-ignore -v --no-index /home/alma/project-origin/top-secret/subject/alma-wade.abc
/home/alma/project-origin.gitignore:1:/**/*.abc       /home/alma/project-origin/top-secret/subject/alma-wade.abc
</code></pre>

<p>The top level <code>.gitignore</code> rule is applied when I do the check from the top level folder, but not when I am in a sub folder. I am at my wits end. The only thing I can think of is that this has something to do with the file system (cifs mounted). Could someone please help.</p>
","3","654789","",""
"35439563","3750388","2016-02-16 17:46:27","5","627","<gitignore><github-desktop>","gitignore misses some binary files (DLLs & PEs)","<p>I use the latest version of Github Desktop. My repo consist of a rather large C# solution with many sub-directories and projects. I'd like to ignore all R#-cache files and compiled binaries using the .gitignore file which resides in the root directory of the local repo directory. There are no other gitignore's anywhere in this repo and none in any parent directories. My current gitignore is this:</p>

<pre><code>*.suo
*.user
_ReSharper.*
bin
obj
packages
*.cache
*.pdb
*.dll
*.exe
*.xml
</code></pre>

<p>When I made my changes, recompiled and tested everything, I open Github Desktop. It catches almost all files that should be ignored, only <em>some</em> <code>.dll</code>s, <code>.pdb</code>s and <code>.exe</code>s are not ignored and always show up as changed:</p>

<p><a href=""https://i.stack.imgur.com/5WMq4.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/5WMq4.png"" alt=""img""></a></p>

<p>Now, there are way more binary files in this repo. Only the specific ones in the screengrab are missed.</p>

<p>Is this fixable, and/or can the gitignore be altered to catch all files that it should catch?</p>

<p>Here's what I tried:</p>

<ul>
<li>Removed and re-cloned the repository</li>
<li>Removed and manually re-created the gitignore</li>
<li>Right-click->Ignore by file extension from within the GitHub Desktop client. This does not work, worse, it creates <em>duplicate</em> masks in the gitignore</li>
<li>Checked for conflicting gitignore's in directories accessible by Github Desktop</li>
</ul>
","7","3750388","0","0"
"35441218","406732","2016-02-16 19:18:11","2","2435","<git><powershell><merge><gitignore><posh-git>","How can I accept all remote files in a specific folder during a git merge?","<p>We're using posh-git on Windows Powershell for source control.</p>

<p>We're in the unenviable position of storing some of our built assemblies in our git repo.  I know all the sermons on why you shouldn't do that, but we have to live with it for now.  Thankfully they are in a separate solution, but sometimes two people work on that solution in their own branch simultaneously, and the last one in gets to take the merge conflict.  The process, of course, looks something like this:</p>

<ol>
<li>Person A lands their changes on develop.</li>
<li>Person B merges those changes, which include both assemblies and
update source code.</li>
<li>Person B resolves conflicts, as has to confirm which version of each
assembly they want to keep.  This is annoying and time-consuming,
and also unnecessary since Person B will rebuild the assembly after
merging the source code anyway.</li>
<li>Person B rebuilds the assemblies and makes a new commit to finish
the merge.</li>
</ol>

<p>The assemblies are in a folder in our Repo:  /Source/Foundation Assemblies/</p>

<p>Person B cannot just take <em>all</em> changes from the remote, since their branch may have conflicting changes, but it would be helpful to just <strong>""take theirs"" or ""take mine"" for the /Source/Foundation Assemblies/ folder only</strong>.  Is this something that can be done with git?</p>

<p>A command line example would be helpful.  Normally, the merge would just be:</p>

<pre><code>git merge develop
</code></pre>

<p>I was thinking it might be possible to .gitignore the /Source/Foundation Assemblies/ folder, and then remove it from the .gitignore after the merge, but that is three steps.  If we could do it in one from the command line, that would be <strong><em>GREAT!!!</em></strong></p>

<p>Any help appreciated!</p>
","0","406732","",""
"18982400","633961","2013-09-24 13:03:15","0","815","<git><svn><gitignore><svnignore>","svn to git, create-ignores does not work","<p>I try to convert a subversion repo to git with ""git svn ...""</p>

<p>(guide from <a href=""http://john.albin.net/git/convert-subversion-to-git"" rel=""nofollow"">http://john.albin.net/git/convert-subversion-to-git</a>)</p>

<p>Unfortunately ""git svn create-ignore"" does not work:</p>

<pre><code>config --get svn-remote.svn.fetch :refs/remotes/git-svn$: command returned error: 1
</code></pre>

<p>How can I get the svn:ignore properties to .gitignore files?</p>
","4","633961","",""
"35451148","3963594","2016-02-17 08:13:05","9","3125","<git><gitignore><git-assume-unchanged><git-skip-worktree>","Does git update-index --skip-worktree affect the upstream repo?","<p>I've been working with git for a while myself, and am now setting up a repo for our team. We develop a eCommerce platform.</p>

<p>There are a few directories and files to be ignored, such as the upload directory and environment specific config files.</p>

<p>While the config files are on .gitignore, I'd like to ignore the uploads directory with either <code>--skip-worktree</code> or <code>--assume-unchanged</code>.</p>

<p>My question - which I couldn't find an explicit answer on - is if the <code>--assume-unchanged</code> or <code>--skip-worktree</code> bit will be pushed to the upstream repo?</p>

<p>If not, what would be the optimal way to ensure that git doesn't manipulate the contents of the uploads directory, across ALL instances of the repository?</p>
","0","3963594","0","0"
"69409937","4105814","2021-10-01 17:34:19","0","147","<git><gitignore>","Parent gitignore to ignore any subdirectory gitignore files","<p>Is there a way through a <code>.gitignore</code> file (or some way through git version control) to ignore the effects of <code>.gitignore</code> files in subdirectories? The particular use case is that I'm copying open source folders into my git repo, and those open source folders have their own <code>.gitignore</code> files that I would like to ignore. I don't want to go through the process of manually deleting them because any time I bring the latest source folder over I'd have to remember/automate/etc. removing those files. Rather, I'd like to be able to have a folder structure like below:</p>
<pre><code>file1.c
.gitignore
module1/
  src1.c
  .gitignore
  ...
module2/
  src2.c
  .gitignore
  ...
</code></pre>
<p>Where the root <code>.gitignore</code> is applied, but all <code>.gitignore</code>'s in the module folders are ignored. It's not a problem if they're committed to source control. But the goal is to ignore the impacts of the contents of those <code>.gitignore</code> files in the overall directory.</p>
","1","4105814","",""
"31660687","1719235","2015-07-27 18:35:17","5","17827","<git><gruntjs><gitignore>",".gitignore not ignoring package.json","<p>I have a node project and I am trying to ignore my package.json.</p>

<p>I have added package.json inside .gitignore.</p>

<p>Basically I am working on creating swimlanes and I have another project's package.json overwritting the existing project's package.json. </p>

<p>What i see happening is the package.json file is overwritting the existing and its not ignoring the new package.json althought its in the .gitignore.</p>

<p>I tried</p>

<pre><code>git rm --cached 
</code></pre>

<p>and</p>

<pre><code>git add .
</code></pre>

<p>But this is deleteing my package.json file from my local which I dont want</p>

<p>Expected: I need the package.json to be igniored when I pull the new package.json using grunt fetchFromArtifactory.</p>
","0","1719235","",""
"59673991","7352626","2020-01-10 00:26:26","3","509","<git><version-control><gitignore>","When would you use .git/info/exclude instead of ~/.gitignore (core.excludesFile) to exclude files?","<p>I am little bit confused as to when would you use <code>.git/info/exclude</code> instead of <code>~/.gitignore (core.excludesFile)</code> to exclude files? I am clear when to use <code>.gitignore</code> file present in project repository which is specific to that project, version-controlled and shared with other repo via clone but I am unable to understand difference between the above two somewhat user specific files to be ignored.</p>

<p>Thus, I am looking for difference between <code>~/.gitignore</code> and <code>.git/info/exclude</code> and not between <code>.gitignore (project dir)</code> and <code>.git/info/exclude</code>.</p>

<p>UPDATE: I am unable to think specific usage of <code>.git/info/exclude</code> as whatever files I want to ignore either fall in <code>.gitignore</code> or <code>~/.gitignore</code>. It would really help if somebody can give an example for pattern/file that should specifically be included in <code>.git/info/exclude</code>.</p>
","7","7352626","",""
"19000506","324969","2013-09-25 09:00:18","2","237","<git><gitignore>","Ignore future modifications of a .gitignore'd file which was added with git add -f","<p>I often find myself commiting with <code>git add -f</code> binary files which are in .gitignore (<code>.exe</code>, <code>.pdf</code>, ...), just to include a stable, working, compiled file in the history, so I can at least use it even if I have problems compiling it again (eg. because of a missing library on another computer).</p>

<pre><code>$ cat .gitignore
*.exe
*.pdf
$ git add -f program.exe documentation.pdf
$ git commit -m ""Added working .exe and .pdf""
$ gcc program.c -o program.exe
$ pdflatex documentation.tex # Generates documentation.pdf
$ git status --short
 M program.exe
 M documentation.pdf
</code></pre>

<p>Now that I've added the <code>.exe</code> and <code>.pdf</code>, I'd like that future modifications to them be ignored. Otherwise, each time I do <code>git commit -a</code> these files are automatically included.</p>
","0","324969","",""
"35477146","1688306","2016-02-18 09:12:05","0","529","<git><visual-studio><visual-studio-2015><bitbucket><gitignore>","Visual Studio files included in git commits even when excluded using .gitignore","<p>I have a large VS solution, under Git source control using Atlassian BitBucket. </p>

<p>The .gitignore file contains lines to exclude build results (int the /obj and /bin) directories, but these keep showing up in my changes.</p>

<p>The .gitignore file contains the following lines, could anyone tell me what I'm doing wrong?</p>

<pre><code># Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
build/
bld/
[Bb]in/
[Oo]bj/
</code></pre>
","2","1688306","0","0"
"19023550","992687","2013-09-26 08:51:12","161","44797","<git><gitignore>","How do I add files without dots in them (all extension-less files) to the gitignore file?","<p>Like the title says, is it possible to add ""files without dots in them"" to the gitignore file?</p>

<p>I imagine this would take care of all those bothersome extensionless files.</p>
","3","992687","0","0"
"40928042","6768672","2016-12-02 08:48:30","0","1845","<java><android><git><android-studio><gitignore>","Android Studio will not run a project recently cloned from github, app.iml module not found","<p>I have been having a lot of trouble cloning a project I made on my other computer onto a new computer in android studio, when first opening the project it prompts that it cant find some <code>.iml</code> modules but i checked in the folder and they are there. When I try to run, clean or build the app i get 2 exceptions thrown: </p>

<blockquote>
  <p><em>Error:java.io.FileNotFoundException: D:\foo\app\build\intermediates\res\merged\debug\drawable-xhdpi-v4\abc_ic_star_black_16dp.png
  (The requested operation cannot be performed on a file with a
  user-mapped section open)</em></p>
</blockquote>

<p><code>:app:mergeDebugResources</code>, which gives me the same quote as above <em>(The requested operation cannot be performed on a file with a user-mapped section open)</em></p>

<p>In the activities I also get an error everytime i try and reference the resource folder: <em>Cannot resolve symbol ""R""</em></p>

<p>I believe I am having the same problem as this person earlier this year, but I either did not follow the answers instructions properly or this doesnt work anymore.
<a href=""https://stackoverflow.com/questions/34583214/cant-import-android-project-from-git"">Can&#39;t import android project from git</a></p>

<p>The solution might be some change to the gitignore file I am using, here is my current gitignore:<a href=""https://github.com/asdiamond/GodSpeedInvestmentApp/blob/master/.gitignore"" rel=""nofollow noreferrer"">https://github.com/asdiamond/GodSpeedInvestmentApp/blob/master/.gitignore</a></p>
","0","6768672","",""
"3313996","312427","2010-07-22 22:25:34","0","1690","<git><gitignore>","How do you gitignore everything except a directory?","<p>I am trying to sync my desktop and laptop using a cron'd git. It works beautifully on a single directory. However I want to sync multiple config files scattered about and some other things. To do this decided to turn my home folder into a git directory and ignore everything except for a few select files and directories.</p>

<pre><code>$ cat .gitignore
*
# test is a directory
!test
</code></pre>

<p>Does not work. Looking at another stackoverflow question, I found <code>*/</code> and used it instead of <code>*</code>. That almost worked as I wanted it to, but then all of the random single hidden files I have scattered about my home directory showed up.</p>
","0","312427","",""
"51824560","5655042","2018-08-13 14:21:14","0","298","<git><gitignore><git-add>","Git add . adds files from .gitignore","<p>if relevant: Laravel. PHP 7.0.3 </p>

<p>Hi! I had to delete 'vendor' folder in my project and do ""composer install"" to re-install all libraries. Then I modified some project's files (outside ""/vendor""). </p>

<pre><code>git status
</code></pre>

<p>showed me not only my project files being modified, but all the files inside '/vendor' being deleted and then modified.</p>

<p>After</p>

<pre><code>git add . &amp;&amp; git status
</code></pre>

<p>shows all projects modified files and all files from ""/vendor"" in the list of ""changes to be committed"".</p>

<p>My .gitignore file has a line: </p>

<blockquote>
  <p>/vendor</p>
</blockquote>

<p>And I thought that it would prevent any files in ""/vendor"" folder to be added to index and commited. But it seems to me now that all the changes in this folder are going to be committed to server which I don't want. </p>

<p>Are changes in '/vendor' folder are going to be committed and pushed to remote despite '/vendor' is in .gitignore?
If yes, how can I undo git add?:)</p>

<p>Thank you in advance.</p>

<p>I don't think my question is duplicate (I've read them). My .gitignore had /vendor in it before I deleted vendor folder and re-installed everything via composer.</p>
","7","5655042","",""
"69692970","14776802","2021-10-24 00:12:30","2","79","<git><version-control><gitignore>","What does a gitignore global config do exactly?","<p>I have been reading online, but still a bit confused. After running the below configuration for my local set up. Will I ever need to create a gitignore for any projects again in the future?</p>
<pre><code>git config --global core.excludesfile %USERPROFILE%\.gitignore
</code></pre>
<p>And is there a way to set up a dynamic config where the text file would be updated with current changes ?</p>
","0","14776802","",""
"3319479","93448","2010-07-23 15:10:36","427","101929","<git><gitignore>","Can I 'git commit' a file and ignore its content changes?","<p>Every developer on my team has their own local configuration.  That configuration information is stored in a file called <code>devtargets.rb</code> which is used in our rake build tasks. I don't want developers to clobber each other's devtargets file, though. </p>

<p>My first thought was to put that file in the <code>.gitignore</code> list so that it is not committed to git.</p>

<p>Then I started wondering: is it possible to commit the file, but ignore changes to the file? So, I would commit a default version of the file and then when a developer changes it on their local machine, git would ignore the changes and it wouldn't show up in the list of changed files when you do a git status or git commit.</p>

<p>Is that possible?  It would certainly be a nice feature...</p>
","3","93448","0","0"
"51829668","131149","2018-08-13 19:53:40","-1","1548","<git><github><gitignore>","GitHub not respecting .gitignore?","<p>I'm trying to use .gitignore to prevent GitHub from committing changes to a file in my project (file contains API key and secret for accessing a web service).</p>

<p>It's not working - my project on GitHub keeps getting the changes, even though I've confirmed the file is in the project's .gitignore file.</p>

<p>If I use <code>git update-index --assume-unchanged</code>, the file in question is removed from the repo entirely. I want the file there; I just don't want my changes to sync.</p>

<p>What am I missing?</p>

<p>.gitignore is:</p>

<pre><code>## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates

#*.resw

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
bld/
[Bb]in/
[Oo]bj/
[Ll]og/

# Visual Studio 2015 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUNIT
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# DNX
project.lock.json
project.fragment.lock.json
artifacts/

*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile
*.VC.db
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding add-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# TODO: Comment the next line if you want to checkin your web deploy settings
# but database connection strings (with potential passwords) will be unencrypted
#*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config
# NuGet v3's project.json files produces more ignoreable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
node_modules/
orleans.codegen.cs

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup &amp; report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# JetBrains Rider
.idea/
*.sln.iml

# CodeRush
.cr/

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc
Tweeter/API_Keys.resw
</code></pre>
","3","131149","",""
"22046808","802365","2014-02-26 16:04:57","20","23890","<git><gitignore><git-gui>","How to ignore files using git-gui (tcl-tk) application?","<p>I'm using the <code>git-gui</code> interface to manage my <code>git</code> project. Despite being ugly –<code>tcl-tk</code>– it's one of the most complete interface out there. </p>

<p>However, I can't find <strong>how to ignore files from this interface ?</strong></p>

<p><img src=""https://i.stack.imgur.com/tRKYe.png"" alt=""enter image description here""></p>
","2","802365","0","0"
"48725680","1629932","2018-02-10 21:20:45","1","1183","<git><unity-game-engine><gitignore>","Single .gitignore for parent folder with multiple unity projects","<p>I have the following <code>.gitignore</code> for my unity project parent folder which has multiple unity game folders inside. I have tried using <code>git rm --cached</code> as well but it seems like it is not stopping the tracking of library folder. The folder structure is as follows, where Car Racing, Hat trick etc, are all independent unity game folders.
<a href=""https://i.stack.imgur.com/DzYqS.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/DzYqS.png"" alt=""enter image description here""></a></p>

<pre><code>[Ll]ibrary/
[Tt]emp/
[Oo]bj/
[Bb]uild/
[Bb]uilds/
Assets/AssetStoreTools*

# Visual Studio 2015 cache directory
/.vs/

# Autogenerated VS/MD/Consulo solution and project files
ExportedObj/
.consulo/
*.csproj
*.unityproj
*.sln
*.suo
*.tmp
*.user
*.userprefs
*.pidb
*.booproj
*.svd
*.pdb

# Unity3D generated meta files
*.pidb.meta

# Unity3D Generated File On Crash Reports
sysinfo.txt

# Builds
*.apk
*.unitypackage

# Data generated by Visage tracking
*EMOTION*.txt
/*/*-*-*-*-*-*-*.txt
</code></pre>
","3","1629932","0","0"
"48727991","2896821","2018-02-11 03:25:37","2","112","<git><jenkins><gitignore>","What if I want to use files in gitignore","<p>For sensitive data such as aws keys or password, I put them to files which is in .gitignore to make sure it is not committed to git. However, when keys are going to be used when scripts are running, what should I do? Manually add key content in a file before running? What if the program need to be triggered periodically by Jenkins?</p>

<p>Can anyone help me with this?</p>
","0","2896821","0","0"
"22056995","2395813","2014-02-27 01:07:32","0","41","<git><gitignore>","Why are some of my files being magically added to .gitignore?","<p>I've been having this issue for months now across several repos and several different machines. Here's what typically happens: </p>

<ol>
<li>I create a simple .gitignore file excluding maybe one sub-directory of the root repository and *.txt files.</li>
<li>I work on some stuff until it's time to go, so I do a quick <code>git add .</code>
<code>git commit -m ""Add stuff""</code>
<code>git push</code></li>
<li>Come back later and <code>git pull</code>, only to find that some of those files that I'd been working on in Step 2 have been appended to my .gitignore file. It's not an issue if I'm still on the same machine from Step 2, but I bounce around from machine to machine as I'm a student and have to use whatever machine is available in the computer lab at the time.</li>
<li>Delete appended lines from the .gitignore.</li>
<li>Repeat</li>
</ol>

<p>This happens with Ubuntu and Windows 7. I feel like I've taken crazy-pills.</p>
","0","2395813","",""
"51885262","1593077","2018-08-16 20:59:54","1","83","<eclipse><git><gitignore>","Can I make Eclipse filter-out resources matched by .gitignore?","<p>I'm importing some git repository as an Eclipse (CDT) project. I would like to have all resources which are matched by <code>.gitignore</code> filtered out of view - either dynamically, or by having resource filters created for them upon import. Is this possible?</p>
","0","1593077","0","0"
"66716064","13933985","2021-03-19 21:56:07","3","1402","<git><github><gitignore>","File is not ignored despite adding it to .gitignore","<p>I want to ignore the file <code>workspace</code> which is inside the folder <code>.obsidian/</code> of my git project. I have modified my <code>.gitignore</code> file with that purpose.</p>
<p>This is my .gitignore file:</p>
<pre><code> .obsidian/cache
 .obsidian/workspace
 .trash/
 .DS_Store
</code></pre>
<p>However, I am still getting this message when the file gets changed:</p>
<pre class=""lang-sh prettyprint-override""><code>➜ git status
On branch main
Your branch is ahead of 'origin/main' by 2 commits.
  (use &quot;git push&quot; to publish your local commits)

Changes not staged for commit:
  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
  (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)
    modified:   .obsidian/workspace

no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)

</code></pre>
<p>I don't know why this is happening or what to do.</p>
","0","13933985","0","0"
"35808721","4599824","2016-03-05 01:01:53","2","241","<git><git-branch><gitignore><git-track>","Excluding certain files while 'git pull'","<p>I am doing a complex PHP project with two other people. We had git setup for the project from the beginning.  After working for two months, we wanted to remove certain folders (<code>/dev/app</code>) from git tracking ( git was already tracking them). So I deleted all the files from <code>/dev/app</code> and added a entry in the <code>.gitignore</code> file to exclude the <code>PHP</code> files in the <code>/dev/app</code> folder. </p>

<pre><code>**/dev/app/*.php
</code></pre>

<p>I made a commit to the master branch. I pushed them to the origin and it was working fine. But my colleagues were working on different branches. When I merged their branches with the master, git started to track the excluded files again. </p>

<p>In the local environment it is not a problem, but in the production environment it is a huge headache.  I only need the client generated files in the /dev/app folder in the production server, and I need to preserve them without any modification. </p>

<p>can anyone help me to overcome the issue? </p>
","2","4599824","",""
"22175365","1052117","2014-03-04 14:57:42","25","14942","<regex><git><emacs><gitignore>",".gitignore regex for emacs temporary files","<p>I'm trying to .gitignore emacs temporary/autosave files.  I'm using...</p>

<pre><code>\.\#.*
</code></pre>

<p>in my .gitignore.</p>

<p>But <code>git add -A</code> run in a subfolder is still giving me:</p>

<pre><code>#       new file:   .#make_collections.py
#       new file:   .#norm_collections.py
#       new file:   make_collections.py
#       new file:   norm_collections.py
</code></pre>

<p>even though</p>

<pre><code>\.\#.*
</code></pre>

<p>is clearly getting the right file names and not the wrong ones when I <a href=""http://regexpal.com/"">test it with a regex tester</a>.</p>
","3","1052117","0","0"
"48791743","3715648","2018-02-14 16:20:20","4","716","<python><gitignore>","Any easy way to copy the logic behind how gitignore works?","<p>I need the same behavior as gitignore files, but for my own code that doesn't actually involve git. I'd like the behavior to match gitignore exactly, but looking at all the rules, it seems non-trivial. </p>

<p>I have files in a project. When running my Python script, it does things to those files. I'd like a .gitignore file that says to ignore some subset of files.</p>

<p>Is there some easy way to get that behavior, or do I need to write this from scratch?</p>
","6","3715648","",""
"59896379","445651","2020-01-24 12:25:25","1","66","<git><gitignore>",".gitignore being ignored despite `rm --cached`?","<p>works-as-designed</p>

<p>Similar:
<a href=""https://stackoverflow.com/questions/35735862/gitignore-difficulty-with-folder-exclusion-being-ignored"">35735862/gitignore-difficulty-with-folder-exclusion-being-ignored</a></p>

<h2>Goal:</h2>

<p>I'd like <code>git add .</code> to not result in my file being tracked.</p>

<h2>Build info: ##`</h2>

<p>git version 2.24.1.windows.2` using Windows PowerShell on Windows 10.</p>

<h2>First attempt: mysf.txt</h2>

<p>My file is <code>mysf.txt</code> (my_secret_file).</p>

<p><code>./gitignore</code> contains: <code>mysf.txt</code>, but I've also tried absolute paths and <code>.\mysf.txt</code> to no effect.</p>

<p><code>git add . &gt; git status</code> reports that mysf.txt being tracked.</p>

<p><code>git rm --cached mysf.txt &gt; git commit &gt; git status</code> reports that the file is ""untracked"".</p>

<h2>Second Attempt: secret_file.txt</h2>

<p>So, I deleted mysf.txt and made a new file called <code>secret_file.txt</code>.</p>

<p>Now, I've ensured that the text, <code>secret_file.txt</code>, is added to <code>.gitignore</code> <strong>before</strong> doing the following:</p>

<pre><code>git add .
git echo ""this file is to be ignored."" &gt; secret_file.txt
git commit
git status
</code></pre>

<p>secret_file.txt is not tracked.  Now, I type <code>git add .</code> and secret_file.txt is tracked!  </p>
","3","445651","",""
"51914949","7598461","2018-08-19 06:04:41","0","394","<git><gitignore>","Updated .gitignore file but status still reports unstaged files","<p>Other posts on this topic have solvable issues like the <em>.gitignore</em> file was in the wrong place or the match syntax was wrong.</p>

<p>My case is very simple: </p>

<p>.gitignore file:</p>

<pre><code>*.pkl
</code></pre>

<p>Yet when I run <code>git status</code>:</p>

<pre><code>Changes not staged for commit:
  (use ""git add &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

    modified:   data.pkl
</code></pre>

<p>I expect it has something to do with the matching files being included in previous commits or some issue with other branches? Anyone have any bright ideas of how to investigate this?</p>
","0","7598461","",""
"35814858","2607447","2016-03-05 13:40:42","2","518","<git><gitignore>","directory in .gitignore is not deleted from repository","<p>I'm trying to delete a directory <code>venv</code> (Virtual Environment) from <strong>BitBucket</strong> repository. I've added an entry for <code>venv/</code> into <code>.gitignore</code> file but the <code>venv</code> was uploaded during first commit to repository. </p>

<p>In  <a href=""https://stackoverflow.com/questions/1139762/ignore-files-that-have-already-been-committed-to-a-git-repository"">this answer</a>, author says that I have to clean cache.</p>

<pre><code>git rm -r --cached .
git add .
git commit
</code></pre>

<p>.</p>

<pre><code>On branch master
Your branch is up-to-date with 'origin/master'.
</code></pre>

<p>So I looked into <strong>BitBucket</strong> account and I still see <code>venv</code> directory and files inside it. </p>

<pre><code>git status --ignored 
</code></pre>

<p>returns this:</p>

<pre><code>Ignored files:
  (use ""git add -f &lt;file&gt;..."" to include in what will be committed)

        venv/Lib/site-packages/pip/_vendor/distlib/t32.exe
        venv/Lib/site-packages/pip/_vendor/distlib/t64.exe
        venv/Lib/site-packages/pip/_vendor/distlib/w32.exe
        venv/Lib/site-packages/pip/_vendor/distlib/w64.exe
        venv/Lib/site-packages/setuptools/cli-32.exe
        venv/Lib/site-packages/setuptools/cli-64.exe
        venv/Lib/site-packages/setuptools/cli-arm-32.exe
        venv/Lib/site-packages/setuptools/cli.exe
        venv/Lib/site-packages/setuptools/gui-32.exe
        venv/Lib/site-packages/setuptools/gui-64.exe
        venv/Lib/site-packages/setuptools/gui-arm-32.exe
        venv/Lib/site-packages/setuptools/gui.exe
        venv/Scripts/django-admin.exe
        venv/Scripts/easy_install-2.7.exe
        venv/Scripts/easy_install.exe
        venv/Scripts/pip.exe
        venv/Scripts/pip2.7.exe
        venv/Scripts/pip2.exe
        venv/Scripts/python.exe
        venv/Scripts/pythonw.exe
        venv/Scripts/wheel.exe

nothing to commit, working directory clean
</code></pre>

<p>I've find out that some files are not there. For example <code>django-admin.exe</code> but why there are still other files? </p>
","2","2607447","0","0"
"69714501","15085517","2021-10-25 20:39:47","-1","192","<git><unity-game-engine><github><gitignore><github-desktop>","The Library and Logs folder appear, although there is a .gitignore file","<p>I add .gitignore file in my project. When I open the project on GitHub Desktop, I see some changes. Like this;</p>
<p><a href=""https://i.stack.imgur.com/AS4w1.png"" rel=""nofollow noreferrer"">GitHub Desktop</a></p>
<p>Why I see this changes. I dont changing these.</p>
<p>This is my .gitignore file;</p>
<p><a href=""https://www.codepile.net/pile/ObdoKKDv"" rel=""nofollow noreferrer"">.gitignore code</a></p>
","2","15085517","",""
"48826882","3859691","2018-02-16 12:32:29","2","54","<git><gitignore>","How to gitignore a specific file with it's minified version in one rule?","<p>I want to ignore a specific file: <em><strong>myFile.js</strong></em> AND it's minified version <em><strong>myFile.min.js</strong></em> in the same rule. </p>

<p>I tried: <strong><em>myFile[.min].js</em></strong> with no success</p>
","0","3859691","0","0"
"14168127","260127","2013-01-05 02:58:38","0","123","<git><gitignore>","Ignoring specific directory names in git","<p>I have a directory structure which has a lot of <code>result</code> directories that are generated automatically. </p>

<p>How can I set git to ignore those <code>result</code> directories? The issue might be there is no specific rule how the <code>result</code> directory is generated. </p>
","3","260127","",""
"48853725","2183035","2018-02-18 16:09:29","2","308","<git><gitignore><git-extensions>","gitignore ending star behavior","<p>The following is a default .gitignore setting (when established via GitExtensions):</p>

<pre><code>## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
</code></pre>

<p>It confuses me because I understand from <a href=""https://git-scm.com/docs/gitignore"" rel=""nofollow noreferrer"">documentation</a> that ** can span directories, but * cannot. And therefore I don't expect ignore of the following path</p>

<pre><code>my/packages/build/foo
</code></pre>

<p>to match <code>**/packages/*</code>. And therefore the inversion line <code>!**/packages/build/</code> that follows seems to be unnecessary.</p>

<p>Yet it feels like someone added the inversion for a reason.</p>

<p>Is there undocumented behavior for a single asterisk at the end of a file spec that will also cause ignore of subdirectories, or is the default .gitignore incorrect?</p>
","1","2183035","",""
"22320560","874808","2014-03-11 08:49:26","0","116","<git><gitignore>","How do I get GIT to stop track a folder that I recently added to gitignore?","<p>I have a folder with a bunch of files that I do not want to track. I don't want to remove them, I just want to keep them out of version control. This folder was recently added to gitignore, but when any of the files change they still show up as changed in GIT. I just want GIT to completly ignore this folder.</p>

<p>How do I do this? I searched around and found several similar questions but non that gave the answer to this specific question.</p>
","0","874808","",""
"22324724","1168786","2014-03-11 11:43:26","0","557","<symfony-1.4><gitignore>","Symfony 1.4 - .gitignore doesn't working in some ceses","<p>I am using Symfony 1.4 in my project. I have .gitignore file that working in this configuration.</p>

<pre><code>config/databases.yml
apps/erp/config/factories.yml
.buildpath
.project
.settings
.idea
.DS_Store
.rsync_cache
catalog.xml
config/databases.yml

log/*
cache/*
web/uploads
web/pdf_files
web/knp_sn*
data/sql/*.sql
</code></pre>

<p>But I don't know how to ignore every dir that name are <code>map</code> and <code>om</code> in <code>lib/model/</code> directory.
<img src=""https://i.stack.imgur.com/QqDIF.png"" alt=""enter image description here""></p>

<p>I have inside <code>lib/model</code> around 50 folders, and each contains <code>map</code> and <code>om</code> dir that schould be ignored</p>

<p>This configuration <code>/lib/model/*/om</code> <code>/lib/model/*/map</code> doesn't working </p>
","0","1168786","",""
"22327758","305189","2014-03-11 13:52:17","158","43683","<git><gitignore><bower>","Should bower_components be gitignored?","<p>Would it be good practice to keep only the <code>bower.json</code> file and gitignore the whole <code>bower_components</code> directory?</p>
","1","305189","0","0"
"2820255","138841","2010-05-12 15:25:28","132","45988","<git><gitignore>","How do negated patterns work in .gitignore?","<p>I am attempting to use a .gitignore file with negated patterns (lines starting with !), but it's not working the way I expect.</p>

<p>As a minimal example, I have the folllowing directory structure:</p>

<pre><code>C:/gittest
 -- .gitignore
 -- aaa/
   -- bbb/
     -- file.txt
   -- ccc/
     -- otherfile.txt
</code></pre>

<p>and in my gitignore file, I have this:</p>

<pre><code>aaa/
!aaa/ccc/
</code></pre>

<p>My understanding (based on <a href=""https://git-scm.com/docs/gitignore"" rel=""noreferrer"">this doc page</a>) is that the file aaa/ccc/otherfile.txt should not be ignored, but in fact git is ignoring everything under aaa.</p>

<p>Am I misunderstanding this sentence: ""An optional prefix ! which negates the pattern; any matching file excluded by a previous pattern will become included again.""?</p>

<p>BTW, this is on Windows with msysgit 1.7.0.2.</p>
","0","138841","0","0"
"2821608","69993","2010-05-12 18:20:17","10","1329","<svn><git><git-svn><gitignore><svnignore>","How can you indicate files to ignore in svn when using git and the git-svn bridge?","<p>There is a master subversion repository that I've cloned a git repo from.  I've got a lot of ignored files in my .gitignore that I'd like the svn repository to know about.</p>

<p>I know that I can use <code>git svn show-ignore</code> to pull the ignored list from subversion, but how can I do the reverse?  Send a list of files to be ignored back to the svn repo?</p>

<p>Git version (and git-svn is at the same version):</p>

<pre><code>git --version 
git version 1.7.0.5
</code></pre>
","0","69993","0","0"
"40736187","5239247","2016-11-22 07:35:59","1","35","<git><bitbucket><gitignore>","Adding all files in a Project Sub Folder to .gitignore File, but not the Sub Folder","<p>I have a Project folder named ""<strong>Project_A</strong>"", inside my project folder the sub folders are ""<strong>Sub_B</strong>, <strong>Sub_C</strong>, <strong>Sub_D</strong>...etc"", I need to exclude all files inside the <strong>Sub_C</strong> folder. For that, I have created the <strong>.gitignore</strong> file inside the <strong>Project_A</strong> folder with the bellow code inside the .gitignore file.</p>

<pre><code>Porject_A/Sub_C/*
</code></pre>

<p>But when I pushed my project into bitbucket the <strong>Sub_C</strong> folder didn't upload into the remote repository. What I need is to exclude all files in the <strong>Sub_C</strong> , folder not the folder along. How can I achieve it ?</p>
","0","5239247","",""
"41761128","1884354","2017-01-20 10:16:39","23","10925","<git><gitignore><glob>","Are leading asterisks ""**/"" redundant in .gitignore path matching syntax?","<p>Are there any usages that can't be replaced by equivalents without asterisks?</p>

<pre><code>Two consecutive asterisks (""**"") in patterns matched against full
pathname may have special meaning:

A leading ""**"" followed by a slash means match in all directories.
For example, ""**/foo"" matches file or directory ""foo"" anywhere,
the same as pattern ""foo"". ""**/foo/bar"" matches file or directory
""bar"" anywhere that is directly under directory ""foo"".

A trailing ""/**"" matches everything inside. For example, ""abc/**""
matches all files inside directory ""abc"", relative to the location
of the .gitignore file, with infinite depth.

A slash followed by two consecutive asterisks then a slash matches
zero or more directories. For example, ""a/**/b"" matches ""a/b"",
""a/x/b"", ""a/x/y/b"" and so on.

Other consecutive asterisks are considered invalid.
</code></pre>

<p><a href=""https://git-scm.com/docs/gitignore#_pattern_format"" rel=""noreferrer"">https://git-scm.com/docs/gitignore#_pattern_format</a></p>

<p>Let me point out, that i'm asking only about leading asterisks/slash redundancy. Since it seems any <code>**/foo/bar</code> can be replaced by simple <code>foo/bar</code></p>

<p>For example, i have the following in my <code>.gitignore</code> file:</p>

<pre class=""lang-py prettyprint-override""><code># NuGet Packages

# The packages folder can be ignored because of Package Restore
**/packages/*

# except build/, which is used as an MSBuild target.
!**/packages/build/

# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config
</code></pre>

<p>And i'm wondering, why they couldn't simply write:</p>

<pre class=""lang-py prettyprint-override""><code># NuGet Packages

# The packages folder can be ignored because of Package Restore
packages/*

# except build/, which is used as an MSBuild target.
!packages/build/

# Uncomment if necessary however generally it will be regenerated when needed
#!packages/repositories.config
</code></pre>

<p><a href=""https://github.com/github/gitignore/blob/master/VisualStudio.gitignore"" rel=""noreferrer"">https://github.com/github/gitignore/blob/master/VisualStudio.gitignore</a></p>
","0","1884354","0","0"
"41785123","7451763","2017-01-21 22:14:04","2","2885","<git><gitignore>","Visual Studio Code not honoring .gitignore in git tab","<p>I've appropriately configured a .gitignore file and put it in the base directory of my project, but when I go to the git tab of Visual Studio Code it does not ignore the folder that I'm trying to ignore and therefore is suggesting that there are changes for 4000+ files that I don't care about (the folder that I'm trying to ignore is a virtual environment for python).</p>

<p>Has anyone else successfully gotten the git tab to ignore changes using the .gitignore file?</p>
","0","7451763","0","0"
"41785660","1906480","2017-01-21 23:25:36","1","349","<xcode><git><gitignore>","Xcode is not respecting a gitignore entry","<p>I have a file called Authentication.plist in my Xcode project and added it to my .gitignore file. However, I can't stop it from being committed to git automatically when doing so via the xcode source control menu. Is there a more effective way to ensure it doesn't get committed?</p>

<p><a href=""https://i.stack.imgur.com/KNqEI.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/KNqEI.png"" alt=""Xcode project navigator showing the file staged""></a></p>

<p><a href=""https://i.stack.imgur.com/KNRYt.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/KNRYt.png"" alt=""Screenshot of the .gitignore list""></a></p>
","0","1906480","",""
"4349043","125921","2010-12-03 19:15:24","42","15166","<git><version-control><mercurial><gitignore><hgignore>","Interconversion of gitignore and hgignore?","<p>I'm just starting to use hg-git to push some mercurial repositories to github, and I'm realizing that if people check them out using git, they'll need a .gitignore file in the repository. Is there any automated way to convert hgignore to gitignore or vice versa?</p>
","0","125921","0","0"
"40753749","4816518","2016-11-22 23:48:17","0","3637","<git><unity-game-engine><gitignore><git-status>","Unity files not being ignored properly by git","<p>I'm working with Unity in a group, and because of what I've read in several places, we put the following lines into our <code>.gitignore</code></p>

<pre><code># =============== #
# Unity generated #
# =============== #
[Tt]emp/
[Oo]bj/
[Bb]uild
[Ll]ibrary/
sysinfo.txt
*.stackdump

# ============================================= #
# Visual Studio / MonoDevelop / Rider generated #
# ============================================= #
[Ee]xported[Oo]bj/
.vs/
/*.userprefs
/*.csproj
/*.pidb
/*.suo
/*.sln*
/*.user
/*.unityproj
/*.booproj
/.idea*/

# ============ #
# OS generated #
# ============ #
.DS_Store*
._*
.Spotlight-V100
.Trashes
ehthumbs.db
[Tt]humbs.db
[Dd]esktop.ini
</code></pre>

<p>When I clone the project, the working directory is clean, but as soon as I open this project in Unity, I see tons of files were marked as changed in <code>git status</code>:
<a href=""https://i.stack.imgur.com/hf69K.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/hf69K.png"" alt=""git status""></a></p>

<p>Why are these files being added even though they are in the <code>.gitignore</code>?</p>
","0","4816518","0","0"
"21868857","2238023","2014-02-19 01:01:51","24","15021","<ios><xcode><git><gitignore><tree-conflict>","Removing .xcuserstate and DS_Store files from git","<p>In Xcode I noticed that .DS_Store and *.xcuserstate always change and don't need to be commited. So, I wrote a .gitignore file that contains this:</p>

<pre><code>.DS_Store
*.xcuserstate
</code></pre>

<p>among other entries. Then I used:</p>

<pre><code>git rm --cached *xcuserstate
git rm ---cached .DS_Store
</code></pre>

<p>To remove the these file types already under version control. However, when I go to merge Xcode tells me that there are changes that need to be committed.  Those changes include .DS_Store files and .xcuserstate files.</p>

<p>So, I tried this:<a href=""https://stackoverflow.com/questions/107701/how-can-i-remove-ds-store-files-from-a-git-repository"">How can I Remove .DS_Store files from a Git repository?</a></p>

<pre><code>find . -name .DS_Store -print0 | xargs -0 git rm --ignore-unmatch
find . -name *.xcuserstate -print0 | xargs -0 git rm --ignore-unmatch
</code></pre>

<p>and I got the same result.  How do I remove these files from source control for good?</p>
","2","2238023","0","0"
"4642850","474876","2011-01-10 00:48:03","3","2135","<gitignore>",".gitignore does not appear to be taking effect","<p>I'd like for git to ignore the file named ""Doxyfile"", I added a .gitignore file but it still tries 
to track the file.</p>

<p>I added my steps belowm am I missing a step?</p>

<pre><code>$ ls -a
  .git  .gitignore  README

$ cat .gitignore
  .DS_Store
  Doxyfile
  *~

$ touch Doxyfile

$ ls
  Doxyfile  README

$ git status -s
  ?? Doxyfile
</code></pre>
","1","474876","",""
"42022972","2832011","2017-02-03 11:17:11","6","1476","<git><gitignore>","Keeping multiple .gitignore files (local and remote) in the same repository","<p>I have a repository with a .gitignore file, which excludes build paths (eg. <code>vendor/</code> from Composer).</p>

<p>I also have some local IDE paths (eg. <code>.idea</code> from PhpStorm) that I want to ignore, but that aren't in the repository's .gitignore file.</p>

<p>I'm not sure how to do this. If git looked for files like <code>.gitignore_*</code> in the folder, then I could just add a <code>.gitignore_local</code> that contains (among other things) its own name.</p>
","0","2832011","0","0"
"21977614","1827757","2014-02-24 02:01:26","0","257","<git><push><gitignore>",".gitignore file is not stopping the directory from getting committed","<p>I'm trying to gitignore all files in the data directory so in my gitignore file I am writing</p>

<pre><code>#ignore data files
data/*
</code></pre>

<p>This doesn't seem to be ignoring the files because when I go to push a commit I am having the issue that files from that directory are too large so the push is failing.  </p>
","1","1827757","",""
"21991065","3338446","2014-02-24 14:48:45","30","13154","<git><gitignore>","difference between git ignore and untrack","<p>What's the difference between ignore a folder and untrack in git? I need to remove some folders from my git repository and I am working in Netbeans with the git plugins and put by mistake the build, dist, and nbproject folders in my repository and now I need to remove those folders.</p>
","0","3338446","0","0"
"22101532","2529938","2014-02-28 17:09:32","1","445","<git><gitignore>","Ignore subdirectory's .gitignore","<p>I'm creating my dotfiles and using oh my zsh. It creates a directory called .oh-my-zsh in my home directory.</p>

<p>I want to ignore everything inside .oh-my-zsh, except the custom/ directory. However, custom/ has the file example.zsh and a directory called example/, which contains the file example.plugin.zsh, and I also want to ignore them.</p>

<p>To make it clearer, the structure can be thought as this:</p>

<pre><code>.oh-my-zsh/
  custom/
    my-folder-to-be-kept/
      ..
    example/
      example.plugin.zsh
    example.zsh
  lib/
  log/
  ...
</code></pre>

<p>I have a .gitignore in my home directory:</p>

<pre><code>/.oh-my-zsh/*
!/.oh-my-zsh/custom/
/.oh-my-zsh/custom/example.zsh
/.oh-my-zsh/custom/example/example.plugin.zsh
</code></pre>

<p>However, there's a .gitignore file inside .oh-my-zsh, which contains the follow content:</p>

<pre><code>locals.zsh
log/.zsh_history
projects.zsh
custom/*
!custom/example
!custom/example.zsh
*.swp
!custom/example.zshcache
cache/
</code></pre>

<p>When I add the untracked files, example.plugin.zsh is ignored, but example.zsh isn't. Therefore, I think I'd have to ignore that .gitignore inside .oh-my-zsh so that my .gitignore can work, because <code>!custom/example.zsh</code> is conflicting.</p>
","0","2529938","",""
"22111647","3034693","2014-03-01 07:43:10","2","283","<git><gitignore>","Changes to gitignore are not being applied","<p>I have multile projects in an folder being tracked by git. My original .gitignore contained nothing but * to ignore everything except a <code>*.java</code> in some projects. Now I am starting another project and I have added or rather included it in .gitignore file to track them but when making commit git tells me <code>The following paths are ignored by one of your .gitignore files:</code>. I could use <code>-f</code> to force track the project files but I am wondering why git is not applying changes I have made to <code>.gitignore</code>.</p>

<p>My original .gitignore.</p>

<pre><code>.gitignore
# Ignore everything
*

# Except for these files
!Assignment1/
!Assignment1/*.java
!Assignment2/
!Assignment2/*.java
!Assignment3/
!Assignment3/*.java
!Assignment4/
!Assignment4/*.java
!Assignment5/
!Assignment5/*.java
!Assignment6/                                                                                                                                                          
!Assignment6/*.java
!README.md
</code></pre>

<p>My current .gitignore. You can see that now I want to track all .java files in Assignment7.</p>

<pre><code>.gitignore
# Ignore everything
*

# Except for these files
!Assignment1/
!Assignment1/*.java
!Assignment2/
!Assignment2/*.java
!Assignment3/
!Assignment3/*.java
!Assignment4/
!Assignment4/*.java
!Assignment5/
!Assignment5/*.java
!Assignment6/                                                                                                                                                          
!Assignment6/*.java
!Assignment7/                                                                                                                                                          
!Assignment7/*.java
!README.md
</code></pre>

<p>After adding <code>!Assignment7/</code> and <code>!Assignment7/*.java</code>, when I run <code>git add .</code> or <code>git add -A</code> the commands run without any problem but the Assignment7 files are not tracked.</p>

<pre><code>[donnie@fedora workspace]$ git add .
[donnie@fedora workspace]$ git status
On branch master
Your branch is up-to-date with 'origin/master'.

nothing to commit, working directory clean

[donnie@fedora workspace]$ git add -A
[donnie@fedora workspace]$ git status
On branch master
Your branch is up-to-date with 'origin/master'.

nothing to commit, working directory clean
</code></pre>

<p>Trying to add the files by adding location tells following</p>

<pre><code>[donnie@fedora workspace]$ git add Assignment7
The following paths are ignored by one of your .gitignore files:
Assignment7
Use -f if you really want to add them.
fatal: no files added
[donnie@fedora workspace]$ git add Assignment7/*.java
The following paths are ignored by one of your .gitignore files:
Assignment7/FacePamphlet.java
Assignment7/FacePamphletCanvas.java
Assignment7/FacePamphletConstants.java
Assignment7/FacePamphletDatabase.java
Assignment7/FacePamphletProfile.java
Use -f if you really want to add them.
fatal: no files added
</code></pre>

<p>I can solve this problem by adding -f but I would like know what am I missing. Why am I not able to track files that are added to be un-exluded from .gitignore files.</p>

<p>Thanks.</p>

<p>Edit:- Similar questions <a href=""https://stackoverflow.com/questions/12090726/gitignore-rules-not-working"">1</a> and <a href=""https://stackoverflow.com/questions/3001888/how-do-gitignore-exclusion-rules-actually-work"">2</a> were not so helpful as .git reside in top-directory and files to be tracked are in sub-directories.</p>
","6","3034693","0","0"
"59843539","3766609","2020-01-21 14:43:00","0","51","<git><gitignore>","Git should ignore a conf file, but it should not be in .gitignore","<p>This is a relatively simple question, but for some reason, I cannot find an answer to it. </p>

<p>I have a conf file that needs to <strong>not</strong> be pushed to our git repository, but I cannot add it to the .gitignore (team leader doesn't want it there). Is there some way that I can get git to ignore it?</p>

<p>Thanks!</p>
","3","3766609","",""
"42089153","7129752","2017-02-07 11:49:40","2","8903","<git><version-control><gitignore><dvcs><drupal-8>","How can I git pull ignored files?","<p>For my Drupal 8 installation I want to use the following workflow:</p>

<p>1) On the local machine installs and updates are done with Composer. Composer files are then pushed to Bitbucket.</p>

<p>2) On the remote server I have a staging folder in which I pull the composer files and do a composer install.</p>

<p>3) On the same server I want to have another folder for the production site. Here I clone the staging folder and later pull all its changes.</p>

<p>The problem now is, that Drupal core and modules folders (those installed by Composer) are in gitignore. So they are not pulled from staging to production. How can I track/version control the WHOLE staging folder and pull changes to production? If I delete the gitignore files I suppose they will be pulled again next time from Bitbucket.</p>

<p>EDIT: This article describes a solution, but I don't really understand how it works with this CI server: <a href=""http://nuvole.org/blog/2016/aug/19/optimal-deployment-workflow-composer-based-drupal-8-projects"" rel=""nofollow noreferrer"">http://nuvole.org/blog/2016/aug/19/optimal-deployment-workflow-composer-based-drupal-8-projects</a></p>
","0","7129752","",""
"41114185","4506393","2016-12-13 05:18:52","5","3728","<git><gitignore>","Make .gitignore ignore file name contain ""_resultlist"" in its name","<p>Is there a way to have a git ignore file to ignore all files contain the name ""_resultlist"" in them?</p>

<p>I have files like this:</p>

<ul>
<li>2014_resultlist</li>
<li>2015_resultlist</li>
<li>2016_resultlist</li>
<li>lib/main/sub/test.html</li>
<li>test.html</li>
<li>test.sh</li>
<li>test.txt</li>
</ul>

<p>and so on.</p>

<p>I want git to avoid adding or committing any files that contain ""_resultlist"" in it. Example like: 2014_resultlist,2015_resultlist and 2016_resultlist</p>
","0","4506393","0","0"
"22123406","3285487","2014-03-02 03:14:02","1","221","<git><gitignore>",".gitignore slash after wildcard changes exclude behaviour","<p>If the .gitignore file looks like this:</p>

<pre><code>*
!adir/
</code></pre>

<p>then the directory adir will not be included. However, if I change it to:</p>

<pre><code>*/
!adir/
</code></pre>

<p>Now it works - all directories are ignored but adir. Why is that? What is the proper way of ignoring everything but some particular directories?</p>

<p><strong>EDIT:</strong>
Based on the answer, I changed it to:</p>

<pre><code>*
!adir/
!adir/*
</code></pre>

<p>and it works. But is there any preferred way?</p>
","2","3285487","",""
"22864384","162345","2014-04-04 13:35:20","2","173","<git><gitignore>","Make git ignore file changes","<p>I have a DB configuration file that is tracked by git. Since the DB on my dev machine has different attributes the file is always marked as changed and I need to remember not to check it in. </p>

<p>How can I make git stop following changes for this file? </p>

<p>NOTE: This is not the same question as the suggested duplicate. I asked about git ignoring changes in file and not files. <code>git assume-unchanged</code> is the right answer which is not mentioned in the duplicate. </p>
","0","162345","0","0"
"22233723","1404150","2014-03-06 19:09:01","3","681","<git><git-merge><gitignore>","git update-index --assume-unchanged not working as expected when merging","<p>I updated index of some files to untrack them from git. Unfortunately, those files are still in circulation on some commits by teammates.</p>

<p>This means that if I pull changes, even though I've ignored those files on my side, the files will still cause conflicts and some unlink errors. The only way I can resolve this is to unset update index with --no-assume-unchanged, and re-commit all the files to complete the merge. This creates a vicious loop where the files are back in circulation again. </p>

<p>How can I work around this problem without forcing the entire team to re-clone their repository?</p>
","0","1404150","0","0"
"42110736","3064905","2017-02-08 10:35:02","-1","674","<android-studio><gitignore>","How to hide .gitignore files while committing in Android Studio","<p>Currently i am using Android Studio version 2.2.</p>

<p>Once we add configuration file into .gitignore file of project root directory and then make any changes to ignore files, Still it shows these changed file while committing.</p>

<p>So how can we avoid these files from showing up while committing. </p>

<p>I have tried removing ignore files file from Setting->Version Control->Ignore Files , And restarted the Studio.But is doesn't work.</p>

<p>I have tried to removing previously cached file  from git rm -r --cached .
And then re-added the gitignore files and added the project again.</p>

<p>But still all the git ignore file shows while committing and leads to problem by mistakenly selecting them.</p>

<p>Anyone who have faced this please guide to remove these git ignore file while committing in Android Studio.</p>

<p><a href=""https://stackoverflow.com/questions/29052342/android-studio-git-gitignore-vs-project-settings-version-control-ignored"">Have tired this but didn't get any help.</a> </p>
","0","3064905","",""
"22878899","1152398","2014-04-05 09:14:45","2","415","<git><github><gitignore>","How to apply no assume unchanged for a directory in git?","<p>I have ignored a directory using this command :-</p>

<pre><code>git update-index --assume-unchanged $(git ls-files | tr '\n' ' ')
</code></pre>

<p>Now I want to remove from ignore list. I can remove a file from ignore list using below command :-</p>

<pre><code>git update-index --no-assume-unchanged fileName
</code></pre>

<p>My question is how to do it for a directory ?
And where do I find all ignore file list ?</p>
","5","1152398","0","0"
"42115337","668380","2017-02-08 14:08:03","7","3603","<android><react-native><android-gradle-plugin><gitignore>","Should gradle.properties be in gitignore for a react native project to hide release password?","<p>I'm working on a react native app on windows. To be able to <a href=""https://facebook.github.io/react-native/releases/0.40/docs/signed-apk-android.html"" rel=""noreferrer"">generate a signed release apk</a> I've added <code>MYAPP_RELEASE_STORE_PASSWORD=***</code> and <code>MYAPP_RELEASE_KEY_PASSWORD=***</code> to my <code>/projectname/android/gradle.properties</code> file (<a href=""http://10minbasics.com/react-native-could-not-find-property-myapp_release_store_file/"" rel=""noreferrer"">Like it says so here</a>). Now I wonder if I should add the file to gitignore to prevent it from being uploaded to github, or is there a way to store the password in a different file?</p>
","1","668380","",""
"42120137","470994","2017-02-08 17:46:22","1","235","<git><gitignore>","Moving a git repo up one folder","<p>I have a git repository for a Joomla component that I am developing. The whole thing is set up like this:</p>

<pre><code>joomla_www/
    administrator/
    bin/
    cache/
    .
    .
    .
    MY_COMPONENT/
    .
    .
    .
    templates/
</code></pre>

<p>My git repo is initialized at MY_COMPONENT/.</p>

<p>Now we have realized that we would like to add <code>templates/</code> to the repo too, which brings two problems:</p>

<p>1) How to move the git repo's root folder one level above. About this, I've already read <a href=""https://stackoverflow.com/questions/5408475/moving-a-git-repository-up-one-hierarchy-level"">this question</a>... except that I don't understand the accepted answer (the one by Tim Henigan). I don't understand the first step (he is talking about the remote repo, not the local one, right?), and I don't understand the second step (am I supposed to move everything in <code>MY_COMPONENT/</code> to the root Joomla folder... and commit from there?).</p>

<p>2) How to make git ignore the myriad folders that Joomla has so that it only pays attention to the two ones that I'm interested in, <code>MY_COMPONENT</code>and <code>templates/</code>. I know about <code>.gitignore</code>, but in this case, when the majority of the contents in a folder are ones that I am NOT interested in, it's kind of a pain to have to add everything manually in it. Is there a simpler solution? Something like the opposite of <code>.gitignore</code>, a file where you just put the folders you are interested in?</p>

<p>EDIT: I forgot to ask. After performing whatever changes in the remote git repo, what would the rest of us developers have to do to sync up? Would it be enough to do just a 'git pull'?</p>

<p>EDIT 2: okay, found an answer to my second question: <a href=""https://stackoverflow.com/questions/987142/make-gitignore-ignore-everything-except-a-few-files?rq=1"">Make .gitignore ignore everything except a few files</a>. Now I only need some kind person to clarify the answer I found to the first one.</p>
","0","470994","",""
"22251747","2826362","2014-03-07 13:43:14","2","915","<git><gitignore>","Why doesn't git ignore .gitgnore?","<p>Why doesn't git ignore .gitignore? Is this a bug or is this a feature? I can't see any reason why one would like to share ones .gitignore file. It feels a bit ironic to have to add .gitignore to .gitignore.</p>

<p>Is there any reason for this?</p>
","3","2826362","",""
"59961836","989577","2020-01-29 06:53:54","1","44","<git><gitignore>","Ignoring files that have already existed with git","<p>If I have a repo with files that were previously not in my <code>.gitignore</code> file that I now want to ignore, how do I do this without deleting the files locally and when you pull from the repo?</p>
","1","989577","",""
"4944879","288190","2011-02-09 12:34:27","13","7567","<git><gitignore>","gitignore across all branches?","<p>Hey I'm trying to get into git, as an emacs user first thing to do is to make sure the ~ and #*# files are ignored by git. Documentation talks about .gitignore which I've been using. However couple of questions remain:</p>

<ul>
<li>gitignore is now checked in and part
of a branch. Should .gitignore be
checked in and if so, how can i make
it easy available across all branches
in my repository? </li>
<li>is there a way to
use the gitignore with git config so
gitignore stays constant over all my
repos? </li>
<li>How can I deal with emacs lock
files as #*# is treated as a comment?</li>
</ul>

<p>I'm on mac ox snow leopard.
regards,
Jeroen</p>
","0","288190","0","0"
"59970715","9559251","2020-01-29 15:46:58","0","138","<git><gitignore>","git ignores my request for a file exception","<p>I have the following configuration in my <code>.gitignore</code> file. </p>

<pre><code>.idea/*
!.idea/inspectionProfiles/Teamcity.xml
!.idea/scopes/teamcity.xml
!.idea/runConfigurations/Watch_Sass_files.xml
</code></pre>

<p>It should be ignoring all the files in the .idea directory with 3 exceptions. It doesn't allow me to <code>git add</code> them. I have run <code>git check-ignore</code> on them and that's the message</p>

<blockquote>
  <p>.gitignore:59:/.idea/*  .idea/runConfigurations/Watch_Sass_files.xml</p>
</blockquote>

<p>I have even implemented @Matiss suggestion in 
<a href=""https://stackoverflow.com/a/14731573/9559251"">https://stackoverflow.com/a/14731573/9559251</a></p>

<p>It seems that you can make a directory exception but not file exceptions e.g.
<code>!.idea/runConfigurations/</code></p>
","0","9559251","",""
"3719243","147320","2010-09-15 15:32:42","332","507962","<python><django><git><pygtk><gitignore>","Best practices for adding .gitignore file for Python projects?","<p>I'm trying to collect some of my default settings, and one thing I realized I don't have a standard for is .gitignore files. There's a great thread showing a <a href=""https://stackoverflow.com/questions/2143956/gitignore-for-visual-studio-projects-and-solutions"">good .gitignore for Visual Studio projects</a>, but I don't see many recommendations for Python and related tools (PyGTK, Django).</p>
<p>So far, I have...</p>
<pre><code>*.pyc
*.pyo
</code></pre>
<p>...for the compiled objects and...</p>
<pre><code>build/
dist/
</code></pre>
<p>...for the setuptools output.</p>
<p>Are there best practices for .gitignore files, and where can I go for more about these best practices?</p>
","8","147320","0","0"
"23097368","776121","2014-04-16 01:24:25","96","37893","<git><gitignore>","git ignore vs. exclude vs. assume-unchanged","<p>I've read the docs on this several times over and I still don't completely get the differences between these different commands. Maybe it's just me, but the documentation could be more lucid:</p>
<p><a href=""http://git-scm.com/docs/gitignore"" rel=""nofollow noreferrer"">http://git-scm.com/docs/gitignore</a></p>
<p><a href=""https://help.github.com/articles/ignoring-files"" rel=""nofollow noreferrer"">https://help.github.com/articles/ignoring-files</a></p>
<p>Moreover, a lot of the commentary on this subject seems to use the words &quot;indexed&quot;, &quot;committed&quot;, &quot;tracked&quot; somewhat loosely, which makes the differences between these three less clear.</p>
<p>My current (admittedly limited) understanding:</p>
<ul>
<li><p>Files matched in <code>.gitignore</code> will not be tracked in the future.
(Though they may have been tracked previously.) This means that they
won't ever show up in a future <code>git status</code> list as changed.
<em>However, future changes will still be synced with remote repos</em>. In other words, the files are still &quot;indexed&quot;, but they are not &quot;tracked&quot;.
Because a <code>.gitignore</code> file is in the project directory, the file
itself can be versioned.</p>
</li>
<li><p>Files matched in <code>.git/info/exclude</code> will also not be &quot;tracked&quot;. In
addition, these files will not ever be remotely synced, and thus will
never be seen in any form by any other users. These files should be files that
are specific to a single user's editor or workflow. Because it is in the <code>.git</code>
directory, the <code>exclude</code> file can't itself be versioned.</p>
</li>
<li><p>Files that have had <code>assume-unchanged</code> run on them also don't show up in <code>git status</code> or <code>git diff</code>. This seems similar to <code>exclude</code>, in that these files are neither &quot;indexed&quot; nor &quot;tracked&quot;. However, the last version of the file to be committed before <code>assume-unchanged</code> will remain visible to all users in the repo.</p>
</li>
</ul>
<h1>My questions:</h1>
<ol>
<li><p>Is the above interpretation correct? Please correct me.</p>
</li>
<li><p>If a file has already been in a commit, what is the functional
different between matching it in <code>.exclude</code> and running
<code>assume-unchanged</code> on it? Why would one prefer one approach to
another?</p>
</li>
<li><p>My basic use case is that I want to avoid sorting through diffs on
compiled files, but I still want those compiled files synced along
with the source files. Will a <code>gitignore</code>'d file still be pushed? If not, how to manage final deployment of the compiled files?</p>
</li>
</ol>
","0","776121","0","0"
"60080477","414415","2020-02-05 16:49:07","1","116","<xcode><gitignore><swift-playground>","Why gitignore playground.xcworkspace for Xcode Swift Playgrounds?","<p>A couple of published <code>.gitignore</code> files include <code>playground.xcworkspace</code>. Does anyone know a good reason why?</p>

<p>References
<a href=""https://www.gitignore.io/api/xcode,swift"" rel=""nofollow noreferrer"">https://www.gitignore.io/api/xcode,swift</a>
<a href=""https://github.com/github/gitignore/blob/master/Swift.gitignore#L35"" rel=""nofollow noreferrer"">https://github.com/github/gitignore/blob/master/Swift.gitignore#L35</a></p>
","2","414415","",""
"23104349","704616","2014-04-16 08:48:14","5","2501","<git><gitignore><git-clean>","Exclude files from git clean by default","<p>In a project I am working on I am using git and eclipse, eclipse creates a <code>.project</code> file in the project root. When I do a <code>git clean</code> I do not want to remove this file as I have to create this again.</p>

<p>I do want <code>git clean</code> to remove excluded files and directories (since compiled files are excluded).</p>

<p>Normally I do <code>git clean -xdf</code> which suits my needs, however I have to exclude the <code>.project</code> file each time (<code>git clean -xdf -e .project</code>).</p>

<p>Simply putting the <code>.project</code> in a (global) gitignore file doesn't do the trick, prefixing it with a <code>!</code> also doesn't quite fix this as it then shows up in <code>git status</code>.</p>

<p>So I'm looking to exclude instead of ignore, but I cannot find a git-clean-exclude setting. Did anyone ran into this, and if so how did they solve it?</p>
","0","704616","0","0"
"42306410","5225057","2017-02-17 20:00:53","51","123292","<syntax><virtualenv><gitignore>",".gitignore syntax - how to exclude virtualenv sub-directories?","<p>I have a couple different virtual environments in a project, e.g.</p>

<p><code>~/project_dir/sub_dirs/venv/...</code></p>

<p>Adding <code>*/venv/*</code> to the .gitignore file does not prevent the virtual environment folders and their contents from being excluded. What is the correct syntax to prevent these virtual environment directories from being added to the git repository?</p>
","1","5225057","0","0"
"60082537","220180","2020-02-05 19:05:32","5","1216","<git><gitignore>",".gitignore, exclude all files in a folder... but keep those sub-folders with a .gitkeep inside it?","<p>I'd like to <strong>ignore all files in <code>log</code> folder, except for <code>.gitkeep</code> files</strong> (I need those files for keeping empty directories):</p>

<pre><code>- log
  |- foo.log (should be ignored)
  |- folder1 (should be ignored)
  |- folder2 (keep it because contains a .gitkeep file)
     |- .gitkeep
</code></pre>

<p>Not working:</p>

<pre><code>/log/*
!/log/*/.gitkeep
</code></pre>

<p>Using <code>**</code> doesn't work too:</p>

<pre><code>/log/*
!/log/**/.gitkeep
</code></pre>

<p>Is this possible... without manually exclude each subfolder, like this?</p>

<pre><code>/log/folder1/*
/log/folder2/*
!/log/folder2/.gitkeep
</code></pre>
","0","220180","0","0"
"23111369","999355","2014-04-16 13:48:03","0","221","<heroku><gitignore><gemfile.lock>","How to push to Heroku with Gemfile.lock included into .gitignore","<p><code>Gemfile.lock</code> is included into <code>.gitignore</code>. It is an agreement between developers, and it should remain so. Is there a way to push code to Heroku? Or may be you suggest some Ruby hosting which does not use Git to deploy an app?</p>
","0","999355","",""
"22392664","2415684","2014-03-13 22:50:03","1","163","<git><gitignore>","make git commit all files of specific type except for a couple","<p>How can I make git commit all files of one type, say <code>*.el</code> except for certain <code>.el</code> files that are specifically named.  So, I have the following, but the <code>*.el</code> seems to be overriding the <code>.el</code> files that I name specifically,</p>

<pre><code>*
ignoreme.el
ignoremetoo.el

!.gitignore
!*.el
</code></pre>

<p>I have tried putting the files to ignore after the <code>*.el</code> as well, but no dice.</p>

<p><strong>EDIT</strong> There are also many other files/directories that need to be ignored and that is the reason for <code>*</code> </p>
","0","2415684","",""
"22393830","1197775","2014-03-14 00:27:07","2","163","<git><gitignore>","Where file is ignored by .gitignore","<p>I am doing</p>

<pre><code>git add db/schema.rb
The following paths are ignored by one of your .gitignore files:
db/schema.rb
Use -f if you really want to add them.
fatal: no files added
</code></pre>

<p>Where can I find this file is being ignored, see:</p>

<pre><code>cat .gitignore
.project
nbproject
.redcar
cat ~/.gitignore
.idea
</code></pre>

<p><code>~/.gitignore</code> is for global ignores.</p>
","1","1197775","0","0"
"60220919","8666088","2020-02-14 06:08:59","41","72853","<reactjs><git><gitignore>","Which files or folders should be in .gitignore in React project?","<p>I am making a react project and using Linux mint in Laptop and Windows 10 desktop. I would like to know, which files or folders should I keep in .gitignore so that I don't have to clean cache and install npm whenever I switch computers.</p>
","0","8666088","0","0"
"30262638","166231","2015-05-15 14:54:14","0","402","<asp.net-mvc><git><git-submodules><gitignore>","git add . (dot) doesn't obey .gitignore (or my patterns are wrong)","<p>I have the following situation.  In my asp.net webforms projects, I have some shared repositories that I optionally use <em>under</em> my main repositories.  The folders are named <em>Shared</em> and then <em>Shared.*</em> for others.  For example, I have a folder structure like this.</p>

<pre><code>\main  
.. \\.git  
.. \main-subfolder  

.. \Shared (this should be ignored since own repo)  
.... \\.git  
.... \Shared-subfolder  
.... shared files  

.. main-files
</code></pre>

<p>I think this pattern I'm using might be similar to git sub-modules, but that is (hopefully) reserved for another discussion.</p>

<p>My .gitignore file originally simply had: <code>Shared*/</code> and everything worked great.</p>

<p>Then I discovered that in my asp mvc projects, my <em>Views/Shared</em> folders were getting ignored (as expected given the above pattern).  So I tried to add an exclusion with <code>!Views/Shared/</code> but that didn't work in that git still didn't detect that for the mvc projects it should be adding <em>Views/Shared</em> content.</p>

<p>So I ended up with:</p>

<pre><code>Shared*/*
!Views/Shared/
</code></pre>

<p>And all seemed to work, however, I detected a problem in my original webforms projects (that should be ignoring folders of <em>Shared*</em>).  So the following image.  <code>git status</code> appears to correctly be ignoring the Shared folder, but when I do a <code>git add .</code> then <code>git status</code>, you can see that it has been added.</p>

<p><img src=""https://i.stack.imgur.com/xEfl3.png"" alt=""git add . workflow""></p>

<p>Note: <code>git com -am ""Commit Message""</code> appears to work too.  If that would have been my original step instead of <code>git add .</code>, the <em>Shared</em> folder is ignored on the commit.</p>

<p>Is my setup (nested repository) not supported or is my .gitignore pattern incorrect?  Thanks in advance.</p>
","2","166231","",""
"30283194","796837","2015-05-17 03:54:05","0","2314","<git><sass><gruntjs><gitignore>","Grunt, Sass, and gitignore: Compiled CSS and .map files?","<p>I inherited a site that's using Grunt and SASS. The last company that worked on this site seems to have removed <code>Git</code>. They also removed any <code>Grunt</code>-related files except for the <code>Gruntfile.js</code> and <code>package.json</code> for some reason. I installed <code>Git</code> and <code>Grunt</code>, but I'm unsure how Grunt and Sass work entirely. I figured out how to recompile the CSS files using Grunt. </p>

<p>As it was without me changing any files, running <code>grunt</code> gives the following output.</p>

<pre><code>styles.css
File ""css/styles.css"" prefixed.
responsive.css
File ""css/responsive.css"" prefixed.
old.css
File ""css/old.css"" prefixed.
</code></pre>

<p>And I see that <code>*.css</code> are the files that are compiled. . So, I figured if I remove <code>*.css</code>, they should be recreated, but <em>they don't</em> - only <code>styles.css</code> does and the other files don't get recreated. I need to have a copy of <code>responsive.css</code> an <code>old.css</code> for them to get updated. I also noticed that these two files' contents don't actually get updated (I placed comments which persisted), but files are re-saved causing <code>Git</code> to flag them modified.</p>

<p><strong>Question #1:</strong> Why this behavior? I do see references to only <code>styles.css</code> in <code>Gruntfile.js</code>. Could that be it? If so, why doesn't it resave <code>responsive.css</code> and <code>old.css</code>? I'm unsure how to version-control these.</p>

<p><strong>Question #2:</strong> Then, there are <code>*.css.map</code> files that get generated as well. What is this? Somtimes, not always, I would also see errors in the browser console like below (Magento site). I have no idea why it's looking in the <code>media</code> directory. They're in <code>skin/frontend/blueacorn/mysite/css/</code>. I would assume to gitignore these.</p>

<pre><code>X GET http://mysite/media/css/styles.css.map
X GET http://mysite/media/css/responsive.css.map
</code></pre>

<p><strong>Gruntfile.js</strong></p>

<pre><code>module.exports = function(grunt) {

    grunt.initConfig({
        pkg: grunt.file.readJSON('package.json'),

        sass: {
            dist: {
                options: {
                    style: 'nested',
                    sourcemap: true
                },
                files: {
                    'css/styles.css': 'sass/styles.scss'
                }
            }
        },

        autoprefixer: {
            options: {
                browsers: ['last 2 version', 'ie 8', 'ie 9'],
                map: true
            },
            multiple_files: {
                expand: true,
                flatten: true,
                src: 'css/*.css',
                dest: 'css/'
            }
        },

        imagemin: {
            dynamic: {
                files: [{
                    expand: true,
                    cwd: 'images/',
                    src: ['**/*.{png,jpg,gif}'],
                    dest: 'images/'
                }]
            }
        },

        svgmin: {
            options: {
                plugins: [{
                    removeViewBox: false
                }]
            },
            dist: {
                files: [{
                    expand: true,
                    cwd: 'images/',
                    src: ['**/*.scg'],
                    dest: 'images'
                }]
            }
        },

        cssmin: {
            combine: {
                files: {
                    'css/styles.css': ['css/styles.css']
                }
            }
        },

        jshint: {
            src: ['js/*.js','js/**/*.js']
        },

        watch: {
            images: {
                files: ['images/**/*.{png,jpg,gif}', 'images/*.{png,jpg,gif}'],
                tasks: ['imagemin'],
                options: {
                    spawn: false
                }
            },
            js: {
                files: ['js/*.js','js/**/*.js'],
                tasks: ['jshint'],
                options: {
                    spawn: false
                }
            },
            svgs: {
                files: ['images/*.svg','images/**/*.svg'],
                task: ['svgmin'],
                options: {
                    spawn: false
                }
            },
            css: {
                files: ['sass/*.scss', 'sass/**/*.scss'],
                tasks: ['sass','autoprefixer'],
                sourceComments: 'normal',
                options: {
                    livereload: true,
                    spawn: false
                }
            }
        },

        connect: {
            server: {
                options: {
                    port: 8000,
                    base: './'
                }
            }
        }
    });

    require('load-grunt-tasks')(grunt);

    grunt.registerTask('default', ['imagemin','svgmin','sass','autoprefixer','jshint']);

    grunt.registerTask('dev', ['connect', 'watch']);

    grunt.registerTask('production', ['imagemin','sass','autoprefixer','cssmin']);

}
</code></pre>
","1","796837","0","0"
"12685134","145844","2012-10-02 05:49:22","57","38631","<git><gitignore>",".gitignore: How do I ignore nested directories?","<p>I have the following directory structure:</p>

<pre><code>test/a
test/b/c
test/a/b/Ouput
test/c/d/e/Output
test/f/Output
</code></pre>

<p>I want to ignore all the ""Output"" directories under ""test"".  I tried <code>test/**/Output</code>, but it didn't work.  What am I doing wrong?</p>
","1","145844","0","0"
"30358374","1330137","2015-05-20 19:08:26","2","2717","<git><gitignore>","Clean Git Repository using gitignore","<p>So I have this two year old <code>C#</code> repo on bitbucket. It didn't have a <code>.gitignore</code> until yesterday - I know, late.</p>

<p>This is a personal project.</p>

<p>Can I clean the repo using the <code>.gitignore</code> as a basis. So the worker would effectively delete anything that the <code>.gitignore</code> said shouldn't be there?</p>
","6","1330137","",""
"30386980","774437","2015-05-22 01:28:46","0","23","<git><gitignore>","How can I ignore all sub-directories of a hierarchical cross-compiling in git?","<p>I am basically working on the source code a Unix-based micro-kernel. Each library or command-line utility has a hierarchical structure for different architectures such as ARM, MIPS, PPC, x86, and etc. I need to ignore all compiled files under these directories, but since there are many of these sub-directories for each lib/tool, I can't ignore them explicitly one by one. So, I need some sort of regular expression. The best I came up with so far is the following:</p>

<pre><code>trunk/**/arm/le/*
trunk/**/arm/le.*/*
trunk/**/arm/o.le/*
trunk/**/arm/o.le.*/*
trunk/**/arm/a.le/*
trunk/**/arm/a.le.*/*
trunk/**/arm/so.le/*
trunk/**/arm/so.le.*/*
trunk/**/arm/dll.le/*
trunk/**/arm/dll.le.*/*
trunk/**/arm-le/*
trunk/**/arm-le-*/*
trunk/**/arm-o-le/*
trunk/**/arm-o-le-*/*
trunk/**/arm-a-le/*
trunk/**/arm-a-le-*/*
trunk/**/arm-so-le/*
trunk/**/arm-so-le-*/*
</code></pre>

<p>I am still interested if I can concise them in a more general way. I tried the following lines as well:</p>

<pre><code>trunk/**/arm/((o|a|so|dll).)?le(.?*)/*
trunk/**/arm-((o|a|so|dll)-)?le(-?*)/*
</code></pre>

<p>It didn't work, and  I guess it's due to parenthesis. Since I have to repeat the first  work around for every architecture, can anyone help me with summarizing these patterns?</p>
","0","774437","",""
"30388591","57254","2015-05-22 04:51:26","2","2161","<git><gitignore>","Including specific file extension in gitignore","<p>I want to include all the *.meta files in the Assets directory and all subdirectories while excluding everything else in Assets</p>

<p>I tried</p>

<pre><code>/Assets/*
!/Assets/**/*.meta
!*.meta
</code></pre>

<p>but that only include *.meta within /Assets ????</p>

<p>Thanks for any help</p>
","1","57254","0","0"
"12784396","321973","2012-10-08 15:04:44","1","417","<git><gitignore>","How to let gitignore track subdirectory instances of a file while ignoring everything else?","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/9162919/git-whitelisting-files-in-a-complex-directory-structure"">Git - Whitelisting files in a complex directory structure</a>  </p>
</blockquote>



<p>I'd like to have a git repository track only files named e.g. <code>SOURCES</code> while everything else shall be ignored (take e.g. a tree of pdf files where each <code>SOURCES</code> file lists their origins). The simplest shot would have been</p>

<pre><code>*
!SOURCES
</code></pre>

<p>in <code>.gitignore</code>. However the exclusion of e.g. <code>A/SOURCES</code> is overridden by the <code>*</code>, requiring me to use <code>git add -f</code>. How can <code>.gitignore</code> be modified to ignore everything except files named <code>SOURCES</code> without requiring a forced add?</p>

<p><strong>edit</strong> The solution posted <a href=""https://stackoverflow.com/a/1248601/321973"">here</a> will not do since the directory structure is not fixed, i.e. new directories containing a <code>SOURCES</code> file should not have to be added to <code>.gitignore</code> by hand...</p>
","1","321973","",""
"30404872","3268122","2015-05-22 19:51:55","0","146","<git><ruby-on-rails-4><openshift><gitignore>","Rails 4 on Openshift - gitignore directory wiped out on push","<p>I have a rails 4 app deployed on Openshift.com.  The app uses paperclip to upload image and xml atlas files.  These files end up within my public/assets folder. </p>

<p>(Example path):</p>

<pre><code>public/assets/textures/1/someimage.png
public/assets/textures/1/someimage.xml
public/assets/textures/2/anotherimage.png
public/assets/textures/2/anotherimage.xml
....
</code></pre>

<p>Recently, I noticed that when I push any changes to my app code to the master, my assets directory contents gets wiped out on the deployed app. </p>

<p>In my .gitignore file I have the following:</p>

<pre><code>/public/assets/*
</code></pre>

<p>Further research suggested I needed to run git rm --cached:</p>

<p>Running  </p>

<pre><code>git rm --cached public/assets/*
</code></pre>

<p>produces </p>

<pre><code>fatal: pathspec 'public/assets' did not match any files
</code></pre>

<p>I thought maybe my .gitignore file was possibly not being tracked, so I added some comments and did a commit and found the change was tracked.</p>

<p>I even went so far as to go through codeschool.com's ""Git-Bits"" and ""Get Real"" courses to get a better understanding.  However, the the things I learned have not helped with this issue.</p>

<p>Any suggestions on what might be the issue?</p>
","1","3268122","",""
"12799855","1195496","2012-10-09 12:16:42","31","8588","<git><file-extension><gitignore><subdirectory>","Configure git to track only one file extension","<p>I have one directory tree with many kind of different files. There are 300 directories on the parent directory. Each directory could have other sub directories.</p>

<p>I only want to track *.cocci on all sub directories. Here is my .gitignore:</p>

<pre><code>*
!*.cocci
</code></pre>

<p>But it do not work, as the files on sub directories are not tracked. How can I tell git that I only want to track *.cocci on all sub directories?</p>
","3","1195496","0","0"
"12826000","1339570","2012-10-10 18:31:34","4","1573","<ios><xcode><git><bitbucket><gitignore>","Xcode iOS using git","<p>I have set up a bitbucket repo and have configured it in my Organizer.  I have created a basic .gitignore and added it to the root of my project.  I have tried committing all the files, but it continues to say there are uncommitted files when I try to push.</p>

<p>The uncommited files are:</p>

<ul>
<li>.DS_Store</li>
<li>project.pbxproj</li>
<li>UserInterfaceState.xcuserstate</li>
</ul>

<p>I have already put *.xcuserstate in my .gitignore.</p>

<p>Any ideas?</p>
","1","1339570","0","0"
"47856864","6021597","2017-12-17 15:58:37","8","6753","<android><git><kotlin><gitignore>","Ideal Android Studio Kotlin gitignore","<p>I want to commit my Android App code to a git repository. For this purpose I require a proper .gitignore file so that I can avoid commiting unnecessary and bloating stuff to the repo. </p>

<p>So I was wondering if anyone could provide me a good one for a <strong>kotlin</strong> project.</p>

<p>I have went through some questions here on StackOverflow, but those .gitignore are JAVA Project oriented, and I want one with <strong>kotlin</strong> orientation.</p>
","2","6021597","",""
"30446755","4190963","2015-05-25 22:19:53","0","212","<git><gitignore>","gitignore shouldn't track files in subdirectory, but should track the directory structure","<p>I have these files:</p>

<pre><code>Static/Images/img1.png
Static/Images/img2.jpg
Static/Files/file1.pdf
Static/Files/file2.docx
</code></pre>

<p>And I want to store the directory structure, meaning:</p>

<pre><code>Static
Static/Images
Static/Files
</code></pre>

<p>But I don't wanna store these files, because they are just a repository of  unnecessary static files.
On the other hand, storing the directory structure is important for me.</p>

<p>I tried many things, searched a lot, but I wasn't successful.
Gitignore is harder than seem.</p>

<p>Some tries:</p>

<p>1.</p>

<pre><code>Static/Images/*
Static/Files/*
</code></pre>

<p>2.</p>

<pre><code>Static/Images/**
Static/Files/**
</code></pre>

<p>3.</p>

<pre><code>Static/*
!Static/Images/
!Static/Files/
</code></pre>
","1","4190963","",""
"30460415","2769425","2015-05-26 13:46:05","10","16323","<eclipse><git><gitignore>","gitignore won't ignore my .settings/ directory (created by eclipse)","<p>git status:</p>

<pre><code>Untracked files:
(use ""git add &lt;file&gt;..."" to include in what will be committed)
    .settings/
</code></pre>

<p>I've tried the following variations on my .gitignore file and nothing seems to work:</p>

<pre><code>.settings/

*settings*

*.settings/

.settings/*
</code></pre>

<p>I've never had this much trouble with <code>.gitignore</code>, it usually just works. I must be doing something real dumb.</p>

<p>NOTE: My <code>.gitignore</code> file has more in it than just that one line (all the other lines works correctly). </p>
","1","2769425","0","0"
"12878794","1743674","2012-10-14 02:23:57","0","620","<ruby-on-rails><ruby-on-rails-3><git><gitignore>","Ignoring .gitignore","<p>My brother and I are collaborating on an app from two different computers -- one mac and one pc. I can't for the life of me get Postgres to work on his computer, and after a whole bunch of hours, I decided to just have his computer run sqlite3 for development (which is easy as pie), and basically have all the production stuff happen on my mac, while still allowing him to make functional changes from his pc. And merge them to github.</p>

<p>The trouble is, this involves having two different database.yml files, two different db/schema.rb files (I think), and different gemfiles, one with sqlite and the other with pg. </p>

<p>My thought was just to do all that on his computer and add those files to the  gitignore file. But if THAT isn't ignored, then when I pull back to my mac, won't I be merging his incorrect configurations to my machine? </p>

<p>At any rate, that's why I was thinking of adding .gitignore to .gitignore. Will this work? Will it create universe-bending paradoxes? Is there a better way to do this that I don't know about?</p>
","7","1743674","",""
"30492655","3788767","2015-05-27 20:36:02","0","352","<git><gitignore>","How to ignore a folder that is being tracked by git?","<p>I have a folder, ex: folder1,  that is being tracked by git for a long time. If I inset a new file, ex: file1 inside it, git status show a change, as should be.</p>

<p>But now I do not want that folder1 to be tracked by any more. </p>

<p>So, I set in .gitignore folder1/, and add and commit .gitignore.</p>

<p>After this, if I add new files, says file2, git status do not show me the new file that was added (file2) after gitignore was set, but still showing chages that was made before the gitignore settings.</p>

<pre><code>modified:   folder1/file1.txt (in red)
</code></pre>

<p>I already tried unstage the file1.txt and I followed this post <a href=""https://stackoverflow.com/questions/1329291/ignoring-an-already-checked-in-directorys-contents"">Ignoring an already checked-in directory&#39;s contents?</a> and this one <a href=""https://stackoverflow.com/questions/15027873/untrack-and-stop-tracking-files-in-gitHow"">Untrack and stop tracking files in git</a> but not worked. 
I was expecting to have the message:  </p>

<pre><code>$ git status
On branch master
nothing to commit, working directory clean
</code></pre>

<p>What am I missing?</p>
","1","3788767","0","0"
"13493946","1003665","2012-11-21 13:06:13","4","242","<git><gitignore><blackberry-10>","blackberry10 c++ .gitignore?","<p>I have a git repo with BB10 development using the C/C++ Native SDK. Do you have advice on the .gitignore file, or a template like the ones to be found at <a href=""https://github.com/github/gitignore"" rel=""nofollow"">https://github.com/github/gitignore</a>?</p>
","0","1003665","0","0"
"31058185","154480","2015-06-25 18:36:21","2","1432","<git><gitignore><ignore><msysgit><git-checkout>","How to prevent `git checkout` from checking out specific file types?","<p>We are creating a system in which users will be able to push arbitrary content to a shared Git repository. Our server will then checkout the repository and use the files.</p>

<p>To reduce risks, I'd like the <code>git checkout</code> command not to write any <code>.exe</code>, <code>.cmd</code>, <code>.bat</code> etc. on disk, and control which file types will be written.</p>

<p>How to configure Git (either using a configuration file, or a command-line argument) to ignore/skip specific file types at checkout?</p>

<p>Note that I'm running Git for Windows.</p>
","0","154480","0","0"
"13541615","624551","2012-11-24 13:22:40","623","308382","<git><ignore><gitignore>","How to remove files that are listed in the .gitignore but still on the repository?","<p>I have some files in my repository that should be ignored, i added them to the .gitignore but, of course, they are not removed from my repository.</p>

<p>So my question is, is there a magic command or script using filter-branch that can rewrite my history and remove all these files easily? Or simply a command that will create a commit that will remove them ?</p>
","6","624551","0","0"
"31100061","2690527","2015-06-28 12:58:16","13","3887","<git><code-generation><gitignore><auto-generate>","Make git to track auto-generated files but ignore from diff","<p>I have a repository with source code (mostly <code>*.php</code>, <code>*.js</code>) and documentation files (mostly <code>*.md</code>, <code>*.html</code>, <code>*.svg</code>) that are automatically generated from annotations. All documentation resides in a seperate sub-directory (<code>./doc</code>) within the repository.</p>

<p>On the one hand side, I want the documentation to be tracked via <code>git</code> and I want it to be committed/pushed to the server if it changes, because the it is vary comfortable to have a browsable and up-to-date documentation which is nicely displayed by github.</p>

<p>On the other hand side, it is very annoying to see the auto-generated files during an output of the <code>git diff</code> command. For example, if one line of source code is changed between two commits, then the <code>git diff</code> does not only output this single line but all auto-generated documentation, too, because the whole auto-generated documentation has changed.</p>

<p>Is there any way how to tell git to track the documentation but exclude it from <code>diff</code> by default? I would also be OK for me if git would consider all documentation files as blobs. Then at least <code>diff</code> would only claim that the files have changed, but not display all the documentation line-per-line.</p>
","0","2690527","0","0"
"31106192","1652166","2015-06-29 00:26:02","1","2036","<git><gitignore>","Git not ignoring some files extensions in my .gitignore file. Why?","<p>In my .gitignore I have...</p>

<pre><code>*.xcuserstate
*.xcbkptlist
</code></pre>

<p>However, whenever I open XCode and change anything, git annoys me telling me these have changed (which obviously they have)... but they are apart of my .gitignore... so why are they being flagged to begin with?</p>
","5","1652166","",""
"31126210","2751691","2015-06-29 21:52:18","-2","738","<git><gitignore><git-config>",".gitignore does not hide itself, and doesnot hide a file","<p>I have a repository, and the .gitignore is right under the repository.</p>

<p>When I do a <code>git status</code>, there's annoying file <code>src/main/resource/git.properties</code> that keeps showing up, and sometimes blocks me from doing a <code>git pull</code>. </p>

<p>I searched that <code>.gitignore</code> can help, so I added the path <code>src/main/resource/git.properties</code> to the top of the file. if I do a <code>cat .gitignore</code>, it gives</p>

<pre><code>src/main/resource/git.properties
logs/*.log
</code></pre>

<p>I also did 
<code>git config --global core.excludesfile .gitignore</code></p>

<p>Then I do <code>git status</code>,</p>

<pre><code>On branch master
Your branch is up-to-date with 'origin/master'.

Changes not staged for commit:
  (use ""git add &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

    modified:   .gitignore
    modified:   src/main/resources/git.properties

no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>What I expected was doing <code>git status</code> would say there's no change to the master.</p>

<p>Help please. </p>
","4","2751691","",""
"47998386","766911","2017-12-27 20:41:09","1","77","<content-management-system><gitignore>","Should I add Postleaf's cache folder to gitignore","<p>Trying out Postleaf, and just wondering what I should add to my .gitignore file for my web project.  I see there is a cache folder there, and I'm guessing this is a candidate for my .gitignore, but I didn't find documentation specific to this.  And are there other candidates that I should look at ignoring?</p>
","0","766911","0","0"
"13658211","605129","2012-12-01 09:42:14","5","25496","<git><gitignore>","Using .gitignore to not commit bin, debug and config folders","<p>I’m using git in my ASP.NET MVC project.</p>

<p>I want no files from <code>debug</code>, <code>bin</code> or <code>config</code> folder to show in the “Pending Chages” dialog so I will not have to commit them to my repository.</p>

<p>These files are machine specific specially the config folder.</p>

<p>I tried to add the following to <code>.gitignore</code>:</p>

<pre><code>myproject\bin**
myproject\obj**
myproject\config\**
</code></pre>

<p>This did not work because all files under all three folders are still displayed after each build or config changes.</p>

<p>What am I doing wrong?</p>
","0","605129","",""
"13693045","665557","2012-12-03 22:38:51","1","190","<git><windows-7><gitignore>","Adding a gitignore file","<p>I have a preexisting repo at C:\MyProject. It has a .git folder but I don't have a .gitignore. I created one with notepad (which says its a text document), and when I got to do a commit, the .gitignore folder got added to the repo.</p>

<p>How do I fix this?</p>

<p>I am using Windows 7 Pro.</p>
","0","665557","",""
"13728053","932833","2012-12-05 16:40:13","9","3496","<git><gitignore>","Can I ignore the global .gitignore?","<p>My global .gitignore is generally great but for this one off project I don't want the global rules applied. </p>

<p>How can I remove the global .gitignore rules for this one freak repository?</p>
","0","932833","0","0"
"13732165","1375695","2012-12-05 20:49:00","1","1945","<xcode><macos><git><version-control><gitignore>","gitignore negations ignored by git for osx xcode project","<p>This question arises from reading and commenting on another question: <a href=""https://stackoverflow.com/questions/49478/git-ignore-file-for-xcode-projects/13716745#13716745"">Git ignore file for Xcode projects</a></p>

<p>While Adam's answer (and accompanying <a href=""https://gist.github.com/3786883"" rel=""nofollow noreferrer"">gist</a>) appears definitive, I cannot actually get it to work. My understanding of the gitignore syntax seems incomplete.</p>

<p>My setup: OSX 10.8.2, git version 1.7.9.6 (Apple Git-31.1). There are no global gitignore files.</p>

<p>I am testing on a new project created with the OSX Application template in Xcode 4.5.</p>

<p>This is the test project file layout:</p>

<pre><code>./.gitignore
./MyApp
./MyApp/AppDelegate.h
./MyApp/AppDelegate.m
./MyApp/en.lproj
./MyApp/en.lproj/Credits.rtf
./MyApp/en.lproj/InfoPlist.strings
./MyApp/en.lproj/MainMenu.xib
./MyApp/main.m
./MyApp/MyApp-Info.plist
./MyApp/MyApp-Prefix.pch
./MyApp.xcodeproj
./MyApp.xcodeproj/project.pbxproj
./MyApp.xcodeproj/project.xcworkspace
./MyApp.xcodeproj/project.xcworkspace/contents.xcworkspacedata
./MyApp.xcodeproj/project.xcworkspace/xcuserdata
./MyApp.xcodeproj/project.xcworkspace/xcuserdata/admin.xcuserdatad
./MyApp.xcodeproj/project.xcworkspace/xcuserdata/admin.xcuserdatad/UserInterfaceState.xcuserstate
./MyApp.xcodeproj/xcuserdata
./MyApp.xcodeproj/xcuserdata/admin.xcuserdatad
./MyApp.xcodeproj/xcuserdata/admin.xcuserdatad/xcschemes
./MyApp.xcodeproj/xcuserdata/admin.xcuserdatad/xcschemes/MyApp.xcscheme
./MyApp.xcodeproj/xcuserdata/admin.xcuserdatad/xcschemes/xcschememanagement.plist
</code></pre>

<p>I set up the test project with source control disabled, then initialise the git repo manually in Terminal. The working directory is the project directory:</p>

<pre><code>git init
git add .
git commit -m ""first commit""
</code></pre>

<p>which returns a list of committed files:</p>

<pre><code>13 files changed, 5204 insertions(+)
create mode 100644 MyApp.xcodeproj/project.pbxproj
create mode 100644 MyApp.xcodeproj/project.xcworkspace/contents.xcworkspacedata
create mode 100644 MyApp.xcodeproj/project.xcworkspace/xcuserdata/admin.xcuserdatad/UserInterfaceState.xcuserstate
create mode 100644 MyApp.xcodeproj/xcuserdata/admin.xcuserdatad/xcschemes/MyApp.xcscheme
create mode 100644 MyApp.xcodeproj/xcuserdata/admin.xcuserdatad/xcschemes/xcschememanagement.plist
create mode 100644 MyApp/AppDelegate.h
create mode 100644 MyApp/AppDelegate.m
create mode 100644 MyApp/MyApp-Info.plist
create mode 100644 MyApp/MyApp-Prefix.pch
create mode 100644 MyApp/en.lproj/Credits.rtf
create mode 100644 MyApp/en.lproj/InfoPlist.strings
create mode 100644 MyApp/en.lproj/MainMenu.xib
create mode 100644 MyApp/main.m
</code></pre>

<p>After each .gitignore test I reset by deleting the .git folder and reinitialising.</p>

<p>If .gitignore is this</p>

<pre><code>AppDelegate.h
</code></pre>

<p>then<br>
<code>./MyApp/AppDelegate.h</code><br>
is excluded</p>

<p>If I change .gitignore to</p>

<pre><code>AppDelegate*
</code></pre>

<p>Both of these are excluded<br>
<code>./MyApp/AppDelegate.h</code><br>
<code>./MyApp/AppDelegate.m</code><br>
as expected</p>

<p>If my .gitignore is this:</p>

<pre><code>AppDelegate*  
!AppDelegate.m  
</code></pre>

<p>Again, only <code>AppDelegate.h</code> is excluded</p>

<p>This is all as expected</p>

<p>However I can't get reincludes to work when the exclusion rule is a containing folder</p>

<p>For example if my .gitignore is this</p>

<pre><code>xcuserdata  
</code></pre>

<p>then these files are excluded</p>

<p><code>./MyApp.xcodeproj/project.xcworkspace/xcuserdata/admin.xcuserdatad/UserInterfaceState.xcuserstate</code>  </p>

<p><code>./MyApp.xcodeproj/xcuserdata/admin.xcuserdatad/xcschemes/MyApp.xcscheme</code><br>
<code>./MyApp.xcodeproj/xcuserdata/admin.xcuserdatad/xcschemes/xcschememanagement.plist</code>  </p>

<p>Now if I want to re-include the contents of xcschemes</p>

<pre><code>xcuserdata  
!xcschemes
</code></pre>

<p>the result is the same - <code>!xcschemes</code> appears to be ignored.</p>

<p>similarly if .gitignore is</p>

<pre><code>en.lproj
</code></pre>

<p>these files are excluded</p>

<p><code>./MyApp/en.lproj/Credits.rtf</code><br>
<code>./MyApp/en.lproj/InfoPlist.strings</code><br>
<code>./MyApp/en.lproj/MainMenu.xib</code>  </p>

<p>If I wanted to reinclude one of them </p>

<pre><code>en.lproj  
!Credits.rtf  
</code></pre>

<p>the same files are excluded: <code>!Credits.rtf</code> is ignored.</p>

<p>the manpage for gitignore just says this:</p>

<blockquote>
  <p>An optional prefix !  which negates the pattern; any matching file
      excluded by a previous pattern will become included again. If a
      negated pattern matches, this will override lower precedence
      patterns sources.</p>
</blockquote>

<p>but I am not sure what ""lower precedence patterns sources"" means, or whether it is relevant here.  </p>

<p>What am I missing? </p>

<p><strong>update</strong><br>
Adam has updated his <a href=""https://gist.github.com/adamgit/3786883"" rel=""nofollow noreferrer"">gitignore gist</a> to take account of these issues. I have wrapped his changes into <a href=""https://gist.github.com/foundry/4383910"" rel=""nofollow noreferrer"">my fork</a>, and also added some notes on how to add or change such a .gitignore when an XCode project is already under git control.</p>
","5","1375695","",""
"66543629","914716","2021-03-09 08:53:20","0","184","<git><gitignore>","Ignore old untracked files in git status","<p>This is a problem caused entirely by my own laziness. In some projects I tend to accumulate a bunch of temporary files that I don't want to delete yet, but don't want to commit either. And because they are just my local temp files, I don't want to <code>.gitignore</code> them either.</p>
<p>Is there a way to make <code>git status</code> only show untracked files if they have been modified in last X days?</p>
","2","914716","",""
"31276535","5086297","2015-07-07 18:28:00","1","686","<git><gitignore>","Updated gitignore but files still being tracked","<p>I just updated my <code>.gitignore</code> so I ignore certain files, but when I sync my changes they are still there on github. </p>

<p>Please help me. I have tried many things.</p>

<p>Edit: I looked at those but I don't want to do those because it changes the repo. I want it the gitignore to only work for me</p>
","3","5086297","0","0"
"13761682","1885174","2012-12-07 10:56:17","5","1580","<git><git-branch><gitignore><git-checkout>","gitignore - hide ignored files during checkout","<p>Here is my problem (via example steps):</p>

<ul>
<li>I have a Git repo with two different branches (branchA and branchB), which are currently identical.</li>
<li>Checkout to branchB and create a new file ""foo.txt"".</li>
<li>Add that file to "".gitignore"" of that branch, so that it is successfully ignored in branchB.</li>
<li>Create another file ""hello.txt"", stage it and commit it.</li>
<li>Checkout to branchA.</li>
<li>foo.txt appears in branchA, but hello.txt does not.</li>
</ul>

<p>Why does foo.txt appear in branchA and not get ""hidden"" like hello.txt does?</p>

<p>From my perspective this is a great annoyance and seems like a bug/feature request, but has Git been designed to act this way? I was surprised to find no other people complaining about this.</p>
","0","1885174","",""
"13784758","706853","2012-12-09 04:49:55","5","1643","<gitignore>","Ignoring .blendX files in gitignore","<p>I'm making a game for a Gr. 12 programming course with my friends. I have 3D models I made in Blender on my local repository. Blender files end in <code>.blend</code>, and it also likes to make backups with extensions such as <code>something.blend1</code>, <code>something.blend2</code>, and so on, and I don't like deleting them every time I work on them. I'd like to ignore those in my <code>.gitignore</code>, how would I do that?</p>

<p>I tried having <code>*.blend*</code> in my <code>.gitignore</code>, but that ignored everything that ended in <code>.blend</code>. I also tried <code>.blend*</code>, but that ignored nothing.</p>
","0","706853","",""
"66550144","11140018","2021-03-09 15:46:01","1","288","<git><gitignore>","How do i ignore directories in .gitignore file?","<p><strong>Hey everyone! I am writing a new project right now and i have some problems with ignoring build directories.</strong> <a href=""https://i.stack.imgur.com/oZrfZ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/oZrfZ.png"" alt=""Project main directory"" /></a></p>
<p><strong>I need to ignore out/ directory but it doesn't work. (I already deleted out/ directory from my github repository)</strong></p>
<p><strong>This is .gitignore line:</strong></p>
<p><a href=""https://i.stack.imgur.com/vRcDf.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/vRcDf.png"" alt="".gitignore file"" /></a></p>
<p><strong>This is github repository after i deleted out/ directory from it</strong></p>
<p><a href=""https://i.stack.imgur.com/Nw9S0.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Nw9S0.png"" alt=""Github repository"" /></a></p>
<p><strong>Looks like it should work, but after all this out/ directory still appears in commit list:</strong></p>
<p><a href=""https://i.stack.imgur.com/cEspL.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/cEspL.png"" alt=""enter image description here"" /></a></p>
<p><strong>How should i do this?</strong></p>
","6","11140018","",""
"13826246","84885","2012-12-11 18:28:20","4","14484","<git><version-control><gitignore><atlassian-sourcetree>","Do not ignore files in git sourcetree","<p>I am downloading an eclipse project from source tree.  The .project and .classpath files are not checked in.  I want these checked in to do a successful import.  I have no gitignore file.  Can anyone shed some light as to why these files aren't coming across?  </p>

<p>I also looked on the source machine that checked these files and the files are there.  In the sourcetree version on that machine it doesn't show anymore files to be checked in.</p>

<pre><code>My exlude file looks like this:
# git ls-files --others --exclude-from=.git/info/exclude
# Lines that start with '#' are comments.
# For a project mostly in C, the following would be a good set of
# exclude patterns (uncomment them if you want to use them):
# *.[oa]
# *~
.DS_Store
</code></pre>

<p>This seems like this isn't the case either.</p>

<p>Thanks!</p>
","0","84885","0","0"
"48076659","1870517","2018-01-03 11:40:05","-1","163","<git><gitignore><glob>","gitignore pattern for autogenerated folder","<p>I run a script in my project that would generate a temporary folder in the project root. For example <code>_MEIxX7G6H</code>, and <code>ts-node-94a6b447580330f9f2b609422537b04239ff3a39df9137e32efd559f1a2935cb</code>. </p>

<p>That temporary folder is not meant to be in source control (Git). </p>

<p>It makes no sense to add those names to <code>.gitignore</code> because the names change after each execution. </p>

<p>Is there any way to add some pattern to partially match those file names?</p>
","5","1870517","",""
"31366673","2671169","2015-07-12 10:14:17","4","1256","<git><joomla><gitignore><joomla-component>",".gitignore for Joomla component","<p>I'm developing a Joomla! component named <strong>com_proposta</strong>.</p>

<p>I'm using git for version control.
I want git to ignore all Joomla files <strong>except</strong> the files in <code>administrator/components/com_proposta</code> and <code>components/com_proposta</code>.</p>
","1","2671169","",""
"13851160","1676002","2012-12-13 00:37:23","6","2307","<intellij-idea><gitignore>","What is the difference between IntelliJ ""ignored files"" and the .gitignore","<p>IntelliJ offers a dialog for <a href=""http://www.jetbrains.com/idea/webhelp/ignored-files.html"">""ignored files""</a> which does not pull in data from the .gitignore file I have in my base directory.  Should the ignored files dialog be used?  Does it create a .gitignore file anywhere?  I'm going through <a href=""http://wiki.jetbrains.net/intellij/Using_Git_Locally"">this tutorial</a>.</p>
","0","1676002","0","0"
"14251253","1855233","2013-01-10 05:18:11","32","56353","<git><gitignore><git-status>","How not to display the .class in git","<p>I don't want to display <code>.class</code> files when executing <code>git status</code>.</p>

<p>I created a file named <code>.gitignore</code> and entered the <code>.class</code> in the file but nothing happened.</p>

<p>What is the best way to prevent the <code>.class</code> file from being displayed when you execute <code>git status</code> command?</p>
","3","1855233","0","0"
"66803816","8767607","2021-03-25 16:33:09","1","370","<terraform><gitignore>","gitignore .tfvars but not .auto.tfvars","<p>I'm trying to avoid committing some Terraform vars while committing others. I was hoping something like the following in <code>gitignore</code> would work, but it doesn't.</p>
<pre><code>*.tfvars
!.auto.tfvars
</code></pre>
<p>I've tried <code>.tfvars.json</code> but am struggling to get JSON to a TF map object to work properly and think a gitignore exception like <code>!.auto.tfvars</code> to be superior.</p>
<p>Thanks for any suggestions.</p>
","0","8767607","",""
"66809939","7766024","2021-03-26 01:46:55","0","24","<git><gitignore>","Adding a pattern to gitignore file doesn't catch subdirectories","<p>I want to ignore specific files that start with <code>cached</code>. In my <code>.gitignore</code> file I have the line <code>cached*</code> but when I do <code>git status</code> I get the following:</p>
<pre><code>datasets/task1/thing1/cached_somethingsomething1
datasets/task2/thing2/cached_somethingsomething2
datasets/task3/thing3/cached_somethingsomething3
.
.
.
</code></pre>
<p>I've tried <code>**</code> as well, but it's the same result.</p>
<p>Is there a way to recursively ignore files, or do I have to specify ignore patterns for each subdirectory?</p>
","1","7766024","",""
"49221125","6900752","2018-03-11 14:32:29","2","92","<git><gitignore>","Ignore all but some file types in a git directory","<p>I am having trouble to understand how to ignore all but some file extensions in a directory and all subdirectories in git.</p>

<p>I basically have a massive folder with many different file types in it and want to only commit .txt and .tex files in that folder and all its subfolders to git. Is there an easier way than putting all other file extension endings in the .gitignore file?</p>

<p>Any help would be much appreciated, thank you!</p>
","0","6900752","",""
"49224105","5476481","2018-03-11 19:23:21","0","137","<ios><xcode><git><gitignore>","Back to Default Git or gitignore settings on XCode project","<p>Because me and my team started playing with the files that were included and ignored on the XCode Commit panel, our project has become very hard to manage on git. Since we added some libraries that we installed through cocoapods into git and uploaded them with the project, we have consistently gotten errors with files that don't show up on the user that pushed it, or other that show as missing for the user that made the pull.</p>

<p>To solve this, I want to take the most up-to-date branch, and reset git or the gitignore file in order to reupload to another origin from scratch, and hopefully have an easier time with our collaboration.</p>

<p>I haven't found a way to do so easily and safely. Is there a way to do so?</p>

<p>Thanks in advance.</p>
","0","5476481","",""
"49235143","7037695","2018-03-12 12:22:15","6","2045","<git><scala><intellij-idea><sbt><gitignore>","Scala on IntelliJ with Git: How should the .gitignore look like?","<p><em>Note: This question is specific to Scala projects. I want to have Scala compile and run successfully from inside IntelliJ without any prior configuration.</em></p>

<p>I have created a test project containing Scala examples using IntelliJ IDEA and published it to GitHub.</p>

<p>The project structure looks like this:</p>

<p><a href=""https://i.stack.imgur.com/oZHlm.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/oZHlm.png"" alt=""Project Structure""></a></p>

<p>My current <code>.gitignore</code> looks like this:</p>

<pre><code>*.class
*.log
target/
.idea/
project/
</code></pre>

<p>This results in a repository that looks like this:</p>

<p><a href=""https://i.stack.imgur.com/P0YBv.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/P0YBv.png"" alt=""GitHub repository structure""></a></p>

<p>Now for what I am trying to do:</p>

<p>Having Scala example code is cool, but I want to also use this project as a template for Scala projects with IntelliJ.</p>

<p>So, how should I best change my <code>.gitignore</code> file, so whenever I clone the project, I can open it with IntelliJ and have everything in working order?
This, of course, excludes target directories, so I need to recompile the project whenever I clone it.</p>
","1","7037695","",""
"49235793","8521990","2018-03-12 12:54:42","0","757","<reactjs><google-maps><heroku><gitignore>","Trouble having Heroku recognize gitignored api keys in react app","<p>I am having problems getting Heroku to recognize my api keys that I have gitignored on my React app.</p>

<p>I have created credentials.js with my api keys and exported it. </p>

<pre><code>export const API_KEY = 'redacted';
</code></pre>

<p>Then I listed credentials.js in gitignore.</p>

<pre><code>credentials.js
</code></pre>

<p>I then imported API_KEY into my project file.</p>

<pre><code>import { API_KEY } from '../credentials.js';
</code></pre>

<p>This works fine in development but when I push to Heroku, it fails to resolve the path to credentials and the compile fails since it's in a gitignored file. I have also tried using a .env file, but that does not work either.</p>

<p>I have tried not importing it and just running the Heroku ""config set"" command in the terminal, but to no avail.</p>

<pre><code>$heroku config:set API_KEY=&lt;key&gt;
</code></pre>

<p>Also the issue is importing the API_KEY gitignored variable in the index.html file. How do you do this in a React app like you can do with application.yml file in rails and referencing it with #{ENV[API_KEY]}? </p>

<p>Does anyone have a tried and tested solution?</p>
","2","8521990","",""
"40675630","5309101","2016-11-18 11:11:10","2","1445","<git><gitignore><git-checkout>","Git is dropping my .gitignore files at checkout","<p>When I checkout branch A to branch B, some files in my .gitignore A are dropped if they're not in in .gitignore branch B.
I tried to edit my .git/info/exclude file, but I don't see the difference.
I tried with --assume-unchanged and --skip-worktree (keeping the files in .gitignore + make add -f) but I can't checkout if my file is modified. I really need to ignore my file ...
Have you got some tips to share ?</p>

<p>Thanks</p>
","2","5309101","0","0"
"48247695","3724463","2018-01-14 08:04:34","5","9077","<git><github><gitignore>","Git warning: unable to access '.gitignore': Permission denied - .gitignore directory","<p>I created a repo on github, created a .gitignore file and then cloned it to my PC. After which I added my files, committed and pushed them. </p>

<p>Gitignore doesn't work as intended and I get this warning:</p>

<p><a href=""https://i.stack.imgur.com/UFhhm.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/UFhhm.png"" alt=""enter image description here""></a></p>

<p>Inside local repo folder structure:</p>

<p><a href=""https://i.stack.imgur.com/yF8Wd.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/yF8Wd.png"" alt=""enter image description here""></a></p>

<p>Why isn't .gitignore accessible? Is it because it's in a separate folder?
What should I do to solve this? </p>

<p>I can't seem to be able to rename it as suggested by this answer:<a href=""https://stackoverflow.com/a/25138119/3724463"">similar question</a></p>
","9","3724463","0","0"
"40763820","5353461","2016-11-23 11:53:08","8","2488","<git><gitignore>","git check-ignore output empty but still being ignored","<p>I have a folder <code>logs/</code> which is being ignored:</p>

<pre><code>$ $ git status -s --ignored logs
!! logs/
</code></pre>

<p>But, when I run:</p>

<pre><code>git check-ignore -v logs/
</code></pre>

<p>I get null output, which seems to indicate that there is nothing ignoring it.</p>

<p>I have nothing staged:</p>

<pre><code>$ git status --untracked-files=no
On branch master
nothing to commit (use -u to show untracked files)
</code></pre>

<p>So why is this folder being ignored?</p>

<pre><code>$ git --version
git version 2.10.2
</code></pre>
","0","5353461","",""
"2994612","143397","2010-06-08 03:29:02","61","29585","<git><gitignore><git-status>","Is there a way to tell git-status to ignore the effects of .gitignore files?","<p>I have configured numerous <code>.gitignore</code> files to filter out many different unwanted files from a set of about 6,000 untracked files. I want to do <code>git add .</code> when I've got my filtered list looking the way I want it.</p>

<p>But, then I want to disable the <code>.gitignore</code> filters temporarily to see what got left behind, and make sure there was nothing important accidentally filtered.</p>

<p>I know that <code>git-clean</code> includes an option to ignore <code>.gitignore files</code>. Is there a similar option for <code>git-status</code>?</p>

<p>I could go through and delete all the <code>.gitignore</code> files, do the check, then restore them, but it seems there should be an easier way?</p>
","0","143397","0","0"
"13991959","878451","2012-12-21 14:29:42","3","221","<git><gitignore><git-diff><git-log>","changes to .gitignore not shown in log but shown in commit to commit diff","<p>10 something commits back, I made a change to .gitignore file. Today when I pulled the latest code, my change was not there. So I ran this command:</p>

<pre><code>git log -p .gitignore
</code></pre>

<p>And it showed me that the last change to the file was mine. Then I pulled all the commits between now and my commit, and pinpointed the commit that removed my change. Then I took the diff of That commit, and the one before that, and in the diff I could see the change to the file. </p>

<p>But why can't I see the change through above command? And I don't even see this change when I use </p>

<pre><code>gitk .gitignore
</code></pre>

<p>Also I am wondering, might this happen when I try to see the history of some other file as well?</p>
","3","878451","",""
"21782170","1059387","2014-02-14 14:37:43","0","164","<git><gitignore><ignore>","how to track one specified directory but ignore any things in it with git","<p>I have one directory named ""ignore-folder"" and I track it in git, but I want to ignore the files and directories in it, how should I edit the <code>.gitignore</code>?</p>
","2","1059387","",""
"3001888","143397","2010-06-08 22:46:52","173","90396","<git><gitignore>","How do .gitignore exclusion rules actually work?","<p>I'm trying to solve a gitignore problem on a large directory structure, but to simplify my question I have reduced it to the following.</p>
<p>I have the following directory structure of two files (foo, bar) in a brand new git repository (no commits so far):</p>
<pre><code>a/b/c/foo
a/b/c/bar
</code></pre>
<p>Obviously, a <code>git status -u</code> shows:</p>
<pre><code># Untracked files:
...
#       a/b/c/bar
#       a/b/c/foo
</code></pre>
<p>What I want to do is create a <code>.gitignore</code> file that ignores everything inside a/b/c but does not ignore the file <code>foo</code>.</p>
<p>If I create a <code>.gitignore</code> thus:</p>
<pre><code>c/
</code></pre>
<p>Then a <code>git status -u</code> shows both <code>foo</code> and <code>bar</code> as ignored:</p>
<pre><code># Untracked files:
...
#       .gitignore
</code></pre>
<p>Which is as I expect.</p>
<p>Now if I add an exclusion rule for <code>foo</code>, thus:</p>
<pre><code>c/
!foo
</code></pre>
<p>According to the gitignore manpage, I'd expect this to to work. But it doesn't - it still ignores <code>foo</code>:</p>
<pre><code># Untracked files:
...
#       .gitignore
</code></pre>
<p>This doesn't work either:</p>
<pre><code>c/
!a/b/c/foo
</code></pre>
<p>Neither does this:</p>
<pre><code>c/*
!foo
</code></pre>
<p>Gives:</p>
<pre><code># Untracked files:
...
#       .gitignore
#       a/b/c/bar
#       a/b/c/foo
</code></pre>
<p>In that case, although <code>foo</code> is no longer ignored, <code>bar</code> is also not ignored.</p>
<p>The order of the rules in <code>.gitignore</code> doesn't seem to matter either.</p>
<p>This also doesn't do what I'd expect:</p>
<pre><code>a/b/c/
!a/b/c/foo
</code></pre>
<p>That one ignores both <code>foo</code> and <code>bar</code>.</p>
<p>One situation that does work is if I create the file a/b/c/.gitignore and put in there:</p>
<pre><code>*
!foo
</code></pre>
<p>But the problem with this is that eventually there will be other subdirectories under <code>a/b/c</code> and I don't want to have to put a separate <code>.gitignore</code> into every single one - I was hoping to create <em>project-based</em> <code>.gitignore</code> files that can sit in the top directory of each project, and cover all the &quot;standard&quot; subdirectory structure.</p>
<p>This also seems to be equivalent:</p>
<pre><code>a/b/c/*
!a/b/c/foo
</code></pre>
<p>This might be the closest thing to &quot;working&quot; that I can achieve, but the full relative paths and explicit exceptions need to be stated, which is going to be a pain if I have a lot of files of name <code>foo</code> in different levels of the subdirectory tree.</p>
<p>Anyway, either I don't quite understand how exclusion rules work, or they don't work at all when directories (rather than wildcards) are ignored - by a rule ending in a <code>/</code>.</p>
<p>Can anyone please shed some light on this?</p>
<p>Is there a way to make gitignore use something sensible like regular expressions instead of this clumsy shell-based syntax?</p>
<p>I'm using and observe this with git-1.6.6.1 on Cygwin/bash3 and git-1.7.1 on Ubuntu/bash3.</p>
","2","143397","0","0"
"13994546","1922100","2012-12-21 17:25:51","8","3133","<git><github><gitignore><git-pull>","How to avoid merging a specific file with git-pull?","<p>In my local repository, I have a modified settings file with a different version of the file stored on GitHub. Whenever I pull from GitHub into my local repository, my local copy gets changed.</p>

<p>Is there any way to avoid having my local copy overwritten by <em>git-pull</em>?</p>
","2","1922100","",""
"48278363","6613328","2018-01-16 09:49:54","0","126","<git><android-studio><gitignore>","In Android Studio 3.0.1 has something changed in git, after I push online one project, I cannot checkout","<p>I have a problem with git (when Android Studio is updated to version 3.0.1).</p>

<p>I use git integration like always I use. I create a repository, commit changes on this and push in Git repository online (like GitLab or BitBucket). 
But now I have a problem when I try to do a checkout from Version Control if I check out one project (that I pushed before without a problem) into another PC ""go down"" with one problem! There is no run configurator (image below)</p>

<p><a href=""https://i.stack.imgur.com/2LSic.png"" rel=""nofollow noreferrer"">enter image description here</a></p>

<p>So I don't know how to solve this problem, I am not very expert, I never touched <code>.gitignore</code> file. I always use Android Studio system to do that operation! 
please, if somebody can help in explaining me the situation, it is not very clear to me.</p>
","2","6613328","",""
"21787291","2635088","2014-02-14 18:51:15","1","6212","<visual-studio-2010><git><gitignore><git-bash>","How to add existing visual studio project to empty git repository","<p><br><br>
I have an empty git repository on the server which I can clone to my local machine using 
git clone. My question is, how do I add a new visual studio 2010 project to that repo? <br> <br>Concretely, I created a folder and named it ""repos"". Inside the folder, I run the following command on git bash to clone my empty repo - git clone  (pseudo-code), which creates a folder called EmptyRepo inside my ""repos"" folder.<br><br> Now if I want to create a new Visual studio project, would I create it inside this EmptyRepo folder? In which case if I'm creating a WindowsForm project named GitTrial, my directory would look like -> <br><br>
<b>repos/EmptyRepo/GitTrial/GitTrial.sln</b>, which would be my solution file, and<br>
<b>repos/EmptyRepo/GitTrial/GitTrial/</b> would contain a bunch of files like bin, obj, Properties, Form1.cs, Form1.Designer.cs, GitTrial.csproj, Program.cs <br><br>Or would these files go in a different folder?</p>

<p>Also, inside these paths, where would the .gitignore file go?<br><br>
Thanks!</p>
","2","2635088","0","0"
"59561657","5281051","2020-01-02 10:19:21","17","26105","<git><vue.js><vue-component><vuetify.js><gitignore>","How can I ignore dist folder in .gitignore file?","<p>I want to ignore the <code>dist</code> folder. So when there is a change in the <code>dist</code> folder, it doesn't appear in the <code>commit</code></p>

<p>In the .gitignore file, there had exist <code>/dist</code> like this :</p>

<pre><code>.DS_Store
node_modules
/dist
</code></pre>

<p>But why when there are changes it still appears?</p>

<p>How can I solve this problem?</p>
","3","5281051","0","0"
"59641044","5814250","2020-01-08 07:14:46","0","127","<intellij-idea><gitignore>","IntelliJ .idea folder is part of the local changes although it's defined in .gitignore","<p>I have .idea in .gitignore as part of my project, but it still appears is local changes.</p>

<p>How can I fully ignore the .idea folder?</p>

<p>Here is my .gitignore definition:</p>

<pre><code>.idea
.idea_modules/
*.iws
*.iml
*.ipr
*.log

target/
</code></pre>
","1","5814250","0","0"
"48301583","9148861","2018-01-17 12:49:00","2","4388","<git><gitignore>","Why is my .gitignore file not ignoring specific files?","<p>Why is my .gitignore file not ignoring specific files?</p>

<p>I need to ignore any file which starts with: .metadata/.</p>

<p>I have created a git file ( .gitignore ):
<a href=""https://i.stack.imgur.com/r8e2A.png"" rel=""nofollow noreferrer"">Git ignore file</a> </p>

<p>I have added the following text within the ignore file:
<code>.metadata/.*</code></p>

<p>However my file still seems to be showing the files in red: </p>

<pre><code>± |master ↑8 U:44 ?:22 ✗| → git status
On branch master
Your branch is ahead of 'origin/master' by 8 commits.
  (use ""git push"" to publish your local commits)
Changes not staged for commit:
  (use ""git add/rm &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

        modified:   .metadata/.log
        modified:   .metadata/.mylyn/.tasks.xml.zip
        modified:   .metadata/.mylyn/tasks.xml.zip
        modified:   .metadata/.plugins/com.genuitec.eclipse.devstyle/recent.json
        modified:   .metadata/.plugins/com.genuitec.eclipse.monitor/myeclipse-usage.properties
</code></pre>
","4","9148861","",""
"40885182","5353461","2016-11-30 09:55:15","1","138","<git><gitignore>","Repository files showing in `git status`","<p>I'm versioning my <code>$HOME</code> with <code>git</code>, but with an differently-named repository directory so that my prompt doesn't always show <code>git</code> information.</p>

<p>I have setup an alias for when I want to use <code>git</code> on my <code>$HOME</code>:</p>

<pre><code>alias gith='git --git-dir=/home/ravi/.githome --work-tree=/home/ravi'
</code></pre>

<p>The repository directory <code>.githome</code> itself shouldn't be showing up in a <code>gith status</code>, but it is:</p>

<pre><code>~$ git --git-dir=/home/ravi/.githome --work-tree=/home/ravi status -s
 M .dotfiles
 M .githome/COMMIT_EDITMSG
 M .githome/index
 M .githome/index.lock
 M .githome/logs/HEAD
 M .githome/logs/refs/heads/master
 M .githome/refs/heads/master
 M .local/share/fzf
 M bin
 M lib
 M prj/sample_app
</code></pre>

<p>I'm trying to ignore the directory <code>.githome</code> as follows: </p>

<pre><code>~$ grep .githome .gitignore
/.githome/
~$ cat .githome/.gitignore 
*
</code></pre>

<p>Questions: </p>

<ol>
<li>Why aren't my two exclude files working?</li>
<li>Why do I need to explictly exclude the repository directory anyway?</li>
</ol>
","1","5353461","",""
"31568070","2835086","2015-07-22 15:51:29","1","55","<git><gitignore><git-rm>","Stop git from re-deleting an ignored file that used to be tracked?","<p>A <a href=""https://stackoverflow.com/questions/2691618/git-is-deleting-an-ignored-file-when-i-switch-branches"">previous poster</a> wanted to track a file in one branch and not in another; I just want to not track it at all.</p>

<p>I used to have "".p4client"" tracked in git, which turned out to be a mistake. So I deleted it from the repository, added the name to <code>.gitignore</code>, and recreated the file. Now it gets deleted when I switch branches -- but only some checkouts, not all. It appears to occur only when switching <em>to</em> 'master', not <em>from</em>, and not when going between dev branches.</p>

<p><strong>How can I put an stop to this, and just keep the file around, untracked?</strong></p>
","1","2835086","",""
"48337207","6703783","2018-01-19 08:51:08","2","36","<git><gitignore>","why there are different ways to specify a directory in .gitignore","<p>I notice that in following <code>.gitignore</code> file, <code>logs</code> folder is specified as <code>logs</code> while <code>.idea</code> and <code>out</code> are specified as <code>/.idea</code> and <code>/out</code>? Why? When should I use <code>/</code> in front of a directory or file name?</p>

<pre><code>logs
project/project
project/target
target
tmp
.history
dist
/.idea
/*.iml
/out
/.idea_modules
/.classpath
/.project
/RUNNING_PID
/.settings
</code></pre>
","1","6703783","",""
"14021400","592654","2012-12-24 12:26:32","7","5229","<git><gitignore>","How can I set .gitignore to ignore all .jars but not in the expected folder","<p>I have a project structure like this:</p>

<pre><code>/proj/a/file.jar
/proj/a/1/file.jar
/proj/b/file.jar
/proj/b/1/file.jar
/proj/b/2/1/file.jar
/proj/c/file.jar
/proj/c/1/file.jar
/proj/c/2/1/file.jar
</code></pre>

<p>etc.</p>

<p>I'm trying to ignore all jar files except those in <strong>c</strong> folder and all nested ones. How should I set this in .gitignore?</p>

<pre><code>*.jar
!c/*.jar
</code></pre>

<p>doesn't work. This too:</p>

<pre><code>*.jar
!c/*/*.jar
</code></pre>

<p>and this:</p>

<pre><code>*.jar
!/proj/c/*/*.jar
</code></pre>

<p>and this:</p>

<pre><code>*.jar
!/proj/c/**/*.jar
</code></pre>

<p>Am I miss something?</p>
","4","592654","0","0"
"59749624","6364110","2020-01-15 10:37:44","0","327","<git><gitignore><jetbrains-ide>","Hidden folders in .gitignore","<p>I have a hidden folder <code>/.idea</code> from the IDE that I want to ignore. I have followed the patter of <a href=""https://github.com/github/gitignore/blob/master/Global/JetBrains.gitignore"" rel=""nofollow noreferrer"">https://github.com/github/gitignore/blob/master/Global/JetBrains.gitignore</a> but it is not being ignored.</p>

<pre><code>// .gitignore

# See https://help.github.com/ignore-files/ for more about ignoring files.

# dependencies
/node_modules
package-lock.json
**/node_modules

# testing
/coverage

# production
/build

# Things that I have tried
.idea/
/.idea/
.idea/**
</code></pre>

<p>What would be the way to ignore it?</p>
","2","6364110","0","0"
"40999954","6349046","2016-12-06 16:15:14","4","22064","<git><laravel><gitignore>","How to use Git ignore file to prevent uploading vendor folder and others configuration files of laravel to the git branch. What is the proper way?","<p>After installing laravel debugger package (barryvdh), some of my file like (composer.lock, app.php) has been updated and I don't want to upload those files to my git branch, So that, I added those file name to the gitignore file. After that, I ran ""git status"" command, and as normally git bash shows me the updated files. Then, I run (git add -All) command to add the files, after that I ran commit and push command, But all of the files that I've just added to the git ignore file, that also uploaded to my branch.</p>
","2","6349046","",""
"66622520","747050","2021-03-14 08:38:37","0","534","<git><gitignore><git-stash>","Ignore changes in the files, which are in the git repository, locally","<p>To make my project work locally I have to change one file. But this file has to be unchanged in the remote. How do I make git ignore the changes in this file when using <code>git status</code>, <code>git add</code> and <code>git stash</code> command?</p>
<p>What I tried:</p>
<p>1.</p>
<pre><code>git update-index --assume-unchanged filename
</code></pre>
<p>makes it work with 'git status' and 'git add', but 'git stash'+'git stash pop' restores the file to the original state, breaking my local setup.</p>
<p>2.
I found this solution, but it changes remote as well, which I don't want to:
<a href=""https://www.codeblocq.com/2016/01/Untrack-files-already-added-to-git-repository-based-on-gitignore/"" rel=""nofollow noreferrer"">https://www.codeblocq.com/2016/01/Untrack-files-already-added-to-git-repository-based-on-gitignore/</a></p>
<p>3.
adding the file to <code>.git/info/exclude</code> doesn't work, since it is a file from the repository, not a new file.</p>
","6","747050","",""
"41007891","1213588","2016-12-07 01:26:01","0","180","<git><gitignore><git-config>","Define .gitignore file at user level and track changes only directory defined in gitignore in repository","<p>I've a situation where i want to define .gitignore file at user level. I would like to use both .gitignore repository as well as user level. Repository level is the same used by every one and user level is to add/remove files from tracking only for my machine.</p>

<p>We've a repository in which i work on a particular directory, so i want to push changes only for that directory. I don't want to accidently push changes for files outside that directory.</p>

<p><strong>I'm looking solution for</strong></p>

<ul>
<li>Add/Remove files from tracking in user level .gitignore file?</li>
<li>In user level .gitignore, our path should be relative or absolute?</li>
<li>Is it possible to add a directory in .gitignore I only want to keep track?</li>
</ul>
","2","1213588","",""
"22021842","1458093","2014-02-25 17:35:34","3","1812","<git><gitignore>","Unable to unstage git committed file","<p>When we added a directory to git, we had some temporary files (ending in <code>.~</code>) that we don't want to track added already by mistake.</p>

<p>We've since setup a <code>.gitignore</code> file with a <code>*.~</code> rule.  This works for all new temporary files, but we're unable to remove the few that were already committed.</p>

<p>When we run <code>git rm --cached &lt;file&gt;</code> it moves the file from <code>modified:</code> to a <code>deleted:</code> status.  And says</p>

<pre><code># On branch master
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#       deleted:    FILE.~
</code></pre>

<p>But when we run <code>git reset HEAD FILE.~</code>, it's still in the list of files under</p>

<pre><code>Unstaged changes after reset:
M       pd/FILE.~
</code></pre>
","1","1458093","0","0"
"66914882","2548883","2021-04-02 05:32:20","0","559","<git><gitignore><git-flow><git-log><aws-codecommit>","aws codecommit repo folder override by git command run on local computer","<p>There was a folder name called <strong>profileimg</strong> in the local computer and the AWS codecommit repository. That folder fills with images when a user uploads images. However, when I change some code in the local computer repo and git push into remote repo ( AWS codecommit repo ), <strong>profileimg</strong> folder override with empty data and images are being disappeared. This was a Laravel 8 project hosted in the AWS beanstalk environment.</p>
<p>What I tried so far in the local git repo: <br/></p>
<ul>
<li>$ git rm -r --cached public/images/profileimg/*</li>
<li>$ git update-index --assume-unchanged public/images/profileimg/*</li>
</ul>
<p><strong>Folder structure:</strong>
<br/></p>
<ul>
<li>public
<ul>
<li>images
<ul>
<li>profileimg</li>
</ul>
</li>
</ul>
</li>
<li>.gitignore</li>
</ul>
<p><strong>.gitignore</strong>
<br/></p>
<pre><code>#exclude everything
public/images/profileimg/*
public/images/profileVerifyDoc/*

#exception
!public/images/profileimg/.gitkeep
!public/images/profileVerifyDoc/.gitkeep
</code></pre>
<br/>
<p><a href=""https://i.stack.imgur.com/C9tU2.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/C9tU2.png"" alt=""enter image description here"" /></a></p>
<p><a href=""https://i.stack.imgur.com/h7T2P.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/h7T2P.png"" alt=""enter image description here"" /></a></p>
<br/>
Moreover, I created .ebignore file in the AWS codecommit repo. The local computer also has .gitignore file. Any suggestion, please. 
","5","2548883","",""
"59856874","2192829","2020-01-22 09:53:33","1","44","<git><gitignore>","how to ignore ""?"" directory in gitignore","<p>.gitignore uses <a href=""https://linux.die.net/man/7/glob"" rel=""nofollow noreferrer"">globbing</a>, where <code>?</code> is a special character matching everything but ""/"". But what if I want to match exactly the <code>?</code> directory in order to ignore it?</p>
","2","2192829","",""
"59859927","12761586","2020-01-22 12:36:18","0","1128","<c++><git><github><ubuntu-18.04><gitignore>","Adding raw files to .gitignore","<p>I created a git repository folder which contains all of my C++ code. When I compile the code with <code>g++ -g filename.cpp -o filename -lgraph</code> in my <em>Ubuntu 18.04</em>, it creates a <code>filename</code> file without extension. I want git to stop tracking all these created files while I do <code>git add .</code> and track the rest. What should I add to the <em>.gitignore</em> file so that these files are ignored?</p>
","5","12761586","",""
"66927720","12897900","2021-04-03 04:26:10","0","1621","<linux><git><gitignore>","How to add multiple files into a .gitignore file in the proper way?","<p>Here, I'm using a linux terminal.
Assume, I have created a new directory</p>
<pre><code>mkdir project_new
cd project_new
git init
</code></pre>
<p>And I've created two new files</p>
<pre><code>touch a.txt b.txt
</code></pre>
<p>Now I'm staging and committing</p>
<pre><code>git add .
git commit -m 'Add two new files a.txt b.txt'
</code></pre>
<p>Creating a .gitignore and made it as a hidden file</p>
<pre><code>touch .gitignore
echo .DS_Store &gt;.gitignore
</code></pre>
<p>Now can you help me out in the next steps</p>
<p>how to add both 'a.txt' &amp; 'b.txt' inside the .gitignore to make them as untracked files?</p>
","2","12897900","",""
"41130632","9161","2016-12-13 21:13:13","14","2549","<python><git><gitignore>","Is there an easy way to match files against .gitignore rules?","<p>I'm writing a git pre-commit hook in Python, and I'd like to define a blacklist like a <code>.gitignore</code> file to check files against before processing them. Is there an easy way to check whether a file is defined against a set of <code>.gitignore</code> rules? The rules are kind of arcane, and I'd rather not have to reimplement them.</p>
","7","9161","",""
"66946050","3577482","2021-04-04 21:30:26","0","1404","<git><github><gitignore>","How to effectively gitignore client/public/bundle.js and client/public/bundle.js.LICENSE.txt?","<p>From my project base directory (where .gitignore is located), I want to git ignore two files,</p>
<pre><code>client/public/bundle.js
client/public/bundle.js.LICENSE.txt
</code></pre>
<p>I have tried, <code>**/bundle.js</code>, <code>client/public/bundle.js</code>, but it is not working. do I need to clear the git cache in the project, as well as delete the file if it exists upstream/remote?</p>
","0","3577482","0","0"
"41146237","1501700","2016-12-14 15:26:06","1","576","<git><gitignore>","Ignoring files without editing .gitignore","<p>I have cloned project with it's <code>.gitignore</code>. Then I have placed some directories with files in it used for specific testing purposes. I don't want commit these directories to remote repository but I also don't place strange directories and files names to <code>.gitignore</code> in order not disturb other developers who will read <code>.gitignore</code>. How to solve such problem?</p>
","1","1501700","",""
"22155874","6244","2014-03-03 19:45:45","0","104","<windows><git><gitignore>","Why isnt git ignoring my sub directory?","<p>my .gitignore file</p>

<pre><code>ext/templates_c
</code></pre>

<p>my git status call</p>

<pre><code>D:\Development\online\site\newsite&gt;git status
# On branch master
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       modified:   ext/pages/config.php
#       modified:   ext/templates_c/60a4cccd667e8b1e3a702b2a2c9108f056837adc.file.pages.html.php
#       modified:   ext/templates_c/fd38ffaa13c6f4c29772bec22cad5aebb1d4d7f6.file.form.html.php
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>Have I done something really stupid?  </p>

<p>Why isnt git ignoring the files in ext/templates_c  </p>
","0","6244","",""
"49420785","830230","2018-03-22 04:52:06","17","2997","<git><gitignore>","git ignore file but not folder with the same name","<p>My code structure is:</p>

<pre><code>.gitignore
my-service &lt;&lt; this is a file without an extention
charts
| my-service &lt;&lt; this is a folder
| | file1
| | file2
</code></pre>

<p>When I write in my gitignore <code>my-service</code> it ignores both my-service the file and <code>my-service</code> the folder.
How can I ignore only the file in the root directory, and not the sub-directory?</p>
","2","830230","0","0"
"3606974","251920","2010-08-31 07:40:05","2","148","<git><gitignore>","Vanishing file included in .gitignore","<p>this is probably naive question:</p>

<p>i have file config.yml which is in .gitignore file
when I'm switching branch to 'someotherbranch' and next i switch back to master</p>

<p>then I don't see config.yml</p>

<p>why ignored files are vanishing after switching branch and what can I do to avoid it?</p>
","0","251920","0","0"
"41275790","3935156","2016-12-22 04:27:13","-1","2428","<git><gitignore>","exclude from tracking with .gitignore not working","<p>I'm trying to remove all files in ""js"" folder from being tracked.</p>

<p>Here is my .gitignore:</p>

<pre><code># See http://help.github.com/ignore-files/ for more about ignoring files.

# compiled output
/dist
/tmp


# dependencies

# IDEs and editors
/.idea

# misc
/.sass-cache
/connect.lock
/coverage/*
/libpeerconnection.log
npm-debug.log
testem.log
/typings

# e2e
/e2e/*.js
/e2e/*.map

# js
js/


#System Files
.DS_Store

node_modules/
bower_components/
.sass-cache/
images/
app/test/reportscreenshots/
app/test/report/
</code></pre>

<p>Note the <code>js/</code> it is not removing files in that folder from being tracked. Here is my folder structure:</p>

<p><a href=""https://i.stack.imgur.com/7oNVN.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/7oNVN.png"" alt=""enter image description here""></a></p>

<p>Why does my .gitignore not exclude files in ""js"" folder from being tracked?</p>
","2","3935156","0","0"
"22289849","939634","2014-03-09 23:50:11","29","13140","<git><visual-studio-2013><gitignore>","Why is visual studio committing files in my .gitignore file?","<p>I'm using Visual Studio 2013 Express using Git on a project.</p>

<p>I created my repository and copied the project files into it from another directory.  I then checked my <code>.gitignore</code> and <code>.gitattributes</code> files.  <code>.gitignore</code> was pre-configured and looked to cover everything I needed to ignore for commits at this point.</p>

<p>I selected the Changes tab in Visual Studio under the ""Team Explorer"" tab and saw all my files were untracked, as expected.  I then clicked ""Add All"".  I assumed VS would only add files not matching those in my <code>.gitignore</code> to the ""Included Changes"" list.  Instead, all the files were added to the ""Included Changes"" list.</p>

<p>I then thought that maybe the <code>.gitignore</code> file would be used when committing and that only files not matching those in <code>.gitignore</code> would be committed.  So I added a commit message and clicked ""Commit"".</p>

<p>When I select ""View History"" from the ""Actions"" drop down in the ""Changes"" tab I am presented with a pane to the left of my ""Team Explorer"" view that shows all the commits I've made.  There is only 1 commit.  When I double click that commit, the ""Team Explorer"" tab displays <code>Commit 8db34b1c</code> and all the files in my project are listed there in the tree view with [add] after their name.</p>

<p>For example, <code>App_Data/Movies.mdf</code> and <code>App_Data/Movies.ldf</code> are listed even though my <code>.gitignore</code> includes the lines</p>

<pre><code># SQL Server files
App_Data/*.mdf
App_Data/*.ldf
</code></pre>

<p>I don't understand how the .gitignore file is being used here or what the ""Included Changes"", ""Excluded Changes"" or ""Untracked Files"" sections mean.</p>

<p>An explanation of the above behavior and sections would be appreciated.</p>

<p>Edit--</p>

<p>I deleted my .git directory, created a new repo, copied my project files in again and then took screenshots of what I see.</p>

<p>Here are images of my .gitignore file and my ""Changes"" tab.</p>

<p><img src=""https://i.stack.imgur.com/ksOxk.jpg"" alt=""enter image description here""> <img src=""https://i.stack.imgur.com/GzofZ.jpg"" alt=""enter image description here""></p>

<p>There's <a href=""https://stackoverflow.com/questions/18618760/tfs-git-extensions-seems-to-ignore-gitignore"">this SO question</a> and <a href=""https://stackoverflow.com/questions/18618760/tfs-git-extensions-seems-to-ignore-gitignore"">this msdn question</a> which shows that other people seem to be having issues as well.  I tried deleting the .xml file added by VS in my .git directory (as noted in the msdn question) but that did not solve the issue for me.</p>

<p>Edit 2 --</p>

<p>This is my current directory structure :</p>

<pre><code>/MvcMovie/
    |--.git/
    |
    |---MvcMovie/
    |       |--App_Data/
    |       |     |--Movies.mdf
    |       |     |--Movies.ldf
    |       |     
    |       |--App_Start/
    |       |--etc...
    |
    |--packages/
    |--.gitignore
    |--.gitattributes
    |--MvcMovie.sln
    |MvcMovie.v12.suo
</code></pre>
","2","939634","0","0"
"32198319","3992810","2015-08-25 07:47:41","2","174","<android><gitignore>","In the Android Studio 1.3 and later,what should be added in my .gitignore for a project?","<p>As the Android Studio is improved,now its latest version is 1.3.2,what should be in the .gitignore so that i can develop well?</p>
","0","3992810","",""
"68357805","9422562","2021-07-13 06:56:16","-1","153","<node.js><git><express><git-bash><gitignore>","After completing npm audit fix, git status shows a bunch of modified/deleted node_modules files. How can I ignore them or delete?","<p>I tried adding node_modules/ to my .gitignore, but that didn't work.
This is a small snippet of what I'm seeing:</p>
<p>$ git status
On branch master
Your branch is up to date with 'origin/master'.</p>
<p>Changes not staged for commit:
(use &quot;git add/rm ...&quot; to update what will be committed)
(use &quot;git restore ...&quot; to discard changes in working directory)
modified:   .gitignore
modified:   node_modules/.bin/acorn
modified:   node_modules/.bin/acorn.cmd
deleted:    node_modules/.bin/babylon
deleted:    node_modules/.bin/babylon.cmd
modified:   node_modules/.bin/concurrently
modified:   node_modules/.bin/concurrently.cmd
modified:   node_modules/.bin/mime
modified:   node_modules/.bin/mime.cmd
modified:   node_modules/.bin/semver
modified:   node_modules/.bin/semver.cmd
modified:   node_modules/.bin/tree-kill
modified:   node_modules/.bin/tree-kill.cmd
deleted:    node_modules/.bin/uglifyjs
deleted:    node_modules/.bin/uglifyjs.cmd
deleted:    node_modules/.bin/which
deleted:    node_modules/.bin/which.cmd
deleted:    node_modules/@types/babel-types/LICENSE
deleted:    node_modules/@types/babel-types/README.md
deleted:    node_modules/@types/babel-types/index.d.ts
deleted:    node_modules/@types/babel-types/package.json
deleted:    node_modules/@types/babylon/LICENSE
deleted:    node_modules/@types/babylon/README.md
deleted:    node_modules/@types/babylon/index.d.ts
deleted:    node_modules/@types/babylon/package.json</p>
","0","9422562","",""
"14736743","1099531","2013-02-06 19:03:54","2","2287","<git><gitignore>","Un-ignore a directory added to .gitignore","<p>What I did was to have two branches:</p>

<ul>
<li>local</li>
<li>production</li>
</ul>

<p>In my <code>local</code> branch I have all my asset folders <code>css</code>, <code>js</code>, and <code>img</code>. And in my <code>production</code> branch I added them to my <code>.gitignore</code> since I want to host those assets elsewhere.</p>

<pre><code>css/
img/
js/
</code></pre>

<p>so these folders aren't visible in the <code>production</code> branch anymore. Is there anyway to restore the <code>img</code> folder in the <code>production</code> branch? I tried removing <code>img/</code> from my <code>.gitignore</code> and committing but it won't list on my untracked files.</p>
","0","1099531","",""
"32208246","2132930","2015-08-25 15:35:58","2","525","<java><eclipse><git><gitignore><gradle-eclipse>","Chinese characters in gitignore","<p>I am using git for bunch of my java projects. I want to ignore .classpath, bin, .gradle and bunch of other files and folders.</p>

<p>I cannot access this files / folders in eclipse to ignore them from eclipse. Hence I decided to edit the .gitignore file. The file contains random chinese characters.</p>

<p>I still went ahead and updated the .gitignore file with the required file list. However, when I ignore any other file from eclipse, the .gitignore is again appended with chinese characters.</p>

<p>Is this expected behavior? How do I add files like .classpath, bin and others to gitignore?</p>
","1","2132930","",""
"60102292","12521098","2020-02-06 19:33:26","0","64","<git><github><gitignore>","How to remove a file in the github repository to add the file to .gitignore?","<p>I added a <code>yarn-error.log</code> file to my github repository and tried to add it to <code>.gitignore</code> but it remains in the repository ... How do I uncommit this</p>
","1","12521098","",""
"41395221","4023065","2016-12-30 11:04:52","1","887","<asp.net-mvc><git><umbraco><gitignore>",".gitignore for umbraco, including user-specific data","<p>Using visual studio and the <a href=""https://www.nuget.org/packages/UmbracoCms/"" rel=""nofollow noreferrer"">Umbraco NuGet package</a>, I'd like to setup a basic Umbraco installation containing:</p>

<ul>
<li>some umbraco packages, such as <a href=""https://our.umbraco.org/projects/developer-tools/optimus/"" rel=""nofollow noreferrer"">Optimus</a></li>
<li>some individual document types</li>
</ul>

<p>This should be wrapped by a git repo.</p>

<p>Where possible, I'd like to <strong>exclude generated/compiled files</strong> by adding the affected paths/file extensions to the <code>.gitignore</code> file.</p>

<p>I started off using the official <a href=""https://github.com/github/gitignore/blob/master/Umbraco.gitignore"" rel=""nofollow noreferrer"">umbraco .gitignore</a> which has the following entries:</p>

<pre><code># Note: VisualStudio gitignore rules may also be relevant

# Umbraco
# Ignore unimportant folders generated by Umbraco
**/App_Data/Logs/
**/App_Data/[Pp]review/
**/App_Data/TEMP/
**/App_Data/NuGetBackup/

# Ignore Umbraco content cache file
**/App_Data/umbraco.config

# Don't ignore Umbraco packages (VisualStudio.gitignore mistakes this for a NuGet packages folder)
# Make sure to include details from VisualStudio.gitignore BEFORE this
!**/App_Data/[Pp]ackages/
!**/[Uu]mbraco/[Dd]eveloper/[Pp]ackages

# ImageProcessor DiskCache 
**/App_Data/cache/
</code></pre>

<p>However, this would not include the database nor installed packages, so I also added the following entries*:</p>

<pre><code>!**/Aa]pp_[Dd]ata/packages
!**/Aa]pp_[Dd]ata/Umbraco.sdf
!**/[Bb]in/*.pdb
!**/[Uu]mbraco/[Cc]onfig
</code></pre>

<ul>
<li><em>see discussion <a href=""https://our.umbraco.org/forum/using-umbraco-and-getting-started/78957-what-should-i-commit-in-the-umbraco-folder"" rel=""nofollow noreferrer"">here</a></em></li>
</ul>

<p>Using this configuration, ReSharper would list 3 errors which occur in the global web.config file:</p>

<pre><code>my-umbraco-project\Web.config:87 Cannot resolve symbol 'Providers'
my-umbraco-project\Web.config:87 Cannot resolve symbol 'DefaultSessionStateProvider'
my-umbraco-project\Web.config:87 Invalid module qualification: Failed to resolve assembly System.Web.Providers
</code></pre>

<p>However, I can compile, log-in to my umbraco instance and even the pre-installed plugin would appear.</p>

<p>This basically leaves 2 questions:</p>

<ul>
<li>What do I additionally have to include in order to fix the 3 errors?</li>
<li>Are there more compiled/generated files I could exclude?</li>
</ul>
","0","4023065","0","0"
"60109167","9434607","2020-02-07 07:50:31","3","4582","<git><gitignore>","How to hide .gitignore file itself","<p>I'm new to git. I can hide several files or folders by adding their names or extensions onto the .gitignore file. </p>

<p>However, other people might see what files/folders I have ignored. I don't know is there a way or setting to make ""only you can see the .gitignore file"" on Github without making the repository private. </p>

<p>Is there any way to hide .gitignore file from other people but myself (or repo collaborator) ? </p>
","3","9434607","0","0"
"3779415","138830","2010-09-23 14:26:36","1","413","<git><gitignore>","git clean -X behaviour when .gitignore has sub-directory entries","<p>When using sub-directory entries in .gitignore, ""git clean -X"" doesn't clean the ignored sub-directory.</p>

<pre><code>$ git init test
Initialized empty Git repository in /home/jpgariep/git/test/.git/
$ cd test/
$ mkdir -p a/b/c
$ touch a/b/c/test
$ echo '/a/b/' &gt; .gitignore
$ git add .gitignore
$ git commit -m ""Added .gitignore.""
[master (root-commit) 94e2825] Added .gitignore.
 1 files changed, 1 insertions(+), 0 deletions(-)
 create mode 100644 .gitignore
$ git status
# On branch master
nothing to commit (working directory clean)
$ git clean -X -d -f
$ ls a
b
</code></pre>

<p>Why is b still there?</p>

<p>Git version: 1.7.2.3</p>

<p>NOTE: This was also posted on the git mailing list 2 months ago without answer.</p>
","5","138830","0","0"
"32228841","1654520","2015-08-26 14:02:12","1","104","<git><github><gitignore>","github gitignore adds folder previously NOT on gitignore","<p>i have mistankenly added a folder on a github project that I don't want to be there anymore. I want/need it only in my local project.</p>

<p>so i've updated my .gitignore file adding the directory name, i've committed and pushed the changes but the folder is still on github.</p>

<p>i've another contributor to the project. what could it be? maybe he should update his gitignore too and commit something for this to be effective?</p>

<p>I did exactly the same thing on this same project with another mistankenly added file and it worked, the only difference is that now I have an extra contributor to the project.</p>
","4","1654520","",""
"3667986","248430","2010-09-08 13:02:32","25","5708","<git><windows-xp><gitignore>","git ignore exception not working as desired","<p>WinXP + mysisGit1.7</p>

<p>In my .gitignore file, but still can't see <code>Demos/path/to/file/file.cpp</code> being tracked by git. </p>

<p>I have below entries:</p>

<pre><code>Demos/
!Demos/path/to/file/file.cpp
</code></pre>

<p>The absolute path is: <code>c:\Project\Demos\path\to\file\file.cpp</code></p>

<p>What could be wrong? Please help, thanks.</p>

<p><br /></p>

<p><strong>EDIT:</strong></p>

<p>I found the way how mysisGit .gitignore work on WindowsXP can only ignore certain type of file, then exclude some files with same type. For example:</p>

<pre><code>*.bak
!tracking.bak
!/path/to/file/tracking2.bak
</code></pre>

<p>It doesn't work ignore folder and exclude some files under that folder. Below won't work:</p>

<pre><code>/folderUnderRepoRoot/
!/folderUnderRepoRoot/tracking.cpp
</code></pre>

<p>Nor</p>

<pre><code>anyFolderNamedLikeThis/
!anyFolderNamedLikeThis/tracking.cpp
!/anyFolderNamedLikeThis/tracking.cpp
</code></pre>

<p>However, I do find that there's an exception. There's a work-around way to exclude files just right under the ignored folder (not to its subfolder). <strong>This works.</strong></p>

<pre><code>/folderUnderRepoRoot/*
/folderUnderRepoRoot/tracking.cpp
</code></pre>

<p>But this way is only limited when the file is not in any subfolder, so it's not so useful.</p>

<p>So I end up still commit most of source files, even I was only interested in a few files while tracking some others big project. Which means there're a bunch of files I won't touch but still need to commit them.</p>

<p>Here is <a href=""https://stackoverflow.com/questions/2330471/gitignore-does-not-understand-my-folder-wildcard-on-windows"">another thread</a> that had similar problem.</p>
","3","248430","0","0"
"31726338","1696060","2015-07-30 14:20:39","0","149","<git><sublimetext><gitignore>","Sublime Text 3 displaying .gitignore as binary","<p>Has anyone encountered this issue where Sublime Text 3 displays your .gitignore as a binary file? If so, can you help me understand how/why this is happening, and how to fix this issue? Thank you.</p>

<p><a href=""https://i.stack.imgur.com/XhxBX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/XhxBX.png"" alt=""enter image description here""></a></p>
","6","1696060","",""
"60143485","1733478","2020-02-10 02:45:46","2","631","<git><gitignore><git-subtree>","How do I ""reverse"" a gitignore file pattern in a subtree subdirectory?","<p>I have a repo that contains a subtree that has some build and config files. </p>

<pre><code>main
├── .gitignore
└── build (subtree)
    ├── .gitignore
    └── config.user.json
    └── config.site.json
└── index.js
</code></pre>

<p>I would like to <strong>ignore</strong> the <code>config.user.json</code> from both the <code>main</code> repo and <code>build</code> subtree, but <strong>keep</strong> <code>config.site.json</code> in the main repo, but <strong>ignore</strong> it in the <code>build</code> subtree.</p>

<h3>main/.gitignore</h3>

<pre><code>!build/config.site.json # (this is supposed to reverse the ignore)
build/config.user.json
</code></pre>

<h3>build/.gitignore</h3>

<pre><code>build/config.site.json
build/config.user.json
</code></pre>

<p>Is this possible, or should I put my config files in a different folder that the <code>build</code>. I have a feeling that the .gitignore in the subtree will override the .gitignore in the main repo and not the other way around.</p>

<p>REF: <a href=""https://stackoverflow.com/questions/38923530/git-subtree-specific-ignoring"">Git Subtree Specific Ignoring</a></p>

<p>Cheers</p>
","2","1733478","0","0"
"3824110","165673","2010-09-29 17:10:27","1","3997","<git><gitignore>","Creating directory/file name rules for .gitignore","<p>I'd like to set up some rules in my .gitignore whereby any directory or file with a name containing ""_nogit"" will be ignored. </p>

<p>Examples:</p>

<ul>
<li>../videos_nogit/...</li>
<li>bigvideo_nogit.mp4</li>
<li>assets/_nogit/bigvideos...</li>
</ul>

<p>Thanks--</p>
","0","165673","",""
"67009208","15585344","2021-04-08 17:41:38","1","600","<reactjs><github><directory><filepath><gitignore>","Adding a particular file from a folder to .gitignore","<pre><code>src/
.gitignore
</code></pre>
<p>My directory looks like this. There is a keys.js file inside src folder. How do i add keys.js to .gitignore ? I have tried various paths but none of it is working</p>
","1","15585344","",""
"31857606","3705840","2015-08-06 13:50:23","6","8500","<matlab><simulink><gitignore>","What files should I add to the .gitignore when using MATLAB and Simulink?","<p>I would like to know what files I should add to the <code>.gitignore</code> file when I am using MATLAB and Simulink.</p>

<p>Should the files <code>slx.original</code> be added?</p>
","0","3705840","0","0"
"3833757","53305","2010-09-30 18:41:59","17","7699","<git><file><gitignore><delete-file>","How do I .gitignore and delete an already committed file without affecting other working copies?","<p>I have a bare repository and two working copies - one on my machine, the other on the server.<br>
It turned out that I have to <code>.gitignore</code> a certain file that has to be specific for every machine. Let's call it '<code>settings.py</code>'. This file is already committed.</p>

<p>I did put '<code>settings.py</code>' in .gitignore to ignore it. When I now change the file on my machine git status still tells me </p>

<pre><code>modified:  settings.py
</code></pre>

<p>I figured out that I have to remove settings.py like this:</p>

<pre><code>git rm --cached settings.py
</code></pre>

<p>Then <code>git add .</code>, followed by <code>git commit</code>.</p>

<p>But when I now push this to the bare repo and pull it to the working copy on the server, <code>settings.py</code> is deleted there - which is bad because I have to keep this specific <code>settings.py</code>.</p>

<p>I figured that I just could make a copy of <code>settings.py</code> and put it back in once it is deleted, but I feel like there has to be a better way of doing this.</p>
","0","53305","0","0"
"3837653","463148","2010-10-01 08:43:06","2","1998","<git><gitignore>","Removing a file from git index also removes the file from server","<p>I have a file named ""myfile.php"" on my server and in my computer.<br>
I want to remove myfile.php from git index in order to prevent changing myfile.php in server.I do this by adding the file to .gitignore and removing the file from index with ""git rm --chached myfile.php""<br>
Now when I run ""git pull"" it removes the file itself from working directory in server but I want to keep it on the server and just keeping it safe from changing.
What's the problem?</p>
","1","463148","",""
"22473888","2593633","2014-03-18 08:26:37","1","107","<git><apache-pig><gitignore>",".gitignore all directories that have a certain file","<p>Is there a way to exclude an entire directory from git if a certain file is present in there?</p>

<p>For instance, I have a lot of test cases which create new directories with an _SUCCESS file. I want to exclude any directory that has a _SUCCESS file. I do not care about what other files are in there.</p>
","1","2593633","0","0"
"41452855","7061990","2017-01-03 21:43:16","10","19033","<git><github><latex><gitignore>","Trying to use .gitignore file to ignore .log files","<p>I am writing in LaTeX and when you save a file in .tex it generate files that I don't want git to track.</p>

<p>The .tex file will make a .log, .aux, .synctex.gz file. I have successfully ignored the .aux and the .synctex.gz with this:</p>

<pre><code>.DS_Store
*.log
*.aux
*.synctex.gz
</code></pre>

<p>But the log file is still tracked. When I do a git add * it says:</p>

<pre><code>modified:   assets/latex/array/array.log
modified:   assets/latex/array/array.pdf
modified:   assets/latex/template.log
modified:   assets/latex/template.pdf
modified:   assets/latex/template.tex
</code></pre>

<p>Also, I have tried this:</p>

<pre><code>.DS_Store
assets/latex/array/array.aux
assets/latex/array/array.log
assets/latex/array/array.synctex.gz

assets/latex/else/else.aux
assets/latex/else/else.log
assets/latex/else/else.synctex.gz

assets/latex/elseif/elseif.aux
assets/latex/elseif/elseif.log
assets/latex/elseif/elseif.synctex.gz

assets/latex/for-loop/forloop.aux
assets/latex/for-loop/forloop.log
assets/latex/for-loop/forloop.synctex.gz

assets/latex/if/if.aux
assets/latex/if/if.log
assets/latex/if/if.synctex.gz

assets/latex/switch/switch.aux
assets/latex/switch/switch.log
assets/latex/switch/switch.synctex.gz

assets/latex/var/var.aux
assets/latex/var/var.log
assets/latex/var/var.synctex.gz

assets/latex/template.aux
assets/latex/template.log
assets/latex/template.synctex.gz
</code></pre>

<p>This also doesn't work.</p>
","2","7061990","0","0"
"67027528","15541731","2021-04-09 19:55:56","2","6643","<github><gitignore>","Add a gitignore file","<p>how can I create a gitignore file in a repository that already have a project in it? I started a project at the university and I forgot to add the gitignore file at the beginning.</p>
","4","15541731","",""
"67032779","14029057","2021-04-10 09:31:16","0","645","<django><git><gitignore>","In a django project, what all files am I supposed to add in .gitignore?","<p>I am making a Django website project. I decided to push it to my git repo but I am not sure what files I should add in .gitignore</p>
<p>I guess all the settings.py files are certainly not supposed to be committed to git. What other files should I ignore?</p>
","1","14029057","",""
"67060927","7636523","2021-04-12 15:11:16","0","367","<git><repository><bitbucket><gitignore>","How can I gitignore different files for different repos including pull requests?","<pre><code>      remote
   ______|______
  |             |
localA       localB
-file1       -file3
-file2       -file4
-file3       -file5
</code></pre>
<p>I want my remote repo to store files 1-5. I want the localA repo to only push/pull files 1-3. I want the localB repo to only push/pull files 3-5. So the goal is to have some files synched between the local repos and some files that are not, but the remote repo should store all of them. My .gitignore files work fine for committing, but then end up pulling down all the files I don't want it to. I've also tried using .git/info/exclude files but that didn't do it either. I'm in a position where I can start over from scratch if need be, but I'd prefer to configure the existing setup.</p>
<p>Edit for context:
This is a weird testing environment where users make changes in one area with their personal account but have to test them on a shared account in another area. I want their changes to be tracked under their individual account, not the shared account. I want the testing results tracked under the shared account, not their individual accounts.</p>
","2","7636523","",""
"31871433","1503224","2015-08-07 06:55:52","34","13471","<github><jekyll><gitignore>","Why put the _site-directory of a Jekyll site in .gitignore?","<p>The documentation of Jekyll tells me, that the _site-directory of a Jekyll site contains the compiled version of the site I have created after running </p>

<pre><code>Jekyll build
</code></pre>

<p>Several articles recommend, that I include the _site-directory in my .gitignore-file because ""it just contains the compiled version of my site"". (that's what some articles recommend. So, I am not sure if I don't understand some concept of Jekyll or some concept of Git.</p>

<p>If the _site-directory contains the compiled version of a site, shouldn't that be the thing that is on the server the provides the final website? I do understand why you put source code on github and what to do with it, but in the case of github pages, Github is not a versioning system but a file hosting system and the file hosting system should host compiled versions of my work to provide it via MyUsername.github.io to users, right?</p>

<p>My question is: shouldn't it be only the _site-directory of my Jekyll website that I deploy to Github because that should be the compiled source code that github provides to users? So, shouldn't I put anything else in the .gitignore-file EXCEPT the _site-directory?</p>

<p>If I got this all wrong: what is the point in compiling my website via</p>

<pre><code>Jekyll build
</code></pre>

<p>if I don't use the compiled source code for anything?</p>
","1","1503224","0","0"
"22614270","924954","2014-03-24 15:53:14","2","79","<git><gitignore>","gitignore is not ignoring one specific folder","<p>Using msysgit on windows:
git version 1.8.5.2.msysgit.0</p>

<p>I have a folder tree with hundreds of small projects like this:</p>

<pre><code>Root
|--Project1
    |--xx/xx/xx/xx/obj
|--Project2
    |--yy/yy/yy/yy/obj
|--Project3
    |--zz/zz/zz/zz/obj
</code></pre>

<p>I have the entry obj/ in my .gitignore file</p>

<p>One single obj folder is not being ignored and always appears in the untracked files list. I have tried commands such as:</p>

<pre><code>git rm -r --cached Project3\zz\zz\zz\zz\obj
</code></pre>

<p>but it just says pathspec did not match any files - of course it would as the files are not tracked in my git repository.. they're just in the local folder.</p>

<p>How can I ignore this folder?</p>
","3","924954","0","0"
"67071867","2331592","2021-04-13 09:06:36","0","25","<git><gitignore>","gitignore directories only if they contain a special sub directory","<p>I have a directory structure with a number of directories which I want to ignore but the names are not unique but can be distinguished by a certain sub directory.</p>
<p>eg:</p>
<pre><code> +-a
 | +-d
 |   +-y
 +-b
 | +-d                 &lt;
 |   +-x
 +-c
   +-e
   | +-a
   | | +-d             &lt;
   | |   +-x
   | +-x
   +-d                 &lt;
     +-x

</code></pre>
<p>I want to ignore all <code>d</code> directories (along with all content) that have an <code>x</code> subdir.
I do not want to ignore all <code>x</code> nor all <code>d</code> nor only <code>**/d/x</code></p>
","2","2331592","",""
"4021040","244118","2010-10-26 05:53:11","17","13743","<git><gitignore>",".gitignore wildcard not working? (""LIVE-* "" pattern doesn't match ""LIVE-vhost"" filename)","<p>Super quick one. Here is my .gitignore (at the root level of my repo</p>

<pre><code># Makefile stuff
LIVE-* 
.install-post-all
</code></pre>

<p>When I do this, The LIVE-* bit isn't working:</p>

<pre><code>$ git status
# On branch master
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   pm-h8/etc/apache2/conf.d/LIVE-vhost
nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p>What am I doing wrong?</p>
","0","244118","0","0"
"49557737","9298629","2018-03-29 13:45:22","60","15590","<android><android-studio><android-gradle-plugin><gitignore><android-studio-3.1>","Should I add .idea/caches/build_file_checksums.ser to .gitignore?","<p>I updated my Android Studio <a href=""https://developer.android.com/studio/releases/index.html"" rel=""nofollow noreferrer"">from 3.0.1 to 3.1</a>, and noticed an unfamiliar file in my existing project:</p>
<pre><code>.idea/caches/build_file_checksums.ser
</code></pre>
<p>It doesn't depend on whether you update the Android Gradle plugin to <a href=""https://developer.android.com/studio/releases/gradle-plugin.html#3-1-0"" rel=""nofollow noreferrer"">the latest 3.1.0</a>; once I opened an existing project in Android Studio 3.1, it automatically created the file <code>build_file_checksums.ser</code>, even if I kept the project to use the previous 3.0.1 plugin as follows.</p>
<pre><code>dependencies {
    classpath 'com.android.tools.build:gradle:3.0.1'
}
</code></pre>
<p>I also created a new project in Android Studio 3.1, and found that the file <code>build_file_checksums.ser</code> was created from the beginning.</p>
<p>At the time of writing, there seems to be no official documents on this. I would appreciate it if anyone could find it.</p>
<hr />
<h3>Edited:</h3>
<p>I <a href=""https://superuser.com/a/1107072/889304"">inspected</a> the content with <a href=""https://code.google.com/archive/p/jdeserialize/downloads"" rel=""nofollow noreferrer"">jdeserialize-1.2</a>, as <a href=""https://stackoverflow.com/users/6245697/"">Samuel</a> pointed out that it seems to include some system paths.</p>
<pre><code>$ java -jar ~/Downloads/jdeserialize-1.2.jar .idea/caches/build_file_checksums.ser 
read: com.android.tools.idea.gradle.project.ProjectBuildFileChecksums _h0x7e0002 = r_0x7e0000;  
//// BEGIN stream content output
com.android.tools.idea.gradle.project.ProjectBuildFileChecksums _h0x7e0002 = r_0x7e0000;  
//// END stream content output

//// BEGIN class declarations (excluding array classes)
class java.util.HashMap implements java.io.Serializable {
    float loadFactor;
    int threshold;
}

class com.android.tools.idea.gradle.project.ProjectBuildFileChecksums implements java.io.Serializable {
    long myLastGradleSyncTimestamp;
    java.util.Map myFileChecksums;
}

//// END class declarations

//// BEGIN instance dump
[instance 0x7e0004: 0x7e0003/java.util.HashMap
  object annotations:
    java.util.HashMap
        [blockdata 0x00: 8 bytes]
        [String 0x7e0005: &quot;settings.gradle&quot;]
        [array 0x7e0007 classdesc [cd 0x7e0006: name [B uid -5984413125824719648]: [arraycoll sz 16 -89, -2, 26, -61, -111, 105, -75, -27, 40, 90, 94, 83, 102, 47, 37, 27]
        [String 0x7e0008: &quot;build.gradle&quot;]
        [array 0x7e0009 classdesc [cd 0x7e0006: name [B uid -5984413125824719648]: [arraycoll sz 16 70, 101, -14, 32, 100, -60, -85, -103, 73, -86, 15, 54, -45, 125, 50, 39]
        [String 0x7e000a: &quot;local.properties&quot;]
        [array 0x7e000b classdesc [cd 0x7e0006: name [B uid -5984413125824719648]: [arraycoll sz 16 -107, 64, 60, -33, -18, 18, 56, -84, 15, 0, -86, -73, -27, 127, -94, 27]
        [String 0x7e000c: &quot;/Users/qtmfld/.gradle/gradle.properties&quot;]
        [array 0x7e000d classdesc [cd 0x7e0006: name [B uid -5984413125824719648]: [arraycoll sz 16 -44, 29, -116, -39, -113, 0, -78, 4, -23, -128, 9, -104, -20, -8, 66, 126]
        [String 0x7e000e: &quot;gradle.properties&quot;]
        [array 0x7e000f classdesc [cd 0x7e0006: name [B uid -5984413125824719648]: [arraycoll sz 16 16, -69, 118, 80, -49, -19, 41, -8, 56, -86, 64, -63, 112, -14, 98, 47]
        [String 0x7e0010: &quot;app/build.gradle&quot;]
        [array 0x7e0011 classdesc [cd 0x7e0006: name [B uid -5984413125824719648]: [arraycoll sz 16 -3, -11, 63, -26, 67, -41, -100, 33, 85, -59, -49, -3, -90, 53, -106, 94]

  field data:
    0x7e0003/java.util.HashMap:
        threshold: 12
        loadFactor: 0.75
]
[instance 0x7e0002: 0x7e0000/com.android.tools.idea.gradle.project.ProjectBuildFileChecksums
  field data:
    0x7e0000/com.android.tools.idea.gradle.project.ProjectBuildFileChecksums:
        myFileChecksums: r0x7e0004: java.util.HashMap _h0x7e0004 = r_0x7e0003;  
        myLastGradleSyncTimestamp: 1522297024540
]
//// END instance dump

$ 
</code></pre>
<p>You can see the following strings in <code>java.util.HashMap</code>.</p>
<ul>
<li>&quot;settings.gradle&quot;</li>
<li>&quot;build.gradle&quot;</li>
<li>&quot;local.properties&quot;</li>
<li>&quot;/Users/qtmfld/.gradle/gradle.properties&quot;</li>
<li>&quot;gradle.properties&quot;</li>
<li>&quot;app/build.gradle&quot;</li>
</ul>
<p><a href=""https://github.com/wh0"" rel=""nofollow noreferrer"">Wh0</a> has clarified the same result on Android Studio 3.2 Preview.<br />
<a href=""https://wh0.github.io/2018/02/17/build-file-checksums-ser.html"" rel=""nofollow noreferrer"">https://wh0.github.io/2018/02/17/build-file-checksums-ser.html</a></p>
","4","9298629","0","0"
"49567378","6143529","2018-03-30 01:47:28","6","1943","<gitignore><github-desktop>","what Git Ignore field means in github desktop while creating a new repository","<p>see the  Git Ignore option in the below image.What I have to choose, I am creating an ionic-framework repository.</p>

<p><a href=""https://i.stack.imgur.com/pBvkd.png"" rel=""noreferrer"">https://i.stack.imgur.com/pBvkd.png</a></p>
","1","6143529","0","0"
"41701677","7257971","2017-01-17 15:59:15","20","11708","<git><gitignore><git-status>","How to exclude unwanted folders content to be shown when I execute 'git status' command","<p>I'm trying to avoid showing unwanted folder's content (ex:- .settings, .metadata etc ) when i execute <code>git status</code> command.</p>
<p>I modified .gitignore file after adding the folder names to it but still I'm getting all these files when I execute git status.</p>
","0","7257971","0","0"
"4234207","499030","2010-11-20 18:13:04","17","7194","<git><vim><gitignore><temporary-files>","git creates files ending in ~?","<p>Just started using git on my mac. I have one file in my repository called <code>README</code>. When I change it, git puts another file in the directory called <code>README~</code> containing the previous version.</p>

<ol>
<li>Is it git doing this?</li>
<li>Why is git doing this?</li>
<li>How can I stop git doing this? (don't just want to add it to <code>.gitignore</code>, but I guess I could do that but I'd rather understand why I'm getting these files in the first place..)</li>
</ol>

<p>(It's hard to search for an answer on Google cos of trying to search on ""~"")</p>
","1","499030","",""
"4250063","294619","2010-11-22 20:42:08","1089","614035","<git><gitignore>","How to .gitignore all files/folder in a folder, but not the folder itself?","<p>I want to check in a blank folder to my Git repository. Effectively, I need to ignore all of the files and folders within the folder, but not the folder itself. How can I do this? What should I put in my <code>.gitignore</code> file?</p>
<p>For those wondering why I would want to do this, I have an &quot;upload&quot; directory in my repository. I want to commit the blank directory, but without all the contents.</p>
","6","294619","0","0"
"49593141","2541276","2018-03-31 22:46:01","0","1351","<rust><gitignore>","How to ignore Rust executable files in .gitignore?","<p>I'm learning Rust and doing small exercises following the tutorial.</p>

<p>When I compile and build using <code>rustc</code>, it generates an executable file.</p>

<p>I want to add only the <code>.rs</code> file under the project/chapter1, chapter2, etc. directories and ignore the executables generated by the <code>rustc</code> command.</p>

<p>I don't know how to do that because the executables generated by Rust do not have any extension.</p>

<p>How can I ignore these executables using .gitignore?</p>
","4","2541276","",""
"67127041","15309170","2021-04-16 14:25:02","3","251","<git><directory><gitignore><rsync>","Using .gitignore with rsync not working correctly","<p>I am trying to use my current .gitignore with rsync, and I've come up with this command:</p>
<p><code>rsync -avz --filter=':- opensource/.gitignore' opensource/ testing</code></p>
<p>But if I have a folder on my source that IS NOT in .gitignore and I delete it on the source, in the destination it doesn't get deleted. For some reason, if I add that folder to .gitignore and use <code>rsync -avz --delete-after --filter=':- opensource/.gitignore' opensource/ testing</code> the folder still gets deleted on the destination, even tho it should be ignored.</p>
<p>Am I using this correctly? My objective is to simulate a <code>git pull</code> using rsync.</p>
","0","15309170","0","0"
"67135290","373266","2021-04-17 06:19:57","0","199","<git><gitignore>","How could I make .gitignore exclude works to ignore everthing in /AppData but still index my /AppData/Roaming/doublecmd/doublecmd.xml?","<p>Problem context: I'm using Windows but plan to version control my home folder  with git, in Windows's user folder there is <code>AppData</code> folder and my Double Commander application's setting is in it, so I need to :</p>
<ol>
<li>ignore everythig in <code>%USERPROFILE%</code> folder except some setting</li>
<li>ignore everything in <code>USERPROFILE%\AppData</code> folder except <code>/AppData/Roaming/doublecmd/doublecmd.xml</code></li>
</ol>
<p>After reading <a href=""http://git-scm.com/docs/gitignore"" rel=""nofollow noreferrer"">git manual</a> , I've tried to save my <code>.gitignore</code> as:</p>
<pre><code>/*
!.minttyrc
!/AppData
/AppData/*
!/AppData/Roaming/doublecmd/doublecmd.xml
</code></pre>
<p>tried with more detailed, failed also.</p>
<pre><code>/*
!.minttyrc
!/AppData
/AppData/*
!/AppData/Roaming
/Appdata/Roaming/*
!/AppData/Roaming/doublecmd/doublecmd.xml
</code></pre>
<p>How could I make <code>.gitignore</code> exclude works to ignore everthing in <code>/AppData</code> but still index my <code>/AppData/Roaming/doublecmd/doublecmd.xml</code>?</p>
<p><a href=""http://git-scm.com/docs/gitignore"" rel=""nofollow noreferrer"">git manual</a></p>
<blockquote>
<p>Example to exclude everything except a specific directory <code>foo/bar</code> (note the <code>/*</code> - without the slash, the wildcard would also exclude everything within <code>foo/bar</code>):</p>
</blockquote>
<pre><code>$ cat .gitignore
# exclude everything except directory foo/bar
/*
!/foo
/foo/*
!/foo/bar
</code></pre>
","3","373266","",""
"67138825","8225336","2021-04-17 13:44:28","0","206","<git><gitignore><gitattributes>",".gitignore all binary files declared by .gitattributes","<p>What if <code>.gitignore</code> let's you define a pattern basically saying <code>ignore all files considered as binary files</code>? I mean without adding each pattern, because that are too many lines, but instead something like <code>binary</code>, similar to what <code>.gitattributes</code> let's you define.</p>
<p>Basically I would like:</p>
<ul>
<li>ignore all files by default, which are considered as <code>binary</code> as auto-detected by git and as specified by <code>.gitattributes</code></li>
<li>allow specific binary files only, by allowing them explicitely with <code>.gitignore</code> as usual</li>
</ul>
<p>I did not yet found any hint that something like this is possible. Does somebody knows more?</p>
","1","8225336","",""
"4621072","62076","2011-01-06 23:22:12","276","238859","<git><gitignore>","git ignore all files of a certain type, except those in a specific subfolder","<p>I have a directory structure like this:</p>
<ul>
<li>root
<ul>
<li>folder1
<ul>
<li>abc.json</li>
<li>def.json</li>
<li>somedir
<ul>
<li>more.json</li>
</ul>
</li>
</ul>
</li>
<li>folder2
<ul>
<li>qwe.json</li>
<li>rty.json</li>
</ul>
</li>
<li>spec
<ul>
<li>mock1.json</li>
<li>mock2.json</li>
<li>somedir
<ul>
<li>more_mocks.json</li>
</ul>
</li>
</ul>
</li>
</ul>
</li>
</ul>
<p>Now using a <code>.gitignore</code> I want to ignore all <code>*.json</code> files except for the ones in the <code>spec</code>.  I don't want to use a <code>.gitignore</code> in <code>folder1</code> and <code>folder2</code> because there are a ton of these and they will get added to a lot, and I'm sure I will forget to move the right <code>.gitignore</code> file in place.</p>
<p>In addition, there may be more nested directories with JSON files, and this rule needs to apply to all subdirectories as well.</p>
<p>So how do I ignore all files of a type, except for a certain subdirectory?</p>
","0","62076","0","0"
"49638204","6944197","2018-04-03 19:59:03","26","36664","<git><github><gitignore>","The following paths are ignored by one of your .gitignore files","<p>I tried to add a folder <code>iceberg/static/icon</code> into my repo but this fails with error:</p>

<pre><code>shen-3:New Platform shen$ git add iceberg/static/icon
The following paths are ignored by one of your .gitignore files:
iceberg/static/icon
</code></pre>

<p>This is my .gitignore. I am really confused that I don't understand which item matches my file.</p>

<pre><code>hello/
deploy_server/
gunicorn_start
Vida.env/

# IDE conf
.idea/
.vscode/

# Byte-compiled / optimized / DLL files
__pycache__/
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
env/
build/
develop-eggs/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
*.egg-info/
.installed.cfg
*.egg

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
.hypothesis/

# Translations
*.mo
*.pot

# Django stuff:
*.log
staticfiles/
local_settings.py
migrations/

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# pyenv
.python-version

# celery beat schedule file
celerybeat-schedule

# SageMath parsed files
*.sage.py

# dotenv
.env

# virtualenv
.venv
venv/
ENV/

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
</code></pre>

<p>Is there any other reason this happens? </p>

<p>Any insight into why my folder isn't being added would be appreciated! :)
Thank you! </p>

<p>Full url you want <code>/Users/shen/Desktop/New Platform/iceberg/static/icon</code></p>
","8","6944197","0","0"
"42468687","1492613","2017-02-26 12:46:06","1","754","<git><gitignore>","how can I use git to track folder structure?","<p>I try to use .gitkeep but no matter what I tried it just does not work.</p>

<p>For example I had a folder structure like this:</p>

<pre><code>.
├── a
│   ├── aa
│   │   ├── aaa
│   │   │   ├── .gitkeep
│   │   │   └── test.txt
│   │   ├── .gitkeep
│   │   └── test.txt
│   ├── .gitkeep
│   └── test.txt
├── b
│   ├── bb
│   │   ├── bbb
│   │   │   └── test.txt
│   │   ├── .gitkeep
│   │   └── test.txt
│   └── test.txt
└── .gitignore
</code></pre>

<p>I had the .gitignore like this:</p>

<pre><code>*
!a/.gitkeep
!*/.gitkeep
!**/.gitkeep
!.gitignore
</code></pre>

<p>The idea is to keep all the folders with .gitkeep. Surprisingly, no folders will be tracked with this config.</p>

<p>Can anyone tell me why this does not not work? </p>
","1","1492613","0","0"
"67182789","14210992","2021-04-20 16:27:08","0","1382","<git><directory><gitignore>","How to exclude folder .gitignore","<p>How can i exclude everything but only specific directory to publish git by using .gitignore</p>
<h2>For example my root tree</h2>
<pre><code>-node_modules
-js
-ts
-releases 
-package.json
</code></pre>
<p>I want to only add releases folder and all contents to my git branch.</p>
<h3>What I tried</h3>
<pre><code>*
!releases
</code></pre>
<pre><code>*
!releases/
</code></pre>
","1","14210992","",""
"49666863","2606292","2018-04-05 07:46:18","1","92","<git><bitbucket><gitignore>","Track files when parent folder is ignored in .gitignore","<p>So I have /vendor in gitignore and want to exclude some files in subfolders but it won't work, they are still being ignored. Checked git documentation, some threads here and still no luck, any idea what I'm missing?</p>

<p>This is what I got:</p>

<pre><code>vendor
!vendor/laravel/framework/src/Illuminate/Auth/Passwords/PasswordBroker.php
!vendor/laravel/framework/src/Illuminate/Foundation/Auth/ResetsPasswords.php
</code></pre>
","2","2606292","",""
"49708593","8310423","2018-04-07 14:52:02","3","750","<c++><git><github><gitignore><openframeworks>","gitignore pattern to include all directories with a specific sub directory","<p>I am trying to setup a .gitignore file for openFrameworks. I have a folder that contain project folders - each one has a src directory. I would like to include the folder itself and the src directory only for every project.</p>

<p>Here is my current .gitignore file</p>

<pre><code># ignore these files
# ignoring everything except spec items
*

# allow these files
!.gitignore
!/README.md
!/*/src
</code></pre>

<p>Any help would be greatly appreciated. Ideally I would like the committed folder structure to look something like this:</p>

<pre><code>.
├── project_1
│   └── src
│       └── file.cpp
├── project_2
│   └── src
│       └── file.cpp
└── project_3
    └── src
        └── file.cpp
</code></pre>

<p>What am I missing? Thank you.</p>
","0","8310423","0","0"
"49710951","1072655","2018-04-07 19:03:50","1","646","<ruby-on-rails><ruby><git><gitignore><git-clean>","git clean deletes files in gitignore, db/production.sqlite3 is lost","<p>I was trying to remove an untracked file from a branch that I deleted, and instead I accidentally deleted untracked and tracked files... including apparently the dev and production databases!!!</p>

<p>What should I do?  <code>git clone</code> and start over from last commit?</p>

<pre><code>Thomass-MacBook-Pro:livebytransit tomb$ git status
On branch master
Your branch is up-to-date with 'origin/master'.

Untracked files:
  (use ""git add &lt;file&gt;..."" to include in what will be committed)

    app/assets/javascripts/.txt
    app/assets/javascripts/shared/

nothing added to commit but untracked files present (use ""git add"" to track)
Thomass-MacBook-Pro:livebytransit tomb$ git clean -n
Would remove app/assets/javascripts/.txt
Thomass-MacBook-Pro:livebytransit tomb$ git clean -fx
Removing app/assets/javascripts/.txt
Removing db/development.sqlite3
Removing db/production.sqlite3
Removing log/development.log
Removing log/production.log
</code></pre>
","4","1072655","",""
"49717051","9614741","2018-04-08 10:46:36","5","1313","<git><gitignore><modelica><openmodelica>","Exclude directories in .gitignore which contain a particular file","<p>When a package, e.g., <code>Examples</code>, is deleted in <a href=""https://openmodelica.org/"" rel=""nofollow noreferrer"">OpenModelica</a>, the underlying directory is not removed. Instead, directory <code>Examples</code> contains a file named <code>package.bak-mo</code> to indicate that the directory is not used any more. So a backup is kept. If a file <code>package.bak-mo</code> exists in a folder, this folder plus its files shall be excluded from the git commit process.  </p>

<pre><code>├── Sub1
│   └── package.mo
│   └── package.order
│   └── Examples
│       └── package.bak-mo
│       └── otherfile.mo
│       └── package.order
├── Sub2
│   └── package.mo
│   └── package.order
│   └── Demo
│       └── otherfile.mo
│       └── package.mo
│       └── package.order
</code></pre>

<p>In this example the following directory plus files shall be excluded from git commit:</p>

<pre><code>│   └── Examples
│       └── package.bak-mo
│       └── otherfile.mo
│       └── package.order
</code></pre>

<p>All other files and directories shall still be included in a possible git commit.</p>

<p><strong>Note</strong>: This issue is triggered by <a href=""https://trac.openmodelica.org/OpenModelica/ticket/4854"" rel=""nofollow noreferrer"">https://trac.openmodelica.org/OpenModelica/ticket/4854</a></p>

<p>I could not figure out how to make this working. Any ideas here? </p>
","6","9614741","",""
"49736282","9397537","2018-04-09 15:13:16","1","516","<git><gitignore>","How to gitignore a file on remote branch git","<p>I have a branch where I have a file called keys.py.
The file contains some private keys I do not want to share with other on my repository, but I'd like to leave a file called keys.py inside the repo to be used like a template. I also need to avoid tracking other people's changes to key.py.</p>

<p>I tried to push the template file keys.py and then I created a .gitignore file to ignore keys.py but it seems like it has no effect...</p>

<p>I am missing something but i can not figure out how to solve my problem... any hint?</p>
","1","9397537","",""
"68461707","16031161","2021-07-20 21:45:44","1","489","<swift><xcode><git><github><gitignore>",".gitignore file does not seem to work and still shows the Xcode files","<p>My app uses a NASA API to get images from the mars rover. The file where I keep the api key is called Constrant.swift. I tried to hide this file by creating a .gitingore file. I typed Constrant.swift into the .gitignore file and then pressed save and pushed all of the files to GitHub. The problem that I am having is that when I pushed all of the files the Constrant.swift was all pushed and was not ignored. The api key is not that important, but I would still like to know what I did wrong and how to fix it.</p>
<p>The link to the repository is <a href=""https://github.com/Stanley-Moukhametzianov/Swiftui-NASA-Mars-Rover-Images-App"" rel=""nofollow noreferrer"">here</a>. As you can see the .gitignore file is still there and has Constrant.swift. However, when you press nasaAPI, the Constrant.swift file is still there. Also I created the .gitignore file before I added the Constrant.swift file. How would I remove this file from GitHub and hide it in the .gitignore file?</p>
","0","16031161","",""
"14863968","841626","2013-02-13 21:59:39","1","522","<git><version-control><gitignore><git-pull>","prevent git from overriding tracked ignored files during a pull","<p>So there is a file that is already tracked by git call it file.php...This is in a collaborative environment</p>

<p>I made changes to that file that I don't want to have it committed but I want the changes to stay in my local environment so I did this</p>

<pre><code>1. git update-index --assume-unchanged file.php
2. Added file.php to gitignore
</code></pre>

<p>And the changes to the file won't get committed, etc, which is working fine</p>

<p>The problem is...whenever I do a <code>git pull origin master</code>, the pull always attempts to override that file</p>

<p>I tried doing <code>git rm --cached file.php</code> but that will untrack the file and requires a commit and I don't want to affect the central repository when ignoring this..</p>

<p>How do I get git to ignore a tracked file during a pull?</p>
","2","841626","",""
"68481082","14090028","2021-07-22 07:51:20","1","340","<github><version-control><gitignore>",".gitignore will not ignore folders","<p>I am pulling my hair out over this, I have a .gitignore file I coded up in vscode to ignore a venv and a few other things and literally nothing works. It works fine for Background.mp4 and Music.mp4, but for the life of me, I can't seem to get it to ignore the rest. Would really appreciate some answers.</p>
<p>Also, just a side note, I do not run git on my computer. Instead, I use GitHub desktop, because I find it a ton less convoluted, if that affects the answers somehow</p>
<p><a href=""https://i.stack.imgur.com/VxQXR.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/VxQXR.png"" alt="".gitignore"" /></a><a href=""https://i.stack.imgur.com/tGl3a.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/tGl3a.png"" alt=""github repo"" /></a></p>
<p>.__pycache__ is in a different folder but still will not be ignored)</p>
","0","14090028","",""
"50151449","6155053","2018-05-03 09:24:59","1","87","<version-control><gitignore><git-svn><ignore>","Exclude .git* files from git-svn dcommit","<p>I've just started using <code>git-svn</code> to allow for more fine-grained branching and committing than I'd be able to use with the remote, controlled-by-another-company svn repo we're working in.</p>

<p>I've now set up my <code>.gitignore</code> and <code>.gitattributes</code> files for the branch, in my workspace, and I would prefer to be able to submit (and thus track) them in my local git repo. However, when <code>dcommit</code>ting my changes -/hardback to svn, those files must not be submitted back into the svn repo.<br>
I can't just ignore the folder they're in either, however, because of course they're in the root of the workspace.</p>

<p>Does anyone have a solution? (apart from ignoring them in the git-svn branch, sym-/hardlinking them in from another location and adding them to a git repo there--it's overcomplicated and they're not in their corresponding branch anymore then, so I'd rather try to find a different solution in that case). </p>
","3","6155053","0","0"
"68492210","11151389","2021-07-22 22:39:24","0","22","<git><gitignore><gitkraken>","Why doesn't my .gitignore file work in gitkraken?","<p>When I was testing my repo, I run npm run build, and it generates a ton of files, so suddenly my gitkraken has a lot of unstaged files, and it makes Gitkraken so laggy that I even stuck at opening repo.</p>
<p>I find a way to resolve it, but right now it still has a lot of unstaged files. Here's my .gitignore file and how Gitkraken looks like.</p>
<pre><code>node_modules/
client/node_modules
</code></pre>
<p><a href=""https://i.stack.imgur.com/vjwJC.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/vjwJC.png"" alt=""enter image description here"" /></a></p>
<p>As you can see I even used <code>**/</code>, but it didn't work, but when I pushed my file to travisCI, it built without <code>node_modules</code>, so I am really confused here.</p>
","3","11151389","",""
"32335459","4496006","2015-09-01 15:26:16","32","27174","<git><gitignore>","git ignore filenames which contain <pattern to ignore>","<p>I am trying to tell git to ignore files which have <code>_autosave</code> somewhere in the filename.  An example of such a file is:</p>
<p><code>hats/TFCB_ATV_TOP_HAT/_autosave-TFCB_ATV_HAT.kicad_pcb</code></p>
<p>In a regular expression, I would simply use the pattern <code>^.*_autosave.*</code></p>
<p>Of course, git doesn't use regular expressions to evaluate its .gitignore file.  I did some reading and had the impression that <code>*_autosave*</code> would work, but it doesn't.</p>
<p>What is the correct syntax to tell git to ignore these files?</p>
","1","4496006","0","0"
"32338651","5021893","2015-09-01 18:33:01","2","53","<git><github><gitignore>","What are the difference between these 3 .gitignore entries?","<p>Here are the 3</p>

<pre><code>/some_string
some_string
some_string/
</code></pre>

<p>I believe the second one refers to a file and the third one refers to a folder, but what about the first one?</p>
","1","5021893","",""
"32340577","495557","2015-09-01 20:44:34","0","1572","<git><gitignore>","git ignore all folder except a few with a common prefix","<p>I want to ignore all files and folders except five folders that begin with a certain prefix. For example</p>

<ol>
<li>Folder one</li>
<li>Folder two</li>
<li>prefix_folder_one</li>
<li>prefix_folder_two</li>
</ol>

<p>I want to ignore everything except folders 3 and 4 and their content</p>

<p>I tried this but it didn't work</p>

<pre><code>*
!.gitignore
!/prefix_*
</code></pre>

<p>I also tried writing the full names of folder 3 and 4 but it didn't work either. <code>git status</code> tells me that there are no files to commit. </p>
","0","495557","0","0"
"50169629","4143116","2018-05-04 07:36:54","0","173","<git><gitignore>",".gitignore check part name to folder to ignore all file and subfolder","<p>this is a question:
the path of folder is:</p>

<pre><code>/program/example_data/code
/program/example1_data/code
/program/example2_data/code
/program/example3_data/bin
</code></pre>

<p>Goal -> Ignore all subfolder and file in _data. Check a part of name (_data)
I add to file .ignore this istruction</p>

<pre><code>**/*_data/
</code></pre>

<p>But not work. It is possible check a part of name ?
Thanks you</p>
","3","4143116","",""
"32347579","4498329","2015-09-02 07:56:40","4","793","<git><gitignore>","How to find a complete list of untracked (and non-ignored) files within a git repository?","<p>Under a specific <strong><em><code>&lt;directory&gt;</code></em></strong> (within a git repository),<br>
I want a complete list of files that are:</p>

<ul>
<li>untracked by git</li>
<li>but <strong>not</strong> ignored by git (using <code>.gitignore</code>).</li>
</ul>

<p>Is there an easy way to do this?</p>

<p><em>Note that while <code>git status</code> does list untracked files that are <strong>not</strong> ignored,<br>
it fails to list the actual files within any untracked sub-directories within the git repository.</em></p>
","3","4498329","",""
"32350113","2565518","2015-09-02 09:58:36","1","1752","<git><visual-studio-2013><gitignore>","git source control provider gitignore and ms-persist.xml issue","<p>When i create a project and use git source control provider and then exclude some paths/files it creates a file ms-persist.xml in the .git directory to keep record of these actions.</p>

<p>I do not see any information from these dir/file excludes in my gitignore.</p>

<p>The problem is that when i push to the git repository the ms-persist.xml which is placed in the .git directory by visual studio does not get pushed.
Meaning when somebody else clones the project and opens the visual studio source control he has to re-select all directories and exclude them.</p>

<p>Is there a way to make this work with the gitignore file, or re-locate the ms-persist.xml so it comes with the project when cloned ?</p>
","2","2565518","",""
"32351299","2270253","2015-09-02 10:57:41","1","275","<git><gitignore>","difference between git --assume-unchanged, git rm -r --cached and --skip-worktree","<p>Well, question is quite clear. In which scenario should I use  <strong>git --assume-unchanged</strong> or in what situation <strong>git rm -r --cached</strong> should be used?</p>

<p>Also, <strong>--skip-worktree</strong> is increasing the confusion.</p>

<p>Which is better to use with <strong>.gitignore</strong>?</p>

<p>Goal is to keep config files from getting pushed to github repo because there are often different settings on different deployment machines. Therefore, each machine would have their own config files.</p>
","0","2270253","",""
"32351898","1816644","2015-09-02 11:28:00","1","901","<git><gitignore>","git check-ignore */** not listing folders","<p><em>This question was changed, since the error description was wrong! Thanks to help from @Tim and @Jubobs</em></p>

<p>I have entire folders in my .gitignore file, but when I use</p>

<pre><code>git check-ignore */** 
</code></pre>

<p>When they are deeper in the folder structure, they are not showing up. Is there a way around this?</p>

<p>example folder structure:</p>

<p>repo:</p>

<pre><code>repo/.git
repo/.gitignore
repo/hello/__world/test.txt
</code></pre>

<p>In .gitignore:</p>

<pre><code>**/__world/**
</code></pre>

<p>When I now call <code>git check-ignore */**</code> in the root directory nothing will show up, when I <code>cd</code> into the <code>hello</code> directory, <code>hello/__folder/text.txt</code> shows up!</p>

<p>When I call</p>

<pre><code>git check-ignore */**/**
</code></pre>

<p>I can actually see the file. </p>

<p><strong>Is there an 'infinite' recursion for this? (So I can find files even in deeper folders)</strong></p>
","6","1816644","0","0"
"50180932","6168675","2018-05-04 18:14:27","-3","241","<git><gitignore>","I want to ignore a SPECIFIC file in .gitignore that starts with a dot (.)","<p>I searched unsuccesfully for this answer.  Given a file name "".foo"", I want it to be ignored by Git.</p>

<pre><code># My git ignore 

# ignore .foo, I only want .bar
.foo
</code></pre>

<p>Git ignores me instead of the file. :)</p>
","1","6168675","",""
"68522284","9707286","2021-07-25 20:28:51","4","1444","<git><wildcard><gitignore>",".gitignore and using partial file or folder matching","<p>I am using my .gitignore and various wildcards to only push to a repo (shared with others) particular folders or subfolders.  Some of those .gitignore statements involve doing a general ignore and excepting from that ignore certain other folders.  For example.</p>
<p>Solved/   #this prevents any folders named Solved from being pushed
Activities/   #this prevents any folders named Activities from being pushed
!01-Excel/Activities #this allows Activities folders under this directory to be pushed despite the line above.
!01-*/**/Activities  #this permits any folders which begin with &quot;01-&quot; and have a subfolder that has a folder named Activities to be pushed, despite the line above.</p>
<p>Here is my question.</p>
<p>How to use wildcards in .gitignore to permit any folder which has a particular string somewhere it is name to be pushed.</p>
<p>I have a folder like this:</p>
<pre><code>01-Excel/Activities/01-Ins_codeStart/Solved/
02-Excel/Activities/02-Stu_codeProgress/Solved/
</code></pre>
<p>I would like the git ignore to work such that the Solved folders under any directory with the string &quot;Ins&quot; anywhere in it are pushed, while the Solved folders under any other directory are not.</p>
<p>Here is what I have tried:</p>
<pre><code>!01-Excel/Activities/*-Ins*/Solved
!01-Excel/Activities//**-Ins*/Solved
!01-Excel/Activities//??-Ins*/Solved
</code></pre>
<p>None of those work to enable pushing of the Solved folder under directories with &quot;Ins&quot; somewhere in their name.</p>
<p>I recognize this is sort of way in the weeds, but the ability to achieve this would be a huge time saver in my circumstance.  Thanks.</p>
","0","9707286","0","0"
"50197130","7876925","2018-05-06 07:09:52","2","967","<git><gitignore>","Why is my configuration file being checked in despite my .gitignore?","<p>My .gitignore has the following:</p>

<pre><code>./config.json
</code></pre>

<p>But my config.json is still being committed when I make changes.</p>

<p>Why is this happening?</p>
","3","7876925","",""
"14962451","1926577","2013-02-19 16:28:05","16","33631","<git><node.js><github><npm><gitignore>","Suitable `.gitignore` For Node.js","<h2>Tree structure</h2>

<p>That's how my Node.js project is organized:</p>

<pre><code>/
| - node_modules               [+ INCLUDE]
|   | - my-mod1
|   |   | - node_modules       [- IGNORE]
|   |   |   | - external-mod1 
|   |   |   | - external-mod2 
|   |   | - src
|   |   |   | - node_modules   [+ INCLUDE]
|   |   |   |   | - my-mod2 
|   |   |   |   | - my-mod3
|   | - my-mod4
</code></pre>

<h2>My plan</h2>

<p>When publishing my project to GitHub:</p>

<ul>
<li>I <strong>want</strong> to include <strong><code>my-mod</code>s</strong>.</li>
<li>I <strong>don't want</strong> to include the
<strong><code>external-mod</code>s</strong>.</li>
</ul>

<p>That means:</p>

<ul>
<li>I <strong>want</strong> to include the top-level <code>/node_modules</code> folder.</li>
<li>I <strong>don't want</strong> to include <code>node_modules</code> folders which are <strong>direct childs</strong> of a module folder.</li>
<li>But I <strong>want</strong> to include <code>node_moduels</code> folders which are <strong>childs of a <code>src</code></strong> folder.</li>
</ul>

<h2>What I did</h2>

<p>I added the following lines to <code>/.gitignore</code>:</p>

<pre><code>#################  
## npm
#################

npm-debug.log
node_modules/
!/node_modules/
!src/node_modules/
</code></pre>

<h2>My question</h2>

<p>Which <strong><code>.gitignore</code> rules</strong> do I need <strong>to include the right <code>node_modules</code></strong> folders (as described above)?</p>

<p>Thanks - if anything's unclear, please comment.</p>
","1","1926577","0","0"
"32375307","4341322","2015-09-03 12:12:31","7","1380","<git><web-services><gitignore><bittorrent-sync>","Is there an automatic way to deduplicate .gitignore rules?","<p>Is there some tool or webservice that takes a .gitignore file, tests the rules somehow and notifies one about duplicate rules (i.e. whose matches overlap)?</p>

<p>I have a long-running Git-repository that was initialised with several of <a href=""https://github.com/github/gitignore"" rel=""noreferrer"">GitHub's default .gitignore templates</a>, which were amended manually over the course of several months. After removing some obvious duplicate ignore rules such as <code>test-A.md</code> and <code>test-*</code> manually I started wondering.</p>

<p>So far, I found methods to clean a text of duplicate phrases, but nothing that could actively evaluate the ignore rules. An answer may be useful for <a href=""https://github.com/syncthing/syncthing#syncthing"" rel=""noreferrer"">Syncthing</a> and BitTorrent Sync users trying to clean up convoluted .syncignore rules. Thank you!</p>
","0","4341322","0","0"
"32384473","1143724","2015-09-03 20:01:57","193","115804","<git><gitignore>",".gitignore not ignoring .idea path","<p>What am I missing that needs to be done in order to get <code>git</code> to ignore my <code>.idea/</code> path?</p>

<pre><code>ctote@ubuntu:~/dev/1$ git status
On branch master
Your branch is up-to-date with 'origin/master'.

Changes not staged for commit:
  (use ""git add &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

    modified:   .idea/.name
    modified:   .idea/misc.xml
    modified:   .idea/modules.xml
    modified:   .idea/vcs.xml
    modified:   .idea/workspace.xml
    modified:   src/Receiver.java
    modified:   test/1/agent/WindowsQueryHandlerTest.java

Untracked files:
  (use ""git add &lt;file&gt;..."" to include in what will be committed)

    lib/
    mp1.iml

no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<hr>

<pre><code>ctote@ubuntu:~/dev/1$ cat .gitignore
*.class

# Package Files #
*.war
*.ear

# IDEA config files
.idea/
</code></pre>
","2","1143724","0","0"
"32401387","2124351","2015-09-04 15:14:02","58","55436","<git><gitignore>","git add adding ignored files","<p>I'm trying to remove a previously tracked directory from git, which works, but it's being added back with each subsequent <code>git add .</code>, <code>git add -A</code>, etc. Here's what I've done:</p>

<p>Add to .gitignore in root of project:</p>

<pre><code>node_modules
</code></pre>

<p>Run the following:</p>

<pre><code>git rm -r --cached node_modules
git commit -a -m ""removed node_modules""
git push origin master
</code></pre>

<p>So far so good, this removes the directory from the remote repository. The problem is when I later run <code>git status</code> it tells me the node_modules directory is untracked and keeps adding it back on future commits.</p>

<p>What am I missing and/or how do I find the root of my problem?</p>

<p><strong>From <a href=""http://git-scm.com/docs/git-add"" rel=""noreferrer"">here</a>:</strong></p>

<blockquote>
  <p>The git add command will not add ignored files by default.
  ...
  The git add command can be used to add ignored files with the -f (force) option.</p>
</blockquote>

<p><strong>Additional information from comments:</strong></p>

<p>I am tracking .gitignore file.</p>

<p><code>git check-ignore node_modules/</code> returns node_modules/ as expected.</p>

<p>No use of submodules.</p>

<p><strong>Update:</strong></p>

<p>I've created a sample that appears to replicate the issue following the steps above:</p>

<p><a href=""https://github.com/awhitehouse104/SampleRepo"" rel=""noreferrer"">https://github.com/awhitehouse104/SampleRepo</a></p>

<p><strong>Resolution:</strong></p>

<p>To summarize the answer and comments from below, the issue was in the encoding of my .gitignore file. I had used <code>echo 'node_modules' > .gitignore</code> to create the file on windows 8 and it came out as UTF-16 with BOM (according to answer below). After a few google searches, it seems this is the default encoding with powershell and I can confirm that saving as UTF-8 seems to have resolved the issue.</p>

<p><strong>tldr;</strong> Probably don't use this method of creating .gitignore files or be prepared to change the encoding</p>

<p><code>echo 'node_modules' > .gitignore</code></p>
","11","2124351","0","0"
"68565462","471133","2021-07-28 18:12:31","0","523","<flutter><dart><gitignore>","Flutter cli and very_good_cli gitignore leaves many unversioned files","<p>I just created a project with very_good_cli, did a git init, and have 227 unversioned files. Likewise, I recently, within the past two weeks, created a new flutter project using flutter create and did a git init this morning.</p>
<p>After doing the git init, both projects had an abundance of unversioned files. The VGC version had over two hundred. The standard version had over 60 (after adding my project files to version control). I don't recall projects created earlier having anything like these numbers. I have compared my gitignore to those from earlier projects and see nothing obvious.</p>
<p>I would have thought both tools would create a .gitignore with all the appropriate files ignored. Maybe this mass of files should not be ignored? Are these .gitignore really complete and all these files should be checked in? Or, what is missing from my ignore files?</p>
<p>The .gitignore from the flutter created project is</p>
<pre><code>*.class
*.lock
*.log
*.pyc
*.swp
.DS_Store
.atom/
.buildlog/
.history
.svn/
.gitconfig

# IntelliJ related
*.iml
*.ipr
*.iws
.idea/*

# Visual Studio Code related
.classpath
.project
.settings/
# The .vscode folder contains launch configuration and tasks you configure in
# VS Code which you may wish to be included in version control, so this line
# is commented out by default.
.vscode/*
.history/*

# Flutter repo-specific
/bin/cache/
/bin/mingit/
/dev/benchmarks/mega_gallery/
/dev/bots/.recipe_deps
/dev/bots/android_tools/
/dev/docs/doc/
/dev/docs/flutter.docs.zip
/dev/docs/lib/
/dev/docs/pubspec.yaml
/dev/integration_tests/**/xcuserdata
/dev/integration_tests/**/Pods
/packages/flutter/coverage/
version

# packages file containing multi-root paths
.packages.generated

# Flutter/Dart/Pub related
**/doc/api/
**/ios/Flutter/.last_build_id
.dart_tool/
.flutter-plugins
.flutter-plugins-dependencies
.packages
.pub-cache/
.pub/
build/
flutter_*.png
linked_*.ds
unlinked.ds
unlinked_spec.ds
.fvm/

# Web related
lib/generated_plugin_registrant.dart

# Symbolication related
app.*.symbols

# Obfuscation related
app.*.map.json

# Android Studio will place build artifacts here
/android/app/debug
/android/app/profile
/android/app/release

# Android related
**/android/**/gradle-wrapper.jar
**/android/.gradle
**/android/captures/
**/android/gradlew
**/android/gradlew.bat
**/android/local.properties
**/android/**/GeneratedPluginRegistrant.java
**/android/key.properties
**/android/.idea/
*.jks

# iOS/XCode related
**/ios/**/*.mode1v3
**/ios/**/*.mode2v3
**/ios/**/*.moved-aside
**/ios/**/*.pbxuser
**/ios/**/*.perspectivev3
**/ios/**/*sync/
**/ios/**/.sconsign.dblite
**/ios/**/.tags*
**/ios/**/.vagrant/
**/ios/**/DerivedData/
**/ios/**/Icon?
**/ios/**/Pods/
**/ios/**/.symlinks/
**/ios/**/profile
**/ios/**/xcuserdata
**/ios/.generated/
**/ios/Flutter/App.framework
**/ios/Flutter/Flutter.framework
**/ios/Flutter/Flutter.podspec
**/ios/Flutter/Generated.xcconfig
**/ios/Flutter/ephemeral
**/ios/Flutter/app.flx
**/ios/Flutter/app.zip
**/ios/Flutter/.last_build_id
**/ios/Flutter/flutter_assets/
**/ios/Flutter/flutter_export_environment.sh
**/ios/ServiceDefinitions.json
**/ios/Runner/GeneratedPluginRegistrant.*

# Coverage
coverage/

# Submodules
!pubspec.lock
packages/**/pubspec.lock

# Web related
lib/generated_plugin_registrant.dart

# Symbolication related
app.*.symbols

# Obfuscation related
app.*.map.json

# Exceptions to the above rules.
!**/ios/**/default.mode1v3
!**/ios/**/default.mode2v3
!**/ios/**/default.pbxuser
!**/ios/**/default.perspectivev3
!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages
!/dev/ci/**/Gemfile.lock
!.vscode/extensions.json
!.vscode/launch.json
!.idea/codeStyles/
!.idea/dictionaries/
!.idea/runConfigurations/
</code></pre>
<p>The .gitignore in the Very Good Cli project is</p>
<pre><code># Miscellaneous
*.class
*.lock
*.log
*.pyc
*.swp
.DS_Store
.atom/
.buildlog/
.history
.svn/

# IntelliJ related
*.iml
*.ipr
*.iws
.idea/*

# Visual Studio Code related
.classpath
.project
.settings/
.vscode/*

# Flutter repo-specific
/bin/cache/
/bin/mingit/
/dev/benchmarks/mega_gallery/
/dev/bots/.recipe_deps
/dev/bots/android_tools/
/dev/docs/doc/
/dev/docs/flutter.docs.zip
/dev/docs/lib/
/dev/docs/pubspec.yaml
/dev/integration_tests/**/xcuserdata
/dev/integration_tests/**/Pods
/packages/flutter/coverage/
version

# packages file containing multi-root paths
.packages.generated

# Flutter/Dart/Pub related
**/doc/api/
**/ios/Flutter/.last_build_id
.dart_tool/
.flutter-plugins
.flutter-plugins-dependencies
.packages
.pub-cache/
.pub/
build/
flutter_*.png
linked_*.ds
unlinked.ds
unlinked_spec.ds
.fvm/

# Android related
**/android/**/gradle-wrapper.jar
**/android/.gradle
**/android/captures/
**/android/gradlew
**/android/gradlew.bat
**/android/local.properties
**/android/**/GeneratedPluginRegistrant.java
**/android/key.properties
**/android/.idea/
*.jks

# iOS/XCode related
**/ios/**/*.mode1v3
**/ios/**/*.mode2v3
**/ios/**/*.moved-aside
**/ios/**/*.pbxuser
**/ios/**/*.perspectivev3
**/ios/**/*sync/
**/ios/**/.sconsign.dblite
**/ios/**/.tags*
**/ios/**/.vagrant/
**/ios/**/DerivedData/
**/ios/**/Icon?
**/ios/**/Pods/
**/ios/**/.symlinks/
**/ios/**/profile
**/ios/**/xcuserdata
**/ios/.generated/
**/ios/Flutter/App.framework
**/ios/Flutter/Flutter.framework
**/ios/Flutter/Flutter.podspec
**/ios/Flutter/Generated.xcconfig
**/ios/Flutter/app.flx
**/ios/Flutter/app.zip
**/ios/Flutter/.last_build_id
**/ios/Flutter/flutter_assets/
**/ios/Flutter/flutter_export_environment.sh
**/ios/ServiceDefinitions.json
**/ios/Runner/GeneratedPluginRegistrant.*

# Coverage
coverage/

# Submodules
!pubspec.lock
packages/**/pubspec.lock

# Web related
lib/generated_plugin_registrant.dart

# Symbolication related
app.*.symbols

# Obfuscation related
app.*.map.json

# Exceptions to the above rules.
!**/ios/**/default.mode1v3
!**/ios/**/default.mode2v3
!**/ios/**/default.pbxuser
!**/ios/**/default.perspectivev3
!/packages/flutter_tools/test/data/dart_dependencies_test/**/.packages
!/dev/ci/**/Gemfile.lock
!.vscode/extensions.json
!.vscode/launch.json
!.idea/codeStyles/
!.idea/dictionaries/
!.idea/runConfigurations/
</code></pre>
<p>From the Flutter created version the unversioned files are:</p>
<ol>
<li>&lt;project_root&gt;/android/.gitignore</li>
<li>&lt;project_root&gt;/ios/.gitignore</li>
<li>&lt;project_root&gt;/android/app/src/debug/AndroidManifest.xml</li>
<li>&lt;project_root&gt;/android/app/src/main/AndroidManifest.xml</li>
<li>&lt;project_root&gt;/android/app/src/profile/AndroidManifest.xml</li>
<li>&lt;project_root&gt;/ios/Runner/AppDelegate.swift</li>
<li>&lt;project_root&gt;/ios/Flutter/AppFrameworkInfo.plist</li>
<li>&lt;project_root&gt;/android/app/build.gradle</li>
<li>&lt;project_root&gt;/android/build.gradle</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json</li>
<li>&lt;project_root&gt;/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata</li>
<li>&lt;project_root&gt;/ios/Runner.xcworkspace/contents.xcworkspacedata</li>
<li>&lt;project_root&gt;/ios/Flutter/Debug.xcconfig</li>
<li>&lt;project_root&gt;/web/favicon.png</li>
<li>&lt;project_root&gt;/android/gradle.properties</li>
<li>&lt;project_root&gt;/android/gradle/wrapper/gradle-wrapper.properties</li>
<li>&lt;project_root&gt;/android/app/src/main/res/mipmap-hdpi/ic_launcher.png</li>
<li>&lt;project_root&gt;/android/app/src/main/res/mipmap-mdpi/ic_launcher.png</li>
<li>&lt;project_root&gt;/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png</li>
<li>&lt;project_root&gt;/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png</li>
<li>&lt;project_root&gt;/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png</li>
<li>&lt;project_root&gt;/web/icons/Icon-192.png</li>
<li>&lt;project_root&gt;/web/icons/Icon-512.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@1x.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@2x.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-20x20@3x.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@1x.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@2x.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-29x29@3x.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@1x.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@2x.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-40x40@3x.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@2x.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-60x60@3x.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@1x.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-76x76@2x.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-83.5x83.5@2x.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/Icon-App-1024x1024@1x.png</li>
<li>&lt;project_root&gt;/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist</li>
<li>&lt;project_root&gt;/ios/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist</li>
<li>&lt;project_root&gt;/web/index.html</li>
<li>&lt;project_root&gt;/ios/Runner/Info.plist</li>
<li>&lt;project_root&gt;/android/app/src/main/res/drawable/launch_background.xml</li>
<li>&lt;project_root&gt;/android/app/src/main/res/drawable-v21/launch_background.xml</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@2x.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@3x.png</li>
<li>&lt;project_root&gt;/ios/Runner/Base.lproj/LaunchScreen.storyboard</li>
<li>&lt;project_root&gt;/ios/Runner/Base.lproj/Main.storyboard</li>
<li>&lt;project_root&gt;/.idea/runConfigurations/main_dart.xml</li>
<li>&lt;project_root&gt;/android/app/src/main/kotlin/com/example/cosmic_instant/MainActivity.kt</li>
<li>&lt;project_root&gt;/web/manifest.json</li>
<li>&lt;project_root&gt;/ios/Runner.xcodeproj/project.pbxproj</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md</li>
<li>&lt;project_root&gt;/ios/Flutter/Release.xcconfig</li>
<li>&lt;project_root&gt;/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme</li>
<li>&lt;project_root&gt;/ios/Runner/Runner-Bridging-Header.h</li>
<li>&lt;project_root&gt;/android/settings.gradle</li>
<li>&lt;project_root&gt;/android/app/src/main/res/values/styles.xml</li>
<li>&lt;project_root&gt;/android/app/src/main/res/values-night/styles.xml</li>
<li>&lt;project_root&gt;/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings</li>
<li>&lt;project_root&gt;/ios/Runner.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings</li>
</ol>
<p>The unversioned files in the Very Good Cli generated project are:</p>
<ol>
<li>&lt;project_root&gt;/android/.gitignore</li>
<li>&lt;project_root&gt;/ios/.gitignore</li>
<li>&lt;project_root&gt;/.gitignore</li>
<li>&lt;project_root&gt;/.metadata</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/16.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/16.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/16.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/20.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/20.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/20.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/29.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/29.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/29.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/32.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/32.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/32.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/40.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/40.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/40.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/48.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/48.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/48.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/50.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/50.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/50.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/55.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/55.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/55.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/57.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/57.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/57.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/58.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/58.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/58.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/60.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/60.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/60.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/64.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/64.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/64.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/72.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/72.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/72.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/76.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/76.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/76.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/80.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/80.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/80.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/87.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/87.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/87.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/88.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/88.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/88.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/100.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/100.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/100.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/114.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/114.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/114.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/120.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/120.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/120.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/128.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/128.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/128.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/144.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/144.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/144.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/152.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/152.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/152.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/167.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/167.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/167.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/172.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/172.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/172.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/180.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/180.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/180.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/196.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/196.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/196.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/216.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/216.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/216.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/256.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/256.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/256.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/512.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/512.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/512.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/1024.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/1024.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/1024.png</li>
<li>&lt;project_root&gt;/analysis_options.yaml</li>
<li>&lt;project_root&gt;/android/app/src/debug/AndroidManifest.xml</li>
<li>&lt;project_root&gt;/android/app/src/main/AndroidManifest.xml</li>
<li>&lt;project_root&gt;/android/app/src/profile/AndroidManifest.xml</li>
<li>&lt;project_root&gt;/lib/app/app.dart</li>
<li>&lt;project_root&gt;/lib/app/app_bloc_observer.dart</li>
<li>&lt;project_root&gt;/lib/l10n/arb/app_en.arb</li>
<li>&lt;project_root&gt;/lib/l10n/arb/app_es.arb</li>
<li>&lt;project_root&gt;/test/app_test.dart</li>
<li>&lt;project_root&gt;/ios/Runner/AppDelegate.swift</li>
<li>&lt;project_root&gt;/ios/Flutter/AppFrameworkInfo.plist</li>
<li>&lt;project_root&gt;/android/app/build.gradle</li>
<li>&lt;project_root&gt;/android/build.gradle</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon.appiconset/Contents.json</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-dev.appiconset/Contents.json</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/AppIcon-stg.appiconset/Contents.json</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/LaunchImage.imageset/Contents.json</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/Contents.json</li>
<li>&lt;project_root&gt;/ios/Runner.xcodeproj/project.xcworkspace/contents.xcworkspacedata</li>
<li>&lt;project_root&gt;/ios/Runner.xcworkspace/contents.xcworkspacedata</li>
<li>&lt;project_root&gt;/lib/counter/counter.dart</li>
<li>&lt;project_root&gt;/lib/counter/cubit/counter_cubit.dart</li>
<li>&lt;project_root&gt;/test/counter/cubit/counter_cubit_test.dart</li>
<li>&lt;project_root&gt;/lib/counter/view/counter_page.dart</li>
<li>&lt;project_root&gt;/test/counter/view/counter_page_test.dart</li>
<li>&lt;project_root&gt;/coverage_badge.svg</li>
<li>&lt;project_root&gt;/ios/Flutter/Debug.xcconfig</li>
<li>&lt;project_root&gt;/ios/Runner.xcodeproj/xcshareddata/xcschemes/development.xcscheme</li>
<li>&lt;project_root&gt;/.idea/runConfigurations/development.xml</li>
<li>&lt;project_root&gt;/.vscode/extensions.json</li>
<li>&lt;project_root&gt;/web/icons/favicon.png</li>
<li>&lt;project_root&gt;/web/favicon.png</li>
<li>&lt;project_root&gt;/android/gradle.properties</li>
<li>&lt;project_root&gt;/android/gradle/wrapper/gradle-wrapper.properties</li>
<li>&lt;project_root&gt;/test/helpers/helpers.dart</li>
<li>&lt;project_root&gt;/android/app/src/development/res/drawable/ic_launch_image.xml</li>
<li>&lt;project_root&gt;/android/app/src/main/res/drawable/ic_launch_image.xml</li>
<li>&lt;project_root&gt;/android/app/src/development/res/mipmap-hdpi/ic_launcher.png</li>
<li>&lt;project_root&gt;/android/app/src/development/res/mipmap-mdpi/ic_launcher.png</li>
<li>&lt;project_root&gt;/android/app/src/development/res/mipmap-xhdpi/ic_launcher.png</li>
<li>&lt;project_root&gt;/android/app/src/development/res/mipmap-xxhdpi/ic_launcher.png</li>
<li>&lt;project_root&gt;/android/app/src/development/res/mipmap-xxxhdpi/ic_launcher.png</li>
<li>&lt;project_root&gt;/android/app/src/main/res/mipmap-hdpi/ic_launcher.png</li>
<li>&lt;project_root&gt;/android/app/src/main/res/mipmap-mdpi/ic_launcher.png</li>
<li>&lt;project_root&gt;/android/app/src/main/res/mipmap-xhdpi/ic_launcher.png</li>
<li>&lt;project_root&gt;/android/app/src/main/res/mipmap-xxhdpi/ic_launcher.png</li>
<li>&lt;project_root&gt;/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher.png</li>
<li>&lt;project_root&gt;/android/app/src/staging/res/mipmap-hdpi/ic_launcher.png</li>
<li>&lt;project_root&gt;/android/app/src/staging/res/mipmap-mdpi/ic_launcher.png</li>
<li>&lt;project_root&gt;/android/app/src/staging/res/mipmap-xhdpi/ic_launcher.png</li>
<li>&lt;project_root&gt;/android/app/src/staging/res/mipmap-xxhdpi/ic_launcher.png</li>
<li>&lt;project_root&gt;/android/app/src/staging/res/mipmap-xxxhdpi/ic_launcher.png</li>
<li>&lt;project_root&gt;/android/app/src/development/res/mipmap-anydpi-v26/ic_launcher.xml</li>
<li>&lt;project_root&gt;/android/app/src/main/res/mipmap-anydpi-v26/ic_launcher.xml</li>
<li>&lt;project_root&gt;/android/app/src/staging/res/mipmap-anydpi-v26/ic_launcher.xml</li>
<li>&lt;project_root&gt;/android/app/src/development/ic_launcher-playstore.png</li>
<li>&lt;project_root&gt;/android/app/src/main/ic_launcher-playstore.png</li>
<li>&lt;project_root&gt;/android/app/src/staging/ic_launcher-playstore.png</li>
<li>&lt;project_root&gt;/android/app/src/development/res/drawable/ic_launcher_background.xml</li>
<li>&lt;project_root&gt;/android/app/src/development/res/values/ic_launcher_background.xml</li>
<li>&lt;project_root&gt;/android/app/src/main/res/drawable/ic_launcher_background.xml</li>
<li>&lt;project_root&gt;/android/app/src/main/res/values/ic_launcher_background.xml</li>
<li>&lt;project_root&gt;/android/app/src/staging/res/drawable/ic_launcher_background.xml</li>
<li>&lt;project_root&gt;/android/app/src/development/res/drawable/ic_launcher_foreground.xml</li>
<li>&lt;project_root&gt;/android/app/src/main/res/drawable/ic_launcher_foreground.xml</li>
<li>&lt;project_root&gt;/android/app/src/staging/res/drawable/ic_launcher_foreground.xml</li>
<li>&lt;project_root&gt;/android/app/src/development/res/mipmap-hdpi/ic_launcher_round.png</li>
<li>&lt;project_root&gt;/android/app/src/development/res/mipmap-mdpi/ic_launcher_round.png</li>
<li>&lt;project_root&gt;/android/app/src/development/res/mipmap-xhdpi/ic_launcher_round.png</li>
<li>&lt;project_root&gt;/android/app/src/development/res/mipmap-xxhdpi/ic_launcher_round.png</li>
<li>&lt;project_root&gt;/android/app/src/development/res/mipmap-xxxhdpi/ic_launcher_round.png</li>
<li>&lt;project_root&gt;/android/app/src/main/res/mipmap-hdpi/ic_launcher_round.png</li>
<li>&lt;project_root&gt;/android/app/src/main/res/mipmap-mdpi/ic_launcher_round.png</li>
<li>&lt;project_root&gt;/android/app/src/main/res/mipmap-xhdpi/ic_launcher_round.png</li>
<li>&lt;project_root&gt;/android/app/src/main/res/mipmap-xxhdpi/ic_launcher_round.png</li>
<li>&lt;project_root&gt;/android/app/src/main/res/mipmap-xxxhdpi/ic_launcher_round.png</li>
<li>&lt;project_root&gt;/android/app/src/staging/res/mipmap-hdpi/ic_launcher_round.png</li>
<li>&lt;project_root&gt;/android/app/src/staging/res/mipmap-mdpi/ic_launcher_round.png</li>
<li>&lt;project_root&gt;/android/app/src/staging/res/mipmap-xhdpi/ic_launcher_round.png</li>
<li>&lt;project_root&gt;/android/app/src/staging/res/mipmap-xxhdpi/ic_launcher_round.png</li>
<li>&lt;project_root&gt;/android/app/src/staging/res/mipmap-xxxhdpi/ic_launcher_round.png</li>
<li>&lt;project_root&gt;/android/app/src/development/res/mipmap-anydpi-v26/ic_launcher_round.xml</li>
<li>&lt;project_root&gt;/android/app/src/main/res/mipmap-anydpi-v26/ic_launcher_round.xml</li>
<li>&lt;project_root&gt;/android/app/src/staging/res/mipmap-anydpi-v26/ic_launcher_round.xml</li>
<li>&lt;project_root&gt;/web/icons/Icon-192.png</li>
<li>&lt;project_root&gt;/web/icons/Icon-512.png</li>
<li>&lt;project_root&gt;/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist</li>
<li>&lt;project_root&gt;/ios/Runner.xcworkspace/xcshareddata/IDEWorkspaceChecks.plist</li>
<li>&lt;project_root&gt;/web/index.html</li>
<li>&lt;project_root&gt;/ios/Runner/Info.plist</li>
<li>&lt;project_root&gt;/lib/l10n/l10n.dart</li>
<li>&lt;project_root&gt;/l10n.yaml</li>
<li>&lt;project_root&gt;/.vscode/launch.json</li>
<li>&lt;project_root&gt;/android/app/src/development/res/drawable/launch_background.xml</li>
<li>&lt;project_root&gt;/android/app/src/development/res/drawable-v21/launch_background.xml</li>
<li>&lt;project_root&gt;/android/app/src/main/res/drawable/launch_background.xml</li>
<li>&lt;project_root&gt;/android/app/src/main/res/drawable-v21/launch_background.xml</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@1x.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@2x.png</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/LaunchImage.imageset/LaunchImage@3x.png</li>
<li>&lt;project_root&gt;/ios/Runner/Base.lproj/LaunchScreen.storyboard</li>
<li>&lt;project_root&gt;/LICENSE</li>
<li>&lt;project_root&gt;/ios/Runner/Base.lproj/Main.storyboard</li>
<li>&lt;project_root&gt;/.github/workflows/main.yaml</li>
<li>&lt;project_root&gt;/lib/main_development.dart</li>
<li>&lt;project_root&gt;/lib/main_production.dart</li>
<li>&lt;project_root&gt;/lib/main_staging.dart</li>
<li>&lt;project_root&gt;/android/app/src/main/kotlin/com/example/verygoodcore/MainActivity.kt</li>
<li>&lt;project_root&gt;/web/manifest.json</li>
<li>&lt;project_root&gt;/ios/Runner.xcodeproj/xcshareddata/xcschemes/production.xcscheme</li>
<li>&lt;project_root&gt;/.idea/runConfigurations/production.xml</li>
<li>&lt;project_root&gt;/ios/Runner.xcodeproj/project.pbxproj</li>
<li>&lt;project_root&gt;/pubspec.lock</li>
<li>&lt;project_root&gt;/pubspec.yaml</li>
<li>&lt;project_root&gt;/.github/PULL_REQUEST_TEMPLATE.md</li>
<li>&lt;project_root&gt;/test/helpers/pump_app.dart</li>
<li>&lt;project_root&gt;/ios/Runner/Assets.xcassets/LaunchImage.imageset/README.md</li>
<li>&lt;project_root&gt;/README.md</li>
<li>&lt;project_root&gt;/ios/Flutter/Release.xcconfig</li>
<li>&lt;project_root&gt;/ios/Runner.xcodeproj/xcshareddata/xcschemes/Runner.xcscheme</li>
<li>&lt;project_root&gt;/ios/Runner/Runner-Bridging-Header.h</li>
<li>&lt;project_root&gt;/android/settings.gradle</li>
<li>&lt;project_root&gt;/ios/Runner.xcodeproj/xcshareddata/xcschemes/staging.xcscheme</li>
<li>&lt;project_root&gt;/.idea/runConfigurations/staging.xml</li>
<li>&lt;project_root&gt;/android/app/src/development/res/values/styles.xml</li>
<li>&lt;project_root&gt;/android/app/src/development/res/values-night/styles.xml</li>
<li>&lt;project_root&gt;/android/app/src/main/res/values/styles.xml</li>
<li>&lt;project_root&gt;/android/app/src/main/res/values-night/styles.xml</li>
<li>&lt;project_root&gt;/ios/Runner.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings</li>
<li>&lt;project_root&gt;/ios/Runner.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings</li>
</ol>
","2","471133","",""
"33239002","1338631","2015-10-20 14:10:34","1","423","<git><vim><gitignore>",".gitignore whitelisting vim folder","<p>I am tracking and versioning my dotfiles with the help of <code>vcsh</code> and <code>mr</code>. As suggested, i let vcsh create a predefined .gitignore-file to ignore unneeded files outside of my .vim-directory. 
However, now i want to modify it so it would not ignore my <code>.vimrc</code> nor my <code>~/.vim</code>-folder with all its subdirectories. </p>

<p>Currently, this is the content of my .gitignore:</p>

<pre><code>*
!/.gitignore.d
!/.gitignore.d/vim
!/.vimrc
!/.vim/
!/.vim/**
</code></pre>

<p>However, it still ignores all subfolders of the vim-folder, despite the last line of the .gitignore. I have no idea why. Do you?</p>
","1","1338631","",""
"33245982","3954420","2015-10-20 20:13:26","-1","44","<git><github><requirejs><gitignore>","Requirejs optimizer + git developement files in remote branch","<p>I'm using requirejs optimizer to uglify and minify my CSS and JS files on a project. This project uses git with the following architecture:</p>

<ul>
<li>(local) branch dev</li>
<li>(local) branch master</li>
<li>(remote) branch origin</li>
</ul>

<p>This is the way I work:</p>

<ol>
<li>I develop, debug and add functionnalities on the 'dev' branch.</li>
<li>When it works, I commit in 'dev', switch to 'master' and I merge with dev</li>
<li>In 'master' branch  I minify and uglify my folders '/css' and '/js' thanks
to requirejs optimizer and resulting files are in a folder 'build/js' and 'build/css'. Then I commit my new build files in 'master'</li>
<li>I push to the server with the command <code>git push origin master</code></li>
</ol>

<p>The problem here is that obvisouly all files are pushed to the remote branch, the ""build"" folders but also the '/css' and '/js' folders containing all my development files (with comments and not uglified), while I don't want them to be pushed.</p>

<p>I would like the <strong>developments files to remain in the git scope of 'dev' and 'master'</strong> (for when I work on them) but I would like <strong>them to be ignored when I push to the remote branch origin</strong>.</p>

<p>I have tried to cache them with <code>git rm -r --cached css</code> and to add them in <code>.gitignore</code> but this means that when I work on them on dev and I merge with 'master' they are not taken into account by git anymore and this is a problem.
Also some files in 'dev' and 'master' are not exactly the same due to local configurations vs. released configuration - especially js files (website address, facebook IDs, etc.)</p>

<p>Would you know how to tackle this?</p>

<p>Thanks!</p>

<p>Paganel</p>
","0","3954420","",""
"16678936","1189880","2013-05-21 20:28:34","16","18319","<git><gitignore>","gitignore directory exception not working","<p>I have the following folder structure:</p>

<pre><code>public
    media
        catalog
            product
            category
        private
        tmp
        var
        test
</code></pre>

<p>I want to gitignore everything in the <code>media</code> directory except for <code>catalog/category</code> and <code>private</code> </p>

<p>My gitignore I am trying is:</p>

<pre><code>public/media/*
!public/media/catalog/category/
!public/media/private
</code></pre>

<p>But it doesn't work.  Any new files added to the <code>category</code> or <code>private</code> directories are not available to add.</p>

<p>I could just git add force but I would like this done through the gitignore if possible</p>
","1","1189880","0","0"
"33247935","4486304","2015-10-20 22:30:27","-1","395","<git><gitignore>","gitignore not working - being ignored?","<p>i've got this problem:
got a file under $MYAPP/application/config/database.php that contains all the informations about how to connect to the mysql dbms. Now, these data are different between my local environment and the production environment.</p>

<p>So i've made a .gitignore (under the root of my git project - $MYAPP) that indicates to ignore application/config/database.php file from commits.</p>

<p>Now, on the remote production environment, I modify this file. How is possible that when i make ANY modification to ANY (and not database.php) file, ask for a git status (where database.php is not mentioned), push and on the remote environment I find the same copy of my local environment database.php version?
It seems that git is ""ignoring my .gitignore file""</p>

<p>Thanks for help
Regards.</p>
","3","4486304","",""
"16696681","1314901","2013-05-22 16:11:56","0","999","<android><eclipse><git><gitignore>","git ignore folder changes but still sync","<p>I am working on an Android project that I sync with git. I imported Google and Facebook Sdks. I want the push to push the sdks so that they are shared, but not to track all the changes in the cache and such. Is there any way to do this?</p>

<p>Thanks</p>
","0","1314901","",""
"33277200","4688650","2015-10-22 09:03:24","2","62","<git><gitignore>","git tracked a directory and ignored the subdirectories","<p>The contents of my folder are:</p>

<pre><code>.cpanel/
.git/
.trash/
.vim/
bin/
etc/
laravel/
logs/
mail/
perl5/
php/
public_html/
repo.git/
ssl/
</code></pre>

<p>Here is my .gitignore file</p>

<pre><code>.*
~/.gitignore
*.git/
access-logs/
etc/
logs/
mail/
php/
ssl/
tmp/
trash/
vendor/
error_log
\.bak\.
</code></pre>

<p>When I clone from my git repository, the laravel folder in my local machine shows as:</p>

<p><strong>The contents of <code>ls -la laravel</code> from local machine</strong></p>

<pre><code>total 8
drwxrwxr-x 2 mfissehaye mfissehaye 4096 ኦክተ 22 05:34 .
drwxrwxr-x 5 mfissehaye mfissehaye 4096 ኦክተ 22 05:34 ..
</code></pre>

<p><strong>The contents of <code>ls -la laravel</code> from server</strong></p>

<pre><code>total 124
drwxr-xr-x  5 malameng malameng  4096 2015-10-22 02:52 .
drwxr-xr-x 18 malameng nobody    4096 2015-10-22 03:04 ..
drwxr-xr-x 13 malameng malameng  4096 2015-03-20 05:54 app
-rw-r--r--  1 malameng malameng  2452 2015-03-17 09:44 artisan
drwxr-xr-x  2 malameng malameng  4096 2015-03-20 05:55 bootstrap
-rw-r--r--  1 malameng malameng   798 2015-03-17 09:44 composer.json
-rw-r--r--  1 malameng malameng 68065 2015-03-17 09:44 composer.lock
-rw-r--r--  1 malameng malameng   146 2015-03-17 09:44 CONTRIBUTING.md
-rw-r--r--  1 malameng malameng   606 2015-10-21 09:25 error_log
-rw-r--r--  1 malameng malameng    12 2015-03-17 09:44 .gitattributes
-rw-r--r--  1 malameng malameng   100 2015-03-17 09:44 .gitignore
-rw-r--r--  1 malameng malameng   567 2015-03-17 09:44 phpunit.xml
-rw-r--r--  1 malameng malameng  2051 2015-03-17 09:44 readme.md
-rw-r--r--  1 malameng malameng   519 2015-03-17 09:44 server.php
drwxr-xr-x 24 malameng malameng  4096 2015-03-20 05:54 vendor
</code></pre>

<p><strong>Something I did before pushing my changes to the repo</strong>
The laravel folder had its own .git folder. I removed that. I didn't wanna deal with submodule and stuff.</p>
","18","4688650","",""
"60238529","12069796","2020-02-15 11:56:01","1","353","<c++><git><visual-studio><gitignore>","Should I add other files to git except .cpp?","<p>When I created a C++ console project in Visual Studio, I found that besides <code>.cpp</code> files, I had other files like <code>.sln</code>, <code>.vcxproj</code>, <code>.filters</code>, <code>.user</code>.</p>
<p>Should I add them to Git repo?</p>
","2","12069796","",""
"68402491","316082","2021-07-16 01:38:17","1","1056","<c++><c++11><cmake><gitignore>","CMakeLists folder is not getting ignored with .gitignore","<p>My code structure is as follows</p>
<pre class=""lang-none prettyprint-override""><code>cpppen
|
|-c++11-features
|  |
|  |-async_task
      | 
      | - async_task.cpp
      | - CMakeFiles/ 
      | - CMakeLists.txt
</code></pre>
<p>I want to add the <code>CMakeFiles/</code> folder to <code>.gitignore</code></p>
<p>For some reason it doesn't seem to work.</p>
<pre><code>*.o
*.cbp
*.cmake
CMakeCache.txt
cmake_install.cmake
bin/
build/
CMakeLists.txt.user
**/CMakeFiles/
venv
**/.idea
CMakeScripts
Testing
Makefile

install_manifest.txt
compile_commands.json
CTestTestfile.cmake

cmake-build-debug/

c++11-features/async_task/async_task.exe
</code></pre>
<p>Can someone point out why it is not ignoring the <code>CMakeFiles</code> folder under <code>async_task</code>. What mistake am I making in my <code>.gitignore</code></p>
","4","316082","",""
"3955882","469821","2010-10-18 00:08:50","1","964","<git><gitignore>","Having problems with .gitignore and Untracked files","<p>Greetings,</p>

<p>I have a weird problem with Git and using .gitignore.  I have a folder (that has contents) in my structure that is currently not getting tracked by git because it shows up under the Untracked files when I do git status.  I add it's path to .gitignore but try git status again and it is still there!  Other files/folders, I do the same thing and they disappear, but not this folder.  What am I doing wrong?</p>

<p><em><strong>Update</em></strong></p>

<p>The folder structure is:</p>

<pre><code>folder_foo/folder_bar/folder_baz/file_foo
folder_foo/folder_bar/folder_baz/file_bar
folder_foo/folder_bar/.htaccess
</code></pre>

<p>My <code>.gitignore</code> is:</p>

<pre><code>folder_foo/folder_bar
!folder_foo/folder_bar/.htaccess
</code></pre>

<p>When I run <code>git status</code> is says that the folder <code>folder_foo/folder_bar/</code> is untracked.
I've figured out now that if I remove the second line from the <code>.gitignore</code> then it works fine.  So I've come up with this as a fix:</p>

<pre><code>folder_foo/folder_bar
!.htaccess
</code></pre>

<p>Why is it that I have to do it that way and not specify the exact <code>.htaccess</code> file?</p>
","4","469821","",""
"41539933","4383375","2017-01-09 01:54:31","0","81","<ruby-on-rails><ruby><git><neo4j><gitignore>","gitignore rails neo4j installation?","<p>Is there anything I want to gitignore in my rails neo4j installation if pushing to a public repo?  I am a newbie at neo4j and I noticed some development private keys under <code>db/neo4j/development/certificates</code>. Obviously I would't want to push up my production private key, but will it be ok to push up my development and test keys? In general, should I be pushing up the <code>db/neo4j/development/</code> and <code>db/neo4j/test/</code> folders or should I expect newcomers to a project to run <code>rake neo4j:install[edition,environment]</code></p>
","0","4383375","",""
"68416105","12422792","2021-07-16 23:10:15","1","199","<git><macos><filesystems><cross-platform><gitignore>","Can I safely gitignore ""._"" prefixed files","<p>I'm working on a Unity project which is being developed on both windows and mac OS.
I'm getting these annoying &quot;._&quot; prefixed files in the repo, when I commit from the mac os side, can I safely ignore these files (like one can with DS_STOREs)?</p>
","0","12422792","",""
"32258067","576050","2015-08-27 19:37:22","3","541","<git><github><gitignore><specification-pattern>","git ignore specific directories","<p><p>I wanted to recently upload my dotnetnuke website on git, now my website has gigs of images which i don't want to upload over git.</p><p>I was searching on GIT and came across .gitignore file which gets created during repository creation, GIT has a documentation about ignorning files/folders and it's specific sub-folder, however it does not seems to work in my case.</p> <p>Here's my folder structure:</p>
*******Updated*******</p>

<pre><code>.gitignore
public_html/Portals/_default/
public_html/Portals/0/
public_html/Portals/1/
public_html/Portals/110/
</code></pre>

<p>Now i want to ignore all folders under Portals except Portals/_default. 
I tried based on the specification from GIT:</p>

<pre><code>Example to exclude everything except a specific directory foo/bar (note the /* - without the slash, the wildcard would also exclude everything within foo/bar):

    $ cat .gitignore
    # exclude everything except directory foo/bar
    /*
    !/foo
    /foo/*
    !/foo/bar
</code></pre>

<p>Below is what i tried:</p>

<pre><code>!/Portals
/Portals/*
!/Portals/_default
</code></pre>

<p>But this does not seems to work at all.</p>

<p>Can anyone get me in right direction.</p>
","4","576050","0","0"
"32262412","1020391","2015-08-28 02:24:34","18","4491","<regex><git><gitignore>","Git ignore: How to match one or more digits","<p>I would like to make sure that git ignores any log files that are created on a rotating basis. For instance</p>

<pre><code>debug.log
debug.log.1
debug.log.2
debug.log.10
</code></pre>

<p>should all be ignored. I am currently using <code>*.log</code> and <code>*.log.[0-9]</code> to ignore the first 3 in the list. To capture the third, I know I could use <code>*.log.[0-9][0-9]</code>. However, I'd prefer to find a one line solution that could capture all of these.</p>

<p>Is there a way to tell the gitignore file to match one or more digits?</p>
","0","1020391","0","0"
"22585818","1100135","2014-03-23 01:13:28","98","170208","<git><intellij-idea><gitignore>","How to add files/folders to .gitignore in IntelliJ IDEA?","<p>I try to switch from Eclipse to IntelliJ IDEA. I have a project that uses Git and I want to quickly add files to <em>.gitignore</em> file. In Eclipse I can right click on a file/directory and choose '<em>Add to .gitignore</em>'.</p>

<p>Is there anything like this in IntelliJ IDEA or I have to edit the file manually?</p>
","1","1100135","0","0"
"3919812","1421162","2010-10-12 23:24:37","13","14464","<git><gitignore>","gitignore and how to ignore a common directory name and its contents","<p>I've been pulling out my hair researching the net and various docs about .gitignore files. I'm a bit of a n00b with Unix/Terminal (using Mac OS X) and I can't for the life of me figure out how to ignore a folder's contents (any kind of content, be it a file or another folder, no matter how deep it is).</p>

<p>I'm working on a project that generates image files within a consistent file structure, except we're getting merge conflicts regarding user permissions. I'd like to ignore the folders that contain the generated images so we can avoid any further hair-pulling having to adjust permissions on a per-pull basis. I'm just having trouble getting the .gitignore file to work, so I need to figure out the right pattern for folder's content matching. I want it to be general enough in that it can easily encompass the whole site (so if any folder contains a particular folder name, it will ignore its contents).</p>

<p>I've tried:</p>

<pre><code># Images
resample/
resize/
min/
</code></pre>

<p>And...</p>

<pre><code># Images
resample/*
resize/*
min/*
</code></pre>

<p>And...</p>

<pre><code># Images
*/resample/*
*/resize/*
*/min/*
</code></pre>

<p>And many more combinations with unsatisfactory results. I never got the <code>foldername/**/*</code> pattern to ever work either. Any help regarding this issue would be most appreciated!</p>
","1","1421162","0","0"
"42512192","2549398","2017-02-28 15:04:14","-1","88","<git><azure><gitignore>","Ignore personal configuration files in git","<p>I am working on a repository with other developers. 
Every developer has it's own Azure account for testing purposes, meaning every developer has a different connection string to use for local development. And for the production environment the setting is different either.</p>

<p>So we are using a Web.config with several settings, which is checked in to git. But I don't want that any developer accidentally pushes his connection string, so I extracted it to a seperate file privateDevSettings.config.</p>

<p>Web.config:</p>

<pre><code>&lt;appSettings file=""privateDevSettings.config""&gt;
    &lt;add key=""generalSetting"" value=""123"" /&gt;
&lt;/appSettings&gt;
</code></pre>

<p>privateDevSettings.config:</p>

<pre><code>&lt;?xml version=""1.0""?&gt;
&lt;appSettings&gt;
  &lt;add key=""azureConString"" value=""put your personal azure connection string here""/&gt;
&lt;/appSettings&gt;
</code></pre>

<p>My idea is that every developer sets their personal connection string in the privateDevSettings.config and by using gitignore for this file, nobody checks in their setting. But apparently, when ignoring this file, it also has to be removed from the repository. But I'd rather keep the file so each developer knows what to do.</p>

<p>Any solutions to this problem? Thanks.</p>
","0","2549398","",""
"22541020","2908528","2014-03-20 17:41:13","0","1167","<c#><git><gitignore>","Initializing C# Project in git","<p>I have made a C# Project and Initialized it via git bash shell.Now we know that git should be only tracking source files for that I have added a .gitignore file and in it typed the following regular expressions.</p>

<pre><code>!*.cs
!*.resx
</code></pre>

<p>Then I committed my .gitignore file My question is that Is my approach right?</p>
","2","2908528","",""
"42521667","94508","2017-03-01 01:31:25","2","1678","<git><gitignore>","What is the gitignore pattern to exclude a nested folder?","<p>I have the following folders in a project:</p>

<pre><code>/wwwroot/lib/blue-imp-fileupload
/wwwroot/lib/jquery
/wwwroot/lib/foundation-sites
/wwwroot/lib/font-awesome
/wwwroot/lib/daily/dist
</code></pre>

<p>and want to ignore all folders EXCEPT /wwwroot/lib/daily/dist and any sub-folders and files. What would be the gitignore pattern to achieve this?</p>
","2","94508","",""
"5241644","165673","2011-03-09 05:14:29","197","124804","<git><gitignore><glob>","Using .gitignore to ignore everything but specific directories","<p>My issue is that I have a bunch of WordPress websites in my git repo, of which I want to selectively commit only the content of my <code>themes</code> folders, while ignoring the rest of the redundant files found in WordPress.  </p>

<p>I've used .gitignore files to ignore file types before, but can it be used the other way around- that is to ignore everything BUT a certain folder path?</p>

<blockquote>
  <p>root (git repo)<br>
  - / wordpress<br> 
  - - / (WordPress Site 1)/wp-content/themes<br> 
  - - / (WordPress Site 2)/wp-content/themes<br> 
  - - / (WordPress Site 3)/wp-content/themes<br></p>
</blockquote>

<p>Thanks-</p>

<p><strong>UPDATE:</strong> </p>

<p>Based on the answers I did the following, but it's not working.  Any ideas?</p>

<pre><code># Ignore everything:
*
# Except for wordpress themes:
!*/wp-content/themes/*
</code></pre>

<p>I've also tried the following variations:</p>

<pre><code>!*/wp-content/themes*
!*wp-content/themes/*
!wp-content/themes/*
!/wordpress/*/wp-content/themes*
!wordpress/*/wp-content/themes*
</code></pre>

<p>None of these read my <code>themes</code> folders.</p>
","0","165673","0","0"
"22674165","1150778","2014-03-26 22:14:09","1","51","<eclipse><git><egit><gitignore>","Eclipse Git and command-line git discrepency","<p>In Eclipse which has EGit installed, I find three files with file names starting with <code>.#</code> that needs to be committed (actually more accurately it's their removal needs to be committed).  Whereas in command-line <code>git status</code> I find no local uncommitted modification.  My <code>.gitignore</code> does NOT have a line</p>

<pre><code>syntax: glob
.\#*
</code></pre>

<p>.</p>

<p>I added the above ignore pattern but see no change of the above described scenario.</p>
","8","1150778","0","0"
"60653830","10750848","2020-03-12 12:06:42","0","630","<c><git><gitignore>",".gitignore everything but .c and .h recursively","<p>I would like to ignore everything in a certain folder and its subfolders, except for <code>.c</code> and <code>.h</code> files.</p>

<p>Yet locally, i need other files too. Do i have to have these files, which should not be tracked, in the git-repo before or after i add the <code>.gitignore</code>?</p>

<p>And how do i do this?:</p>

<pre><code>#ignore all
*
#but:
!source/**/*.c
!source/**/*.h
</code></pre>

<p>This is my current solution, but it does not work. But i think this also relates to the point in time, where i have to add the files, that should be ignored, but need to be there locally?</p>

<p>EDIT:
The problem is, i got a copy of a project, that does all kinds of makefile magic and other things, i do not even know what kind of file-types and subfolders there are (i will only work in one folder of the massive project, so i don't think, that the gitignore needs to be so exclusive) ... and i can't just commit everything, because the ""lib"" has to be installed i think, so everybody needs to do this on his own ... </p>
","1","10750848","",""
"4114163","499332","2010-11-06 17:15:43","34","4823","<git><github><gitignore>","How to tell git to ignore all further edit to a single file without removing it from the repo","<p>I have forked a project on github and started messing around with it on my own machine, I want to commit the changes I have made back to my fork on github but without commiting the changes I have made to the .cfg file, since this contains things like db password etc</p>
","2","499332","0","0"
"60373924","7291317","2020-02-24 10:30:55","0","19","<git><gitignore>","Cannot add .expo folder to .gitignore","<p>I am trying to add <code>.expo</code> folder of my react-native (expo) project to the <code>.gitignore</code> file. Unfortunately, <code>git</code> still tracking all files within <code>.expo</code> folder.</p>

<p><code>.gitignore</code> file looks like this</p>

<pre><code># Expo
.expo
.expo/web
</code></pre>

<p>What am I doing wrong?</p>

<p><strong>UPDATE</strong>  </p>

<p>Take a look at the comments below. They helped me to resolve the issue.</p>
","4","7291317","",""
"60806812","997624","2020-03-23 01:14:58","1","91","<bash><gitignore>","Write Bash script to download a variable number of .gitignore files based on number of arguments in command?","<p>How can I write <code>gitignore Python</code> at the commandline and have it run</p>

<blockquote>
  <p><code>curl https://raw.githubusercontent.com/github/gitignore/master/Python.gitignore &gt; ./.gitignore</code></p>
</blockquote>

<p>and have <code>gitignore Python macOS</code> do</p>

<blockquote>
  <p><code>curl https://raw.githubusercontent.com/github/gitignore/master/Python.gitignore https://raw.githubusercontent.com/github/gitignore/master/macOS.gitignore &gt; ./.gitignore</code></p>
</blockquote>

<p>The number of arguments after <code>gitignore</code> would be variable.</p>
","0","997624","",""
"4129669","284981","2010-11-09 01:22:03","2","1350","<linux><git><gitignore>","git is ignoring files that aren't in .gitignore?","<p>Solved:  Decided to delete the .git directory and try again, since there was nothing in it anyway.  <em>rm -rf .git</em>, then <em>git init</em>, then <em>git add .</em>.  Now it's working, everything is getting added correctly, and things that should be ignored are.  Think I mis-cloned 960gs or html5boilerplate into the project directory instead of a subdirectory.  Thanks everyone for your replies, much appreciated.</p>

<hr>

<p>There are lots of questions on SO about git failing to ignore files specified in .gitignore.  My problem is the exact opposite - git is ignoring files that <em>aren't</em> listed in .gitignore.</p>

<p>For example, I've just started a web project using <a href=""http://html5boilerplate.com/"" rel=""nofollow"">HTML5Boilerplate</a> and <a href=""http://960.gs/"" rel=""nofollow"">960 Grid System</a>, and am trying to do the initial commit.  However, only a few of the files and directories I need are being staged when I run 'git add *'.  </p>

<p>.gitignore in the project directory specifies a list of project, vcs, and other files to ignore, but not *.html, *.xml, *.conf, .htaccess, *.ico, *.png files, which are not being staged to the index.  Strangely, one html file is being added, demo.html, while index.html isn't.</p>

<p>Anyone have any idea what's wrong and how to fix it?</p>

<p>Here's a transcript of the operations for clarity:</p>

<pre><code>%&gt; ls -al
total 136
drwxr-xr-x 13 me me  4096 2010-11-08 14:04 .
drwxr-xr-x  6 me me  4096 2010-11-08 13:23 ..
-rw-r--r--  1 me me   720 2010-11-08 13:21 404.html
-rw-r--r--  1 me me  1893 2010-11-08 13:21 apple-touch-icon.png
drwxr-xr-x  3 me me  4096 2010-11-08 13:21 build
-rw-r--r--  1 me me   802 2010-11-08 13:21 crossdomain.xml
drwxr-xr-x  3 me me  4096 2010-11-08 13:24 css
drwxr-xr-x  2 me me  4096 2010-11-08 13:21 demo
-rwxr-xr-x  1 me me  8920 2010-11-08 13:15 demo.html
-rw-r--r--  1 me me  1150 2010-11-08 13:21 favicon.ico
drwxr-xr-x  8 me me  4096 2010-11-08 14:04 .git
-rw-r--r--  1 me me   266 2010-11-08 13:44 .gitignore
-rw-r--r--  1 me me  8011 2010-11-08 13:21 .htaccess
drwxr-xr-x  2 me me  4096 2010-11-08 13:21 images
drwxr-xr-x  2 me me  4096 2010-11-08 13:15 img
-rw-r--r--  1 me me  3115 2010-11-08 13:21 index.html
drwxr-xr-x  5 me me  4096 2010-11-08 13:21 js
-rw-r--r--  1 me me  5166 2010-11-08 13:21 lighttpd.conf
-rw-r--r--  1 me me  3484 2010-11-08 13:21 mime.types
-rw-r--r--  1 me me  3413 2010-11-08 13:21 nginx.conf
-rw-r--r--  1 me me     0 2010-11-08 14:04 output.txt
-rw-r--r--  1 me me  6277 2010-11-08 13:21 README.markdown
-rw-r--r--  1 me me   107 2010-11-08 13:21 robots.txt
drwxr-xr-x  4 me me  4096 2010-11-08 13:17 templates
drwxr-xr-x  3 me me  4096 2010-11-08 13:21 test
drwxr-xr-x  2 me me  4096 2010-11-08 13:45 vim~
-rw-r--r--  1 me me 12274 2010-11-08 13:21 web.config
drwxr-xr-x  2 me me  4096 2010-11-08 12:09 wireframes

%&gt; less .gitignore
# Numerous always-ignore extensions
*.diff
*.err
*.orig
*.log
*.rej
*.swo
*.swp
*.vi
*~

# OS or Editor folders
.DS_Store
.cache
.project
.settings
nbproject
thumb.db

# Folders to ignore
.hg
.svn
publish
.idea
templates
template

# files
build/buildinfo.properties

%&gt; git add *
# Not currently on any branch.
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#   new file:   css/960.css
#   new file:   css/960_24_col.css
#   new file:   css/reset.css
#   new file:   css/rtl_960.css
#   new file:   css/rtl_960_24_col.css
#   new file:   css/rtl_text.css
#   new file:   css/text.css
#   new file:   css/uncompressed/960.css
#   new file:   css/uncompressed/960_24_col.css
#   new file:   css/uncompressed/demo.css
#   new file:   css/uncompressed/reset.css
#   new file:   css/uncompressed/rtl_960.css
#   new file:   css/uncompressed/rtl_960_24_col.css
#   new file:   css/uncompressed/rtl_text.css
#   new file:   css/uncompressed/text.css
#   new file:   demo.html
#   new file:   img/12_col.gif
#   new file:   img/16_col.gif
#   new file:   img/24_col.gif
#   new file:   wireframes/basalmiq01.pdf
#   new file:   wireframes/basalmiq01.png
#   new file:   wireframes/basalmiq01.xml
#   new file:   wireframes/fcf_mockingbird.zip
#   new file:   wireframes/fcf_mockingbird_.zip
#
# Changed but not updated:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   .gitignore
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   output.txt
</code></pre>
","11","284981","0","0"
"23564878","1467306","2014-05-09 12:38:05","7","307","<git><version-control><gitignore><ignore>","git -- handling frozen content","<p>Almost all projects that I've worked on have some kind of ""frozen content"" that should always come when cloned, yet rarely be changed (see below for an example). I've tried different approaches using git, but they're all error-prone: people frequently wind up accidentally committing changes.</p>

<p>It's a subtle case to be sure: the files/folders <em>must</em> be versioned, but the <em>vast</em> majority of changes shouldn't get pushed. </p>

<p>Looking around I have a couple options:</p>

<ul>
<li><code>git update-index --assume-unchanged &lt;file&gt;</code>:  <strong>Problem</strong> -- this <a href=""https://stackoverflow.com/questions/16818305/git-assume-unchanged-implications"">would appear to be a local setting</a>, so this only solves the problem on a given machine.  New clones are prone to forget and still commit changes by accident.</li>
<li><code>git update-index --skip-worktree &lt;file&gt;</code>: <strong>Problem</strong> -- Appears to have the same issue, since I don't <em>think</em> changes to the index are ever propogated.</li>
<li><code>git rm --cached &lt;file&gt;</code>: <strong>Problem</strong> -- not really a solution at all since this toasts everyone's copy when pushed!</li>
<li><code>echo &lt;file&gt; &gt;&gt; .gitignore</code>: <strong>Problem</strong> -- not really a solution, since this only controls whether an object is <em>added</em> to the repo.</li>
<li>use a smudge/clean filter to exclude file changes from commits (see jthill's <a href=""https://stackoverflow.com/questions/23528104/how-to-freeze-a-file-in-a-repository"">answer</a>): <strong>Problem</strong> -- complicated, error prone: still needs each developper to locally config. </li>
</ul>

<p><strong>An acceptable answer to this question doesn't require special actions by each new developer</strong>.  </p>

<p>Why?  Because this is precisely the problem with the above solutions, which, in my experience leads to situations where ""somebody has committed that file again"". </p>

<p>Searches easily turn up many questions.  We need a final answer!</p>

<ul>
<li><a href=""https://stackoverflow.com/questions/23528104/how-to-freeze-a-file-in-a-repository"">How to freeze a file in a repository</a></li>
<li><a href=""https://stackoverflow.com/questions/2173726/prevent-local-changes-getting-pushed-in-git"">Prevent local changes getting pushed in Git</a></li>
<li><a href=""https://stackoverflow.com/questions/16818305/git-assume-unchanged-implications"">git assume-unchanged implications</a></li>
<li><a href=""https://stackoverflow.com/questions/2007397/howto-prevent-git-from-pushing-changes-to-some-files"">Howto prevent git from pushing changes to some files</a></li>
<li><a href=""https://stackoverflow.com/questions/655243/ignore-modified-but-not-committed-files-in-git"">Ignore modified (but not committed) files in git?</a> </li>
<li><a href=""https://stackoverflow.com/questions/321561/preventing-a-file-overwrite-with-git"">Preventing a file overwrite with Git</a></li>
</ul>

<p>Example:</p>

<p>Here's the case I'm dealing with ATM.  My project is a website that embeds wiki software (which I did not write). The wiki component needs a non-trivial folder structure which is used rather like a database (should probably be one).  It needs to find the folders and files already there to work.  After awhile these files get big -- we don't want to track those changes!  This folder structure also contains some config (I know).  If I could include the bare copy in the repo, and somehow (almost) never track its changes, that would be perfect.</p>
","4","1467306","0","0"
"22896230","2038312","2014-04-06 15:46:27","3","189","<git><gitignore>","gitignore everything except specific files","<p>I've been reading on Stack Overflow about using gitignore to ignore everything except specific files. I've tried a bunch of different suggestions, but I can't get it to work for me.</p>

<p>Here's what I'm trying to do: I want to exclude everything except one file in my main directory and a couple other files in the subdirectory. So, I want only these files:</p>

<pre><code>flightsofideas.rb
/FlightsOfIdeas/svgExportTools.rb
/FlightsOfIdeas/svgExport.rb
</code></pre>

<p>My latest version of gitignore is:</p>

<pre><code>*    
!flightsofideas.rb
!/FlightsOfIdeas/svgExportTools.rb
!/FlightsOfIdeas/svgExport.rb
</code></pre>

<p>But git only includes <code>flightsofideas.rb</code>, it doesn't get the files in the subdirectory.</p>
","4","2038312","0","0"
"60837676","3696204","2020-03-24 19:06:24","0","17","<git><gitignore>","git still sees a file I deleted and won't push to github","<p>I am trying to push my repo to github. However, it thinks I have a large file in my repo.</p>

<ol>
<li>I downloaded kaggle data in a .zip file</li>
<li>unzipped the file</li>
<li>deleted the .zip file</li>
<li>added the data files to .gitignore</li>
<li>commit changes</li>
<li>tried to push</li>
</ol>

<p>My push is being rejected because it thinks that the <code>.zip</code> file is still in my repository. It is most definitely not. </p>

<p>This is what my git log looks like. The revert is because I accidentally commited the data files before adding them to .gitignore:</p>

<pre><code>commit 80c89f82d1db6083904f5eb9f48a11399826881e
Author: Wesley Neill &lt;wesley.neill@gmail.com&gt;
Date:   Tue Mar 24 18:55:15 2020 +0000

    added notebook for foliar comp

commit 6d9d44adc2667127c143836b0b46ecb06185116d
Author: Wesley Neill &lt;wesley.neill@gmail.com&gt;
Date:   Tue Mar 24 18:47:21 2020 +0000

    Revert ""added foliar disease project""

    This reverts commit 9dc9ca2c5f2917fbfbb9da28880a9e3c22d7668e.

commit 9dc9ca2c5f2917fbfbb9da28880a9e3c22d7668e
Author: Wesley Neill &lt;wesley.neill@gmail.com&gt;
Date:   Tue Mar 24 18:44:33 2020 +0000

    added foliar disease project

commit bb1e418ddee28f75bba1ee31f504e02ac909a082
Author: Wesley Neill &lt;wesley.neill@gmail.com&gt;
Date:   Sun Mar 22 13:22:58 2020 -0700

    started kaggle repo with existing titanic submission
</code></pre>
","3","3696204","",""
"61052193","13054946","2020-04-06 02:39:00","-1","323","<git><gitignore>","ignore some files in locally without change gitignore project","<p>i am not really an expert for GIT, what I always use in git only <code>git add</code>, <code>git commit -m</code> and bla bla ( the basic ),
i already get a file <code>.gitignore</code> from cloning the project and its already set up by team. but for running the project I have another way to add some syntax in the <code>Makefile</code> because I can't use the default of <code>Makefile</code> of that project, I have my own setting.</p>

<p>so here I changed the file of <code>Makefile</code>, but every time I want to <code>git status</code> that <code>Makefile</code> status is <code>unstaged for commit</code>, so i ust do manually <code>git checkout -- Makefile</code>, it gonna make that file back like before and not going to be add in git, for my main question is:</p>

<p>I want to ignore that file locally, how can I do that in command line?</p>
","3","13054946","",""
"5620292","","2011-04-11 10:55:59","1","7289","<git><eclipse-plugin><gitignore><egit><aptana>","How to ignore .gitignore file from commiting by EGit plugin of Apatana Studio 2?","<p>I have been using the Git bash for doing my commits until now and have never seen .gitignore file getting commited. Recently I moved over to Aptana Studio 2 for doing my projects and installed the <strong>EGit Eclipse Plugin</strong> for version control. Whenever I commit now the <strong>.gitignore</strong> file also gets commited. I even tried to include the line <code>*.gitignore</code> in the .gitignore file itself, but that doesn't help. </p>

<p>How can I ignore the .gitignore file?</p>
","0","","0","0"
"23831366","1129332","2014-05-23 14:05:32","1","60","<git><command-line><gitignore>",".gitignore file got cached","<p>I have problems with my .gitignore file not ignoring directory that I set in it.</p>

<p>on my mac I run:</p>

<ul>
<li><code>git status</code> It show long list of files in .idea directory</li>
</ul>

<blockquote>
  <p>new file:   .idea/[file name]</p>
</blockquote>

<ul>
<li><code>git config core.excludesfile</code> and It shows me the correct .gitignore file. </li>
</ul>

<p>I also been trying to run:</p>

<pre><code>git rm . -r --cached .
</code></pre>

<p>This is my .gitignore file:</p>

<blockquote>
  <p>.idea/</p>
</blockquote>

<p>Any idea what else can I do. I need to perform a commit and I do not want to commit everything.</p>
","1","1129332","",""
"23857207","3523379","2014-05-25 15:56:37","18","725","<git><gitignore>","gitignore: Understanding ""hello/"" vs. ""hello/*""","<p><code>hello/</code> ignores all folders named ""hello"" anywhere in my folder structure</p>

<p><code>hello/*</code> only ignores the folder ""hello"" at the top-level.</p>

<p>Why is this? Please point to a passage in <a href=""http://git-scm.com/docs/gitignore"" rel=""noreferrer"">http://git-scm.com/docs/gitignore</a> that explains this behavior.</p>
","0","3523379","0","0"
"61076373","9982037","2020-04-07 09:02:39","2","403","<git><gitignore>","How can I add already committed files to .gitignore while keeping it?","<p>There is a file already committed.</p>

<p>I want to add the file .gitignore.
I want to keep the file.</p>

<p>for example)</p>

<pre><code>$ git ls-files
  foo

$ echo ""foo"" &gt; .gitignore

$ echo ""test"" &gt;&gt; foo

$ git status
# On branch master
# Your branch is up to date with 'origin/master'.
#
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   foo
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   .gitignore
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>As you can see, foo file status changed to ""modified"".
I want to be not modified status.
How can I add foo file to .gitignore without deleting it.</p>

<hr>

<p>Already answered is not what I wanted.
What I want is not local setting.
I want method each developers not using 'git update-index --assume-unchanged path/to/file.txt'</p>
","2","9982037","",""
"23860798","3523379","2014-05-25 23:08:30","2","845","<git><gitignore>","gitignore: Ignoring a folder (anywhere) except for a subfolder (anywhere)","<p>I want to exclude everything in a folder named <code>foo</code>, except for stuff inside a folder named <code>bar</code>.</p>

<p><code>foo</code> can appear anywhere in the directory structure more than once.</p>

<p><code>bar</code> can appear anywhere in the directory structure under <code>foo</code>.</p>

<p>I tried</p>

<pre><code>/**/foo/**
!/**/foo/**/bar/**
</code></pre>

<p>but it didn't work. It still ignores all the <code>foo</code>. It refuses to allow <code>bar</code>.</p>

<p>How do I solve this?</p>
","1","3523379","",""
"23880344","629981","2014-05-27 02:46:45","0","402","<android><git><gitignore><r.java-file>","R.java file not generated after imorting a file from git","<p>Hello I tried importing a project which I recently cloned from github.As R.java file is among the git-ignore, The file not there when I import the project. After I clean the project many times and also build it manually many times, The R.java file does not get generated. please help me with this. </p>
","3","629981","",""
"61555541","11818269","2020-05-02 06:51:39","0","432","<laravel><git><github><phpstorm><gitignore>","How do teams collaborate on a Laravel project using github?","<p>I'm currently in a team developing a LARAVEL project and all of us are using PHPSTORM, so we decide to use GitHub to make things easier.
so when I tried to push my project to GitHub then I remarked that not all files are included and that because of an existing .gitignore file in my LARAVEL project which is created by LARAVEL installer .. I searched for that and I fund the same case as I have: <a href=""https://stackoverflow.com/questions/25748132/what-to-include-in-gitignore-for-a-laravel-and-phpstorm-project"">What to include in gitignore for a Laravel and PHPStorm project?</a>
but I didn't understand what we should ignore and why.
anyone can explain this in detail please I'm really a beginner.</p>
","0","11818269","",""
"61560091","2506786","2020-05-02 13:23:17","0","86","<git><merge><gitignore><checkout>","git ignore a file for changes but don't ignore the file for merge in the repository","<p>I've updated .gitignore not to report changes to 200 files that are continuously regenerated from tracked source files during my development process. This cleans up my ""git status"" report just fine.</p>

<p>I use <code>git add -f .</code> in order to include the generated files in the push and, sure enough, I see my updated generated files on the server so that when my colleagues get a copy of the repository, the generated files are included. So far, so good.</p>

<p>But when I switch branches locally and merge the branch with the regenerated files, the regenerated files are ignored and I do not have them at hand to use them in the switched branch. I could regenerate them, but I want the merge to include all of the files in the repository so that the branch gets the complete image of the old branch. I would then use <code>git add -f .</code> on the new branch in order to update the server with the regenerated files from the old branch, but I don't have those regenerated files and I want them preserved because the regeneration process will add timestamps and such that won't match.</p>

<p>I tried an explicit git merge  which produces conflicts that end up embedded in all of the regenerated files, rendering the regenerated files useless. And I can't individually fix all 200 of them.</p>

<p>So how can I checkout a branch and have all of the current branch's files show up in the result without conflicts? Or how can I merge a branch and preserve the incoming .gitignore regenerated files without them getting peppered with conflict statements?</p>
","12","2506786","",""
"5810233","253291","2011-04-27 20:34:44","4","5222","<git><ruby-on-rails-3><gitignore>","Git is not using the contents of .gitignore","<p>I’m working with Rails and added the directory tmp and the Gemfile to my .gitignore. But every time I change it, <code>git status</code> tells me, that it changed. On both machines. On my developer machine and on the server. Kind of annoying.</p>

<p>Contents of <code>.gitignore</code>:</p>



<pre class=""lang-none prettyprint-override""><code>.DS_Store
data/export/*.csv
tmp/*
*.rbc
*.sassc
.sass-cache
capybara-*.html
.rspec
/.bundle 
/vendor/bundle 
/log/* 
/tmp/* 
/db/*.sqlite3 
/public/system/* 
/coverage/ 
/spec/tmp/* 
**.orig 
config/*.yml 
rerun.txt 
pickle-email-*.html 
Gemfile*
</code></pre>
","4","253291","0","0"
"61752746","2125110","2020-05-12 13:18:18","0","744","<gitignore><katalon-studio>","Can i gitignore Katalon Studio settings/internal folder?","<p>When opening my project in Katalon Studio, the folder <code>settings/internals</code> refreshes, adding little to no new information (e.g. updating a comment with last open/modified data, see snipped), but making git think I have new stuff to commit.</p>

<p>Can I just put the entire folder in <code>.gitignore</code>? I had the <code>.gitignore</code> file created by Katalon Studio and the folder was not default-ignored. I don't want my collaborators to get crazy merging comment lines.</p>

<p>example <code>com.kms.katalon.composer.testcase.properties</code></p>

<pre><code>#Tue May 12 15:14:47 CEST 2020    &lt;-- this lines gets updated when opening the project
testCaseTag=""""
</code></pre>
","0","2125110","",""
"6025602","121453","2011-05-17 02:29:35","9","3536","<git><gitignore>","git ignore directory except for specified","<p>I want to ignore entire public_html/ directory except one file inside</p>

<p>I give .gitignore as below:</p>

<pre><code>public_html/*
!public_html/config/config.php
</code></pre>

<p>However, when I run git status , I can not find config.php has been included.</p>
","1","121453","0","0"
"24406786","425275","2014-06-25 10:57:38","0","75","<git><gitignore>","How to gitignore files in a directory but not files in its sub-directories?","<p>Folder structure</p>

<ul>
<li>foo
<ul>
<li>bar
<ul>
<li>file1.js</li>
<li>file2.js</li>
<li>baz
<ul>
<li>file3.js</li>
<li>file4.js</li>
</ul></li>
</ul></li>
</ul></li>
</ul>

<p>I would like to gitignore the files directly inside the ""bar"" directory (file1 and file2), but not the files inside any sub-directory of ""bar"" (in this example, file3 and file4 should not be ignored).</p>

<p>I checked the <a href=""http://git-scm.com/docs/gitignore"" rel=""nofollow"">docs</a>. Seems to be incomplete. </p>
","0","425275","",""
"61761591","6878278","2020-05-12 20:46:14","3","473","<python><gcloud><gitignore><gcloudignore>","git ignore not ignoring a file when using GCloud's gcloudignore","<p>I have a rule to ignore secret.py (production.py in my case) and once I added .gcloudignore, github stopped following that rule...
Is there some sort of a rule overriding between gitignore and gcloudignore that I am not aware of?</p>

<pre><code>my-project/
    .git
    .gitignore
    my-project/
        .gcloudignore
        settings/
            base.py
            local.py
            production.py
</code></pre>

<p>my .gitignore:</p>

<pre><code>my-project/my-project/settings/production.py
my-project/my-project/settings/local.py
</code></pre>

<p>my .gcloudignore:</p>

<pre><code># This file specifies files that are *not* uploaded to Google Cloud Platform
# using gcloud. It follows the same syntax as .gitignore, with the addition of
# ""#!include"" directives (which insert the entries of the given .gitignore-style
# file at that point).
#
# For more information, run:
#   $ gcloud topic gcloudignore
#
.gcloudignore
# If you would like to upload your .git directory, .gitignore file or files
# from your .gitignore file, remove the corresponding line
# below:
.git
.gitignore

*.sqlite3
settings/local.py
</code></pre>

<p>End result is that the 'local.py' is NOT pushed to google cloud NOR github.
However, 'production.py' IS pushed to github AND gcloud.</p>
","4","6878278","",""
"24410208","436560","2014-06-25 13:34:05","243","168091","<git><gitignore>","gitignore does not ignore folder","<p>In the root of my project I have a <code>foo</code> folder. Inside the <code>foo</code> folder I have a <code>bar</code> folder. I would like to ignore all changes to all files inside my <code>bar</code> folder. I have this in my <code>gitignore</code>:</p>

<pre><code>/foo/bar
</code></pre>

<p>The folder is checked: it exists and it has the files to be ignored. <code>gitignore</code> is <code>commit</code>ted. However, I have a file where I make a moification and is inside my <code>bar</code> folder. When I type</p>

<pre><code>git status
</code></pre>

<p>inside my <code>git bash</code> I see the file which should have been ignored. What could be the reason and how can I successfully ignore all files inside my bar folder?</p>

<p>Note, that the files were previously ignored with the same line, but I had to temporarily remove that line to <code>commit</code> something on the server. After the <code>commit</code>, I put back the line into the <code>gitignore</code>. This was a while ago, but now I have observed that the files will be in <code>git status</code>. I would expect to be able to modify the ignored files without they appearing in the <code>git status</code>.</p>
","10","436560","0","0"
"43093485","1470092","2017-03-29 12:26:20","0","127","<github><gitignore>","What to gitignore to protect my OS license (and computer)","<p>I'm going to upload a project to github but I'm not sure that if some temporary files or binaries from visual studio, includes some important info about the OS and computer I use, which could(?) let people do hacking.</p>

<p>Which files should I consider ignoring or not uploading from my  project (has C++ and C# parts)?</p>

<p>I already have a github page:</p>

<p><a href=""https://github.com/tugrul512bit/Cekirdekler"" rel=""nofollow noreferrer"">https://github.com/tugrul512bit/Cekirdekler</a></p>

<p>and using Visual Studio 2015 community edition.  </p>
","9","1470092","",""
"6055949","194443","2011-05-19 08:39:52","5","452","<git><gitignore>","git ignore everything but some subdirectories","<p>I need to control only ""debian"" subdirectories on my tree :</p>

<pre><code>pkg/.git
pkg/.gitignore
pkg/package1/package1-2.2.1/debian
pkg/package2/package2-1.0/debian
</code></pre>

<p>I tried this kind of .gitignore but it won't work :</p>

<pre><code>*
!.gitignore
!*/*/debian
</code></pre>

<p>When I run</p>

<blockquote>
  <p>git add package1/package1-2.2.1/debian</p>
</blockquote>

<p>git's answer is :
The following paths are ignored by one of your .gitignore files:
package1</p>

<p>Which is quite logical. Any help would be appreciated !</p>
","0","194443","",""
"6057419","451252","2011-05-19 10:44:10","1","2600","<git><gitignore><git-branch>","Git : using .gitignore with different branches","<p>I have a pretty basic work environment but does not manage to work with Git as desired.</p>

<p>Here is how we can describe it : two branches A and B with two files each in their working trees, the first file is toMerge and the second is toKeepSpecific.</p>

<p>I have the same .gitignore in the two branches saying to ignore the toKeepSpecific file. The toKeepSpecific file has never been pushed so in the remote repository, the two branches only contain toMerge.</p>

<p>The problem I have is that when I'm on branch B and try to checkout branch A, I have the following message : ""The following untracked working tree file would be overwritten by checkout"". I thought the .gitignore would take care of that but apparently not...</p>

<p>What's the most appropriate git environment for this kind of needs ?</p>

<p>Thanks ! </p>
","2","451252","",""
"61803893","3662917","2020-05-14 17:41:19","6","3286","<visual-studio-code><gitignore>",".gitignore not appearing in VScode's file explorer","<p>In the standard Windows Explorer, the repo contains all the expected files: <a href=""https://i.stack.imgur.com/Xl3Rg.png"" rel=""noreferrer"">A snip of my file directory</a>.</p>

<p>In VSCode, the <code>.gitignore</code> <a href=""https://i.stack.imgur.com/lpUAN.png"" rel=""noreferrer"">file does not display in the explorer</a>. It's still seemingly functional (all files in the <code>.gitignore</code> are ignored), but it poses an annoyance. Most notably, the <code>.gitignore</code> file <em>does</em> appear in <a href=""https://i.stack.imgur.com/6jKM3.png"" rel=""noreferrer"">other repos</a> that I have on my machine.</p>

<p>Help would be appreciated.</p>
","0","3662917","",""
"24627666","3281035","2014-07-08 08:58:38","1","182","<git><github><gitignore>","gitignore: !text.lib (exclude) vs *.lib (ignore)","<p>I have question regarding ignore and exclude rules in .gitignore.</p>

<p>So I have a very large file tree where I want to ignore all lib files except a specific lib file which is a text file with a .lib extension:</p>

<p>What I have in my .gitignore file:</p>

<pre><code># exclude rule
!text.lib
# ignore rule
*.lib
</code></pre>

<p>However, I can not see all the text.lib files in my file tree when issuing a git status. The '!text.lib' is overrulled by *.lib'</p>

<p>How to make a rule that can solve this?</p>

<p>Thank you very much:-)</p>
","0","3281035","0","0"
"61982834","12902760","2020-05-24 07:25:21","6","14653","<git><github><repository><gitignore>","What should contain .gitignore file when is a public repository?","<p>I have been learning all about .gitignore file but there's a question that I would want to solve. .gitignore should contain all files that you want to ignore. Therefore, you should ignore files generated by the OS, the IDE you are working on... My question appears when the repository is on Github and people can clone it and push the changes. These people can use other operating systems and can use other IDEs. Thus, gitignore should ignore the files generated by these others OS and IDEs.</p>

<p>What should you do? Do you have to write in gitignore all the files generated by all the operating systems and generated by all the IDEs?</p>
","2","12902760","0","0"
"61987091","308578","2020-05-24 14:03:36","0","144","<laravel><git><github><module><gitignore>","my laravel seeds folders ignored by git how to resolve and avoid","<p>i have <code>modules</code> folders in my Laravel Project.</p>

<p>and my sub packages/projects in there</p>

<p><a href=""https://i.stack.imgur.com/MCaSQ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/MCaSQ.png"" alt=""my laravel seeds folders ignored by git how to resolve and avoid ""></a></p>

<p>my Laravel parent project use them to working</p>

<p><a href=""https://i.stack.imgur.com/bTB7B.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bTB7B.png"" alt=""similar to vendor how can you create sub projects in laravel""></a></p>

<p>modules folder gitignored by his main project.</p>

<p><a href=""https://i.stack.imgur.com/pHM1A.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/pHM1A.png"" alt=""laravel create vendor project""></a></p>

<p>those projects in modules folders connect to its own git repos.</p>

<p>those projects have <code>seeds</code> and <code>factories</code> folder need when i run composer install in the parent.</p>

<p><a href=""https://i.stack.imgur.com/1KLBS.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/1KLBS.png"" alt=""seeds and factories didnt sync with git to repo""></a></p>

<p>but <code>seeds</code> and <code>factories</code> are empty and not sync with git and when other developers fetch/clone the repos the parent project need them.</p>

<p>how can i add files as Laravel documentation there to avoide this action.</p>

<p>is it true to create a text file there?</p>
","1","308578","",""
"6339035","46981","2011-06-14 04:25:02","6","1061","<git><gitignore><repository>","Selective git ignore by remote?","<p>Say I have a project that is located on both a public open-source repo and a private development repo. Some files on the development repo would include stuff like database passwords and such that I don't want public. What would be the best way to share the safe files between the two remotes? I'm thinking some kind of .gitignore file that is only applied to the public repo, is that possible? If not, any other suggestions?</p>
","1","46981","",""
"24649584","971392","2014-07-09 09:10:04","2","1828","<git><merge><gitignore><git-flow>","git merge and different gitignore for each branch","<p>I have 2 branches, <code>develop</code> and <code>master</code>. The <code>master</code> branch should not contain some development files and tools that are store in a directory called <code>boilerplate</code>. So far, so good, since I can more or less, manage with the following differences in the <code>.gitignore</code> file, between branches.</p>

<h2>develop</h2>

<pre><code># Dev tools
/html
/boilerplate/node_modules
/boilerplate/bower_components

/assets/dist/main.min.css
/assets/dist/main.min.js

.....
</code></pre>

<p>master</p>

<pre><code># Cleanup for live
/html
/boilerplate

/assets/dist/main.css
/assets/dist/main.js

.....
</code></pre>

<p>So, on commits on each branch all ok! Problem is when I merge from <code>develop</code> to <code>master</code>, or go for a <code>git flow hotfix</code> starting on <code>master</code> branch.</p>

<p>If I merge from <code>develop</code> to <code>master</code> the issue is that at some point it will fail the automatic process, and I will have to finish it manually by removing the <code>boilerplate</code> folder from git's index, because that's where the issue resides. So I just do <code>git rm -rf boilerplate/</code> and all done. This is not such a big issue.</p>

<p>But, if for some reason, I start a new branch just for a hotfix, based on master, either manually or through the <code>git flow hotfix start XYZ</code> process, my <code>boilerplate</code> directory goes to oblivion when the changes are merged to <code>develop</code> as well. All the content in it it's lost... empty, nada, nothing... because, in <code>master</code> is ignored completely.</p>

<p>So, I'm looking for a way, if possible, to avoid that issue. Boilerplate for <code>develop</code> remains as it should (90% untouched), and on <code>master</code> ignored completely, no matter the action performed on a branch. Anyway I can achieve that?</p>
","6","971392","0","0"
"62000482","5459638","2020-05-25 10:26:29","0","458","<git><gitignore>","git does not ignore files that should be excluded","<h3>Situation</h3>
<p>Using gedit 3.18.3 with Ubuntu 16.04 LTS.</p>
<p>My .git/info/exclude file is</p>
<blockquote>
<p># git ls-files --others --exclude-from=.git/info/exclude<br />
# Lines that start with '#' are comments.
# For a project mostly in C, the following would be a good set of<br />
# exclude patterns (uncomment them if you want to use them):<br />
# FILES<br />
*.[oa]<br />
*~<br />
*.log<br />
Makefile*</p>
</blockquote>
<p>So I expect that files matching the pattern <code>*~</code> are disregarded.</p>
<h3>Issue</h3>
<p>Yet, these are kept in the count</p>
<pre><code>git status 

On branch v2
Your branch is up-to-date with 'origin/v2'.
Changes not staged for commit:
(use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
(use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)

modified:   README.md
modified:   README.md~

no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)
</code></pre>
<p>This behaviour is confirmed by</p>
<pre><code>git ls-files --cached --ignored --exclude-standard
</code></pre>
<p>as suggested in <a href=""https://stackoverflow.com/q/33264274"">Git: List files that should be ignored, but are not</a></p>
<h3>Question</h3>
<p>I would not want that <code>README.md~</code> or any other <code>*~</code> file shows up in the list.<br />
This used to work like a breeze, but I cannot pin down a moment where it went wrong.<br />
Any tips and workarounds please?</p>
","1","5459638","",""
"6366547","268336","2011-06-16 02:37:45","1","1101","<git><gitignore>","Why don't these gitignore entries work?","<p>This is my folder struction:</p>

<ul>
<li>Root
<ul>
<li>ProgramName
<ul>
<li>bin
<ul>
<li>Debug
<ul>
<li>Backups
<ul>
<li>Backup (This folder contains various text files)</li>
</ul></li>
</ul></li>
</ul></li>
</ul></li>
</ul></li>
</ul>

<p>I want to ignore the Backups folder and all of it's files, subfolders, and files in those subfolders.</p>

<p>I don't want to use <code>Backups/</code> because if I understand correctly that would match all folders anywhere under the Root directory named Backups.</p>

<p>Right now I have: <code>Debug/Backup</code> in my exclude file, but that's not working.</p>
","3","268336","",""
"24677866","2192660","2014-07-10 13:30:36","67","33466","<git><gitignore>","git ignore all files except one extension and folder structure","<p>What I want is to ignore all kind of files except the .php ones, but with this .gitignore I'm also ignoring folders...</p>
<pre><code>#ignore all kind of files
*
#except php files
!*.php
</code></pre>
<p>Is there a way to tell git to accept my project folder structure while keeping the track only of the .php files?</p>
<p>It seems like now I can't add folders to my repo:</p>
<pre><code>vivo@vivoPC:~/workspace/motor$ git add my_folder/
The following paths are ignored by one of your .gitignore files:
my_folder
Use -f if you really want to add them.
fatal: no files added
</code></pre>
","5","2192660","0","0"
"6380196","132366","2011-06-17 00:35:14","80","98551","<git><gitignore>",".gitignore does not work - file is still being tracked","<p>I've a <code>.gitignore</code> file at the root of my repo. The <code>.gitignore</code> file has the following pattern to exclude the compiled Python files and that is the only line in the file.</p>

<pre><code>*.pyc
</code></pre>

<p>Now when i do the following at the root of the repo.</p>

<pre><code>git init
git add . 
git status 
</code></pre>

<p>It shows that it still tracks the <code>.pyc</code> file and tries to add it as new file. See output below.</p>

<p>System info: Windows 7, cygwin </p>

<p>Note: This issue is CLEARLY not about the ignored file being already tracked. I also tried both DOS- and Unix-style line endings on the <code>.gitignore</code> file. </p>

<p><code>git status</code> gives:</p>

<pre><code># On branch master
#
# Initial commit
#
# Changes to be committed:
#   (use ""git rm --cached &lt;file&gt;..."" to unstage)
#
#   new file:   .gitignore
#   new file:   feedapp/__init__.py
#   new file:   feedapp/appconfig.py
#   new file:   feedapp/appconfig.pyc
</code></pre>

<p>How do I troubleshoot this further? </p>
","7","132366","0","0"
"24874978","1024057","2014-07-21 21:19:05","15","16331","<git><gitignore>",".gitignore does not ignore one folder","<p>I've got the following in my .gitignore:</p>

<pre><code>#built application files
*.apk
*.ap_
# files for the dex VM
*.dex
# Java class files
*.class
# generated files
bin/
gen/
# Local configuration file (sdk path, etc)
local.properties
# Windows thumbnail db
Thumbs.db
# OSX files
.DS_Store
# Eclipse project files
.classpath
.project
# Android Studio
.idea
build/
cache.properties.lock
.idea/workspace.xml
*.iws
.gradle/
**/.gradle/
</code></pre>

<p>However, whenever I make changes to my app, git includes files like <code>.gradle/1.12/taskArtifacts/cache.properties.lock</code> to the commit.</p>

<p>What's wrong here? Why does it work with the folder <code>build/</code> but not with <code>.gradle/</code>?</p>
","3","1024057","",""
"6606140","298073","2011-07-07 05:22:46","0","771","<git><filenames><gitignore><vmware-fusion>","git: exclude a directory from ""untracked files"" without removing it from the repository","<p><strong>tl;dr</strong>:
Is there a way to get Git to permanently exclude all working-copy changes in a subdirectory of a Git repository, from being listed in ""untracked files"" and ""deleted files"" in <code>git status</code> and friends, <strong>without</strong> removing them from the remote origin?</p>

<p>I'm on a system that unavoidably renames certain files, but they shouldn't be renamed on the repository. I'm not working with those files, but they're cluttering up my <code>git status</code> and <code>git diff</code> output. Adding them to <code>.gitignore</code> solves the untracked files problem, but it still says the files were deleted.</p>

<p><em>Long-winded explanation for the curious, and to avoid people saying I shouldn't be asking this question:</em></p>

<p>My working copy is in a shared folder that I'm trying to access from both a VM (Ubuntu in VMware Fusion) and the host (Mac OS X); I did the clone on the VM side. The VM's shared folders feature replaces <code>:</code> with <code>&amp;%</code> in any filename as soon as it's written to the filesystem, and that's how OS X sees it. The problem is, my workplace's Git repository has <em>hundreds</em> of mission-critical files with <code>:</code> in the filename, all in one big directory. I have no need to edit or use these files or the directory they're all in, but they show up as deletions and untracked files any time I want to use GitX or the command line utilities from the Mac side (which would allow me to do development without using up all my RAM for the VM,). Other than that, git on the Mac sees my other changes correctly, and it would work perfectly except for this one directory. I can't rename the files back to colons, since that's illegal on OS X (and breaks <code>ls</code> if you try to <code>mv</code> it, FWIW). Any other solution beside the one I mentioned is welcome! Thanks!</p>
","4","298073","0","0"
"24891065","1072626","2014-07-22 15:08:43","1","108","<git><visual-studio><typescript><gitignore>","Include certain files with extention X only when in folders named Y: Ignore TypeScript generated JavaScript files in git","<p>I inherited code for a project in a zip file and my first step is to try to get it into a SCM system.  The code is developed in Visual Studio and utilizes NuGet and TypeScript.</p>

<p>The TypeScript compiler generates <code>*.js</code> and <code>*.js.map</code> files that I do not want to track.  As the project exclusively uses TypeScript I would like to generally exclude all <code>*.js</code> fies.</p>

<p>However, 3rd party JavaScript libraries that NuGet puts within folders called <code>Scripts</code> must still be included.</p>

<p>I tried the following in the repository's <code>.gitignore</code></p>

<pre class=""lang-sh prettyprint-override""><code># Exclude JavaScript other than from NuGet packages
# This is a TypeScript project so JavaScript should not be used
*.js
*.js.map
!Scripts/*.js
</code></pre>

<p>This works in excluding all of the JavaScript files.  However, it does not include the JavaScript files in the Scripts folder.</p>

<p>Because TypeScript files are exist in many directories it is not desirable to enumerate all the directories in which to exclude the JavaScript files.</p>

<p>All the similar questions I have found have tended be in the context of ignoring all but accepted file extensions which is not what I am looking to do.</p>
","0","1072626","",""
"6612630","561624","2011-07-07 14:54:51","153","98989","<git><init><gitignore>","git add all except ignoring files in .gitignore file","<p>I am adding source control to a project that had none. The problem is that there are a lot of files to initially add to git with a <em>.gitignore</em> file, but I can't figure out how to add all files without including the files matching something in the <em>.gitignore</em> file.</p>

<pre><code>git add *
</code></pre>

<p>The above command will not add any files because it detects files which are ignored by the <em>.gitignore</em>.</p>

<pre><code>git add -f *
</code></pre>

<p>The above command will add all files including the files I wish to ignore.</p>

<p>So, how do I add all files while still adhering to the <em>.gitignore</em> file?</p>
","0","561624","0","0"
"62212861","1959054","2020-06-05 10:06:28","0","120","<git><gitignore>",".gitignore pattern to recurisvely ignore all files recursively, but not folders and not other .gitignore files","<p>At the moment, what I have might actually be what I need really, but I'm not sure if it's the most appropriate solution.</p>

<p>So let's say i have a folder called <code>logs</code>, and I want to gitignore anything in that file, APART from subfolders and their gitignore files -- the reason for this is basically that <strong>I want to have in my commit history one file in each subfolder -- just the gitignore file and nothing else, so that when i <code>git pull</code> from a server, the <code>git pull</code> creates the sub-folders as required, but doesn't create any other files in those subfolders.</strong></p>

<p>So at the moment, I have my folder <code>logs</code> and I have a subfolder in that called <code>system_logs</code> and I have a subfolder in that called <code>admin_logs</code>. I can put this .gitignore file into each level of this directory tree:</p>

<pre><code>*
!*/
!.gitignore
</code></pre>

<p>and it seems to work at ignoring everything except subfolders and their .gitignore files. In other words it seems to be working.</p>

<p>Is there a better way to do this?</p>
","1","1959054","",""
"24898258","2782583","2014-07-22 21:34:44","0","496","<regex><git><github><gitignore>","gitignore all files except all java files in subdirectory","<p>I've tried a bunch of different methods.</p>

<p>1.</p>

<pre><code>*
!.gitignore
!./src/com/AleXander/*
</code></pre>

<p>2.</p>

<pre><code>/*
!.gitignore
!src/com/Alexander/*.java
</code></pre>

<p>3.</p>

<pre><code>*
!.gitignore
!./*.java
</code></pre>

<p>as well as multiple other variations of this.  I came across <a href=""https://stackoverflow.com/questions/8850203/gitignore-match-files-with-pre-and-suffix-in-subdirectory"">this question</a> that looks like it's using Regex.  Is regex needed for this to work?  Any ideas?</p>

<p>I also tried these regex patterns but I am not the best at regex.</p>

<p>1.<strong>Logic:</strong> ignore all files ending with the file extension pattern ""java""</p>

<pre><code>*
!.gitignore
!*.[^java$]
</code></pre>

<p>2.<strong>Logic:</strong> ignore all files ending with a ""j"" followed by an ""a"" with anything else after that.</p>

<pre><code> *
 !.gitignore
 !*.j[^a]*
</code></pre>
","0","2782583","",""
"24897273","2222946","2014-07-22 20:32:45","0","2098","<java><git><netbeans><gitignore>","Github for Windows ignoring .gitignore file","<p>I'm trying to get my .gitignore to ignore everything except my src files in my NetBeans project. My gitignore looks like this</p>

<pre><code>nbproject/private/
build/
nbbuild/
dist/
nbdist/
nbactions.xml
nb-configuration.xml
</code></pre>

<p>and its placed directly in the root directory of the netbeans project. Whenever i build/run in NetBeans, it always says theres uncommitted changes in Netbeans Project/build/built-jar.properties and Netbeans Project/dist/CodeEditor.jar, both of which should be ignored. (along with other .class files if i modify the source code). How do i get Github for Windows to ignore these files?</p>

<p>the git repo is located here <a href=""https://github.com/Arhowk/fJass"" rel=""nofollow"">https://github.com/Arhowk/fJass</a></p>
","2","2222946","0","0"
"62214553","11353746","2020-06-05 11:43:10","0","115","<django><git><gitlab><gitignore>","Push file create by Django than need to be ignore by git","<p>I have make a first push to Gitlab with git, but the.gitignore wasn't completely configure.
I configure the .gitignore like this now :</p>

<pre><code># Environments
env/
# Byte-compiled / optimized / DLL files
poc_project/poc_project/__pycache__
poc_project/pollution/__pycache__
__pycache__/
*.py[cod]
*$py.class
# Django stuff:
*.log
local_settings.py
db.sqlite3
db.sqlite3-journal
</code></pre>

<p>The <code>env</code>/ and <code>poc_project/poc_project/__pycache__</code> aren't push but the <code>db.sqlite3</code> and <code>poc_project/pollution/__pycache__</code> are already on the distant repository (Gitlab).
I use this <a href=""https://github.com/github/gitignore/blob/master/Python.gitignore"" rel=""nofollow noreferrer"">https://github.com/github/gitignore/blob/master/Python.gitignore</a> for configure my .gitignore because I use django. My teammate will soon start working on the project.</p>

<p>It's a problem to have <em>pycache</em> file and <em>db.sqlite3</em> for team work on distant repository with Django?
If yes how can I delete these files correctly from gitlab repository ?</p>
","2","11353746","",""
"6626136","561624","2011-07-08 14:44:59","73","27560","<git><gitignore>","Best Practice for Adding .gitignore to Repo","<p>What is the best practice regarding the <em>.gitignore</em> file with Git; should it be excluded from the repository or included? If it's conditional, what are the conditions for each circumstance?</p>
","0","561624","0","0"
"43555850","6932421","2017-04-22 06:04:47","66","16687","<git><gitignore>","Git .gitignore to ignore only folder in root directory","<p>Here is my .gitignore</p>

<pre><code>static/
</code></pre>

<p>and I have installed git on the folder named <code>project</code> there is a folder named <code>static</code> and another folder called <code>app</code> and inside the <code>app</code> folder, there is another folder <code>static</code>. The above <code>.gitignore</code> ignore both static folders, That is not what I want.</p>

<p>What I want is to ignore the folder <code>project/static/</code> not the folder <code>project/app/static/</code> How can I do that? </p>
","1","6932421","0","0"
"62243206","3241192","2020-06-07 09:09:22","0","710","<git><gitignore>","gitignore is ignoring vscode settings file","<p>I have a folder .vscode in the root directory of my project.</p>

<p>In my gitignore there is the following :</p>

<pre><code># IDE - VSCode
.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
</code></pre>

<p>but although this should NOT ignore settings.json, the file is ignore when I commit.</p>

<p>What is wrong in my pattern ? </p>
","6","3241192","",""
"68431156","11672917","2021-07-18 16:40:08","1","6999","<django><docker><gitignore>","Docker files to be ignored on .gitignore","<p>I'm new to docker. I've finalized dockerizing a Django projet of mine. What files and/or folders should I add to my <code>.gitginore</code> before pushing the changes to the project? Or no files should be added? I'm not talking about my <code>.dockerignore</code> file.</p>
","0","11672917","0","0"
"68433508","16434473","2021-07-18 22:25:00","0","256","<wordpress><git><gitignore>","I need gitignore to ignore everything except one folder and everything that is in it","<p>I need everything to be ignored except the /wp-content/themes/spk7sy folder itself and everything that is in it.</p>
<p>I wrote this:</p>
<pre><code>/*
!/wp-content/themes/spk7sy/
</code></pre>
<p>But for some reason all the files are not ignored.</p>
<p>Am I doing something wrong?</p>
","0","16434473","",""
"50103142","8184859","2018-04-30 14:58:02","5","6912","<c++><git><codeblocks><gitignore>","What is a good gitignore to use with Codeblocks C++ Projects?","<p>This is what I have so far:</p>

<pre><code>obj/
bin/
</code></pre>

<p>Anything else?</p>
","1","8184859","",""
"14829643","8152","2013-02-12 09:49:12","0","2439","<git><github><gitignore>",".gitignore not following some rules (GitHub)","<p>Yes, this looks like a duplicate as I can see this has been asked a few times before. But none of the other answers I saw helped me.</p>

<p>I've got an Umbraco installation that I want to store in Git (GitHub to be exact) and I obviously want to omit log files and temp files that Umbraco creates.</p>

<p>I've got the following in my .gitignore file:</p>

<pre><code>App_Data/TEMP/
App_Data/Logs/
App_Data/ClientDependency/
App_Data/Preview/
</code></pre>

<p>However, it does not work. Files in those directories still get added.</p>

<p>I've tried putting an asterisk on the end (docs say it shouldn't be needed - and it only deals with files in that directory if it is there.)</p>

<p>I've ensured there are no spaces at the end of each line.</p>

<p>I've double checked the capitalisation of the directory names.</p>

<p>I've swapped around the slashes from one way to the other.</p>

<p>If I put in the full path from the root of the repository it does work, but that's too specific. (Although I'm going to use that as a work around for the moment). I'd like to be able to reuse the .gitignore file easily if we create new Umbraco based projects.</p>

<p>Other rules that don't put in the full path (e.g. NuGet's packages folder) are being correctly processed.</p>

<pre><code>packages/
</code></pre>

<p>That rule works - And I don't really see the difference.</p>

<p>Can anyone see what I'm doing wrong here?</p>

<p><strong>UPDATE</strong></p>

<p>The full path that works is this:</p>

<pre><code>/src/Company.Client.Web/App_Data/Logs/
/src/Company.Client.Web/App_Data/TEMP/
/src/Company.Client.Web/App_Data/ClientDependency/
/src/Company.Client.Web/App_Data/Preview/
</code></pre>

<p>(I've obfuscated a bit of it, but that's what is there now)</p>

<p>Here's what GitHub for Windows is showing:
<img src=""https://i.stack.imgur.com/1SFmh.png"" alt=""Here&#39;s what GitHub for Windows is showing""></p>

<p><strong>Update 2</strong></p>

<p>The .git folder is at the root of the repository, so <code>/</code>. In other words <code>D:\github\RepositoryName\.git\</code>, for comparison the <code>src</code> folder is <code>D:\github\RepositoryName\src\</code></p>
","7","8152","",""
"4148199","494125","2010-11-10 19:20:54","3","206","<git><gitignore>","have a new .gitignore tell me if any file already matches tracked files","<p>is there a way to parse a .gitignore and tell me if i already have some files that match the ignores so that i know to remove them or change my .gitignore?</p>

<p>example is that i have git tracking my <code>imgs</code> directory, and i wish to ignore all of windows <code>Thumbs.db</code>, and also tell me if I have any left over in my repository being tracked so that i can remove them.</p>
","0","494125","0","0"
"68439298","1345089","2021-07-19 10:54:17","1","600","<git><intellij-idea><phpstorm><gitignore>","PhpStorm - ignore .gitignore file","<p>In PhpStorm after I did <code>npm install</code>, a couple of files appeared as unversioned. I added them to <code>.gitignore</code> as I don't want to work with them.</p>
<p>But now I have under default changelist the <code>.gitignore</code> file and also <code>package-lock.json</code>.</p>
<p>I am not able to remove them from there neither to ignore them.</p>
<p>I have found one solution, to mark those files as a plain text, they will be probably ignored then, however not sure if this is the best solution...</p>
","4","1345089","",""
"32282279","5278583","2015-08-29 02:58:06","4","292","<git><gitignore><cloud9-ide>","Cloud9 IDE git setup","<p>I use Cloud9 as my IDE and want to set up git. 
When I type  $ git config -l
it shows: </p>

<pre><code>core.editor=nano
core.whitespace=off
core.excludesfile=~/.gitignore
core.excludesfile=/home/ubuntu/
advice.statusuoption=false
color.ui=true
push.default=simple
</code></pre>

<p>then I type $ git config --global core.excludesfile
it shows </p>

<pre><code>/home/ubuntu/
</code></pre>

<p>then under my .git folder, I type $ git status. it always shows</p>

<pre><code>fatal: cannot use /home/ubuntu/ as an exclude file
</code></pre>

<p>Could anyone help me solve this question?</p>

<p>Thanks in advance!</p>
","0","5278583","",""
"14835625","1002758","2013-02-12 15:11:34","-1","71","<git><drupal-7><core><gitignore>","drupal 7 and git - only upate the site files","<p>I am using git to update my d7 site. I only really want to add the /sites folder and the .htaccess I suppose and leave all the core drupal files. Is there a way to do this?</p>

<p>Thanks</p>
","5","1002758","",""
"41680173","6827096","2017-01-16 15:52:07","1","425","<git><gitignore>","files from folder excluded in .gitignore appears in commits","<p>my <code>.gitignore</code> file contain <code>/var/</code> folder: </p>

<pre><code>/.idea
/media/
/var/
/errors/
</code></pre>

<p>but files from <code>var/cache/</code> and <code>/.idea</code> appears regularly on new commits.</p>

<p>Yes, I did <code>git init</code> for entire project at the beginning, but also did <code>git rm -r --cached var/</code> as suggested in <a href=""https://stackoverflow.com/a/1330097/6827096"">https://stackoverflow.com/a/1330097/6827096</a> but new files still appears.
<a href=""https://i.stack.imgur.com/kZLFD.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/kZLFD.jpg"" alt=""enter image description here""></a></p>
","3","6827096","",""
"60409512","11653374","2020-02-26 08:18:32","0","414","<git><github><gitignore>","How can I stop pushing files with bin and npy extensions using gitignore?","<p>I have two heavy files <code>weights.bin</code> and <code>perf.npy</code>, like other files to be ignored, I added the following to my <code>gitignore</code> file:</p>
<blockquote>
<p>*.bin</p>
<p>*.npy</p>
</blockquote>
<p>However, when I try to push them, it still appears on my github? Could you help me with that?</p>
","1","11653374","",""
"15515729","96140","2013-03-20 05:00:46","91","84720","<git><gitignore>","git repository ignoring all .dlls","<p>Title says it all. I am trying to add my NuGet packages to the repository. Everything but the .dll files are being detected. </p>

<p>The gitignore file contains no references to *.dll. The .dll files don't get recognized when located anywhere in the entire repository. info/exclude is also empty.</p>

<p>I have also cloned the repository (file-system to file-system as opposed from remote to file-sysytem) with no luck. This issue also happens on two different computers.</p>

<p>I could add the .dll files manually, but they should be tracked. Why are they not being tracked?</p>
","3","96140","0","0"
"50358631","","2018-05-15 20:23:52","0","379","<npm><tar><gitignore><npmignore>","Map .gitignore / .npmignore to tar exclusion","<p>Say I have a .gitignore or .npmignore file with the following contents:</p>

<pre><code>logs
*.sh
*.log
</code></pre>

<p>not that .npmignore files are designed to be interpreted just like .gitignore files.</p>

<p><strong>My question is</strong> - how can I use the contents of a standard .npmignore / .gitignore file and map them to <code>--exclude</code> options for a tar command?</p>

<p>basically I need to do something like this:</p>

<pre><code>find -not -path (whatever is in gitignore) | tar
</code></pre>

<p>or just this:</p>

<pre><code>tar --exclude=""whatever matches gitignore/npmignore""
</code></pre>

<p>the latter just seems fine, but how can I map what's in .gitignore / .npmignore to the command line? Is there some package that can do that?</p>
","0","","",""
"15518053","116859","2013-03-20 07:51:58","3","2121","<git><github><gitignore>",".gitignore still ignoring removed items","<p>I have a standard .gitignore file that I include in every project. One of the lines in there ignores ""bin"". </p>

<p>It so happens, in this particular project, I actually <em>want</em> a /bin directory. I removed ""bin"" from .gitignore, but git still won't let me add the /bin directory. It still thinks it should ignore it, even though the string has been removed from .gitignore.</p>

<p>All the answers I'm finding are about how to ignore something previously committed, but I'm not finding any info on how to add something previously ignored. </p>

<p>So: How do I tell git to unignore something previously ignored?</p>
","2","116859","",""
"32533710","2579896","2015-09-11 23:55:21","0","857","<git><gitignore>",".gitignore not ignoring at all","<p>I've created a directory called <code>Exploratory Data Analysis/Course Project 1/</code> with the file <code>household_power_consumption.txt</code> inside. I tried to push it to my git repo for this project and received a warning about the size of <code>household_power_consumption.txt</code> so I added a <code>.gitignore</code> file with this line:</p>

<pre><code>Exploratory\ Data\ Analysis/Course\ Project\ 1/household_power_consumption.txt
</code></pre>

<p>And I tried to follow the solutions posted <a href=""https://stackoverflow.com/questions/23716553/gitignore-not-ignoring-file"">here</a>, <a href=""https://stackoverflow.com/questions/11451535/gitignore-not-working"">here</a> and <a href=""https://stackoverflow.com/questions/25436312/gitignore-not-working"">here</a> but none of these works for me. I always receive the same error:</p>

<pre><code> git push origin master
Counting objects: 31, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (28/28), done.
Writing objects: 100% (31/31), 20.48 MiB | 221.00 KiB/s, done.
Total 31 (delta 6), reused 0 (delta 0)
remote: error: GH001: Large files detected.
remote: error: Trace: 491a8219bf1d3de4fd08a8e3ea253faa
remote: error: See http://git.io/iEPt8g for more information.
remote: error: File Exploratory Data Analysis/Course Project 1/household_power_consumption.txt is 126.80 MB; this exceeds GitHub's file size limit of 100.00 MB
To https://github.com/jd901215/DataScience_CourseraSpecialization.git
 ! [remote rejected] master -&gt; master (pre-receive hook declined)
error: failed to push some refs to 'https://github.com/jd901215/DataScience_CourseraSpecialization.git'
</code></pre>

<p>This is the local directory tree for my project:</p>

<pre><code>├── Exploratory Data Analysis
│   └── Course Project 1
│       └── household_power_consumption.txt
├── .git
│   ├── branches
│   ├── COMMIT_EDITMSG
│   ├── config
│   ├── description
│   ├── FETCH_HEAD
│   ├── HEAD
│   ├── hooks
│   │   ├── applypatch-msg.sample
│   │   ├── commit-msg.sample
│   │   ├── post-update.sample
│   │   ├── pre-applypatch.sample
│   │   ├── pre-commit.sample
│   │   ├── prepare-commit-msg.sample
│   │   ├── pre-push.sample
│   │   ├── pre-rebase.sample
│   │   └── update.sample
│   ├── index
│   ├── info
│   │   └── exclude
│   ├── logs
│   │   ├── HEAD
│   │   └── refs
│   │       ├── heads
│   │       │   └── master
│   │       └── remotes
│   │           └── origin
│   │               └── master
│   ├── objects
|   |   ├── (Bunch of SHA-1 checksums I guess )
│   │   ├── info
│   │   └── pack
│   ├── ORIG_HEAD
│   └── refs
│       ├── heads
│       │   └── master
│       ├── remotes
│       │   └── origin
│       │       └── master
│       └── tags
├── .gitignore
├── LICENSE
├── README.md
└── R programming 
    ├── README.md
    ├── Week 1 Programming assignment
    │   ├── complete7.R
    │   ├── complete.R
    │   ├── corr.R
    │   ├── pollutantmean.R
    │   ├── .RData
    │   ├── .Rhistory
    │   └── specdata
    ├── Week 2 Programming assignment
    │   ├── cachematrix.R
    │   └── README.md
    └── Week 4 Programming assignment
        ├── best.R
        ├── hospital-data.csv
        ├── Hospital_Revised_Flatfiles.pdf
        ├── outcome-of-care-measures.csv
        ├── .Rhistory
        └── rprog-doc-ProgAssignment3.pdf
</code></pre>

<p>Sorry for the long post but I'm trying to offer the necessary info. Thanks in advance</p>
","5","2579896","",""
"15537686","244261","2013-03-21 01:04:27","5","370","<git><gitignore>","How can I tell Git to use a different gitignore file than "".gitignore""?","<p>I can tell Git where the Git repository is with <code>--git-dir</code>. I can tell Git where the working tree is with <code>--work-tree</code>. How do I tell Git where the gitignore file is?</p>

<p>Q. Why would I want to do such a thing?</p>

<p>A. For some working trees I have two different Git repositories. One is in the standard location of <code>.git</code>. This repository I use for normal version control. The other respository is in <code>.git.sync</code>. This repository I use for periodic automatic syncing between computers. I.e., it's my own little Dropbox clone implemented with Git and a little script that runs periodically.</p>

<p>Ideally, I would be able to tell Git to use <code>.gitignore.sync</code> for the <code>.git.sync</code> repository, rather than having Git use the very same <code>.gitignore</code> that it uses for normal version control.</p>

<p>Q. Why don't I just use Dropbox?</p>

<p>A. It doesn't sync symlinks. Bad Dropbox!</p>
","0","244261","",""
"32534572","46942","2015-09-12 02:30:20","1","385","<git><gitignore>","How To Not ignore based on keyword in .gitignore","<p>Because I'm using microsoft nuget, I want to ignore all the package directories in my projects (there are a huge number of these and those files are all temporary).  Unfortunately, in the JavaScript library I also have in the same repository, I need the package directory.  So, I have in my .gitignore</p>

<pre><code>...
package
...
</code></pre>

<p>But, in my directory</p>

<pre><code>/JavaScript/package/importantfiles
</code></pre>

<p>I want to not ignore this file.</p>

<p>How can I let all ""package"" get ignored, but in the directory /JavaScript/... I want package to be included in source control?</p>
","2","46942","0","0"
"68701013","14915476","2021-08-08 12:57:01","-1","75","<git><github><gitignore>","Why git is Ignoring my .gitignore File and not hiding the folder when commit?","<p><a href=""https://i.stack.imgur.com/KJieL.png"" rel=""nofollow noreferrer"">enter image description here</a></p>
<pre><code>First Image On vscode when I've included the file in .gitignore File.
</code></pre>
<p><a href=""https://i.stack.imgur.com/umFnX.png"" rel=""nofollow noreferrer"">enter image description here</a></p>
<pre><code>Second Image on Github.When pushed the code in GitHub, though the files are displaying.
</code></pre>
<p><a href=""https://i.stack.imgur.com/miknV.png"" rel=""nofollow noreferrer"">enter image description here</a></p>
<pre><code>included folder and files in the .gitignore file.
</code></pre>
<p><strong>Is git is ignoring my .gitignore file?
If it is can someone tell me the solution?
How to fix it</strong>
<strong>Any sort of Help will be helpful. Thank you in advance</strong></p>
","0","14915476","",""
"15560540","2191690","2013-03-22 00:16:59","1","354","<git><gitignore>",".gitignore exclusion when a folder name is unknown","<p>This is my folder structure (in <code>find *</code> Unix format)</p>

<pre><code>Project
Project/hi.txt
Project/userdata
Project/userdata/username
Project/userdata/username/info.txt
Project/userdata/username/cool
Project/userdata/username/cool/foo.txt
Project/userdata/username/cool/bar.txt
</code></pre>

<p>How can I use <code>.gitignore</code> to exclude everything in the <code>userdata</code> folder <strong>except</strong> for the <code>cool</code> folder? This solution should <strong>not rely</strong> on what <code>username</code> actually is.</p>
","1","2191690","",""
"68705168","16563922","2021-08-08 22:25:28","0","57","<c><git><gitignore>","gitignore function shows no ignored files","<p>I'm a super beginner so I have no clue of anything almost - please bear with my silly questions, they are all related to the exercise you can see in the screenshot:</p>
<p><a href=""https://i.stack.imgur.com/ikJkD.png"" rel=""nofollow noreferrer"">enter image description here</a></p>
<p>so</p>
<ol>
<li>I have created a script ( git status --ignored --porcelain=v1 | grep '||' | sed 's/|| //' )</li>
<li>I run it in the terminal (ex05)</li>
<li>I see no output / no list of ignored files?</li>
</ol>
<p>What am I doing wrong? what did I miss?</p>
<p>thxxxx</p>
","0","16563922","",""
"15619219","1145388","2013-03-25 15:54:55","10","4851","<git><gitignore>","How do I tell git to ignore files that start with a tilde?","<p>My text editor creates swap files that start with a tilde.  I accidentally checked on of these into git.  How do I tell git to ignore any files like this anywhere in my project tree?</p>

<p>So I had </p>

<pre><code>/folder/another/file.txt
/folder/another/~file.txt
</code></pre>

<p>I want <code>~file.txt</code> to be ignored by git.</p>
","1","1145388","0","0"
"15646107","2027800","2013-03-26 19:47:59","45","59572","<xcode><git><gitignore>",".gitignore for everything inside the xcuserdata folder does not ignore an xcuserstate file","<p>I'm working in a Xcode project, and I'm trying to configure the .gitignore to not get anything inside the xcuserdata folder.</p>

<p>I have the following .gitignore:</p>

<pre><code># Xcode
.DS_Store
*/build/*
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3
xcuserdata
profile
*.moved-aside
DerivedData
.idea/
*.hmap
xcuserdata/*
</code></pre>

<p>but every time that I build/run the project and execute <code>git status</code>, it still shows the following midified file:</p>

<pre><code>modified: MyProject.xcodeproj/project.xcworkspace/xcuserdata/fernando.xcuserdatad/UserInterfaceState.xcuserstate
</code></pre>

<p>Does anybody have any idea what's wrong?</p>
","1","2027800","0","0"
"50387147","6629091","2018-05-17 08:49:19","0","50","<java><reactjs><gitignore>","React js in java webservice - gitIgnore","<p>i have  tough nut to crack. I need to create first UI to my webservice (springboot, jpa, rest controller, h2). I need to use react js first time in my life. I have a problem how to start with this but i found information that i need to add some elements to gitignore file. That should be some react js files i think? Maybe somebody know what should I add to gitignore. </p>
","2","6629091","",""
"16313432","764182","2013-05-01 05:54:47","51","28665","<gitignore>","Allow only some files in subdirectories with .gitignore","<p>I have dir structure like this:</p>

<pre><code>static
    admin
    ajax_upload
    books
    css
    font
    media
    robots.txt
templates
src
build
lib
</code></pre>

<p>I want to <strong>ignore</strong> following direcotories: </p>

<ul>
<li>lib</li>
<li>build</li>
<li>src</li>
<li>static</li>
</ul>

<p>I want to <strong>allow</strong> following: </p>

<ul>
<li>static/css/bootstrap-styled.css</li>
<li>static/css/main.css</li>
<li>static/css/font-*.css</li>
<li>static/font</li>
<li>static/media/default.png</li>
<li>static/robots.txt</li>
<li>templates</li>
</ul>

<p>So I use the following .gitignore:</p>

<pre><code># Ignore
/lib
/src
/build
/static/*

# Allow
!/static/css/bootstrap-styled.css
!/static/css/main.css
!/static/css/font-*.css
!/static/font
!/static/media/default.png
!/static/robots.txt
</code></pre>

<p>But it doesn't work properly. Could you help me - what I do wrong here? TIA!</p>

<p><strong>Details</strong></p>

<p>Real project structure is like this:</p>

<pre><code>static
    admin
        css
        img
        js
            admin
    ajax_upload
    books
    css
    font
    media
        uploads
            blog
            gallery
        default.png
    robots.txt
templates
src
build
lib
</code></pre>
","0","764182","0","0"
"16318032","384044","2013-05-01 12:25:21","0","2648","<git><gitignore>","""git add ."" adds ignored files","<p>I have a gitignore file </p>

<pre><code>~\.gitignore_global 
</code></pre>

<p>with several patterns.
I added a directory to my source, and run </p>

<pre><code>git add .
</code></pre>

<p>Then when I run </p>

<pre><code>git status
</code></pre>

<p>it does show me that the old ignored files are still untracked, but the new files with the  ignored extensions would be committed?</p>

<p>this is my gitignore file:</p>

<pre><code>*.obj 
*.cache
*.tlog
*.resources
*.pdb
*.bin
*.user
</code></pre>

<p>Why is it so and what can be done to automatically ignore all the files I want to ignore on this and subsequent commits.</p>

<p>=======================================================================</p>

<p>EDIT:</p>

<p>The problem solved by installing a SourceTree client, which managed all the ignore stuff for me :)</p>
","0","384044","",""
"16318973","984621","2013-05-01 13:25:48","-1","98","<git><github><gitignore><git-pull>","How to pull a directory that is in .gitignore?","<p>In the <code>.gitignore</code> is a directory that I would need to pull on my localhost. I don't see this directory in the project structure o Github, but when I try to search it, I see this directory in the <code>.gitignore</code> file.</p>

<p>I pulled the project from Github on my localhost, but this directory is missing.
How can I get that directory?</p>

<p>Thanks</p>
","0","984621","",""
"32906557","1968972","2015-10-02 11:50:09","4","401","<node.js><npm><gitignore>","How to list files in curdir not ignored by npm's .gitignore and .npmignore","<p>How to see the list of files in the current directory that will be published by <code>npm publish</code>, in other words those files that are not being ignored by ignore rules of <code>.gitignore</code> and <code>.npmignore</code>.</p>

<p>I expect a specific command line or Node.js module/function that could do the job.</p>
","2","1968972","",""
"15672613","1007758","2013-03-28 01:22:05","35","23493","<regex><git><gitignore><metacharacters>","Extended regular expressions (ERE) for .gitignore","<p>Is there a way to use extended regular expressions(ERE) in a <code>.gitignore</code> file? For example I want to use the <code>+</code> repetition character in a <code>.gitignore</code> file. Is there a way to do that?</p>
","0","1007758","0","0"
"15703731","1145674","2013-03-29 12:59:05","-1","270","<git><push><gitignore>","From where does .gitignore have effect?","<p>(Very new to git!)</p>

<p>The .gitignore indications have effect because <br/><li>the gitignore file is saved locally and it prevents the push of some special files</li>or <li>because the gitignore file is already commited/placed on server and from there it says that certain files are not allowed on the'central repository'?</p>
","0","1145674","",""
"32580244","1901352","2015-09-15 07:33:18","27","6864","<maven><gitignore><maven-archetype><maven-resources-plugin>",".gitignore file is not copied to archetype JAR - Workarounds?","<p>Currently in the maven-resources-plugin there is a bug that the .gitignore file is not copied to the archetype JAR. See this <a href=""https://issues.apache.org/jira/browse/ARCHETYPE-474"" rel=""noreferrer"">bug report</a></p>

<p>Short and simple question: are there workarounds for getting the file in the archetype?</p>

<p><strong>Edit</strong>: setting the maven-resources-plugin version to 2.6 doesn't solve my problem (like mentioned <a href=""https://stackoverflow.com/questions/7981060/maven-archetype-plugin-doesnt-let-resources-in-archetype-resources-through"">here</a>)</p>

<pre><code>&lt;build&gt;
    &lt;pluginManagement&gt;
        &lt;plugins&gt;
            &lt;plugin&gt;
                &lt;artifactId&gt;maven-resources-plugin&lt;/artifactId&gt;
                &lt;version&gt;2.6&lt;/version&gt;
            &lt;/plugin&gt;
        &lt;/plugins&gt;
    &lt;/pluginManagement&gt;
&lt;/build&gt;
</code></pre>
","3","1901352","0","0"
"15774606","540352","2013-04-02 21:20:18","1","186","<git><gitignore>","Git add . does add files listed in .gitignore","<p>I want to stop tracking certain files in Git that I've added to the <code>.gitignore</code> file.</p>

<p>I used <code>git rm --cached</code> (and also tried <code>git rm -r --cached .</code>) but after running <code>git add .</code>, a <code>git commit --dry-run</code> tells me the files in my gitignore are ""to be committed"". </p>

<p>The contents of the <code>.gitignore</code> file are:</p>

<pre><code>/source/backup/*
/site/index.php
/site/userscript.user.js
</code></pre>

<p><strong>What's wrong with this gitignore?</strong></p>

<p>Things were working just fine when the only line was <code>source/backup/*</code>. As soon as I added the second line, the <code>source/backup/*</code> files are getting committed as well.</p>
","0","540352","",""
"68749680","13604394","2021-08-11 22:37:22","0","110","<git><directory><gitignore>","How to exclude folders in range with gitignore","<p>I have this folder called <code>90</code>, but the name could change into <code>91</code>, <code>92</code> ecc.
How can i ignore all the possibile folders that will be created?</p>
<p>I tried this in the <code>.gitignore</code></p>
<pre><code>**[90-100]/
</code></pre>
<p>But it didn't seem to work. Any idea would be appreciated.</p>
","3","13604394","",""
"15806473","2199065","2013-04-04 08:46:58","0","2741","<git><gitignore>",".gitignore difference between *.class and .class","<p>What's the difference between those two lines in .gitignore file?</p>

<pre><code>*.class
.class
</code></pre>
","1","2199065","",""
"32595467","805141","2015-09-15 20:56:16","1","2863","<django><git><migration><gitignore><migrate>","Stopping ignoring migration files in git for a Django Project","<p>My team has had the Django migration files in .gitignore , and so hasn't been committing these files. Instead we've been making migrations on our production server. We discovered that this is not the recommended practice (upon encountering <a href=""https://stackoverflow.com/questions/28035119/ignoring-migration-files-in-git-in-a-django-project"">Should I be adding the Django migration files in the .gitignore file?</a> ). Would it cause problems to - at this point in time - remove migrations from .gitignore, makemigrations on the development machine, commit, push, and apply the migrations on the production server? If so, how can we get around these problems? </p>

<p>This question is motivated largely because we need to apply a custom migration that we partially wrote ourselves. (As such there's actually an additional step between making migrations on the development machine and committing them, namely adding in our custom code to the migration file).</p>
","0","805141","0","0"
"50425514","1577308","2018-05-19 12:54:39","-1","729","<git><visual-studio><visual-studio-2015><gitignore>","How to gitignore the files that get generated when you compile in Visual Stuido 2015","<p>I'm currently using the <code>.gitignore</code> file from <a href=""https://github.com/github/gitignore/blob/master/VisualStudio.gitignore"" rel=""nofollow noreferrer"">GitHub</a> but every time I compile my project in Visual Studio I get a bunch of files generated.</p>
<p>These are the files that get generated every time I compile.</p>
<blockquote>
<p>MyApp/bin/Debug/MyApp.exe</p>
<p>MyApp/bin/Debug/MyApp.exe.CodeAnalysisLog.xml</p>
<p>MyApp/bin/Debug/MyApp.pdb</p>
<p>MyApp/obj/Debug/Views/MyApp.exe</p>
<p>MyApp/obj/Debug/MyApp.g.resources</p>
<p>MyApp/obj/Debug/MyApp.pdb</p>
<p>MyApp/obj/Debug/Views/ReportsView.baml</p>
<p>MyApp/obj/Debug/Views/ReportsView.g.cs</p>
<p>MyApp/obj/Debug/Views/ReportsView.g.i.cs</p>
</blockquote>
<p>Is this normal behavior?
Is there a way to include these files in my <code>.gitignore</code> file so they get ignored when committing changes in Git?</p>
","2","1577308","",""
"15858426","2076735","2013-04-07 03:03:30","1","785","<ruby-on-rails><environment-variables><gitignore>","gitignore vs environment variables Ruby on Rails","<p>I've been using gitignore for password/key protection on my Ruby on Rails apps, so that my config files aren't committed to and publicly available for view on Github.</p>

<p>Going through the Github Developer's API tutorial suggests using environment variables to store these. If I'm not deploying is there any reason I shouldn't use gitignore to store my keys?</p>
","0","2076735","",""
"15862598","888478","2013-04-07 12:54:04","34","15965","<git><gitignore>","how to add all currently untracked files/folders to git ignore?","<p>I initialized the <code>git</code> repository and made a first commit.
Now, in this directory I run <code>./configure</code> and <code>./make all</code> so that it populates a lot of extra files/folders don't want to track.</p>

<p>What I would like to do, is to add all those untracked files once and for all to my gitignore. Is there any simple way to do it?</p>

<p>I can get rid of some unnecessary files like <code>*.o</code> or <code>*.mod</code> by specifying appropriate lines in .gitignore, but this does not solve the problem.</p>
","1","888478","0","0"
"50427342","9619662","2018-05-19 16:30:06","1","33","<git><gitignore>","How to ignore a folder named a same name, that exists in many subdirectories in git?","<p>My .gitignore contains the following line</p>

<pre><code>build/
</code></pre>

<p>And, the directory structure of my project looks like</p>

<pre><code>/myproject
   .gitignore
   /sub_prj1
      /build
   /sub_prj2
      /build
   ...
</code></pre>

<p>However after git push, the <em>build</em> directory under all <em>sub_prj1</em>, <em>sub_prj2</em>... exists in the remote.</p>

<p>How can I ignore <em>build</em> directory ?</p>
","5","9619662","",""
"50428553","","2018-05-19 19:00:35","2","254","<git><gitignore>",".gitignore is not working properly","<p>I'm running a website and I deployed Git for file versioning to keep track of edited files... I noticed that even cache files are pushed to Gitlab which I don't want.</p>

<p>I created a .gitignore file and put a line like this:</p>

<p>/app/cache/dev/smarty/compile/*</p>

<p>I added it, committed and pushed it, Life is beautiful.</p>

<p>Now, everytime I do : git status, I see these files as modified which are browsing cache</p>

<pre><code> modified:   app/cache/dev/smarty/compile/00/7c/14/007c1437400d132932e061d38915162f50f3b8d7.file.ApProductList.tpl.php
    modified:   app/cache/dev/smarty/compile/11/0e/c7/110ec72aa9921d2c382ad628bdb2f0bc5105a617.module.ps_searchbar.tpl.php
    modified:   app/cache/dev/smarty/compile/14/cf/62/14cf62b857ae9d1a45052e93e4a5f7744c543c46.file.ApMegamenu.tpl.php
    modified:   app/cache/dev/smarty/compile/15/9c/65/159c651fcb923e7ff3efcd17bc6356e6f77d1032.file.leoslideshow.tpl.php
    modified:   app/cache/dev/smarty/compile/18/2a/ea/182aea6706a2d4ae5bfc3f6d3a5b33417c49b6af.module.notification.tpl.php
    modified:   app/cache/dev/smarty/compile/24/41/64/24416476c1e4c535f73ed4c66a125c0e880f294b.file.leo_list_product_review.tpl.php
    modified:   app/cache/dev/smarty/compile/30/7d/c6/307dc6bd4724d29d1572cc301dd7148e962604ef.module.ps_emailsubscription.tpl.php
    modified:   app/cache/dev/smarty/compile/32/74/ea/3274eac0d659ac48de29176349457a485f0a7846.file.ApBlockLink.tpl.php
    modified:   app/cache/dev/smarty/compile/35/65/5e/35655e6409b6198f29dd6e732ef9598dec599880.module.ps_shoppingcart.tpl.php
    modified:   app/cache/dev/smarty/compile/38/37/a8/3837a8fdc3367fa8be15dd17f53842319311023b.file.plist1487280701.tpl.php
    modified:   app/cache/dev/smarty/compile/39/e1/75/39e175b351bd73dee402d5a54877d3be6344bbe4.file.leo_cart_button.tpl.php
    modified:   app/cache/dev/smarty/compile/3b/2b/08/3b2b08f3e7cd22b2aad86e184d6bdfdc8b3802cf.module.modal.tpl.php
    modified:   app/cache/dev/smarty/compile/43/80/cd/4380cd32bf825479f4e58e8f1a26818a8f607913.file.ApHtml.tpl.php
    modified:   app/cache/dev/smarty/compile/51/3e/9c/513e9ce13e7d8790fecede8bcf00cdc8ca0ef171.file.slidecaptcha-header.tpl.php
    modified:   app/cache/dev/smarty/compile/5a/51/17/5a5117cf6d0e1dffe864e8c6e12c7c631b3df555.file.ApColumn.tpl.php
    modified:   app/cache/dev/smarty/compile/5e/b2/05/5eb205658affb81ad209afd041b5ce7f724c9288.file.appagebuilder.tpl.php
    modified:   app/cache/dev/smarty/compile/75/be/84/75be842c1b804d7817967aceea1b33cc9f212c84.file.ApModule.tpl.php
    modified:   app/cache/dev/smarty/compile/80/5c/e2/805ce2d86f1187d802d55b829fd8b831e391ad7c.module.fly_cart.tpl.php
    modified:   app/cache/dev/smarty/compile/80/ac/9d/80ac9ddb06fe7b43ffdd2f5cd1185536480d2577.module.ps_socialfollow.tpl.php
    modified:   app/cache/dev/smarty/compile/8d/87/67/8d87672f84fea39023a026ec3e77c50d0205b84a.file.megamenu.tpl.php
    modified:   app/cache/dev/smarty/compile/94/3d/87/943d870759e124a38846d736284d297b82268471.file.ApSlideShow.tpl.php
    modified:   app/cache/dev/smarty/compile/97/9d/97/979d976ed6034e059eef22b8e951012b4262674e.file.ApManuFacturersCarousel.tpl.php
    modified:   app/cache/dev/smarty/compile/99/f1/47/99f147cdc5f8fa7776be7f182bac4542c4e7954c.file.ApProductCarousel.tpl.php
    modified:   app/cache/dev/smarty/compile/9d/30/9b/9d309b84d5f56fc52e6632a8d91893c2f5a67658.file.javascript_parameter.tpl.php
</code></pre>

<p>it's a long list, how to stop pushing those file by ignoring them, I might forgot to do something?</p>
","4","","",""
"15874816","1892580","2013-04-08 08:44:33","2","916","<git><magento><gitignore>","Creating a per module git repo environment for magento module development on one site","<p>I want to develop multiple Magento modules on one fresh install of Magento 1.7 so that each module can be pushed to an online repo and tracked individually.</p>

<p>I initially began by following <a href=""http://inchoo.net/ecommerce/magento/how-to-setup-git-for-magento-extension-development/"" rel=""nofollow"">this tutorial</a> but can't get Magento to detect the module using symlinks. I have enabled the 'follow symlinks' option in the backend. I could be struggling here due to file permissions or something but I don't mind abandoning this approach for a .gitignore ""whitelist"". Something like</p>

<pre><code> *
 !app/etc/modules/My_Module.xml
 !app/etc/code/community/My/Module
 !app/etc/code/community/My/Module/*
</code></pre>

<p>This seems a much easier approach but where do I initialise each working directory because they are all spread out from <code>./</code> I need to <code>git init</code> many repositories at the same locations each with different <code>.gitignore</code> files. I'd actually prefer the symlinking options because it gives me one place i can package my extensions from. 
Thanks in advance.</p>
","0","1892580","",""
"32609498","1773798","2015-09-16 13:07:21","13","3576","<git><gitignore>","How to tell git to ignore a certain file if and only if another file exists?","<p>I'd like to tell <code>git</code> to ignore a file named <code>foo.ext</code> if and only if there exists another file named <code>foo.txe</code>. I am almost sure that this cannot be done with the <code>.gitignore</code> syntax but there are maybe other tricky ways that I do not think of?</p>

<p>Example of use: I frequently store the figures of a LaTeX document in a sub-directory named <code>figures</code>. And I usually design my figures with Xfig. My makefile calls <code>fig2dev</code> to generate a pair of files from the <code>figures/foo.fig</code> source:</p>

<ul>
<li><code>figures/foo.pdf</code>, a PDF file for the graphics part,</li>
<li><code>figures/foo.pdf_t</code>, a LaTeX file for the text, with an <code>includegraphics</code> command to include the PDF.</li>
</ul>

<p>Because these two files are generated I'd like <code>git</code> to ignore them. I could add two simple exclude patterns to my <code>.gitignore</code> file but it also happens that some of my figures are in plain PDF, not generated from another source. And of course, I'd like <code>git</code> not to ignore these <code>figures/bar.pdf</code> files.</p>

<p>I'd like to add something like:</p>

<pre><code>/\(**\)/figures/\(*\).fig: /\1/figures/\2.pdf /\1/figures/\2.pdf_t
</code></pre>

<p>to my <code>.gitignore</code> file, meaning that any file named <code>/&lt;some_path&gt;/figures/&lt;some_name&gt;.pdf</code> or <code>/&lt;some_path&gt;/figures/&lt;some_name&gt;.pdf_t</code> shall be ignored if and only if a file named <code>/&lt;some_path&gt;/figures/&lt;some_name&gt;.fig</code> exists with the same <code>&lt;some_path&gt;</code> and <code>&lt;some_name&gt;</code>.</p>
","1","1773798","",""
"15882253","1154965","2013-04-08 14:50:08","0","504","<c#><git><github><project><gitignore>","How to ignore a specific project with .gitignore","<p>I have the following solution structure</p>

<pre><code>SlnFolder/
    Project1/
    Project2ToBeExcluded/
    Project3/
    .gitignore
</code></pre>

<p>I copied <a href=""https://github.com/github/gitignore/blob/master/VisualStudio.gitignore"" rel=""nofollow"">this</a> .gitignore as a basis. What I try to achieve is adding <code>Project2ToBeExcluded</code> to .gitignore. I tried to add <code>Project2ToBeExcluded/</code> at the very top of the .gitignore but the project and its changes still are tracked. By either the GitHub application and my VS2012 extension. How to fix this?</p>
","3","1154965","",""
"15922860","1057545","2013-04-10 10:07:03","0","109","<git><gitignore><git-commit><git-add>","git- filter certain file","<p>I have a constants file, this file is needed but every developer keeps changing this for his environment and often pushes this changed file. Is there a way that there can be a filter where in this constants file will not get added/pushed.
.gitignore does not help as we need that file in the repo with the default configuration for someone who clones the project afresh. I just want to keep it out of the developers commit changes
Asking every developer not to add this constant file in this commit and enforcing this is other dirty way</p>

<p>regards,
Harsha</p>
","0","1057545","",""
"50451365","2377343","2018-05-21 14:49:20","1","25","<git><gitignore>","How to exclude all extensions (but not PHP and JS) from .gitignore sub-folder?","<p>I want to exclude in <code>.gitignore</code>:</p>

<ul>
<li><code>admin</code> folder completely</li>
<li><code>content</code> folder completely, but only allow <code>.php</code> and <code>.js</code> extensions in there.</li>
</ul>

<p>I tried this, but it also allows in admin:</p>

<pre><code>**/admin
**/content
!.php
!.js
</code></pre>
","0","2377343","0","0"
"15998960","255627","2013-04-14 12:16:34","1","413","<git><lua><gitignore>",".gitignore for Lua projects","<p>I've noticed that GitHub <a href=""https://github.com/github/gitignore"" rel=""nofollow"">does not have a .gitignore template</a> for Lua projects.</p>

<p>Are there any specific files/file extensions which should be excluded by default from source control for a Lua project? I don't know enough about the Lua build/test/deploy cycle to know for myself yet.</p>
","2","255627","",""
"16041670","378170","2013-04-16 15:57:41","0","83","<git><ssh><gitignore>","Allow designer to upload images - restrict access trough ssh or git user or gitignore?","<p>Here's the thing:</p>

<p>We are developing and we push and commit etc.</p>

<p>Our designers just finish an image edition and it would be nice for the workflow, to allow the designers to place their images themselves.</p>

<p>All application images are on a single place.</p>

<p>I don't mind setup the designers computers in order for them to do ""git push"", however I would feel safer if, they do it, only on that specific image folder.</p>

<p>Perhaps a gitignore declaring to ignore everything except the contents of image folder?
Or more cleanly, we can setup a git user somehow ? 
Or should this be a job for the ssh access to this user?</p>

<p><strong>As anyone have done such a thing ? If so, what options do we have?</strong></p>
","0","378170","",""
"32667449","979052","2015-09-19 11:06:37","5","2801","<git><gitignore>",".gitignore How to ignore first level files in a directory but not sub-files?","<p>If you had a file structure something like?</p>

<pre><code>foo
├── bar
│   ├── file1.coffee
│   ├── file2.coffee
│   └── file3.coffee
├── file1.js
├── file2.js
└── file3.js
</code></pre>

<p>How to ignore first level files in the <code>foo</code> directory (<code>file1.js</code>, <code>file2.js</code>, <code>file3.js</code>) BUT NOT IGNORE everything in the <code>bar</code> directory (<code>file1.coffee</code>, <code>file2.coffee</code>, <code>file3.coffee</code>)</p>

<p>Providing the structure stays the same/ similar, but file names and extensions will of course be different. </p>

<p>Is it possible to do this without each directory having it's own .gitignore and whitelisting? The documentation doesn't seem to mention how to achieve this.</p>
","0","979052","0","0"
"16106497","1508798","2013-04-19 14:03:41","2","5620","<git><gitignore>","gitignore all files in all subdirectories except xml files","<p>I have a directory structure similar to this:</p>

<pre><code>root/
  .gitignore
  subdir/
    .gitignore
    subsubdir1/
      file.xml
      image.png
    subsubdir2
       file.xml
       image.jpg
</code></pre>

<p>I want to ignore all files from <code>subdir</code> except XML files.
the second <code>.gitignore</code> looks like this:</p>

<pre><code>*                   # ignore everything in this directory and its subdirectories
!*/                 # do not ignore subdirectories
!*.xml              # do not ignore xml files
!.gitignore         # and of course have this .gitignore file included too
</code></pre>

<p>according to <a href=""https://stackoverflow.com/questions/9162919/git-whitelisting-files-in-a-complex-directory-structure"">this</a> and various other posts here on SO and other sites, this should work just fine, but for some reason <code>git status</code> shows me that all the files in <code>subdir</code> folder are untracked.</p>

<p>I have used <code>git rm --cached</code> to remove all files that have been tracked before <code>.gitignore</code> was added, but that still did not do the trick.</p>

<p>Do you have any clue, what would fix this ?</p>

<p>P.S.:
In case it matters I am using git on Windows.</p>
","0","1508798","0","0"
"32748381","1949554","2015-09-23 19:55:47","3","595","<git><gitignore>","gitignore does not ignore files","<p><a href=""https://i.stack.imgur.com/rfHcz.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/rfHcz.png"" alt=""enter image description here""></a>
The image says it all. Why is git telling me that I've changed the file when I'm explicitly telling it to ignore it?</p>
","1","1949554","",""
"50485760","4480251","2018-05-23 10:17:48","-1","2529","<git><gitignore><git-assume-unchanged>","git ignore and untrack folder on remote server","<p>I know similar questions have been asked multiple times, but I cannot get it to work for my case.</p>

<p><strong>Where I am:</strong>
I have a local repo that I push to a live server, that included a /content folder and its subfolders. During production that was okay, since I could make changes to /content and just push them. But since this is a website using a CMS all changes to /content will now be produced remotely.</p>

<p><strong>Where I want to be:</strong>
I now want to 'detach' /content and its subfolders from the code base, so that I can delete the hefty /content folder locally without it being deleted on the live server. That way I still would be able to make changes in the code and push them to the server, while people are able to use the CMS to create files and changes in the /content folder.</p>

<p>So what I did so far:</p>

<ol>
<li>added the folder to .gitignore:</li>
</ol>

<p><code>/content/</code></p>

<ol start=""2"">
<li>removed the folder from the index:</li>
</ol>

<p><code>git rm -r --cached content/*</code></p>

<ol start=""3"">
<li>tried to set assume-unchanged so that on push, the files in /content would not be deleted from the live server:</li>
</ol>

<p><code>git update-index --skip-worktree</code></p>

<p>When I do this, I of course get a:</p>

<blockquote>
  <p>fatal: Unable to mark file</p>
</blockquote>

<p>Since the files are in .gitignore, and they need to stay there, such that the folder will be ignored in the future. So what do I do? </p>
","9","4480251","0","0"
"32753678","1692342","2015-09-24 05:00:19","1","82","<git><gitignore><git-pull>","Avoid pulling files which are in .gitignore","<p>I have git repository and I am collaborating with other developers. I have written added folders in my <code>.gitignore</code> file to ignore them. </p>

<p>However whenever I do <code>git add .</code> , it adds the files from these folders. Also when I pull the latest code from, using git pull it fetches the files from the folders listed in <code>gitignore</code>. Is there a way to avoid getting the latest changes for the files mentioned in <code>.gitignore</code>?</p>

<p>My <code>.gitignore</code> file is as shown below:</p>

<pre><code>/log/*
!/log/.keep
/tmp
/db
/bin
/lib
/public
/test
/vendor
/.idea/*
.idea/
</code></pre>
","0","1692342","",""
"16187468","385387","2013-04-24 08:47:35","3","337","<.net><visual-studio><git><version-control><gitignore>","Ignore certain changes for git commit","<p>Members of our team uses different version of visual studio, and VS seems to automatically update the sln file with code like:</p>

<pre><code>Microsoft Visual Studio Solution File, Format Version 11.00
# Visual C# Express 2010
</code></pre>

<p>or</p>

<pre><code>Microsoft Visual Studio Solution File, Format Version 12.00
# Visual Studio 2012
</code></pre>

<p>whenever we work with the solution. Can we configure git to ignore such changes? We're not interested in this line, but we are interested in other changes of the .sln file, e.g. adding of new csproj to the solution.</p>
","0","385387","",""
"16204155","727184","2013-04-24 23:48:51","7","2491","<git><version-control><config><gitignore>","How to version the .git/config file?","<p>I have a .gitignore file like the following:</p>
<pre><code>.*
!.gitignore
</code></pre>
<p>And I would like to version my <code>.git/config</code> file such that when I do a <code>git pull</code> my .git/config file updates automatically.</p>
<p>How can I do this?</p>
<p>I tried something like:</p>
<pre><code>.*
!.gitignore
!.git/config
</code></pre>
<p>But this didn't work. I know if I create a link (<code>ln -s .git/config configurations/git/config</code>) I can version it, but I would like a better way to update the original one automatically.</p>
<p>I'm thinking of creating a hard link to it (<code>ln .git/config configurations/git/config configuration/git</code>), but it doesn't appear to be the best way. Is there a way to avoid this? Will Git work properly when versioning hard links?</p>
<p><strong>Edit: explaining why to do this</strong></p>
<p>The main motivation to do this is that I would like to version the home folder of a user of mine. I will use this versioning to help me on some kind of deploys. I'd like to keep all clones synchronized. Conflicts will appear just if I don't manage the things well, and I'll be taking care of this. Maybe I will be versioning another protected git files too.</p>
","2","727184","0","0"
"32794924","5292235","2015-09-26 07:53:48","8","1248","<github><gitignore>","github new repo .gitignore CSharp missing","<p>I am trying to create a new repo for my project (C#), but I can't find the CSharp language in the list of languages in .gitignore list as shown in the picture below: </p>

<p><a href=""https://i.stack.imgur.com/aCFG1.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/aCFG1.png"" alt=""enter image description here""></a></p>

<p>Any idea?</p>
","0","5292235","0","0"
"16227709","1433268","2013-04-26 02:17:05","0","331","<.htaccess><hosting><web-hosting><gitignore>","Server removing .htaccess file. Could .gitignore be responsible?","<p>I have a vps with a number of sites. One of them is having an issue where the .htaccess file is be deleted every 24hrs. I do not think it is an issue to do with the host as there are a good nuimber of similar sites with .htaccess on the same VPS.</p>

<p>Taking a look around I noticed a .gitignore file, unique to this site. To be honest I am not 100% sure what it does. Opening it I saw:</p>

<pre><code># ignore any files beginning with .
\.*

# except do not ignore .gitignore
!.gitignore
</code></pre>

<p>Could this be affecting my .htaccess file?</p>
","0","1433268","",""
"16244969","234593","2013-04-26 20:47:17","238","97353","<git><gitignore><ignore>","How to tell git to ignore individual lines, i.e. gitignore for specific lines of code","<p><code>.gitignore</code> can ignore whole files, but is there a way to ignore specific lines of code while coding?</p>

<p>I frequently and repeatedly add the same debug lines in a project, only to have to remember to remove them before committing. I'd like to just keep the lines in the code and have git disregard them.</p>
","8","234593","0","0"
"16267520","1359785","2013-04-28 20:32:32","1","321","<blogs><jekyll><gitignore><jekyll-bootstrap>","Can I put the auto directory in my .gitignore for my Jekyll Bootstrap blog?","<p>So I am using <a href=""http://jekyllbootstrap.com/"" rel=""nofollow""><strong>Jekyll Bootstrap</strong></a>, which is also <a href=""https://github.com/plusjade/jekyll-bootstrap"" rel=""nofollow""><strong>available on GitHub</strong></a>, in order to build <a href=""http://coryg89.github.io"" rel=""nofollow""><strong>my blog</strong></a> (which is currently just full of filler content for development). One thing I noticed is that when running my local development server using the command</p>

<pre><code>$ jekyll --server --auto
</code></pre>

<p>I am able to edit my markdown content and have it auto regenerate the local site while I am changing things. As far as I can tell this does not work for my CSS or for my templates. I also noticed that when I run the local server with the <code>--auto</code> flag Jekyll creates a directory called <code>auto</code> which stores what appears to be a static copy of my site's content. Jekyll-bootstrap comes with it's own .gitignore file set up for you which I assumed contained the <code>auto</code> directory. I see no reason to store this auto-regenerated content in the <a href=""https://github.com/CoryG89/coryg89.github.com"" rel=""nofollow""><strong>GitHub repository for my site</strong></a>, however, when I made a commit I noticed it added the entire auto directory. I opened up the .gitignore file and this is what it contains:</p>

<pre><code>_site/*
_theme_packages/*

Thumbs.db
.DS_Store

!.gitkeep

.rbenv-version
.rvmrc
</code></pre>

<p>I am very new to Jekyll and Jekyll Bootstrap, and a little new to git. I am not sure if there is a reason why they wouldn't have an entry to ignore the auto directory. I was figuring I should add an entry for <code>auto/*</code>. Is there a reason I shouldn't do this? As far as I can tell there is no use for the auto directory for anyone that either downloading the site from the web or from its git repository?</p>
","0","1359785","",""
"16290054","854987","2013-04-29 23:48:02","17","22124","<gitignore><git-tower>","Ignoring .DS_Store in a gitignore file using Tower","<p>I have a new repo and before I perform the first commit I'd like to ignore .DS_Store files.</p>

<p>I've tried adding the following to the .gitignore file via Tower:</p>

<pre><code>.DS_Store
*.DS_Store
*/.DS_Store
</code></pre>

<p>But only the .DS_Store file at the root is ignored, all others are included ready for commit.</p>

<p>Is there a trick to getting these files to be ignored?</p>
","0","854987","0","0"
"32918649","1732998","2015-10-03 03:37:18","0","538","<git><github><gitignore>","Removing .gitignore files from previous commits in GitHub","<p>I recently added a file to my .gitignore, but my repository contains previous commits that include that file. Commits from here on out no longer track the ignored file thanks to using </p>

<pre><code>git rm --cached config/secrets.yml
</code></pre>

<p>Is there a quick git command that will go through all of my previous commits and remove that file from showing in my commit history? </p>
","0","1732998","",""
"16346535","500270","2013-05-02 19:50:39","45","13144","<git><gitignore>","Recursive git update-index --assume-unchanged","<p>I'm trying to run the following:</p>

<pre><code>git update-index --assume-unchanged myFolderToIgnore
</code></pre>

<p>Where <code>myFolderToIgnore</code> is a folder.  However it fails saying its ""unable to mark"" it.</p>

<p>So I tried:</p>

<pre><code>git update-index --assume-unchanged myFolderToIgnore/
</code></pre>

<p>Which GIT responds to with <code>Ignoring path myFolderToIgnore/</code> but doesn't do anything (it still sees my changes and tries to check them in).</p>

<p>In the end I had to go in and manually mark each individual file as unchanged.  What am I missing here?</p>
","2","500270","0","0"
"32923442","4606179","2015-10-03 14:00:13","0","520","<git><macos><customization><gitignore><atlassian-sourcetree>","Sourcetree custom action to edit .gitignore file (mac)","<p>My aim is to easily edit the .gitignore file corresponding to a particular git local repository (graphically).</p>

<p>I think it would be possible to add a custom action so when we right-click a repository line of the main SourceTree window, it would directly open a text editor with the corresponding repository's .gitignore file. <strong>How to add that custom action?</strong></p>

<p>In fact, i'm surprised there's not already a simple way to do that.</p>
","2","4606179","",""
"50517489","7559210","2018-05-24 20:16:37","1","66","<git><tfs><gitignore>","Can git ignore a file remotely, while including it locally?","<p>I am working on an ASP.NET project where I need to have connectionStrings to connect to databases when I am developing locally on my desktop, but do not want to check those into the tfs repository on the web.  It's easy enough to exclude the ConnectionStrings.config file by putting it in the gitignore file.  But this also keeps it from being saved in my local copy of the branch I'm working on, so every time I switch between branches locally, my config file disappears.</p>

<p>Is there some way to commit locally but ignore remotely?</p>
","0","7559210","",""
"16367575","46942","2013-05-03 21:08:03","0","142","<git><github><gitignore>","Trying to get repeating pattern in .gitignore","<p>I've got repeating sections I want to consolidate with wildcards somehow and I'm not a regex guy. I tried what I thought was obvious (replace ClassLib/bin/beta4 with /ClassLib/bin/*, etc) but id did not work.</p>

<p>Ideas?</p>

<pre><code>ClassLib/bin/beta4
DataAccess/bin/beta4
ClassLib/bin/beta4
CSSFriendly/bin/beta4
LINQToSql/bin/beta4

ClassLib/bin/beta.svcc.com
DataAccess/bin/beta.svcc.com
ClassLib/bin/beta.svcc.com
CSSFriendly/bin/beta.svcc.com
LINQToSql/bin/beta.svcc.com
</code></pre>
","3","46942","",""
"16368463","1162217","2013-05-03 22:28:19","-1","108","<git><commit><gitignore>","git cant add . or commit or whatever with buged files","<p>I saw a lot of questions in google like this but i cant figure it out what exactly to do.</p>

<p>Git status still display this files... and when i push files to remote github repo... not all files are pushed. Probably because they where in .gitignore files and now i cant push them.</p>

<p>The error:</p>

<pre><code># Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#   (commit or discard the untracked or modified content in submodules)
#
#   modified:   vendor/gedmo/doctrine-extensions (modified content)
#   modified:   vendor/gregwar/image-bundle/Gregwar/ImageBundle (modified content)
#   modified:   vendor/kriswallsmith/assetic (modified content)
#   modified:   vendor/liip/imagine-bundle/Liip/ImagineBundle (modified content)
#   modified:   vendor/lunetics/locale-bundle/Lunetics/LocaleBundle (modified content)
#   modified:   vendor/stof/doctrine-extensions-bundle/Stof/DoctrineExtensionsBundle    (modified content)
#   modified:   vendor/twig/extensions (modified content)
#   modified:   vendor/vich/uploader-bundle/Vich/UploaderBundle (modified content)
</code></pre>

<p>And yes i tried git add . AND git commit -m ""bla bla"" </p>
","0","1162217","0","0"
"32950392","4055389","2015-10-05 13:55:08","8","616","<git><gitignore>","gitignore - Ignore all file types except specified ones","<p>I only want to commit files which extension is <code>.fmb</code>, <code>.fmx</code> and <code>.pll</code>, but I can't configure <code>.gitignore</code> file to achieve this.</p>

<p>I've tried with the following: </p>

<pre><code>!.fmb
!.fmx
!.pll
</code></pre>

<p>and also with: </p>

<pre><code>!*.fmb
!*.fmx
!*.pll
</code></pre>

<p>but it doesn't work.</p>
","2","4055389","0","0"
"16383879","645460","2013-05-05 11:09:31","9","3677","<git><github><resharper><perforce><gitignore>",".gitignore alternative in Perforce","<p>We've been using github enterprise account to host a number of projects in the cloud. Now we are moving to perforce on-premises installation.</p>

<p>We are mostly developing in ASP.NET MVC + using ReSharper. With git we had a .gitignore file in the project folder that allowed us to automatically filter out folders and file types on commit, so we don't flood the repository with personal project files.</p>

<p>How do I configure Perforce so that it automatically filters _Resharper* folder during the commit? </p>
","1","645460","0","0"
"50638792","1319799","2018-06-01 08:03:58","3","3403","<git><gitignore>","Can you put .gitignore in subdirectory like config instead of root directory for structure reasons?","<p>I've ton of files that go into root folder and i'm looking to clean it up.</p>

<p>for example</p>

<pre><code>.env
.babelrc
.eslintignore
.eslintrc.json
webpack.config.js
gulpfile.js
sequelize.json

... list goes on
</code></pre>

<p>I want to move all of them in config folder, because that what they are.</p>

<p>So is it possible to have gitignore applied from sub-directory to parent.</p>

<p>It seems like every tool wants to jam  its config file into root directory</p>

<p>aws, gulp, webpack, vscode, database, react, linting...</p>
","2","1319799","",""
"33565018","5533164","2015-11-06 10:45:34","-2","673","<xcode><swift><git><github><gitignore>","Set up a SWIFT project with git (and connect it to Github)","<p>how do I correctly set up a SWIFT based project when I want to use Xcode, SWIFT and git and hook up the project with the Github repository.</p>

<p>What with and in what order I need to start? In what step do I need to add .gitignore (before I create a project in Xcode or after?) etc.?</p>
","4","5533164","",""
"17000338","2216468","2013-06-08 14:10:21","3","97","<git><gitignore><ignore>","Finding out which files are version controlled that now match the current .gitignore","<p>My organization made plenty of mistakes early on with git (storing binary objects, etc). We have re-done our .gitignore strategy to prevent binary objects (dll's, jars, zips) etc. from being committed. </p>

<p>What is the best way to identify files that are are currently version controlled, that would no longer be version controlled under the newly created .gitignore?</p>
","2","2216468","",""
"17059409","263061","2013-06-12 06:57:06","2","749","<git><gitignore><git-clean>","Why does git clean -dX not remove my ignored directory?","<p>I would like git to clean up all <strong>untracked</strong> files that I have <strong>ignored</strong>.</p>

<p>I thought that <code>git clean -dX</code> was the obvious solution, but it does nothing:</p>

<pre><code># Set up test directory
mkdir git-test &amp;&amp; cd git-test
git init &amp;&amp; touch x &amp;&amp; git add x &amp;&amp; git commit -m Initial

mkdir -p folder1/folder2/
touch    folder1/folder2/file

echo ""folder2/"" &gt;&gt; .gitignore

git clean -fdX     # Does nothing
</code></pre>

<p>Why is it not removing <code>folder1/folder2/</code>?</p>

<p><a href=""http://git-scm.com/docs/gitignore"" rel=""nofollow"">The docs say</a> that</p>

<ul>
<li><code>**/foo</code> matches file or directory <code>foo</code> anywhere, the same as pattern <code>foo</code></li>
</ul>

<p>so my <code>folder2/</code> pattern does match <code>/folder1/folder2/</code> and <code>-X</code> should clean it.</p>

<p>What's going on?</p>
","4","263061","0","0"
"17069782","827927","2013-06-12 15:44:10","2","7231","<node.js><github><gitignore><node-modules>",".gitignore and node_modules","<p>I am trying to figure out the best way to handle node_modules in git. From what I read, there are two options:</p>

<p>A. Keep all the node_modules in the git repository, together with my project. This way, a person cloning my project does not have to install any modules.</p>

<p>B. Don't keep any node_modules in the git repository, i.e., have a "".gitignore"" file that contains ""node_modules"".</p>

<p>However, in some projects, I don't see any of these two options. For example, in <a href=""https://github.com/harthur/brain"" rel=""nofollow"">this node.js project</a>, there are no node_modules, but also no .gitignore file...</p>

<p>When I fork this repo, and do <em>npm install</em>, the folder is filled with node_modules, and since there is no .gitignore, git tries to commit them...</p>

<p>What am I doing wrong?</p>
","0","827927","0","0"
"17075951","1850767","2013-06-12 21:49:00","0","417","<git><gitignore>","GIT scanning .gitignore directories","<p>I have a server setup that deploys code with a read only git user.  We just moved one of the subdirs to the fuse S3FS which is slow but perfect for our needs.  When running git pull now it is scanning this entire directory which takes about 20 minutes when it used to take a fraction of a second.</p>

<p>I had a folder named uploads/ that was in git.
I removed all files (uploads/*) from git.  Git now has an empty folder named uploads/.
The network directory is mounted on uploads/.</p>

<p>The .gitignore is:</p>

<pre><code>/uploads
/uploads/*
</code></pre>

<p>Any ideas on how to get GIT to not scan this directory?</p>
","0","1850767","",""
"33662658","5552767","2015-11-12 00:52:47","2","199","<registry><windows-10><gitignore><file-association>","How to disassociate .gitignote file type from notepad in Windows10?","<p>Well, keeping it straight, I accidentaly associated <code>.gitignore</code> to notepad.
Now it won't work.</p>

<p>I already tried some solutions that is deleting <code>.gitignore</code> folder from <code>HKEY_CLASSES_ROOT</code> and also deleted the <code>.gitignore</code> folder in</p>

<blockquote>
  <p>HKEY_CURRENT_USER\Software\Microsoft\Windows\CurrentVersion\Explorer\FileExts  </p>
</blockquote>

<p>Neither of these worked for me. I'm in windows 10.
I don't know much about registry and if my attempts to solve this problem may have a bad influence on my system.</p>
","0","5552767","0","0"
"50663338","3475422","2018-06-03 04:34:54","-1","3295","<android><git><android-studio><gitignore>","Should I .gitignore Application/build/ folder in AndroidStudio?","<p>I know that I have to <code>.gitignore</code> the <code>/build</code> folder in project root. But there is also <code>Application/build/</code> folder. Do i need to track it?</p>

<p>Update: I see there is another similar question but more general. But I don't see anyone there talking about issue like I have. It looks like if you put slash at the end it makes the difference: <code>build/</code> </p>

<p>And it looks like nobody talks there about Application/build folder. This must be new project structure because some people use /builder and it works for them. That's because they don't have Application/builder folder. I think. </p>
","2","3475422","0","0"
"33694028","903790","2015-11-13 13:38:27","3","386","<git><gitignore><git-rm>","how to remove the existing versioned file from git","<p>I want to avoid my fabfile.py from being versioned in git. </p>

<p>I did these steps: </p>

<ol>
<li>copied file to <code>fabfile.default.txt</code> file as backup</li>
<li>removed <code>fabfile.py</code></li>
<li><code>git rm --cached fabfile.py</code></li>
<li>added <code>fabfile.py</code> into <code>.gitignore</code></li>
</ol>

<p>then committed the removed file including .gitignore file. </p>

<p>but then, if I create my fabfile.py again locally, it again shows up in <code>git status</code>. why? am I missing some step here? feel so dumb right now</p>
","10","903790","",""
"33698786","4777084","2015-11-13 17:44:01","-1","447","<git><centos><gitignore>","Unable to create a .gitignore file - Centos","<p>I have created a new Repo remotely. Before I push the project to the remote repo I was wanting to create a <code>.gitignore</code> to ignore certain files. </p>

<p>The problem comes when I run: </p>

<ul>
<li><code>touch .gitignore</code> </li>
<li><code>nano .gitignore</code></li>
</ul>

<p>I add the directories I'm wanting to ignore. When I save &amp; exit, the file is non-existent. </p>

<p>How do I go about creating a <code>.gitignore</code> file? </p>
","0","4777084","",""
"17142000","1266650","2013-06-17 07:02:14","2","198","<git><git-merge><gitignore>",".gitignored some files only recently; trying to merge into a previous branch, ignored files show up as conflicts","<p>I had a branch <code>devel</code> from which I branched out <code>A</code> topic branch in the past. </p>

<p><code>devel</code> was always intended to be the parent of <code>A</code> (everything <code>devel</code> had/hadn't should reflect in <code>A</code>). After a long time, I've added some files to <code>.gitignore</code> and <a href=""https://stackoverflow.com/a/1139797/1266650"">updated the index of <code>devel</code> to reflect it.</a></p>

<p>Now I'm trying to merge <code>devel</code> back into <code>A</code> again.. to reflect those changes (<code>.gitignore</code>ed files from it) but it gives me a merge conflict in those ignored files. I don't want those ignored files in <code>A</code>. How do I tell that to git?</p>

<p>screenshot if it helps...
<img src=""https://i.stack.imgur.com/E2HEh.png"" alt=""enter image description here""></p>
","0","1266650","0","0"
"17153152","161457","2013-06-17 17:15:17","12","5716","<windows><git><nuget><gitignore>",".gitignore NuGet packages folder at any level but include .targets file at any level","<p>I'm trying to implement the workaround for the <a href=""http://blogs.msdn.com/b/dotnet/archive/2013/06/12/nuget-package-restore-issues.aspx"" rel=""noreferrer"">NuGet Package Restore Issues</a>.</p>

<p>This involves ignoring the contents of all packages folders, at any level in the hierarchy. However, .targets files (typically in subfolders of packages folders) should not be ignored.</p>

<p>For example:</p>

<pre>
.gitignore
YourProject/
  YourProject.csproj
  packages/
    repositories.config
    Microsoft.Bcl.Build.1.0.7/
      lib/
        foo.dll
      tools/
        Microsoft.Bcl.Build.targets
</pre>

<p>Should include only files:</p>

<ul>
<li>.gitignore</li>
<li>YourProject.csproj</li>
<li>Microsoft.Bcl.Build.targets</li>
</ul>

<p>Windows, git version 1.8.1.msysgit.1.</p>

<p>I have read several answers on StackOverflow, checked the man page, and tried numerous variants without success.</p>

<p>This does not work:</p>

<pre><code>packages/*
!*.targets
</code></pre>

<p>Nor this:</p>

<pre><code>packages/*
!packages/**/*.targets
</code></pre>

<p>Nor this:</p>

<pre><code>**/packages/*
!**/packages/**/*.targets
</code></pre>

<p><strong>Update:</strong></p>

<ul>
<li>This needs to work regardless of where the packages folder is at in the hierarchy.</li>
<li>It needs to ignore files under packages, subfolders, sub-subfolders, etc.</li>
<li>Other .gitignore lines, like <code>bin/</code>, must continue to work.</li>
</ul>
","2","161457","0","0"
"33713591","1077188","2015-11-14 21:29:19","1","2696","<android><git><gitignore>","git .gitignore not ignoring previously tracked files","<p>I have an Android studio project (imported from eclipse). After I did the import to Andorid studio I did an initial commit and forgot to add the new .gitignore file for Android Studio's structure. </p>

<p>Now git won't ignore the build, .gradle files etc.</p>

<p>I have tried the</p>

<pre><code>git rm -r --cached .
git add .
git commit -m ""fixed untracked files""
</code></pre>

<p>trick but still when I write git status all files appear as deleted and in github they appear as changed.</p>

<p>Below is my .gitignore</p>

<pre><code>.gradle
/local.properties
/.idea/workspace.xml
.DS_Store

# Created by http://gitignore.io

### Android ###
# built application files
*.apk
*.ap_

# files for the dex VM
*.dex

# Java class files
*.class

# generated files
bin/
gen/

# Local configuration file (sdk path, etc)
local.properties

# Eclipse project files
.classpath
.project    

# Proguard folder generated by Eclipse
proguard/

# Proguard folder generated by Intellij
proguard_logs/

# Intellij project files
*.iml
*.ipr
*.iws
.idea/

adt-bundle-windows-x86_64/

### Linux ###
.*
!.gitignore
!.git*
*~


### IntelliJ ###
*.iml
*.ipr
*.iws
.idea/

### Gradle ###
# Exclude Folder List #
.gradle/
build/

/*/out
/*/*/build
/*/*/production
*.iws
*.ipr
*~
*.swp
</code></pre>

<p>I can still see all files in my build and .gradle folders etc.</p>

<p>Any suggestions?</p>
","3","1077188","",""
"33737036","2416984","2015-11-16 13:53:11","0","336","<git><github><gitignore>","git push adds previously tracked, now untracked directories","<p>I am trying to:</p>

<ul>
<li>untrack two directories and their content (out/ &amp; mybuild/) that were previously tracked</li>
<li>remove them from the remote repository</li>
<li>keep a local copy of the files inside these directories</li>
</ul>

<p>Based on <a href=""https://stackoverflow.com/questions/7927230/remove-directory-from-remote-repository-after-adding-them-to-gitignore"">this post</a>, I did the following:</p>

<pre><code>git rm -r --cached out/
git rm -r --cached mybuild/
git commit -m ""Remove directories out/ &amp; mybuild/""
</code></pre>

<p>I still want an empty out/ directory in the remote repository, but do not need a mybuild/ directory. So, according to <a href=""https://stackoverflow.com/questions/115983/how-can-i-add-an-empty-directory-to-a-git-repository"">this post</a>, I added mybuild/ to .gitignore in the main folder of the repository and created a .gitignore file inside the out/ directory that contains:</p>

<pre><code>*
!.gitignore
</code></pre>

<p>and added the empty directory to the repository:</p>

<pre><code>git add -f out/.gitignore
git commit -m ""Add empty out/ directory""
</code></pre>

<p>After this, <code>git ls-files</code> does not show any files in the mybuild/ directory and only the .gitignore file is present in the out/ directory.
Pushing the last commit to the remote repository however still contains untracked files in these directories:</p>

<pre><code>[user@host]$ git push origin newbranch
Counting objects: 251, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (210/210), done.
Writing objects: 100% (214/214), 280.57 MiB | 4.20 MiB/s, done.
Total 214 (delta 93), reused 0 (delta 0)
remote: error: GH001: Large files detected.
remote: error: File mybuild/src/file1.dat is 269.99 MB; this exceeds GitHub Enterprise's file size limit of 100.00 MB
remote: error: File out/file2.dat is 188.17 MB; this exceeds GitHub Enterprise's file size limit of 100.00 MB
</code></pre>

<p>What am I missing? How could this be solved?</p>

<p><strong>Update:</strong> db48x pointed out that, as the unwanted directories are present for a long time in my repository, removing them is a non-trivial task.
Running <code>git filter-branch</code> to remove all cached files related to the out/ directory was not successful: checking out earlier commits and running <code>git ls-files</code> shows that unwanted files in out/ directory are still present.</p>

<p>Following the other solution by db48x, I checked out an earlier commit in which the large files that are obstructing a <code>git push</code> are not present (NOTE: it still contains a lot of unwanted files in the out/ &amp; mybuild/ directories - just not the files that obstruct a <code>git push</code>). Then created a new branch (named minimal) and repeated the steps explained above to remove all files in the unwanted directories. This partially solved the issue: The out/ and mybuild/ directories are effectively gone and it is possible to push the 'minimal' branch to the remote repository.</p>

<p>The only issue that remains is updating the source files of the project to the most recent version. Merging the old branch 'newbranch' and 'minimal' is successful and a <code>git ls-files</code> run shows that no files in the out/ or mybuild/ directories are tracked by Git. Yet, <code>git push origin minimal</code> now again fails due to files in the out/ and mybuild/ directories.</p>

<p>I do not have a clue about the reason of the inconsistent messages between <code>git ls-files</code> and <code>git push</code> and would appreciate directions for further diagnosing of the problem.</p>
","0","2416984","",""
"33743513","1606349","2015-11-16 19:56:11","0","32","<gitignore>","My .gitignore file is matching items that I did not expect it to match?","<p>I have a .gitignore file with the following:</p>

<p>cache/</p>

<p>resources/</p>

<p>The file correctly matches the directories in my root:</p>

<p>cache/</p>

<p>resources/</p>

<p>The files in these directories are ignored and therefore because this is a git system, the directories themselves are ignored. This is also good. </p>

<p>But it also matches a sub directory in a sibling root directory:</p>

<p>default/cms/resources/library/index.cfm</p>

<p>And ignores this path which is not good. </p>

<p>How can I rewrite the .gitignore file so that:</p>

<p>default/cms/resources/library/index.cfm</p>

<p>Is not matched?</p>

<p>And only files &amp; subdirectories inside cache/ &amp; resources/ are matched. </p>

<p>Thank you in advance for any advice you can give me. </p>
","8","1606349","",""
"69030936","1410221","2021-09-02 13:09:32","0","22","<git><gitignore>","gitignore: Are `x` and `**/x` equivalent in semantics and performance?","<p>Are <code>x</code> and <code>**/x</code> equivalent in semantics and performance, in the <code>.gitignore</code> files?</p>
<p>What about <code>/**/x</code>?</p>
","4","1410221","",""
"69030588","14359374","2021-09-02 12:47:25","2","434","<python><git><module><pip><gitignore>","What files need to be uploaded or added to the git repository if I'm making a pip module","<p>I recently made an open-source pip module and I and to publish it is PyPI. I know on the PyPI, I can directly publish the modules <code>dist/*</code> folder using <code>twine</code> but I also want to publish this module on GitHub, Gitlab &amp; My own organization's official git repo. So, I was wondering which files should I add to the <code>git</code> repository?</p>
<p><a href=""https://i.stack.imgur.com/vjW1Q.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/vjW1Q.png"" alt=""My project structure"" /></a></p>
<p><strong><code>src</code> Folder:</strong> This is the main folder of my file that I codded my python modules.</p>
<p>So on the git repository should I upload:</p>
<ol>
<li>All the files (No <strong><code>venv</code></strong> folder)</li>
<li><strong><code>dist</code></strong> Folder, <strong><code>src</code></strong> Folder, <strong><code>.gitinore</code></strong>, <strong><code>LICENSE</code></strong>, <strong><code>README.md</code></strong>, <strong><code>setup.py</code></strong></li>
<li>Option <strong>(2)</strong> without the  <strong><code>src</code></strong> Folder</li>
<li>Option <strong>(2)</strong> without the  <strong><code>dist</code></strong> Folder</li>
</ol>
","0","14359374","",""
"69033790","16816261","2021-09-02 16:11:57","-1","848","<git><gitignore>",".env.local file can not be ignored in .gitignore in Symfony 5.3","<p>I would like to ignore a file named <code>.env.local</code> file so it's not committed, because I have some local parameters in it and my team workers have their own local parameters in it. So we want only <code>.env</code> to be commited.</p>
<p>But the .env.local file can not be ignored by my .gitignore file :</p>
<pre><code>/.env.local.php
/.env.local
/.env.*.local
</code></pre>
<p>while any other files in .gitignore file is correctly ignored.</p>
","3","16816261","",""
"17262542","1309818","2013-06-23 15:56:55","0","103","<git><python-2.7><github><py2exe><gitignore>","How to add a directory which contains .pyc to git with .pyc in .gitignore?","<p>I'm using <code>py2exe</code> to build windows executable from a python script. This creates a <code>collect-2.7</code> directory which contains compiled version of all the core python files in <code>.pyc</code>. </p>

<p>I need to commit these compiled files with the <code>.exe</code> to work with. But <code>.pyc</code> is added in <code>.gitignore</code> which omits the <code>collect-2.7</code> directory.</p>

<p>How could I add the <code>collect-2.7</code> directory without removing <code>.pyc</code> in <code>.gitignore</code>?</p>
","0","1309818","",""
"17261228","877235","2013-06-23 13:31:49","1","78","<git><version-control><gitignore>","gitignore how to ignore a file and not a directory tree","<p>I have a weird behavior with my <code>.gitignore</code> file</p>

<p>My project tree looks like this</p>

<pre><code>abc
 |
 |-&gt; inc
 |-&gt; src
 |-&gt; obj---
 |        |-&gt; abc (The exeutable file)
</code></pre>

<p>I would like that the <strong>abc executable</strong> will be ignored so I added <code>abc</code> to my <code>.gitignore</code> file.
but now, the whole abc tree is ignored.</p>

<p>How can I specify that I want to ignore only a file called abc, and not a directory ?</p>

<p>p.s </p>

<p>My <code>.gitignore</code> file:</p>

<pre><code>*.so
*.o
*.a
abc
</code></pre>
","0","877235","",""
"33815879","5430979","2015-11-19 22:54:07","3","485","<git><gitignore>","Git - Where can I find the source code that implements .gitignore","<p>I'm interested in studying how Git implements .gitignore. Can some one point me at the specific source code file(s) in the git repo?  I'm looking for a 'toe-hold'.</p>
","2","5430979","",""
"33831326","2571892","2015-11-20 16:18:42","0","771","<git><file><directory><gitignore><subdirectory>",".gitignore - Ignoring directory and file is not working","<p>I follow these steps to ignore some directory in my Git :</p>

<ol>
<li>I've create a .gitignore file (outside my .git directory)</li>
<li>I've add my ignored directories and files</li>
<li>I've add my .gitignore file onto my git index by ""git add .gitignore""</li>
</ol>

<p>But when I check my status, git always want to add directories and files I want to ignore...</p>

<p><a href=""https://i.stack.imgur.com/4yxpd.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4yxpd.png"" alt=""My .git and .gitignore location""></a></p>

<p>My .git and .gitignore location</p>

<p><a href=""https://i.stack.imgur.com/TEOwK.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/TEOwK.png"" alt=""The file and directories I&#39;d like to ignore""></a></p>

<p>The file and directories I'd like to ignore, but which are not ignored by git</p>

<p>Can you help me to resolve this problem please ?</p>
","6","2571892","",""
"50711918","3184454","2018-06-06 03:38:43","1","48","<github><gitignore>","Does this .gitignore laravel makes sense when you're working with a team?","<p>I start using <code>Github</code> 2 days ago, and it's in a private repository.</p>

<p>So I with my friend (I appointed him as Collaborator) working a project together, but what is the best setting for <code>.gitignore</code> file when you're working with a team?<br>
Because what I'm thinking is, if <code>Github</code> ignore file such as <code>.env</code> (the app key) &amp; <code>/vendor</code>, the program wouldn't work as what it must to be right?</p>

<p>for now I using the default setting of <code>.gitignore</code> files.</p>

<pre><code>/node_modules
/public/hot
/public/storage
/storage/*.key
/vendor
/.idea
/.vscode
/.vagrant
Homestead.json
Homestead.yaml
npm-debug.log
yarn-error.log
.env
</code></pre>

<p>Please help, I already search about it but I can't get the answer.</p>
","0","3184454","0","0"
"33847654","4360286","2015-11-21 19:30:36","1","217","<git><vim><plugins><gitignore>","gitignore for vim plugin","<p>I'm about to write my first vim plugin/script. As I like to write and simultaneously practice with Git, I need a .gitignore file specified for this issue.
Is there something like a template of a .gitignore file or do I have to write it myself? Are there any suggestions on how a proper .gitignore file for the sake of a vim plugin/script could look like?</p>

<p>Thanks in advance</p>
","4","4360286","",""
"17317945","740739","2013-06-26 10:45:21","1","534","<git><gitignore><git-push><git-commit><git-filter-branch>","Tried to remove files from git, now branches are diverged and I can't push the changes","<p>This is the first time for me using git (on bitbucket.org - if that makes any difference) and I committed a few audio files to the repo which I obviously don't want there. I added then added the paths to the .gitignore to find out that this will only ignore further changes.
So I stumbled upon <a href=""https://stackoverflow.com/questions/872565/remove-sensitive-files-and-their-commits-from-git-history"">this SO question</a> and tried to use <a href=""http://dound.com/2009/04/git-forever-remove-files-or-folders-from-history/"" rel=""nofollow noreferrer"">David Underhill's script</a> that's mentioned there.</p>

<p>However, now I'm getting the following message for <code>git commit</code>:</p>

<pre><code># On branch master
# Your branch and 'origin/master' have diverged,
# and have 10 and 10 different commits each, respectively.
#
nothing to commit (working directory clean)
</code></pre>

<p>and for <code>git push</code></p>

<pre><code> ! [rejected]        master -&gt; master (non-fast-forward)
error: failed to push some refs to 'https://bitbucket.org/abc/def'
To prevent you from losing history, non-fast-forward updates were rejected
Merge the remote changes (e.g. 'git pull') before pushing again.  See the
'Note about fast-forwards' section of 'git push --help' for details.
</code></pre>

<p>So I tried a <code>git push --force</code> which succeeded but didn't actually change anything in the repo and doesn't even show up there.</p>

<p>Do you know how I could fix this?</p>
","1","740739","",""
"17322738","987846","2013-06-26 14:20:12","0","150","<git><version-control><merge><dvcs><gitignore>","git: Cannot merge a file due to unknown .gitignore rules","<p>I was merging a file but upon finishing the 3-way merge, I saw this:</p>

<pre><code>Normal merge conflict for 'myfile.ext':
  {local}: modified file
  {remote}: modified file
Hit return to start merge resolution tool (araxis): 
The following paths are ignored by one of your .gitignore files:
Installers
Use -f if you really want to add them.
fatal: no files added
</code></pre>

<p>And <code>git status</code> gives:</p>

<pre><code>Unmerged paths:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#   (use ""git add &lt;file&gt;..."" to mark resolution)
#
#       both modified:      myfile.ext
</code></pre>

<p>I tried to find the .gitignore but it was fruitless.
Is there a way to force merge before I fix the problem .gitignore file?</p>
","0","987846","",""
"33883695","800505","2015-11-24 01:02:59","1","552","<netbeans><gitignore>","NetBeans - Display .gitignore Files in Projects/Files","<p>By default, NetBeans does not show .gitignore files inside it's Projects/Files lists.</p>

<p>How do I get them to show up?</p>

<p>I'd like to see them, since NetBeans has no issue actually editing these files.</p>
","0","800505","",""
"34612483","1523671","2016-01-05 13:06:46","3","2107","<git><laravel><composer-php><gitignore><vendor>","Git - Vendor folder modifications - .gitignore?","<p>So I have a Laravel installation in which I have modified several Laravel core files in the vendor folder (mainly mail related).</p>

<p>I want everyone who clones the repo to have the same changes obviously. What is the correct way of handling this?</p>

<ul>
<li>Remove the vendor folder from the .gitignore completely and index it all?</li>
<li>Keep the vendor folder in the .gitignore and add an exception for the specific files I have modified? (but this will then overwrite these files when a collaborator does composer install, right?)</li>
</ul>
","1","1523671","0","0"
"34618950","1988470","2016-01-05 18:39:03","18","17741","<php><git><composer-php><gitignore><vendor>","Git ignore .git folder","<p>I have a php project that uses composer for package management. One of the packages is another project belonging to the same repo. I have a need to commit my entire vendor folder, but I want to ignore the .git folder in the sub-project so that it doesn't get treated like a submodule.</p>

<p>So far I have had no success. Things I've already tried:</p>

<p>vendor/.git</p>

<p>vendor/**/.git/</p>

<p>google search</p>

<p>stack overflow search</p>

<hr>

<p>Here's what the sub-project folder looks like in GitLab. Instead of the files, it's just some kind of reference.</p>

<p><a href=""https://i.stack.imgur.com/bzPVt.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/bzPVt.png"" alt=""enter image description here""></a></p>
","8","1988470","0","0"
"50886407","653770","2018-06-16 08:51:26","1","198","<git><gitignore>","Ignoring everything in .gitignore and adding subfolder does not work","<p>I have the following .gitignore:</p>

<pre><code># Ignore everything
/*
!/.gitignore

# Readd folders:
#!/mainfolder/ # this works!
!/mainfolder/subfolder/
!/mainfolder/subfolder/*
</code></pre>

<p>I want to ignore everything, but <code>subfolder/</code>. Adding the line <code>!/mainfolder/</code> works, so that /mainfolder is not ignored anymore. But I want to add only the things below <code>subfolder/</code> and the second and third lines for <code>subfolder/</code> do not work. </p>

<p>I have found several links online suggesting this is the correct way (e.g. <a href=""https://community.atlassian.com/t5/Bitbucket-questions/Using-gitignore-to-hide-all-but-specific-directory/qaq-p/177245"" rel=""nofollow noreferrer"">this one</a>). So what am I doing wrong?!</p>

<p>EDIT: I am using Git 2.17.1 from SourceTree on Windows 10. I have tested these results from the integrated MINGW64 bash.</p>
","1","653770","0","0"
"50887691","237646","2018-06-16 11:56:07","0","87","<linux><git><gitignore>","git negation of excluding hidden directory with hidden files","<p>I manage config files in my home directory with git.
Here is the simplified content of the <code>.gitignore</code> file in my home directory.</p>

<pre><code>*
!.bashrc
!.bash_aliases
!.gitignore
</code></pre>

<p>I created a new directory in my home directory <code>.bashrc_includes</code> with several files:</p>

<pre><code>.bashrc_includes/
├── .bashrc_android
├── .bashrc_asdf
└── .bashrc_sdkman
</code></pre>

<p>I would like to add this directory with all the files inside it to the repository. I tried to add <code>!.bashrc_includes/*</code> to my <code>.gitignore</code>, but look like it is still ignored by git.</p>

<p>What is the right way to do it?</p>
","1","237646","",""
"18146027","230214","2013-08-09 11:50:41","1","246","<git><perl><gitignore>","How to convert data from .gitignore into list of regexp-es in Perl","<p>Here is my problem. I have some project in git with <code>.gitignore</code> file. I want to do some work in Perl script with the files that are not listed in <code>.gitignore</code> (actually I want to test all the files that are commited with the module <a href=""https://metacpan.org/module/Test%3a%3aWhitespaces"" rel=""nofollow"">Test::Whitespaces</a>).</p>

<p>What is the easiest way to parse <code>.gitignore</code> in Perl and to convert in to the list of regexpes so I can use that list and to pass it to <code>ignore</code> section of <a href=""https://metacpan.org/module/Test%3a%3aWhitespaces"" rel=""nofollow"">Test::Whitespaces</a>?</p>
","2","230214","0","0"
"69245033","10336803","2021-09-19 16:20:59","-2","211","<git><unity-game-engine><gitignore>","gitignore pattern to include all files of type and directories that contain them","<p>Me and a partner are working on a Unity project with a lot of scripts buried within many folders and subdirectories. It is difficult to keep track of where these scripts are located specifically, so I wondered if there is a way to have git include all files with the .cs extension and the directories containing them, while ignoring everything else.</p>
<p>Would something like **/*.cs suffice?</p>
","6","10336803","",""
"34698929","5557912","2016-01-09 21:05:04","5","1110","<git><gitignore>","git prevent deleting ingored files","<p>I need to have two different version of same file - one on local machine and one on the server (repo). </p>

<p>I have put file to <code>.gitignore</code>, but now during each push it will delete file on the repo.</p>

<p>What to do to prevent deleting file on the repo?
Thank you!</p>
","0","5557912","",""
"50902264","7044705","2018-06-18 03:13:18","2","1489","<git><gitignore><inotify><inotifywait>","inotify: Watch files changes except for files in .gitignore?","<p>I'm trying to listen file changes in a folder except .gitignore to trigger rebuild.</p>

<p>It seems like using inotifywait with --exclude option is the right way to do. Does anyone know a good way to convert .gitignore to regex such that inotifywait --exclude can accept correctly?</p>
","1","7044705","",""
"18187592","739119","2013-08-12 12:57:30","1","540","<ios><xcode><git><gitignore>","gitignore path to external framework","<p>I have an xcode ios repository which I share with another developer.</p>

<p>In this project we use a framework sdk which is not part of the system so it is referred froms some other directory on our hard disc.</p>

<p>The problem is that the path to this framework is different on each computer so I thought I can just add the path to the external framework to the gitignore file so we do not have to adjust the correct manually every time we pull from github?</p>

<p>Do you see another solution?</p>

<p>Thanks for your help!</p>
","0","739119","",""
"34705418","3972769","2016-01-10 12:36:14","2","5169","<gitignore><symfony>","Symfony3 and .gitignore","<p>I've just tried cloning a Symfony3 project from github and realised it doesn't include <code>/bin/</code> (as this was not required in Symfony2).</p>

<p>I have now updated my <code>.gitignore</code> to take out the <code>/bin/</code> and <code>/build/</code> directories to avoid this happening in future. Are there any other modifications that I'm missing that we should be making to a 'standard' Symfony3 <code>.gitignore</code> file?</p>

<p>My current content is as follows now:</p>

<pre><code>/app/config/parameters.yml
/composer.phar
/vendor/
/web/bundles/
/var/
!var/cache/.gitkeep
!var/logs/.gitkeep
!var/sessions/.gitkeep
/phpunit.xml
</code></pre>

<p>Removed entries:</p>

<pre><code>/bin/
/build/
</code></pre>
","3","3972769","",""
"18205705","190701","2013-08-13 09:43:18","0","1650","<git><gitignore>","What's a good filepath to force .gitignore not to ignore dlls in package folders?","<p>So I've got this path in my .gitignore file: <code>!packages/*/lib/*/*.dll</code> which will stop git ignoring anything that has specific versions of the dll for specific versions of .NET. However, things like Elmah don't have different versions (the path for the current version of Elmah is something like <code>packages\elmah.corelibrary.1.2.2\lib\Elmah.dll</code>).</p>

<p>I know that if I add <code>!packages/*/lib/*.dll</code> it will catch things like this, but I'd rather not add a new path for each one that is slightly different.</p>

<p>I've tried adding <code>!packages/*/lib/**/*.dll</code> but this doesn't seem to work. Any ideas?</p>
","1","190701","",""
"18240084","57590","2013-08-14 19:00:53","10","4216","<git><perforce><gitignore><ignore>","How does Perforce ignore file syntax differ from gitignore syntax?","<p>What fraction of .gitignore file syntax Perforce was able to implement?</p>

<p>The Perforce documentation for P4IGNORE shows basic ignores and un-ignores with patterns: <a href=""http://www.perforce.com/perforce/r12.1/manuals/cmdref/env.P4IGNORE.html"" rel=""noreferrer"">http://www.perforce.com/perforce/r12.1/manuals/cmdref/env.P4IGNORE.html</a></p>

<p>As best I can tell, Perforce does not support:</p>

<pre><code># Ignore file.txt, but not subdir/file.txt
/file.txt

# Ignore directories named foo, but not files named foo
foo/
</code></pre>

<p>Are there any other differences in the ignore file processing?</p>
","2","57590","0","0"
"50911411","20394","2018-06-18 14:11:07","0","1623","<bash><git><filtering><gitignore><pre-commit-hook>","From a shell script, how can I filter out files matching .gitignore?","<p>I'm maintaining some git pre-commit hooks, and I keep wanting to do something for all files that are or should be under revision control.
Knowing the project structure lets me do a decent job of this, but all the info about build system output directories, test log files, and editor droppings is already in <code>.gitignore</code>.</p>

<p>Is there a simple way to filter file paths based on whether they match a pattern in <code>.gitignore</code>.</p>

<p>Iow, what can I substitute for <code>WHAT GOES HERE</code> in</p>

<pre><code>find ""$(git rev-parse --show-toplevel)"" --my --filters | WHAT GOES HERE
</code></pre>

<p>so that I get all and only un-gitignored files that match my filters.</p>

<p>I think I can get a negative filter that I might tee into <code>comm</code> by doing</p>

<pre><code>... | xargs git ls-files -X .gitignore -i
</code></pre>

<p>but I was hoping for a single step.</p>
","1","20394","",""
"50914133","7564988","2018-06-18 16:48:26","1","1224","<git><gitignore><glob>","gitignore wildcard not working with multiple file extensions","<p>Probably a repeat, but I can't find an answer.</p>

<p>So I have a <code>.gitignore</code> file:</p>

<pre><code>transactions.csv
transactions_test.csv
**/test.gnucash*
test
**/test.gnucash.2*
</code></pre>

<p>And the following directory:</p>

<pre><code>LICENSE    test.gnucash                         transactions_test.csv
main.py    test.gnucash.20180615182021.gnucash  transactions_testPUBLIC.csv
README.md  test.gnucash.20180618121545.gnucash  translations.json
test/      transactions.csv
</code></pre>

<p>However when I run <code>git ls-tree -r master --name-only</code> I get:</p>

<pre><code>.gitignore
.vscode/settings.json
LICENSE
README.md
main.py
test.gnucash.20180615182021.gnucash
test.gnucash.20180618121545.gnucash
transactions_testPUBLIC.csv
translations.json
</code></pre>

<p>Even weirder than that, if I run this through a <a href=""http://www.globtester.com/#p=eJzT0tIvSS0u0UvPK01OLM7QM9ICADfRBeU%3D&amp;r=eJyzScksU0jOSSwutlVSstMPLU4tKtZPyU9P1S9LLarUT8xNrErVyyq20Qeqs7NBVVxaXKSfk5%2BcmKOflJmnX55fjlVVSWpxiV56XmlyYnEGpoLcxJLkDDRVekYGhhaGRkbGhkbGJqRqxeYGm6QiO4g4AFEzUMA%3D&amp;"" rel=""nofollow noreferrer"">glob tester</a>, it works correctly. (see hyperlink)</p>

<p>Any ideas as to what's happening? I'm running Git for Windows on Windows 10.</p>

<pre><code>$ git --version
git version 2.17.0.windows.1
</code></pre>
","2","7564988","",""
"18276379","106342","2013-08-16 15:01:32","3","1295","<git><gitignore>","Can't commit local changes for certain files in git","<p>I have some local changes in a file, <code>.classpath</code> with respect to the remote repository. (Yes, I know I shouldn't have the classpath files in the shared repo, but that's a different story.)</p>

<p>This proves that there are some local changes:</p>

<pre><code>$ git checkout master
error: Your local changes to the following files would be overwritten by checkout:
    PhotoFeed/.classpath
Please, commit your changes or stash them before you can switch branches.
Aborting
</code></pre>

<p>However, they don't appear in git status:</p>

<pre><code>$ git status
# On branch release-1.5.1
nothing to commit, working directory clean
</code></pre>

<p>This file is not in <em>.gitignore</em>, as this commands proves:</p>

<pre><code>$ git status --ignored
# On branch release-1.5.1
# Ignored files:
#   (use ""git add -f &lt;file&gt;..."" to include in what will be committed)
#
#   .metadata/
#   PhotoFeed/.settings/
#   PhotoFeed/bin/
</code></pre>

<p>I've also tried to remove it from the <code>assume-unchanged</code>, but it doesn't change anything:</p>

<pre><code>$ git update-index --no-assume-unchanged PhotoFeed/.classpath
</code></pre>

<p>It can't be added to the staging area. I can do <code>git add -f</code> on it, but <code>git commit</code> keeps saying that there is nothing to commit.</p>

<p>How can I make this file be ""normal"" again? I want to be able to diff on it, commit it, or maybe just <code>git rm</code> it. That is, what other git config file/flag/property may be hiding this file?</p>
","0","106342","",""
"34821020","5657340","2016-01-15 22:35:34","2","209","<android><github><android-volley><gitignore>","Android Volley : comes with a .gitignore","<p>I have just uploaded my Android Project to my github repo and noticed that the volley folder is greyed out and can't be accessed.</p>

<p>So I took a closer look at my volley folder, inside my MyApplication folder and noticed a <code>.gitignore</code> file in it. Funny thing tho I didn't create the file. Is there a reason for this? Shouldn't I get rid of this file and upload my volley folder? </p>

<p>If someone downloads my Project and tries to run it, Android Studio will probably look for a volley folder that just isn't there?.. Am I missing something or ? </p>

<p>Thank you!</p>
","0","5657340","",""
"34833762","1133802","2016-01-17 00:30:10","1","136","<git><gitignore>","gitignore everything except a symlink","<p>I have the following folder structure:</p>

<pre><code>node_modules/
  my_symlink_to_lib
  folder_a/
  folder_b/
lib/
  (some files here)
</code></pre>

<p>I want to ignore everything inside <code>node_modules</code> except the symlink:</p>

<pre><code># Doesn't work
node_modules/*
!node_modules/my_symlink_to_lib

# Doesn't work
node_modules/*
!node_modules/my_symlink_to_lib
!node_modules/my_symlink_to_lib/*
</code></pre>

<p>I have tried several other stuff, <code>node_modules/my_symlink_to_lib</code> doesn't end up in untracked files.</p>

<p>Any ideas?</p>
","2","1133802","",""
"18333958","2699667","2013-08-20 11:34:38","4","789","<git><gitignore>","How to use ""!"" in .gitignore as a string","<p>I have directory which starts with exclamation mark, like:</p>

<pre><code>!test
</code></pre>

<p>I want to add it in gitignore, but this doesn't seem to work:</p>

<pre><code>\!test
</code></pre>

<p>What is the correct way to do this?</p>
","0","2699667","",""
"34846888","4155665","2016-01-18 03:33:14","3","1147","<git><gitignore><git-index>","git - revert update-index/ignored file so I can change branch?","<p>I was trying to add an error log to my .gitignore file, and somewhere along the way read that I had to specifically untrack the file after adding it to .gitignore.  Somehow, I wound up using this to do so:</p>

<p><code>git update-index --assume-unchanged Logs/Err.log</code></p>

<p>All looked well, until I went to switch to my develop branch to merge.  I can't change branches.  I get the following error:</p>

<blockquote>
  <p>Your local changes to the following files would be overwritten by checkout: Logs/Err.log</p>
</blockquote>

<p>Yet when I run a <code>git status --s</code> from my current branch, I get ""nothing to commit, working directory clean""</p>

<p>I screwed up somewhere.  How can I ""actually"" ignore that error log?  How do I revert back to my previous non-update-index command?</p>
","2","4155665","",""
"69284027","6555141","2021-09-22 12:14:01","1","106","<git><gitignore>","Don't remove local file which is in .gitignore while change branch","<p>I have a branch named <code>A</code> and I created some files and folders which added to the <code>.gitignore</code> file before pushing them into repo.</p>
<p>I wanna keep them in my editor while I change to the new branch <code>B</code> which doesn't contain these files and folders.</p>
<p>Can anyone help me how to achieve this goal?</p>
","2","6555141","",""
"18393498","2627407","2013-08-23 02:01:06","854","452256","<git><macos><gitignore>",".gitignore all the .DS_Store files in every folder and subfolder","<p>I've added .DS_Store to the .gitignore file, but it seems that it is only ignoring .DS_Store in the root directory, not in every folder and subfolder.</p>

<p>How do I fix this?</p>
","4","2627407","0","0"
"50940444","7098552","2018-06-20 04:53:41","10","10681","<android><git><android-studio><github><gitignore>","How to add gradle.properties in git-ignore file android?","<p>I am trying to add <code>gradle.properties</code> like rest but still changes that files changes are showing in git status.</p>

<p>Is there any other way to add files in <code>git-ignore</code> using android studio.</p>
","0","7098552","0","0"
"34888229","3152072","2016-01-19 22:32:55","1","25","<git><tracking><gitignore>","git automatic files tracking","<p>I'm a new git user. 
I know about <code>.gitignore</code> files and <code>git add .</code>  command.</p>

<p>Lets assume I have many files in the project beside the ignored ones. And I want to stage SOME files each time they are changed and OTHER depending on the situation. </p>

<p>Is there an analogue of <code>.gitignore</code> file but for doing the opposite - staging files from list if they are changed? Or it violates the git idea? </p>

<p>My problem here is: it is very time consuming to add all those files I'm permanently intrested in one by one. But editing <code>.gitignore</code> each time is </p>

<ol>
<li>also time consuming </li>
<li>git will not give me a hint which of the files were changed if they are in currently in the ignore-list.</li>
</ol>

<p>P.S. I don't really want to solve it via writing bash script - I'm interested in git solutions for now.</p>
","1","3152072","0","0"
"50942102","7389235","2018-06-20 06:59:18","2","4979","<github><heroku><gitignore>","Using .gitignore on Heroku","<p>I recently added an extra file that I want hidden (<code>hushed.js</code>).  I created a <code>.gitignore</code> file and added <code>hushed.js</code> to it.  I tested it out locally, and it works perfectly.  Pushed everything up, and now it breaks in Heroku.  In the logs, Heroku says it cannot find that file (<code>Error: Cannot find module '../hushed.js'</code>).</p>

<p>My Github and Heroku accounts are connected, so I just push to Github, and it automatically gets deployed in Heroku.</p>

<p>I deleted the <code>.gitignore</code> file, and pushed it up.  The Heorku app works perfect now, but alas, the <code>hushed.js</code> is visible in Github.</p>

<p>How can I keep that file ""hidden"" on Github, but still used by Heroku?</p>
","0","7389235","",""
"34900150","476716","2016-01-20 12:30:56","11","1525","<git><gitignore>","Can git be made to ignore nested .gitignore files when computing ignores?","<p>I wanted to track some files ignored by a bunch of repos into a single repo.</p>

<p>Here's an example layout:</p>

<pre><code>.
+-- .git
+-- .idea
|-- .gitignore
|-- proj1
|   +-- .git
|   |-- .gitignore
|   |-- foo
|   |   |-- foo.iml
|   |-- bar.c
|   |-- proj1.iml
|-- proj2
    +-- .git
    |-- .gitignore
    +-- bar
    |-- foo.c
    |-- proj2.iml
</code></pre>

<p>I want:</p>

<ul>
<li>the root-level repo to include all *.iml files, while each sub-repo individually ignores them</li>
<li>all the repos to be independent (the projects don't depend on the root, and can be manipulated separately)</li>
<li>this folder structure to be maintained</li>
</ul>

<p>Any solution?</p>
","0","476716","0","0"
"4484643","472109","2010-12-19 19:13:00","4","750","<svn><git><github><gitignore>","Migration from svn to git: How do I create .gitignore files for a big repository with an unstable connection?","<p>I've just migrated a big open source project from subversion to git.</p>

<p>I am trying to do a <code>git svn create-ignore</code>, but after about 30 minutes it fails because the svn server connection sometimes fails:</p>

<blockquote>
  <p>RA layer request failed: PROPFIND of
  '...': could not connect to server
  (...).</p>
</blockquote>

<p>Now, the problem is, that if I do <code>git svn create-ignore</code> again, it restarts completely over (unlike <code>git svn fetch</code> which continues from where it broke). So it never gets past about 25% of the project. Is this fixable?</p>
","3","472109","0","0"
"18418718","2157510","2013-08-24 12:45:12","42","23130","<git><gitignore>","Git still adds and tracks folders marked in .gitignore","<p>I have a few folders in Git added in my "".gitignore"" file. They contain over 100k files. Mainly images, tmp and cache stuff. What I need is to be able to commit changes to my code with out committing what happens in those folders. </p>

<p>I thought adding them into the "".gitignore"" would do the trick but for some reason it's not working at all. I haven't been able to commit anything to the repo in days because every time I try the push command it tries sending 100k files then it freezes and times out.</p>

<pre><code>root@serveur [/home/***/***]# git push origin master
Password:
Counting objects: 110300, done.
</code></pre>

<p>How can I force Git to reindex the tree while taking in consideration the ignored folders so I can finally commit all the changes I made to the code?</p>
","0","2157510","0","0"
"34920572","1814446","2016-01-21 10:02:07","1","1037","<git><file-permissions><gitignore>","What is the correct file permissions for .gitignore","<p>I'm about to work on a new project and the <em>.gitignore</em> file is accessible to the web which is a bit of a security leak.</p>

<p>The <em>.gitignore</em> files permissions are <code>644</code> i.e. <code>-rw-r--r--</code>.  The project is on bitbucket.org, perhaps this requires the file to be accessible for the web?</p>

<p>I set up .git once before for a project with the below permisions</p>

<pre><code>drwxr-xr-x  8 www-data www-data   4096 Jan 13 09:58 .git
-r--------  1 www-data www-data    622 Dec 17 10:52 .gitignore
</code></pre>

<p>So I'm just wondering what the correct permission should be on these?  In my research I've only come across info on setting git config's fileMode &amp; permissions on hooks.</p>
","4","1814446","",""
"41923901","5857569","2017-01-29 17:36:50","2","1667","<git><sqlite><cakephp-3.0><gitignore><cakephp-debug-kit>","gitignore: ignore file not working cakephp","<p>I have .gitignore file in my project, I want to ignore debug_kit.sqlite too
I add this file in my .gitignore but still not working, when I rebase I have a conflit in this file. <code>Auto-merging tmp/debug_kit.sqlite
CONFLICT (content): Merge conflict in tmp/debug_kit.sqlite</code></p>

<p>this is .gitignore file:</p>

<pre><code># CakePHP 3
/vendor/*
/config/app.php

/tmp/cache/models/*
!/tmp/cache/models/empty
/tmp/cache/persistent/*
!/tmp/cache/persistent/empty
/tmp/cache/views/*
!/tmp/cache/views/empty
/tmp/sessions/*
!/tmp/sessions/empty
/tmp/tests/*
!/tmp/tests/empty
/tmp/debug_kit.sqlite

/logs/*
!/logs/empty

# CakePHP 2

/app/tmp/*
/app/Config/core.php
/app/Config/database.php
/vendors/*
Status API Training Shop Blog About
© 2016 GitHub, Inc. Terms P
</code></pre>
","2","5857569","",""
"4543849","83883","2010-12-28 05:19:34","1","225","<ios><xcode><git><gitignore>","Thinking of making an opensource iOS app, what should I put in my .gitingnore?","<p>I also want to distribute it in the App Store. I want to put the XCode project and all source on github. Is there anything I should exclude from the repo to avoid exposing personally identifying information? For example the <code>.pbxuser</code> file and such?</p>

<p>I expect not, but I'd like to be safe.</p>
","0","83883","0","0"
"41958712","1638590","2017-01-31 13:22:16","1","54","<git><gitignore>","same directory name as in gitignore","<p>i have a directory named target in my java project and want to ignore maven <code>target</code> directory in my <code>.gitignore</code>. But it also ignores a project directory with the same name, here is my <code>.gitignore</code></p>

<pre><code>.idea/
target/
out/
</code></pre>

<p>How can i have a directory as same as the one that is ignored.</p>
","0","1638590","",""
"18482976","243157","2013-08-28 08:31:28","65","18471","<sublimetext><gitignore><sublimetext3>","Tell Sublime Text to ignore everything in .gitignore?","<p>Vim has this <a href=""http://www.vim.org/scripts/script.php?script_id=2557"" rel=""noreferrer"">great plugin</a> to convert the current project's <code>.gitignore</code> into a syntax understandable by Vim and from there exclude all those files from opening.</p>

<p>Using Sublime Text 3's 'Go to Anything' (CMD+P), I get lots of files I'm not interested in, such as stuff under <code>.build</code> and <code>.meteor</code>.</p>

<p>Is there something similar for ST3?</p>
","4","243157","0","0"
"4809370","499646","2011-01-26 19:59:09","1","757","<git><gitignore>","How do you do negative Lookahead/Lookbehind in the gitignore files?","<p>I am using git for a project and want to exclude a specific subfolder from a path but not the siblings of that folder For example:</p>

<pre><code>/Testpath/TestpathA
/Testpath/TestpathB
/Testpath/TestpathC
</code></pre>

<p>I want to ignore TestpathA and C (and any other paths that may be siblings of those folders, but not TestpathB</p>

<p>I tried</p>

<pre><code>/Testpath/*
!/Testpath/TestpathB
</code></pre>

<p>but that didn't work.</p>

<p>I also tried
    /Testpath/(?!TestpathB)/*</p>

<p>but that didn't work either.  </p>
","1","499646","",""
"50960312","1684269","2018-06-21 04:18:22","16","3504","<git><gitignore><istanbul><nyc>","Should .nyc_output be included in .gitignore?","<p>Do we need to include .nyc_output or should we just put that directory in .gitignore</p>
","0","1684269","",""
"4858047","91970","2011-02-01 01:39:44","1001","1488208","<git><git-merge><gitignore>",".gitignore and ""The following untracked working tree files would be overwritten by checkout""","<p>So I added a folder to my .gitignore file.</p>

<p>Once I do a <code>git status</code> it tells me</p>

<pre><code># On branch latest
nothing to commit (working directory clean)
</code></pre>

<p>However, when I try to change branches I get the following:</p>

<pre><code>My-MacBook-Pro:webapp marcamillion$ git checkout develop
error: The following untracked working tree files would be overwritten by checkout:
    public/system/images/9/thumb/red-stripe.jpg
    public/system/images/9/original/red-stripe.jpg
    public/system/images/8/thumb/red-stripe-red.jpg
    public/system/images/8/original/red-stripe-red.jpg
    public/system/images/8/original/00-louis_c.k.-chewed_up-cover-2008.jpg
    public/system/images/7/thumb/red-stripe-dark.jpg
    public/system/images/7/original/red-stripe-dark.jpg
    public/system/images/7/original/DSC07833.JPG
    public/system/images/6/thumb/red-stripe-bw.jpg
    public/system/images/6/original/website-logo.png
    public/system/images/6/original/red-stripe-bw.jpg
    public/system/images/5/thumb/Guy_Waving_Jamaican_Flag.jpg
    public/system/images/5/original/logocompv-colored-squares-100px.png
    public/system/images/5/original/Guy_Waving_Jamaican_Flag.jpg
    public/system/images/4/thumb/DSC_0001.JPG
    public/system/images/4/original/logo.png
    public/system/images/4/original/DSC_0001.JPG
    public/system/images/4/original/2-up.jpg
    public/system/images/3/thumb/logo2.gif
    public/system/images/3/original/logo2.gif
    public/system/images/3/original/Guy_Waving_Jamaican_Flag.jpg
    public/system/images/3/original/11002000962.jpg
    public/system/images/2/thumb/Profile Pic.jpg
    public/system/images/2/original/Profile Pic.jpg
    public/system/images/2/original/02 Login Screen.jpg
    public/system/images/1/original/Argentina-2010-World-Cup.jpg
Please move or remove them before you can switch branches.
Aborting
</code></pre>

<p>This is what my .gitignore file looks like:</p>

<pre><code>.bundle
.DS_Store
db/*.sqlite3
log/*.log
tmp/**/*
public/system/images/*
public/system/avatars/*
</code></pre>

<p>How do I get this working so I can switch branches without deleting those files?</p>

<p>If I make a change, will it affect those files? In other words, if I came back to this branch afterwards would everything be perfect as up to my latest commit?</p>

<p>I don't want to lose those files, I just don't want them tracked.</p>
","4","91970","0","0"
"42219032","5424731","2017-02-14 06:08:49","0","229","<xcode><git><gitignore><juce>","Can't get Xcode / JUCE / .gitignore to work","<p>I'm placing my .gitignore file in the same location as the *.jucer file and the .gitignore file contains:</p>

<pre><code>./Builds/*
./JuceLibraryCode/*
</code></pre>

<p>As I only want to back up the source code folder <strong>only.</strong></p>

<p>But whenever I go to commit, tons of of folders and items inside the Builds and JuceLibraryCode folder are pre checked.  How Can I get Xcode to see this ignore file?  Is it in the wrong location since the Projucer builds the folder hierarchy in a way that Xcode doesn't understand?  I have it in the same location as my .git file.</p>

<p>Also, its worth noting that I recently allowed .git to back up everything, all of the files I'm currently trying to now ignore in those folders, but I did do a <code>git rm --cached</code> on all the files I'm trying to skip, as i read I needed to dump those before the .gitignore would be successful, but still, not luck.  Any help would be greatly appreciated.</p>
","3","5424731","",""
"23017183","1085556","2014-04-11 15:51:29","9","14527","<macos><git><gitignore>",".gitignore not working for file in subdirectory","<p>This is the content of my .gitignore file, which is at the root of my repository:</p>

<pre><code># grails stuff to ignore
target
*.iml
*.ipr
.idea
*.log
*.swp   # vi swap files
.DS_Store  # OS X Finder cache files

# cocoapods stuff to ignore
Pods
Podfile.lock
</code></pre>

<p>The <code>.DS_Store</code> file in my project root directory is correctly ignored, but git status gives:</p>

<pre><code>$ git status
On branch master
Your branch is ahead of 'origin/master' by 2 commits.
  (use ""git push"" to publish your local commits)

Untracked files:
  (use ""git add &lt;file&gt;..."" to include in what will be committed)

    ios/.DS_Store

nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p>So why is <code>ios/.DS_Store</code> not ignored?</p>

<p><em>Working on OS X 10.9.2, using the git version that Apple supplies: ""git version 1.8.5.2 (Apple Git-48)""</em></p>
","0","1085556","0","0"
"60544572","6891461","2020-03-05 11:38:49","3","2026","<python><django><git><github><gitignore>","Does not ignore db.sqlite3 file,even i specified in .gitignore in django project","<p>in my Django project,i have already .gitignore file in root as well in django project but when i fire <code>git status</code> or <code>git add .</code> It adding all <code>__pycache__</code> <code>db.sqlite3</code> in repository. i need to remove those two things from my project. please help.! </p>

<blockquote>
  <p>I tried all things like <code>*.sqlite3</code>, <code>mom/*.sqlite3</code>, <code>mom/db.sqlite3</code> and <code>db.sqlite3</code> in my both <code>.gitignore</code> file respectively. But anything not work in any directory.</p>
</blockquote>

<p>here is my main git ignore file <strong>.gitignore</strong></p>

<pre><code>media
*.sqlite3
**/__pycache__/**
*.pyc
</code></pre>

<p>here is my another git ignore file <strong>.gitignore</strong></p>

<pre><code>media
db.sqlite3
**/__pycache__/**
*.pyc
</code></pre>

<blockquote>
  <p><strong>I also tried many possibilities from online resources but anything not working</strong>   </p>
</blockquote>

<p><strong>file structure</strong></p>

<pre><code>MOM-PROJECT(local Repo)
|
├───MOM (main project)
|   ├───media
|   │   └───media
|   ├───MOM
|   │   ├───migrations
|   │   └───templatetags
|   ├───userprofile
|   │   └───migrations
|   │       └───__pycache__
|   ├───templates
|   │    ├───MOM
|   │    ├───userprofile
|   │    └───base.html
|   ├───manage.py
|   ├───requirements.txt
|   ├───db.sqlite3
|   └───.gitignore [another created after main]
|
├───README.md
├───.git
└───.gitignore [Main]
</code></pre>

<p><strong>list adding file of git add command</strong></p>

<pre><code>    modified:   .gitignore
    new file:   mom/.gitignore
    new file:   mom/db.sqlite3
    modified:   mom/meeting/admin.py
    modified:   mom/meeting/views.py
    modified:   mom/static/js/meetingtext.js
    ...
</code></pre>

<p>Umm Actually first i created <code>.gitignore</code> file in at <strong>main</strong> folder where <code>.git</code> folder(<code>in project</code>) exist. my media folder automatically removed and that worked fine. but when i added <code>mom/db.sqlite3</code> or <code>*.sqlite3</code> in main <code>.gitignore</code> it's not ignoring therefore i created <strong>another</strong> <code>.gitignore</code> file inside my project folder where <code>db.sqlite3</code> is exist. but that also not ignoring my <code>db.sqlite3</code> file </p>

<p>please suggest me what i need to do. please don't suggest me to use Smart-Git or any other GUI option. right now i m learning phase so i need all thing over commandline  </p>
","1","6891461","0","0"
"60552472","12209763","2020-03-05 19:10:49","0","573","<xcode><git><github><gitignore>","Ignore derived data in gitHub","<p>I'm creating an application in swift, when I'm trying to push the application to GitHub it seems to add ""derivedData"" etc, which I do not want to be added in the git.</p>

<p>I've tried to look around for the <code>.gitignore</code> file but cannot find it anywhere.</p>

<p>Do I've to create a new <code>.gitignore</code> file? How and where should I place this? What should be ignored? If not, where can I find the file?</p>

<p>I'm tried to look around for this for hours but still no success. So I had to ask you guys for the solution of this.</p>

<p>Thanks.</p>
","5","12209763","",""
"5127178","279024","2011-02-26 13:30:24","61","19484","<git><vim><gitignore><git-submodules>",".gitignore files added inside Git submodules","<p>I recently reorganized my dotfiles to live inside a Git repository at <code>~/Dropbox/dotfiles</code> and I'm using pathogen to bundle all Vim addons inside <code>~/Dropbox/dotfiles/home/.vim/bundle</code>. These addons were added as Git submodules.</p>

<p>Now the problem is, when I run Vim, it automatically generates the documentation for all addons and puts them inside each submodule directory. This adds untracked content to the submodules, which I'd like to avoid.</p>

<pre><code>ruby-1.8.7-p330@gs ~/Dropbox/dotfiles ‹master*› $ git st
# On branch master
# Changed but not updated:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#   (commit or discard the untracked or modified content in submodules)
#
#   modified:   home/.vim/bundle/fuzzyfinder (untracked content)
#   modified:   home/.vim/bundle/l9 (untracked content)
#   modified:   home/.vim/bundle/matchit (untracked content)
#   modified:   home/.vim/bundle/ruby (untracked content)
#   ...
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>I tried to add a <code>.gitignore</code> file to the root of my Git repository to ignore all <code>doc</code> folders inside submodules, but this doesn't seem to work:</p>

<pre><code>home/.vim/bundle/**/doc
</code></pre>

<p>My question: is there a way to ignore files and folders inside Git submodules or maybe configure Vim to create the documentation in a folder outside the Git repository?</p>

<p>EDIT: as Randy Morris pointed out, this might be a duplicate of <a href=""https://stackoverflow.com/questions/4343544/generating-tags-to-different-location-by-pathogen#4346300"">Generating tags to different location by pathogen</a></p>
","4","279024","0","0"
"42441522","719427","2017-02-24 14:47:04","1","1417","<git><github><gitignore>",".gitignore still tracking files even if I tried to ignore them, why?","<p>I have the following directory structure in a project:</p>

<pre><code>.
├── application
│   ├── ... &lt;more folders &amp; files goes here&gt;
├── config
├── cronjobs
│── ... &lt;more folders &amp; files goes here&gt;
├── oneview_symfony
│   ├── app
│   ├── bin
│   ├── src
│   ├── tests
│   ├── var
│   ├── vendor
│   └── web
├── .gitignore
</code></pre>

<p>I am trying to ignore some files and folders and this are the rules I have in my <code>.gitignore</code> file:</p>

<pre><code>oneview_symfony/app/cache/*
oneview_symfony/app/logs/*
!oneview_symfony/app/cache/.gitkeep
!oneview_symfony/app/logs/.gitkeep

oneview_symfony/app/spool/*

oneview_symfony/var/cache/*
oneview_symfony/var/logs/*
oneview_symfony/var/sessions/*
!oneview_symfony/var/cache/.gitkeep
!oneview_symfony/var/logs/.gitkeep
!oneview_symfony/var/sessions/.gitkeep

oneview_symfony/app/config/parameters.yml
oneview_symfony/app/config/parameters.ini

oneview_symfony/app/bootstrap.php.cache
oneview_symfony/var/bootstrap.php.cache
oneview_symfony/bin/*
!oneview_symfony/bin/console
!oneview_symfony/bin/symfony_requirements
oneview_symfony/vendor/*

oneview_symfony/web/bundles/
oneview_symfony/web/uploads/   
oneview_symfony/app/phpunit.xml
oneview_symfony/phpunit.xml
oneview_symfony/build/

oneview_symfony/web/css/
oneview_symfony/web/js/
</code></pre>

<p>Having the info above if I run <code>git status</code> I am still seeing files under <code>oneview_symfony/vendor/</code>, why? What I am missing?</p>

<p>Output example for the command above:</p>

<pre><code>    ...
    new file:   oneview_symfony/vendor/zendframework/zendframework1/resources/languages/pt_BR/Zend_Validate.php
    new file:   oneview_symfony/vendor/zendframework/zendframework1/resources/languages/ru/Zend_Validate.php
    new file:   oneview_symfony/vendor/zendframework/zendframework1/resources/languages/sk/Zend_Captcha.php
    new file:   oneview_symfony/vendor/zendframework/zendframework1/resources/languages/sk/Zend_Validate.php
    new file:   oneview_symfony/vendor/zendframework/zendframework1/resources/languages/sr/Zend_Validate.php
    new file:   oneview_symfony/vendor/zendframework/zendframework1/resources/languages/uk/Zend_Validate.php
    modified:   oneview_symfony/web/.htaccess

Changes not staged for commit:
  (use ""git add &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
</code></pre>
","4","719427","0","0"
"60568051","","2020-03-06 16:27:06","0","46","<git><gitignore>","Allowing exceptions with .gitignore","<p>I have two files in a config directory: local.config and local.config.example
I only want local.config.example to be in git and ignore local.config.</p>

<p>I tried the following to .gitignore, but this doesn't seem to work. What am I doing wrong?</p>

<pre><code>local.config
!local.config.example
</code></pre>
","0","","",""
"42587859","2323764","2017-03-03 20:25:28","0","60","<gitignore>","Can't except file / directory in git-ignore","<p>I added the path <code>/Documents/</code> to <code>.gitignore</code> in a previous commit. Now in an actual commit I'd like to add a specific file to the repository without using <code>git add --force [file]</code>. My <code>.gitignore</code> now contains entries as follows:</p>

<pre><code>/Documents/
!/Documents/Visual\ Studio\ 2015/Settings/CurrentSettings.vssettings
</code></pre>

<p>There aren't any paths cross referencing <code>/Documents/</code> in any way.</p>

<p>I'm not able to add the file with <code>git add [file]</code> while git responds with:</p>

<pre><code>$ git add Documents/Visual\ Studio\ 2015/Settings/CurrentSettings.vssettings
The following paths are ignored by one of your .gitignore files:
Documents/Visual Studio 2015/Settings/CurrentSettings.vssettings
Use -f if you really want to add them.
</code></pre>

<p>I'm sure I've had read the documentation precisely. But while it's not working I obviously missed something. To clarify my tries:</p>

<pre><code>/Documents/*
!/Documents/Visual\ Studio\ 2015/Settings/CurrentSettings.vssettings

Documents/
!Documents/Visual\ Studio\ 2015/Settings/CurrentSettings.vssettings

Documents/*
!Documents/Visual\ Studio\ 2015/Settings/CurrentSettings.vssettings
</code></pre>

<p>These configurations didn't work as well.</p>
","3","2323764","",""
"60706929","13070739","2020-03-16 13:30:32","1","53","<gitignore><git-add>","Git add is ignoring certain files even when .gitignore does not exist","<p>I am facing a rather strange issue with my git working folders. Here's the summary:</p>

<ul>
<li><p>I previously had a local git repo with a .gitignore file that ignored certain files/folders.</p></li>
<li><p>I deleted the repo (.git folder) and also the .gitignore file</p></li>
<li><p>Then I initialized a new one with git init in the same folder. Now when I do a ""git add ."", the previous ignore pattern is retained for some reason.</p></li>
<li><p>Even stranger,this happens with any new project following the same folder structure no matter where I place the project on my computer. </p></li>
<li><p>I tried deleting and recreating the files multiple times. I even created a new .gitignore file with a different pattern. It does not seem to have an effect except when it is set to ignore everything (with just * in the file)</p></li>
</ul>

<p>My guess is that the .gitignore pattern I deleted is somewhere saved that I dont know the location of. If anyone has faced a similar issue or know what I could be missing, I'd love to know. 
I am still new to git. Sorry if this is something very obvious that I have missed out on. </p>

<p>UPDATE:
I still have not found the reason for this behaviour but managed to reset everything by doing 'git add --force .' in the directory and then deleting the repo. Now I initialized a new repo that works as expected. </p>
","6","13070739","",""
"60712422","11405316","2020-03-16 19:54:31","0","56","<git><github><gitignore><git-bash>",".gitignore not ignoring files and folders listed","<p>so I wanted my .gitignore to ignore: /vendor #vendor folder composer.lock but when I git add and commit and even push, the file and folder still remains on git i even added another dir just to confirm , it does not still work</p>
","3","11405316","",""
"23437768","1001110","2014-05-02 22:17:30","9","5215","<symfony><gitignore>","Should Symfony's 'bin' directory be ignored by git?","<p>Running <code>composer install</code> in a Symfony Standard Edition application with a requirement for Doctrine will add a folder called 'bin'. The folder is configured in <code>composer.json</code>:</p>

<pre><code>""config"": {
    ""bin-dir"": ""bin""
}
</code></pre>

<p>The <code>.gitignore</code> file <a href=""https://github.com/symfony/symfony-standard/blob/master/.gitignore"" rel=""noreferrer"">that comes with the Symfony Standard Edition</a> includes the directory (causing git to ignore the directory and all it's contents). It seems like the 'bin' folder only contains links to files inside the 'vendor' folder. This leads me to think that it's a good idea to ignore the folder and let Composer handle it.</p>

<p>However, the example <code>.gitignore</code>s <a href=""https://github.com/github/gitignore/blob/master/Symfony2.gitignore"" rel=""noreferrer"">from GitHub</a> and <a href=""http://symfony.com/doc/current/cookbook/workflow/new_project_git.html#initial-project-setup"" rel=""noreferrer"">in Symfony's docs</a> doesn't include 'bin'. In fact, I can't really find much about this directory in the official Symfony docs at all, including whether or not it's recommended to keep it out of version control.</p>

<p>Is it indeed recommended to let git ignore this directory and its contents, and is Symfony's documentation simply not up-to-date?</p>
","0","1001110","",""
"60723628","4254882","2020-03-17 13:42:50","0","49","<git><gitignore>","git ignore all files, except those of a type, expect ignore one file of a type, by updating .gitignore in existing repo","<p>I'm trying to create a .gitignore that can:</p>

<ul>
<li><p>Ignore all files </p></li>
<li><p>Except don't ignore all files that end in .inc</p></li>
<li><p>Except DO ignore one specific file, some_file.inc</p></li>
</ul>

<p>This doesn't seem to work, although I'm altering a .gitignore for an existing repo which was already committed and pushed. </p>

<p>Now I realize I don't want to track changes to a certain file that the repo was tracking. When I pull down later on this repo, I don't want any changes for this particular file to come down. I also don't need detect changes to this file with 'git status' or have to commit them before pulling down.</p>

<pre><code># Ignore Everything
*

# Except don't ignore *.inc files
!*.inc

# Except ignore some_file.inc?
some_file.inc
</code></pre>

<p>What can I do to accomplish this?</p>
","2","4254882","",""
"60725232","8491363","2020-03-17 15:17:18","17","8938","<python><gitignore><python-poetry>","What files/directories should I add to .gitignore when using Poetry, the Python package manager?","<p>I'm using a very new Python package manager called <a href=""https://python-poetry.org/"" rel=""noreferrer"">Poetry</a>. </p>

<p>It creates several files/directories upon creating a new project (environment), but I'm not sure which one I should add to <code>.gitignore</code> for the best practice.  </p>

<p>Say I create a new poetry project by doing this: </p>

<pre><code>$ poetry new foo_project
$ cd foo_project
$ poetry add numpy
$ ls
</code></pre>

<p>There are:</p>

<pre><code>tests (directory)
foo_project (also a directory)
pyproject.toml (a file that specifies installed packages)
poetry.lock (a lock file of installed packages)
README.rst (I don't know why README is created but it just shows up.)
</code></pre>

<p>I usually add <code>tests/</code>, <code>foo_project/</code>, <code>poetry.lock</code> and <code>README.rst</code> because they seem to be dependent on the machine the project was created. Also, I seem to be able to reproduce the environment only with <code>pyproject.toml</code> so that's another reason I ignored all other files/directories. </p>

<p>However, it's just my hunch and unfortunately, I can't find any official guide what I really should add to <code>.gitignore</code> on the official documentation. </p>

<p>It just bugs me that I don't know for sure what I'm doing. Which ones should I add to my <code>.gitignore</code>?</p>
","0","8491363","0","0"
"5367234","101911","2011-03-20 07:13:06","4","1579","<git><mercurial><gitignore><hgignore>","How can I get the equivalent of .hgignore's regular expressions ^var/(?!\log|.dummy) and ^var/log/(?!\.dummy) in .gitignore?","<p>I am converting my Mercurial repository to Git. Part of the file system looks like this:</p>

<pre><code>|-- .gitignore
|-- .hgignore
`-- var
    |-- .dummy
    |-- asdf
    `-- log
        |-- .dummy
        `-- asdf
</code></pre>

<p>My .hgignore file uses regular expressions. Part of my .hgignore file is as follows:</p>

<pre><code>^var/(?!\log|.dummy)
^var/log/(?!\.dummy)
</code></pre>

<p>I want to track the <code>.dummy</code> files but not the <code>asdf</code> files. <code>hg status</code> returns:</p>

<pre><code>? var/.dummy
? var/log/.dummy
</code></pre>

<p>How can I get the same effect in .gitignore? I have tried the following:</p>

<pre><code>/var/**/*
!/var/.dummy
!/var/log/.dummy
</code></pre>

<p>But this will not ignore <code>var/asdf</code> as desired. How can I track <code>var/.dummy</code> and <code>var/log/.dummy</code> and ignore <code>var/asdf</code> and <code>var/log/asdf</code>?</p>
","1","101911","0","0"
"23465096","562155","2014-05-05 05:01:39","4","3020","<eclipse><git><gitignore>","How do I add org.eclipse.core.resources.prefs to gitignore?","<p>What regex do I use to add <code>org.eclipse.core.resources.prefs</code> to my <code>.gitignore</code>, so that it ignores all occurrences of this file?</p>

<p>Adding each occurrence separately or any regex like <code><strong>/<em>/org.eclipse.core.resources.prefs</code> or <code></strong>/.</em>/org.eclipse.core.resources.prefs</code> does not seem to help.</p>
","4","562155","",""
"60905433","10844607","2020-03-28 18:50:27","0","275","<git><gitignore>","Equivalent of ""git update-index --skip-worktree <file>"" for future contributor pulls?","<p>I've got some files in my project that get changed by every developer, but I don't want them to be added with <code>git add *</code>. Running <code>git update-index --skip-worktree &lt;file&gt;</code> works for me, but I want a way for it to affect everyone who pushes code as well.</p>

<p>How can I do this?</p>
","1","10844607","",""
"23651722","1900290","2014-05-14 10:13:51","0","90","<gitignore>","How to gitignore files under sub directroies","<p>How to git ignore files under sub directories. We have lots of files which we would like to ignore under sub directories.</p>

<pre><code>(e.g. db/schema.rb or config/database.yml)
</code></pre>
","0","1900290","",""
"5586686","223267","2011-04-07 19:44:17","2","527","<svn><git><git-svn><gitignore>","Storing .gitignore files for empty directories under Subversion","<p>As mentioned in <a href=""https://stackoverflow.com/questions/115983/how-do-i-add-an-empty-directory-to-a-git-repository"">this question</a> (and in the Git FAQ), you can't store empty directories in Git.</p>

<p>I have a <code>git-svn</code> clone, and I want to use Git in it to work against my project's Subversion repository.</p>

<p>The problem is that there are some empty directories that are stored under Subversion and are necessary for compiling the project.</p>

<p>So far, I've been doing what was suggested in the FAQ: I added a <code>.gitignore</code> file in each directory that should stay empty, and committed that addition to Git, so whenever I clone from this <code>git-svn</code> repository, I get all the empty directories and I can compile.</p>

<p>The minor trouble is that whenever I want to <code>git svn dcommit</code> back to the Subversion repository, I need to do that from a separate Git branch without the commit in which all the <code>.gitignore</code> files were added, so that they don't get added to Subversion as well.</p>

<p>But I thought about it, and it might not be that bad - so my questions is, is there any reason why I should not commit the addition of the <code>.gitignore</code> files for each empty directory to Subversion?</p>
","0","223267","",""
"23673174","2118666","2014-05-15 08:38:10","26","18057","<git><gitignore><ignore>","How to ignore new changes to a tracked file with git?","<p>When I run git status:</p>

<pre><code>$ git status
# On branch master
# Changes not staged for commit:
#   (use ""git add/rm &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       modified:   .gitignore
#       modified:   .project
#       modified:   reports/images/2014-03.png
#       modified:   reports/images/graph-2014-03.bmp
#       deleted:    reports/phpbmp/cache/0/02/027/0270/phpThumb_cache_portal.gep.co.za_src02707010e1e50bc80594
f31460d514c4_par80d8993b181666aca11d7be02b12fea7_dat1399293161.bmp
#       deleted:    reports/phpbmp/cache/0/02/027/0270/phpThumb_cache_portal.gep.co.za_src02707010e1e50bc80594
f31460d514c4_par80d8993b181666aca11d7be02b12fea7_dat1399293182.bmp
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       README.MD
#       reports/phpbmp/cache/9/
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>I realised that I don't want changes to the following files be tracked:</p>

<pre><code>.project
reports/images/*.png
reports/images/*.bmp
reports/phpbmp/cache/*
</code></pre>

<p>So I added these files to <code>.gitignore</code></p>

<p>How do I remove the files from the current working directory under <code>Changes not staged for commit</code>?</p>
","0","2118666","0","0"
"24068127","3712555","2014-06-05 18:58:31","0","73","<git><gitignore>","Ignoring files in a parallel folder in a git repository","<p>I have a git repository with two folders say A and B. I would like to put a .gitignore file in each folder so that when I am working in A files in B are ignored and while I am working in B files in A are ignored. Is this possible? A .gitignore file in A with the line ../B or ../B/* etc does not work.</p>
","1","3712555","",""
"5670547","708882","2011-04-14 22:40:14","2","5435","<gitignore>","file mask to exclude *.m.swp files in git","<p>When I run git status, <code>*.m.swp</code> files are showing up in the ""<code>untracked list</code>"" because I currently have these files open in MacVim (The originals are MATLAB files with <code>*.m</code> file extensions).<br>
I have tried adding <code>*.m.swp</code>, and various permutations of this, to my <code>.gitignore</code> file so that the files are ignored, but nothing seems to work for me.<br>
See an example of git status output below:</p>

<pre><code>git status
# On branch mybranch1
# Changes to be committed:
#   (use ""git reset HEAD &lt;file&gt;..."" to unstage)
#
#   modified:   ../dir1/file1.m
#   new file:   file2.m
#   new file:   file3.m
#   modified:   file4.m
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   ../../dir2/.file5.m.swp
#   ../dir1/.file6.m.swp
#   ../dir1/.file1.m.swp
#   ../dir1/.file7.m.swp
#   ../dir1/.file8.swp
#   .file9.m.swp
#   .file4.m.swp
</code></pre>

<p>How can I get git to ignore these?  Thanks in advance for any help!</p>
","0","708882","0","0"
"61289408","7658051","2020-04-18 12:51:31","2","768","<git><github><gitignore>","I still get unwanted files uploaded on Github after I added them in .gitignore","<p>I am developing an app and I am constantly pushing it on my Github.</p>

<p>I prepared a <code>.gitignore</code> and then I pushed my project on Github.</p>

<p>Then I realized I needed to prevent the upload of some more files from Github, so I added them in .gitignore list.</p>

<p>However, after I typed</p>

<pre><code>git add .
git commit -m ""smth""
and git push -u origin master
</code></pre>

<p>I still get those files in my Github repository.</p>

<p>So I tried to delete the unwanted files directly from github, by clicking on them. Then I did another push and I got this error:</p>

<blockquote>
  <p>error: failed to push some refs to '<a href=""https://github.com/tommasosansone91/simplesocial.git"" rel=""nofollow noreferrer"">https://github.com/tommasosansone91/simplesocial.git</a>' </p>
  
  <p>hint: Updates were rejected because the remote contains work that you do </p>
  
  <p>hint: not have locally. This is usually caused by another repository pushing</p>
  
  <p>hint: to the same ref. You may want to first integrate the remote changes hint: (e.g., 'git pull ...') before pushing again. </p>
  
  <p>hint: See the 'Note about fast-forwards' in 'git push --help' for details.</p>
</blockquote>

<p>I have read the hint, did some search on the internet, then I couldn't solve the problem, so I deleted my repository on github, created another with the same name, added it as origin of my local project, and then I did the push again.</p>

<p>With my surprise, I get the same result of before: the unwanted files are still uploaded on Github.</p>

<p>What am I doing wrong?</p>

<p>Here is my .gitignore:</p>

<pre><code>.env
.credenziali.txt
.directory.txt
.github info.txt
.appunti progetto social network.txt
</code></pre>

<p>Here are the unwanted files that still get uploaded:</p>

<ul>
<li>.directory.txt</li>
<li>.github info.txt</li>
<li>.appunti progetto social network.txt</li>
</ul>

<p>I attach a screenshot below: on the left is my github repo, on the right my VScode where you can see the files I am trying to hide.</p>

<p><a href=""https://i.stack.imgur.com/K8710.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/K8710.jpg"" alt=""enter image description here""></a></p>
","0","7658051","0","0"
"61655555","10079397","2020-05-07 10:30:21","0","39","<git><shell><gitignore>",".gitignore files when 2 git repo in same directory","<p><strong>Context</strong></p>

<p>I have 2 git repositories (gitone and gittwo) in one directory.</p>

<p>For setting them up, I followed <a href=""https://stackoverflow.com/a/17313342/10079397"">these steps</a>. </p>

<p>So now, I have two aliases:</p>

<pre><code>alias gitone='git --git-dir=.gitone'
alias gittwo='git --git-dir=.gittwo'
</code></pre>

<p><strong>Problem</strong></p>

<p>I want to ignore distinct files in each repo.</p>

<p><strong>Solution?</strong></p>

<p>I created a .gitignore:</p>

<pre><code># Ignore everything ...
*

# ... except ...
!/.gitignore
!/gittwo-ignore.txt
!*.sql

# ... from all directories and subdirectories
!*/
</code></pre>

<p>I want <code>.gitignore</code> to work for gitone, but not for gittwo. For this, I created <code>gittwo-ignore.txt</code>:</p>

<pre><code># Ignore everything (including gitignore)...
*

# ... except ...
!*.ipynb
!/gittwo-ignore.txt

# ... from all directories and subdirectories
!*/
</code></pre>

<p>and I added it to the core.excludesfile:</p>

<pre><code>gittwo config --global core.excludesfile ~/gittwo-ignore.txt
gittwo rm -r --cached .
gittwo add .
gittwo commit -m 'Hopefully this now works'
gittwo push origin master
</code></pre>

<p>I was hoping that with <code>gittwo-ignore.txt</code>, gittwo would ignore <code>.gitignore</code> and only take into account the rules from <code>gittwo-ignore.txt</code>.</p>

<p>Unfortunately, my repo gittwo still only contains .sql files (so only takes into account the ignore rules from .gitignore).</p>

<p>How can I fix this?</p>
","3","10079397","0","0"
"24296724","631165","2014-06-18 23:47:50","10","3796","<git><gitignore><msysgit>",".gitignore negation not working","<p>I'm using msysgit 1.9.4.</p>

<p>My .gitignore file, at the root of the repo, looks like this:</p>

<pre><code>build/
a/b/
!a/c/d/e/**/build/
</code></pre>

<p>My intent is that, all build/ directories are ignored, unless they are subdirs (any depth) of a/c/d/e/.
But a/c/d/e/f/build/ is still getting ignored by Git.</p>

<p>What am I missing here?</p>
","9","631165","0","0"
"5919449","148390","2011-05-07 06:05:22","2","855","<gitignore>",".gitignore Question","<p>I originally checked in a file and pulled it to a development server. Now, I no longer want to to track them because the settings are different for every computer. After the first pull I changed a few lines.</p>

<p>In my .gitignore file I have this:</p>

<pre><code>config/hostname.rb
</code></pre>

<p>Now, whenever I <code>git pull</code> on the development server I get an error like this:</p>

<pre><code>error: Your local changes to 'config/hostname.rb' would be overwritten by merge.  Aborting.
Please, commit your changes or stash them before you can merge.
</code></pre>

<p>How can I get rid of this?</p>
","0","148390","0","0"
"43002203","1838899","2017-03-24 14:33:12","0","408","<git><azure><gitignore><ignore>","Azure git ignore","<p>I have a .NET web application that uses some settings from a web.config file. Various instances of this app are installed on azure and each installation has a different connection string in its web.config file that controls the connection with the database. Azure picks the binaries for this app from bitbucket. 
In other words, 10 azure web sites that use the same code, all of them are connected to the same repository in bitbucket and each one of them has a different connection string to a different database.
Each time I create a new release, Azure gets this new release from bitbucket and overwrites web.config of each application. Is there away to instruct Azure to ignore the web.config file from bitbucket when pulling a new Release?</p>
","4","1838899","",""
"61678301","12368988","2020-05-08 11:37:33","-1","213","<git><gitignore>","Delete multiple files from github windows","<p>I committed several file changes without adding some files to .gitignore that I didn't want to include. </p>

<p>I added those files to .gitigonre (.npy and few .png)file and committed but files didn't remove.</p>

<p>How can I remove these files from all commits? if not possible from all commits I'm happy to a new fresh but a clean commit.</p>

<p><a href=""https://i.stack.imgur.com/WRSRW.png"" rel=""nofollow noreferrer"">My repository screenshot</a></p>
","3","12368988","",""
"61684515","12499477","2020-05-08 17:21:19","-1","330","<python><django><git><github><gitignore>","How to extract folder from .gitignore?","<p>Folks, I've deleted my own <code>django</code> project by accident and then cloned it from Github. But the problem is that before pushing I've added my virtual environment folder to <code>.gitignore</code> and now can't extract/use/activate it. What can I do sometimes ?</p>
","3","12499477","",""
"43020933","4399423","2017-03-25 19:26:16","13","9986","<regex><git><gitignore>",".gitignore - ignore file starting with ~","<p>To ignore any file starting with ~(tilde), I put following in gitignore file</p>

<pre><code>^~.*
</code></pre>

<p>But, it is not working for the file name starting with ~(eg. ~$ofession email.docx).</p>

<p>There is no issue with gitignore configuration setting as other patterns are working well. </p>

<p>What is wrong here with the regular expression?</p>
","2","4399423","0","0"
"43183120","3436341","2017-04-03 11:11:16","0","464","<git><gitignore>",".gitignore existing file without deleting it from repo","<p>Can I tell Git to ignore changes in some tracked file when commiting a folder? So that, for example, if I decide to ignore 'private.conf', it wouldn't stage it for commit if I do 'git commit .', but it would be normally working if I explicitly tell it to 'git commit private.conf'.</p>

<p>Please also take in account that</p>

<ul>
<li>I know that I can just explicitly tell git which files to commit each time (e.g. ""git commit source1.c source2.c""), but that's extremely convenient for me. Instead of that, I'd tell git to commit all files but 'private.conf'.</li>
<li>Some stackoverflow topics suggest to rename private.conf to private.conf.template, then run 'git rm --cached private.conf'. For some reasons that's also unconvenient for me. Please don't suggest me that. Thanks.</li>
<li>I know that I can also do 'git update-index --assume-unchanged private.conf' - and this would do exactly what I want, but only for my local git repository. What I'm searching for is a way to do that for remote branch (and all git repositories cloned from that remote branch as well).</li>
</ul>
","1","3436341","",""
"61864819","12773446","2020-05-18 07:50:37","0","41","<java><bitbucket><gitignore>",".DS_Store not excluded when put in gitignore","<p>I have a Java application where a .DS_Store file is present within the directories, but I have added "".DS_Store"" to a line within gitignore that should exclude this file when pushing to bitbucket. However, on bitbucket I can still see the .DS_Store file - does anyone know why this might be?</p>
","1","12773446","",""
"24556046","2887743","2014-07-03 14:11:05","0","158","<php><git><github><gitignore>","Git submodule .gitignore still tracks file","<p>My problem is very simple.</p>

<p>I have project, this project includes as a submodule another project.
This submodule has a .gitignore as follows:</p>

<pre><code>*~
~*
.DS_Store
nbproject
core.ini.php
</code></pre>

<p>Yet, every time I create a new core.ini.php file (for local specification purposes), the file gets included in the watched file list, committing it into the repository.
So despite the .gitignore of both the project AS WELL as the submodule specifying to ignore that file, it still gets added.</p>

<p>Here is just a screenshot to show that it is indeed added:</p>

<p><a href=""https://i.stack.imgur.com/b3dVf.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/b3dVf.png"" alt="".gitignore addition""></a>
</p>

<p>I would appreciate any advise or help. Thank you.</p>
","3","2887743","",""
"24561215","2125648","2014-07-03 18:48:19","1","238","<git><gitignore>","How .gitignore file is processed?","<p>I am developing a system to mimic the gitignore functionality. I will add certain rules ( gitignore pattern format) to a file and the file will be input to a script (perl) file, when there is any commit the script file parses the rules and if any rule matched then it will send an email.</p>

<p>For this I need to know basically where to find the gitignore source code and how its been implemented in git so that I can have similar implementation in my proj.</p>
","3","2125648","",""
"24748151","18573","2014-07-15 00:27:23","1","487","<git><gitignore>",".gitignore from parentmodule does not apply to submodules?","<p><strong>SO advises against deleting answered question so I will leave this here but please see John's answer which explains that the explanation is already present in the text a quoted.</strong> </p>

<p>According to the manpage it seems git commands would go up the directory hierarchy up to the root directory:</p>

<blockquote>
  <p>Patterns read from a .gitignore file in the same directory as the
  path, or in any parent directory, with patterns in the higher level
  files (up to the toplevel of the work tree) being overridden by those
  in lower level files down to the directory containing the file.</p>
</blockquote>

<p>Our project has many git submodules and I was hoping to be able to use a single .gitignore in the parentmodules that can apply to all of them.</p>

<p>But that doesn't seem to work. Does the search for .gitignore stop at the repository root? I am hoping I am making a mistake.</p>



<pre><code>$ git --version
git version 1.8.5.5
$ grep target ../.gitignore # the .gitignore in the parent module
target
**/target/
$ git status --porcelain # feature/target/ matches **/target but is not ignored 
?? feature/target/
?? update-site/target/
$ echo '**/target/' &gt;&gt; .gitignore # add it to submodule repo root
$ git status --porcelain
M .gitignore
</code></pre>
","1","18573","",""
"24754033","1203565","2014-07-15 09:04:04","0","1583","<android><git><gitignore><project-properties>","eclipse android gitignore for project.properties file","<p>I m collaborating with another developer over git. Our setup environments are different. To avoid adding the correct sdk and other libraries I decided to include this line in .gitignore</p>

<pre><code>#eclipse 
project.properties
</code></pre>

<p>but in the initial commits my project.properties file was pushed onto the repository. I thought updating the .gitignore file would take care of this problem on the other developers machine. But every time he pull the repository he has to update the project with the path of his sdk and library to be able to run the code.</p>
","0","1203565","",""
"43416642","7722095","2017-04-14 17:51:34","2","81","<git><gitignore>","gitignore new file content not working","<p>I have a .htaccess file in a repo and I cloned the repo in my local system, but now the .htaccess file needs to change. So I added .htaccess to .gitignore file. And when I do git status, it still showing .htaccess file modified and will be pushed.</p>

<p>Any help would be appreciated. Thanks</p>
","0","7722095","0","0"
"6512714","350269","2011-06-28 20:31:34","2","1208","<git><templates><gitignore><gitolite>","Gitolite gitignore template","<p>We are in the infancy of switching our source control environment over to Git with Gitolite for access control.</p>

<p>The one thing that I would like to know if it's possible and how, would be to create a default .gitignore that would be included in all new repos created with gitolite by default.</p>

<p>There are a number of project files (ie. eclipse meta files) that need to be excluded from every project that it would be nice to identify them and include it in a gitignore right out of the get go.</p>

<p>Is something like this possible?</p>

<p>Thanks in advance!</p>
","0","350269","0","0"
"25003448","3715411","2014-07-28 20:07:42","5","3230","<git><gitignore>",".gitignore ignoring whitelisted folder","<p>I have a folder that shouldn't be ignored according my .gitignore, but git is still ignoring it. I cannot find any other .gitignore file or git configuration that would suggest this folder be ignored, and <code>git check-ignore</code> is printing nothing.</p>

<p>My .gitignore is organized like a whitelist:</p>

<pre><code>*
!.gitignore
!NotIgnoredFolder/
!SomeOtherFolderInRoot
</code></pre>

<p>I have a folder along the lines of NotIgnoredFolder/subfolder/js, that git is ignoring. Based on its location and my .gitignore, this path obviously shouldn't be ignored. When I attempt to add it with <code>git add NotIgnoredFolder/subfolder/js</code>, I get</p>

<pre><code>The following paths are ignored by one of your .gitignore files:
NotIgnoredFolder/subfolder/js
</code></pre>

<p>I have searched my entire C: drive for .gitignore and .gitignore_global files that may interfere, with no luck. I've also checked my .git/config and my .git/info/exclude. Furthermore, when I try <code>git check-ignore NotIgnoredFolder/subfolder/js</code>, Git prints an empty line. </p>

<p>Is there any way to see what .gitignore file is causing the ignore? Or could this be a result of the way I have set up my gitignore?</p>

<p>Solutions that I have tried with no success:</p>

<p><a href=""https://stackoverflow.com/questions/9436405/git-is-ignoring-files-that-arent-in-gitignore"">Git is ignoring files that aren&#39;t in gitignore</a></p>

<p><a href=""https://stackoverflow.com/questions/14425962/git-is-ignoring-idea-folder-but-that-isnt-in-gitignore/14426020#14426020"">Git is ignoring .idea folder, but that isn&#39;t in gitignore</a></p>

<p><a href=""https://stackoverflow.com/questions/12144633/which-gitignore-rule-is-ignoring-my-file"">which gitignore rule is ignoring my file</a></p>
","0","3715411","0","0"
"43650979","6761202","2017-04-27 07:13:50","0","56","<git><laravel><gitignore>","What files to recreate from .gitignore?","<p>When you clone a repository, what files do you need to recreate so that the app will function? </p>

<p>For example, I committed a laravel app with the standard .gitignore files:</p>

<pre><code>### Laravel ###
vendor/
node_modules/
npm-debug.log

# Laravel 4 specific
bootstrap/compiled.php
app/storage/

# Laravel 5 &amp; Lumen specific
public/storage
public/hot
storage/*.key
.env.*.php
.env.php
.env
Homestead.yaml
Homestead.json

# Rocketeer PHP task runner and deployment package. https://github.com/rocketeers/rocketeer
.rocketeer/
</code></pre>

<p>Now, if I were to clone this repo. Obviously, this app would not work out of the box. It's missing the important .env and maybe some of the other ignored files. </p>

<p>How do you got about what files to recreate?</p>
","0","6761202","",""
"62332794","4470365","2020-06-11 20:14:46","4","334","<git><gitignore>","Stop git from tracking temporary open Microsoft Office files","<p>Microsoft Office makes copies of open files, say when you open <code>abc.xlsx</code> Excel creates a file called <code>~$abc.xlsx</code>, prefaced with a tilde and dollar sign.</p>

<p>When I open an Excel file in my git repository to look at the data, git tracks the new file as a change and I have to take care to avoid committing it.  How can I use a .gitignore file to skip tracking these files?</p>
","0","4470365","",""
"43664565","7316318","2017-04-27 17:40:51","19","34383","<git><laravel><gitignore>","Why do people put the .env into gitignore?","<p>Laravel's official site recommends that we put the .env into gitignore and so to others.</p>

<p>Why? I feel it comes quite handy for future usage once you forget how you setup the configurations.</p>
","1","7316318","0","0"
"62338516","13732293","2020-06-12 06:10:59","1","99","<gitignore><tfvc>","Can I use .gitignore with TFVC?","<p>I started using TFVC recently. I was wondering if I can use .gitignore file with TFVC? I am keeping asp.net code in the repository and don't want build related files and folders to get checked in.</p>
","0","13732293","",""
"25038371","3779669","2014-07-30 13:39:09","0","351","<ruby-on-rails><ruby><git><gitignore>","How can I set secret global variables in Rails and put the file in .gitignore?","<p>I have a rails app that connects to various APIs, and instead of putting my API keys directly in the Rails project, I'd like to make a separate file, secrets.rb, that contains global string variables for all of my API secret keys.</p>

<p>Where should I save this, and how can I make sure that these globals will be included where I need them in my project?</p>
","1","3779669","",""
"62347595","3286489","2020-06-12 15:35:40","1","336","<android><git><gitignore>","What is the different between /build and build/ in gitignore?","<p>I notice the recommendation for .gitignore for Android in <a href=""https://stackoverflow.com/a/17803964/3286489"">https://stackoverflow.com/a/17803964/3286489</a> have both <code>/build</code> and <code>build/</code>. What are their differences? Should we have both, or just one will do?</p>
","1","3286489","",""
"62346328","13505114","2020-06-12 14:25:51","-1","381","<git><github><gitignore>","Adding .gitignore file to the new repo","<p>I just have imported my new empty <em>GitHub</em> repo using <em>Eclipse</em> <em>EGit</em>. I haven't done any other <em>Git</em> operations yet, not even added any of the project files to the <em>staging area</em>. How can i add <em>.gitignore</em> file to the repo? Would it be better to add <em>.gitignore</em> to my workspace, commit and finally push to the GitHub remote repo or just add that file in GitHub directly?</p>
","1","13505114","",""
"43680588","32133","2017-04-28 12:45:23","10","1325","<git><gitignore>","Ignore file from git commit but protect it from clean","<p>In my work tree I have a mixture of files in .gitignore:</p>

<ol>
<li>Build outputs</li>
<li>Sensitive files that shouldn't be part of the repo (e.g. passwords, connection details for local servers)</li>
</ol>

<p>If I want to rebuild my project from scratch, I can do <code>git clean -x</code> to remove the build outputs in (1). But this also removes the sensitive files in (2).</p>

<p>Is there a way to mark a file so it's not affected by <code>git clean</code> while still being ignored by <code>git commit</code>?</p>
","3","32133","0","0"
"62350316","12657190","2020-06-12 18:26:14","0","2879","<git><unity-game-engine><gitignore>","Unity .gitignore not ignoring .asset files","<p>I am currently trying to block changes to my git version control that deal with .asset files in a certain folder. Even if I put in the following line, .asset files and their associated .meta files get added to the commit. I have even tried blocking the specific folder that that data is in but it still pushes. I am wonder if one of the previous lines in the gitignore is messing something up.</p>

<blockquote>
  <p>*.asset</p>
</blockquote>

<pre><code># This .gitignore file should be placed at the root of your Unity project directory
#
# Get latest from https://github.com/github/gitignore/blob/master/Unity.gitignore
#
[Ll]ibrary/
[Tt]emp/
[Oo]bj/
[Bb]uild/
[Bb]uilds/
[Ll]ogs/
[Mm]emoryCaptures/

# Asset meta data should only be ignored when the corresponding asset is also ignored
!/[Aa]ssets/**/*.meta

# Uncomment this line if you wish to ignore the asset store tools plugin
# /[Aa]ssets/AssetStoreTools*

# Autogenerated Jetbrains Rider plugin
[Aa]ssets/Plugins/Editor/JetBrains*

# Visual Studio cache directory
.vs/

# Gradle cache directory
.gradle/

# Autogenerated VS/MD/Consulo solution and project files
ExportedObj/
.consulo/
*.csproj
*.unityproj
*.sln
*.suo
*.tmp
*.user
*.userprefs
*.pidb
*.booproj
*.svd
*.pdb
*.mdb
*.opendb
*.VC.db

# Unity3D generated meta files
*.pidb.meta
*.pdb.meta
*.mdb.meta

# Unity3D generated file on crash reports
sysinfo.txt

# Builds
*.apk
*.unitypackage

# Crashlytics generated file
crashlytics-build.properties

# SongPong Specific ___CUSTOM___
*.swp
*.asset
#Ignore all .meta file
*.meta
#But not source file with postfix. which is everything but a folder
!*.*.meta
</code></pre>

<p>Furthermore, if anyone uses any better/more updated gitignores for unity, I would also appreciate that</p>
","1","12657190","",""
"62349212","13400029","2020-06-12 17:12:52","1","2676","<git><gitignore>","How should I hide my googleservices.json file using .gitignore?","<p>I want to hide my googleservices.json from git, thus I want to add it to the .gitignore file.
My googleservices.json file is located inside android/app/googleservices.json</p>

<p>When I add this location to the .gitignore file, it still tracks it, What should I do?</p>
","1","13400029","0","0"
"25044610","1742529","2014-07-30 18:48:10","6","6056","<git><whitespace><gitignore><ignore><removing-whitespace>","How to git-add only non-whitespace changes and new files?","<ol>
<li><p>We can do diff with some types of ignoring whitespaces:</p>

<p>1) <code>git diff --ignore-space-at-eol</code> # Ignore changes in whitespace at EOL.</p>

<p>2) <code>git diff --ignore-space-change</code> / <code>git diff -b</code> # Ignore changes in amount of whitespace.</p>

<p>3) <code>git diff --ignore-all-space</code> / <code>git diff -w</code> # Full whitespace ignoring</p></li>
<li><p>We can do</p>

<p><code>git apply --ignore-whitespace</code> \ <code>git apply --ignore-space-change</code> # Ignore whitesapces when applying patch</p></li>
</ol>

<p>But how to exclude files with whitespaces changes from <code>git add *</code>?</p>

<p>These solutions does not work for me:</p>

<p>1)</p>

<pre><code> git diff -w --no-color | git apply --cached --ignore-whitespace
</code></pre>

<p>- It sometimes writes errors and does not add new files to tracking.</p>

<p>2) </p>

<pre><code> git add `git diff -w --ignore-submodules |grep ""^[+][+][+]"" |cut -c7-`
</code></pre>

<p>- It writes errors and do nothing (maybe because I have binary files, not only text files)</p>

<p>P.S.: And maybe there is way to replace files (with whitespaces differences at end or line and whitespaces before EOF differences) with files from last commit?</p>
","5","1742529","",""
"6795813","554469","2011-07-22 20:33:08","1","579","<git><gitignore>","Is there a way to have ignored files show up in git status?","<p>Is there a way to mark a file in Git such that a ""git add ."" won't stage it but have it still show up under git status?  </p>

<p>I know this sounds crazy, but the reason is I have some local script files that I'd like to see in my git GUI (Tower) browse window, however I don't want them added to the repo when I ""stage all"".</p>

<p>If I untrack the files and set status showUntrackedFile = Normal (or all) they show up, but then they get added back in by ""git add ."" or ""Stage All"". If I put them in .gitignore they won't get added/staged but they won't show up in the browse window either (which at least in tower is effectively git status).</p>

<p>Is there a way to get ignored files to show up in git status?  I'm guessing no, but am hoping for a cleaver work around?</p>
","0","554469","",""
"6804340","584676","2011-07-24 01:07:57","4","1434","<git-svn><gitignore><svnignore>","Do the entries in .gitignore get applied to the SVN repository when using git-svn?","<p>If I tell git to ignore x amount of files and never add them to the repository, will those files also make it into the svn:ignore property? And if so, how can I keep .gitignore local to only my local git repository?</p>

<p><em>EDIT</em> Sorry about the duplicate, I searched on here and couldn't find anything on it.</p>
","0","584676","",""
"43695413","699305","2017-04-29 11:56:49","1","49","<git><mercurial><gitignore><hgignore>","Can I share an ignore file between mercurial and git?","<p>I use both mercurial and git for similar types of work, and maintain parallel global ignore files. Now, the basic syntax for the two systems is sufficiently similar that I can <em>almost</em> use the same ignore file for both systems. But not quite.</p>

<ul>
<li><p><code>git</code> uses (extended) globs to specify ignore patterns.</p></li>
<li><p><code>hg</code> uses either full regular expressions (the default) or extended globs to specify ignore patterns. There is a way to specify which system to use.</p></li>
</ul>

<p>So to use the same list of globs for both systems, my <code>hg</code> ignore file needs to include a line declaring that the glob syntax is in effect:</p>

<pre><code>syntax: glob
# Compilation artifacts
*.o
</code></pre>

<p>This syntax declaration is not recognized by <code>git</code> (which doesn't need one, since it only accepts the glob syntax). I have tried it out and confirmed that it's treated as just another filename: if I create a file called <code>syntax: glob</code> (with a space in the name), <code>git</code> ignores it. This seems harmless but ugly. So: Is there a way to construct a file of ignore patterns that is <strong>valid</strong> for both systems, without this little wart?</p>
","1","699305","",""
"62548825","418966","2020-06-24 06:16:41","1","674","<git><gitignore><gitattributes>","gitignore and gitattributes precedence","<p>If I get it right, <code>.gitignore</code> takes precedence over <code>$GIT_DIR/info/exclude</code>, but <code>$GIT_DIR/info/attributes</code> takes precedence over <code>.gitattributes</code>. Is this by design?</p>
","0","418966","0","0"
"62577976","13394032","2020-06-25 14:41:08","1","8041","<git><visual-studio><cmake><gitignore>",".gitignore for Visual Studio cmake - which files should I ignore?","<p>Making a C++ application in Visual Studio 2019 with cmake, Visual Studio generates output in a folder called &quot;out&quot;. However, there are some ninja build files like <em>.ninja_deps</em>, <em>rules.ninja</em>, and <em>build.ninja</em>.</p>
<p>Tried Visual Studio .gitignore from <em>github/gitignore repository</em>, but that only ignores <em>.vs</em> folder.</p>
<p>Which files should I ignore?</p>
","0","13394032","0","0"
"62595749","13819265","2020-06-26 13:26:29","-1","385","<git><gitignore>","Problem with gitignore file, if directory name contains dot character","<p>the gitignore file does not exclude the marked directory, because it contains dots in its name: 'V1.0.0'. Is there any resolution for this problem?</p>
<p><strong>gitignore file:</strong></p>
<pre><code>#exclude everything from version control 
*.*

#add desired directories to version control  
!a-V*/**
</code></pre>
<p><strong>directory list:</strong> (every directory includes a simple text file)</p>
<pre><code>a-V1.0.0   (&lt;-- notice the dots)
a-V2-0-0
a-V3-0-0
b-V1-0-0
b-V2-0-0
</code></pre>
<p><strong>output from git status: (file a1.txt in a-V1.0.0 is missing)</strong></p>
<pre><code>Changes to be committed:
  (use &quot;git rm --cached &lt;file&gt;...&quot; to unstage)  
    new file:   a-V2-0-0/a2.txt  
    new file:   a-V3-0-0/a3.txt
</code></pre>
","7","13819265","",""
"25137925","2310818","2014-08-05 11:40:43","4","17490","<git><gitignore>","git warning ""unable to access permission denied"" on a .gitignore directory","<p>I have a sub-directory called "".gitignore"" in one of my directories called ""Database"", which I want git to ignore, so I listed it in my .gitingore file. </p>

<p>.gitignore:</p>

<pre><code>    [Bb]in/
    [Dd]ebug/
    [Rr]elease/
    .gitignore/
</code></pre>

<p>When I perform a command like git status Database, i get the following warning:</p>

<pre><code>warning: unable to access 'Database/.gitignore': Permission denied
</code></pre>

<p>Can anyone please help me understand what I can do to get rid of this warning?</p>

<p>PS: I verified folder permissions on both ""Database"" and "".gitingore"" were the same. </p>

<p>PS: I am running git on Windows 8. I don't think this matters.</p>
","1","2310818","0","0"
"43765914","1751946","2017-05-03 16:54:10","32","15286","<git><npm><gitignore><npmignore>","What's the difference between .npmignore and .gitignore?","<p>What's the difference between <code>.npmignore</code> and <code>.gitignore</code>? What kind of files should I ignore in each?</p>
","0","1751946","0","0"
"25146564","1742379","2014-08-05 19:13:22","1","561","<git><gitignore><coda>","Coda 2 still publishes files in .gitignore","<p>I use git for source control in coda 2. I have one file that I need to be different on my local machine, but even when I include it in .gitignore, coda still pushes it to the master.</p>

<p>The reason I need to ignore this file, is because it references localhost rather than 0.0.0.0 for the web server. Is there an easier way to do this, or do I just need to push with the terminal?</p>
","0","1742379","",""
"6910412","473040","2011-08-02 10:10:06","4","3814","<git><gitignore>","is there any way how to tell git to ignore certain lines of a file?","<p>I'm trying to put my .bashrc .gitconfig and other useful configs on to github (because there are some valuable pieces of code I want to share ) but the thing is I don't want to share certain ""valuable informations about me"", </p>

<p>so is there any way around to tell git to ignore certain patern or line of a file (for instance in .gitignore? ) </p>

<p><em>note: I figure how to do my bashrc sharing ( I will keep in bashrc public things and move private to bashprofile that I wont share)  but I'm kinda wondering how to share my gitconfig (there are some pretty good aliases)</em> </p>

<p>thx</p>
","1","473040","0","0"
"62670666","7058439","2020-07-01 06:09:24","0","19","<git><gitignore>","Git keeps trying to upload a .gitignored and removed file?","<p>I have a data file that I recently put in my directory that's over the Github size limit. I forgot about the size limit, so did a <code>git add</code> / <code>git commit</code> / <code>git push</code>, and got the error saying it was too big.</p>
<p>To remedy this, I added a <code>.gitignore</code> file and specified the path to my file as well as removing the file in a separate git commit (<code>git rm</code> and then <code>git commit</code>).</p>
<p>However, when I tried to push again, it still tries to upload the file. The file does not come up in git ls-files. Any ideas? My .git directory is problematically big and indicates that the data file is still somewhere in there. What should I do?</p>
","4","7058439","",""
"7214111","458610","2011-08-27 11:02:46","-1","210","<git><github><gitignore>","How to say to .gitignore: 'Ay, work!'?","<p>Sorry for stupid title, first. :)</p>

<p>Problem is very simple... <code>.gitignore</code> ignores me!</p>

<p>Scenario:</p>

<ol>
<li><p><a href=""https://github.com/daGrevis/dagrevis_lv/commit/7704a875bda18222602cad5e76b09bf1aa8cb798"" rel=""nofollow"">I needed to add <code>application/bootstrap.php</code> to ignore-list. That file ignores me (still visible).</a></p></li>
<li><p><a href=""https://github.com/daGrevis/dagrevis_lv/commit/a4ec271d1ce15f28f0577ac34153f3ec8a087134"" rel=""nofollow"">Then, I thought that I need to make some changes in those files. Guess what? Nothing!</a></p></li>
<li><p><a href=""https://github.com/daGrevis/dagrevis_lv/commit/df86776a9d5c747744463d807ce057043250982e"" rel=""nofollow"">Maybe I have something wrong in <code>.gitignore</code>? Lets add a newline to it. :D</a></p></li>
<li><p><a href=""https://github.com/daGrevis/dagrevis_lv/commit/eb3036f2e71a0bd8f9b197fd4afe7b0a043abb9d"" rel=""nofollow"">Okay, <code>.gitignore</code>! Not funny... anymore. If I'll remove this, will that make them visible? No!</a></p></li>
</ol>

<p>Why is that so and how can I make invisible <code>application/bootstrap.php</code> and <code>index.php</code>?</p>

<p>Thanks in adivce and sorry for not-so-very-boring-written-question. :D</p>
","5","458610","",""
"62692926","12062528","2020-07-02 09:13:42","-1","86","<git><github><gitignore>","Why do I have multiple gitignore files?","<p>I'm new to using git and github. I've been using it to keep tabs on different versions of some of my code, and I've been using the github desktop app to manage things. Just to complicate things, I'm jumping between two different PCs - I'm writing the code locally on my home PC, but running it remotely on my work office PC (because my home PC is old and slow).</p>
<p>I've been editing the &quot;gitignore&quot; file so that the output files produced by the code are ignored. I do this through the desktop app (Repository/Repository settings/Ignored Files).</p>
<p>However, what is confusing me is that</p>
<ul>
<li>I somehow end up with multiple gitignore files being generated (gitignore,gitignore2,gitignore3...etc.)</li>
</ul>
<p>and</p>
<ul>
<li>Each time the most recent gitignore file does not keep the rules I entered previously instructing that certain file types should be ignored.</li>
</ul>
<p>Since I'm new I don't have any idea of why this is happening or even where to start looking. If anyone can provide any advice that would be great. All I want to do is have a single gitignore file that keeps a record of what file extension types to ignore.</p>
","4","12062528","",""
"7221468","779249","2011-08-28 14:10:01","2","2026","<git><gitignore>","what does tmp/**/* ignore in .gitignore?","<p>In my .gitignore file I have </p>

<pre><code>tmp/**/*
</code></pre>

<p>What files does it exclude? Will it exclude all tmp and files/folders under it?</p>

<p>My other question is, is this different from the following?</p>

<pre><code>tmp/*
</code></pre>

<p>Edit:</p>

<p>Reason I ask is because I a have this</p>

<pre><code>.vimbackup/**/*
</code></pre>

<p>but it is NOT ignoring a file like <code>.vimbackup/.somebackup~</code></p>

<p>However, if I do </p>

<pre><code>.vimbackup/*
</code></pre>

<p>it DOES ignore the file <code>.vimbackup/.somebackup~</code>  Seems kinda backwards to me</p>
","1","779249","0","0"
"7229885","509271","2011-08-29 12:11:05","2539","580476","<git><gitignore>","What are the differences between .gitignore and .gitkeep?","<p>What are the differences between <code>.gitignore</code> and <code>.gitkeep</code>? Are they the same thing with a different name, or do they both serve a different function?</p>

<p>I don't seem to be able to find much documentation on <code>.gitkeep</code>.</p>
","0","509271","0","0"
"25700186","312725","2014-09-06 12:21:03","15","8705","<git><gitignore>",".DS_Store still appears in git status despite being in .gitignore","<pre><code>$ cat .gitignore 

# OSX
*/.DS_Store
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
Icon?
ehthumbs.db
Thumbs.db

$ git status
On branch develop
Changes not staged for commit:
  (use ""git add &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

    modified:   Assets/Sprites/.DS_Store

no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>There are more unrelated files in .gitignore and status message right now, but .gitignore itself is not modified, this version is committed.</p>

<p>How can I fix that?</p>
","1","312725","0","0"
"44284854","6114451","2017-05-31 12:29:11","3","337","<wordpress><git><gitignore>","Exclude auto-generated image sizes in WordPress uploads folder with gitignore","<p>I have a directory structure similar to <a href=""https://github.com/roots/bedrock"" rel=""nofollow noreferrer"">bedrock</a>. So WordPress in its own subdirectory <code>wp/</code> and the stuff that normally goes into wp-content is in <code>app/</code>. I want to exclude all directories in <code>app/</code> BUT <code>uploads/</code>.</p>

<p>But inside <code>uploads/</code> itself I want to exclude every image that was automatically generated by WordPress. So every file that follows the pattern <code>$original_image_name-$widthx$height.$ext</code>.</p>

<p>I tried the different solutions from all the already asked questions there are and my current (still not working) <strong>.gitignore</strong> looks like this now:</p>

<p><strong>.gitignore</strong></p>

<pre><code># WordPress
public/wp/
public/app/*
!public/app/uploads
public/app/uploads/*-*x*.* # auto-generated sizes
</code></pre>

<p>When checking <code>git status public/app/uploads/</code> it still shows the auto-generated files as <code>Untracked files</code> along with the other images.</p>
","0","6114451","",""
"62939781","877291","2020-07-16 16:58:29","15","32988","<python><git><visual-studio-code><gitignore>","Adding files to gitignore in Visual Studio Code","<p>In Visual Studio Code, with git extensions installed, how do you add files or complete folders to the .gitignore file so the files do not show up in untracked changes. Specifically, using Python projects, how do you add the <strong>pycache</strong> folder and its contents to the .gitignore. I have tried right-clicking in the folder in explorer panel but the pop-menu has no git ignore menu option. Thanks in advance.</p>
<p>I know how to do it from the command line. Yes, just edit the .gitignore file. I was just asking how it can be done from within VS Code IDE using the git extension for VS Code.</p>
","3","877291","",""
"62945621","12787469","2020-07-17 01:08:23","0","715","<amazon-web-services><deployment><environment-variables><gitignore>","Issues with .env and .gitignore for AWS EC2 deployment","<p>So I made an app using react.js (MERN). The app has like two 3rd party APIs. I stored the ID keys in an <code>.env</code> file. For the sake of security, when pushing the code to Github, I had the <code>.env</code> listed in a <code>.gitignore</code> file. But with that, how am I supposed to have my EC2 instance get access to the info that was hidden in the <code>.gitignore</code>?</p>
","0","12787469","",""
"44311144","5823712","2017-06-01 15:05:18","0","33","<git><gitignore>","How to make gitignore exception","<p>I am trying to use the <code>.gitignore</code> to help me filter out folders. I need an inner-folder but not anything else in the folder which contains this inner-folder.</p>

<p>I tried this:</p>

<p><strong>.gitignore</strong></p>

<pre><code>**/outer-folder
!inner-folder/
</code></pre>

<p>This does not seem to work. The entire outer-folder is gone. Why?</p>

<p>Also, I would appreciate if someone help me with a relevant question: Maybe the reason this does not work is because the <code>.gitignore</code> never get re-executed after I added these two lines of code. So how to force Git run <code>.gitignore</code>?</p>

<p>I tried <code>touch .gitignore</code> but some bash (e.g. vscode) does not know command <code>touch</code>. Any better solution? </p>
","5","5823712","",""
"44312726","3258462","2017-06-01 16:25:57","24","5545","<git><github><gitignore>","what does ""!"" do in gitignore files?","<p>I don't quite understand this</p>

<p>I've read the official documentation on it from <a href=""https://git-scm.com/docs/gitignore"" rel=""noreferrer"">https://git-scm.com/docs/gitignore</a></p>

<blockquote>
  <p>An optional prefix ""!"" which negates the pattern; any matching file excluded by a previous pattern will become included again. It is not possible to re-include a file if a parent directory of that file is excluded. Git doesn’t list excluded directories for performance reasons, so any patterns on contained files have no effect, no matter where they are defined. Put a backslash (""\"") in front of the first ""!"" for patterns that begin with a literal ""!"", for example, ""!important!.txt"".</p>
</blockquote>

<p>I have this gitignore file</p>

<pre><code>/media/*
!/media/xmlconnect
</code></pre>

<p>What does this do exactly? I'm ignoring all subdirectories inside <code>/media/</code>, but am I making an exception to <code>/media/xmlconnect</code> (e.g. I'm NOT gitignoring it?)</p>

<p>so basically I'm gitignoring everything but <code>media/xmlconnect</code>?</p>
","0","3258462","0","0"
"44322139","1726544","2017-06-02 06:22:49","0","156","<git><gitignore>","Include directives in gitignore?","<p>We have a bunch of repositories, and we'd like to manage our gitignore files from a single place.</p>

<p>Is is possible to define ""includes"", possibly over HTTP(S) so that we can just place that stanza in the gitignore file, and then we can make changes in a single place?</p>

<p>I know about the global gitignore files, but that needs to be modified by every developer, which is not really an option.</p>

<p>Thanks,</p>
","2","1726544","0","0"
"63173472","7999670","2020-07-30 12:45:01","-1","212","<git><gitignore>","How to ignore exact filenames in .gitignore? (without substrings)","<p>Lets say that I have a file which contains sensitive information called <code>secrets/passwords.txt</code>.
I want git to ignore this file, but upload another file named <code>/secrets/passwords.txt.template</code> which contains that key names without the passwords themselves.</p>
<p>How can I write a logic in <code>.gitignore</code> that ignores <code>secrets/passwords.txt</code>, but includes <code>secrets/passwords.txt.template</code>?</p>
","2","7999670","",""
"25999079","2036825","2014-09-23 15:31:53","0","88","<git><gitignore>","Although ignored globally, git lists a new file on new repository","<p>The file <code>[repository-name].sublime-workspace</code> is listed on <code>git status</code> as new although it has been ignored via the global ignore file.</p>

<p><strong>.gitignore_global</strong> (located in <code>C:\Users\[User]\</code>)</p>

<pre><code>*.sublime-workspace
</code></pre>

<p><strong>.gitconfig</strong> (located in <code>C:\Users\[User]\</code>)</p>

<pre><code>[core]
    excludefile = c:/Users/[User]/.gitignore_global
</code></pre>

<p><strong>Checking status</strong></p>

<pre class=""lang-bash prettyprint-override""><code>$ git status
On branch gh-pages
Your branch is up-to-date with 'origin/gh-pages'.

Changes to be committed:
  (use ""git reset HEAD &lt;file&gt;..."" to unstage)

        new file:   [repository-name].sublime-workspace
</code></pre>

<p>The global ignore file is working on several projects and I am aware of the fact, that already tracked files will continue to be tracked.</p>

<p>However, this is a new repository (both locally and remotely). I don't understand, why it is listing the file there. How comes? Please note: I don't want to list this file in the project-specific <code>.gitignore</code>. It's not specific to the project and I want it to be ignored in general.</p>

<p>The file in question was copied to the directory and appeared on <code>git status</code>. It was not staged.</p>
","0","2036825","",""
"7877171","2161842","2011-10-24 14:27:42","3","1339","<git><gitignore>","gitignore not working - want to ignore everything but gitignore file to keep an 'empty' directory","<p>I have a <code>.gitignore</code> file in a few directories (ex. <code>log/</code>) with the following contents:</p>

<pre><code>*            "" Ignore everything in this directory
!.gitignore  "" Except this file
</code></pre>

<p>Nonetheless, if there is a file in that directory, <code>git status</code> shows it to me saying it's new but untracked.</p>

<pre><code># On branch master
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       log/blah.log
nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p>I have found other posts on stackoverflow suggesting putting a comment on the first line and various other forms or random voodoo, but nothing has worked.</p>

<p>Simply, I want a <code>tmp/</code> and <code>log/</code> directory to exist in my repo, but empty. I don't want anyone to be harassed to add their log and tmp files to these directories.</p>
","0","2161842","0","0"
"26033074","220687","2014-09-25 07:35:09","0","193","<git><gitignore>","git doesn't ignore file while it matches with a wildcard in gitignore","<p>I have a gitignore line like this</p>

<pre><code>*.user # Qt Creator backup files
</code></pre>

<p>... and it doesn't match CMakeLists.txt.user! How come?</p>
","0","220687","",""
"44572486","8167184","2017-06-15 16:22:39","1","1831","<css><sass><less><gitignore><create-react-app>","Is it possible to .gitignore only certain .css files that are build products of neighboring .less/.scss files?","<p>I'm working on a Create-React-App project, which notoriously does not support css transpilers such as SASS and Less. The general solution, as discussed <a href=""https://github.com/facebookincubator/create-react-app/blob/master/packages/react-scripts/template/README.md#adding-a-css-preprocessor-sass-less-etc"" rel=""nofollow noreferrer"">here</a> and <a href=""https://hackernoon.com/using-sass-with-create-react-app-without-ejecting-b5f4f827ed9e"" rel=""nofollow noreferrer"">here</a>, is to compile the source .less/.scss and import the build product .css into your components. Then you can remove all .css from source control and only track .less/.scss.</p>

<p>This is a fine solution, but only a handful of my components really need Less for clarity/extensibility; for the most part, pure css is fine. So, what I'd like to do is use .css everywhere except for some .less sprinkled in here and there. I can configure this with the Less compiler, but for source control I'd like to watch only the ""source"" css files, and ignore the ""build"" css files (generated from Less). Because of this I cannot blanket .gitignore all .css, since some are truly source files. </p>

<p>So, <strong>is there a glob pattern for this?</strong> Maybe:</p>

<pre><code>*.css where *.less
</code></pre>

<p>I see two other possible solutions:</p>

<ol>
<li>switch everything to .less, even when it's not necessary, and go on ignoring all *.css</li>
<li>selectively .gitignore only the .css that are build products. </li>
</ol>

<p>I like option 2, but it just seems a little error prone and more maintenance.</p>
","1","8167184","",""
"7927230","907624","2011-10-28 09:08:08","828","346544","<git><github><gitignore>","Remove directory from remote repository after adding them to .gitignore","<p>I committed and pushed some directory to github. After that, I altered the <code>.gitignore</code> file adding a directory that should be ignored. Everything works fine, but the (now ignored) directory stays on github.</p>

<p>How do I delete that directory from github and the repository history?</p>
","0","907624","0","0"
"26345488","2236337","2014-10-13 17:22:40","2","2037","<ruby-on-rails><git><gitignore><cloud9-ide>","Git continues to push a .c9 folder despite it being in .gitignore","<p>I'm using the <a href=""https://c9.io/"" rel=""nofollow"">cloud9 IDE</a> with Ruby on Rails and having an issue with git.</p>

<p>I have a folder in my workspace called .c9 which contains all the cloud9 related files including it's regularly changing metadata.</p>

<p>I've added an ignore to my gitignore but keeps pushing to my bitbucket repository anyway. Worse when I branch off the metadata contained within goes out of sync and git insist i have to resolve the issue before I merge back.</p>

<p>I have no idea what I'm doing wrong here. </p>

<p>My gitignore looks like this:</p>

<p><code># Ignore the c9 files.
/.c9</code></p>

<p>I have also tried
<code>.c9</code>, <code>/.c9/*</code>, <code>.c9/*</code> but no joy...</p>

<p>I've checked to see that it is actually in my workspace with <code>la</code> returning:</p>

<pre><code>.c9/
.gitignore
Gemfile.lock
README.md
Todo.md
bin/
config.ru
lib/
public/
test/
vendor
.git/
Gemfile
Guardfile
Rakefile
app/
config/
db/
log/
spec/
tmp/
</code></pre>

<p>Any thoughts on where I'm going wrong?</p>
","3","2236337","",""
"22906851","34956","2014-04-07 08:09:36","235","68212","<git><gitignore>","When would you use .git/info/exclude instead of .gitignore to exclude files?","<p>I am a bit confused about the pros and cons of using <code>.git/info/exclude</code> and <code>.gitignore</code> to exclude files.</p>

<p>Both of them are at the level of the repository/project, so how do they differ and when should we use <code>.git/info/exclude</code> ?</p>
","0","34956","0","0"
"63591588","1480192","2020-08-26 06:20:02","1","145","<cordova><ionic-framework><gitignore><ionic-appflow>","Ionic Appflow .gitignore for existing project","<p>We are trying to migrate an existing project from Phonegap to Ionic Appflow. This is a pure Javascript project without any Angular/React. We are using Ionic to take advantage of its build, push to app stores and liveupdate features. We are not sure which folders to exclude from github using .gitignore.</p>
<p>The <a href=""https://ionicframework.com/docs/appflow/cookbook/phonegap-build-migration"" rel=""nofollow noreferrer"">migration guide</a> only mentions the node_modules folder, but what about other folders such as: /platforms /plugins etc.? It looks like Appflow only needs the following:</p>
<p>/www</p>
<p>/Resources</p>
<p>config.xml</p>
<p>package.json</p>
<p>ionic.config.json</p>
<p>and everything else should be excluded from the github repository?</p>
","0","1480192","",""
"22924633","2525699","2014-04-07 22:56:32","97","98786","<git><version-control><github><gitignore>",".gitignore is not ignoring directories","<p><strong>What I did:</strong></p>

<p>I think there were some weird configurations from the github gui that caused this issue and prevented me from being able to easily use git from command line or even git-bash.</p>

<p>I ended up just uninstalling github and git then reinstalling just git for windows. I now have everything running off the command line(except ssh which I run from git-bash). Much easier and more reliable that the github gui.</p>

<p>Thanks to mu 無 for taking the time to try to figure this out. I didn't end up using his answer, but if I hadn't needed to do a reinstall of git it would have been what I needed to do.</p>

<hr>

<p>I am using the github gui on my local machine. I just noticed that a commit I was about to make was going to update all of my recently update node modules. I set up my .gitignore to ignore the entire <code>node_modules/</code> directory.</p>

<p>I'm not sure what to do about this. All the file types I included in .gitignore were ignored. It's just the directories that it seems to ignore.</p>

<p>Here is my .gitignore file:</p>

<pre><code>#################
## Sublime Text
#################

*.sublime-project
*.sublime-workspace

#################
## Images
#################

*.jpg
*.jpeg
*.png
*.gif
*.psd
*.ai

#################
## Windows detritus
#################

# Windows image file caches
Thumbs.db
ehthumbs.db

# Folder config file
Desktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Mac crap
.DS_Store

#################
## Directories
#################

dev/
cms/core/config/
node_modules/
</code></pre>
","10","2525699","0","0"
"42162914","7546587","2017-02-10 15:23:49","0","427","<git><bash><github><gitignore><git-bash>","Ignore files within a subdirectory using gitignore","<p>I'm trying to create a gitignore file for git that ignores any .file within any dir/. I want to ignore all instances of .file inside instances of a dir/. These are specific file formats and directory.</p>

<p>For example, .file is the file format of new.file. The dir/ is the directory that houses new.file. The path is <code>dir/new.file</code>.</p>

<p>I need git to ignore possible instances of .file within possible instances of dir/, which may appear arbitrarily.</p>

<p>I tested these:</p>

<pre><code>**/dir/*.file
*/dir/*.file
*/dir/**/*.file
dir/**/*.file
</code></pre>

<p>However, whenever I create a <code>foo/dir/new[*].file</code>, I was able to <code>git add</code> it and also <code>git commit</code> the file.</p>

<p>All new instances of the file format .file within a dir/ directory are added to staging with <code>git add .</code> or <code>git add -A</code>. I expect <code>git</code> to ignore these files.</p>
","0","7546587","0","0"
"22937698","2002855","2014-04-08 12:53:34","4","9244","<git><gitignore><git-rm>","Undo git rm . -r --cached or commit changes?","<p>I was trying to make my .gitingore work (<a href=""https://stackoverflow.com/questions/11451535/gitignore-not-working"">Link to the question</a> :) ). </p>

<p>I have just done </p>

<pre><code>git rm . -r --cached 
</code></pre>

<p>and now I have a whole list of deleted files when I enter:</p>

<pre><code>git status -s 
</code></pre>

<p>Is this normal? 
Can i safetly commit all my changes? </p>

<p>Or maybe there is a way to undo this command? </p>

<p>PS: I was trying to understand what this command do but i've only found this: <a href=""http://brianloomis.wordpress.com/2009/08/10/git-rm-r-cached/"" rel=""nofollow noreferrer"">http://brianloomis.wordpress.com/2009/08/10/git-rm-r-cached/</a>
And it's not so clear to me.</p>

<p>PS 2: OK :) To save my skin I've made a reset:</p>

<pre><code>git reset HEAD *
</code></pre>

<p>The DELETED files went bye bye :) There are no longer visible in git status -s .
But still is it safe to do the command:</p>

<pre><code>git rm . -r --cached and then add and commit it? 
</code></pre>
","0","2002855","0","0"
"23134015","119198","2014-04-17 13:07:27","2","239","<git><gitignore>","How not to ignore an item locally which is in .gitignore_global","<p>I have <code>*.log</code> in .gitignore_global but I want to add it locally.</p>

<p>How can I achieve this?</p>
","0","119198","",""
"42342925","5795594","2017-02-20 11:07:05","0","318","<git><version-control><gitignore>","git ignores too many files","<p>I have files structure:</p>

<pre><code>$ ls xtest/
arch.gz.keep  
raq.gz.keep
qq

$ ls xtest/qq/
ww.gz.gitkeep
aa.keep
</code></pre>

<p>My <code>.gitignore</code></p>

<pre><code>/xtest/*
*.sql
*.gz
*.zip
*.log
!*.keep
!*.gitkeep
!*.dist
!*.dist.*
</code></pre>

<p><code>git status</code>
files untracked:</p>

<pre><code>xtest/.gitkeep
xtest/.keep
xtest/arch.gz.keep
</code></pre>

<p>For me i need also to have untracked:</p>

<pre><code>xtest/qq/ww.gz.gitkeep
xtest/qq/aa.keep
</code></pre>

<p><code>git --version
1.9.1 
on Ubuntu 14.04</code></p>
","2","5795594","",""
"42346148","1408347","2017-02-20 13:42:22","0","283","<git><gitignore>","git ignore everything except files in certain subdirectories","<p>I just created a folder like this:</p>

<pre><code>.
├── config
│   ├── subfolder
│   │   └── config.xml
│   └── subfolder2
│       └── config.xml
├── .gitignore
├── log2.txt
└── log.txt
</code></pre>

<p>And I've typed <code>git init</code> in this folder. I want to ignore everything except <code>.gitignore</code>, and all <code>config.xml</code> files.</p>

<p>These are the <code>.gitignore</code> I have tried:</p>

<p>1:</p>

<pre><code>*
!.gitignore
!**/config.xml
</code></pre>

<p>2: </p>

<pre><code>*
!.gitignore
!config/*/config.xml
</code></pre>

<p>3:</p>

<pre><code>*
!.gitignore
!**/config.xml
</code></pre>

<p><code>git status</code> shows <code>.gitignore</code> is the only untracked file with any one of the gitignore settings above.</p>

<p>I want all the <code>config.xml</code> files to be on the untracked files list too. </p>

<p>I've read the tutorial at <a href=""https://www.atlassian.com/git/tutorials/gitignore"" rel=""nofollow noreferrer"">atlassian</a>. And I think that maybe it's the following rule that makes me not able to ignore everything except certain files under subdirectories.</p>

<p>I'm using <code>git version 2.11.0.windows.1</code> in windows 10 operating system. Anyone knows why my <code>.gitignore</code> file is not working the way I expect?</p>

<p><a href=""https://i.stack.imgur.com/POdTj.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/POdTj.png"" alt=""enter image description here""></a></p>
","5","1408347","",""
"23176587","2775523","2014-04-19 23:05:34","0","146","<xcode><git><xcode5><gitignore>","How to use gitignore files in Xcode 5","<p>I am still pretty new to using git, and I am a little confused on how to ignore files.  I know you make a file named .gitignore, and usually have it at the root directory of your project, but is that it?</p>

<p>Am I supposed to add it to my Xcode project in Xcode 5?  Most of my research has shown what should be IN the .gitignore (like <a href=""https://github.com/github/gitignore/blob/master/Objective-C.gitignore"" rel=""nofollow noreferrer"">Gitignore/Objective-C.gitignore</a>), but the closest I've found to my question is:  <a href=""https://stackoverflow.com/questions/14517440/how-to-add-gitignore-file-into-xcode-project"">How to add .gitignore file into Xcode project</a>.</p>

<p>While that does say HOW to do it, is this what one does?  Or do you just leave it in the base folder and it doesn't matter whether it is in the project or not?</p>
","0","2775523","",""
"5270917","401523","2011-03-11 09:05:23","52","23557","<gitignore>","Why doesn't my global .gitignore file ignore?","<pre><code>$ cat ~/.gitconfig
[core]
        editor = vim
        excludefiles = /home/augustin/.gitignore
$ cat ~/.gitignore
toto
$ mkdir git_test
$ cd git_test/
$ git init
$ touch toto
$ git status

# On branch master
#
# Initial commit
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       toto
nothing added to commit but untracked files present (use ""git add"" to track)
$ git --version
git version 1.6.3.3
</code></pre>

<p>Why isn't toto being ignored?</p>

<p>Other settings in ~/.gitconfig are taken into account (colors, editor). </p>
","3","401523","0","0"
"60665694","6772562","2020-03-13 06:17:24","2","2229","<visual-studio-code><gitignore><vscode-remote>","The files and folders specified in gitignore don't grayed out in vscode remote development mode","<p>The files and folders specified in gitignore don't grayed out in vscode remote development mode.</p>

<p><a href=""https://i.stack.imgur.com/yeTrX.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/yeTrX.png"" alt=""enter image description here""></a></p>

<p>Is there something I missing? or it does not supported natively in remote development mode?</p>
","0","6772562","",""
"16736856","109306","2013-05-24 14:04:16","1383","544911","<git><android-studio><gitignore>","What should be in my .gitignore for an Android Studio project?","<p>What files should be in my <code>.gitignore</code> for an Android Studio project?</p>

<p>I've seen several examples that all include <code>.iml</code> but IntelliJ docs say that <code>.iml</code> must be included in your source control.</p>
","3","109306","0","0"
"16744844","456584","2013-05-24 23:20:56","1","522","<gitignore><ack>","How to sync .ackrc and .gitignore_global?","<p>I find that the file/directory types in my .gitignore_global (which changes fairly regularly) are typically those that I'd like to ignore in my ack searches.</p>

<p>Is there a way to sync or ""pipe"" the the ignored files / directories from my .gitignore_global to my .ackrc?</p>
","0","456584","",""
"16770282","2028560","2013-05-27 09:35:28","25","8385","<git><gitignore>","How to gitignore *only* files?","<p>I'm surprised that simple patterns like *.user in a .gitignore file seem to match files <strong>and</strong> folder names. </p>

<pre><code>ringods$ mkdir TestIgnore
ringods$ cd TestIgnore/
ringods$ git init
Initialized empty Git repository in /Users/ringods/Projects/hostbasket/TestIgnore/.git/
ringods$ git status
# On branch master
#
# Initial commit
#
nothing to commit (create/copy files and use ""git add"" to track)
ringods$ mkdir security.user
ringods$ touch security.user/file_may_not_be_ignored.txt
ringods$ git status
# On branch master
#
# Initial commit
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   security.user/
nothing added to commit but untracked files present (use ""git add"" to track)
ringods$ echo ""*.user""&gt; .gitignore
ringods$ cat .gitignore 
*.user
ringods$ git status
# On branch master
#
# Initial commit
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   .gitignore
nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p>Do I have the wrong expectation? How can I write a simple <em>ignore files with extension blah</em> and prevent folders ending in <em>.blah</em> being matched?</p>

<p>The <a href=""https://www.kernel.org/pub/software/scm/git/docs/gitignore.html"" rel=""noreferrer"">gitignore man page</a> mentions that patterns without a / are matched using shell glob pattern functionality, but it doesn't really tell me if it matches files only or files and directories.</p>
","0","2028560","0","0"
"16770611","1651851","2013-05-27 09:55:01","-1","131","<git><gitignore>","Why Git displays the contents of .gitignore file as untracked?","<p>Already read all the articles about the <code>.gitignore</code> file, but nothing helps. I will tell you honestly - I'm new to the study of the Git. The problem is that misrepresented the detailed design for your android, I added a line like this to ignore folder <code>bin/</code>. But after I call <code>git status</code> - that I have shown in the list of untracked folder <code>bin/</code>. I tried to add a <code>.gitignore</code> file to <code>my_project/</code> folder, or <code>my_project/.git/</code> folder - focused on the latest version. Deleted all the files from the list prepared. I again did wrong or what did not? 
/git version 1.8.1.msysgit.1/</p>
","3","1651851","",""
"16774432","436560","2013-05-27 13:34:36","4","2395","<git><windows-7><gitignore>",".gitignore fails to ignore a file","<p>I have a file, foo.php and it is located inside the bar foler, which is in the root folder of the project.</p>

<p>It was recently deleted by mistake, but I have re-created it, its path inside the folder is bar/foo.php</p>

<p>I have a row in <code>.gitignore</code>, stating that:</p>

<pre><code>bar/foo.php
</code></pre>

<p>The path is correct, but if I run a</p>

<pre><code>git status
</code></pre>

<p>the file is shown as a new file. How can I ignore it, if <code>.gitignore</code> fails to ignore it in its current version?</p>

<p>I am developing under Windows 7.</p>

<p>Thanks for any input.</p>
","0","436560","",""
"50830017","1728526","2018-06-13 06:02:05","0","103","<git><gitignore>","How to mention once to ignore 2 folders with same name from different directories using gitignore?","<p>I have following folders in my project.</p>

<pre><code>public/first/A
public/second/A
public/first/B
public/second/B
</code></pre>

<p>And similarly I've other folders which is also in <code>public/first</code> and <code>public/second</code>.</p>

<p>To ignore these folders I need to add following to .gitignore :</p>

<pre><code>/public/first/A
/public/second/A
....
</code></pre>

<p>Is there a way which I can follow to mention <code>A</code> and <code>B</code> folder only once in gitignore and they will be ignored from both <code>/public/first</code> and <code>/public/second</code>.</p>

<blockquote>
  <p>Note:  Folders with <strong>A</strong> &amp; <strong>B</strong> name with different content might be available in other folders like <code>public/first/app/A</code> and it should not be ignored.</p>
</blockquote>
","0","1728526","",""
"17888695","814126","2013-07-26 18:39:56","110","15390","<git><gitignore>","Difference between .gitignore rules with and without trailing slash like /dir and /dir/","<p>Is there a difference between <code>/dir</code> and <code>/dir/</code> in the .gitignore file within a Git repository?</p>

<p>How are the following different?</p>

<pre><code>/dir
/dir/
/dir/*
</code></pre>
","1","814126","0","0"
"17889346","841626","2013-07-26 19:22:26","0","341","<git><version-control><gitignore><git-status>","git ignore a directory not working","<p>so I created a new directory called ""Repository"" WITHOUT adding, committing, and pushing</p>

<p>I then added this to my .gitignore</p>

<pre><code>/home/users/user/httpdocs/Repository/*
/home/users/user/httpdocs/Repository
</code></pre>

<p>I also did this </p>

<p><code>cd /home/users/user/httpdocs/Repository</code></p>

<p><code>git update-index --assume-unchanged $(git ls-files | tr '\n' ' ')</code></p>

<p>but then whenever I do git status the directory will still appear:</p>

<blockquote>
<pre><code> Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       Repository/
nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>
</blockquote>

<p>How do I get that directory disappear from git status accordingly</p>
","0","841626","",""
"17896965","2625274","2013-07-27 10:52:15","0","891","<git><netbeans><gitignore>","Why git can see some ignored files?","<p>I'm trying to versioning a Netbeans Project. So I keep in my remote repo:</p>

<ul>
<li>[projectname]/src</li>
<li>[projectname]/nbproject</li>
</ul>

<p>The point is that I don't want to update nbproject files after every build/commit. Updating the properties is necessary only when I make big changes, like adding a new library (in all other cases cloning the project with the same old folder work).
At first I pushed a commit with the 2 working directories, after that I modified and committed the .gitignore adding /nbproject , so the others can clone the project without references/properties problems and commit source changes without updating the nbproject files.
The idea of my team is that every time there is a big change to do (like adding a new library to the project), the commit should be done manually from git bash forcing the nbproject folder to update, in all other cases instead (most of the times) it can be safely done using NetBeans changing and committing only the source.</p>

<p>The problem is occured when I needed to add a library. Infact after the addition of the .jar and code changes I went to check what git saw from bash, this is the output of <code>git status</code>:</p>

<pre><code>    $ git status
# On branch newVersioning
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working dire
#
#       modified:   ****/nbproject/project.properties
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       lib/**************.jar
#       ****/src/***/***********/****.java

no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>I don't understand why git can see (without any type of forcing) the change of the file project.properties that it should automatically ignored by versioning.
This is the .gitignore line</p>

<pre><code>****/nbproject/
</code></pre>
","10","2625274","",""
"17904883","65724","2013-07-28 04:05:01","0","93","<git><gitignore>","how to prevent git from tracking a single line?","<p>I have a projects with few versions, each one of them obviously runs on its own git branch.
the project has a tracked configuration file (google app engine's app.yaml) which, among other things, holds the version name.</p>

<p>I'd like to jave a way to tell git to ignore that line when merging bug fixes from one branch to another.</p>

<p>is there an intelligent way to so so?</p>
","0","65724","0","0"
"17932658","357189","2013-07-29 19:33:33","6","2813","<git><shell><gitignore>","Git init with option for auto-creation of a default .gitignore","<p>There is a <a href=""https://stackoverflow.com/questions/16658087/automatically-add-gitignore-and-hooks-on-git-init"">previous post about automatically adding .gitignore</a>, but how would you specify in <code>git init</code> an <b>option</b> which indicates the corresponding <code>.gitignore</code> to add upon git init? </p>

<p>(In other words, be able to specify which <code>.gitignore</code> to use)</p>

<p>Would this be possible using git commands alone, or some shell script?</p>
","0","357189","0","0"
"19041337","1312080","2013-09-27 01:30:19","0","122","<git><git-branch><gitignore>","Version file in only one branch and but keep in workspace/.gitignore in others","<p>I have about five local branches.  There is a locally used utility script that I would like to use in all of those branches, however, I want to version it in only one of them (let's call it <strong>BranchX</strong>) and ignore it in the rest.  </p>

<p>The problem is, when I commit the script to BranchX and check out another branch, the script disappears because it is properly versioned in another branch (BranchX) but neither committed into the current branch nor ignored in it.  So I have a feeling I need to do something when I am in BranchX to tell git to, although the file is versioned there, always keep it on disk even when I go to a different branch so that I can add it to its <code>.gitignore</code> (unless it is there already).  </p>

<p>I was thinking of <code>git rm --cached &lt;PATH&gt;</code> which I have used before to remove a versioned file from a local branch but keep it on disk, however, I do not want to remove it from that git branch and that is what this command will do for me.  How do I accomplish the same thing that command does minus the remove from versioning so the file can wait for me there on disk when I switch to another branch?</p>
","0","1312080","",""
"19061877","586012","2013-09-28 00:12:46","1","798","<github><gitignore><github-for-windows>",".gitignore exclusion not working","<p>I am using GitHub for Windows to commit files. My <code>.gitignore</code> looks like:</p>

<pre><code>bin/*
!bin/IncludeThis.dll
</code></pre>

<p>I want to only include this binary, and not any others in any <code>bin</code> directories. However, this pattern is including all files in the <code>App/bin/</code> directory (including the one I want).</p>

<p>If I change it to:</p>

<pre><code>bin/
!bin/IncludeThis.dll
</code></pre>

<p>Then the whole <code>App/bin/</code> directory is excluded (as expected). Any suggestions? Is this a bug in Github for Windows?</p>
","0","586012","0","0"
"69425461","14104402","2021-10-03 13:51:11","-1","63","<git><gitignore>","Cannot get git to ignore files and folders","<p>I have a folder that I wanna keep track of using git but I don't wanna add certain files and folders. To do that I am trying to use <code>.gitignore</code> file but it doesn't seem to be working, because when I enter <code>git status</code> again it shows me those files and folder that I wanna ignore.</p>
<p><a href=""https://i.stack.imgur.com/U79Kx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/U79Kx.png"" alt=""enter image description here"" /></a></p>
<p>This is my working project directory. At this point I started empty git. Then I created a <code>.gitignore</code> file with the following content.</p>
<pre><code># See https://help.github.com/articles/ignoring-files/ for more about ignoring files.

.env
/node_modules/
model.txt
</code></pre>
<p>I even add and commited the <code>.gitignore</code> file. Now when I enter <code>git status</code> I get this.</p>
<pre><code>D:\Shashank.summer\test_API&gt;git status
On branch master
Untracked files:
  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)
        .env
        app.js
        config/
        extra.md
        model.txt
        models/
        node_modules/
        package-lock.json
        package.json
        routes/
        try.js

nothing added to commit but untracked files present (use &quot;git add&quot; to track)
</code></pre>
<p>What do here ?</p>
","5","14104402","",""
"51074889","221650","2018-06-28 04:47:32","2","1615","<git><gitignore><ignore>",".git/info/exclude not excluding an untracked file","<p>No matter if I create the file before or after adding it to the exclude file, it never ignores it.  </p>

<pre><code>$: cat ./.git/info/exclude

/*.php
/license.txt
/wp-admin
/wp-includes
/wp-content/themes/impact/page-test.php
wp-content/themes/impact/page-test.php
page-test.php

$: git status

On branch development
Your branch is up-to-date with 'origin/development'.

Untracked files:
  (use ""git add &lt;file&gt;..."" to include in what will be committed)

    wp-content/themes/impact/page-test.php

nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>
","5","221650","0","0"
"35507601","1647457","2016-02-19 14:25:25","0","411","<git><phpstorm><gitignore>","Cannot remove workspace.xml from my git","<p>I have tried everything but no matter what i do the workspace file (workspace.xml) keeps returning and runing my git project for me and my team.</p>

<p>Here are the steps ive taken:</p>

<pre><code>$ echo '.idea' &gt;&gt; .gitignore
$ git rm -r --cached .idea
$ git add .gitignore
$ git commit -m 'added idea'
$ git push
</code></pre>

<p>Now after the push i go into <code>PHPStorm</code> again and my .gitignore looks correct:</p>

<pre><code>.idea/
user_resources/*
img/*
app_server/user_resources/*
app_server/uploads/*
app_server/database.json
app_server/custom_modules/config.json
app_server/cacheObjects/*
organizationConfig.json
</code></pre>

<p>However once i try to commit the workspace file is again added and wants to be commited.
<a href=""https://i.stack.imgur.com/atXaF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/atXaF.png"" alt=""enter image description here""></a>
What am i doing wrong?</p>
","0","1647457","",""
"19100058","1721372","2013-09-30 17:17:50","1","889","<git><gitignore>","git ignore exception not working multiple subdirectories below ignored directory","<p>I am having an issue where the exception syntax for gitignore (!fileName.txt) is not working when the file is multiple subdirectories below the ignored directory.</p>

<p>For instance: </p>

<pre><code>web/[Ee]xample.[Ww]eb/[Ss]itecore/*
!web/[Ee]xample.[Ww]eb/[Ss]itecore/[Ss]hell/[Tt]hemes/[Ss]tandard/[Cc]ustom/32x32*
</code></pre>

<p>does not include the files in the folder 32x32.<br>
I have to manually add them via command line like so:</p>

<pre><code>git add -f -r web/[Ee]xample.[Ww]eb/[Ss]itecore/[Ss]hell/[Tt]hemes/[Ss]tandard/[Cc]ustom/32x32
</code></pre>

<p>Is there a way to use the exception operator in a situation like this?</p>
","7","1721372","0","0"
"19124858","144382","2013-10-01 20:01:58","3","284","<git><gitignore>","git ignore specific directories exception","<p>I have source structure similar to this one: </p>

<ul>
<li>Project A <ul>
  <li>bin</li>
  <li>src</li>
  <li>...</li>
</ul></li>
<li>Prjoject B<ul>
<li>bin</li>
<li>src</li>
<li>...</li>
</ul></li>
<li>...</li>
</ul>

<p>and I need to ignore everything except content of src folders. There are many other projects, and I don't want to put all of them into .gitignore. Sometimes I need to add another project into this structure, so everytime I add project, I would have to add it to gitignore... </p>

<p>So far I've been using * in .gitignore and manually adding files to be indexed using git add -f, but it is very slow method and sometimes I might miss something. And not seeing new files in git status is also very uncomfortable. </p>

<p>Is it possible to use something like this?</p>

<pre><code>*
! */src/*
</code></pre>

<p>(I tried this one with several other variations, but it didn't work. I also tried using **.)</p>

<p>P.S: I'm currently using git 1.7.1 </p>
","3","144382","",""
"69441733","6014384","2021-10-04 19:58:00","1","38","<git><gitignore><gitkraken>","Contents of gitignore duplicated on pull","<p>When one particular user pulls a repo (using GitKraken), the gitignore file immediately is added as a work in progress. When he opens the file, the contents are duplicated. This:</p>
<pre><code># Placing a # in front of any of the items listed below (e.g., #analyzer) will  #
# allow these items to be pushed to your Git repository. Keep in mind the more  #
# files you push to your repository, the more your performance may be affected. #
#################################################################################

/Output
/Analyzer
/FileSync
/Project/Users
/.svn
**/Thumbs.db

#################################################################################
# Add items to be ignored below                                                 #
#################################################################################

**/Corel Auto-Preserve
*.bak
/.ini
</code></pre>
<p>turns into this:</p>
<pre><code># Placing a # in front of any of the items listed below (e.g., #analyzer) will #
# allow these items to be pushed to your Git repository. Keep in mind the more #
# files you push to your repository, the more your performance may be affected. #
#################################################################################

/Output
/Analyzer
/FileSync
/Project/Users
/.svn
**/Thumbs.db

#################################################################################
# Add items to be ignored below #
#################################################################################

#################################################################################
# Placing a # in front of any of the items listed below (e.g., #analyzer) will #
# allow these items to be pushed to your Git repository. Keep in mind the more #
# files you push to your repository, the more your performance may be affected. #
#################################################################################



/Output
/Analyzer
/FileSync
/Project/Users
/.svn
**/Thumbs.db



#################################################################################
# Add items to be ignored below #
#################################################################################



**/Corel Auto-Preserve
*.bak
/.ini
</code></pre>
<p>My current solution to him is to simply discard the change and keep going with the rest of his work.</p>
<p>Any ideas as to why this is happening and how to prevent it?</p>
","2","6014384","0","0"
"19157511","835415","2013-10-03 11:03:14","0","55","<git><gitignore>","Include only specific subfolders in git","<p>I've a folder structure as shown below</p>

<pre><code>
--app
----design
------fold1
------fold2
------MyDesign
--------(my files)
----code
------fold3
------fold4
------MyCode
--------(my files)
----(some folders i dont care about)
----(some files i dont care about)

</code></pre>

<p>I've created a git repo @ <code>app/</code> folder. How will i ignore all the files and folders other than <code>app/design/MyDesign</code> and <code>app/code/MyCode</code>.</p>
","0","835415","",""
"69726532","11864836","2021-10-26 16:09:32","1","337","<git><gitignore>","git status showing untracked files included in .gitignore","<p>I have created .gitignore file in the root of my git working directory, with the intention of ignoring any file with the .log extension, and ignoring any file that is contained in a directory called logs. The .gitignore file has these exact entries:</p>
<pre><code>logs/
*.log
</code></pre>
<p>Now I would expect any files with the .log extension to be ignored by git, but when I add a file called test.log to the root of my working directory and run a git status, this file is showing up under the list of untracked files (I expected it to not be present because of the second line in my .gitignore file):</p>
<pre><code>git status
On branch master
Untracked files:
  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)
        test.log
</code></pre>
<p>Similarly if I add a test.log file into my /logs directory and run a git status, it doesn't show me the test.log file as an untracked change, but it still shows the creation of the logs directory as an untracked change (again in this instance I was expecting the entire directory to be ignored because of the first line in my .gitignore file):</p>
<pre><code>git status
On branch master
Untracked files:
  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)
        logs/
</code></pre>
<p>None of these changes have been committed to the repo yet, perhaps I'm misconfiguring the .gitignore file, or misunderstanding what it is supposed to do, any help would be appreciated.</p>
","1","11864836","",""
"69736670","14452555","2021-10-27 10:06:21","0","410","<git><github><gitignore>","How to setup gitignore in root folder","<p>I have a fullstack project I want to push to github. Root folder with server and client folder. I don't want to have 2 separate gitignore files in server and client. I just want to add it to root. When i did, its not ignoring any of the files.</p>
<pre><code>node_modules/
.env/
yarn.*
.DS_Store
</code></pre>
","5","14452555","",""
"51988464","2745436","2018-08-23 14:44:30","15","18221","<php><laravel><gitignore>","Official laravel recommendation of .gitignore confuse me with unused folder","<p>Following is the link for the official Laravel recommendation of .gitignore</p>
<p><a href=""https://github.com/laravel/laravel/blob/master/.gitignore"" rel=""noreferrer"">https://github.com/laravel/laravel/blob/master/.gitignore</a></p>
<p>This contains :</p>
<pre><code>/node_modules
/public/hot
/public/storage
/storage/*.key
/vendor
/.idea
/.vscode
/.vagrant
Homestead.json
Homestead.yaml
npm-debug.log
yarn-error.log
.env
.phpunit.result.cache
</code></pre>
<p>I've the following confusion :</p>
<ol>
<li><p>&quot;/public/hot&quot; when this will be used. did anybody has even seen the &quot;hot&quot; folder used inside the 'public' folder so far?</p>
</li>
<li><p>&quot;/public/storage&quot; when this will be used. did anybody have seen the 'storage' folder used inside 'public' so far?</p>
</li>
<li><p>As &quot;/public/hot&quot; &amp; &quot;/public/storage&quot; are not an obvious part of laravel framework, why is this recommended to add in gitignore?</p>
</li>
<li><p>Why other public subfolders like &quot;public/css/<em>, public/js/</em>, public/fonts/*&quot; are not added above in the list as it would be generated based on &quot;resource/&quot; content.</p>
</li>
<li><p>&quot;/storage/*.key&quot; when this &quot;key&quot; extension file will be created?</p>
</li>
<li><p>Why other storage subfolder like &quot;storage/framework/cache/<em>, storage/framework/sessions/</em>, storage/framework/views/<em>, storage/logs/</em>&quot; are not added in above list ?</p>
</li>
<li><p>What is the best .gitignore list for Laravel 5.4 onwards?</p>
</li>
</ol>
<p>I'd appreciate your thought. Thanks.</p>
","3","2745436","0","0"
"35902034","4267781","2016-03-09 20:35:48","1","4124","<git><maven><gitignore>","Adding MANIFEST.MF (and 2 other file types) to .gitignore","<p>I've had some issues trying to add <code>MANIFEST.MF</code> to my <code>.gitignore</code>. Whenever I run a maven->Update Project in eclipse, the file shows back up in my git status as untracked. </p>

<p>I have tried adding the following lines to my git ignore</p>

<pre><code>*.MF
MANIFEST
/MANIFEST.MF
**/MANIFEST.MF
**/MANIFEST.*
and a few other combinations with the wild card. 
</code></pre>

<p>Each time I would remove the Manifest.mf, update the .gitignore, and run the maven update(or <code>mvn clean install</code> from terminal), and the file shows up again as untracked. I have also made sure there isn't another .gitignore that is overriding this one. </p>

<p>I have also noticed the same problem occurring with <code>.properties</code> files and some <code>temp_persist_config_###.xml</code> files. But these occur during only the maven clean install from terminal. Would love any help on how to add these darn things to my .gitignore. </p>

<p>Contents of my MANIFEST.MF</p>

<pre><code>Manifest-Version: 1.0
Build-Jdk: 1.7.0_79
Built-By: lencalot
Created-By: Apache Maven
X-Resource-Search-Path: /Users/Lencalot/myProject/myCoreAggregator/myExecutor/myService/src/main/webapp,/Users/Lencalot/myProject/myCoreAggregator/myExecutor/myService/src/main/resources,/Users/Lencalot/myProject/myCoreAggregator/myExecutor/myService
</code></pre>

<p>what it was:</p>

<pre><code>Manifest-Version: 1.0
Build-Jdk: 1.7.0_79
Built-By: TeamMate1
Created-By: Apache Maven 3.1.1
X-Resource-Search-Path: E:\myProject\myCoreAggregator\myExecutor\myService\src\main/webapp,ETC...ETC..
</code></pre>
","7","4267781","0","0"
"35903536","722367","2016-03-09 22:01:29","0","26","<git><gitignore>","Can a git project track a directory listed in my global gitignore?","<p>I'm working on a project that needs to track it's <code>node_modules</code> directory. I don't really want to remove my global gitignore reference to that directory because all other projects should <em>not</em> be tracking the <code>node_modules</code> directory.</p>

<p>Is there a way to force git to track something at the project level? Or do I need to go through all projects verifying each has it's own ignore and then remove the reference from me global gitignore?</p>
","0","722367","",""
"54627135","3512538","2019-02-11 09:11:00","1","265","<bash><git><gitignore>","how to gitignore a file without corrupting the master's gitignore file","<p>I have a script I'm using from my repo's root and I don't want it to appear each time I <code>git status</code>.</p>

<p>I thought of adding it to <em>.gitignore</em> but I don't want this change tracked because I don't want the master's .gitignore to contain this file path (as no one else has it).</p>

<p>Is it possible to gitignore this file in a way my gitignore wouldn't be uploaded when, for example, I <em>git commit -a</em>?</p>
","4","3512538","",""
"23301107","97893","2014-04-25 19:06:32","8","6282","<git><git-branch><gitignore>","How can i include only specific folders in git using .gitignore?","<p>So i would like ignore everything except a file and a specific folder:</p>

<pre><code>rben@ubuntu:~/sites$ ls
development-box  puppet  sites  Vagrantfile  www-cms  www-common  www-mmfa
rben@ubuntu:~/sites$ cat .gitignore
*
!Vagrantfile
!puppet/
rben@ubuntu:~/sites$ git status
# On branch master
#
# Initial commit
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       Vagrantfile
nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p>I am expecting to see puppet in the list of untracked files. How can i include only the directory  puppet?</p>
","3","97893","0","0"
"60751756","10828054","2020-03-19 06:08:33","2","296","<ios><xcode><git><terminal><gitignore>","What files should Xcode projects track when git commits","<p>I took over an iOS project completed by objective-c. The project does not use git, and I want to use git to manage it locally.
I performed the following steps, and then when I submitted, I didn't know which files to add to the tracking file. (I created git to ignore files)</p>

<p><strong>Steps i did</strong></p>

<p>I opened the terminal and entered the following command:</p>

<pre><code>cd /Users/xxx/Desktop/xxx/Myproject

git init

touch .gitignore

open .gitignore    //I manually added the ignore rule in .gitignore and saved

git status    //我没有修改任何代码，而且没有执行 git add ，因为我不知道该添加哪些文件到追踪文件
</code></pre>

<p><strong>This is <a href=""https://www.gitignore.io/api/xcode,objective-c"" rel=""nofollow noreferrer"">ignore file</a></strong></p>

<p><a href=""https://i.stack.imgur.com/jDl2M.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jDl2M.png"" alt=""Results of git status""></a></p>

<p>Should I execute git add .? Or should I choose some additions?</p>

<p>I hope you can tell me the method and reason, I do n’t understand what I found on Google.</p>
","1","10828054","0","0"
"42635232","4817766","2017-03-06 20:46:29","1","58","<git><github><gitignore>","skip pulling new changes of certain file to server from github","<p>My project source code is stored in GitHub and pulled to the server to run the project. There is a file which new changes should not be pulled to the <code>server1</code>. But that file is not untracked file to ignore using <code>.gitignore</code> file. Actually, new changes of the file are required to run the project on other servers. </p>

<p>Is there any way to skip pulling new changes of the file to <code>server1</code> using <code>git</code>? </p>
","1","4817766","",""
"60752141","5559741","2020-03-19 06:47:28","2","423","<git><visual-studio-code><gitignore>","How to view only the files those only included in git repo in VSCode?","<p>I am developing a new extension for OpenCart using VSCode as IDE.
The root folder is the workspace folder, and I want only to change some files.
I set the .gitignore file to ignores all files except the files I want to work on.
This is my <code>.gitignore</code> file</p>

<pre><code>.htaccess.txt
config.php
php.ini
index.php
.vscode/*

#ignore all
*/*
</code></pre>

<p>Then I added my working files:</p>

<pre><code>git add path/to/file.php -f
</code></pre>

<p>everything is ok.
The problem is VSCode shows every file in the workspace.</p>

<p>I want to view only my working files.
I tries this trick:</p>

<p><a href=""https://i.stack.imgur.com/Fw72A.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Fw72A.jpg"" alt=""enter image description here""></a></p>

<p>It is good but still not working very well, as I have to open each folder to let VSCode find those files.</p>

<p>Is there any way to let VSCode shows only the files included in git repo?
<em>VSCode highlights those files by the way.</em></p>

<p>Or at least is there any way to hide all files except specific files?</p>

<p>Thanks</p>
","0","5559741","",""
"23478415","3605230","2014-05-05 17:39:45","1","494","<git><gitignore>",".gitignore doesn't ignore untracked files","<p>I want to ignore untracked files shown below, but it keeps showing.
I tried deleting cached files (<code>git rm --cached CruiserConsole*.*</code>) but it didn't work.</p>

<pre><code>D:\Git\CruiseProtocolScripts [master +8 ~1 -0 !]&gt; git status
# On branch master
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       CruiserConsole.exe
#       CruiserConsole.exe.config
#       CruiserConsole.pdb
#       CruiserConsole.vshost.exe
#       CruiserConsole.vshost.exe.config
#       CruiserConsole.vshost.exe.manifest
#       LuaInterface.dll
#       lua51.dll
nothing added to commit but untracked files present (use ""git add"" to track)
D:\Git\CruiseProtocolScripts [master +8 ~0 -0 !]&gt; git rm --cached .\CruiserConsole.*
fatal: pathspec 'CruiserConsole.*' did not match any files
</code></pre>

<p>Here's my .gitignore file.</p>

<pre><code>/CruiserConsole*.*
/*.dll
</code></pre>

<p>I guess I have improper pattern matching for file names, but I cannot point what's the exact problem.</p>

<p>Thank you in advance.</p>
","2","3605230","",""
"42640013","297868","2017-03-07 04:05:20","2","1019","<gitignore>","Why doesn't my git ignore file match xcuserdata?","<p>My <code>~/.config/git/ignore</code> file includes:</p>

<pre><code>xcuserdata/**
</code></pre>

<p>I just checked out a new project from Bitbucket, opened it in Xcode, and ran <code>git status</code>, and it shows:</p>

<pre><code>Untracked files:
  (use ""git add &lt;file&gt;..."" to include in what will be committed)

    Project Name.xcodeproj/project.xcworkspace/xcuserdata/
</code></pre>

<p>Why isn't the ignore file matching this directory?</p>
","0","297868","0","0"
"60757521","1075366","2020-03-19 12:43:07","0","31","<wordpress><git><gitignore>","git allow one directory while exclude rest folder in .gitignore fle","<p>I have a Wordpress website in which I have code as shown below: </p>

<p>wp-content/uploads/</p>

<p>which exclude uploads wp-content/uploads/ from git commit. But now I reached to the case where I have to include a subfolder <strong>wp-content/uploads/MY_CUSTOM_PDF</strong></p>

<p>How should I only allow <strong>MY_CUSTOM_PDF</strong> to be included in git commit while ignore the rest as it was earlier.</p>
","1","1075366","",""
"42647477","1982032","2017-03-07 11:45:13","-1","33","<git><gitignore>","Can't delete directory in repository by adding dir name in gitignore file in late push?","<p>I have pushed all the directories and files from local /var/www/html/wp into my repository.<br>
<a href=""https://i.stack.imgur.com/ltKqK.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ltKqK.png"" alt=""enter image description here""></a>    </p>

<p>Now i want to delete wp-content in the remote repository.
All the following commands executed locally.    </p>

<pre><code>cd /var/www/html/wp 
touch  .gitignore
vim   .gitignore
wp-content/
</code></pre>

<h1>Both wp-content/ and wp-content tested,none of them take  effect.</h1>

<pre><code>git init
git add .
git commit -m 'test'
git push origin master
</code></pre>

<p>Why .gitignore configuration take no effect?<br>
Can't delete directory in repository by adding dir name in gitignore file in late push?</p>
","1","1982032","",""
"42651913","188963","2017-03-07 15:16:54","4","797","<git><gitignore><conda><miniconda>","Git add . failing on subdirectory that has a .git folder, even though being ignored","<p>We have a deep directory structure with multiple README files at different levels. For instance:</p>

<pre><code>gitignoretest/
|-- 00README
|-- dir1
|   |-- 00README
|   |-- dir1
|   |   |-- 00README
|   |   |-- dir1
|   |   |-- dir2
|   |   |-- dir3
|   |   |-- file1
|   |   `-- file2
|   |-- dir2
|   |   |-- 00README
|   |   |-- dir1
|   |   |-- dir2
|   |   |-- dir3
|   |   |-- file1
|   |   `-- file2
|   |-- dir3
|   |   |-- 00README
|   |   |-- dir1
|   |   |-- dir2
|   |   |-- dir3
|   |   |-- file1
|   |   `-- file2
|   |-- file1
|   `-- file2
|-- dir3
|   |-- 00README
|   |-- dir1
|   |   |-- 00README
|   |   |-- dir1
|   |   |   |-- 00README
|   |   |   |-- dir1
|   |   |   |-- dir2
|   |   |   |-- dir3
|   |   |   |-- file1
|   |   |   `-- file2
|   |   |-- dir2
|   |   |   |-- 00README
|   |   |   |-- dir1
|   |   |   |-- dir2
|   |   |   |-- dir3
|   |   |   |-- file1
|   |   |   `-- file2

...
...
</code></pre>

<p>We want to ONLY version the <code>00README</code> files. We successfully tested this with <a href=""https://stackoverflow.com/a/987162/188963"">this</a> <code>.gitignore</code></p>

<p><em>.gitignore</em></p>

<pre><code># Ignore everything
*

# But not these files...
!.gitignore
!00README
# etc...

# ...even if they are in subdirectories
!*/
</code></pre>

<p>However, in the <em>real</em> scenario, one of the subdirectories is a <code>conda</code> installation which has some packages containing their own <code>.git</code> directories. When I do <code>git add .</code> it fails with the message:</p>

<pre><code>fatal: Not a git repository: Applications/conda/lib/STAR-Fusion/STAR-Fusion.wiki/../.git/modules/STAR-Fusion.wiki
</code></pre>

<p>The real scenario is <code>../TopLevel/Applications/...</code> with <code>../TopLevel/.gitignore</code>. Here are the things I've tried:</p>

<p><em>../TopLevel/.gitignore</em></p>

<pre><code># Ignore everything
*
/Applications/conda/**/*
/Applications/miniconda3/**/*
/Applications/newconda/**/*

Applications/conda/**/*
Applications/miniconda3/**/*
Applications/newconda/**/*

/**/.git
**/.git

/**/.git/**
**/.git/**

# But not these files...
!.gitignore
!00README.md
!USE_APPS
# etc...

# ...even if they are in subdirectories
!*/
</code></pre>

<p>But not hitting the mark.</p>

<hr>

<p><strong>EDIT</strong><br>
To address the issue of ""untracking"" subdirectories with <code>.git</code> folders as mentioned by @VonC, I present a completely fresh creation of the git repository. Note: the repository being added as the remote is a freshly minted <code>--bare</code> repository.</p>

<pre><code>balter@server:/home/.../TopLevel$ rmdir .git
balter@server:/home/.../TopLevel$ git init
Initialized empty Git repository in /home/.../TopLevel/.git/
balter@server:/home/.../TopLevel$ git remote add origin git@server.ohsu.edu:path/repo.git
balter@server:/home/.../TopLevel$ git status
# On branch master
#
# Initial commit
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   .gitignore
#   00README.md
#   Applications/
#   InstallationPackages/
#   USE_APPS
#   gitignoretest/
nothing added to commit but untracked files present (use ""git add"" to track)
balter@server:/home/.../TopLevel$ git add .
fatal: Not a git repository: Applications/conda/lib/STAR-Fusion/STAR-Fusion.wiki/../.git/modules/STAR-Fusion.wiki
</code></pre>
","7","188963","0","0"
"5399628","600500","2011-03-23 00:44:41","0","1388","<git><bash><redirect><gitignore>","Why is my new .gitignore automatically ignored?","<p>So, after converting my repository to git and doing the first build, some build directories showed up in <code>git status</code>:</p>

<pre><code># On branch master
# Changed but not updated:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       modified:   build.xml
#       modified:   src/ant/common-tasks.xml
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       classes/
#       doku/
#       texdoku/
#       tmp/
</code></pre>

<p>So, of course I need a <code>.gitignore</code>, and since I didn't want to type these directory-names again, I used this command:</p>

<pre><code>git status -s | grep '?' | cut -b 4- &gt; .gitignore
</code></pre>

<p>Since <code>git status -s</code> showed this</p>

<pre><code> M build.xml
 M src/ant/common-tasks.xml
?? classes/
?? doku/
?? texdoku/
?? tmp/
</code></pre>

<p>before, I assumed the new <code>.gitignore</code> file to contain these lines:</p>

<pre><code>classes/
doku/
texdoku/
tmp/
</code></pre>

<p>But then:</p>

<pre><code>$ git status
# On branch master
# Changed but not updated:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       modified:   build.xml
#       modified:   src/ant/common-tasks.xml
#
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>Yes, it ignored the four directories, but also the new <code>.gitignore</code> file. Why?</p>

<pre><code>$ git add .gitignore
The following paths are ignored by one of your .gitignore files:
.gitignore
Use -f if you really want to add them.
fatal: no files added
</code></pre>

<p>Huh. Why is my <code>.gitignore</code> ignored? I remember that in the last project I could add it to the repository. I searched quite a time, and googled what else could cause this file to be ignored - <code>.git/info/excludes</code> has only commented lines, and all parent-directories up to <code>/</code> have no <code>.gitignore</code>. Also <code>git config core.excludesfile</code> shows nothing.</p>

<p>Why?</p>
","0","600500","",""
"5600621","299216","2011-04-08 20:47:25","102","94773","<git><gitignore>",".gitignore exclude files in directory but not certain directories","<pre><code>application/cache/*
application/cache/folder/*
application/cache/folder/onemorefolder/*
</code></pre>

<p>This doesn't seem to be working. When I clone the project, there is no <code>""application/cache""</code> folder or <code>""application/cache/folder""</code> folder, etc...</p>

<p>I'd like if files in the cache folders weren't cached but folders were, so that the folders permissions transfer and exist.</p>
","0","299216","0","0"
"23716553","398461","2014-05-17 22:09:49","42","25646","<xcode><git><gitignore>","gitignore not ignoring file","<p>No matter what I put in <code>.gitignore</code> I can <em>not</em> get git to ignore the <code>UserInterfaceState.xcuserstate</code> file below:</p>

<pre><code>$ git status
On branch master
Your branch is up-to-date with 'origin/master'.

Changes not staged for commit:
  (use ""git add &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

    modified:   .gitignore
    modified:  CalFoo.xcodeproj/project.xcworkspace/xcuserdata/wcochran.xcuserdatad/UserInterfaceState.xcuserstate
</code></pre>

<p>I am using/editing the <code>.gitignore</code> file listed on <a href=""https://stackoverflow.com/questions/49478/git-ignore-file-for-xcode-projects"">this post</a>.
I tried everything to match the pattern including the exact pathname: <code>CalFoo.xcodeproj/project.xcworkspace/xcuserdata/wcochran.xcuserdatad/UserInterfaceState.xcuserstate</code> to no avail.</p>

<p>This particular problem arises from the workflow where Xcode is used to create the initial git repo and the <code>.gitignore</code> file from <a href=""https://stackoverflow.com/questions/49478/git-ignore-file-for-xcode-projects"">here</a> is added afterwards. A more general answer to ignoring previously tracked files in git can be found from <a href=""https://stackoverflow.com/questions/936249/stop-tracking-and-ignore-changes-to-a-file-in-git"">this question</a> (I guess I never found this post in my search since it didn't have ""gitignore"" in the title).</p>
","2","398461","0","0"
"23728505","208990","2014-05-19 01:21:14","7","528","<git><visual-studio-2013><gitignore>","Where does the default Visual Studio 2013 .gitignore reside?","<p>So awhile ago I noticed that Visual Studio was automatically creating a .gitignore file whenever I created a solution inside an existing local git repo folder.  Great.  However, I noticed it was ignoring some NCrunch files (*.ncrunchsolution and *.ncrunchproject) that should really be in source control.  So I decided to dig in to fix it.  The problem here is I don't know where it's getting this default file from.  I see that it's basically an older version of <a href=""https://github.com/github/gitignore/blob/master/VisualStudio.gitignore"">VisualStudio.gitignore at the gitignore GitHub project</a> (which just so happened to fix the NCrunch issue <a href=""https://github.com/github/gitignore/commit/d6ffb3cac30c0b338dadebfb13e1403a4029da61#diff-07fccc01505e9b231e926168fc909197"">back in April</a>).</p>

<p>Where can I find or configure the source for the .gitignore that the Visual Studio git provider automatically puts into a git repo?</p>

<p>(<strong>Edit</strong>: I looked at <a href=""http://msdn.microsoft.com/en-us/library/hh967655.aspx#ignore"">the ignore topic what I assume are the official docs for the VS 2013 git functionality</a>, but it doesn't help to find a system-wide setting for this.  It simply mentions ""the default .gitignore file provided by Visual Studio"" without any mention of how to modify this file.)</p>
","0","208990","0","0"
"23734725","","2014-05-19 09:53:59","2","137","<git><gitignore>","Exclude specific subdirectory with gitignore","<p>Let say there is directory structure like this:</p>

<pre><code>├── dir1
│   ├── subdir_1        # do not want this
│   │   ├── file1.txt   # and this
│   │   └── file2.txt   # and this
│   ├── subdir_2        # keep me in gitignore
│   └── subdir_3        # keep me as well
└── dir2
    └── subdir4
        ├── file3.txt
        └── file4.txt
</code></pre>

<p>And I want to <code>gitignore</code> everything what is in the <code>dir1</code> directory but not want to include <code>subdir_1</code>.
Which means I want to track changes in <code>subdir_1</code> and not in <code>subdir_2 or subdir_3</code></p>

<p>How to do this ? </p>

<p>I already tried </p>

<pre><code>/dir1/
!/dir/subdir_1
</code></pre>

<p>In fact my <code>.gitignore</code> file is much more longer and I was googling for solutions for that problem. They told me to first ignore everything with <code>*</code> and then negate it. But I'd prefer a more simple solution and not to refactor the existing <code>.gitignore</code>. </p>
","0","","",""
"61019909","441878","2020-04-03 20:28:40","1","265","<git><unity-game-engine><gitignore>","Why do .gitignore files for Unity omit .unitypackage files?","<p>I'm using Git to share files for student demos and realized <code>.unitypackage</code> files are automatically ignored by <code>.gitignore</code> files. For example, the <a href=""https://www.gitignore.io/api/unity,macos,windows"" rel=""nofollow noreferrer"">gitignore.io version</a>. Why is this? What am I risking if I remove this?</p>
","3","441878","",""
"24073519","1469208","2014-06-06 03:01:29","0","552","<git><gitignore>","Git reports untracked .gitignore file, that does not exist","<p>How to resolve following situation:</p>

<pre><code>$ git status
On branch master
Your branch is up-to-date with 'origin/master'.

Untracked files:
  (use ""git add &lt;file&gt;..."" to include in what will be committed)

        htdocs/files/.gitignore

nothing added to commit but untracked files present (use ""git add"" to track)

$ git rm htdocs/files/.gitignore
fatal: pathspec 'htdocs/files/.gitignore' did not match any files
</code></pre>

<p>The <code>.gitignore</code> file under <code>htdocs/files</code> actually <strong>does not exist</strong>:</p>

<pre><code>$ cd htdocs/files/

$ ls -ls
total 0
   0 drwxr-xr-x    3 Trejder  Administ        0 Jun  2 23:53 audios
   0 drwxr-xr-x    3 Trejder  Administ        0 Jun  2 23:53 files
   0 drwxr-xr-x    3 Trejder  Administ        0 Jun  2 23:53 photos
   0 drwxr-xr-x    3 Trejder  Administ        0 Jun  2 23:53 videos
</code></pre>

<p>(there are, however <code>.gitignore</code> files under each of listed folders, but I doubt, that this matters in this case)</p>

<p>I don't know, why git has any record about non-existing <code>htdocs/files/.gitignore</code>? How to resolve this?</p>
","2","1469208","",""
"61360130","13013715","2020-04-22 08:05:32","0","133","<git><vue.js><github><heroku><gitignore>","Git - Is it possible to have multiple .gitignores for multiple remotes?","<p>In my current <code>Vue</code> and <code>express</code> app, I have to remotes: origin (GitHub) and heroku (herokuapp.com). Heroku is for deployment of my app. </p>

<p><a href=""https://i.stack.imgur.com/J4wxq.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/J4wxq.png"" alt=""This is my file-structure""></a></p>

<p>In the <code>client</code> folder, I have the Vue source code that shouldn't be deployed to heroku. Anyways, I would like to push that folder to GitHub. </p>

<p>Is it possible that I push the whole source code I wrote to GitHub (excluding the <code>node_modules</code> and <code>.vscode</code>), but only my <code>server</code> folder and <code>package.json</code>/<code>package-lock.json</code> to heroku? </p>
","6","13013715","",""
"42809097","793328","2017-03-15 11:57:36","5","2445","<git><gitignore>","How can I add a file to my .gitignore without deleting it?","<p>I have a configuration file in my project that is server specific so does not want to be included in Git as every time we deploy it overwrites the settings for the server. To resolve this problem the file was deleted from Git... nice idea but now every time the project is deployed the servers configuration file is deleted.</p>

<p>So I'm now stuck with a problem. What I really wanted was the file to be in <code>.gitignore</code> and never added to the project, but once it was added I can't see a way to remove it from the project without it firing off a delete on the existing file with every deploy.</p>

<p>Is there way I can remove a file from a project without deleting it. Effectively retrospectively ignoring a file that was already added?</p>
","3","793328","",""
"61381438","1426932","2020-04-23 07:17:34","3","74","<binary><gitignore>","how to gitignore extension-less files without breaking a global gitignore?","<p>How to gitignore extension-less files without breaking a global gitignore?
This is not a duplicate of <a href=""https://stackoverflow.com/questions/19023550/how-do-i-add-files-without-dots-in-them-all-extension-less-files-to-the-gitign/19023985#19023985"">How do I add files without dots in them (all extension-less files) to the gitignore file?</a> or <a href=""https://stackoverflow.com/questions/5711120/gitignore-without-binary-files"">gitignore without binary files</a> or similar questions, since none of them addressed the constraint that I want to honor my global gitignore.</p>

<p>Example:</p>

<pre><code># in $XDG_CONFIG_HOME/git/gitignore
foo.bar
</code></pre>

<pre><code># in /pathto/somegitrepo/.gitignore
*
!/**/
!*.*
</code></pre>

<p>With this pattern (that gitignores extension less files such as posix binaries), the global gitignore is effectively rendered useless, so this is not an acceptable solution.</p>

<p>I'm also not interested in workarounds (eg listing all extension-less paths explicitly or using a script to generate the gitignore file or requiring all your binaries to be in some folder).</p>

<p>Note: see also <a href=""https://public-inbox.org/git/CANri+Ey2o-P+3S9iu1xj5YQooqBxo5Lvom0HdiQDAkSVTRv86A@mail.gmail.com/T/#u"" rel=""nofollow noreferrer"">https://public-inbox.org/git/CANri+Ey2o-P+3S9iu1xj5YQooqBxo5Lvom0HdiQDAkSVTRv86A@mail.gmail.com/T/#u</a> for what I'd like gitignore syntax to allow.</p>
","0","1426932","0","0"
"5698148","541262","2011-04-18 03:14:48","469","337574","<git><gitignore>","Where does the .gitignore file belong?","<p>Does the .gitignore file belong in the .git folder structure somewhere or in the main source files?</p>
","1","541262","0","0"
"61383063","1659806","2020-04-23 08:50:48","0","45","<git><gitignore>",".gitignore - how to ignore file by matching start and end of name","<p>I am using <em>.gitignore</em> for a C# solution and I'd like to ignore a file that's generated on build, to stop it getting checked in. The only consistent parts of the file name are the start and the end.  Example:</p>

<p><strong>Cloud.Core</strong>[.example1.example2.example3]<strong>.xml</strong></p>

<p>It always begins with ""Cloud.Core"" and ends with "".xml"".  It could have various connotations in between, such as:</p>

<ul>
<li>Cloud.Core.xml</li>
<li>Cloud.Core.Example1.xml</li>
<li>Cloud.Core.Example2.Example2.xml</li>
</ul>

<p>What mask should I add to my gitignore to bypass a file which has a start/end as described?</p>

<p>I've tried these and a few other variations with luck:</p>

<ul>
<li>Cloud.Core*.xml</li>
<li>Cloud.Core[a-z[.]].xml</li>
</ul>

<p>I know gitignore uses globbing but I can't seem to work out the correct combination I need:
<a href=""http://tldp.org/LDP/GNU-Linux-Tools-Summary/html/x11655.htm"" rel=""nofollow noreferrer"">http://tldp.org/LDP/GNU-Linux-Tools-Summary/html/x11655.htm</a></p>

<p>Thanks for any pointers in advance.</p>
","4","1659806","",""
"24110349","2876236","2014-06-08 20:10:33","1","84","<ios><git><cocoapods><gitignore>","Git ignoring podfile when gitignore doesn't mention it","<p>My gitignore file says nothing about podfiles. In fact, I can make it empty, and still get the same result - my 'Podfile' is being ignored. If i change it's name to something different, it sees it, but otherwise just ignores it. I'm not sure why.</p>
","0","2876236","",""
"61404909","13397329","2020-04-24 09:12:32","1","850","<gitignore><azure-keyvault><secret-key><.net-4.7.1><shared-secret>","C# .NET Framework 4.7.2 in VS 2019 - keep out my clientID and client secret / gitignore / Key Vault","<p>I am a new to #C, therefore excuse my question, which will be probably very easy to you. I am trying to get my clientID, clientSecret and tenantID out of the main source control, but I am not sure at all how to do that. I have seen some methods for .NET Core with Connected Services in Visual Studio, but this is not really available for .NET Framework 4.7.2. I am not confident in setting the config file neither. I have created a resource group on Azure Portal, but I am not sure how to get this key vault working. </p>

<p>The code below represents a working code acquiring a token, the issue I have is to hide those hardcoded strings. </p>

<p>Many thanks for your answer</p>

<pre><code>        private static string GetToken()
        {

            string clientID = ""xxxad43f-c825-491f-9130-8cc4da1d1111"";
            string clientSecret = ""dRbIT5Wn4@u=55L@fLnYRNuDYrFD@111"";
            string tenantID = ""4ae48b41-0137-4599-8661-fc641fe77111"";
            var app = ConfidentialClientApplicationBuilder
                .Create(clientID)
                .WithClientSecret(clientSecret)
                .WithAuthority(new Uri($""https://login.microsoftonline.com/{tenantID}/oauth2/v2.0/token""))
                .Build();

            var ApiID = ""api://dddd-api"";
            var scopes = new[] { ApiID + ""/.default"" };

            var result = app.AcquireTokenForClient(scopes).ExecuteAsync().Result;

            if (result == null)
                throw new Exception(""Could not acquire token"");

            return result.AccessToken;
        }
</code></pre>
","0","13397329","0","0"
"5711120","348081","2011-04-19 03:00:00","214","110222","<git><gitignore>","gitignore binary files that have no extension","<p>How can binary files be ignored in <code>git</code> using the <code>.gitignore</code> file? </p>

<p>Example:  </p>

<pre><code>$ g++ hello.c -o hello
</code></pre>

<p>The ""hello"" file is a binary file. Can <code>git</code> ignore this file ? </p>
","4","348081","0","0"
"5724455","702928","2011-04-20 00:56:35","176","41449","<git><version-control><gitignore>","Can I make a user-specific gitignore file?","<p>I want to change the gitignore, but not everyone on the team wants these changes. How can a user have their own specific git ignore file?</p>
","1","702928","0","0"
"61447293","6586345","2020-04-26 20:02:54","1","724","<.net-core><gitignore>","How to add bin folder and dlls to gitignore","<p>I have the following project structure and would like to add the <code>bin</code> folder and its content(<code>.dll</code>s) to be ignored in the <code>.gitignore</code> file. How is it possible? I have tried many ways like <code>**/bin/*</code>, <code>**/bin/Debug/</code>, <code>**/bin/Debug/**</code>, etc. and none of them worked. Here is my project structure:</p>

<pre><code>src
---backend
------Api
---------bin
---------Debug
------Domain
---------bin
---------Debug
------Repository
---------bin
---------Debug
.gitignore

</code></pre>
","3","6586345","",""
"24139478","2633272","2014-06-10 11:08:27","159","22476","<git><gitignore>","When to use leading slash in gitignore","<p>I'm trying to understand more clearly the <code>.gitignore</code> syntax, and in particular as far as <a href=""https://github.com/github/gitignore"" rel=""noreferrer"">https://github.com/github/gitignore</a> gitignores are concerned.</p>

<p>I see that the leading slash is used to match only pathnames relative to the location of the <code>.gitignore</code> file (from <a href=""http://git-scm.com/docs/gitignore"" rel=""noreferrer"">http://git-scm.com/docs/gitignore</a>):</p>

<blockquote>
  <p>A leading slash matches the beginning of the pathname. For example, ""/*.c"" matches ""cat-file.c"" but not ""mozilla-sha1/sha1.c"".</p>
</blockquote>

<p>But what happens when i remove the leading slash? As far as what i understood, there are two cases:</p>

<ol>
<li>If the pattern does not contain a slash (or it contains only a trailing slash, which means that it should match a directory), the search is performed inside the entire directory tree. For example, the pattern <code>dir/</code> will match <code>&lt;root&gt;/dir</code>, <code>&lt;root&gt;/a/dir</code>, <code>&lt;root&gt;/a/b/c/.../dir</code>, etc., where <code>&lt;root&gt;</code> is the location of the <code>.gitignore</code> file.</li>
<li>If the pattern contains a slash, which is not in the trailing position (it's not the last character), then it is matched only with pathnames relative to the <code>.gitignore</code> file location.</li>
</ol>

<p>These are the examples i made to check this behaviour:</p>

<pre><code># Directory structure:
&lt;root&gt;
├─ dir/
│   └─ test
├─ src/
│   ├─ dir/
│   │   └─ test
test file is there only because Git does not track empty directories.
</code></pre>

<p>First test:</p>

<pre><code># .gitignore
dir/

# git status
nothing to commit
</code></pre>

<p>So Git is ignoring both <code>dir</code> directories. This is consistent with case number 1: the pattern has no slashes (except for the trailing one), so Git is watching the entire directory tree, ignoring everything that matches the pattern.</p>

<p>Second test:</p>

<pre><code># .gitignore
/dir/

# git status
Untracked files:
    src/
</code></pre>

<p>Here, Git is ignoring only the <code>dir</code> directory directly beneath the root directory, thanks to the leading slash in the pattern.</p>

<p>Third test:</p>

<pre><code># .gitignore
dir/*

# git status
Untracked files:
    src/
</code></pre>

<p>This is consistent with the case number 2: the pattern has some slash inside it, so it is considered as a pathname starting from the root directory.</p>

<p>Now it's time for the real question. Let's consider <a href=""https://github.com/github/gitignore/blob/master/Magento.gitignore"" rel=""noreferrer"">this gitignore file</a>: when they ignore the directory <code>downloader/</code>, for example, aren't they actually ignoring every single <code>downloader</code> directory found in the entire directory tree? This is what i'm driven to think since what i saw about Git's workings before.</p>

<p>So if i happen to have a custom module with a <code>downloader</code> directory inside of it, will it be unexpectedly ignored as well as the regular one in the root of Magento? This is a bit of a rethorical question because it actually already happened to me, producing a really hard to find bug.</p>

<p>So, in the Magento <code>.gitignore</code> file (which i'm referring to only as an example, btw) a lot of the patterns contain slashes, so they are correctly matched against pathnames starting from the root, but there are a few cases, like <code>downloader/</code> or <code>errors/</code> that, if i'm not mistaken, are potentially dangerous, and which should probably be changed to <code>/downloader/</code> and <code>/errors/</code>.</p>

<p>As a more general question, should i always use the leading slash for patterns not containing slashes (except for the trailing one) when i want to select a pathname explicitly starting from root, and not to use it for patterns containing slashes, or should i always use the leading slash for clarity? What do you think about it?</p>

<p>Thank you for reading and sorry for the long post.</p>
","4","2633272","0","0"
"5738204","718085","2011-04-21 00:34:01","12","3976","<git><gitignore>","Can't understand how gitignore ignores the folders","<p>I want to create repository for my Magento project. There are lots of folders and files in root directory and I change time to time only one folder: app/code/local/ </p>

<p>Everything else I want to ignore. But.. can't. My .gitignore file:</p>

<pre><code>*
!app/code/local/
!app/code/local/*
</code></pre>

<p>Then when I try to add folder to repo I get an error:</p>

<pre><code>git add app/code/local/Mds/

The following paths are ignored by one of your .gitignore files:
app
Use -f if you really want to add them.
fatal: no files added
</code></pre>

<p>Can anyone please help with this?</p>
","0","718085","0","0"
"61478720","11811972","2020-04-28 11:07:11","0","584","<git><gitignore>","git - ignore files by timestamp","<p>My Situation is this:
I work on a modification for an old game with source code. There are a lot of files. Since it is an old game, all files that haven't been changed by me have an old file change timestamp.</p>

<p>It would be really helpful for me if I could only add the files to the repository (track them), that have been changed recently (by me). 
That way it would be really easy to see at once which files have been changed and it would make it easier to automatically package them.</p>

<p>I could write a program which tracks the timestamps of all files in the background and changes dynamically the gitignore file.
But is it possible to do such things with git onboard tools?</p>

<p>Greetings,</p>

<p>Neconspictor</p>
","5","11811972","",""
"61501292","6639596","2020-04-29 11:57:42","1","1828","<git><visual-studio-2019><gitignore>","How do I use gitIgnore to ignore launchSettings.json?","<p>Scenario:
In my launchSettings I specify <code>""launchBrowser"": true,</code>
In my colleague's he prefers <code>""launchBrowser"": false,</code></p>

<p>I've tried adding the following to gitIgnore but they always appear as a ""change"" (in VS2019)</p>

<pre><code>launchSettings.json
**/Properties/launchSettings.json
</code></pre>

<p><a href=""https://i.stack.imgur.com/WDhX0.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/WDhX0.png"" alt=""enter image description here""></a></p>
","4","6639596","",""
"61528226","296328","2020-04-30 16:28:30","1","482","<git><gitignore>","Git does not delete a git repo which is in ignored directory","<p>I have a <code>.gitignore</code> file which contains the <code>target</code> directory. And now I have realised that git that git will not delete a git repository which is in the <code>target</code> directory even if I do:</p>

<pre><code>$ git clean -fdx
Skipping repository target/x
</code></pre>

<p>Does there exist a solution to handle that? Special configuration option? Cause I have given <code>-f</code> force etc. ?</p>

<p><strong>Update:</strong></p>

<p>I can create manually a repository in the <code>target</code> directory via the following manual steps:</p>

<pre><code>maven-it-extension (issue-21)$ git st
On branch issue-21
Your branch is up to date with 'origin/issue-21'.

nothing to commit, working tree clean
maven-it-extension (issue-21)$ mkdir target/x
mkdir: target: No such file or directory
maven-it-extension (issue-21)$ mkdir -p target/x
maven-it-extension (issue-21)$ cd target/x/
x (issue-21)$ git init .
Initialized empty Git repository in /Users/khmarbaise/ws-git-apache/maven-it-extension/target/x/.git/
x (master #)$ cd ..
target (issue-21)$ cd ..
maven-it-extension (issue-21)$ git status
On branch issue-21
Your branch is up to date with 'origin/issue-21'.

nothing to commit, working tree clean
maven-it-extension (issue-21)$ git clean -fdx 
Skipping repository target/x
maven-it-extension (issue-21)$ 
</code></pre>

<p><strong>Update</strong></p>

<p>Using a supplemental <code>-f</code> is the solution which looks like this:</p>

<pre><code>maven-it-extension (issue-21)$ git clean -f -fdx 
Removing target/
</code></pre>
","10","296328","",""
"42869361","4909679","2017-03-18 01:13:13","0","1081","<git><gitignore><socialengine>","change .gitignore after some commits/push","<p>I have created a repository in my github account with a socialengine php project without <code>.gitignore</code> file. </p>

<p>Then I clone the repository localyl and I create a .gitignore file and i write some lines of paths to ignore files and folders.<br>
As an example</p>

<pre><code>temporary/log
temporary/session
temporary/package
</code></pre>

<p>There is a file <code>auth.php</code> in <code>install/config/auth.php</code> path and I write also in my <code>.gitignore</code> file the path of it to ignore it as follows</p>

<pre><code>install/config
</code></pre>

<p>During the installation I see that the subfolders of temporary folder are ignored. </p>

<p>The think is that when I am in the installation step where some authentication lines of code should be written in auth.php file, the file auth.php looks unstaged when I type <code>git status</code>.<br>
I can not figure out why this happens although I have included the path (install/config) in .gitignore file.</p>

<p>I have tried also <code>install/config/</code>, <code>install/config/*</code> but nothing.</p>

<p>If I use <code>git rm --cached install/config/auth.php</code> then the file will be deleted remotely something that must not happen because this file is needed to exist for socialengine installation and for future installation.</p>

<p>There is any idea what I can do for this situation ? </p>
","2","4909679","",""
"43045413","948652","2017-03-27 11:40:01","1","251","<git><qt><gitignore>",".gitignore unignore wildcard subdirectory","<p>Using QtCreator I have the following in my <code>.gitignore</code></p>

<pre><code>*build-*
</code></pre>

<p>This lets me ignore everything inside the buildfolder, which depending on platform and build tools can have different names starting with <code>build-</code>.</p>

<p>Now I would like to unignore subdirectories inside this folder, such as <code>images</code> and <code>backup</code> and I assummed all I had to do was </p>

<pre><code>!build-*/**/
</code></pre>

<p>But this has no effect, <code>git status</code> doesn't pick up any of the files in the subdirectories of <code>build-*</code>.</p>

<p>What am I  missing?</p>
","5","948652","",""
"61724997","12464900","2020-05-11 08:07:18","2","5174","<git><visual-studio-code><gitignore>","Is there a way to stop tracking folder in VS Code with out gitignore?","<p>I have a dist folder that I want to build locally and put it on Heroku every time during development. But I want VS Code to stop tracking files in the folder, for example during a search</p>
","0","12464900","",""
"24376044","1563568","2014-06-23 23:16:12","0","111","<git><gitignore>","Unignore files ignored with .git/info/exclude","<p>I have ignored certain files by editing <code>.git/info/exclude</code>.  Now I want to unignore them.  I have edited <code>.git/info/exclude</code> to get rid of the corresponding rules, but the files still seem to be ignored.  What should I do?</p>
","0","1563568","0","0"
"61744701","4435995","2020-05-12 05:51:13","0","39","<git><github><gitignore>","Anything like gitignore for pulling?","<p>I have some files (documentaion, utility scripts, private key to my server etc) in repository which don't have to be in deployment but it has to be in repo for development convienience. Is there any way like .gitignore to ignore some files and folders while pulling?</p>
","5","4435995","",""
"43240678","5843085","2017-04-05 20:06:41","1","1048","<git><gitignore>","Git's .gitignore does not work with one or more asterisk qualifier +","<pre><code>$ git version
git version 2.9.3.windows.1
</code></pre>

<p>I seem to be having trouble with the + (one or more) pattern matcher in .gitignore. Here is a test with <code>+</code> and <code>*</code>used as a pattern qualifier for digits embedded in the file name. I want to keep Test.txt in source control and ignore the Test[0-9]+.txt files.</p>

<p>Directory:</p>

<pre><code>$ ll | grep Test
-rw-r--r-- 1 asdf 1049089      0 Apr  5 15:55 Test.txt
-rw-r--r-- 1 asdf 1049089      0 Apr  5 15:55 Test123.txt
-rw-r--r-- 1 asdf 1049089      0 Apr  5 15:55 Test1235.txt
-rw-r--r-- 1 asdf 1049089      0 Apr  5 15:55 Test124.txt
</code></pre>

<p>Git ignore file contents Test 1:</p>

<pre><code>Test[0-9]+.txt
</code></pre>

<p>Test 1:</p>

<pre><code>$ git status | grep Test
    Test.txt
    Test123.txt
    Test1235.txt
    Test124.txt
</code></pre>

<p>This should have filtered out the 2nd through 4th files.</p>

<p>Git ignore file contents Test 2:</p>

<pre><code>Test[0-9]*.txt
</code></pre>

<p>Test 2:</p>

<pre><code>$ git status | grep Test
    Test.txt
</code></pre>

<p>This should have filtered out ALL of the files.</p>

<p>Why is this happening?</p>
","0","5843085","",""
"24581327","3195286","2014-07-04 22:30:38","2","882","<android-studio><gitignore>","Android Studio .gitignore location","<p>I have a project that I recently added to Git and I can't seem to locate my .gitignore file. Anyone know where it should be? And if it's missing, how to get it back?</p>
","2","3195286","0","0"
"61922531","13294008","2020-05-20 20:42:57","1","515","<javascript><heroku><gitignore>","How to still be able to read files from .gitignore?","<p>Hi I'm trying to create a Discord bot using Discord.js and deploy it to Heroku.</p>

<p>I have successfully deploy it to Heroku, but the logs shows an error. Here is where I think the problem is:</p>

<pre><code>app[worker.1]: Error: Cannot find module './config.json'
</code></pre>

<p><code>config.json</code> cant be found because i put the <code>config.json</code> file inside a <code>.gitignore</code> file. This is because i have some credentials (bot token) that i need to protect inside that file. However, the main file needs access to the <code>config.json</code> in order to run.</p>

<p>Is there any way to still protect the contents of the <code>config.json</code> file while still being able to run the program? The GitHub repository is set to private, so should i exclude <code>config.json</code> from <code>.gitignore</code> instead?</p>
","1","13294008","",""
"43262228","1126273","2017-04-06 17:41:05","2","667","<npm><gitignore><npm-publish>","npm publish .gitignored file","<p>The situation is the following</p>

<p>I have a <code>.gitignore</code> file:</p>

<pre><code>node_modules
npm-debug.log
/index.js # this is a build output, I don't want it in the repo
</code></pre>

<p>And a <code>package.json</code> file (just the relevant parts):</p>

<pre><code>{
  ""main"": ""index.js"",
  ""files"": [
    ""index.js"", // however I want this in the npm package
    ""readme.md"",
    ""package.json""
  ],
  ""scripts"": {
    ""build"": ""rollup -c rollup.config.js"", // this builds index.js ...
    ""lint"": ""eslint **/*.js --config .eslintrc"",
    ""test"": ""jest --no-cache"",
    ""prepublish"": ""npm run lint &amp;&amp; npm test &amp;&amp; npm run build"" // ...before publishing
  }
}
</code></pre>

<p>When I published the first version of this, <code>index.js</code> was omitted, and only <code>readme.md</code> and <code>package.json</code> were properly published. The only thing I can assume is that <code>.gitignore</code> causes this, since according to the docs <code>.gitignore</code> substitutes <code>.npmignore</code> if the later is not present (or maybe the 2 are used together, no idea).</p>

<p>So is there a way to not have that file in the git repo, but have it in the npm package?</p>
","0","1126273","",""
"24597178","719427","2014-07-06 15:02:19","1","135","<git><gitignore><smartgit>","Ignore the same directory structure on multiples path with .gitignore","<p>I have a website linked to Git repository at Bitbucket. This site is multi language but I need to upload to repository only <code>spanish</code> and <code>english</code> languages. The problem here is that same structure is present on several paths. See the example below (the same language structure is repeated on multiples paths):</p>

<pre><code>system\
    cms\
    language\
        arabic\
        brazilian\
        chinese_simplified\
        chinese_traditional\
        czech\
        danish\
        dutch\
        english\
        finnish\
        french\
        german\
        greek\
        hebrew\
        hungarian\
        indonesian\
        italian\
        khmer\
        lithuanian\
        persian\
        polish\
        portuguese\
        russian\
        slovenian\
        spanish\
        swedish\
        thai\
        vietnamese\
    modules\
        addons\
            language\
                arabic\
                brazilian\
                chinese_simplified\
                chinese_traditional\
                czech\
                danish\
                dutch\
                english\
                finnish\
                french\
                german\
                greek\
                hebrew\
                hungarian\
                indonesian\
                italian\
                khmer\
                lithuanian\
                persian\
                polish\
                portuguese\
                russian\
                slovenian\
                spanish\
                swedish\
                thai\
                vietnamese\
        blog\
            language\
                ...
        comments\
            language\
                ...
        contact\
            language\
                ...
        files\
            language\
                ...
        keywords\
            language\
                ...
        maintenance\
            language\
                ...
        navigation\
            language\
                ...
        pages\
            language\
                ...
        permissions\
            language\
                ...
        redirects\
            language\
                ...
        search\
            language\
                ...
        settings\
            language\
                ...
        sitemap\
            language\
                ...
        streams_core\
            language\
                ...
        templates\
            language\
                ...
        users\
            language\
                ...
        variables\
            language\
                ...
        widgets\
            language\
                ...
        wysiwyg\
            language\
                ...
</code></pre>

<p>Is there any way, or regex if it's supported on <code>.gitignore</code> to allow only <code>spanish</code> and <code>english</code> and ommit the rest of them?</p>

<p><strong>Edit: toydarian solution</strong>
Following @toydarian suggestion I added this lines to <code>.gitignore</code> file:</p>

<pre><code>language/arabic/*
language/brazilian/*
language/chinese_simplified/*
language/chinese_traditional/*
language/czech/*
language/danish/*
language/dutch/*
language/finnish/*
language/french/*
language/german/*
language/greek/*
language/hebrew/*
language/hungarian/*
language/indonesian/*
language/italian/*
language/khmer/*
language/lithuanian/*
language/persian/*
language/polish/*
language/portuguese/*
language/russian/*
language/slovenian/*
language/swedish/*
language/thai/*
language/vietnamese/*
</code></pre>

<p>But as image shows, it's not working, any other advice or way?</p>

<p><img src=""https://i.stack.imgur.com/iC9HA.jpg"" alt=""enter image description here""></p>
","1","719427","",""
"60841048","7701592","2020-03-24 23:50:07","1","280","<git><unity-game-engine><github><gitignore>","git.ignore doesn't work for a particular Unity Skybox Material","<p>Hello I'm a noob and using Github Desktop to push updates to a Unity project me and some friends are working on. </p>

<p>We have had a NIGHTMARE with ANY skybox material used. We change the material dynamically through code for a day night system and for some reason when someone else tries to pull the project he can't.</p>

<p>If he ""resolves""the problem by deleting the material then we lose the material. I have tried adding the material to git.ignore 12 times and whenever I play the game the material still shows up for a commit. Am I doing something wrong and if so could you please tell me the solution?</p>

<p>Here's the .gitignore:</p>

<pre><code># This .gitignore file should be placed at the root of your Unity project directory
#
# Get latest from https://github.com/github/gitignore/blob/master/Unity.gitignore
#
/[Ll]ibrary/
/[Tt]emp/
/[Oo]bj/
/[Bb]uild/
/[Bb]uilds/
/[Ll]ogs/
/[Mm]emoryCaptures/

# Asset meta data should only be ignored when the corresponding asset is also ignored
!/[Aa]ssets/**/*.meta

# Uncomment this line if you wish to ignore the asset store tools plugin
# /[Aa]ssets/AssetStoreTools*
Assets/ClassicSkybox/sky08.mat

# Autogenerated Jetbrains Rider plugin
[Aa]ssets/Plugins/Editor/JetBrains*

# Visual Studio cache directory
.vs/

# Gradle cache directory
.gradle/

# Autogenerated VS/MD/Consulo solution and project files
ExportedObj/
.consulo/
*.csproj
*.unityproj
*.sln
*.suo
*.tmp
*.user
*.userprefs
*.pidb
*.booproj
*.svd
*.pdb
*.mdb
*.opendb
*.VC.db

# Unity3D generated meta files
*.pidb.meta
*.pdb.meta
*.mdb.meta
*.meta
!*.prefab.meta

# Unity3D generated file on crash reports
sysinfo.txt

# Builds
*.apk
*.unitypackage

# Crashlytics generated file
crashlytics-build.properties


Assets/ClassicSkybox/sky08.mat
Assets/ClassicSkybox/sky08.mat
</code></pre>

<p>The problematic material is the</p>

<pre><code>Assets/ClassicSkybox/sky08.mat
</code></pre>

<p>As you can see it's listed 3 times in the file and Github still asks for it any time it changes.</p>
","4","7701592","0","0"
"5533050","69654","2011-04-03 22:48:48","1407","606746","<git><gitignore>",".gitignore exclude folder but include specific subfolder","<p>I have a folder <code>application/</code>, which I add to the <code>.gitignore</code>.<br />
Inside the <code>application/</code>-folder there is a folder <code>application/language/gr</code>.</p>
<p>How can I include this folder?</p>
<p>I've tried this:</p>
<pre><code>application/
!application/language/gr/
</code></pre>
","3","69654","0","0"
"23932766","999452","2014-05-29 11:56:19","2","1055","<git><cordova><gitignore>","Standard .gitignore for Phonegap","<p>I am planning to submit a PhoneGap application on <strong>GitHub</strong> yet, I am having a hard time getting a standard/universal <code>.gitignore</code> contents.</p>

<p>Here's my tentative <code>.gitignore</code> file:</p>

<pre><code>.DS_Store

# PhoneGap files and directories
hooks/
platforms/
</code></pre>

<p>All I know the <code>www/</code> is the one needed in order for the PhoneGap application to be built on various platforms. I wasn't planning to build or alter codes on the native language(s). So is the right or standard <code>.gitignore</code> contents for Phonegap?</p>
","0","999452","",""
"61145759","1885442","2020-04-10 17:46:35","1","28","<git><gitignore>","How to cleanly remove a directory that contains a .gitignore and may contain transient ignored files?","<p>Consider the following layout:</p>

<pre><code>tests/
    Vendor/
        Product/
            Module/
                db/
                    .gitignore
                    file-created-by-test-runs-and-ignored-by-gitignore-above.json
                SomeTest.php
                OtherTest.php

</code></pre>

<p>On a long-winded topic branch, we want to reorganize the tests to move most of the above under <code>tests\unit</code> and also to move the location of temporary files somewhere else to keep them out of versioned source tree.</p>

<p>We boldly bring the tree to the desired state:</p>

<pre><code>tests/
    unit/
        Vendor/
            Product/
                Module/
                    SomeTest.php
                    OtherTest.php

</code></pre>

<p>... and after refactoring the test base classes to use /tmp or whatever, we commit in good faith.</p>

<p>Then we checkout the master branch again, do some work and run the master branch's version of the test suite.</p>

<p>Then we check out the topic branch, and suddenly we have the temporary files left over from master branch test runs, under <code>tests/Vendor/Product/Module/db</code>, listed as untracked files. They are not ignored now, because the <code>.gitignore</code> files (which <em>were</em> versioned) were deleted by checkout of the topic branch, <em>but files ignored by those <code>.gitignore</code> files obviously weren't</em>.</p>

<p>Is there a recommended practice for avoiding this annoyance and effectively expressing the intention, ""Hey git, this commit <strong>deletes</strong> this directory; it makes it <strong>gone</strong>. We don't want it, or anything in it, to exist since this commit until we change our mind again.""? I bring the tree to the desired state and I commit. I expect that to stick. Can it be achieved?</p>
","1","1885442","",""
"61173699","5426051","2020-04-12 15:17:40","0","8","<commit><gitignore>","What's wrong with my gitignore file because I shouldn't see unstaged files in Commit upon test execution (no code change)?","<p>I can't seem to get the gitignore file right or something because I shouldn't see unstaged files in Commit upon test execution (no code change).</p>

<p>Thanks in advance for your help,
Tien</p>
","1","5426051","",""
"23984871","2005428","2014-06-01 21:51:25","1","1127","<git><gitignore>","gitignore - now to ignore files but keep child directories","<p>I want to ignore all files in a directory but not any children directories and their contents.  For instance ...</p>

<pre><code>parentdir
   childdir
      filea
      fileb
   file1
   file2
   file3
</code></pre>

<p>So, I want to ignore file1, file1, file3 but keep everything else.  How do I do that?</p>
","0","2005428","",""
"5658449","288439","2011-04-14 04:14:18","7","6811","<git><gitignore>","Tell git never to update a file","<p>I have a few files in git (namely configure files), that I need to be in the git repo, but I don't want them to ever update (for some reason, running them, and make, changes the configure file).</p>

<p>So is there any way I can tell git to ignore any CHANGES to the file, but to keep the original file still in the repo?  Currently the only way I've found out to do something like this is to add the file to the .gitignore file, and the git add the file to the project directly (using -f to override).  Is there any better way?</p>
","0","288439","0","0"
"24050972","162345","2014-06-05 03:05:36","0","229","<java><git><properties><openshift><gitignore>","Un tracked files are being deleted every git push","<p>To avoid mixing our staging properties and our production properties, we maintain a properties template file which is part of the repository. For each instance we create a properties file using the template, with the specific values and add the properties file to the .gitignore list.</p>

<p>I tried to do the same with an openshift. I created the properties files to <code>app-root/repo</code> instance but it looks like before the git push this directory is being deleted.</p>

<p>Is there another way to do it?</p>
","0","162345","",""
"61235515","12656989","2020-04-15 18:02:50","0","33","<git><version-control><gitignore>","Make .gitignore accept only subtitle related extensions","<p>My repository is for subtitles editing only, so I don't want unnecessary files being added to the version control, like images for example, just subtitles and fonts. Will this code work? Is it all I need?</p>

<pre><code>*
!.ass
!.sub
!.srt
!.otf
!.ttf
!*/
</code></pre>
","1","12656989","",""
"61241873","1235929","2020-04-16 02:48:38","6","2085","<git><gitignore><status>","Why is a directory in .gitignore still getting tracked by ""git status""?","<p>My .gitignore file consists of</p>

<pre><code>project/app/__pycache__
</code></pre>

<p>But when I run git status, it reports changes to files in this directory ...</p>

<pre><code>mydomain:main satishp$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use ""git add/rm &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)



deleted:    project/app/__pycache__/__init__.cpython-37.pyc
    deleted:    project/app/__pycache__/models.cpython-37.pyc
</code></pre>

<p>Shouldn't the inclusion of this directory in .gitignore prevent this?  Or am I doing something else wrong?</p>
","5","1235929","0","0"
"61250791","5082913","2020-04-16 12:56:32","1","1048","<git><gitignore><subdirectory>","A simple way to apply a .gitignore file to all subfolders containing individual projects in the repository","<p>I have a Git repository containing a lot of subfolders, each of which is an IntelliJ IDEA project. </p>

<p>I have found a JetBrains <code>.gitignore</code> which ignores files in an IntelliJ IDEA project and I want to apply it to all such projects in these subfolders. </p>

<p>Of course, I can make a copy for each project, or leave it in the root folder and edit the patterns in the <code>.gitignore</code> file to match files in subfolders. </p>

<p>However, I am wondering whether there is a simpler way to do this rather than making copies or editing a long <code>.gitignore</code> file.</p>
","5","5082913","0","0"
"61249918","11400377","2020-04-16 12:10:37","0","44","<gitignore>",".gitignore doesn't ignores directories","<p>I've got this .gitignore file:</p>

<pre><code>[admin]/
[editor]/
[gamemodes]/
[gameplay]/
[managers]/
[web]/
</code></pre>

<p>But the <code>git status</code> shows that:</p>

<pre><code>Untracked files:
  (use ""git add &lt;file&gt;..."" to include in what will be committed)
        [admin]/
        [editor]/
        [gamemodes]/
        [gameplay]/
        [managers]/
        [web]/
        editor_dump/
        editor_map_backups/
        editor_test/
        guieditor/
</code></pre>

<p>Why is it happening? Of course, I've got .gitignore in the right place.</p>
","2","11400377","",""
"61251206","7822561","2020-04-16 13:17:02","1","1207","<git><gitignore>","Can I copy and paste from one .gitignore to second .gitignore file?","<p>The issue is, I've read some documentaries but couldn't understand how to use gitignore correctly, hence I found a <code>.gitignore</code> file from another project and I want to ask, will it work if I just copy and paste one to another? </p>

<p>Talking about this example</p>

<pre><code>################################################################################
# This .gitignore file was automatically created by Microsoft(R) Visual Studio.
################################################################################

/.vs
...
...
</code></pre>
","0","7822561","",""
"42926682","1191416","2017-03-21 12:06:42","0","734","<git><gitignore>","global vs local .gitignore conflict","<p>I've set a global .gitignore like this</p>

<pre><code># global .gitconfig
[core]
  quotepath = false
  excludesfile = ~/.gitignore_global
</code></pre>

<p>Where <code>~/.gitignore_global</code> is something like this:</p>

<pre><code># https://www.gitignore.io/api/pycharm

# User-specific stuff:
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/**/vcs.xml
.idea/**/jsLibraryMappings.xml
# .idea/**/dictionaries

# Sensitive or high-churn files:
.idea/**/dataSources/
.idea/**/dataSources.ids
.idea/**/dataSources.xml
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml

# Gradle:
.idea/**/gradle.xml
.idea/**/libraries

# Mongo Explorer plugin:
.idea/**/mongoSettings.xml

## File-based project format:
*.iws

## Plugin-specific files:
# IntelliJ
/out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties
</code></pre>

<p>So now whenever I start a new project with any intellij IDE only some files inside the <code>.idea</code>folder will be tracked and others won't. So fa so good.</p>

<p>The problem comes from a project I had started before setting up the .gitignore_global. In fact within this project I had setup a local .gitignore to ignore the <code>.idea/</code> folder altogether.</p>

<pre><code># local .gitignore created before the global one
*.idea/
</code></pre>

<p>Now, for that old project I want to start to track the relevant files within the <code>.idea</code> folder, so I've commented the line <code># *.idea/</code>.</p>

<p>And here starts the problem.</p>

<p>Instead of just tracking the relevant files as stated in <code>.gitignore_global</code> it mark as new file (unstaged) ALL the files within the .idea folder, <strong>ignoring</strong> the <code>.gitignore_global</code> (sorry for the redundancy).</p>

<p>I suspect (not sure) that back then, years ago I had accidentally added the <code>.idea</code> folder to the repo, then removed, then ignored.</p>

<p>How can I fix this? I want to track only the relevant files in .idea not marked as ignored by following the instruction from <code>.gitignore_global</code>.</p>

<p><strong>EDIT</strong>: the important part is that git let me add all the new files to the staging area even the ones t not supposed to.</p>
","6","1191416","",""
"42935665","3871859","2017-03-21 18:43:23","1","1890","<android><git><gitignore>","My gitignore doesn't work","<p>I tried to find solution for me but my <code>.gitignore</code> file still doesn't work</p>

<p>I see <a href=""https://stackoverflow.com/questions/1274057/how-to-make-git-forget-about-a-file-that-was-tracked-but-is-now-in-gitignore"">this post</a>, but it doesn't help me.</p>

<p>This is my gitignore file:</p>

<pre><code># Created by https://www.gitignore.io/api/android,macos

### Android ###
# Built application files
*.apk
*.ap_

# Files for the ART/Dalvik VM
*.dex

# Java class files
*.class

# Generated files
bin/
gen/
out/

# Gradle files
.gradle/
build/

# Local configuration file (sdk path, etc)
local.properties

# Proguard folder generated by Eclipse
proguard/

# Log Files
*.log

# Android Studio Navigation editor temp files
.navigation/

# Android Studio captures folder
captures/

# Intellij
*.iml
.idea/workspace.xml
.idea/tasks.xml
.idea/gradle.xml
.idea/dictionaries
.idea/libraries

# Keystore files
*.jks

# External native build folder generated in Android Studio 2.2 and later
.externalNativeBuild

# Google Services (e.g. APIs or Firebase)
google-services.json

# Freeline
freeline.py
freeline/
freeline_project_description.json

### Android Patch ###
gen-external-apklibs

### macOS ###
*.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon


# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk
</code></pre>

<p>But when I make rebild I see this in SourceTree:
<a href=""https://i.stack.imgur.com/DQ3kK.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/DQ3kK.jpg"" alt=""enter image description here""></a></p>

<p>All files from <code>libraryProjectFolder/Build</code> folder
()</p>
","2","3871859","",""
"42940791","7038628","2017-03-22 00:46:46","-1","530","<git><gitignore><ignore>","Operation of 'git pull' unaffected by .gitignore_global file","<p>I have two local git repositories corresponding to a remote repository named <code>quest</code>. One local repository is on a Windows machine on which I run git commands via Cygwin. The other is on a Linux system. </p>

<p>The specific examples listed below refer to the latter case.</p>

<p>I have a <code>.gitconfig</code> file in my home directory (<code>/hhome/jj</code>) with an entry </p>

<pre><code>[core]
  excludesfile = /hhome/jj/.gitignore_global
</code></pre>

<p>that points to a global <code>.gitignore</code> file, also in my home directory.</p>

<p>I am trying to set up git to ignore everything in the <code>matlab_stuff</code> subdirectory of this git repository, now and forever. The full path to this subdirectory is <code>/hhome/jj/gitroot/quest/matlab_stuff</code>. I had thought I would be able to accomplish this by putting one or the other of the following lines</p>

<pre><code>matlab_stuff/
/hhome/jj/gitroot/quest/matlab_stuff/
</code></pre>

<p>in <code>~/.gitignore_global</code>, but it's not working</p>

<p>I know that this is not sufficient to make git ignore files that it is already tracking. To eliminate those I used something like</p>

<pre><code>git update-index --skip-worktree &lt;file-name&gt;
</code></pre>

<p>on each file in the <code>matlab_stuff</code> subdirectory. Then I deleted the whole <code>/hhome/jj/gitroot/quest/matlab_stuff</code> subdirectory. </p>

<p>Everything seemed fine. I can make changes to other files, commit them, and push them without messing up the global repository for other users.</p>

<p>However, as soon as I do a 'git pull' after someone else has pushed new files to <code>matlab_stuff</code>, that subdirectory gets recreated and the new files are put in, which is exactly what I was hoping to avoid.</p>

<p>Running <code>git config --global -l</code> shows the correct <code>core.excludesfile</code> entry so it's not as if git is unaware of the global <code>.gitignore</code> file.</p>

<p>As I say, this not working as expected on two similarly configured local git repositories.</p>

<p>Why isn't this working and/or how can I fix it?</p>
","4","7038628","",""
"5861280","724569","2011-05-02 19:04:35","14","6362","<git><gitignore>",".gitignore /folder vs folder/","<p>in .gitignore what is the difference between using</p>

<pre><code>/bin
</code></pre>

<p>and</p>

<pre><code>bin/
</code></pre>

<p>And how would I make it so that it removes a certain file, no matter where it is?</p>

<pre><code>*/*.ext
</code></pre>
","0","724569","0","0"
"61622283","3408037","2020-05-05 20:18:03","1","69","<git><gitignore>","Ignore all files with the same base name in git","<p>I have some auto generated files that I need to ignore, they all have different names but everyone of them start with: ""._ "" for example:</p>

<pre><code>/classes/Admin/._Subscribers.php
/classes/Admin/._Support.php
/admin/._about.php
</code></pre>

<p>I have about 1k of those files that I need to ignore, so if you help me fount a way to ignore them all at once that will be great.</p>

<p>Thanks in advance.</p>
","2","3408037","",""
"61811801","4565943","2020-05-15 04:31:36","29","6256","<git><gitignore>","How to make git ignore temporary files created by MS Office (starting with ~$)","<p>My git repo includes MS Office files (Word, PPT, &amp; Excel), each time I open one of them a temporary file starting with <code>~$&lt;file-name&gt;</code> is created.  </p>

<p>I tried adding <code>*/~$*</code> to the <code>.gitignore</code> file, but it still does not work; the temporary file still pops up in the change list shows that there are untracked changes all the time. I had to close all office files to know that my repo is up-to-date. </p>

<p>How to solve this problem? Is there a special syntax for <code>.gitignore</code> for such files?</p>
","0","4565943","0","0"
"43136521","2572526","2017-03-31 08:57:11","1","4646","<git><gitignore>","How to ignore from commit the files ""pom.xml"" and "".gitignore""?","<p>I would like to ignore the changes that I do locally to the pom.xml and .gitignore files as I do them just for trial purpose but should never be committed and pushed in the company repository. <BR/>
Obviously without an automatic mechanism to ignore them it is very easy to forget to revert back their changes and commit those together with the other files on which I work.<BR/> 
I yet ignore many other files that I don't want to commit changing the content of the file .gitignore itself, but it seems that this method doesn't work to ignore pom.xml and .gitignore files. <BR/> <BR/>
Any idea about why this happens? Is there a way to solve the problem?</p>
","5","2572526","0","0"
"43137521","857855","2017-03-31 09:43:37","0","532","<git><magento><version-control><gitignore>","Magento code in gitignore and need to update version","<p>We are working on Magento2 project, versioning is done through GIT, where all vendor/lib files are put in gitignore.</p>

<p>As per our deployment structure, we have multiple env such as - DEV/SIT/UAT/PROD, all managed through git branches.</p>

<p>Now, project needs to update Magento2 version, which will involve update of native code files in vendor/lib etc.</p>

<p>How can this be managed so that we can push in GIT, and propagate these changes on other enviornments.</p>
","3","857855","",""
"6117109","39677","2011-05-24 21:26:00","86","22003","<git><gitignore>","Is it possible to have a custom .gitignore? Read only access?","<p>I am working in a team environment, and there is already a <code>.gitignore</code> file.</p>

<p>I want to add more items to the <code>.gitignore</code> file, but I don't want to check this file in either. It is possible to set custom ignore files which only apply to me?</p>

<p>Also, I want to give someone read only access to a private git repository on our server, if I add their SSH key to our server they will get full access like everyone else.  How can I limit it to read-only, no commits allowed.</p>
","1","39677","0","0"
"61821932","6693019","2020-05-15 14:43:40","-2","71","<node.js><json><database><git><gitignore>","Node.js working with git and a simple JSON database","<p>I have a small server app with a JSON database. All the data is saved in <code>data/</code>. My app is on Heroku, so I use git to update the changes I do on the app. I also added <code>data/</code> in the <code>.gitignore</code> file, but whenever I commit something, it also wipes down everything in the <code>data/</code> folder.</p>

<p>So, how am I supposed to work with a JSON database and Git?</p>

<p>Edit: I don't have any data in local, all the data is handled with fs on the server. So I don't have a <code>data/</code> folder when I commit locally, but there is one on the server.</p>
","2","6693019","",""
"43151318","663853","2017-04-01 00:07:36","1","37","<visual-studio-2015><gitignore><projects-and-solutions><git-bash><gitattributes>","GitBash VisualStudio Solution gitignore","<p>I deleted gitignore and gitattributes files and used gitbash to <code>-f</code> commit everything and it put the <code>obj</code>, <code>debug</code>, etc files I don't want. So i want to recommit everything but also want the git ignore rules to be inforced.</p>
","0","663853","0","0"
"61843111","7810912","2020-05-16 20:25:20","0","1072","<javascript><environment-variables><gitignore><api-key><netlify>","Giving Netlify access to a file hidden by .gitignore on Github","<p>I'm running into a bit of a dilemma with a repository in Github when I try to host the project on Netlify. The project includes a file named <code>config.js</code> and is referenced on both HTML pages. It includes some variables and a function to store my Google Maps API key, so I created a .gitignore file to hide it in my Github repository. The problem is, now that I've deployed it in Netlify, I'm not sure how to reference the config.js as an environment variable or something similar so that Netlify is able to find my Google Maps API key when it renders the site. Right now, the site renders, but it doesn't quite work because I'm running into errors since Netlify cannot see my config.js file.</p>

<p>You'll see my file structure below including the .gitignore command and my config.js that stores the Google Maps API key with the following variables and function calls:</p>

<pre><code>let head = document.getElementsByTagName(""head"").item(0);
let script = document.createElement(""script"");
script.setAttribute(""type"", ""text/javascript"");
script.setAttribute(
  ""src"",
  ""&lt;MY GOOGLE MAPS API KEY&gt;""
);
head.appendChild(script);
</code></pre>

<p><a href=""https://i.stack.imgur.com/lkcZR.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/lkcZR.png"" alt=""file structure""></a></p>

<p><a href=""https://i.stack.imgur.com/QDJUg.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/QDJUg.png"" alt=""Script tag referencing Google Maps API key""></a></p>

<p><a href=""https://i.stack.imgur.com/pAG6p.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/pAG6p.png"" alt=""Error in the console of hosted Netlify project""></a></p>

<p>My question is, how do I go about referencing the variables above that store my API key in an environment variable on Netlify? Or, is there a way to give only Netlify access to the config.js file without exposing it in Github?</p>

<p>There's some documentation on Netlify about deploy keys and submodules, but I don't understand that part of the docs and I'm not sure if they're even relevant to my problem.</p>
","0","7810912","0","0"
"24695531","2370280","2014-07-11 10:24:27","5","79","<git><automation><git-submodules><gitignore>","Is it possible to add/initiate a new git submodule with the ignore option set to a certain value?","<p>I have a script that sets up a project for me and my co-workers.
We are using git submodules inside our repository. The script I've made creates untracked config files inside the submodules' directories (cabal's sandbox config files to be more specific). I'm never going to modify the submodules, will never push any changes. I would like for those config files not to be listed as modifications to the repository, so I ignore them with the submodule option <code>ignore = untracked</code>. However, I have to do that manually for each submodule entry in the <code>.git/config</code> file.</p>

<p>The question at hand: is it possible to set that option per submodule when calling <code>git submodule add</code> or <code>git submodule init</code>? If not, is there any git command that would allow me to set such a config variable per-module after initialisation?</p>
","0","2370280","0","0"
"24699330","2697793","2014-07-11 13:48:51","0","69","<ruby-on-rails><ruby-on-rails-3><git><github><gitignore>","How to set up a new workstation after adding .gitignore to the repo","<p>I have a deployed rails website, and have a gitignore file in place.  If I pull the app to a new computer or workstation, none of the gitignore files will be there since they are being igrnored.  How do I correctly set up a new workstation?  Do I just copy the files from another location and place them in the correct folders on the new workstation?</p>
","2","2697793","",""
"24702194","3406884","2014-07-11 16:15:31","1","168","<git><gitignore>","Is there any way other than .gitignore for excluding a file from getting tracked in Git?","<p>Is there any way other than .gitignore for excluding a file from getting tracked in Git?</p>
","2","3406884","0","0"
"43382411","7859534","2017-04-13 02:07:16","3","3664","<git><gitignore>","How ""git stash -A"" exclude .gitignore content?","<p>I add .gitignore.Like this:
prebuilts
out</p>

<p>I use ""git stash -A"" to stash my modifies,but prebuilts folder,out folder also stash.
I don't want stash my ignore folder,what can I do ?</p>
","3","7859534","0","0"
"62059273","13453044","2020-05-28 07:32:24","4","2362","<github><gitignore><asp.net-core-3.1>","gitignore is not ignoring the files I added","<p>The code below is what I have tried in the .gitignore file. Other folders when I put <code>logs or **/wwwroot</code> and save the file, every file in the folder is ignored but this <code>object</code> folder in the core project is not ignored somehow. </p>

<pre><code>
obj/project.assets.json
obj/Debug/netcoreapp3.1/CDS.PORTAL.assets.cache
obj/Debug/netcoreapp3.1/CDS.PORTAL.csproj.FileListAbsolute.txt
obj/Debug/netcoreapp3.1/CDS.PORTAL.csprojAssemblyReference.cache
obj/Debug/netcoreapp3.1/staticwebassets/CDS.PORTAL.StaticWebAssets.Manifest.cache
obj/Debug/netcoreapp3.1/staticwebassets/CDS.PORTAL.StaticWebAssets.xml

</code></pre>

<p><img src=""https://i.stack.imgur.com/aUPzc.png"" alt=""Screenshot of VS Code""></p>
","3","13453044","0","0"
"62062584","10785239","2020-05-28 10:32:49","0","64","<git><gitignore>","gitignore particular file format in all directories","<p>I want to exclude a file format e.g <code>*.simg</code> in all directories. I have tried to add <code>*.simg</code> in <code>.gitignore</code> but still the files are visible in <code>git status</code>.</p>

<p>I have a folder structure as follow and .gitignore file is in root directory:</p>

<pre><code>-service-foo/foo.simg
-service-bar/bar.simg
-composite-service/service-foobar/foobar.simg
-.gitignore
</code></pre>

<p>How can I exclude the format in all directories?</p>

<p><strong>EDIT 1:</strong></p>

<p><code>.gitignore</code> file as follow:</p>

<pre><code>HELP.md
target/
.mvn/
.mvn/wrapper/maven-wrapper.jar
!**/src/main/**
!**/src/test/**

### SINGULARITY simg###
*.simg
</code></pre>

<p>When I do <code>git status</code> I get:</p>

<pre><code>javaadmin@THNJAVA11:~/server/airadhi-server$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes not staged for commit:
  (use ""git add/rm &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

        modified:   .gitignore
        modified:   composite-service/foobar.simg
        modified:   composite-service/service-foobar/foobar.recipe
        deleted:    service-foo/foo.simg
        modified:   service-bar/bar.simg

no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>
","2","10785239","",""
"43593697","1951977","2017-04-24 16:47:32","2","6926","<git><github><gitignore>","How do I create/ add to a .git/info/exclude file to ignore files locally?","<p>I'm still learning git and getting the hang of it. I want to ignore files locally to my workflow only. I've read numerous Q&amp;As on here as and as well as the git documentation, but none of them actually mention or explain how to create and access the <code>.git/info/exclude</code> file in order to modify it. I don't have the file or at least it's not in the root directory of git when I call <code>ls -la</code> command to see all hidden files in my local repository. I only see <code>.git</code>, <code>.gitignore</code> and other files seen in the repository.</p>

<p>There are other system files that keep showing up as modified every time I edit a file and stage it. I end up having to stash it every time to be able to commit/push to the remote repository.</p>

<p>I've tried using commands like <code>nano .git/info/exclude</code>, <code>cat .git/info/exclude</code> assuming I have to create one to make it work, but it says <code>Error: No such file or directory</code>. So, how do I access the file to start ignoring them locally to make my workflow easier and less tedious?</p>

<p>Also, I ran the command <code>cd .git</code> and I see some files within <code>.git</code> directory (but no <code>info/exclude</code> folder):</p>

<p><a href=""https://i.stack.imgur.com/DyfuB.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/DyfuB.png"" alt=""enter image description here""></a></p>

<p><strong>Note:</strong> I am aware of the <code>git update-index --assume-unchanged &lt;file&gt;</code> and <code>git update-index --skip-worktree &lt;file&gt;</code> as other means to ignore files locally but I'm interested in knowing how to do it with <code>.git/info/exclude</code> way.</p>
","1","1951977","",""
"62274320","1131659","2020-06-09 03:01:34","3","250","<git><gitignore>",".gitignore track only one file in a directory at any depth","<p>I am trying to ignore all but a single file in a named directory that could be at any depth.  So in a structure like this, I want to track any occurrence of build/.gitkeep but ignore all other files in and below build/.  The items to track are marked with ++.  The items to ignore are marked with --.</p>

<pre><code>    |.gitignore                               ++
    |Makefile                                 ++
    |--build/                                 ++
    |--build/.gitkeep                         ++
    |--build/ignore_any_file                  --
    |--build/ignore_any/dir                   --
    |--foo/                                   ++
    |--foo/file_to_keep                       ++
    |--foo/dir_to_keep/                       ++
    |--foo/dir_to_keep/stuff                  ++
    |--foo/build/                             ++
    |--foo/build/.gitkeep                     ++
    |--foo/build/ignore_any_file              --
    |--foo/build/ignore_any/dir               --
    |--foo/build/ignore_any/dir/subir         --
    |--bar                                    ++
    |--bar/file_to_keep                       ++
    |--bar/dir_to_keep/                       ++
    |--bar/dir_to_keep/stuff                  ++
    |--bar/build/                             ++
    |--bar/build/.gitkeep                     ++
    |--bar/ignore_any_file                    --
    |--bar/ignore_any/dir                     --
    |--bar/ignore_any/dir/subir               --
    |--foobar/foo                             ++
    |--foobar/foo/file_to_keep                ++
    |--foobar/foo/dir_to_keep/                ++
    |--foobar/foo/dir_to_keep/stuff           ++
    |--foobar/foo/build/                      ++
    |--foobar/foo/build/.gitkeep              ++
    |--foobar/foo/build/ignore_any_file       --
    |--foobar/foo/build/ignore_any/dir        --
    |--foobar/foo/build/ignore_any/dir/subir  --
</code></pre>

<p>I have tried many, many combinations.  The sticking point for me seems to be having build/ at any depth.  I am trying to avoid have to create entries for every path where build/ exists.  I also don't want to create .gitignore files in every instance of build/.</p>

<pre><code>    $ git --version
    git version 2.20.1
</code></pre>
","0","1131659","0","0"
"24975623","1459182","2014-07-26 21:18:33","1","115","<git><version-control><gitignore>","Different result on .gitignore","<p>Following <a href=""http://www.amazon.com/s/?url=search-alias=aps&amp;tag=isdi02-20&amp;link_code=wql&amp;_encoding=UTF-8&amp;field-keywords=9781449316389"" rel=""nofollow"">Version Control with Git 2nd ed</a>, not getting same results as book is showing. Am I missing something? This is example from the book.</p>

<pre><code>$ cd /tmp/my_stuff
$ git init
$ git status
# On branch master
#
# Initial commit
#
nothing to commit (create/copy files and use ""git add"" to track)
$ echo ""New data"" &gt; data
$ git status
# On branch master
#
# Initial commit
#
# Untracked files:
# (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
# data
nothing added to commit but untracked files present (use ""git add"" to track)


# Manually create an example junk file
$ touch main.o
$ git status
# On branch master
#
# Initial commit
#
# Untracked files:
# (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
# data
# main.o
$ echo main.o &gt; .gitignore
$ git status
# On branch master
#
# Initial commit
#
# Untracked files:
# (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
# .gitignore
# data
</code></pre>

<p>But for me after <code>echo main.o &gt; .gitignore</code>, <code>git status</code> is showing that  <code>main.o</code> is not ignored, and is showing in untracked files.</p>

<p>EDIT: In this example there is no commits so <code>git rm -r --cached .</code>, is giving me <code>fatal: pathspec '.' did not match any files</code>. I have also tried commiting <code>data</code>, and <code>main.o</code>, then </p>

<pre><code>&gt;&gt;touch .gitignore
&gt;&gt;git rm -r --cached .
&gt;&gt;git add .
&gt;&gt;git commit -m "".gitignore is stil not ignoring main.o""
</code></pre>
","4","1459182","0","0"
"62298421","12599438","2020-06-10 07:52:40","0","726","<javascript><git><github><gitignore>","hiding files using gitignore","<p>I want to hide the node_modules folder and a javascript file in git,for which I added the following in <strong>.gitignore</strong> file :</p>

<pre><code>          node_modules/
          database.js/
</code></pre>

<p>After that,in git bash I added the following commands</p>

<pre><code>          git rm -r --cached .
          git add .
          git commit -m ""hide files""
          git push origin master
</code></pre>

<p>But I was able to hide only node_modules folder and not the js file.Please don't mistake me, I am a newbie to git. What is my mistake here?Can anybody help? Thank you</p>
","1","12599438","",""
"6726756","624900","2011-07-17 21:04:26","2","1974","<git><gitignore>","gitignore matching character repetitions","<p>I have a directory in a git repository with some files in it, let's call it <code>matchdir</code>:</p>

<pre><code>$ ls matchdir
2fd4e1c67a2d28fced849ee1bb76e7391b93eb12
da39a3ee5e6b4b0d3255bfef95601890afd80709
file.py
someotherfile.txt
</code></pre>

<p>I want to add the files that match 40 hex characters to my <code>.gitignore</code> file. Something like <code>matchdir/[0-9a-f]{32}</code> but that doesn't seem to work. Is there any way to match a specific number of repetitions of a character in a .gitignore file?</p>
","2","624900","",""
"62304757","","2020-06-10 13:26:01","3","4052","<android-studio><flutter><gitignore>","Adding file to git Ignore in flutter","<p>I'm working on making the flutter app and I'm trying to add my ""key.properties"" file, which includes passwords, into git ignore file. In my android/.gitignore file, I wrote </p>

<pre><code>gradle-wrapper.jar
/.gradle
/captures/
/gradlew
/gradlew.bat
/local.properties
GeneratedPluginRegistrant.java
/key.properties
</code></pre>

<p>like this and I thought it makes key.properties file ignored on my git hub, but when I push the code, I still can see it on GitHub. Is the way I write correct?? </p>
","0","","0","0"
"25212408","647463","2014-08-08 21:18:26","0","521","<git><version-control><gitignore>",".gitignore exclude directories under directory, but not top-level files","<p>I have a folder populated with both files (mostly archives) and non-specific sub-directories (their expansion) and want to ignore the extracted files. Files always extract to a sub-directory.</p>

<p>What should I add to my .gitignore ?</p>
","1","647463","",""
"6295449","345579","2011-06-09 15:33:45","16","46642","<git><version-control><dvcs><gitignore><git-status>","git untracked files - how to ignore","<p>When I run <code>git status</code>, I see the ""Untracked files"" section has many files (some with a ""."" extension.)</p>

<p>I don't think I have to do anything, but it doesnt look good to see these files whenever I run <code>git status</code>. Is there any way to not to see these files?</p>
","3","345579","0","0"
"61957012","169252","2020-05-22 14:14:55","1","1247","<git><github><gitignore>","Mistakenly added big folder (`.terraform`) to git, committed, then put to `.gitignore`, but still wants to send big folder to origin","<p>I added a big folder (<code>.terraform</code>) with <code>git add .</code>, and then committed.</p>

<p>Then I realized that's not a good idea. Edited <code>.gitignore</code>. Committed. </p>

<p>Then realized that when pushing to origin, it was still pushing big files. 
Looked around and found this:
<a href=""https://stackoverflow.com/questions/18418718/git-still-adds-and-tracks-folders-marked-in-gitignore"">Git still adds and tracks folders marked in .gitignore</a></p>

<p>So did <code>git rm -r --cached .</code> , added back in everything.</p>

<p>My index seems to be clean.
But when I do <code>git push origin branch</code>, it seems to want to upload all the big files still, as it takes a lot of time, and finally finishes with</p>

<pre><code>remote: error: GH001: Large files detected. You may want to try Git Large File Storage - https://git-lfs.github.com.
remote: error: Trace: 4949224cd016eea505329480a9359f56
remote: error: See http://git.io/iEPt8g for more information.
remote: error: File scripts/terraform/testing/.terraform/plugins/linux_amd64/terraform-provider-aws_v2.62.0_x4 is 146.95 MB; this exceeds GitHub's file size limit of 100.00 MB
</code></pre>

<p>How do I clean up this so that pushing doesn't push the big files which I want ignored anyways?</p>

<p><code>.gitignore</code> looks like this:</p>

<p><code>1 **/.terraform/*</code></p>
","2","169252","",""
"6520017","473040","2011-06-29 11:37:50","24","17182","<ruby-on-rails><git><migration><gitignore>","Is it a good idea to put db/schema.rb to .gitignore list ??","<p>so what I'm suggesting in my job, is to put db/schema.rb into .gitignore file, so we don't have (time to time) merging problems.</p>

<p>There are some concerns that if something terrible happen (meteor fall from the sky right on the DB server and simultaneously all the db/migrete files are corrupt) we could loose the schema, and we will have to use rake db:purge (to reuse the schema.rb). I agree that this is possible and it's a good argument, but it shouldn't be problem because db/schema.rb is generated each time we do rake db:migrate. So even if we won't push schema.rb on server, we are pushing migrations add running db:migrate each time we are deploying with DB changes and with that db:migrate rails will automatically generate schema.rb on server side, and that schema.rb sits on the server unchanged until we do another db:migrate  . </p>

<p>so whats your opinion, should we or should we not put the db/schema.rb into git ignore ?</p>

<p>thank you </p>
","3","473040","0","0"
"43463687","2353597","2017-04-18 04:41:30","6","2986","<git><gitignore><rebase>","How to filter history based on gitignore?","<p>To be clear on this question, I am not asking about how to remove <em>a single file</em> from history, like this question: <a href=""https://stackoverflow.com/questions/307828/completely-remove-file-from-all-git-repository-commit-history"">Completely remove file from all Git repository commit history</a>. I am also not asking about <em>untracking</em> files from gitignore, like in this question: <a href=""https://stackoverflow.com/questions/1139762/ignore-files-that-have-already-been-committed-to-a-git-repository"">Ignore files that have already been committed to a Git repository</a>. </p>

<p>I am talking about ""updating a .gitignore file, and subsequently removing everything matching the list from history"", more or less like this question: <a href=""https://stackoverflow.com/questions/1139762/ignore-files-that-have-already-been-committed-to-a-git-repository"">Ignore files that have already been committed to a Git repository</a>. However, unfortunately, the answer from that question does not work for this purpose, so I am here to try elaborating the question and hopefully find a good answer that does not involve a human looking through an entire source tree to manually do a filter-branch on each matched file. </p>

<p>Here I provide a test script, currently performing the procedure in the answer of <a href=""https://stackoverflow.com/questions/1139762/ignore-files-that-have-already-been-committed-to-a-git-repository"">Ignore files that have already been committed to a Git repository</a>. It is going to remove and create a folder <code>root</code> under PWD, so be careful before running it. I will describe my goal after the code.</p>

<pre><code>#!/bin/bash -e

TESTROOT=${PWD}
GREEN=""\e[32m""
RESET=""\e[39m""

rm -rf root
mkdir -v root
pushd root

mkdir -v repo
pushd repo
git init

touch a b c x 
mkdir -v main
touch main/{a,x,y,z}

# Initial commit
git add .
git commit -m ""Initial Commit""
echo -e ""${GREEN}Contents of first commit${RESET}""
git ls-files | tee ../00-Initial.txt

# Add another commit just for demo
touch d e f y z main/{b,c}
## Make some other changes
echo ""Test"" | tee a | tee b | tee c | tee x | tee main/a &gt; main/x
git add .
git commit -m ""Some edits""

echo -e ""${GREEN}Contents of second commit${RESET}""
git ls-files | tee ../01-Changed.txt

# Now I want to ignore all 'a' and 'b', and all 'main/x', but not 'main/b'
## Checkout the root commit
git checkout -b temp $(git rev-list HEAD | tail -1)
## Add .gitignores
echo ""a"" &gt;&gt; .gitignore
echo ""b"" &gt;&gt; .gitignore
echo ""x"" &gt;&gt; main/.gitignore
echo ""!b"" &gt;&gt; main/.gitignore
git add .
git commit --amend -m ""Initial Commit (2)""
## --v Not sure if it is correct
git rebase --onto temp master
git checkout master
## --v Now, why should I delete this branch?
git branch -D temp
echo -e ""${GREEN}Contents after rebase${RESET}""
git ls-files | tee ../02-Rebased.txt

# Supposingly, rewrite history
git filter-branch --tree-filter 'git clean -f -X' -- --all
echo -e ""${GREEN}Contents after filter-branch${RESET}""
git ls-files | tee ../03-Rewritten.txt

echo ""History of 'a'""
git log -p a

popd # repo

popd # root
</code></pre>

<p>This code creates a repository, adds some files, do some edit, and perform the cleaning procedure. Also, some log files are generated. <em>Ideally, I would like <code>a</code>, <code>b</code>, and <code>main/x</code> disappear from history, while <code>main/b</code> stays</em>. However, right now nothing is removed from history. What should be modified to perform this goal?</p>

<p>Bonus points if this can be done on multiple branches. But for now, keep it to a single master branch.</p>
","0","2353597","0","0"
"6535362","507256","2011-06-30 13:18:19","284","161886","<git><github><gitignore>",".gitignore after commit","<p>I have a git repository hosted on Github. After committing many files, I am realizing that I need to create <code>.gitignore</code> and exclude <code>.exe</code>, <code>.obj</code> files.</p>

<p>However, will it automatically remove these committed files from the repository? Is there any way to force that?</p>
","4","507256","0","0"
"62147322","11208605","2020-06-02 07:53:54","1","1531","<laravel><vue.js><npm><gitignore><public>","Should i include /public in Vue.js gitignore?","<p>I have a laravel/Vue.js project, and whenever i commit there are 3 files that get committed too:
-<code>public/main.js</code>
-<code>public/manifest.js</code>
-<code>public/vendor.js</code></p>

<p>so, Should i include /public in Vue.js gitignore?</p>
","2","11208605","",""
"43483803","5399268","2017-04-18 23:24:37","0","325","<git><gitignore>","Is it impossible to stop tracking a directory in git and remove it locally ensuring it will remaing after a git pull from another machine?","<p>I have a directory I no longer want to track. And I even want to remove some files within that directory, without afecting the git. Means I would like to remove the files and don't have git status to show those changes to be commited, so as to avoid a git pull from another machine would end up removing the files. </p>

<p>I already tried the option:</p>

<pre><code>git rm --cached directory/
</code></pre>

<p>but that ended up deleting the files after I did a git pull from another machine.</p>

<p>Also tried:</p>

<pre><code>git update-index --assume-unchanged directory/ 
</code></pre>

<p>But after deleting the directory I still get an output at git status stating the directory was deleted. I have even added that directory to the .gitignore file.</p>

<p>Is it really impossible to perform such, as stated in the answer under <a href=""https://stackoverflow.com/questions/25123374/stop-tracking-a-file-in-git-without-having-it-deleted-either-locally-or-on-pul"">Stop tracking a file in git - without having it deleted either locally or on pull</a> ? </p>
","1","5399268","0","0"
"62159759","13667869","2020-06-02 19:19:44","0","151","<gitignore>","How do I modify my .gitignore file by adding !*.css at the end?","<p>I'm new to pulling/pushing code and gitignore, and I can't figure out how to modify the .gitignore file.</p>
","0","13667869","0","0"
"24845916","2402790","2014-07-19 23:25:26","0","647","<gitignore>","How to override a negation pattern in the root .gitignore file?","<p>I want Git to ignore a file named <code>.wh..wh.aufs</code> in the repo's root directory, because it was generated by my local file system (AUFS). But it doesn't help to place the pattern <code>*.aufs</code> in my <code>~/.config/git/ignore</code> file, because the repo's root directory <em>also</em> has a <code>.gitignore</code> file with the negation pattern <code>!.*</code>.</p>

<p>Apparently the developers I cloned from want to force-track all files beginning with a dot. I still hope to share changes with them, and don't want to disrupt their arrangements. Without modifying their negation pattern, what's the best way to tell git to ignore my <code>.wh..wh.aufs</code> file?</p>

<p>I read the <a href=""http://git-scm.com/docs/gitignore"" rel=""nofollow"">man page</a>. The precedence policy seems to be working against me, unless there's something reliable I could do on the command line.</p>
","4","2402790","",""
"6574116","41661","2011-07-04 16:45:44","32","6562","<git><gitignore>","Meaning of leading slash in `.gitignore` file","<p>If I put a pattern in a <code>.gitignore</code> file with a leading slash, does the slash refer to the directory in which the <code>.gitignore</code> file is located, or does it refer to the root of the whole repository?</p>

<p>(The man pages I have found have hidden this information carefully.)</p>
","0","41661","0","0"
"62182936","365107","2020-06-03 21:22:14","0","11","<bash><git><gitignore><git-bash><git-for-windows>","Laravel .gitignore blocking of generated css and js files(from `npm run *` type commands) is not effective, as it's supposed to be","<p>I am working in Laravel 5.6.*(probably latest in 5.6 line) project, where I just found that the <code>npm run dev</code> command generated bunch of CSS &amp; JS files into <code>/public/css</code> and <code>/public/js</code> paths respectively.</p>

<p>When I try to block those files from being detected by Git, thro' .gitignore like below, it still gets detected, why this unexpected behavior ?:</p>

<p>.gitignore trial 1:</p>

<pre><code>/public/css
/public/js
</code></pre>

<p>.gitignore trial 2:</p>

<pre><code>public/css/*
public/js/*
</code></pre>

<p>I haven't edited the GitBash version(2.14.*, Windows 10) I am using, so I suppose both the above syntax should work, but they both aren't, can anyone help out ?</p>
","4","365107","0","0"
"43711700","5094445","2017-04-30 21:49:58","0","66","<node.js><git><version-control><passport.js><gitignore>","Node and passport: Should passport.js be in gitignore?","<p>I was building user authentication following this <a href=""https://scotch.io/tutorials/easy-node-authentication-setup-and-local"" rel=""nofollow noreferrer"">tutorial</a>. In here the writer has the passport.js file in the config directory, along with the authentication tokens, and database login string. I understand why the database and auth config's should not be public, so normally I would .gitignore the entire config directory. However this passport.js file is code that I would like to have version control on. Is there any reason this file doesn't belong in public version control, and if so how should I go about removing just that content so the logic of the code can be checked in.</p>

<h3>Passport.JS</h3>

<pre><code>var LocalStrategy = require('passport-local').Strategy;
var FacebookStrategy = require('passport-facebook').Strategy;
var TwitterStrategy = require('passport-twitter').Strategy;
var GoogleStrategy = require('passport-google-oauth').OAuth2Strategy;

var User = require('../app/models/user');

var configAuth = require('../config/auth');

module.exports = function(passport){
   passport.serializeUser(function(user, done){
      done(null, user.id);
   });

   passport.deserializeUser(function(id, done){
      User.findById(id,function(err, user){
     done(err, user);
      });
   });

   passport.use(new GoogleStrategy(
      {
        clientID: configAuth.googleAuth.clientID,
        clientSecret: configAuth.googleAuth.clientSecret,
        callbackURL: configAuth.googleAuth.callbackURL,
        passReqToCallback: true
      },
      function(req, token, refreshToken, profile, done){
     process.nextTick(function(){
        if(!req.user)
        {
           User.findOne({'google.id': profile.id}, function(err, user){
              if(err)
              {
                 return done(err);
              }
              if(user)
              {
                 return done(null, user);
              }
              else
              {
                 var newUser = new User();
                 newUser.account.google_id = profile.id;
                 newUser.account.google_token = token;
                 newUser.account.name = profile.displayName;
                 newUser.account.email = profile.emails[0].value;

                 newUser.save(function(err){
                    if(err)
                    {
                       throw err;
                    }
                    return done(null, newUser);
                 });
              }
           });
        }
        else
        {
           var user = req.user;
           user.account.google_id = profile.id;
           user.account.google_token = token;
           user.account.name = profile.displayName;
           user.account.email = profile.emails[0].value;

           user.save(function(err){
              if(err)
              {
                 throw err;
              }
              return done(null, user);
           });
        }
     });
      }
   ));

   passport.use(new TwitterStrategy(
      {
     consumerKey: configAuth.twitterAuth.consumerKey,
     consumerSecret: configAuth.twitterAuth.consumerSecret,
     callbackURL: configAuth.callbackURL,
     passReqToCallback: true
      },
      function(req, token, tokenSecret, profile, done){
     console.log(token);
     process.nextTick(function(){
        if(!req.user)
        {
           User.findOne({'twitter.id': profile.id }, function(err, user){
              if(err)
              {
                 return done(err);
              }

              if(user)
              {
                 return done(null, user);
              }
              else
              {
                 var newUser = new User();

                 newUser.account.twitter_id = profile.id;
                 newUser.account.twitter_token = token;
                 newUser.account.twitter_username = profile.username;
                 console.log(newUser);

                 newUser.save(function(err){
                    if(err)
                    {
                       throw err;
                    }
                    return done(null, newUser);
                 });
              }
           });
        }
        else{
           var user = req.user;

           user.account.twitter_id = profile.id;
           user.account.twitter_token = token;
           user.account.twitter_username = profile.username;
           user.save(function(err){
              if(err)
              {
                 throw err;
              }
              return done(null, user);
           });

        }
     });
      }
   ));

   passport.use(new FacebookStrategy(
      {
     clientID: configAuth.facebookAuth.clientID,
     clientSecret: configAuth.facebookAuth.clientSecret,
     callbackURL : configAuth.facebookAuth.callbackURL,
     passReqToCallback: true,
     profileFields: [""email"", ""name""],
      },
      function(req, token, refreshToken, profile, done){
     process.nextTick(function(){
        if(!req.user)
        {
           User.findOne({'facebook.id' : profile.id}, function(err, user){
              if(err)
              {
                 return done(err);
              }

              if(user)
              {
                 return done(null, user);
              }

              else
              {
                 var newUser = new User();
                 newUser.account.facebook_id = profile.id;
                 newUser.account.facebook_token = token;
                 newUser.account.name =  profile.displayName;
                 newUser.save(function(err){
                    if(err)
                    {
                       throw err;
                    }
                    return done(null, newUser);
                 });
              }
           });
        }
        else
        {
           var user = req.user;

           user.account.facebook_id = profile.id;
           user.account.facebook_token = token;
           user.account.name = profile.displayName;
           user.save(function(err){
              if(err)
              {
                 throw err;
              }
              return done(null, user);
           });
        }
     });
      }
   ));

   passport.use('local-signup', new LocalStrategy(
      {
     usernameField: 'email',
     passwordField: 'password',
     passReqToCallback: true
      },
      function(req, email, password, done){
     process.nextTick(function(){
        User.findOne({'local.email': email}, function(err, user){
           if(err)
           {
              return done(err);
           }
           if(user){
              return done(null, false, req.flash('signupMessage',' That email is already taken'));
           }
           else
           {
              var newUser = new User();
              newUser.account.email = email;
              newUser.account.password = newUser.generateHash(password);

              newUser.save(function(err){
                 if(err)
                 {
                    throw err;
                 }
                 return done(null, newUser);
              });
           }
        });
     });
   }));

   passport.use('local-login', new LocalStrategy(
      {
     usernameField: 'email',
     passwordField: 'password',
     passReqToCallback : true
      },
      function(req, email, password, done){
     User.findOne({'local.email': email}, function(err, user){
        if(err)
        {
           return done(err);
        }

        if(!user)
        {
           return done(null, false, req.flash('loginMessage', 'Username not found!'));
        }

        if (!user.validPassword(password))
        {
           return done(null, false, req.flash('loginMessage', 'Incorrect Password'));
        }

        return done(null, user);
     });
      }
   ));
}
</code></pre>
","0","5094445","",""
"6828121","619978","2011-07-26 09:42:29","9","3877","<git><gitignore>","How to include only selected files into git repository and exclude all the rest?","<p>Is there any chance to do an opposite to what .gitignore file does? I mean include only specified files and exclude all the rest? Thank you in advance.</p>
","2","619978","0","0"
"43729633","7264030","2017-05-02 03:31:39","1","1043","<git><magento><magento-1.7><gitignore>","Magento - Are these files safe to include on .gitignore file?","<p>I have a <code>Magento 1.7</code> website.</p>

<p>Then I have auto generated files in the form:</p>

<pre><code>...
media/captcha/base/ff3f35b1bbc191988318a9893282f063.png
var/cache/mage--0/mage---331_Zend_LocaleC_en_US_currencynumber_
var/session/sess_58ap4vgtog56j8ojruiurgecp0
var/report/1058813543850
...
</code></pre>

<p>like on the image below:</p>

<p><a href=""https://i.stack.imgur.com/xIUEc.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/xIUEc.png"" alt=""enter image description here""></a></p>

<p>New files like these are auto generated all the time.</p>

<p>I have this website on a <code>Git</code> repository.</p>

<p>Then I want to know if in case I remove all these files that could cause the website stop working as expected. I mean, some content doesn't show up, etc. </p>

<p>If the <code>media/captcha/base/*</code> files are used just once for captcha validation then for sure I could remove those files without any problem.</p>

<p>If the <code>var/cache/mage--0/*</code> files are used as support to display some content but if they are missing and then needed they are re-auto-generated, then for sure I could remove those files without any problem.</p>

<p>My goal here is to know if I could add these files to the <code>.gitignore</code> file so I don't get new changes to commit to the website repository when it is not really necessary.</p>

<p>For example, in the case of images uploaded via some <code>WYSIWYG</code> editor, I could not add those images to the <code>.gitingore</code> file because if I remove those files from the repository, then on the website will be missing content on the corresponding page when installing the website on another server (downloading the <code>Git</code> repository to it).</p>

<p><strong>This is my question</strong></p>

<blockquote>
  <p>What are the Magento file patterns I should add to the <code>.gitignore</code> file in order to have consistency when moving a website from one server to another by downloading a <code>Git</code> repository?</p>
</blockquote>

<p>Know this would be very helpful.</p>
","0","7264030","0","0"
"35916658","2468113","2016-03-10 12:35:02","176","112705","<git><commit><gitignore><jupyter-notebook>","How to git ignore ipython notebook checkpoints anywhere in repository","<p>This is mostly a git question. I want to commit my ipython notebooks but gitignore the checkpoints. </p>

<p>The repo has multiple folders which each have ipython notebooks, therefore just ignoring a single directory does not solve it. I want to keep adding new folders with notebooks inside without worrying about it. </p>

<p>My hunch is that there must be a way to use some wildcard to <em>gitignore anything  that is in a folder that is called */.ipynb_checkpoints/</em> but haven't been able to figure it out. </p>

<h3>So, how can I git ignore all ipython notebook checkpoints in a repository, wherever they are?</h3>
","0","2468113","0","0"
"35920590","13087","2016-03-10 15:24:49","-1","1030","<git><visual-studio-2013><tfs><gitignore>","How to include NuGet packages ""build"" folder when using git with TFS","<p>I'm new to git and am using it with TFS and Visual Studio 2013.</p>

<p>I want downloaded NuGet packages to be included in Git source control.</p>

<p>As an example, I've added a package System.Data.SQLite.Core.1.0.99.0 which includes files such as:</p>

<pre><code>lib\net20\System.Data.SQLite.dll
lib\net35\System.Data.SQLite.dll
...
build\net20\x64\SQLite.Interop.dll
build\net20\x86\SQLite.Interop.dll
</code></pre>

<p>The files under <code>packages\...\lib</code> are included in source control, which is what I want.</p>

<p>But the files under <code>packages\...\build</code> are <strong>not</strong> included.</p>

<p>How can I achieve this?
The .gitignore file provided by Visual Studio 2013 includes the following lines:</p>

<pre><code># Build results

...
[Rr]elease/
x64/
build/
...

# Enable ""build/"" folder in the NuGet Packages folder since NuGet packages use it for MSBuild targets
!packages/*/build/
</code></pre>

<p>which if I've read it right is </p>

<ul>
<li>excluding a number of output folders including ""build"" and ""x64"",</li>
<li>then explicitly enabling the <code>build</code> folder again when its under ""packages"" (the NuGet packages folder).</li>
</ul>

<p>I've tried editing .gitignore in a number of ways, including adding:</p>

<pre><code>!**/packages/*/build/
!**/packages/*/build/*/x64
</code></pre>

<p>but nothing I've tried works.  Any tips appreciated.</p>

<p><strong>UPDATE</strong> </p>

<p>I've found something that works.</p>

<p>In fact my git repository contains several VS solutions in subfolders.  So in fact the path to my packages folder is:</p>

<pre><code>root/folder1/folder2/packages
</code></pre>

<p>where ""root"" is the root directory of my GIT repository, the directory that contains .gitignore.</p>

<p>I can get it to work by adding the lines:</p>

<pre><code>!*/*/packages/*/build/
!*/*/packages/*/build/*/x64
</code></pre>

<p>This is a workaround, but what I really want is to be able to enable <code>packages/*/build</code> and <code>packages/*/build/*/x64</code> wherever they appear in the folder hierarchy.  Prefixing with ""**"" does not work.</p>

<p>To repro this:</p>

<ul>
<li>Create a subfolder in a git repository</li>
<li>Create a Visual Studio 2013 solution in this subfolder</li>
<li>Use NuGet to add the package ""System.Data.SQLite Core (x86/x64)"" to the solution.</li>
</ul>
","3","13087","",""
"43750036","4584078","2017-05-03 02:20:38","0","40","<git><gitignore>",".gitignore not working when directory starts wih ~","<p>I have a directory in a project which only contains a single file called chat.log. The directory is named ~. Yeah, just that. And it is located in the root of the project. I tried to add the directory and/or the file to .gitignore, but nothing seems to work. I tried adding:</p>

<pre><code>~
~/*
*/chat.log 
chat.log
</code></pre>

<p>But really, nothing seems to work. What do I do?</p>
","6","4584078","",""
"52024984","5532849","2018-08-26 09:38:22","1","151","<git><gitignore>","How could I make gitignore works with other language(like Korean)","<p>I tried to add Korean file(or other language) to gitignore, but it didn't work</p>

<p>in .gitignore</p>

<pre><code>#ignore 예제파일/ (=exmapleFile/)
예제파일/
</code></pre>

<p>Any suggestion?</p>
","1","5532849","",""
"25123374","281545","2014-08-04 16:33:00","2","549","<git><gitignore>","Stop tracking a file in git - without having it deleted either locally or on pull","<p>I want to ignore a file/directory tree that was previously tracked - ignore it forever but have it <strong><em>not</em></strong> being deleted on a pull - just have it ignored on the repository the pull happened. Is this possible ? Why not (if not) ? How should I proceed ?</p>

<p>NB: the accepted answer in <a href=""https://stackoverflow.com/questions/1143796/remove-a-file-from-a-git-repository-without-deleting-it-from-the-local-filesyste"">Remove a file from a Git repository without deleting it from the local filesystem</a> - namely <code>git rm --cached path</code> - will result in the file being deleted on a pull. Nasty. Not only that but ""it will delete your file if you check out a revision from before the deletion and then check out a revision from after the deletion"" (see this <a href=""https://stackoverflow.com/questions/936249/stop-tracking-and-ignore-changes-to-a-file-in-git#comment34069205_936290"">comment</a>) See this question for other interesting comments/answers that do not address my issue however. </p>

<p>I am perfectly aware of the <a href=""https://stackoverflow.com/questions/6791889/git-untrack-a-file-in-local-repo-only-and-keep-it-in-the-remote-repo""><code>--assume-unchanged</code></a> flag but this is not what I want - I want to tell to git (and all repository clones) ""hey, stop tracking this file/tree"" but not ""delete this file/tree"" - so I want to <code>--assume-unchanged</code> globally as it were. If it is not possible (why ?) I need a <a href=""https://stackoverflow.com/a/3318849/281545"">workaround</a>.</p>

<p>For the record I am trying to bootstrap git to use it to keep/share history and I want to be able to stop tracking files/directories at will - <em>without having them deleted</em>.</p>

<p>Related:</p>

<ul>
<li><a href=""http://fallengamer.livejournal.com/93321.html"" rel=""nofollow noreferrer"">git assume-unchanged vs skip-worktree</a> - the general advice for assume-unchanged should be taken with a grain of salt (on pull, reset --hard etc)</li>
<li><a href=""https://stackoverflow.com/a/3318849/281545"">git assume unchanged vs skip worktree - ignoring a symbolic link</a> - see this answer for <code>core.sparseCheckout</code></li>
</ul>
","7","281545","",""
"7124726","93004","2011-08-19 16:40:59","865","531740","<git><commit><gitignore><staging>","git add only modified changes and ignore untracked files","<p>I ran ""git status"" and listed below are some files that were modified/or under the heading ""changes not staged for commit"".
It also listed some untracked files that I want to ignore (I have a "".gitignore"" file in these directories).</p>

<p>I want to put the modified files in staging so I can commit them.  When I ran ""git add ."", it added the modified files AND the files I want to ignore to staging.</p>

<p>How do I add only the modified files and ignore the untracked files if presented with the git status below.</p>

<p>Also, are my "".gitignore"" files working properly?</p>

<pre><code>$ git status
# On branch addLocation
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#       modified:   someProject/path/domain/viewer/LocationDO.java
#       modified:   someProject/path/service/ld/LdService.java
#       modified:   someProject/path/service/ld/LdServiceImpl.java
#       modified:   someProject/path/web/jsf/viewer/LocationFormAction.java
#       modified:   someProject/war/WEB-INF/classes/message/viewer/viewer.properties
#       modified:   someProject/war/page/viewer/searchForm.xhtml
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       .metadata/
#       someProject/build/
no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>
","1","93004","0","0"
"52055713","9559251","2018-08-28 10:29:40","0","686","<git><github><intellij-idea><gitignore>",".gitignore doesn't unignore subdirectory files","<p>I am trying to ignore the main .idea directory and exclude specific files from it I want to commit to VCS. I've found out that ! in front of the ignore 'un-ignores' the file. This doesn't work in my case. Any idea what I should do?</p>

<p>I've tried</p>

<pre><code>.idea/*
!.idea/scopes
!.idea/inspectionProfiles/JSInspection.xml
!.idea/TRIP.iml
!.idea/modules.xml
</code></pre>

<p>and</p>

<pre><code>/.idea/*
!/.idea/scopes
!/.idea/inspectionProfiles/JSInspection.xml
!/.idea/TRIP.iml
!/.idea/modules.xml
</code></pre>
","1","9559251","",""
"52067278","1337422","2018-08-28 23:01:53","2","170","<git><environment-variables><gitignore>","Git: Include file in git clone but ignore any local changes to it?","<p>Git question! Is it possible to ignore local changes to a file but still include the file when the project is cloned?</p>

<p>There's a template in our repo for our <code>.env</code> file. That looks like this:</p>

<pre><code>#########################
# ENVIRONMENT VARIABLES #
#########################

NODE_ENV=local
PORT=8000
MYSQL_USERNAME=root
MYSQL_PASSWORD=
MYSQL_WRITE_HOST=localhost
MYSQL_READ_HOSTS_LIST=localhost
MYSQL_PORT=3306
AWS_ACCESS_KEY_ID=
(... etc)
</code></pre>

<p>We'd like for new devs to receive it when they <code>git clone</code>.</p>

<p>They'll be populating missing fields locally, and we do not want them to accidentally commit access keys, etc.</p>

<p>Will putting <code>.env</code> in our .gitignore file prevent the file from being included in a <code>git clone</code>?</p>
","1","1337422","0","0"
"52091151","9879869","2018-08-30 07:11:26","2","511","<git><config><gitignore>","Function of .gitignore to avoid pushing of API keys?","<p>Hi I will be using MySQL Connector/Python to access some data in DB. I have read in the <a href=""https://dev.mysql.com/doc/connector-python/en/connector-python-coding.html"" rel=""nofollow noreferrer"">guidelines</a> not to hardcode the keys on to the code but use <code>config.py</code>. I have also found that it can be done with <a href=""https://martin-thoma.com/configuration-files-in-python/"" rel=""nofollow noreferrer"">JSON</a>. My app will be served to Heroku. What's the use of .gitignore? On this <a href=""https://martin-thoma.com/configuration-files-in-python/"" rel=""nofollow noreferrer"">example</a>, he used the name <code>databaseconfig.py</code>. But added a line <code>*config.py</code> in the <code>.gitignore</code> file. Why is not <code>*databaseconfig.py</code>? Also what is the equivalent if I have to add the JSON config file to the .gitignore? Thanks!</p>
","0","9879869","",""
"36018171","4604899","2016-03-15 17:29:36","10","12060","<git><gitignore>","How to gitignore Go binaries?","<p>I have a <code>.gitignore</code> file like this:</p>

<pre><code># no binaries
*/
!*.go/
!.gitignore
</code></pre>

<p>I thought <code>*/</code> means to ignore all files in all subdirectories (so every file), <code>!*.go/</code> means to not-ignore all <code>*.go</code> files in all subdirectories, and <code>!.gitignore</code> means to not ignore <code>.gitignore</code>. </p>

<p>However, the issue I have now is that when I create a new <code>*.go</code> file in a subdirectory, it's now ignored. </p>

<p>How do I correctly gitignore all compiled binaries, but not ignore <code>*.go</code> files?</p>

<p>I now have </p>

<pre><code>**/*  
!**/*.go
!.gitignore
</code></pre>

<p>But it still ignores all *.go files in the ch1 directory. Anyone else have ideas?</p>
","0","4604899","0","0"
"43986317","3885136","2017-05-15 18:19:25","1","610","<git><gitignore>","git ignore all files except extension but ignore pattern of extension","<p>I have a folder containing two types of files that are required to compile a software program. When the software program is compiled, it auto-generates files I do not wish to track, but one of those files is of the same extension of the files required to compile the program I have:</p>

<pre><code># ignore everything (to ignore all auto-generated files without listing their extensions)
*

# but do not ignore (required to compile)
!*.abc
!*.xyz

# but ignore if file name matches pattern (auto-generated file after compilation)
*generic.abc
</code></pre>

<p>Is there a way to ignore everything, except two specified file extensions, but ignore the specified file extension if it is preceded by a certain naming convention? Note: there is unique text before the ""generic.abc"" file, which is why I want to ignore that ""generic.abc"" convention. Thanks in advance!</p>
","3","3885136","",""
"7174190","855787","2011-08-24 10:46:25","0","426","<git><codeigniter><gitignore>","How can I have different versions of a file in the local working directory, remote working directory and git ftp target?","<p>I'm using Git to manage a CodeIgniter project. I work on my local machine and push to a remote server, where I test everything. Then I use <code>git ftp push</code> to update the production site on another host.</p>

<p>Now, to make this work I need three different index.php files, one for every environment, where I just set a different environment variable.</p>

<p>So I need to gitignore the index.php file, and even git-ftp-ignore it. For the ftp it is working. For the normal gitignore it isn't: It keeps updating the index.php file on the remote server.</p>

<p>I tried doing <code>git rm --cached index.php</code>, but what I get is that it completely deletes the index.php file on the remote server.</p>

<p>What am I doing wrong?</p>

<p><em>Edit: It seems it's not something I can do with git, but <a href=""http://philsturgeon.co.uk/news/2009/01/How-to-Support-multiple-production-environments-in-CodeIgniter"" rel=""nofollow"">I've found a better way to set the CodeIgniter environment variable</a>.</em></p>
","0","855787","",""
"62657761","13840827","2020-06-30 12:45:13","0","2881","<git><gitignore>","problem with"" git add . "" fatal error Browse.VC.opendb","<p>I'm trying to use <code>git add .</code> to upload my project to github, but when I use the command I keep getting this error:</p>
<pre><code>error: open(&quot;PuzzleGame/.vs/PuzzleGame/v16/Browse.VC.opendb&quot;): Permission denied
error: unable to index file 'PuzzleGame/.vs/PuzzleGame/v16/Browse.VC.opendb'
fatal: adding files failed
</code></pre>
<p>the only way I can go past this error is to close my visual studio!</p>
<p>if anybody could help me, I would be grateful.</p>
<p>![the same error can be seen in the image][1]
[1]: https://i.stack.imgur.com/DoaBp.jpg</p>
","4","13840827","0","0"
"25640264","3932796","2014-09-03 09:01:13","3","1288","<git><visual-studio-2013><gitignore>","How to get git to stop ignoring one folder","<p>I have a programming project in Visual Studio and i use the Git with it. The Visual Studio automatically generated a .gitignore file in my project's main folder.</p>

<p>This is the part that ignores the bin folder, which contains my compiled project in debug and release folders:</p>

<pre><code># Build results

[Dd]ebug/
x64/
build/
[Bb]in/
[Rr]elease/
[Oo]bj/
</code></pre>

<p>The folder structure looks like this:</p>

<pre><code>root/
   .git/
   .gitignore
   file.doc
   Myproject/
       somefile.txt
       bin/
           Debug/
               filefoo.bar
           Release/
               someotherfile.exe
</code></pre>

<p>I want the git to ignore everything in the bin folder, except the Release folder.</p>

<p>I tried both to remove the <code>[Rr]elease/</code> line and to change it to <code>![Rr]elease/</code> but none of that seems to work.</p>
","1","3932796","",""
"44223427","1088099","2017-05-28 03:04:35","22","7702","<asp.net><git><asp.net-core><gitignore>",".gitignore still including asp.net core wwwroot/lib directory","<p>Before I even create my ASP.NET Core project I first create my git repository and select the initial gitignore template to be VisualStudio.  I then added the line: </p>

<p>wwwroot/lib/</p>

<p>After committing and publishing this change I then created my ASP.NET Core Web Application project using the standard Web Application template to start with, and it still shows the brought in jquery and bootstrap files pulled down by bower as modified files ready to be committed?  Is there a step I am missing here to prevent these as showing up as modified?</p>
","0","1088099","0","0"
"52192526","2848117","2018-09-05 19:53:46","1","127","<git><directory><gitignore>","How to specify git to only ignore files that match a pattern and not a directory?","<p>I ran into a scenario today where there was a naming collision with a file we desire to ignore and a sub directory in one of our projects. In a new project that is being set up on git, there is a directory called <code>src/core/app</code>. Our default git ignore excludes any file called <code>core</code> due to it being output if there is a core dump. The <code>.gitignore</code> file contains a similar line like so:</p>

<pre><code>#debug files
core
</code></pre>

<p>We worked around it by doing a <code>git add -f</code>,  but I'm curious is there an available git ignore syntax that would specify we only want  to ignore a file named core and not include any directories that may be named <code>core</code>?</p>
","0","2848117","",""
"52195840","3696153","2018-09-06 02:53:38","2","156","<git><diff><gitignore>","gnudiff, and .gitignore files","<p>To be clear - This is not a <code>git diff</code> problem or question</p>

<p>I have two locally checked out repos - that share a common quasi common heritage. </p>

<p>Both are under git control (but come from two separate remote servers) - they have many things in common.</p>

<p>What I would like to do is a normal gnu <code>diff -Naur</code> type comparison between the two directory structures.</p>

<p>Normally you would use <code>--exclude=PATTERN</code> options for gnu-diff to exclude things.  For example you might <code>--exclude=.git</code> to ignore the two different <em>.git</em> directories </p>

<p>What I want instead is an option to make gnu-diff <em>.gitignore</em> aware</p>

<p>in effect, as gnu diff traverses the directory structure and comes across a <em>.gitignore</em> file follow the GIT rules and ignore accordingly.</p>

<p>Sort of an option like this:    </p>

<pre><code>diff -Naur  --honor-git-ignore-files  DIR1   DIR2
</code></pre>
","0","3696153","0","0"
"52222461","5958505","2018-09-07 12:20:12","24","13721","<python><jupyter-notebook><gitignore>","How to edit .gitignore in Jupyter Lab?","<p>My <code>.gitignore</code> is not visible in Jupyter Lab Files tab. Is there any way to show hidden files there?</p>
","3","5958505","0","0"
"69777520","11369248","2021-10-30 07:18:24","0","23","<git><gitignore>","gitingnore isn't ignoring my node_modules folder. Though .env file is ignored","<p>My gitignore file is not ignoring the node_modules folder. This causing the folder is uploaded in github.</p>
<p>I have attached some commands that are included in the screenshot.</p>
<p><a href=""https://i.stack.imgur.com/uq1fk.png"" rel=""nofollow noreferrer"">This is the screenshot of my folder directory and code</a></p>
","2","11369248","",""
"52235034","967484","2018-09-08 11:50:01","2","5945","<git><cocoapods><gitignore><xcode10>","Xcode 10 Git how to update .gitignore to ignore new project files related to cocoapods?","<p>I have a <code>.gitignore</code> set up to ignore cocoa pod related files. However, I've done a new <strong>pod install</strong> for an Xcode 10 project to fix an unrelated issue and see that there's a number of new pod-related files added to source control. Is this related to using Xcode 10?</p>

<p><strong>How do I update my .gitignore file to ignore new file/folder types (if any) added with Xcode 10 project format?</strong></p>

<p><a href=""https://i.stack.imgur.com/iPCRe.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/iPCRe.png"" alt=""enter image description here""></a></p>
","4","967484","",""
"62905875","13572961","2020-07-15 00:32:21","4","915","<android><android-studio><gitignore>","Should I add .idea/jarRepositories.xml to gitignore?","<p>Should I add .idea/jarRepositories.xml to gitignore?<br />
It was generated after updating Android Studio to 4.0</p>
","1","13572961","0","0"
"36180978","472610","2016-03-23 14:29:58","0","40","<git><gitignore>","Show version controlled files that would otherwise be ignored by current .gitignore","<p>The title says it all. </p>

<p>For a simple example: at time t1, the repository contains files with extensions <code>.A</code> and <code>.B</code>. At a later time t2, we decide to add <code>.B</code> extensions to the <code>.gitignore</code> file. I'd like to list files with extension <code>.B</code> currently under version control (not to remove them, just to know if/where they are). </p>

<p>Of course in my case it's not just one extension but many different patterns that have been added to the <code>.gitignore</code>. And it is also something useful to know for general maintenance purposes.</p>

<p>Note: I'm not interested in ignored files not under version control, I know you can list those using <code>git status -i</code>.</p>
","6","472610","",""
"52245384","5367377","2018-09-09 14:16:14","1","110","<git><gitignore>","gitignore rule to always include folders with a specific name","<p>I have a root .gitignore file (Visual Studio) in my project root folder. In some subfolder's I have a folder named 3rdParty which contains folders like lib, debug and release with dll files in it. </p>

<p><a href=""https://i.stack.imgur.com/EofAP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/EofAP.png"" alt=""enter image description here""></a></p>

<p>I want to commit these to my GIT repo.</p>

<p>In my .gitignore on rootlevel the debug and release are excluded.</p>

<pre><code>[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
</code></pre>

<p>I have tried putting a .gitignore file in the several 3rdParty folders without the debug and release rule. </p>

<pre><code>#[Dd]ebug/
#[Dd]ebugPublic/
#[Rr]elease/
#[Rr]eleases/
</code></pre>

<p>But that didn't work. Is there a way I can set a ! rule in my root .gitignore so that all folders named 3rdParty on all levels are included?</p>
","3","5367377","",""
"36183987","4190203","2016-03-23 16:43:37","0","48","<ruby><github><gitignore><git-assume-unchanged>","How do I ignore files when pulling from github?","<p>I am working in Ruby and want to ignore my config files when I pull from Github.</p>

<p>The error I am receiving is:
""error: Your local changes to the following files would be overwritten by merge:  config/database.yml""</p>

<p>Things I have tried:</p>

<p>1) I added the file paths to my .gitignore located in my application root.</p>

<p>2) I added the file paths to my global .gitignore</p>

<p>3) I ran git update-index --assume-unchanged /config/database.yml from my application root</p>

<p>4) I ran git update-index --skip-worktree config/database.yml from my application root</p>

<p>I have multiple instances of the same application in several different folders on my computer. The other instances of the application respect the assume-unchanged command. Im not sure what I am missing.</p>
","0","4190203","",""
"36203525","2370086","2016-03-24 15:09:48","33","33188","<gitignore>",".gitignore - Ignore everything in a directory except one file","<p>I know there is a lot of questions like this, but no one solved my problem. I want something very simple - ignore all files and folders under specific folder except one file. This is what I try:</p>

<pre><code>#Ignore
public/typings/*

#Allow
!public/typings/browser/ambient/jquery/jquery.d.ts
</code></pre>

<p>...but the file is still ignored.</p>

<p>Any suggestions?</p>
","0","2370086","0","0"
"44492651","1223975","2017-06-12 06:26:41","1","1684","<javascript><git><typescript><gitignore>","Conditional .gitignore files - adding logic to .gitignore","<p>So I have TypeScript project. The generated .d.ts and .js files can cause unnecessary merge conflicts.</p>

<p>However, this project is big and is currently only ~50% converted from JS to TS, so I cannot simply .gitignore all .js files. Furthermore, there are some .js files which I will never convert to .ts.</p>

<p><strong>So is there a way to conditionally ignore a file?</strong></p>

<p>The logic is of course simple:</p>

<pre><code>ignore z.js if z.ts exists
</code></pre>
","2","1223975","0","0"
"36249307","492336","2016-03-27 15:48:30","5","1664","<git><mono><monodevelop><gitignore>",".gitignore for Mono/MonoDevelop projects","<p>Which files should I put under .gitignore in MonoDevelop? Github doesn't have an official .gitignore specifically for MonoDevelop.</p>

<p>This question says that MonoDevelop <a href=""https://stackoverflow.com/questions/8651449/visual-studio-project-to-monodevelop"">uses the VS2008-style MSBuild projects as its native format</a>, does this mean I can use the official GitHub <a href=""https://raw.githubusercontent.com/github/gitignore/master/VisualStudio.gitignore"" rel=""noreferrer"">VisualStudio.gitignore</a> for Mono projects as well, or should I use a .gitignore crafted specifically for Mono projects?</p>
","0","492336","0","0"
"36251746","1318479","2016-03-27 19:37:31","31","65592","<git><pycharm><gitignore>","How to use gitignore in Pycharm?","<p>Similar questions <a href=""https://stackoverflow.com/questions/936249/stop-tracking-and-ignore-changes-to-a-file-in-git"">like this one</a> about how to ignore files in a git repo are typically answered by showing which git command to execute on the command line. <a href=""https://stackoverflow.com/questions/9237345/how-do-i-ignore-pycharm-configuration-files-in-a-git-repository"">Even this one</a>, although it is PyCharm specific, does the same.</p>

<p>Is there a way to manage this file through the PyCharm GUI?</p>
","0","1318479","0","0"
"44500887","1810087","2017-06-12 13:38:56","1","1746","<git><gitignore>","Is it possible to relocate .gitignore file itself?","<p>I have two git repositories in one folder. I am able to relocate the <code>.git</code> directory and work with both repos using <code>--git-dir=/path/to/.git</code> and <code>--work-tree=/path/to/code</code>. However, i can't find any options to relocate the <code>.gitignore</code> file, which is currently in the root path of the repositories and is considered by both of them. I also thought about using <code>-c &lt;.gitignoreOptionWhichIDontKnow&gt;=""/path/to/.gitignore""</code> but cannot find any options to relocate my .gitignore file.</p>

<p><strong>Is it possible to relocate .gitignore file?</strong></p>
","0","1810087","",""
"7803689","1000544","2011-10-18 07:16:09","28","20905","<git><gitignore>","gitignore: Ignore all files in folder hierarchy except one specific filetype","<p>I'd like to ignore all files below and in a folder except a specific filetype that could be somewhere in the folders hierarchy:</p>

<p>Example </p>

<pre><code>/Test
/Test/unknown/folder/structure/below
</code></pre>

<p>Now I'd like to ignore all files in and below the <code>Test</code> folder except a certain css file named <code>layout.css</code>, e.g.:</p>

<pre><code>/Test/layout.css
/Test/fileto.ignore
/Test/another/folder/ig.nore
/Test/in/a/unknown/folder/layout.css
/Test/in/a/unknown/folder/ignore.me
</code></pre>

<p>.gitignore should ignore</p>

<pre><code>/Test/fileto.ignore
/Test/another/folder/ig.nore
/Test/in/a/unknown/folder/ignore.me
</code></pre>

<p>My .gitignore file does not work:</p>

<pre><code>Test/
!layout.css
</code></pre>

<p>Any suggestions?</p>
","3","1000544","0","0"
"25961105","2695685","2014-09-21 16:05:12","0","256","<gitignore><webstorm>","Removing file from .gitignore in webstorm","<p>I was searching the web for hour now...
I can't seem to find where the gitignore file is located,and it's ruining my life. I have to remove one file from there. I'm using WebStorm 8
Any help?</p>
","1","2695685","",""
"36296382","866271","2016-03-29 22:40:13","0","221","<eclipse><git><gitignore><ignore>","Prevent newly ignored files from changing on git checkout","<p>I have the following situation: My git repository had broken .project files checked in previously, and we wanted to remove them as they cause all sorts of importing issues. So I created a branch, where I removed all the .project files, added "".project"" to .gitignore, and had planned to merge it into master, have all the developers pull down the latest update, and reimport. I've tested this and it works fine...new metadata (ie .project) files are created by Eclipse, but are ignored because of the .gitignore change.</p>

<p>The problem is, if a developer switches to one of their issue branches which was created pre-fix, that branch will still have the old (incorrect) .project files, which when checking out will overwrite what eclipse just generated in their working directory. This breaks everything...</p>

<p>I tried ""update-index --skip-worktree"" and ""--assume-unchanged"", but it wouldn't work properly, I assume because these files were no longer in the index and were ignored. Is there any way, short of merging master back into all of their branches before telling them to reimport everything, that I can resolve this?</p>

<p>Thanks.</p>

<p>EDIT: I should note, while I'm pretty experienced with git, the developers on my team are complete novices. So ideally any solution would be one that I could do on the repo side, and they could just click ""pull"" and have everything work automagically. If there was a single command that they could run through the SourceTree console, that might work too...</p>
","1","866271","",""
"36303785","6032388","2016-03-30 08:42:48","1","449","<git><gitignore>","How to add a single file from a directory to git ignore?","<p>Let say, i have a asp.net mvc project(Git Enabled from CMD hosted in bitbucket) in visual studio 2015 service pack 1.
my project folder looks like this following:</p>

<pre>
MyProject
|
|--DAL--DataManager
|.gitignore
|MyProject.sln
|Other files
|--Other folders
</pre>

<p>now i want to untrack update on a File in DAL/DataManager/ConnectionSettings.cs</p>

<p>my .gitignore file is like below
<a href=""http://pastebin.com/QRdSTdEK"" rel=""nofollow"">http://pastebin.com/QRdSTdEK</a></p>

<p>how to do it?</p>
","0","6032388","0","0"
"52361865","3090156","2018-09-17 06:25:35","3","614","<git><gitignore>","Share company-wide gitignore file","<p>Our company maintains several software projects, all versioncontrolled in different git repositories. All projects already have .gitignore files.</p>

<p>Question: How can I establish one single shared .gitignore file accross all company projects?</p>

<p>Add-on question: The file should be readonly to most people I guess. Otherwise we would run into uncontrolled changes.</p>

<p>Edit: What about ""deploying"" the .gitignore file using a custom NuGet package? Do you think this is a practical approach? It would be a pull principle and rather hard to enforce it in all projects.</p>
","4","3090156","",""
"26238157","316847","2014-10-07 14:17:09","11","3341","<git><jekyll><gitignore>","git still shows files as untracked despite .gitignore and rm -r --cached. What did I do wrong?","<p>I'm not sure what I'm doing wrong in this case with my .gitignore file, but these files keep showing up.</p>

<h2>Background</h2>

<p>I'm using Jekyll to build a blog. Jekyll generates <code>_site</code> and <code>.sass-cache</code> directories when it begins serving.</p>

<p>I previously committed these directories before realizing I wanted to ignore them.</p>

<p>To be overly cautious, I added all of the following lines to my <code>.gitignore</code>:</p>

<pre><code>##Jekyll
/_site/
_site/
_site
/.sass-cache/
.sass-cache/
.sass-cache
</code></pre>

<p>Since I knew I'd committed these files previously, I:</p>

<ul>
<li>Committed the updated <code>.gitignore</code> file.</li>
<li>did a <code>git rm -r --cached .</code></li>
<li>deleted the <code>_site</code> and <code>.sass-cache</code> folders</li>
<li>ran a <code>git add .</code> and <code>git status</code> showed that the working directory was clean</li>
</ul>

<h2>Problem</h2>

<p>Despite all of that, the updated .gitignore file, and verifying (I think?) that things are clean and good, whenever I run <code>bundle exec jekyll serve</code> and jekyll generates the files, I see <code>.sass-cache</code> and <code>_site</code> show up in my untracked files.</p>

<h2>Question</h2>

<ul>
<li>What am I doing wrong here? Is my .gitignore formed improperly? </li>
<li>How can I ensure that git never shows these directories in the untracked list?</li>
</ul>

<p>The .gitignore in its current state <a href=""https://github.com/SeanKilleen/seankilleen.github.io/blob/1503b5b9125914128c893211dff0d0bac9fe08a6/.gitignore"" rel=""noreferrer"">can be found here</a>.</p>
","0","316847","0","0"
"62508927","12389688","2020-06-22 06:53:56","0","1357","<git><github><gitignore>","Is it mandatory to include .gitignore file to my repository on git?","<p>I do not have any files that must be ignored.
My doubt is so shud we add a gitignore file to github repo even when we have nothing to ignore</p>
","1","12389688","",""
"6999601","631345","2011-08-09 16:33:30","1","3297","<git><gitignore><unfuddle><git-tower>","Ignore already tracked files? (using Tower for Mac to work with a git repository)","<p>I'm new to Git, so please bear with me!</p>

<p>I'm working with a clone of a remote repository on Unfuddle. The clone is of an ExpressionEngine install, so I need to make changes to certain files to get the CMS to work on my local machine, I'm running it under MAMP. However, I do NOT want to push these modified files back up to the remote repository when I'm done, nor do I want them sitting in Tower, waiting to have their changes committed.</p>

<p>I've tried ignoring the files, but this causes issues...the ignores get pushed up to the repository, which I also don't want! Other people are working with this repository, and those files should NOT be ignored on their systems. I just basically want Tower to leave the remote repository as-is, but pretend the changes I've made to my local files just aren't there.</p>

<p>Am I asking for the impossible?</p>

<p>-UPDATE-
Specifically, I'd like to work with Tower, so knowing how to perform git commands within that framework would be most helpful.</p>
","3","631345","0","0"
"25229373","827927","2014-08-10 14:03:54","2","98","<eclipse><gitignore><tex>","A folder is mysteriously added into my .gitignore file","<p>I have an Eclipse project which contains only a single folder ""MyFolder"" containing a LaTeX file ""myfile.tex"". For some reason, whenever I refresh the project or save a file, the following line is added to the .gitignore file at the root of my project:</p>

<pre><code>/MyFolder
</code></pre>

<p>I.e., someone mysteriously tells GIT to ignore the entire folder which contains my tex file. I suspect it's the tex plugin doing this. But why? How can I prevent this?</p>
","0","827927","",""
"25229592","984868","2014-08-10 14:31:53","17","4962","<python><pattern-matching><gitignore><glob><fnmatch>","Python, how to implement something like .gitignore behavior","<p>I need to list all files in the current directory (.) (including all sub directories), and exclude some files as how .gitignore works (<a href=""http://git-scm.com/docs/gitignore"" rel=""noreferrer"">http://git-scm.com/docs/gitignore</a>)</p>

<p>With fnmatch (<a href=""https://docs.python.org/2/library/fnmatch.html"" rel=""noreferrer"">https://docs.python.org/2/library/fnmatch.html</a>) I will be able to ""filter"" files using a pattern</p>

<pre><code>ignore_files = ['*.jpg', 'foo/', 'bar/hello*']
matches = []
for root, dirnames, filenames in os.walk('.'):
  for filename in fnmatch.filter(filenames, '*'):
      matches.append(os.path.join(root, filename))
</code></pre>

<p>how can I ""filter"" and get all files which doesn't match with one or more element of my ""ignore_files""?</p>

<p>Thanks!</p>
","2","984868","0","0"
"7005142","631613","2011-08-10 02:07:31","35","13596","<git><gitignore>","Can I include other .gitignore file in a .gitignore file? (like #include in c-like languages)","<p>I have some files like <code>vim.gitignore</code>, <code>SVN.gitignore</code> and <code>CVS.gitignore</code> (spread around on my hard disk).</p>

<p>Can I simply include these gitignore files in a <code>.gitignore</code> file in a new Git project?</p>

<p><strong>Edit</strong>: I have a global ignore file already.<br>
I just want to ignore different files in different types of projects, is this possible?</p>
","0","631613","0","0"
"62538659","6721134","2020-06-23 15:44:47","-2","332","<git><gitignore><git-gui>",".gitignore is being ignored by git gui","<p>I'm using git gui. Trying to exclude some files (*.dll, *.pdb - for example from my <strong>Unstaged Changes</strong> list).
I have a .gitignore file (UTF-8), located at the same folder as the .git folder.
For the test case, I'm trying to remove *.dll files(I have these kind of files already committed in the past - I just don't want them to appear in the Unstaged Changes, after making a new build).
Here is my .gitignore file content:</p>
<pre><code>    # See http://help.github.com/ignore-files/ for more about ignoring files.

    # compiled output
    /dist
    /tmp
    /out-tsc
    # Only exists if Bazel was run
    /bazel-out

    # dependencies
    /node_modules

    # profiling files
    chrome-profiler-events*.json
    speed-measure-plugin*.json

    # IDEs and editors
    /.idea
    .project
    .classpath
    .c9/
    *.launch
    .settings/
    *.sublime-workspace

    # IDE - VSCode
    .vscode/*
    !.vscode/settings.json
    !.vscode/tasks.json
    !.vscode/launch.json
    !.vscode/extensions.json
    .history/*

    # misc
    /.sass-cache
    /connect.lock
    /coverage
    /libpeerconnection.log
    npm-debug.log
    yarn-error.log
    testem.log
    /typings

    # System Files
    .DS_Store
    Thumbs.db


    #server side
    *.dll
    *.pdb
    *.suo
    *.cache
    *.ide-wal
    *.out
</code></pre>
<p>What Am I doing wrong ?</p>
","5","6721134","",""
"25254694","1394393","2014-08-12 01:04:14","28","10322","<git><git-svn><gitignore><msysgit><svnignore>","git svn show-ignore gives error ""command returned error: 1""","<p>I'm trying to migrate a project from SVN to git. This is the command I use:</p>

<pre><code>$ git svn clone http://oursvnserver/ --no-metadata -A ../authors-transform.txt --trunk=path/to/trunk --branches=path/to/branches --tags=path/to/tags . --username=mysvnusername --prefix=origin/
</code></pre>

<p>The current directory is the directory that I want to become a repository. <code>authors-transform.txt</code> is most definitely in the right location. The project uses the standard layout, but it does not exist at the root of the repository. (Unfortunately, someone long ago started the practice of just stuffing all projects into the same repository. That's why I specify <code>--trunk</code>, <code>--branches</code>, and <code>--tags</code>.) It seems to check out fine. Then I try to generate an ignore file and get this incredibly cryptic error:</p>

<pre><code>$ git svn show-ignore
config --get svn-remote.svn.fetch :refs/remotes/git-svn$: command returned error: 1
</code></pre>

<p>It appears to be running some other command in the process, so I made some guesses:</p>

<pre><code>$ git config --get svn-remote.svn.fetch :refs/remotes/git-svn || echo $?
1
$ git config --get svn-remote.svn.fetch :refs/remotes/git-svn$ || echo $?
1
</code></pre>

<p>So maybe I'm guessing right about what command it's calling? But that doesn't really help.</p>

<p>What does this error actually mean? What can I try to resolve it?</p>

<p>Using msysgit 1.9.4.</p>
","0","1394393","0","0"
"62731235","2266586","2020-07-04 15:52:47","-1","3604","<angular><git><github><node-modules><gitignore>","Why does git ignore node_modules folder by default?","<p>I created an angular project and pushed it in my <code>github</code> repository.</p>
<p>When I looked at the pushed files, the <code>node_modules</code> folder was missing, I didn't declare anywhere to ignore this folder, is this a default behavior? If yes then why?</p>
<p>Also, when I decided to delete all my repositories on github and create only one instead where I will check-in all my projects, once initializing <code>git init</code> and pushing changes, git started pushing <code>node_modules</code> folder for all projects and it took a lot of time.</p>
<p>What makes <code>git</code> ignore or not ignore the <code>node_modules</code> folder all by itself? I haven't set this configuration anywhere by myself.</p>
<p>Thank you.</p>
","6","2266586","",""
"44084406","7647242","2017-05-20 09:50:16","1","437","<android><android-studio><gitignore>","Android Studio .ignore plugin. Proper destination for gitignore file","<p>I use .ignore plugin to create my gitignore file.</p>

<p>When I select .gitignore file, then this window shows up.</p>

<p><a href=""https://i.stack.imgur.com/wmMxf.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/wmMxf.png"" alt=""Choose Destination Directory""></a></p>

<p>My question is rather simple. What is the proper destination for gitignore file? Is there any rule? Or maybe it's totally up to me?</p>
","1","7647242","",""
"7284935","885985","2011-09-02 14:27:59","4","1930","<git><gitignore>",".gitignore exclude folder with files but include subdirectory","<p>I have folders like so:</p>

<pre><code>/foo/one.txt
/foo/bar/two.txt
/foo/other/three.txt
</code></pre>

<p>I want to exclude everything in the folder /foo/ except the subfolder /foo/bar/. How do I do that?</p>

<p>With this .gitignore I've managed to exclude the ""other"" subfolder, but the file ""one.txt"" is still included.</p>

<pre><code>/foo/*
!/foo/bar/
</code></pre>
","1","885985","0","0"
"62747569","2521785","2020-07-05 23:59:58","0","222","<django><git><pycharm><gitignore>","Dealing with django settings.py file after adding to .gitignore?","<p>I added the <code>settings.py</code> file of my django project to <code>.gitignore</code> before pushing to Github.</p>
<p>Now when I open the project in PyCharm, the file name <code>settings.py</code> is highlighted in a kind of lime green color.</p>
<p>Is this telling me something else or are there any other implications for this other than having added it to .gitignore, maybe in terms of later on when I want to put my site on a remote server for instance?</p>
<p>I will probably push new commits to Github in the future so I had planned to keep it in .gitignore, but would this present any other problems?</p>
","3","2521785","",""
"44104238","995714","2017-05-22 03:31:14","2","60","<git><gitignore><ignore>","How to properly handle a file only used locally in git?","<p>I want to reorder the output of changed files in git commits so I've created a file called <code>submodule/orderfile</code> and configured <a href=""https://git-scm.com/docs/git-config"" rel=""nofollow noreferrer""><code>diff.orderFile</code></a> to point to that file.</p>

<p>Now many problems arise</p>

<ul>
<li>If I add the file to <code>.gitignore</code>, the <code>.gitignore</code> will be listed as modified</li>
<li>If I add the path <code>submodule/orderfile</code> to <code>.git/info/exclude</code> the file still appears when I run <code>git status</code>.</li>
</ul>

<p>Either way, <code>orderfile</code> or <code>.gitignore</code> will be listed in git status. If I commit it to a branch it'll be removed when I switch to another branch. I don't want to push those files because I only use them locally.</p>

<p>I tried to run <code>git update-index --assume-unchanged orderfile</code> like stated <a href=""https://stackoverflow.com/a/1753078/995714"">here</a> but it gives</p>

<pre><code>fatal: Unable to mark file orderfile
</code></pre>

<p>More importantly even if I can manage to ignore the file, it'll be removed when I run <code>git clean -xdf</code></p>

<p>So how can I told git to not track the file and still leave it as-is when I run <code>git clean -xdf</code>?</p>
","1","995714","0","0"
"7326946","80559","2011-09-06 22:34:48","0","301","<xcode><git><core-data><gitignore>","Will adding .xcdatamodel/layout to the .gitignore cause problems?","<p>When using Core Data, Xcode seems to modify the <code>.xcdatamodel/layout</code> file every time I view the data model. I don't want to commit that change because I haven't done anything. Is it safe to add that file to the .gitignore?</p>
","0","80559","",""
"62779416","5056347","2020-07-07 16:05:15","0","1839","<django><git><gitignore>","Ignoring a folder inside static files using gitignore in a Django project","<p>I have a folder inside the <code>static</code> directory of an app in a Django project. Lets call this <code>special_folder</code>. It contains some static files that I do not want to commit to Git. The project directory looks something like this:</p>
<pre><code>myproject
|
+-- manage.py
|
+-- .gitignore
|
+-- myapp
    |
    +-- static
        |
        +-- special_folder
</code></pre>
<p>Now, if I want to ignore this folder for Git, do I need to add something like the following line to the <code>.gitignore</code> file:</p>
<pre><code>myapp/static/special_folder/
</code></pre>
<p>Is this the right approach? Or should I just add <code>special_folder/</code>? Thanks for any help.</p>
","0","5056347","",""
"44130983","645181","2017-05-23 09:32:40","2","434","<git><gitignore>","exclude only js files from gitignore","<p>I'm now working on a project and I am going to change the <code>.js</code> files of this project. I want to track my changes on this project and I want to have a git repository which have only the <code>.js</code> files.</p>

<p>this <code>.js</code> files can be in any folder in this project with any depth.</p>

<p>I try this in my <code>.gitignore</code> file but have no luck:</p>

<pre><code>/*
!/*.js
</code></pre>

<p>can you put me in a right direction?
thank you.</p>
","0","645181","",""
"25785777","138557","2014-09-11 11:04:01","0","61","<git><gitignore>","gitignore rule on files in a folder also ignoring the folder","<p>This might just be me misunderstanding the git docs but this seems unexpected to me.</p>

<p>I have added two folders relative to my GIT_WORK_TREE folder (the base folder for my app):</p>

<pre><code>public/javascripts/cached_files
public/stylesheets/cached_files
</code></pre>

<p>I want these folders to be in git, but i don't want the files in them to be in git, so i added these rules to <code>.gitignore</code>:</p>

<pre><code>public/javascripts/cached_files/*
public/stylesheets/cached_files/*
</code></pre>

<p>It seems to be ignoring the folders: if i do <code>git status</code> then it doesn't show me any new files.  I'd expect it to show the folders but not the contents.</p>

<p>Can anyone explain this?</p>

<p>thanks, Max</p>
","0","138557","",""
"25787733","1832951","2014-09-11 12:41:56","2","3296","<git><bitbucket><gitignore>","git push ignore cocoapods","<p>I have been developing an iOS application for a few months. Now, I want to push it on bitBucket. The problem is git push ignore all files related to cocoapods (e.g., project.xcworkspace Podfile, Podfile.lock, Pods, etc.)</p>

<p>Is there any way to push these files?</p>
","9","1832951","",""
"7615983","284981","2011-09-30 20:54:26","21","18186","<git><gitignore>","How to make .gitignore ignore compiled files with no extension?","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/5711120/gitignore-without-binary-files"">gitignore without binary files</a>  </p>
</blockquote>



<p>Edit: Dupe of <a href=""https://stackoverflow.com/questions/5711120/gitignore-without-binary-files"">gitignore without binary files</a></p>

<p>When you compile, say, a Haskell file, (<code>test.hs</code>), using <code>ghc --make test.hs</code>, the result is <code>test.hi</code> and <code>test</code>.  I only want to add and commit the source <code>test.hs</code>, while keeping <code>test.hi</code> and <code>test</code> out of the repository but in the same directory as the source file.  <code>test</code> is the problem, how do I specify to .gitignore to ignore a compiled file with no extension?</p>
","5","284981","0","0"
"44361183","3312266","2017-06-05 03:14:11","3","1295","<git><github><gitignore>",".gitignore not ignoring .cs.meta files","<p>All I want is for for git to ignore files that end in <code>.cs.meta</code>.<br>
My <code>.gitignore</code> file includes just this:</p>

<pre><code># ignore all .cs.meta files
*.cs.meta
</code></pre>

<p>How can ignore only files that end in <code>.cs.meta</code>?</p>
","2","3312266","0","0"
"63031512","13556321","2020-07-22 09:52:47","-2","370","<git><gitignore>","How to reset ignored file from git","<p>I have made some changes in ignored files, so I want to rollback it by pull it from remote repository.
How can I do it without reinstall repository?</p>
","5","13556321","",""
"25825933","2431884","2014-09-13 17:47:10","0","47","<git><push><gitignore><pull>","What is the right way of keeping files with same names but different content intact locally and on remote server during push and pull in git?","<p>I need to keep separate configuration.php files locally and on server.</p>

<p>The problem is
I've added the file to .gitignore and removed it from index using <code>git rm --cached configuration.php</code>
but then when I push it server, it deletes configuration.php from server.</p>

<p>I am not sure how <code>-assume-unchanged</code> works.</p>

<p>What would be the correct solution to this problem?</p>
","2","2431884","",""
"44627359","","2017-06-19 09:53:51","0","266","<git><github><gitlab><gitignore>","How ro restrict the binary file such as (exe, dll, pdf, docx) in gitlab?","<p>I do not want to make a large size of commit history in my repository. We know the <code>.exe</code> and other binary files have a large size. So I want to restrict those file while committing into the repository. I studied this <a href=""https://robinwinslow.uk/2013/06/11/dont-ever-commit-binary-files-to-git/"" rel=""nofollow noreferrer"">articles</a> but it has a way to delete the history but not what I want. I think this <a href=""https://stackoverflow.com/questions/20226132/is-there-a-git-hook-which-can-prevent-binary-check-ins"">question</a> is related to what I want but I do not know how to use.</p>
<p>I have nearly 300 gitlab repositories. How to restrict the binary file committing in each and every repository? Does anybody know how to achieve it by server side instead of changing something in each and every repository?</p>
<p>I heard about <code>.gitignore</code> the file which is used to ignore these kinda files. But it also needs to do the changes in each and every project I think so.</p>
","7","","",""
"7965431","398939","2011-11-01 10:56:28","7","3341","<git><gitignore>","Repo specific ignore files in git","<p>Is it possible to have repo specific .gitignore files? Eg:</p>

<p>[origin]
.gitignore:</p>

<ul>
<li>foo1.*</li>
<li>foo2.*</li>
</ul>

<p>[another] .gitignore:</p>

<ul>
<li>bar1.*</li>
<li>bar2.*</li>
</ul>

<p>The purpose behind this is that we deploy using git on to a managed cloud service and we'd like to keep dev files in version control but not push them to a repo.</p>
","3","398939","0","0"
"8006393","298406","2011-11-04 08:06:23","581","300468","<git><gitignore>","Force add despite the .gitignore file","<p>Is there a way to force <code>git</code> to add a file despite the <code>.gitignore</code> file?</p>
","4","298406","0","0"
"8010253","47633","2011-11-04 13:55:54","2","103","<git><gitignore>","excluding ignore from .gitignore file","<p>My <code>.gitignore</code> file is:</p>

<pre><code>precompiled

!deployments
</code></pre>

<p>I want to exclude the <code>./precompiled</code> directory, but not <code>./deployments/xxx.war/WEB-INF/application/precompiled</code>, more precisely I want to include EVERYTHING in ./deployments folder...</p>

<p>I tried with several combinations (<code>!./deployments/**/*</code>, <code>./precompiled/**/*</code>, etc.) with no luck.</p>

<p>How can I do this?</p>
","1","47633","",""
"44646719","2118405","2017-06-20 07:36:28","5","3165","<node.js><git><npm><package><gitignore>","Does package-lock.json need to be versioned in git?","<p>npm 5 &amp; nodejs 8 introduces a file named <strong>package-lock.json</strong>, I want to know if it is need to be versioned or be ignored in git</p>
","1","2118405","0","0"
"8021441","332913","2011-11-05 16:16:41","149","124401","<git><gitignore>","How to ignore all hidden directories/files recursively in a git repository?","<p>I'd like to have Git ignore all hidden files and directories. 
i.e. </p>

<ul>
<li><code>.aptitude</code></li>
<li><code>.ssh/</code></li>
<li><code>.bash_rc</code></li>
<li><code>config/.hidden</code></li>
</ul>

<p>Is there a simple rule to cover this without specifically adding each entry?</p>
","0","332913","0","0"
"63286793","4107501","2020-08-06 15:23:23","0","244","<node.js><reactjs><heroku><create-react-app><gitignore>","Heroku build ""failed to compile"" because of gitignore","<p>I am trying to deploy my app that was built using &quot;create-react-app&quot; to Heroku.</p>
<p>I followed all the steps.</p>
<p>When I try to push to Heroku, I get the following error:</p>
<pre><code>Failed to compile.
./src/services/api/securities/index.ts
Cannot find file './keys' in './src/services/api/securities'.
</code></pre>
<p>I know why this is.</p>
<p>The <code>'keys</code>' file is in my <code>.gitignore</code>. It contains sensitive API keys, so I want git to ignore it.</p>
<p>Here is the attempt to access the keys in the index.ts fike</p>
<pre><code>export * from './keys'
</code></pre>
<p>But it seems that Heroku can't build without it.</p>
<p>Please help.</p>
","1","4107501","",""
"8109410","344587","2011-11-13 03:35:28","7","2955","<gwt><gitignore><hgignore><svnignore>","GWT .hgignore / .gitignore entries","<p>What are the typical entries in your source control ignore files for a GWT App (developed in eclipse)?</p>
","0","344587","0","0"
"8112343","175399","2011-11-13 14:45:59","5","3912","<c#><.net><git><gitignore>","How to apply gitignore afterwards?","<p>I pushed my local repository to GitHub. In the process of committing my code, I forgot to create a <code>.gitignore</code> file. As a result, I have committed and subsequently pushed some folders and files that I didn't want on GitHub (or in my local repository, for that matter).</p>

<p>How can I apply <code>.gitignore</code> now, so that I can remove some undesired folders and files going forward?</p>
","0","175399","",""
"26142352","641345","2014-10-01 13:18:05","5","2977","<git><visual-studio><gitignore><web.config-transform>",".gitignore and web.release.config","<p>I'm trying to remove my web.release.config from my GIT repository, so I removed it from git with <code>git rm</code> and then added it to my .gitignore file.</p>

<p>But as soon as I copy again the file into the project, it gets added by Visual Studio to the pending changes.</p>

<p>This is the line in the gitignore file:</p>

<pre><code>Web.Release.config
</code></pre>

<p>But it gets added:</p>

<p><img src=""https://i.stack.imgur.com/bTE3R.png"" alt=""enter image description here""></p>

<p><img src=""https://i.stack.imgur.com/nYEKI.png"" alt=""enter image description here""></p>

<p>How can I successfully remove web.release.config from git?</p>
","2","641345","0","0"
"8156299","11236","2011-11-16 17:53:03","19","16425","<git><gitignore>","Why doesn't gitignore work in this case?","<p>I have two files I wish to ignore:</p>

<ul>
<li>.idea/workspace.xml</li>
<li>someapp/src/.idea/workspace.xml</li>
</ul>

<p>I thought adding this single rule to .gitignore will suffice:</p>

<pre><code>.idea/workspace.xml
</code></pre>

<p>But it only catches the top-level .idea/workspace.xml (git status shows someapp/src/.idea/workspace.xml as untracked).</p>

<p>I also tried <code>**/.idea/workspace.xml</code>, but this doesn't work at all. Help?</p>
","6","11236","0","0"
"63315363","8075864","2020-08-08 12:27:05","0","524","<git><gitignore>","My .gitignore file shows up as an untracked file when I do a git status. Is this normal?","<p>So I'm just learning git and initiated a repository. I created a .gitignore file to ignore certain files in my project. Now when I do a git status, although I don't see those other files as untracked files (as I used to before creating a .gitignore), the .gitignore itself shows up as an untracked file in red. Is this normal or am I doing something wrong? Is there a way to hide this? What happens if I do a git add . in the future, will this .gitignore file start getting tracked?</p>
<p>Any help appreciated.</p>
","0","8075864","",""
"8237645","714232","2011-11-23 05:17:23","89","44435","<c++><c><linux><git><gitignore>","How to Add Linux Executable Files to .gitignore?","<p>How do you add Linux executable files to <code>.gitignore</code> without giving them an explicit extension and without placing them in a specific or <code>/bin</code> directory? Most are named the same as the <code>C</code> file from which they were compiled without the <code>.c</code> extension.</p>
","2","714232","0","0"
"8589356","297087","2011-12-21 11:51:37","1","231","<ruby-on-rails><github><gitignore>","How do I remove or ignore .rb~ files from git repository?","<p>I want to remove/igonre/hide whichever is better  <code>.rb~</code> and <code>.#</code> files such as <code>.#admin.rb.1.2</code> from the git repository.</p>

<p>How I can do this?</p>

<p>Currently I am doing it in following way:</p>

<pre><code>  git rm -r  ""/app/models/.#admin.rb.1.2""
</code></pre>

<p>which removes the files one by one. Then I commit.</p>

<p>I also created a <code>.gitignore</code> file with the following values which I found for Rails:</p>

<pre><code>.bundle
db/*.sqlite3*
log/*.log
*.log
/tmp/
doc/
*.swp
*~
.project
.DS_Store 
</code></pre>

<p>But it is not ignoring the files which are already present in the directory.</p>

<p>Will this file ignore <code>.rb~</code> backup files?
What should I do so that it will remove all the files which match the expression written in <code>.gitignore</code> files?</p>
","1","297087","",""
"8609603","231957","2011-12-22 20:53:53","3","668","<ios><xcode><git><gitignore>","Developing an iphone app using git. Files that must not be shared?","<p>I'm developing iphone apps with a friends. We are sharing the code with git but we are facing some problems for instance when one add some new file (git add, git commit, git push) the other one can not see them in xcode and needs to copy them from filesystem.  </p>

<p>What are the file to share on top of the source code ?<br>
What are the file not to share (I'm thinking of files linked to xcodeproj, xcuserdata, ...) ? </p>
","1","231957","",""
"8634010","170013","2011-12-26 08:10:01","37","22489","<git><gitignore>","Issue with ignoring subdirectory in git","<p>I have a maven multi-modules project which has a depth of around 5 levels.<br>
I'm now moving to git and I see that a lot of the content of the <code>target</code> folder is captured by git as ""Unstaged Changes"".<br>
I've googled a lot and searched SO but couldn't find an answer as to how to get git to ignore the <strong>entire</strong> directory tree of the <code>target</code> folder.<br>
My <code>.gitignore</code>, which resides at the root of the project, looks like this:  </p>

<pre><code>.project  
.classpath
.settings/
target/
</code></pre>

<p>The strange thing is that the <code>.class</code> files, which reside somewhere under the <code>target</code> tree, do get ignored by the above definitions but files like <code>MANIFEST.MF</code>, <code>pom.properties</code> or my own application properties files which are located somewhere in the <code>target</code> directory tree are not ignored.<br>
I've read <a href=""https://stackoverflow.com/questions/991801/git-ignores-and-maven-targets"">Git Ignores and Maven targets</a> but that solution does not seem to work for me.<br>
I can also say that when I try to add <code>target/*</code> rule it doesn't change anything and when I replace <code>target/</code> with the <code>target/*</code> then the <code>.class</code> files appear as unstaged as well.<br>
I'd really appreciate some guidance as it seems very unlikely to me that the hordes of people using git and maven haven't already resolved similar issues. Thanks.</p>
","2","170013","0","0"
"8650871","225643","2011-12-28 01:10:42","78","71432","<git><symlink><gitignore>","Telling git to ignore symlinks","<p>This question has appeared in similar forms <a href=""https://stackoverflow.com/questions/5917249/git-symlinks-in-windows"">here</a> and <a href=""https://stackoverflow.com/questions/5190170/ignoring-symlinks-in-git"">here</a>, but they don't seem to match up with what I'm looking for.</p>

<p>I'm making a project in StaticMatic, a Ruby static site generator. Basically, it's just a src/  directory with Haml templates, Sass, and CoffeeScript. StaticMatic provides a development server to keep compiling these into a static site, as well as a build command that generates the static site in build/.</p>

<p>My modification to StaticMatic is to allow the addition of src/_modules/foo/, which might contain src/_modules/foo/bar.haml. When running the server or building the site, a symlink would be created at src/bar.haml which points to the file in foo/.</p>

<p>So far so good. (Conflicts are handled, etc.)</p>

<p>The reasoning behind separate directories in _modules/ is that they could be tracked as git submodules and checked out independently by other teams. Essentially, this allows multiple teams to work on different pages (actually JS apps) in one static site without duplicating the main layout and such.</p>

<p>The hitch is that git wants to think of these symlinks as files. For instance, <code>git status</code> shows:</p>

<pre><code># On branch master
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be commited)
#
#       src/_modules/bar/foo.haml
#       src/foo.haml
</code></pre>

<p>...when I really just want it to show <code>src/_modules/bar/foo.haml</code> and to ignore <code>src/foo.haml</code></p>

<p>One approach would be to have my link-generating code append the links to .gitignore, but messing with .gitignore programmatically strikes me as prone to error. (Perhaps this concern isn't reasonable?)</p>

<p>My ideal fix would be something like:</p>

<pre><code>[filetype = link]
</code></pre>

<p>...in .gitignore. As far as I know nothing like this is possible, or is it?</p>
","4","225643","0","0"
"8678325","247243","2011-12-30 10:06:45","0","117","<git><gitignore>","How to ignore files ended with ~ in git?","<p>My <code>.gitignore</code> file looks like that:</p>

<pre><code>&gt; cat .gitignore
.bundle
db/*.sqlite3
log/*.log
tmp/**/*
*~
</code></pre>

<p>But, git doesn't ignore the files ended with <code>~</code>:</p>

<pre><code>&gt; git status
# On branch master
# Changes not staged for commit:
#   (use ""git add &lt;file&gt;..."" to update what will be committed)
#   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
#
#   modified:   app/views/jobs/_form.html.erb
#   modified:   app/views/jobs/_form.html.erb~
#   modified:   public/stylesheets/jobs_new_edit.css~
</code></pre>

<p>What could be th ereason for that?</p>
","1","247243","",""
"36314990","1151334","2016-03-30 16:48:20","1","1254","<git><github><gitignore><google-maps-sdk-ios>","How to ignore a directory in git","<p>So the latest version of the GoogleMaps framework is 123MB, which causes all kinds of problems with GitHub's 100MB limit. I tried <a href=""https://git-lfs.github.com"" rel=""nofollow"">Large File Storage</a>, but that doesn't work. So now I'm trying to ignore my Pods directory. I edited my .gitignore file to look like this:</p>

<pre><code># Xcode
.DS_Store
build/
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3
*.xcworkspace
!default.xcworkspace
xcuserdata
profile
*.moved-aside
DerivedData
.idea/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
Pods/
</code></pre>

<p>But when I try to push, I still get the same file-too-large error from the GoogleMaps Pod. What am I missing?</p>

<p>EDIT: Here's the exact error for those that don't believe it:</p>

<pre><code>File Pods/GoogleMaps/Frameworks/GoogleMaps.framework/Versions/A/GoogleMaps is 123.00 MB; this exceeds GitHub's file size limit of 100.00 MB
</code></pre>
","6","1151334","",""
"26253417","3923825","2014-10-08 09:23:33","0","56","<git><github><gitignore>","files which are supposed to be ignore are still getting published after pushing them (.gitignore doesn't work)","<p>I tried the following steps: <a href=""http://blog.jonathanchannon.com/2012/11/18/gitignore-not-working-fixed/"" rel=""nofollow"">http://blog.jonathanchannon.com/2012/11/18/gitignore-not-working-fixed/</a></p>

<pre><code>git rm -r --cached .
git add .
git commit -m "".gitignore is now working""
</code></pre>

<p>but I just end up, after pushing it, with the files .gitignore was supposed to ignore.</p>
","0","3923825","",""
"8476376","1082041","2011-12-12 15:08:02","117","51995","<java><android><eclipse><git><gitignore>","Typical .gitignore file for an Android app","<p>Just put an Android project under git (<em>beanstalk</em>) version control via the command line (<em>mac terminal</em>). Next step is to set up exclusions.</p>

<p>To those of you who have already been down this path:</p>

<p><strong>What should a typical .gitignore file look like for an android project?</strong></p>

<p><em>Project set up in Eclipse</em></p>
","0","1082041","0","0"
"63364421","423125","2020-08-11 18:39:21","1","122","<git><branch><gitignore><branching-and-merging>",".gitignore per branch (easy), ignoring opposite folders, WITHOUT deleting them when switching branches (not so easy)","<h2>Problem</h2>
<p>I would like to have one 'wwwroot' repo for my iis server, with different branches tracking different 'sites', specifically a production site (wwwroot/prod), a dev site (wwwroot/dev) and perhaps some other sites (wwwroot/other).</p>
<p>I assumed it would be trivial to simply have each branch track only it's respective folder, ignoring the other subfolders.  This &quot;works&quot;, <strong>except</strong> switching between branches <strong>deletes</strong> the <em>other</em> branches.</p>
<p>I've tried simple .gitignores that ignore the other directories by name, and more complex .gitignores that ignore <em>everything but</em> the respective directory.</p>
<p>I'm not worried about .gitignore file merge conflicts if/when I decide to merge branches.</p>
<p>I imagine I could use the solution posed elsewhere on SO using different excludes and updating the symlink on branch change, but I don't think that's ideal for long-term/anyone who replaces me.  Surely I'm just using .gitignore wrong?</p>
<hr />
<h2>Example</h2>
<pre><code>wwwroot/prod   (tracked by prod branch, ignores dev and other)
wwwroot/dev    (tracked by dev branch, ignores prod and other)
wwwroot/other  (tracked by other branch, ignores prod and dev)
</code></pre>
<p>but for example, after setting up the gitignores, changing to a different branch causes the other (previously checked out) branch to be removed from wwwroot working directory (and thus the web pages are no longer accessible)</p>
","2","423125","0","0"
"52402063","7998119","2018-09-19 09:03:56","1","1372","<markdown><syntax-highlighting><gitignore><readme><github-linguist>","How can I highlight .gitignore code for my README.md?","<p>I wrote a README.md with parts of code and I want to highlight those parts with the right colors.</p>

<p>One of this code is a <strong>.gitignore code</strong>, that I would like to integrate to my <strong>README.md</strong>. But I can't have the good linguist highlight for this, which colorize in green my comments for example.</p>

<p>I have searched some languages detected by GFM but I am not satisfied by the results.</p>

<p>Can someone help me to find the good linguist ?</p>

<p>P.S. : I also want to question for a DockerFile, docker-compose in a REAMDE code highlight.</p>

<p>Thanks,
MushuLeDragon</p>
","1","7998119","",""
"36350085","3494192","2016-04-01 07:08:35","1","67","<git><gitignore><automatic-updates>","automatic pull from git without a certain folder","<p>I was wondering if there is a way to automatic pull from git without overwriting files in a certain folder, I already discovered a way to automatic pull and overwrite local data but we also have log files/player logs which must be excluded from the pull.</p>

<p>Is there anyway to do this through gitignore? (I am still new to git and tried to exclude the folder and including files without success so far)</p>

<p>Thanks in advance!</p>
","6","3494192","",""
"52404771","8413016","2018-09-19 11:24:35","2","930","<git><gitignore>","How to ignore .gitignore when using git worktree?","<p>I'm using <code>git worktree</code> to work with my branches.</p>

<p>For example:</p>

<pre><code>git worktree add -b Foo ../Foo origin/master
</code></pre>

<p>It creates a new folder, new branch, and new worktree, as expected. However, there is no <code>node_modules/</code> in the new folder.</p>

<p>My <code>.gitignore</code> contains <code>node_modules</code>.</p>

<p>Is it nice way to create a complete folder?</p>

<p>I can create a perfect folder using a shell script (like <code>cp xxx xxx</code>), but I want to create perfect folder using <code>git worktree</code>.</p>
","0","8413016","",""
"36372446","4494547","2016-04-02 11:07:08","4","2291","<grails><gitignore><grails-3.1>","what should be the best gitignore for grails3.1.x?","<p>Since grails 3.1.x has major changes, what would be appropriate .gitignore? </p>

<p>For now, I've used default grails <a href=""https://github.com/github/gitignore/blob/master/Grails.gitignore"" rel=""nofollow"">.gitignore</a></p>
","0","4494547","",""
"52430884","4255788","2018-09-20 18:08:12","0","301","<git><reactjs><react-native><native><gitignore>","Using mutliple .gitignore files (working with React Native)","<p>I have a project which looks like this:</p>

<pre><code>docs
rnsrc
src
</code></pre>

<p>Inside docs are word docs, pptx, etc. Inside rnsrc is a React Native project and inside src is a client for it (Python.) I would like to have this full directory under Git version control, which I can achieve, but React Native supplies a .gitignore with projects and I cannot get Git to acknowledge it. React Native .gitignore looks like this:</p>

<pre><code># Xcode
  !**/*.xcodeproj
  !**/*.pbxproj
  !**/*.xcworkspacedata
  !**/*.xcsettings
  !**/*.xcscheme
  *.pbxuser
  !default.pbxuser
  *.mode1v3
  !default.mode1v3
  *.mode2v3
  !default.mode2v3
  *.perspectivev3
  !default.perspectivev3
  xcuserdata
  *.xccheckout
  *.moved-aside
  DerivedData
  *.hmap
  *.ipa
  *.xcuserstate
  project.xcworkspace

  # Gradle
  /build/
  /RNTester/android/app/build/
  /RNTester/android/app/gradle/
  /RNTester/android/app/gradlew
  /RNTester/android/app/gradlew.bat
  /ReactAndroid/build/

  # Buck
  .buckd
  buck-out
  /ReactAndroid/src/main/jni/prebuilt/lib/armeabi-v7a/
  /ReactAndroid/src/main/jni/prebuilt/lib/x86/
  /ReactAndroid/src/main/gen

  # Watchman
  .watchmanconfig

  # Android
  .idea
  .gradle
  local.properties
  *.iml
  /android/

  # Node
  node_modules
  *.log
  .nvm
  /bots/node_modules/
  package-lock.json

  # OS X
  .DS_Store

  # Test generated files
  /ReactAndroid/src/androidTest/assets/AndroidTestBundle.js
  *.js.meta

  /coverage
  /third-party

  # Root dir shouldn't have Xcode project
  /*.xcodeproj

  # ReactCommon subdir shouldn't have Xcode project
  /ReactCommon/**/*.xcodeproj
  RNTester/build
</code></pre>

<p>I have tried moving this one level up (into the directory I described at the beginning) and appending:</p>

<pre><code># Docs
docs
</code></pre>

<p>But it doesn't work, ""docs"" and the entirety of rnsrc is added to the repository. I'm still finding my way around Git and would appreciate some guidance!</p>
","0","4255788","",""
"52436713","371350","2018-09-21 04:41:28","2","1242","<git><gitignore>","How to make .gitignore ignore files?","<p>I have a .gitignore file with the following contents:</p>

<pre><code>.vs/
</code></pre>

<p>I run the following commands</p>

<pre><code>git add .gitignore
git commit -m 'adding ignore file'
</code></pre>

<p>In my .vs folder, I have a text file named test.txt.</p>

<p>When I type <code>git status</code>, I see the following output</p>

<pre><code>On branch master
Untracked files:
  (use ""git add &lt;file&gt;..."" to include in what will be committed)

        .vs/

nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p>What am I missing here?</p>
","1","371350","0","0"
"26310078","509856","2014-10-11 01:17:52","0","2962","<git><bitbucket><gitignore>","bitbucket .gitignore .DS_Store ignores enclosing directories as well","<p>Bitbucket .gitignore with DS_Store ignores enclosing directories as well, and all the other files in that directory. 
Let's say I have .DS_Store in my .gitignore. 
I change  and add file to a directory. 
Since .DS_Store file was created, the entire dir and other files are ignored.
I want to commit my other changes, but bitbucket is ignoring them!</p>

<p>How to configure this so .DS_Store files stay out of my bitbucket?</p>
","3","509856","",""
"52442439","10396356","2018-09-21 11:08:52","-1","53","<git><github><gitignore>","GIT is ignoring .gitignore","<p>So i'm in a bit of a trouble here.</p>

<p>This is my .gitignore:</p>

<pre><code> www/*
!www/wp-content/themes/bridge-child*
*.DS_Store
</code></pre>

<p>So what it should do is to ignore all the files inside www and .ds_store except the items inside bridge-child.</p>

<p>Here is my folder tree:</p>

<pre><code>MASTER (Where the .git ignore is)
|
sub - main (My two folders)
</code></pre>

<p>Can somebody tell me what i'm doing wrong here? 
Kind regards</p>
","2","10396356","0","0"
"26327673","","2014-10-12 17:00:32","35","12521","<git><gitignore>",".gitignore is ignoring other directories with the same name","<p>I have a problem in my .gitignore. 
I want it to just ignore the 'vendor/' directory, but it is ignoring all directories with that name.</p>

<p>Below is my .gitignore: </p>

<pre><code>.idea/ 
bin/ 
vendor/ 
composer.lock 
composer.phar 
</code></pre>

<p>Below is the result of my 'git status': </p>

<pre><code>Changes not staged for commit: 
   (use ""git add &lt;file&gt; ..."" to update what will be submitted) 
   (use ""git checkout - &lt;file&gt; ..."" to discard changes in working directory) 

modified: .gitignore 

Not monitored files: 
   (use ""git add &lt;file&gt; ..."" to include what will be submitted) 

src/vendor/ 
tests/src/ 
vendor/ 
</code></pre>

<p>It is also ignoring 'src/vendor', I do not want that to happen, I want it to ignore 'vendor/'</p>
","0","","0","0"
"52457084","2287557","2018-09-22 13:25:11","-1","1278","<node.js><git><github><path><gitignore>","How to use .gitignore","<p>I want to exclude <code>node_modules</code> directory except for one file.</p>

<p>This is what the relevant part of my <code>.gitignore</code> looks like - I have tried a few things but no luck:</p>

<p>.gitignore</p>

<pre><code>....

# node.js
#
node_modules/
npm-debug.log
yarn-error.log

....
</code></pre>

<p>I think I need to do something like:</p>

<pre><code>node_modules/
!node_modules/path/to/index.js
</code></pre>

<p>But it says <a href=""https://www.atlassian.com/git/tutorials/saving-changes/gitignore#git-ignore-patterns"" rel=""nofollow noreferrer"">here</a> that the above won't work due to some <code>git</code> restriction. Anyway, the answer is probably in that link, I'm just having a little trouble figuring it out.</p>
","2","2287557","",""
"44837071","8183829","2017-06-30 00:55:23","2","1400","<swift><xcode><git><opencv><gitignore>","gitignore not ignoring opencv2.framework","<p>I am trying to make git ignore the opencv2.framework I have imported into my project. However, even though I am adding opencv2.framework into my .gitignore, every time I run git status on my terminal, all the opencv2.framework files are showing up as new files. Could anybody help? Thanks! This is what my .gitignore file looks like: (I wrote opencv2.framework under ##Various Settings)</p>

<pre><code># Xcode
#
# gitignore contributors: remember to update Global/Xcode.gitignore, Objective-C.gitignore &amp; Swift.gitignore

## Build generated
build/
DerivedData/

## Various settings
*.pbxuser
!default.pbxuser
*.mode1v3
!default.mode1v3
*.mode2v3
!default.mode2v3
*.perspectivev3
!default.perspectivev3
xcuserdata/
opencv2.framework/

## Other
*.moved-aside
*.xccheckout
*.xcscmblueprint

## Obj-C/Swift specific
*.hmap
*.ipa
*.dSYM.zip
*.dSYM

## Playgrounds
timeline.xctimeline
playground.xcworkspace

# Swift Package Manager
#
# Add this line if you want to avoid checking in source code from Swift Package Manager dependencies.
# Packages/
# Package.pins
.build/

# CocoaPods
#
# We recommend against adding the Pods directory to your .gitignore. However
# you should judge for yourself, the pros and cons are mentioned at:
# https://guides.cocoapods.org/using/using-cocoapods.html#should-i-check-the-pods-directory-into-source-control
#
# Pods/

# Carthage
#
# Add this line if you want to avoid checking in source code from Carthage dependencies.
# Carthage/Checkouts

Carthage/Build

# fastlane
#
# It is recommended to not store the screenshots in the git repo. Instead, use fastlane to re-generate the
# screenshots whenever they are needed.
# For more information about the recommended setup visit:
# https://docs.fastlane.tools/best-practices/source-control/#source-control

fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots
fastlane/test_output
</code></pre>
","2","8183829","0","0"
"26908151","267013","2014-11-13 11:44:17","19","16109","<git><gitignore>","A way to validate .gitignore file","<p>Is there a way to validate a .gitignore file so you quickly find doubles paths or paths that don't exist anymore? Normally when a project is small this isn't really necessary but with lots of branches and mergings of .gitignore files this can come in hand.</p>
","0","267013","0","0"
"26918333","343204","2014-11-13 21:02:09","1","1265","<gitignore><git-status>","git and xcode - untracked files","<p>I started work on a new project and found I had the following when I launched Xcode:</p>

<pre><code>Changes not staged for commit:

modified: &lt;project&gt;.xccheckout
</code></pre>

<p>and </p>

<pre><code>Untracked files: 

&lt;project&gt;/xcshareddata/
</code></pre>

<p>I then edited <code>.gitignore</code> to ignore <code>.xccheckout</code> and checked the status. It now read as follows:</p>

<pre><code>Changes not staged for commit:

modified: .gitignore
modified: &lt;project&gt;.xccheckout
</code></pre>

<p>i.e. the Untracked files mentioned previously were no longer being output by git. I've tried this several times and it's completely reproducible - but completely inexplicable.</p>
","0","343204","0","0"
"45967213","8539559","2017-08-30 18:15:10","1","1485","<git><github><gitignore>","What should be included in a git repo?","<p>I'm new to programming and working with git and github. I want to make sure my repo only has the necessary files in it, and since I work in virtual environments, each environment has folders that were created when the environment was activated (<code>__pycache__</code>, <code>.vscode</code>, <code>Include</code>, <code>Lib</code>, <code>Scripts</code>, <code>tcl</code> etc). Am I correct to assume that these are of no use to anyone in the repo and can be added to the <code>.gitignore</code>?</p>
","1","8539559","",""
"27847676","4350881","2015-01-08 19:05:04","2","2647","<git><gitignore><atlassian-sourcetree><git-stage>","Git (SourceTree): gitignore already tracked files without deleting from online repository","<p>There are numerous questions about this argument BUT none of them was useful in my case.</p>

<p>I've pushed my local project to a bitbucket repository, including a config.php file.
Now I've changed my local copy of the config.php file and I need to keep it different from the bitbucket copy.</p>

<p>I updated my gitignore file but it didn't help because the config.php file was already tracked.</p>

<p>So:<p> I need to ignore the local config.php file <strong>BUT I DO NOT WANT TO DELETE</strong> the bitbucket config.php file.</p>
Command line solutions are of course welcomed.</p>

<hr>

<p>P.s. Sub-question:</p>

<p>In SourceTree if you (right click)""stop tracking"" an unstaged file, the software stages the remote deletion of that file. But if then you right click on the staged deletion record (before any commit/push), there are 2 choices: ""Stop Tracking"" and ""Unstage from index"". What is the meaning of those 2 options? Why allow to ""stop tracking"" for 2 times?</p>
","0","4350881","0","0"
"36514530","3475946","2016-04-09 08:31:13","2","84","<git><gitignore>","Why does a learning exercise warn that git commit -am is insufficient to add my new .gitignore to the repository even though git clearly added it?","<p>I am studying git and have come to <a href=""https://www.learnenough.com/git-tutorial#sec-exercises_ignoring_files"" rel=""nofollow"">this exercise</a>:</p>

<blockquote>
  <p>Commit the <code>.gitignore</code> file to your repository. Hint: Running <code>git commit -am</code> isn’t enough. Why not?</p>
</blockquote>

<p>I have done <code>git commit -am</code> and that seems to be enough.</p>

<pre><code>michael@michael:~/repos/website$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes not staged for commit:
  (use ""git add/rm &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

    deleted:    breaching_whale.jpg

Untracked files:
  (use ""git add &lt;file&gt;..."" to include in what will be committed)

    .gitignore

no changes added to commit (use ""git add"" and/or ""git commit -a"")
michael@michael:~/repos/website$ git add .
michael@michael:~/repos/website$ ls
images  index.html  README.md
michael@michael:~/repos/website$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes to be committed:
  (use ""git reset HEAD &lt;file&gt;..."" to unstage)

    new file:   .gitignore
    deleted:    breaching_whale.jpg

michael@michael:~/repos/website$ git commit -am ""Add gitignore""
[master e7cc08c] Add gitignore
 2 files changed, 1 insertion(+)
 create mode 100644 .gitignore
 delete mode 100644 breaching_whale.jpg
michael@michael:~/repos/website$ git status
On branch master
Your branch is ahead of 'origin/master' by 1 commit.
  (use ""git push"" to publish your local commits)
nothing to commit, working directory clean
</code></pre>

<p>Could you speculate on what I did incorrectly and help me understand what is meant in the tutorial and why <code>git commit -am</code> is not enough?</p>
","0","3475946","",""
"69844000","12843923","2021-11-04 18:17:24","0","768","<git><gitignore>",".gitignore doesn't ignore specific file","<p>I have this in my root folder of my repo as .gitignore.
However, the file at the end is not ignored.</p>
<pre><code>/*.*
wp-content/*
wp-admin/*
wp-includes/*
cgi-bin/*
well-known/*


# Files to not ignore
!/.gitignore

# Unignore theme folder
!wp-content/themes
!wp-content/themes/*

# Unignore plugins folder, but ignore all content
!wp-content/plugins
wp-content/plugins/*

# Unignore only cmpz folders
!wp-content/plugins/cmpz-*

wp-content/plugins/cmpz-product-feed/xml/google-shopping/feed-roof-tents.xml
</code></pre>
<p>Is there a problem that plugin folders starting with &quot;cmpz-&quot; are not ignored? However, how could I ignore files in subdirectories?</p>
","0","12843923","",""
"27850222","3700651","2015-01-08 21:56:42","235","109210","<git><gitignore>","What is .gitignore?","<p>I just created a Github repository and was wondering what the <code>.gitignore</code> file was for. I started by not creating one, but added one due to the fact that most repositories have one.
Do I need to have one? Can/do I just ignore it, or does it have a use?</p>
","0","3700651","0","0"
"63951265","14099912","2020-09-18 07:39:00","1","576","<git><gitignore>","path to .gitignore file","<p>I have a repo structure like this.</p>
<p><code>Courses/course name/week/question/code scripts</code></p>
<p>Courses is the folder where I initialized the git repo in the beginning.
What I need to know is what path should I give to the <code>.gitignore</code> file to make sure that the <code>.exe</code> files at the following locations are ignored.</p>
<p><code>Courses/DSA Specialization/Course1/Week1/Problem1/abc.exe</code></p>
<p><code>Courses/DSA Specialization/Course1/Week1/Problem2/abcd.exe</code></p>
<p><code>Courses/DSA Specialization/Course1/Week2/Problem1/abce.exe</code></p>
<p>and so on.....</p>
<p>I tried adding</p>
<p><code>*.exe</code></p>
<p><code>**/**/**/**/*.exe</code></p>
<p><code>Courses/DSA Specialization/Course1/**/**/*.exe</code></p>
<p>but it didn't work.</p>
","0","14099912","",""
"52601194","10119710","2018-10-02 02:21:40","0","1396","<git><jenkins><gitignore>","How to configure Jenkins pass over git ignore files?","<p>I am deploying jenkins with Git.</p>

<p>Almost process are fine, but can't build if project has .gitIgnore file.</p>

<p>Maven compiler can't recognize files that described on git ignore file.</p>

<p>But I need git ignore files because I should hide DB connection info and My authentication info on GitHub.</p>

<p>How can I config that?</p>
","5","10119710","",""
"52610350","7827654","2018-10-02 14:20:17","0","105","<git><gitignore>","Ignore changes in tracked files in git repository","<p>Perhaps a duplicate, but haven't found an answer to this question.</p>

<p>We have a repository, and the repository contains some tracked files, for example, the "".gitignore"" file, as well as ""conf"" folder.</p>

<p>I want to exclude tracking this file and folder because it contains changes that will only work on my machine, and where I don't want to disrupt the settings of others by committing my changes to these config files.</p>

<p>Adding this file and folder in "".gitignore"" doesn't help since it still being tracked.</p>

<p>How can I avoid tracking these changes in these files?</p>
","5","7827654","0","0"
"36599397","1368570","2016-04-13 13:07:44","1","89","<git><gitignore>","Anti .gitignore - for files which will be in GIT, but not in actual directory. How?","<p>I have several .htaccess files for server project version, but delete them for local project version, because I don't need this protection locally and don't want to setup correct paths to keys files to make them work.</p>

<p>Is it possible to keep .htaccess files in GIT, but don't keep them in working directory?
Something like anti-.gitignore approach.</p>
","3","1368570","0","0"
"52644973","10456097","2018-10-04 10:54:39","4","5167","<python><git><pycharm><gitignore>","Why does .gitignore does not work in Pycharm? It still track the change in the file under ./idea","<p>I have set up the project interpreter in Pycharm for a my team project. I have cloned it from Git. We have listed the file under .idea folder in the .gitignore. But everytime I set the project interpreter, Pycharm track these file as the changed file. Here is our gitignore</p>

<pre><code>*.pyc
doc/.*
partner/.*
.settings/
doc
tests/test.py
tests/format_db.py
nohup.out
crawler/uber.py
.idea/*
.vscode/*
broadcast.log
last_commit.txt
</code></pre>
","1","10456097","",""
"37450776","4764202","2016-05-26 02:55:18","1","56","<git><gitignore>","After removing a line from my .gitignore file, git still ignores the files","<p>I inherited a git repo that had <code>*.dll</code> in the gitignore file, however I now need to add dll files to the repo.  After having removed the <code>*.dll</code> line from the .gitignore file, running <code>git add name.dll</code> in order to add it to the git repo I get </p>

<pre><code>The following paths are ignored by one of your .gitignore files:
escomm.dll
Use -f if you really want to add them.
</code></pre>

<p>also running <code>git status</code> does not show any of the dll's that are in the project</p>

<p>Is this expected behavior, if so why? Is there anyway to make git show when a new *.dll file has been added using git status? And not require the <code>-f</code> option to add it?</p>
","5","4764202","0","0"
"53510349","4741620","2018-11-28 00:31:20","3","2503","<git><gitignore>",".gitignore not ignoring .rubocop.yml file","<p>I have just added .rubocop.yml file to my project and added it to <code>.gitignore</code> file but when I do <code>git status</code> it appears as modified. I have never added this file to my repository. Why is <code>.gitignore</code> not ignoring this file?</p>
<h3>project</h3>
<p>app/
config/
.rubocop.yml</p>
<h3>.gitignore</h3>
<p>.rubocop.yml</p>
<p>Other files are ignored fine, for example, I also tried adding <code>tags</code> file to the root of the project and adding it to .gitignore and it works.</p>
<p>Why is <code>.gitignore</code> not ignoring <code>.rubocop.yml</code> file?</p>
","3","4741620","0","0"
"53515085","5574096","2018-11-28 08:27:19","2","1034","<git><version-control><gitignore><gitkraken>","Gitkraken doesn't understand gitignore","<p>I have generated a Laravel project with all the .gitignore files.<br>
I put some images in the <code>storage\app\public</code> folder which I don't want to push.<br>
Gitkraken offers the option to stage this files, but they are in the .gitignore like this:  </p>

<pre><code>*
!public/
!.gitignore
</code></pre>

<p>(This is in the <code>storage\app\public</code> folder)</p>

<p><code>VSCode</code> sees this, and doesn't offer the option to stage which is fine, but Gitkraken does.<br>
If I right click on the folder and select <code>Ignore all files in \storage</code> is not an option because that way adds a new line to my top-level gitignore file for ignoring the <code>\storage</code> folder which I don't want.</p>
","2","5574096","0","0"
"53531624","5117474","2018-11-29 03:57:16","2","1292","<git><gitignore><ignore>","Why is .gitignore not working when I use git add *?","<p>To satisfy github 100Mb requirement, I run the following to ignore some large files:</p>

<pre><code>$ find ./* -size +100M | cat &gt;&gt; .gitignore
</code></pre>

<p>but when I run add * later, it is still adding the >100MB file to commit. </p>

<pre><code>$ git add *
warning: LF will be replaced by CRLF in hw1/input/act_test.csv.
The file will have its original line endings in your working directory
</code></pre>

<p>How can I make this gitignore work?
Thanks in advance for ideas and advices.</p>

<p>add:
my intent is to make <code>add *</code> not track the large csv file any more, following answer does not seem to work.</p>
","5","5117474","",""
"37479924","5133585","2016-05-27 09:33:00","2","7192","<ios><git><gitignore><privacy>","What files/folders should I ignore in a git repository of an iOS app?","<p>I have found questions about what to ignore in an Android app and questions regarding ignoring of cocoapods. However, I am asking about an iOS project generally.</p>

<p>I have an iOS app that displays ads provided by AdMob and uses Firebase to see the analytics of my app. And it uses a few cocoapods.</p>

<p>From one of my previous questions, I learnt that my ad unit id is a private thing. Therefore, I put my ad unit id in a separate file and ignored it:</p>

<pre><code>// Secret Stuff.swift
let adUnitId = ""dianfkebsfiubugb""
</code></pre>

<p>I think this way people will never know my ad unit ID.</p>

<p>But what about other stuff? Do the files generated by cocoapods contain some of my private information? Does info.plist file contain my private stuff as well? Also, when I was putting Firebase into my app, I downloaded a GoogleService-Info.plist. Should I ignore it as well? What things should I ignore?</p>

<p><strong>Private information includes</strong></p>

<ul>
<li>My email</li>
<li>Home address</li>
<li>My phone number</li>
<li>Ad Unit ID</li>
<li>My passwords</li>
<li>Other things that, when disclosed, will cause adverse effect on my life, such as a loss of money/income or being in danger. For example, if I disclose my Ad Unit ID, people will spam ads and my account will be banned.</li>
</ul>

<p><strong>Private Information does not include</strong>:</p>

<ul>
<li>My real name</li>
<li>My age</li>
</ul>
","1","5133585","",""
"53544968","8024296","2018-11-29 17:56:20","0","901","<android><react-native><gradle><gitignore>","React native creation of an android module .gitignore file","<p>React-native creation of an android module <code>.gitignore</code> file</p>

<p>I'm creating a module that will then be on npm, the question is how should I set the gitignore file for android?</p>

<p>Must it be placed in the root folder or in the <code>/android</code> folder?</p>

<p>Looking on the internet I found something like this:</p>

<pre><code># Android/IntelliJ
#
build/
.idea
.gradle
local.properties
*.iml
</code></pre>

<p>it's correct? Where should I put it to correctly insert it to work?</p>

<p>1) In the <code>/Android</code> folder, I have the following dir and files, which can I delete?</p>

<pre><code>.idea
gradle/wrapper
build.gradle
gradle.properties
gradlew
gradlew.bat
settings.gradle
</code></pre>

<p>Which are useful for the project and which are not?
The <code>.gitignore</code> I have to put it here?</p>

<p>2) In the <code>/android/app</code> folder, I have the following files, which ones can I delete?</p>

<pre><code>build.gradle
proguard-rules.pro
</code></pre>

<p>Example the: /android/build.gradle file</p>

<pre><code>// Top-level build file where you can add configuration options common to all sub-projects/modules.

buildscript {
    repositories {
        jcenter()
        google()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.0'

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        jcenter()
        google()
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
</code></pre>

<p>Do you need something?</p>
","0","8024296","0","0"
"70231821","1498830","2021-12-05 05:53:16","1","394","<eclipse><gitignore><egit>","How can I prevent eclipse from randomly adding .gitignore files everywhere?","<p>eclipse keeps adding .gitignore files to my project that contain the following random list of files:</p>
<pre><code>Thumbs.db
.DS_Store
.gradle
build/
out/
.idea
*.iml
*.ipr
*.iws
.project
.settings
.classpath
/bin/
</code></pre>
<p>I know which files I want to keep out of source control. I don't need my IDE to try to second guess me.</p>
<p>Where is the configuration option in eclipse that prevents it from creating .gitignore files.</p>
","0","1498830","0","0"
"70236595","558639","2021-12-05 17:07:29","0","166","<gitignore>","gitignore pattern with leading double asterisk (without whitelisting)","<p>I have the following entry in my .gitignore file (and note that there are no whitelisted entries in my .gitignore):</p>
<pre><code>**.X/.generated_files/
</code></pre>
<p>... but this filename (and hundreds of other) are not ignored as I would expect:</p>
<pre><code>MPLAB/demo_a/firmware/my_project.X/.generated_files/flags/my_project/298af8995f15611bb06320c3cd979f12c9e52659
</code></pre>
<p>What am I missing?</p>
<p>(Update: I've also tried <code>**.X/.generated_files</code> and <code>**.X/.generated_files/*</code>, but no joy...)</p>
","0","558639","",""
"53579232","5964853","2018-12-02 10:06:25","0","3003","<git><shell><gitignore><ls>","Cannot view .gitignore file in Mac","<p>I cannot view the .gitignore file in Mac via ls. But vi is able to open it and edit. Cannot add the file to  git and it’s not working either. Has anyone faced this issue before?</p>
","2","5964853","0","0"
"37517659","945871","2016-05-30 04:32:14","1","75","<xcode><github><gitignore>","github with mac osx/xcode","<p>ALL,</p>

<p>I am not really familiar with Xcode and how it manages its files, so I need some help from you.</p>

<p>I created an Xcode project with some libraries and it was compiling. Now I'm trying to push the changes to the existing GitHub repository.</p>

<p>What I did:</p>

<pre><code>git init
git add origin
git branch --set-upstream-to=origin/master master
Igors-MacBook-Air:dbhandler igorkorot$ git pull
error: The following untracked working tree files would be overwritten by merge:
    dbhandler/Info.plist
    dbhandler/Info.plist.in
    dbhandler/Makefile.in
    dbhandler/UpgradeLog.XML
    dbhandler/_UpgradeReport_Files/UpgradeReport.css
    dbhandler/_UpgradeReport_Files/UpgradeReport.xslt
    dbhandler/_UpgradeReport_Files/UpgradeReport_Minus.gif
    dbhandler/_UpgradeReport_Files/UpgradeReport_Plus.gif
    dbhandler/chart.icns
    dbhandler/chart.ico
    dbhandler/chart.r
    dbhandler/chart.xpm
    dbhandler/descrip.mms
    dbhandler/doc.cpp
    dbhandler/doc.h
    dbhandler/doc.icns
    dbhandler/doc.ico
    dbhandler/doc.r
    dbhandler/doc.xpm
    dbhandler/docview.bkl
    dbhandler/docview.cpp
    dbhandler/docview.h
    dbhandler/docview.r
    dbhandler/docview.rc
    dbhandler/docview_vc7.vcproj
    dbhandler/docview_vc8.vcproj
    dbhandler/docview_vc9.sln
    dbhandler/docview_vc9.vcproj
    dbhandler/docview_vc9.vcxproj
    dbhandler/docview_vc9.vcxproj.filters
    dbhandler/docview_vc9.vcxproj.user
    dbhandler/mainframe.cpp
    dbhandler/mainframe.h
    dbhandler/makefile.bcc
    dbhandler/makefile.gcc
    dbhandler/makefile.unx
    dbhandler/makefile.vc
    dbhandler/makefile.vms
    dbhandler/notepad.icns
    dbhandler/notepad.ico
    dbhandler/notepad.xpm
    dbhandler/rcdefs.h
    dbhandler/res/blank.cur
    dbhandler/res/bullseye.cur
    dbhandler/res/cdrom.ico
    dbhandler/res/colours.bmp
    dbhandler/res/computer.ico
    dbhandler/res/cross.cur
    dbhandler/res/csquery.bmp
    dbhandler/res/database.xpm
    dbhandler/res/drive.ico
    dbhandler/res/file1.ico
    dbhandler/res/floppy.ico
    dbhandler/res/folder1.ico
    dbhandler/res/folder2.ico
    dbhandler/res/hand.cur
    dbhandler/res/index.png
    dbhandler/res/magnif1.cur
    dbhandler/res/odbc.png
    dbhandler/res/odbc1.png
    dbhandler/res/odbc1.xpm
    dbhandler/res/pbrush.cur
    dbhandler/res/pencil.cur
    dbhandler/res/pntleft.cur
    dbhandler/res/pntright.cur
    dbhandler/res/removble.ico
    dbhandler/res/roller.cur
    dbhandler/res/sample.ico
    dbhandler/res/std.ico
    dbhandler/sample.rc
    dbhandler/view.cpp
    dbhandler/view.h
    dbhandler/viewbase.cpp
    dbhandler/viewbase.h
    dbhandler/wx.rc
    dbinterface/ReadMe.txt
    dbinterface/SQLite/sqlite3.h
    dbinterface/SQLite/sqlite3ext.h
    dbinterface/database.h
    dbinterface/dbinterface.sdf
    dbinterface/dbinterface.sln
    dbinterface/dbinterface.suo
    dbinterface/dbinterface.vcxproj
    dbinterface/dbinterface.vcxproj.filters
    dbinterface/dbinterface.vcxproj.user
    dbinterface/stdafx.cpp
    dbinterface/stdafx.h
    dbinterface/targetver.h
Please move or remove them before you can merge.
Aborting
</code></pre>

<p>Most of those files comes from the Windows/Linux projects. However there some files that are Xcode-specific.</p>

<p>Now, after I got this error, I tried to do this:</p>

<pre><code>Igors-MacBook-Air:dbhandler igorkorot$ git status
On branch master
Your branch and 'origin/master' have diverged,
and have 1 and 87 different commits each, respectively.
  (use ""git pull"" to merge the remote branch into yours)

Untracked files:
  (use ""git add &lt;file&gt;..."" to include in what will be committed)

    .DS_Store
    Build/
    dbhandler/
    dbhandlerTests/
    dbinterface/
    dbloader/
    dialogs/
    odbc_lib/
    sqlite_lib/

nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p>So what do I do? How do I add the Xcode-specific files/folders and which one should go to .gitignore file to be kept untracked?</p>

<p>Thank you for the information and hopefully I didn't screw up my project in Xcode.</p>
","8","945871","",""
"37520713","1150189","2016-05-30 08:12:30","1","1812","<git><gitignore>","How to ignore an existing file in git repo?","<p>I'm using git as my version control tool.
I have a local.properties file in my remote repository.
Every team member has to have this file but git should ignore this file only in terms of changes - not existence.
I tried adding this file to .gitignore file (the one in the root directory), but it seems like git is ignoring this request... since I (or any other team member) can still commit and push changes on this file.</p>

<p>What am I missing?</p>

<p>Thanks</p>
","4","1150189","",""
"70259138","14265516","2021-12-07 11:13:20","0","874","<intellij-idea><gitignore>","Should the /out folder in an intellij project be added to gitignore?","<p>I have observed the following different files in my intellij java project -</p>
<ul>
<li>.idea folder</li>
<li>.out folder</li>
<li>.iml file</li>
<li>.src folder</li>
</ul>
<p>Out of these files I'm thinking of adding .idea folder, .out folder, .iml file to .gitignore? Am I right? Or do these folders and files hold some significance which needs tracked by git?</p>
","0","14265516","",""
"53597335","2288547","2018-12-03 15:56:52","1","197","<json><gitignore>","Exclude git versioning for json type files in Visual Studio Code","<p>I cannot exclude my sites generated json data files from showing up in git changes. I have a directory named <code>json</code> with several <code>.json</code> files in it. I do not want to commit any files in this directory. </p>

<p>I have added the folder to .gitignore as <code>json/*</code> but that's not working, nor is the literal json file name, such as <code>json/somefile.json</code>.</p>

<p>I have also tried to add a files.exclude to Visual Studio Code Workspace Settings which is also not working.</p>

<pre><code>{
    ""editor.fontSize"": 12,
    ""editor.mouseWheelScrollSensitivity"": 2,
    ""editor.mouseWheelZoom"": true,
    ""window.zoomLevel"": 0.1,
    ""git.ignoreLimitWarning"": true,
    ""files.exclude"": {
        ""**/json"": true
    }
}
</code></pre>
","0","2288547","0","0"
"53603450","4233413","2018-12-03 23:23:02","0","399","<git><gitignore>","How are these gitignore exclude-from-ignore subfolder patterns different?","<p>I have a gitignore file that excludes a source directory, except for some specific files:</p>

<pre><code>/src_app
!/src_app/Learning\ Module\-darwin\-x64/

!/src_app/assets/icons/mac/
</code></pre>

<p>The exclude-from-ignore the Learning Modules directory is the same regular expression as the one to exclude-from-ignore the icons directory, except I'm escaping the whitespaces in the Learning Modules directory, while the icons directory doesn't need that.</p>

<p>The weird thing is that all of the files under the Learning Module directory are being recognized, whereas no files under the icons directory are being picked up.</p>

<p>What is the difference between these two patterns that makes git recognize one sub-path while not the other?</p>
","0","4233413","",""
"70322904","11814637","2021-12-12 10:55:55","0","102","<git><github><git-submodules><gitignore><ignore>","Is it possible to use the .gitignore file from within a submodule as the ignore file for the repository?","<p>I have created a submodule to organise frequently used files from my repositories, to access them using</p>
<pre><code>git submodule add \repo\
</code></pre>
<p>I was wondering if I could create an ignore file in this submodule to avoid having to create one each time I make a new repository.</p>
<p>If my folder structure looks like this:</p>
<pre class=""lang-sh prettyprint-override""><code>root
│   foo.log
│
└───submodule
        .gitignore
</code></pre>
<p>and <code>.gitignore</code> has the following pattern:</p>
<pre><code>*.log
</code></pre>
<p>Is it possible to use the <code>.gitignore</code> file in <code>root\submodule\</code> to ignore the file: <code>foo.log</code>?</p>
<p>If not, is my best option to just copy the <code>.gitignore</code> file into the project manually?</p>
<p>Thanks for your help.</p>
","5","11814637","",""
"70343709","43534","2021-12-14 04:12:52","0","539","<git><gitignore>",".gitignore double star not working recursively from intermediate directories?","<p>Using git version 2.34.0.windows.1</p>
<p>I have a <code>/.gitignore</code> file at the root of my repository with the usual suspects of extension ignores in it (it's not really relevant here).</p>
<p>Halfway up the tree (<code>/a/b/c/.gitignore</code>), I have another file, where I wanted to say &quot;recursively below this directory, ignore any directory called <code>devl</code>, except for one particular file extension directly inside&quot;.  So I put the following rules:</p>
<pre><code>devl/**
!devl/*.dat
</code></pre>
<p>Unfortunately, it appears this does not work -- git still reports the file <code>/a/b/c/d/devl/test/foo.bar</code> as untracked, not ignored.  (It does not ignore anything at all in the <code>devl</code> directory tree.)</p>
<p>I was able to work around this by using the following rules instead, but as far as I can tell from the documentation, the above should have been legal and working as well:</p>
<pre><code>/**/devl/**
!/**/devl/*.dat
</code></pre>
<p>Why is this?  Is it a bug or a misunderstanding?</p>
","12","43534","0","0"
"37596789","92679","2016-06-02 15:58:33","-4","1482","<git><gitignore>","How can I add these modified files to .gitignore?","<p>When I do <code>git status</code> I see the following:</p>

<p><code>
    modified:   ../.bundle/binstubs/byebug
    modified:   ../.bundle/binstubs/coderay
    modified:   ../.bundle/binstubs/erubis
    modified:   ../.bundle/binstubs/haml
    modified:   ../.bundle/binstubs/htmldiff
    modified:   ../.bundle/binstubs/iron_worker
    modified:   ../.bundle/binstubs/kramdown
    modified:   ../.bundle/binstubs/ldiff
</code>
My .gitignore contains:
<code>
 ../.bundle/*
</code></p>

<p>But these files still show up.  How can I remove them from showing up when I type <code>git status</code>?  These are all gems, so I don't think I actually need them in my repo.</p>
","1","92679","",""
"53651474","4684797","2018-12-06 12:28:16","1","55","<gitignore>",".gitignore in subdirectory is getting ignored","<p>I have created a .gitignore file in a subdirectory.</p>

<pre><code>/errors/company/.gitignore
</code></pre>

<p>I need it to ignore the file <code>/errors/company/seiten/start/content.phtml</code>.</p>

<p>Content of .gitignore:</p>

<pre><code>seiten/start/content.phtml
</code></pre>

<p>But it does still show the file if execute <code>git status</code>. Why?</p>
","3","4684797","",""
"70352071","16479143","2021-12-14 16:14:05","0","676","<javascript><github><gitignore>","github - How to hide a single file from repository","<p>Basically, I don't want my firebase credentials to show up in my github repo. This is what I have done so far.</p>
<pre class=""lang-js prettyprint-override""><code>// creds.js
const firebaseConfig = {
    apiKey: &quot;myapikey&quot;,
    authDomain: &quot;site-123.firebaseapp.com&quot;,
    projectId: &quot;site-123&quot;,
    storageBucket: &quot;site-123.appspot.com&quot;,
    messagingSenderId: &quot;9999999999&quot;,
    appId: &quot;1:1111111:web:jhg123hjjh123&quot;,
    measurementId: &quot;G-FFFFFFFFF&quot;
  };


export { firebaseConfig };
</code></pre>
<p>Now since I have exported this, I just import the credentials in my <code>main.js</code> file.</p>
<pre class=""lang-js prettyprint-override""><code>// main.js
import { firebaseConfig } from &quot;./creds.js&quot;

const firebase = initializeApp(firebaseConfig)
const database = getDatabase(firebase)
</code></pre>
<br>
Now, is it possible to ""hide"" the credentials file from my github repo?<br>
**I don't use the command-line tool or github desktop**. I tried adding the filename to my .gitignore, but the file still shows up when I visit my repo with another account. 
<p>This is what my .gitignore looks like now</p>
<pre class=""lang-py prettyprint-override""><code># Custom
creds.js
</code></pre>
<p>I visited similar questions, but couldn't find a solution. Any help is appreciated. Thanks in advance!</p>
","3","16479143","",""
"70367031","7662977","2021-12-15 16:23:24","1","32","<git><github><gitignore>","git check-ignore outputting unignored files","<p>The file <code>https://github.com/tanafaso/tanafaso-frontend/blob/master/lib/net/api_interface/azkar/requests/get_categories_response.dart</code> is not ignored by git, and that's expected as I have only listed <code>azkar/</code> in <code>.gitignore</code> which means that only the directory <code>azkar/</code> under the root should be ignored.</p>
<p>However, <code>git check-ignore</code> thinks that the file will be ignored and that it satisfies the pattern <code>azkar/</code>.</p>
<pre><code>➜  azkar-frontend git:(master) ✗ git check-ignore --verbose lib/net/api_interface/azkar/requests/get_categories_response.dart
.gitignore:20:azkar/    lib/net/api_interface/azkar/requests/get_categories_response.dart
</code></pre>
","0","7662977","",""
"37618540","5406885","2016-06-03 15:43:07","3","6989","<reactjs><terminal><touch><gitignore><file-extension>","touch .gitignore not creating file","<p>I'm trying to set up a React dev environment, and one instruction I've been given is to enter my directory in Terminal and type this code:</p>

<pre><code>touch .gitignore
</code></pre>

<p>The touch command works fine when I'm making a file with a name and extension (e.g. <code>index.html</code>) but since this appears to be only an extension, nothing is happening.</p>

<p>Apparently it's an important file regarding uploading to GitHub - can anyone help?</p>

<hr>

<p>Update: I created <code>x.gitignore</code>, and then tried deleting the <code>x</code>, and it OSX throws up a dialog saying:</p>

<pre><code>You can’t use a name that begins with a dot “.”, because these names are reserved for the system. Please choose another name.
</code></pre>
","4","5406885","",""
"37629043","6277144","2016-06-04 10:21:54","0","28","<git><gitignore>","retain certain file using .gitignore","<p>I think I'm using .gitignore wrongly. I try to retain my <code>config/db.js</code> to have 2 version, one is to connect to localhost db on my developement environment, one is to connect to live db. </p>

<p>I created .gitignore file and put in <code>config/db</code>, so that I can achieve that. I commit and push everything is working ; but when I put, someone <code>config/db.js</code> got overwritten. What's wrong?</p>
","1","6277144","",""
"37640362","4583266","2016-06-05 09:25:57","1","63","<git><gitignore>","gitignore functioning differently between git 2.7 and 2.8?","<p>So I'm trying to ignore everything except for files under the <strong>/app/code/core/Mage/</strong> directory.</p>

<p>For some reason, it works on Windows (git version 2.7.0.windows), but not in my Centos machine (git version 2.8.1) - which thinks no changes has been made</p>

<p>git status output on Windows:</p>

<pre><code>$ git status
On branch master

Initial commit

Untracked files:
  (use ""git add &lt;file&gt;..."" to include in what will be committed)

        app/

nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p>git status output on Centos:</p>

<pre><code>$ git status
On branch master

Initial commit

nothing to commit (create/copy files and use ""git add"" to track)
</code></pre>

<p>my .gitignore file:</p>

<pre><code>/**
!/app/code/core/Mage/**
</code></pre>
","2","4583266","0","0"
"37646863","6140986","2016-06-05 21:17:24","0","1293","<windows><git><github><gitignore>","Where to put .gitignore in local Windows repo","<p>I'm trying to create a Github repository for a friend's project (a video game), but can't get the .gitignore file to work properly.</p>

<p>I'm attempting to ignore directories that contain image and audio files, as these aren't best stored on Github.</p>

<p>I've placed a .gitignore file in the root directory of the repository, and put rules in it to ignore the aforementioned directories, but can't push the repo to GH without pushing several thousand PNGs and WAVs.</p>

<p>Do I need to put my .gitignore inside of my .git folder?</p>

<p>Do I need to reinitialize the repository since I added the .gitignore after initialization?</p>

<p>Here is the content of my .gitignore</p>

<pre><code>sprites/images/
sound/audio/
</code></pre>
","2","6140986","",""
"37653633","2270563","2016-06-06 09:16:07","1","57","<git><gitignore>","Re-do the ignoring of "".gitignore"" file","<p>In a git repositry, I have ignored few files.<br>
I have also ignored the <code>.gitignore</code> file. </p>

<p>Now the problem is when ever I checkout different branches and come back to the same branch (lets say bug-fix branch) I had to again ignore all the files. (I use SourceTree to select the files and ignore either by directory or by extension). </p>

<p>So when I tried changing that, <code>.gitignore</code> file in the repository doesn't contain <code>.gitignore</code> in it. And either the <code>exclude</code> file didn't have it (Actually its empty!). And there is no <code>.gitignore</code> file present in the user folder. How can I track the <code>.gitignore</code> file ?</p>

<p><strong>Update:</strong>
Contents of .gitignore file in repository:</p>

<pre><code>*.classpath
*.project
.settings/
</code></pre>
","8","2270563","0","0"
"37677275","5426743","2016-06-07 10:48:39","0","593","<git><gitignore>",".gitignore didn't ignore files","<p>I have my CakePHP project which has different config content than config on server. </p>

<p>I used this command to create .gitignore file:
<code>cd /var/www/html/tmc &amp;&amp; touch .gitignore</code></p>

<p>Then I wrote this into the file:</p>

<pre><code>/app/tmp/*
/app/Config/core.php
/app/Config/database.php
/vendors/*
</code></pre>

<p>However when I push, these files are changed again.</p>

<p>What have I done wrong?</p>
","1","5426743","",""
"70479721","2266586","2021-12-25 11:30:01","3","4345","<git><gitignore>","Folder added it .gitignore still showing up in the Git changes","<p>Ok so I recently upgraded to Angular 13 and now I have this folder name &quot;.angular&quot;.</p>
<p>I have added its entry in <code>.gitignore</code> file as <code>.angular/cache</code> since it don't want to track it, but files inside it are always shown in git changes as Untracked files.</p>
<p>Almost every answer on StackOverflow tells to run the following commands.</p>
<pre><code>git rm -r --cached .
git add .
git commit -m &quot;.gitignore is now working&quot;
</code></pre>
<p>All this does is staging the untracked file and then making a commit out of them. My <code>.angular</code> folder is still being tracked. It is still not greyed out like node_modules which means git isn't ignoring it.</p>
<p>Should I be doing anything different?</p>
","2","2266586","0","0"
"37719632","3567262","2016-06-09 07:35:46","10","3905","<node.js><git><babeljs><gitignore>","Should the .babelrc file be gitignored?","<p>I have a project that uses babel, and I was curious if a .babelrc file is typically gitignored or not. I am using a couple of presets that are apart of the package.json file that I have in the .babelrc file so it seems like a .babelrc file should be in source control, but not totally sure.</p>
","0","3567262","",""
"53691406","438776","2018-12-09 10:36:44","0","252","<git><gitignore><pull>","cant git pull because of .gitignore untracked","<p>After performing:
<code>git pull origin master</code></p>

<p>I get the following:</p>

<pre><code>* branch            master     -&gt; FETCH_HEAD
error: The following untracked working tree files would be overwritten by merge:
.gitignore
Please move or remove them before you merge.

Aborting
</code></pre>

<p>How can I continue ?</p>
","2","438776","",""
"53694768","855443","2018-12-09 17:20:22","0","51","<git><gitignore>","gitignore propagating exlusions to lower levels into directories","<p>I have a in <code>gitignore</code></p>

<pre><code>*
!.*
</code></pre>

<p>and I would expect that I see all the subdirectories of <code>.*</code> but indeed git sees only the ones where the subdirectory starts again with <code>.</code>. For example, I see <code>.java/.userPrerfs/.user.lock..</code>, because both subdirectory start with <code>.</code>, but I do not see <code>.conf/ario</code> or <code>.java/fonts/</code>.</p>

<p>How does one limit the exclusion of <code>*</code> just to apply to the top level?</p>
","0","855443","",""
"53695558","6301627","2018-12-09 18:49:32","0","691","<git><gitignore>","gitignore pattern doesn't work without double stars","<p>This pattern works properly:</p>

<pre><code>**/Assets/Plugins/Editor/JetBrains*
</code></pre>

<p>But this pattern doesn't:</p>

<pre><code>Assets/Plugins/Editor/JetBrains*
</code></pre>

<p>As far as I know, these two patterns are equivalent. What might be the problem here?</p>
","2","6301627","",""
"37767262","330401","2016-06-11 18:35:36","1","52","<git><gitignore>","Get git not to ignore directory after wildcard ignore","<p>I have the following in my <code>.gitignore</code>:</p>

<pre><code>*
!.gitignore
!.gitconfig
!.vimrc
!.bash/
!README.md
</code></pre>

<p>I would like git to track everything in that <code>.bash/</code> directory, but it seems to be ignoring it, but tracking everything else. I have also tried <code>!.bash/*</code>, but that didn't work. What's the trick to get this working?</p>
","0","330401","",""
"70536691","16645279","2021-12-30 21:05:18","0","1020","<git><gitignore>","Git keeps adding files in .gitignore on first commit and push to remote","<p>I am trying to do my first commit and push to github. Originally my angular/cache was not in the gitignore file. Now I have added it and tried to commit and push but it keeps including the angular/cache dir ie it keeps trying to add previously tracked stuff I think.</p>
<p>Things I have tried:</p>
<pre><code>git rm -r --cached . &amp;&amp; git add . &amp;&amp; git commit -am &quot;Remove ignored files&quot;
git push -u origin master
</code></pre>
<p>I have also tried  git update-index --assume-unchanged .angular/cache</p>
<p>Everytime I the filed keep adding</p>
","4","16645279","",""
"37775532","","2016-06-12 14:44:28","0","148","<ruby-on-rails><git><github><code-coverage><gitignore>","Rails app turned into HTML on GitHub as I forgot to gitignore","<p>I added SimpleCov and forgot to .gitignore 'coverage' and now my Rails app has accidentally turned into a HTML app on GitHub. This is where my app lives: <a href=""https://github.com/GeekG1rl/lemon"" rel=""nofollow"">https://github.com/GeekG1rl/lemon</a></p>

<p>I tried to add 'coverage' to my .gitignore afterwards and push again but it hasn't updated in my repo (probably because the file is still there).</p>

<p>My assumption is that the directory has already been built but if I delete it, then push again (with 'coverage' in .gitignore), then it will build locally only when being run? If that breaks more things though, I won’t know how to undo that so I'm asking for help before completely breaking it.</p>

<p>I've been coding for three months so please don't be mean if this turns out to be a stupid question ;)</p>
","0","","0","0"
"70544764","13412737","2021-12-31 18:18:25","0","45","<git><github><gitignore>","Not able to ignore .exe files using gitignore","<p>So I want to push my cpp codes on github without the <code>.exe</code> file generated.So in my <code>.gitignore</code> file I have added this command : <code>*.exe</code>.But it doesnt't seem to be working as exe files are still there in my code.I am using VSCode to push and track my changes.</p>
<p>Here is screenshot of my directory:</p>
<p><a href=""https://i.stack.imgur.com/kseEY.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/kseEY.png"" alt=""enter image description here"" /></a></p>
<p>What seems to be the problem?</p>
","2","13412737","",""
"37781162","1870790","2016-06-13 02:49:39","1","269","<git><gitignore>","git clean only tracked files","<p>It is an extremely unusual use case, but I would like to remove all tracked files from git repo. Yes, the tracked files, not the untracked ones.</p>

<p>I have a big set of code generation files, some of them binary some of them text files. I would like to be able to track the history of the text generated files. I have the ignore list set, etc. The problem is that the next time I run the generation process it will change the needed files, add the new ones, but it is not going to remove old ones that are not generated anymore. Deleting the whole work-tree will do, but it will also remove the binary and other files that are already there, and I do not want to do that.</p>

<p>If I have the option to use git to clean only the files that are tracked will be the best using already prepared complex .gitignore file to distinguish the files, but I do not see anything in the documentation.</p>

<p>Is there tricky or not an option how to delete from the work-tree all files that are tracked.</p>
","0","1870790","0","0"
"70545337","14127875","2021-12-31 19:58:36","0","103","<git><npm><gitignore>","Git checkout command overrides folders in .gitignore","<p>I'm working on this project under a tight schedule and I have this error, below is a summary of how I got this error.</p>
<ul>
<li>Working on <code>Weatherme</code> for viewing the weather location (my first actual implementation of APIs with Vue.js 3)</li>
<li>Got tired of the old design and decided to move to <code>TailwindCSS</code> - my definition of a sweet library</li>
<li>Made a new branch <code>migrate-design-tailwind</code> to push to GitHub</li>
<li>I recently switch to the default branch (<code>main</code>) to get a copy of a piece of functionality.</li>
</ul>
<p>The issue is when I check the <code>package.json</code> file in Visual Studio Code, it tells me certain packages are not available (not a problem right)</p>
<p>So I re-installed the packages and the errors go away. That was the first time. The second time the same dependencies weren't found. This is a sample of my <code>.gitignore</code></p>
<pre><code># Node modules
/node_modules

# Project logs
/logs

# Other stuff, don't look here
todo.txt
tailwind.full.config.js
</code></pre>
<p>The checkout command I used is <code>git checkout main</code></p>
<p>Code can be found <a href=""https://github.com/OyewoleOyedeji/weatherme.git"" rel=""nofollow noreferrer"">here</a></p>
","4","14127875","",""
"37791832","772401","2016-06-13 14:05:53","1","415","<git><gitignore>","How does this gitignore regex work ""*,cover""","<p>The <a href=""https://github.com/github/gitignore/blob/master/Python.gitignore"" rel=""nofollow noreferrer"">python .gitinore</a> provided by GitHub has the following regex,</p>
<pre><code>*,cover
</code></pre>
<p>on <a href=""https://github.com/github/gitignore/blob/master/Python.gitignore#L49"" rel=""nofollow noreferrer"">line 49</a>.</p>
<p>What exactly does this regex mean? Is it, &quot;anything, then a comma, then the word <code>cover</code>&quot;?</p>
","1","772401","",""
"70564759","16367458","2022-01-03 11:00:17","-1","479","<git><github><reference><repository><gitignore>","Need Github "".gitignore"" file after creating repository without adding it","<p>I have created my repository but forgot to add the already provided .gitignore files which github propose at the creation moment.</p>
<p>So i want to know how can i find those awesome files and add them to my repo after creating it??</p>
<p>Any other good reference, too?</p>
","0","16367458","",""
"26512454","2128413","2014-10-22 16:32:28","1","66","<linux><git><versioning><gitignore><ignore>","git - ""ignore"" or avoid versioning subdirectories","<p>I want to have all my configuration files versioned using Git in a remote repository at Github. I'm using Debian 7 testing, and all my configuration files are under the <code>/home/user_name/</code> directory.</p>

<p>I created the usual <code>.gitignore</code> with all the files that I want to ignore and the files and directories that I want to allow versioning. My problem begins when I go to Documents, for example, and I see in zsh that folder is under the same versioning as the home directory.</p>

<p>I understand that Git works that way, but I need to know if it's possible to avoid that.</p>
","6","2128413","",""
"9224035","201381","2012-02-10 07:06:04","0","167","<git><gitignore>","How do I see what files git is configured to ignore?","<p>I know that I can use the following command to configure git to globally ignore stuff.</p>

<pre><code>git config --global core.excludesfile {somefile_that_has_filename_patterns}
</code></pre>

<p>How do I see what git is configured to ignore?</p>
","2","201381","",""
"26999699","2767413","2014-11-18 16:56:08","0","29","<git><readonly><gitignore>","ignoring changes in committed files in git","<p>I got some files in my repo that can be changed during the development, but I don't want to commit the changes in those files. In another words, those files should be read-only files inside my git.
The question is, how can I make <code>git status</code> ignoring them? AFAIU, .gitignore isn't fitted for this task.
(There are many such files - they being changed automatically by a script)</p>
","4","2767413","",""
"44867588","5348307","2017-07-02 04:53:07","13","12635","<visual-studio><xamarin><gitignore>","Recommended .gitignore file for Visual Studio Xamarin project","<p>Looked around I can't seem to find the recommended template <em>.gitignore</em> file for Visual Studio Xamarin project.  I looked here as well <a href=""https://github.com/github/gitignore"" rel=""noreferrer"">https://github.com/github/gitignore</a>  </p>

<p>Will the Visual Studio one be ok?</p>

<p><a href=""https://github.com/github/gitignore/blob/master/VisualStudio.gitignore"" rel=""noreferrer"">https://github.com/github/gitignore/blob/master/VisualStudio.gitignore</a></p>

<p>Thx in advance.</p>
","1","5348307","0","0"
"27012598","4069796","2014-11-19 08:58:22","4","983","<git><gitignore><git-stash><git-assume-unchanged>","git assume-unchanged and git stash","<p>I keep some of my local configuration in assume-unchanged files. I have several branches created over time, and assumed-unchanged files have evolved in between (adding more local config). If I try to checkout an older branch, I get:</p>

<pre><code>error: Your local changes to the following files would be overwritten by checkout:
    &lt;some assume-unchanged files&gt;
Please, commit your changes or stash them before you can switch branches.
</code></pre>

<p>I don't want to commit them and cannot stash them (even with the --include-untracked option):</p>

<pre><code>$ git stash
No local changes to save
</code></pre>

<p>Is there a solution for this, or a better workflow for local changes to keep uncommitted?</p>
","1","4069796","0","0"
"27012712","1187195","2014-11-19 09:04:42","0","232","<git><gitignore>","How to remove all untracked git files/folders except the ignored ones?","<p>I do see some related questions but I haven't found the solution for my specific case. In my situation, I got some untracked files and folders (not git-ignored), and some other files and folders declared in <code>.gitignore</code>. I want to remove all the non-git-ignored, untracked files and folders, and keep all the git-ignored ones.</p>

<p>If I use <code>git clean -f</code>, the untracked files will be gone, while the folders remain. In case of running <code>git clean -df</code>, git-ignored folders will be deleted together with non-git-ignored ones.</p>

<p>What should I do?</p>

<p>Thanks in advance.</p>
","0","1187195","",""
"44880423","7559642","2017-07-03 07:57:49","0","769","<git><delphi><gitignore>","Delphi DCU files in git?","<p>Note: I have no experience in Delphi programming.</p>

<p><em>My problem:</em></p>

<p>-I would like to put an old Delphi project of a collegue into a git repo.</p>

<p>-I read that <a href=""https://stackoverflow.com/a/24666172/7559642"">DCU files are compiler generated</a> and even found a .gitignore template actually ignoring these files. </p>

<p>-After putting everything together and cloning the repo, the Delphi 
compiler complains about missing DCU files in the fresh clone. </p>

<p>-When I add the DCU files to git, everything compiles fine.</p>

<p>-The DCU files (at least most of them) get modified during the build process.</p>

<p>-Obviously, the DCU files mess up the git history and make diff's hard to read, but a project that doesn't compile is unacceptable.</p>

<p>What is going wrong here? Are there errors in the code when the DCU files are required for compiling? Is it correct that the compiler is asking for the files during build process? Any help is highly appreciated.</p>
","2","7559642","",""
"44937175","355732","2017-07-05 22:46:21","34","10639","<ios><git><firebase><github><gitignore>","Firebase: Should I add GoogleService-Info.plist to .gitignore?","<p>I'm using Firebase for an iOS project that I want to open source.
Should I add GoogleService-Info.plist to .gitignore before I upload I share the project on Github?</p>

<p>I know it contains my API key, client id, etc., which might not be safe to expose?</p>
","1","355732","0","0"
"44958199","712738","2017-07-06 20:22:08","2","746","<git><github><gitignore>","git not honoring git info exclude","<p>I am working on a shared repository and I want to exclude all the files under certain directory just for myself. 
So I made an entry in <code>$GIT_ROOT/.git/info/exclude</code> </p>

<pre><code>/path/to/folder/
</code></pre>

<p>After this I removed the indexes using </p>

<pre><code>git rm -r --cached /path/to/folder/*
</code></pre>

<p>A <code>git status</code> after this show a long list of deleted file staged for commit.
I commit the changes and till here all is good as any changes  made by me are not tracked by git. But I can not push the same to <code>remote</code> as this will mess up other developers working repo. 
After this If I pull from remote it shows me a merge conflict <code>modified by them/deleted by us</code>. And with <code>git reset --hard origin/&lt;branch_name&gt;</code> It starts tracking the folder again. </p>

<p>Can this not be achieved because I can not push to remote ? </p>
","0","712738","0","0"
"63518202","3559144","2020-08-21 07:16:23","1","699","<git><gitignore><atlassian-sourcetree>","Global .gitignore has no effect","<p>I can't get git to use my .gitignore_global file even though the configuration looks good:</p>
<pre><code>PS C:\path\to\repository&gt; git config --global core.excludesfile
C:/Users/UserXYZ/.gitignore_global
PS C:\path\to\repository&gt; git config core.excludesfile
C:/Users/UserXYZ/.gitignore_global
PS C:\path\to\repository&gt; type C:/Users/UserXYZ/.gitignore_global
# ignore settings for VSCode
.vscode/
</code></pre>
<p>So git should ignore all directories with name <code>.vscode</code> and the files inside them. This works perfectly when I add the line <code>.vscode/</code> to the .gitignore in the repository. However, it has no effect in the global file:</p>
<pre><code>PS C:\path\to\repository&gt; git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
  (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)
        modified:   generic/somefile.cpp

Untracked files:
  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)
        .vscode/
        generic/.vscode/
        simulator/.vscode/

no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)
</code></pre>
<p>If I add the line to the .gitignore inside the repository, the untracked files disappear.
I am also using sourcetree, but I don't think that's relevant, because the behaviour is exactly the same through the commandline.</p>
<p>I appreciate your help!</p>
<p>Edit: Quotes or not, slash or backslash (single or double), it all doesn't seem to make a difference. With my .gitconfig looking like this, it also doesn't work:</p>
<pre><code>[user]
    name = Full Name
    email = full.name@example.com
[difftool &quot;sourcetree&quot;]
    cmd = 'C:/Program Files/Perforce/p4merge.exe' \&quot;$LOCAL\&quot; \&quot;$REMOTE\&quot;
[mergetool &quot;sourcetree&quot;]
    cmd = 'C:/Program Files/Perforce/p4merge.exe' \&quot;$BASE\&quot; \&quot;$LOCAL\&quot; \&quot;$REMOTE\&quot; \&quot;$MERGED\&quot;
    trustExitCode = true
[core]
    excludesFile = &quot;C:\\Users\\UserXYZ\\.gitignore_global&quot;
</code></pre>
<p>My git version is <code>2.28.0.windows.1</code>.</p>
<p>UPDATE:
Alright, this was a tricky one. It turned out, there was a section in my regular .gitignore, that made the global file have no effect (even though it was configured correctly):</p>
<pre><code>#binary ignore pattern
*
!/**/
!*.*
</code></pre>
<p>If I understand this correctly, first, everything is ignored, then all directories and all files with extensions are brought back (including the ones I wanted to ingore in my global_gitignore). So the question now is a slightly different one: Is there a way to override this from my global .gitignore? I cannot change the .gitignore on the project level.</p>
","4","3559144","",""
"27111771","1183150","2014-11-24 18:33:42","0","350","<git><gitignore>","Ignoring a folder from my repo using gitignore","<p>Im trying to ignore a wordpress plugin folder form my git repo via <code>.gitignore</code>. Ive tried blocking the folder by using : </p>

<p><code>
/wp-snapshots/*
/wp-snapshots/
wp-snapshots
wp-snapshots/
wp-snapshots/*
/wp-snapshots
</code></p>

<p>But not of the above works any ideas how i can block this file ?</p>
","1","1183150","",""
"9672319","1179523","2012-03-12 18:01:06","106","57696","<xcode><git><gitignore>",".gitignore file, where should I put it in my xcode project?","<p>I want git to ignore my <code>UserInterfaceState.xcuserstate</code> file in my XCode4 project, but where should I put the <code>.gitignore</code> file?, is it inside the <code>.git</code> folder? or out? The <code>.git</code> is in same folder with the <code>ProjectName.xcodeproj</code> file</p>
","1","1179523","0","0"
"27510115","793167","2014-12-16 17:10:28","0","218","<windows><git><synchronization><gitignore>","Is it possible to include .git folder","<p>I want to put my setting files in to the Git repository so I can sync them between my computers. I have the following folder structure:</p>

<pre><code>d:\settings\
 .git
 plugins\
   .git
   other_things\
</code></pre>

<p>So, <code>settings</code> and <code>plugins</code> are separate git repositories. To track <code>plugins</code> folder without using submodules, I run the following command as per <a href=""http://debuggable.com/posts/git-fake-submodules:4b563ee4-f3cc-4061-967e-0e48cbdd56cb"" rel=""nofollow"">this</a> post:</p>

<pre><code>git add plugins/
</code></pre>

<p>Everything was fine, I was able to 'see' the files from <code>plugins</code> folder within <code>settings</code> up until I tried to sync it to my other computer, where <code>plugins</code> folder was missing its own <code>.git</code> directory.</p>

<p>Is it possible to include (exclude from .gitignore) <code>.git</code> folder via <code>.gitignore</code> somehow? I tried to use something like:</p>

<pre><code>!..\.git
</code></pre>

<p>but it didn't work.</p>

<p>Thanks.</p>
","0","793167","",""
"27538395","3799802","2014-12-18 02:38:40","0","368","<git><github><gitignore>","Github/Git ignore list - .gitignore file when files in same folder case","<pre><code>public
    |--- user_thumbnail
        |---- 1.png
        |---- 2.png
        |---- 3.png
       ...    (num).png
        |---- default.png
</code></pre>

<p>The image name with number dynamically generate.</p>

<p>How could I git add the 'default.png', but don't add the (num).png in the .gitignore ?</p>

<hr>

<p>Thanks all.</p>
","0","3799802","",""
"45400361","190625","2017-07-30 13:35:05","440","295641","<git><visual-studio-code><gitignore>","Why is .gitignore not ignoring my files?","<p>See the image below. My .gitignore file should be ignoring all files in src/dist, but isn't.</p>

<p><a href=""https://i.stack.imgur.com/1qVzG.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/1qVzG.png"" alt=""enter image description here""></a></p>
","1","190625","0","0"
"27558359","2328259","2014-12-19 01:04:13","0","140","<android><android-studio><gitignore>","gitignoring Android Studio app","<p>In the file structure, you have </p>

<ul>
<li>Project Name
<ul>
<li>.idea</li>
<li>app
<ul>
<li>build</li>
<li>libs</li>
<li>src</li>
<li>app.iml</li>
<li>build.gradle</li>
</ul></li>
<li>build</li>
<li>gradle</li>
<li>...</li>
</ul></li>
</ul>

<p>I have .gitignored the <strong>build</strong> in the Project Name directory, but is it safe and should I also .gitignore <strong>build</strong> in the app directory?</p>
","0","2328259","",""
"27569684","1161463","2014-12-19 16:04:39","0","286","<macos><git><laravel><gitignore><git-add>",".gitignore_global ignored wrong dir and won't allow it to be tracked after removal","<p>I accidentally added Laravel's <code>app/storage</code> dir to .gitignore_global. This caused problems of course, so I removed it from <code>.gitignore_global</code>.</p>

<p>Now no matter what I can't get any project to track <code>app/storage</code> or any of its subdirectories.</p>

<p>I've checked all <code>.gitignore</code> files for my projects and none mention ""storage"".</p>

<p>I tried running <code>git add storage -f</code> but this caused all <code>.gitignore</code> files in all the subdirectories to be ignored, which is not what I want since some files should not be added. If I just run <code>git add storage</code>, I get the error</p>

<pre><code>The following paths are ignored by one of your .gitignore files: app/storage
</code></pre>

<p>What's going on here?</p>

<p>(For information, I'm running on Mac OS 10.9.)</p>
","5","1161463","",""
"45412147","2536294","2017-07-31 09:31:38","2","1509","<git><gitignore>","GIT: how to list all gitignore rules in a folder","<p>What I want to do is to list all <code>gitignore</code> rules inside a folder. Assume the following folder structure:</p>

<pre><code>project/
project/folderA/
</code></pre>

<p>Now if I want some <code>gitignore</code> rules for my whole project, I'd put it in <code>project/.gitignore</code>, but I could also add some rules to <code>project/folderA/.gitignore</code>, which as I understand, would apply to <code>project/folderA</code> and its subfolders only.</p>

<p>Now assume I do have some rules in both <code>.gitignore</code> files, and I'm in <code>project/folderA</code>, how can I list all <code>gitignore</code> rules that apply here? I need to see all the union of the ones inherited from parent folders and the ones existing in the current folder.</p>

<p>You can use the following command:</p>

<pre><code>git check-ignore *
</code></pre>

<p>which would list you everything directly under the current folder which is ignored, and if you add a <code>-v</code> option, it would also show you the rule which has caused it to be ignored.</p>

<p>What I need is not to give an example and see if it's ignored or not, I simply need to see all the rules applying to the current folder.</p>

<p><strong>EDIT</strong>: Some suggest that the <code>.gitignore</code> file in the subfolder overrides the parent and only that file needs to be checked. I've tested with git version <code>2.13.3</code> and this is not how it works. If I have <code>patternA</code> in parent folder, it IS ignored in the subfolder even if I don't have that same pattern in the subfolder's <code>.gitignore</code> file.</p>

<p><strong>EDIT 2</strong>: Consider the following working example:</p>

<pre><code>[user@machine tmp]$ mkdir test
[user@machine tmp]$ cd test/
[user@machine test]$ git init
Initialized empty Git repository in /tmp/test/.git/
[user@machine test]$ echo ""a""&gt;.gitignore
[user@machine test]$ mkdir p
[user@machine test]$ cd p
[user@machine p]$ echo ""b""&gt;.gitignore
[user@machine p]$ echo ""c""&gt;.gitignore
[user@machine p]$ touch a 
[user@machine p]$ touch b
[user@machine p]$ cd ..
[user@machine test]$ touch a
[user@machine test]$ touch b
[user@machine test]$ git add .
[user@machine test]$ git status
On branch master

Initial commit

Changes to be committed:
  (use ""git rm --cached &lt;file&gt;..."" to unstage)

    new file:   .gitignore
    new file:   b
    new file:   p/.gitignore

[user@machine test]$ cd p
[user@machine p]$ git list-git-ignore-rules-applied-here &lt;-- hypothetical
</code></pre>

<p>As you can see, the only rule in the parent folder is <code>a</code>, and the two rules in the <code>p</code> folder are <code>a</code> and <code>b</code>, hence niether of those created files being tracked after <code>git add .</code>. Now the last line of that example code is what I need, which should give me the output:</p>

<pre><code>a
b
c
</code></pre>
","3","2536294","",""
"45413101","","2017-07-31 10:15:20","1","481","<git><symfony><gitignore>","Untrack git file","<p>Here is the think, I have a database field with some html.</p>

<pre><code>&lt;span class=""orange""&gt;&lt;a href=""/pdf/MY_PDF.pdf""&gt;Title&lt;/a&gt;&lt;/span&gt;
</code></pre>

<p>Last day, my boss told me he wanted to change this pdf. So, i thought I just had to put the new file in the folder and change his name inside the database (MY_PDF2.pdf) for example.</p>

<p>But this is tricky because the file is tracked by git... so to see the new pdf I had to commit just this single PDF. The thing is it's a customer file... so if we have to make some commit each time they want to change... this is crazy.</p>

<p>So I just want to say to git that the file doesn't need to be tracked. </p>

<p>It's under Symfony and this is my file location : C/wamp/www/sitename/web/pdf/</p>

<p>So I would like my git don't tracked the pdf folder anymore.
But I don't know how to do that... sure I can put it into my gitignore... but all the others dev will still have the old one...cause I think gitignore is ignored as well...</p>

<p>Not sure I'm very clear, sorry. Don't hesitate to ask what you don't understand in my question.  Thanks</p>
","1","","",""
"27593630","1738403","2014-12-21 20:45:50","0","460","<git><laravel><gitignore>","gitignore files on specified folder but folders must be tracked","<p>I want to <code>gitignore</code> all files inside my <code>public/images/Users/</code> directory but I want that path to be tracked on my repository so that other collaborators will not create new folders on their machines.
I have this line on my <code>.gitignore</code> file <code>public/images/Users/*</code> but this line ignores all from images folder. What is the best way to achieve this? Thanks. By the way, my project is on <code>Laravel</code> framework.</p>
","2","1738403","0","0"
"64299116","2146491","2020-10-10 23:03:49","1","44","<git><gitignore>","How to .gitignore subdirectories by their contents?","<p>I'm working on a project where one of the functionalities is generation of git repositories with a particular structure.</p>
<p>Because of this, I often end up with a lot of untracked &quot;submodules&quot; in my project repository, that generate unnecessary noise. Even <code>git clean -dfx</code> refuses to clean them up:</p>
<pre><code>&gt; git clean -dfx
Skipping repository generated/
</code></pre>
<p>I tried to be clever, and put the following rule in my <code>.gitignore</code>, but to no avail:</p>
<pre><code>*/.git/../*
</code></pre>
<p>Is there a way to ignore subdirectories that <em>contain</em> files adhering to a certain pattern?</p>
","3","2146491","",""
"64326256","11939006","2020-10-12 22:45:35","2","492","<git><configuration><gitignore><home-directory>","How do I whitelist a directory in .gitignore and blacklist a file inside it in ~/.gitignore?","<p>There are many questions on this topic, but none involve <code>~/.gitignore</code>.</p>
<hr />
<p>I have a strange project with a top-level project directory—call it <code>project/</code>—full of garbage, but with at least one important subdirectory—say <code>project/feedme/</code>.  I'd like to <code>.gitignore</code> everything in <code>project/</code>, but un<code>.gitignore</code> <code>project/feedme/</code> and its contents.  This is easy with a negated pattern:</p>
<pre><code>project$ cat .gitignore
/*
!/feedme/
</code></pre>
<p>I have a file <code>project/feedme/.exrc</code> which I would like to ignore.  Being a <code>vi</code> user, I use <code>.exrc</code> files for local editor settings often, and so I have an entry in my <code>~/.gitconfig</code> (specified by the <code>core.excludesFile</code> Git setting):</p>
<pre><code>project$ cat ~/.gitignore
.exrc
</code></pre>
<p>Unfortunately <code>git</code> seems not to want to reignore <code>.exrc</code>:</p>
<pre><code>project$ git status -s
?? feedme/
project$ git add feedme/
project$ git status -s
A  feedme/.exrc
</code></pre>
<p>Why does Git not ignore <code>project/feedme/.exrc</code>?</p>
<hr />
<h3>Edit: This section is wrong, as per <a href=""https://stackoverflow.com/a/64329737/11939006"">prosoitos' answer</a>.  See my edits at the end of this question, as it has not been completely answered.</h3>
<p>Why do I think this should work?  The manual page <strong>gitignore</strong>(5) says so:</p>
<blockquote>
<p>Each line in a <strong>gitignore</strong> file specifies a pattern. When deciding
whether to ignore a path, Git normally checks <strong>gitignore</strong> patterns from
multiple sources, with the following order of precedence, from highest
to lowest (within one level of precedence, the last matching pattern
decides the outcome):</p>
<ul>
<li><p>[…]</p>
</li>
<li><p>Patterns read from a <strong>.gitignore</strong> file in the same directory as the
path, or in any parent directory, with patterns in the higher level
files (up to the toplevel of the work tree) being overridden by
those in lower level files down to the directory containing the<br />
file.  […]</p>
</li>
<li><p>[…]</p>
</li>
<li><p>Patterns read from the file specified by the configuration variable
<strong>core.excludesFile</strong>.</p>
</li>
</ul>
</blockquote>
<p>Since patterns from <code>~/.gitignore</code> are read last, I would have thought that the <code>.exrc</code> would be ignored in the end regardless of local <code>.gitgnore</code>s.</p>
<p>A possible explanation is that this (again from the <strong>gitignore</strong>(5) manual page, emphasis mine)</p>
<blockquote>
<p>It is
not possible to <em>re-include</em> a file if a parent directory of that
file is <em>excluded</em>.</p>
</blockquote>
<p>also applies in its dual form (<em>not</em> in the manual page)</p>
<blockquote>
<p>It is
not possible to <em>exclude</em> a file if a parent directory of that
file is <em>re-included</em>.</p>
</blockquote>
<p>I would consider this a bug however if this is the case; at least it should be stated clearly in the documentation.</p>
<hr />
<p>P.S.:  My <code>~/.gitignore</code> works under normal circumstances, so the problem is not there.</p>
<hr />
<h3>Edits</h3>
<p>Prosoitos is right, the global <code>~/.gitignore</code> is read <em>first</em>, so the <code>project/feedme/</code> subdirectory is re-included <em>after</em> <code>.exrc</code>s are globally ignored.  However I still face another oddity.</p>
<p>As I understand the documentation now, putting <code>.exrc</code> on the last line of my <code>~/.gitignore</code> is equivalent (if <code>project/.git/info/excludes</code> is empty) to putting <code>.exrc</code> on the first line of <code>project/.gitignore</code>.  Yet if I do this, <code>project/feedme/.exrc</code> is ignored this time!</p>
<pre><code>project$ cat ~/.gitignore
project$ cat .gitignore
.exrc
/*
!/feedme/
project$ git ls-files --other --ignored --exclude-standard
.gitignore
feedme/.exrc
</code></pre>
<p>What is happening here?</p>
","4","11939006","0","0"
"64328831","12915804","2020-10-13 05:05:28","3","371","<git><gitignore>",".gitignore seemingly deleted files","<p>I had already tracked files that I wanted to add to the <code>.gitignore</code> file (e.g. App.config), so I followed the advice of <a href=""https://stackoverflow.com/questions/1139762/ignore-files-that-have-already-been-committed-to-a-git-repository"">this post</a> (and others like it), and did the following:</p>
<ol>
<li>ran <code>git rm --cached *.config</code></li>
<li>added <code>*.config</code> to my <code>.gitignore</code> file</li>
<li>git added and commited the ignore file and the &quot;deleted&quot; files</li>
</ol>
<p>After doing the <code>App.config</code> file, I double checked, and the file was there, with the little symbol for &quot;ignored&quot; next to it in Visual Studio. Everything seemed peachy, so I did this for several files every few commits as I came across other things I thought should be added to the <code>.gitignore</code>, including <code>*.csproj</code> (which I now regret very much).</p>
<p>It was all fine until today when I had to switch to the master branch for a moment, and the project (my dev branch) had to be reloaded. The load failed and when I tried to re-load, it said :</p>
<pre><code>The project file &lt;missing file.csproj&gt; has been moved, renamed, or
is not on your computer.
</code></pre>
<p>Lo and behold, all the files I had untracked are now gone when I search in file explorer.</p>
<p>I've been going back through commits, and the &quot;missing file&quot; error goes away before that file was &quot;removed from the cache&quot; (aka deleted, even though it wasn't deleted after I committed it, since I've been working in it without issue until now). I'm stumped as to why git deleted these files.</p>
<p>If anyone has advice on a solution, I'm all ears; the current plan is to copy the code I've changed on this branch and restart on a new branch from master, but I'd rather not have to redo everything I've been working on the past couple weeks. Regardless, my main question is why this happened in the first place so I can avoid doing it again.</p>
","7","12915804","",""
"64329255","14029249","2020-10-13 05:46:32","1","201","<swift><xcode><git><gitignore>","How to add podfile.lock and .DS_store to .gitignore","<p>I have added in .gitignore like this:</p>
<pre><code>Pods/
MyStarhub.xcworkspace/
*/xcuserdata/
DerivedData/*
Podfile.lock
*.DS_Store
*.icloud
</code></pre>
<p>But git keeps tracking <a href=""https://i.stack.imgur.com/vhqOl.png"" rel=""nofollow noreferrer"">.Ds_Store Podfile.lock</a> for some reason.</p>
","1","14029249","",""
"28188740","513413","2015-01-28 09:32:24","0","117","<git><gitignore>","File after adding to global git file is still visible","<p>continue from my previous question <a href=""https://stackoverflow.com/questions/28186955/is-it-possible-to-ask-git-dont-show-a-file"">Is it possible to ask GIT, don&#39;t show a file?</a></p>

<p>I have a file that I want to add it to global .gitignore that shouldn't be inside .gitignore of project.</p>

<p>I have added <code>excludesfile</code> path into my .gitconfig file</p>

<pre><code>[user]
    name = Hesam
    email = MY-EMAIL-ADDRESS
[color]
    ui = true
    diff = true
[core]
    excludesfile = /Users/admin/.gitignore_global
</code></pre>

<p>Then I added full path to the file that I don't want to track it in <code>.gitignore_global</code> file.</p>

<pre><code>/Users/admin/Desktop/android/my-app/crashlytics.properties
</code></pre>

<p>Still, when I navigate to my project directory and enter <code>git status</code> my response is:</p>

<pre><code>&gt;&gt; git status
On branch fix_confirm_booking
Untracked files:
  (use ""git add &lt;file&gt;..."" to include in what will be committed)

    my-app/crashlytics.properties

nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p>Any suggestion would be appreciated. Thanks.</p>
","7","513413","",""
"10213653","1341933","2012-04-18 16:20:35","77","33614","<git><github><gitignore>","gitignore ignore files within a folder that has whitespace in the middle","<p>I have a folder that have a space in the middle, but have a webconfig file inside it. I want git to ignore the webconfig file but somehow it's not ignoring it because of the space in the folder. Anybody know how to work around this?</p>

<pre><code>My FolderName/Web.config
</code></pre>

<p>I tried to insert the <code>%20</code> in the middle but that did not help.</p>

<p>Thank you for your help.</p>
","2","1341933","0","0"
"28206389","3966258","2015-01-29 03:11:46","1","130","<git><github><gitignore>","How to get git to ignore directory on my server?","<p>Let's say my repo looks like this:</p>

<p><code>myApp
  public
    index.html
    ...
  tests
    foo.js
    ...
</code></p>

<p>I want the <code>tests</code> folder to get pushed to GitHub but NOT to my server. How do I accomplish this?</p>

<p>Since I want <code>tests/</code> to get pushed to GitHub I cannot simply add <code>/tests/*</code> to my .gitignore file. </p>

<p>I've tried adding <code>/tests/</code> to the <code>.git/info/exclude</code> file on my server, then deleting the contents of <code>/tests</code> but this did not work.</p>
","2","3966258","0","0"
"65025299","4300142","2020-11-26 15:50:51","0","37","<git><gitignore><ignore>","How will git ignore previously committed single file","<p>I want to ignore the single file in git, which is already committed in git. but I am not able to do this. Please provide any solution.</p>
","1","4300142","",""
"65029549","1772898","2020-11-26 21:41:54","1","484","<git><gitignore>","gitignore all files except the .json files in all subdirectories of a particular directory","<p>my current directory tree looks like:</p>
<pre><code>.
├── test1
│   ├── test.docx
│   ├── test.jpg
│   ├── test.json
│   ├── test2
│   │   ├── test.docx
│   │   ├── test.jpg
│   │   ├── test.json
│   │   └── test4
│   │       ├── test.docx
│   │       ├── test.jpg
│   │       └── test.json
│   └── test3
│       ├── test.docx
│       ├── test.jpg
│       └── test.json
└── test5
    ├── test.docx
    ├── test.jpg
    ├── test.json
    ├── test2
    │   ├── test.docx
    │   ├── test.jpg
    │   ├── test.json
    │   └── test4
    │       ├── test.docx
    │       ├── test.jpg
    │       └── test.json
    └── test3
        ├── test.docx
        ├── test.jpg
        └── test.json
</code></pre>
<p>I want to ignore everything except <code>.json</code> files which are under <code>test1</code> directory.</p>
<p>my <code>.gitignore</code> file looks like:</p>
<pre><code>/*
!/.gitignore
!/test1
/test1/**/*.json
</code></pre>
<p>my <code>git status -sb</code> output is:</p>
<pre><code>## No commits yet on master
?? .gitignore
</code></pre>
<p>So, it is not tracking the <code>.json</code> files under <code>test1</code> directory.</p>
<p>What might be the solution here?</p>
","0","1772898","",""
"65044295","1772898","2020-11-27 22:02:08","1","105","<git><gitignore>","gitignore - is there any difference between !/**/ and !*/","<p>I was going through the answers of <a href=""https://stackoverflow.com/q/19023550/1772898"">How do I add files without dots in them (all extension-less files) to the gitignore file?</a></p>
<p>One answer is:</p>
<pre><code>*
!/**/
!*.*
</code></pre>
<p>and the other answer is:</p>
<pre><code>*
!*/
!*.*
</code></pre>
<p>So, is there any difference between <code>!/**/</code> and <code>!*/</code> or are they similar.</p>
","1","1772898","0","0"
"10259606","660896","2012-04-21 14:06:26","7","3782","<visual-studio-2010><visual-c++><version-control><github><gitignore>","Possible implications of of adding *.sdf files to .gitignore","<p>I recently pushed a Visual Studio C++ project to github. I've noticed that VS creates a .sdf file that's relatively large (~25MB). I tried deleting this file in my workspace to see whether or VS would throw an error. Upon open the project in VS no errors where reported and it the file was recreated. I'm considering, therefore, removing the .sdf file that's currently in my repository and adding an *.sdf entry to the repo's .gitignore file.</p>

<p>The consequence of this is that when a user pulls the contents of the repo and opens it in Visual Studio for the first time, VS will have to generate the .sdf file. However, if a user pulls changes from the repo made by another user, could the .sdf get out of sync, and if so, does anyone know if VS would handle this in a sensible way (e.g. regenerating the .sdf file)? Could there be other implications that I'm not aware of?</p>

<p>Any input would be much appreciated!</p>
","0","660896","0","0"
"46800503","5818059","2017-10-17 23:06:09","3","4694","<git><github><latex><gitignore><tex>","How should I use .gitignore?","<p>I'm new to Github and Git as whole. I'm working on a repository that has a lot of <code>.tex</code> files and mostly Matlab code. The IDE for Latex I use is Texpad and it creates a folder called <code>.texpadtmp</code> for auxiliary files. It looks like this:</p>

<p><a href=""https://i.stack.imgur.com/Zf9n2.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Zf9n2.png"" alt=""enter image description here""></a></p>

<p>If I got it right, <code>.gitignore</code> is all about creating a set of types of files and folders which will be explicitly ignored by Git when committing and tracking. I took to some other repos and how they created their .gitignore file and I created something that looks like this (whit the help of a GitHub template):</p>

<p><a href=""https://i.stack.imgur.com/rhtHN.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/rhtHN.png"" alt=""enter image description here""></a></p>

<p>However, although I have updated my local repo and everything is in sync, the aforementioned folder is still there and all the auxiliary files are still there, still visible. Is this the expected behavior? Shouldn't it be omitted somehow and never be committed upon or tracked again? Thanks in advance.</p>
","0","5818059","0","0"
"10617801","1254743","2012-05-16 11:44:03","9","18395","<git><gitignore>","ignore certain files in all folders using a single .gitignore file","<p>After reading several questions about <code>.gitignore</code> I have found no one that could answer my question:</p>

<p>What do I have to add to .gitignore to ignore all files with a certain ending, say 
<code>*.txt</code> in all folders.</p>

<p>I'd prefer to only have one <code>.gitignore</code> file at top level.</p>

<p>I tried several things but none worked.</p>

<p>This is what I tested (<code>.gitignore</code> was added to the repository before, no other file was added):</p>

<pre><code>  $ ls
  abc.txt  content

  $ ls content/
  abc.txt  def.other  def.txt

  $ echo """" &gt; .gitignore


  $ git status --ignored --untracked-files=all
  # On branch master
  # Changes not staged for commit:
  #   (use ""git add &lt;file&gt;..."" to update what will be committed)
  #   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
  #
  #       modified:   .gitignore
  #
  # Untracked files:
  #   (use ""git add &lt;file&gt;..."" to include in what will be committed)
  #
  #       abc.txt
  #       content/abc.txt
  #       content/def.other
  #       content/def.txt
  no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>This is as expected: all files show up since .gitignore is empty.</p>

<pre><code>  $ echo ""*.txt"" &gt; .gitignore

  $ git status --ignored --untracked-files=all
  # On branch master
  # Changes not staged for commit:
  #   (use ""git add &lt;file&gt;..."" to update what will be committed)
  #   (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)
  #
  #       modified:   .gitignore
  #
  # Untracked files:
  #   (use ""git add &lt;file&gt;..."" to include in what will be committed)
  #
  #       content/def.other
  # Ignored files:
  #   (use ""git add -f &lt;file&gt;..."" to include in what will be committed)
  #
  #       abc.txt
  no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>

<p>Why don't the files content/abc.txt and content/def.txt show up in the list?</p>

<pre><code>  $ git clean -n
  Would not remove content/
</code></pre>

<p>I thought they would show up here too.</p>

<pre><code>  $ echo """" &gt; .gitignore

  $ git clean -n
  Would remove abc.txt
  Would not remove content/

  $ cd content

  $ git clean -n -x
  Would remove def.other

  $ git clean -n -x
  Would remove abc.txt
  Would remove def.other
  Would remove def.txt
</code></pre>

<p>If the files content/abc.txt and content/def.txt are shown by <code>clean -n -x</code> but not by <code>clean -n</code>, I think they are ignored. But then why don't they show up in <code>git status --ignored --untracked-files=all</code>?</p>
","0","1254743","",""
"46820977","8459787","2017-10-19 00:00:04","0","151","<git><console><gitignore>","Github project find all files in .gitingore file | Forcefully added files","<p>I found that some of the github projects contain files that was mentioned in <code>gitignore</code> file.  (<code>I think they are forcefully added files.</code>)<br>
So once I clone the project, that's working well.<br>
But once clone, make new repository, and push the code, then clone again,
code is not running.
I had to find all the files in my eye, difference between default project and new repository, and then forcefully push the files mentioned in gitignore file.</p>

<p>My question is how can I automatically get the list of all files on project mentioned in <code>.gitignore</code>?</p>

<p>I have tested with <a href=""https://github.com/dashpay/dash/"" rel=""nofollow noreferrer"">https://github.com/dashpay/dash/</a>.</p>

<pre><code>git clone https://github.com/dashpay/dash
cd dash
//find all files
</code></pre>

<p>For the above project the result should be</p>

<pre><code>   depends/patches
   src/secp256k1/build-aux/m4/ax_prog_cc_for_build.m4
                             /bitcoin_secp.m4
   build-aux/m4
</code></pre>

<p>UPDATE:
   <code>git check-ignore ./*</code> is showing all the ignored files once changed.<br>
   <code>git status --ignored</code> same.</p>
","1","8459787","",""
"37845077","4148782","2016-06-15 20:22:44","1","118","<git><unity-game-engine><gitignore>","Setting up git with Unity3d project, objects removed when Library is excluded","<p>I'm currently working on a Unity3d project where I switch a lot between my PC at home and my Mac at work. I've read a bunch of threads on how to type the gitignore-file for using github, and it all works fine. But the ignore-files I've seen so far are all ignoring the Library folder, but doing so will result in the scene getting all broken. All the GameObjects are removed and all I see in my scenes are just a Main Camera Object. I assume there is a reason for not including the Library folder in the git repository, so how would I solve this without adding it?</p>

<p>my gitignore:</p>

<pre><code>/[Ll]ibrary/
/[Tt]emp/
/[Oo]bj/
/[Bb]uild/
/[Bb]uilds/
/Assets/AssetStoreTools*

# Autogenerated VS/MD solution and project files
ExportedObj/
*.csproj
*.unityproj
*.sln
*.suo
*.tmp
*.user
*.userprefs
*.pidb
*.booproj
*.svd


# Unity3D generated meta files
*.pidb.meta

# Unity3D Generated File On Crash Reports
sysinfo.txt

# Builds
*.apk
*.unitypackage
</code></pre>
","0","4148782","",""
"54694254","8757882","2019-02-14 15:49:42","1","77","<git><react-native><github><gitignore>","How to correctly specify gitignore files?","<p>Im using github desktop. I have a project on git in react native. I want to have my own branch where I can save all my <code>/ios</code> and <code>/android</code> folders and another branch for me and my mate with just <code>app.js ...etc</code> files without <code>ios</code> and <code>android</code> folders. How should I organise my gitignore folders correctly? 
Is there a rule that masters gitignore should always exist more information than its other branches?
I added /ios and /android for masters gitignore, why it keeps deleting them from my pc?</p>
","1","8757882","",""
"54698397","2125837","2019-02-14 20:15:26","3","39","<git><gitignore>","Provide file in git but ignore all changes","<p>I want to </p>

<ul>
<li>provide an initial version of the file in git, </li>
<li>and ignore all future changes</li>
</ul>

<p>But using <code>.gitignore</code> does not seems to work for me, as the file <em>will</em> show up as modified in <code>git status</code>, even listed in <code>.gitignore</code>, once tracked in git.</p>

<p>Is it possible? </p>
","3","2125837","",""
"54702404","7394190","2019-02-15 03:44:27","4","1442","<git><gitignore>","how to use .gitignore reverse select","<p>use .gitignore to reverse selection,I just want to track the app catalog.App is the secondary directory under emply.</p>

<p><a href=""https://i.stack.imgur.com/VLheV.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/VLheV.png"" alt=""enter image description here""></a></p>

<p>l used The following code,But git doesn't track anything</p>

<pre><code>*
!*/
!*/app
</code></pre>

<p>I have already tested similar problems, Write like it, but invalid</p>
","1","7394190","",""
"72362194","4051610","2022-05-24 11:35:56","1","533","<gitignore>",".gitignore file not ignoring .env.local or any other supposed private file","<p>I encountered this error because I once mistakenly committed <code>.env.local</code> before adding it to <code>.gitignore</code>. The answer to it below.</p>
","0","4051610","",""
"54755672","10409976","2019-02-18 21:31:42","2","180","<ruby><git><sublimetext><gitignore><tmp>","Show files that are git ignored in sublime sidebar","<p>I'm trying to get the tmp file that is git ignored, to display in my sublime sidebar so that i can look at the contents. I have tried everything that I found, including going into preferences => settings and deleting 'tmp' from the 'folder_exclude_patterns' in the user settings but it is still not appearing. I still want the file to be git ignored though.
Thanks.</p>
","1","10409976","",""
"54760690","1422604","2019-02-19 07:19:24","0","240","<git><gitignore>","I cannot stop git from looking at my .DS_Store file","<p>The first few lines of my .gitignore file looks like this:</p>

<pre><code>## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

.DS_Store
</code></pre>

<p>So I am confused as I keep seeing this message all the time:</p>

<pre><code>'origin/master'.

Changes not staged for commit:
  (use ""git add &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

    modified:   Test/.DS_Store

Untracked files:
</code></pre>

<p>It seems like the .gitignore entry is not being recognized.</p>
","2","1422604","",""
"54821174","11083428","2019-02-22 06:21:53","1","5279","<laravel><git><gitignore>","Unable to git-ignore .env file in laravel?","<p>I have added .env name in ignorance file but it's not working. Please guide me.</p>

<p>My git-ignore:</p>

<pre><code>node_modules/
npm-debug.log

bootstrap/compiled.php, 
app/storage/, 

public/storage, 
public/hot, 
storage/*, 
storage/*.key, 
.env.*.php, 
.env.php, 
.env, 
Homestead.yaml, 
Homestead.json
</code></pre>

<p>My git-ignore.save:</p>

<pre><code>public/storage, 
public/hot, 
storage/*.key, 
storage/upload, 
storage/exports, 
storage/files/* , 
.env.*.php, 
.env.php, 
.env, 
Homestead.yaml, 
Homestead.json, 
storage/uploads, 
ven
</code></pre>
","5","11083428","0","0"
"54874737","11116048","2019-02-25 21:11:15","0","34","<git><gitignore>",".gitignore doesn't see /.idea folder but see .idea","<p>.gitignore doesn't see</p>

<pre><code>/.idea
</code></pre>

<p>folder but see </p>

<pre><code>.idea
</code></pre>

<p>Why is it so?</p>
","4","11116048","",""
"54946587","6139396","2019-03-01 14:25:36","0","351","<php><laravel><git><gitignore><adminlte>",".gitignore, adminLTE and changes in vendor, suggestion?","<p>I'm trying to configure adminLTE in Laravel project. I have found a way of modifying it, but when I want to modify it, it has to be done in vendor/jeroennoten/laravel.../views/master.blade.php or page.blade.php for basics and if I want to modify menus and navs it has to be done in vendor/jeroennoten/laravel-adminlte/config/adminlte.php</p>

<p>By default in .gitignore is also vendor folder. Now, I'm wondering, how to manage all this with GIT cause I'm changing things in vendor file? What is the recommendation and/or best practice? Try not to change anything in vendor, and make views in resource folder (what looks kind of huge work for adminLTE), or to use i.e. !vendor/jeroennoten in .gitignore, track all changes and update it on gitHub.
Is there any additional things I should do if someone wants to pull the project so he/she can see changes in vendor. </p>

<p>I'm new to this, so if this seems kind of dummy question or there is completely different approach please have understanding.</p>
","6","6139396","",""
"55008325","6475284","2019-03-05 17:22:05","0","93","<git><version-control><visual-studio-code><git-branch><gitignore>",".gitignore file is ignored, even after re-setting multiple times (in vscode)","<p>Unfortunately, my .gitignore file or certain commands in it get completely ignored.</p>

<p>When I check out a branch or from remote or pull/fetch, the .vscode folder is always removed, so that all my tasks get lost and I have to create .vscode folder with the tasks.json file inside again and again manually.</p>

<p>How can I fix the problem without overwriting or deleting my current branches? If these (currently 3 branches) are deleted, the consequences would be really bad.</p>

<p>This is my current .gitignore file. For the folder .vscode I have already tried different approaches and, for example, removed the lines with the exclamation marks, etc. Still does not work.</p>

<p>My .gitignore file ist placed in the root folder of an angular 7 project and I'm using visual studio code.</p>

<pre><code># See http://help.github.com/ignore-files/ for more about ignoring files.

# compiled output
/dist
/tmp
/out-tsc

# dependencies
/node_modules

# IDEs and editors
/.idea
.project
.classpath
.c9/
*.launch
*.iml
.settings/

# misc
/.sass-cache
/connect.lock
/coverage
npm-debug.log
testem.log
/typings

# e2e
/e2e/*.js
/e2e/*.map

# System Files
.DS_Store
Thumbs.db

.vscode/*
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
</code></pre>
","11","6475284","",""
"55065207","362840","2019-03-08 14:26:41","0","169","<git><gitignore>","How to remove cached/tracked files after adding a gitignore?","<p>I have a folder in my repository called <code>Design</code>. I have since added <code>/Design/</code> to my <code>.gitignore</code> file. However, the old files are still tracked and appear in bitbucket. How can I remove these cached files from my online repository but keep them on my computer? I tried something in the past but ended up deleting them from my computer, and I don't want that to happen again!</p>
","8","362840","",""
"46001596","4485898","2017-09-01 13:45:12","4","4221","<git><directory><wildcard><gitignore>",".gitignore directory/wildcard unexpected behaviour","<p>Folder structure of the git project:</p>

<pre><code>.git/
    &lt;some git stuff&gt;
.gitignore
level1/
    level2/
        file1
        file2
</code></pre>

<p>The files <code>.gitignore</code>, <code>file1</code>, and <code>file2</code> are all empty.
I run <code>git add .gitignore</code> and <code>git commit -m ""create empty .gitignore""</code>.</p>

<p>If the <code>.gitignore</code> is emtpy, <code>git add -A</code> followed by <code>git status</code> outputs (as expected):</p>

<pre><code>new file: level1/level2/file1
new file: level1/level2/file2
</code></pre>

<p>So, I <code>git reset</code> to begin testing the outcome of changes to the <code>.gitignore</code> (assume I do this between each of the following changes to the <code>.gitignore</code>)</p>

<p>If the <code>.gitignore</code> contains either <code>level1</code>, <code>level1/</code>, <code>level1/*</code>, <code>level2</code>, or <code>level2/</code>, then <code>git add -A</code> followed by <code>git status</code> outputs (as expected):</p>

<pre><code>modified: .gitignore
</code></pre>

<p>However, if the <code>.gitignore</code> contains <code>level2/*</code>, then <code>git add -A</code> followed by <code>git status</code> outputs:</p>

<pre><code>modified: .gitignore
new file: level1/level2/file1
new file: level1/level2/file2
</code></pre>

<p>Why doesn't <code>level2/*</code> have the same effect as <code>level2/</code> in this case?  Also, while <code>level2/*</code> <strong>doesn't</strong> do what I want, <code>**/level2/*</code> <strong>does</strong>.</p>
","0","4485898","0","0"
"46001975","5525220","2017-09-01 14:04:31","0","4000","<git><unix><cmake><gitignore>",".gitignore not ignoring a file properly","<p>I have a project and its structure is following:</p>

<pre><code>build/
.git/
.gitignore
LICENSE
pics/
project.c
README.md
shared/
solutions/
</code></pre>

<p>My <code>build/</code> folder is where I use CMake so there are various files like <code>CMakeCache.txt</code>, <code>CMakeLists.txt</code> etc. which I want git to ignore.</p>

<p>My <code>.gitignore</code> file has:</p>

<pre><code>.gitignore
*.out
*.swp
/build/*
</code></pre>

<p>When I run <code>git status</code> there is <code>modified: CMakeLists.txt</code> which I don't understand. Why is <code>CMakeLists.txt</code> not ignored? And why is it the only file that's not ignored?</p>
","3","5525220","",""
"63962125","1639594","2020-09-18 20:00:34","0","507","<python><gitignore>","How does one .gitignore pickle files in python?","<p>How does one add pickle files to their .gitignore file?</p>
<p>I have tried:</p>
<pre><code>*.csv
*.pkl
</code></pre>
<p>The CSV is ignored but not the pickle file.</p>
<p>Note that the pickle file was originally added so maybe its downstream(?) and can no longer be removed?</p>
","6","1639594","",""
"46007162","3541320","2017-09-01 19:52:33","0","81","<gitignore>","gitignore include a specific path","<p>In my .gitignore I have the line:</p>

<pre><code>/storage/*.key
</code></pre>

<p>But I don't want to ignore this specific path and all it's content:</p>

<pre><code>/storage/app/public/*
</code></pre>

<p>Now, inside that path there's another .gitinore file and it has:</p>

<pre><code>*
!.gitignore
</code></pre>

<p>And in the same path there's another .gitignore with:</p>

<pre><code>*
!public/
!.gitignore
</code></pre>

<p>I thought that would be for add the path but is not working.</p>

<p>What is that? How can do what I want (add the path of storage/app/public*)?</p>
","0","3541320","0","0"
"63972265","14005902","2020-09-19 18:49:31","0","8177","<git><repository><gitignore><github-actions>","Create a .gitignore file after creating the repository and publish .idea file?","<p>I already create a repository in my github account.
But now I want to upload my <code>idea</code> file that pycharm created.
That's why I need a <code>.gitignore</code>-file.
I know that we created a <code>gitignore</code>-file when creating a new repository.
But how can I create a <code>gitignore</code>-file after creating and pushing this repository?</p>
","2","14005902","",""
"63977805","11094437","2020-09-20 10:11:50","0","535","<git><gitignore>","Why git status shows files under /vendor dir?","<p>Running command</p>
<pre><code>git status
</code></pre>
<p>in root of laravel project I see a lot of messages, like :</p>
<pre><code>Changes not staged for commit:
  (use &quot;git add/rm &lt;file&gt;...&quot; to update what will be committed)
  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)
...
deleted:    vendor/phpdocumentor/reflection-common/phpstan.neon
deleted:    vendor/phpdocumentor/reflection-common/psalm.xml
...
deleted:    vendor/phpdocumentor/reflection-docblock/.dependabot/config.yml
deleted:    vendor/phpdocumentor/reflection-docblock/.github/workflows/push.yml
deleted:    vendor/phpdocumentor/reflection-docblock/Makefile
deleted:    vendor/phpdocumentor/reflection-docblock/composer-require-config.json
git add  vendor/phpdocumentor/reflection-docblock/composer.json
deleted:    vendor/phpdocumentor/reflection-docblock/phive.xml
deleted:    vendor/phpdocumentor/reflection-docblock/phpcs.xml.dist
deleted:    vendor/phpdocumentor/reflection-docblock/phpstan.neon
deleted:    vendor/phpdocumentor/reflection-docblock/psalm.xml
git add  vendor/phpdocumentor/reflection-docblock/src/DocBlock/StandardTagFactory.php
git add  vendor/phpdocumentor/reflection-docblock/src/DocBlock/Tags/Deprecated.php
git add  vendor/phpdocumentor/reflection-docblock/src/DocBlock/Tags/InvalidTag.php
git add  vendor/phpdocumentor/reflection-docblock/src/DocBlock/Tags/Since.php
git add  vendor/phpdocumentor/type-resolver/composer.json
git add  vendor/phpdocumentor/type-resolver/src/Types/Compound.php
git add  vendor/phpoffice/phpspreadsheet/CHANGELOG.md
git add  vendor/phpoffice/phpspreadsheet/composer.json
git add  vendor/phpoffice/phpspreadsheet/src/PhpSpreadsheet/Calculation/Calculation.php
git add  vendor/phpoffice/phpspreadsheet/src/PhpSpreadsheet/Calculation/Category.php
</code></pre>
<p>I wonder why so, as in root .gitignore I have:</p>
<pre><code>/node_modules
/public/hot
/public/storage
/storage/*.key
/vendor
/.idea


/__DOCS/
/__SQL/


package-lock.json
package.json


.env
.phpunit.result.cache
Homestead.json
Homestead.yaml
npm-debug.log
yarn-error.log

composer.lock
1.txt
</code></pre>
<p>I expected that line</p>
<pre><code>/vendor
</code></pre>
<p>made all changes in automatically generated  /vendor dir invisible for git.
And it worked in this way last time and seems I have not modified  root .gitignore  last monthes
Could you say what happened and which is valid format of root .gitignore  ?</p>
<p>Thanks!</p>
","0","11094437","",""
"63986701","","2020-09-21 05:36:00","0","45","<git><gitignore>","Having issue with .gitignore not ignoring files during push stage","<p>I realized after each git commit &amp; push, I am getting a list of .pyc, .exe, .son, txt, xml, .py and every other file that you can imagine.</p>
<p><a href=""https://i.stack.imgur.com/5erND.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/5erND.png"" alt=""enter image description here"" /></a></p>
<p>Therefore, I created a <code>.gitignore</code> file with <code>*.pyc *.exe</code>. Yet, I still get the same files on the source control console as you can see. I am not sure why this is happening nor why its not getting ignored.</p>
","3","","",""
"46059722","1790598","2017-09-05 16:39:13","0","84","<git><gitignore>","How to implement this gitignore scenario?","<p>TLDR: I want to ignore all files in the parent folder except contents of folder1 and folder2. In the possibility, folder1 or 2 contains jpg/png files, ignore those too.</p>

<p>This is what I currently have in a global .gitignore.</p>

<pre><code>*.jpg
*.png
/*
!/folder1
!/folder2
</code></pre>

<p>Thanks a lot!</p>

<p>example:</p>

<pre><code>/parent-folder
  -&gt; text1.txt (ignored)
  -&gt; text2.txt (ignored)
  -&gt;folder1 (NOT ignored)
    -&gt;ex-gf.png (ignored)
    -&gt;my-resume.docx (NOT ignored)
  -&gt;folder2 (NOT ignored)
    -&gt;summer-vacation2017.jpg (ignored)
    -&gt;my-grocery-list.xlsx (NOT ignored)
</code></pre>
","0","1790598","",""
"64022385","4212406","2020-09-23 06:42:07","0","613","<git><gitignore>","gitignore ignore all except config.xml file inside second-level directory?","<p>I googled but hard to find the proper solution.
If I have below files, how can I ignore all files except these three files?</p>
<ol>
<li>package-01/config.xml</li>
<li>package-02/config.xml</li>
<li>package-03/config.xml</li>
</ol>
<pre><code>./
|-- .git/
|-- .gitignore
|-- README.md
|-- config.xml
|-- configuration
|-- package-01/
|   |-- settings/
|   |   |-- id
|   |   `-- links
|   |-- config.xml
|   `-- other_files
|-- package-02/
|   |-- settings/
|   |   |-- id
|   |   `-- links
|   |-- config.xml
|   `-- other_files
|-- package-03/
|   |-- settings/
|   |   |-- id
|   |   `-- links
|   |-- external_packages/
|   |   |-- 1/
|   |   |   |-- settings.xml
|   |   |   |-- config.xml
|   |   |   `-- id
|   |   |-- 2/
|   |   |   |-- settings.xml
|   |   |   |-- config.xml
|   |   |   `-- id
|   |-- config.xml
|   `-- other_files
</code></pre>
<p>I tried this but failed.</p>
<pre><code>*
!.gitignore
!README.md
!/**/*.xml
!**/*.xml
!**.xml
!/*/*.xml
!*/*.xml
</code></pre>
","1","4212406","",""
"46089162","1596293","2017-09-07 06:20:19","4","113","<xcode><git><gitignore><swift-playground>","Can't ignore Playground files in git","<p>I've added a playground to my workspace which I want to be a part of the repo but I don't want to track changes to it. I've tried adding all the following to <code>.gitignore</code> but nothing works:</p>

<ol>
<li><code>./Playground.playground/*</code></li>
<li><code>Playground.playground/*</code></li>
<li><code>Playground.playground/Contents.swift</code></li>
</ol>

<p>Any suggestions?</p>
","1","1596293","",""
"46092883","7918928","2017-09-07 09:34:24","0","80","<git><gitignore>","I dont have a .gitignore file but dirs and files are being ignored","<p>I've searched my box. I have no global or local .gitignore file. the dir's and files are not in in .git/info/excludes</p>
<p>but if I <code>git status --ignored</code> my dir's are listed there. Even if I change the dir names they are still in the list of ignored items.</p>
<p>Any ideas would be handy</p>
<h2>edit</h2>
<pre><code># On branch master
# Initial commit.
#
# Ignored files:
#   (use &quot;git add -f &lt;file&gt;...&quot; to include in what will be committed)
#
#       dir1/
#       dir2/
nothing to commit (create/copy files and use &quot;git add&quot; to track)
</code></pre>
<p>yes there are files and folders in dir 1 and 2</p>
<p>I tried <code>git check-ignore dir1</code> No output was returned</p>
","14","7918928","",""
"64078282","14299925","2020-09-26 13:34:46","-2","89","<git><gitignore>","gitignore does not ignore a file","<p>I have <code>config.ts</code> on <code>./packages/dashboard/src/core/config.ts</code> path and I would like to ignore in git.</p>
<p>I put those into gitignore file and nothing happens, the file is not ignored.</p>
<pre><code>config.ts
./packages/dashboard/src/core/config.ts
packages/dashboard/src/core/config.ts
</code></pre>
<p>What is wrong? How to ignore this file to prevent changes in ?</p>
","1","14299925","0","0"
"46135834","6818332","2017-09-09 22:57:51","0","335","<git><github><gitignore>",".gitignore is not ignoring one specific folder","<p>I am developing a React Native project so there is a lot of crap that I don't actually need to push to the git repo. The <code>node_modules</code> is at the <strong>.gitignore</strong> file and it do not go to the repo as normal. The problem is that I do not need a folder called <em>build</em> too, that is inside of another folder called <em>ios</em>. So I created two <strong>.gitignore</strong> files, one I placed at the main directory with <code>node_modules</code> written, and the other one at the <em>ios</em> folder, with <code>build/</code> written. </p>

<p>The problem is that only the node_modules folder is ignored as you can see <a href=""https://i.stack.imgur.com/rbfLC.png"" rel=""nofollow noreferrer"">here</a>.</p>
","1","6818332","",""
"46141042","1711271","2017-09-10 13:09:19","2","856","<git><gitignore>","Ignoring files having different extensions with .gitignore","<p>I would like to ignore all files with extensions <code>*.mtx</code> or <code>*.otc</code> in a certain folder (<code>data/</code>) and all files with extension <code>*.pyc</code> in all subfolders. Will this <code>.gitignore</code> should work? </p>

<pre><code>/data/*.mtx
/data/*.otc
*.pyc
</code></pre>

<p>Is there a way to make it more compact? Apparently this doesn't work:</p>

<pre><code>/data/(*.mtx|*.otc)
*.pyc
</code></pre>
","6","1711271","0","0"
"64093714","14039739","2020-09-27 22:00:04","0","371","<git><git-bash><gitignore>","How to properly ignore files from git using .gitignore file?","<p>My assignment is requiring me to ignore two folders from git along with their contents. I have created a <code>.gitignore.txt</code> file and typed in the folders' names in the file:</p>
<p><a href=""https://i.stack.imgur.com/ZVBO9.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ZVBO9.jpg"" alt=""enter image description here"" /></a></p>
<p>I have also tried the above with a /* at end of file names and without any forward slash or asterisk at all. However, git seems to still recognize these folders. Here is the result I receive each time I use <code>git status</code> command in git-bash.</p>
<p><a href=""https://i.stack.imgur.com/t2wOL.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/t2wOL.jpg"" alt=""enter image description here"" /></a></p>
<p>git is still recognizing these folders since they are within the untracked files, correct? What do I need to do to have git ignore the folders completely?</p>
","4","14039739","",""
"64097672","14353101","2020-09-28 07:26:15","0","234","<django><git><gitignore>","gitignore how to exclude a table","<p>I have a question.</p>
<p>So I'm working on my Django project for school and it's almost done.</p>
<p>And also, I have to include a <code>.gitignore</code> file which looks like this:</p>
<pre><code>venv/*
.idea/*
db.sqlite3
</code></pre>
<p>Nothing fancy just simple.
My problem here is, that I have a table in db.sqlite3, and I need those 3 entries in my project. So when somebody merges my project, the entries in this table should exist.
Otherwise, you just have an emtpy table and then my function on my Website is not working.</p>
<p>I already googled for this, but I just found how to exlude files or folders.
So I hope there is a solution.</p>
","4","14353101","",""
"64126047","14363307","2020-09-29 19:04:57","0","191","<git><gitignore>",".gitignore does't ignore files properly","<p>I have a github repository with a few .c, .s, .txt files, a Makefile and a .vscode and two .dSYM directories which have been created during debugging. I want to ignore these last three files. My .gitignore is the following:</p>
<pre><code>*.vscode
*.dSYM
</code></pre>
<p>Both .dSYM files have a folder named Contents; my problem is that one (and only one!) of these folders is not ignored. Why does this happen? How can I solve this?</p>
<p><a href=""https://github.com/isabelfdez/libasm.git"" rel=""nofollow noreferrer"">Link</a> to my repository</p>
","2","14363307","",""
"64157054","9638062","2020-10-01 14:03:49","2","5232","<git><github><environment-variables><gitignore><environment>","How to store .env file in github?","<p>I have a node.js project with <code>.env</code> file in it. I pushed to github project, when in <code>.env</code> file was just a template. For example:</p>
<pre><code># Database credentials
DB_HOST=&quot;&quot;
DB_USER=&quot;&quot;
DB_PASSWORD=&quot;&quot;
DB_DATABASE_NAME=&quot;&quot;
</code></pre>
<p>Then I added <code>.env</code> file to <code>.gitignore</code>. Pushed again and now, when I filled <code>.env</code> file with credentials, <code>git status</code> command says</p>
<blockquote>
<p>modifed: .env</p>
</blockquote>
<p>How can I store a template of <code>.env</code> file in github and ignore it's changes?</p>
","1","9638062","",""
"46301811","2068362","2017-09-19 13:30:07","30","28902","<git><gitignore>","gitignore all files in folders but keep folder structure","<p>I have the following folder structure:</p>

<pre><code>/foo/
/foo/test.txt
/foo/.gitkeep
/foo/bar/test.txt
/foo/bar/.gitkeep
/foo/bar/baz/test.txt
/foo/bar/baz/.gitkeep
</code></pre>

<p>Now I want to exclude all files in the folder ""foo"" and all files in its subfolders (and subsubfolders), except all the .gitkeeps (so that the folder structure is kept). This should also work for more than 3 levels of subfolders.</p>

<p>The following gitignore-rules work:</p>

<pre><code>/foo/**
!/foo/**/
!/foo/**/.gitkeep
</code></pre>

<p>Can somebody explain, why this works? Is there a cleaner way of doing this?</p>
","2","2068362","0","0"
"64627809","1896006","2020-11-01 01:02:26","3","228","<git><gitignore>",".gitignore files based on their content","<p>I'm looking for a way to ignore files in git that have a certain path in their file. These are XML files that are all stored together, but some reference folders that are in .gitignore. I want to exclude the XML files that reference these folders.</p>
<p>Is this possible purely with .gitignore? I can imagine other ways to achieve this, like force keeping these files with a script, but that would not be favorable.</p>
","0","1896006","",""
"10048667","315168","2012-04-06 20:04:41","11","3585","<python><regex><filenames><gitignore><fnmatch>",".gitignore style fnmatch()","<p>What would be the simplest way to have .gitignore style fnmatch() with Python. Looks like that stdlib does not provide a match() function which would match a path spec against an UNIX style path regex.</p>

<ul>
<li><p>fnmatch() matches only pure filenames, no paths <a href=""http://docs.python.org/library/fnmatch.html?highlight=fnmatch#fnmatch"" rel=""noreferrer"">http://docs.python.org/library/fnmatch.html?highlight=fnmatch#fnmatch</a></p></li>
<li><p>glob() will perform directory listing, and does not provide match() true/false style function <a href=""http://docs.python.org/py3k/library/glob.html?highlight=glob#glob.glob"" rel=""noreferrer"">http://docs.python.org/py3k/library/glob.html?highlight=glob#glob.glob</a></p></li>
</ul>

<p>.gitignore have both paths and files with wildcards to be (black)listed</p>

<ul>
<li><p><a href=""https://github.com/miohtama/Krusovice/blob/master/.gitignore"" rel=""noreferrer"">https://github.com/miohtama/Krusovice/blob/master/.gitignore</a></p></li>
<li><p><a href=""http://linux.die.net/man/5/gitignore"" rel=""noreferrer"">http://linux.die.net/man/5/gitignore</a></p></li>
</ul>
","7","315168","0","0"
"64697414","561309","2020-11-05 12:40:41","2","34","<git><directory><gitignore>","Why is Git ignoring this directory that is not in .gitignore?","<p>I'm having a strange problem with a directory being ignored even though it's not in <code>.gitignore</code>. To be absolutely sure, I've even deleted <code>.gitignore</code> but that didn't make a difference.</p>
<p>Basically I had a directory &quot;CliClient&quot;, which after much refactoring was moved under a different directory. Now I've noticed that when this directory exists, git doesn't see it, but also cannot add it to the index, and cannot delete it.</p>
<p>See below:</p>
<p><strong>Checking that directory exists:</strong></p>
<pre><code>$ ll CliClient/
total 8.0K
drwxr-xr-x  2 4.0K Nov  5 12:31 .
drwxr-xr-x 11 4.0K Nov  5 12:31 ..
</code></pre>
<p><strong>Just to test, try to add the directory:</strong></p>
<pre><code>$ git add CliClient/
</code></pre>
<p><strong>No, it didn't do it:</strong></p>
<pre><code>$ git status
On branch lerna_migration
Your branch is up to date with 'origin/lerna_migration'.

nothing to commit, working tree clean
</code></pre>
<p><strong>So it's probably already added? So delete it:</strong></p>
<pre><code>$ git rm -r CliClient/
fatal: pathspec 'CliClient/' did not match any files
</code></pre>
<p>So it's there, not in .gitignore, not in the index, but invisible to git. I've tried many things, including <code>git check-ignore</code>, but that didn't help.</p>
<p>Any idea what could be the reason?</p>
","1","561309","",""
"64724723","13621796","2020-11-07 05:24:58","0","2306","<git><gitignore>",".DS_Store file is in .gitignore, but it keeps popping up in status","<p>I searched..I read all the answers on similar or even the same questions that I could find  here. I watched tutorials. It seems super easy and logical when it's happening in somebody's terminal. In mine, it's just not working. Apparently,I must be missing something super obvious.
I commited .gitignore, but .DS_Store still appears in status. Then I deleted .DS_Store using git rm --cached .DS_Store (just in case, even though It wasnt in my repo).
Nope. Now I'm seeing it appearing in staging area as &quot;changes to be commited =&gt; deleted: .DS_Store&quot;.
Is there a way to get rid of it completely? So it stops popping up in my status?</p>
<p>Here it is:</p>
<pre><code>Changes to be committed:
  (use &quot;git restore --staged &lt;file&gt;...&quot; to unstage)
        deleted:    .DS_Store

Changes not staged for commit:
  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
  (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)
        modified:   README.md
        modified:   assets/.DS_Store
        modified:   assets/stylesheets/main.css
        modified:   index.html
</code></pre>
","0","13621796","",""
"64728721","2854181","2020-11-07 14:28:28","1","183","<python><git><windows-10><gitignore>","Git is ignoring gitignore file under Windows 10","<p>Git is ignoring the folders in .gitignore file.
Here is my .gitignore : (env is a folder generated by venv in Python )</p>
<pre><code>#folders
env/**
pdfs/**


# files

#source files
/timeformat.py
/pdfreader.py
</code></pre>
<p>I already did : <code>git rm -r --cached .</code> then <code>git add .</code> but it's adding all the files under env/Lib/site-packages<br />
What is the problem ?</p>
<p><strong>EDIT :</strong></p>
<p>here is my directory structure :</p>
<p><a href=""https://i.stack.imgur.com/n5yuR.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/n5yuR.png"" alt=""enter image description here"" /></a>
<a href=""https://i.stack.imgur.com/Y1eii.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Y1eii.png"" alt=""enter image description here"" /></a></p>
","8","2854181","",""
"10066749","260127","2012-04-08 21:36:20","34","14975","<git><gitignore><git-tower>","git excludes vs ignores","<p>I use <a href=""http://www.git-tower.com/"">Tower</a> for using Git in Mac.
The settings in Tower has Ignores section which creates the .gitignore, but it has another section named ""Excludes"". And it seems like that one can use excludes with ""# git ls-files --others --exclude-from=.git/info/exclude"".</p>

<p><img src=""https://i.stack.imgur.com/wVt9K.png"" alt=""Tower screenshot""></p>

<p>What Excludes is for? Why one needs excludes when gitignore is available? </p>
","0","260127","0","0"
"64753841","8038345","2020-11-09 14:47:58","1","92","<git><gitignore>","How to git ignore a specific extension-less file","<p>How can I git ignore a specific extension-less file?</p>
<p>I have this file <code>program</code> (binary, without extension).
I want to ignore it from VCS.</p>
<p>But I cannot put <code>program</code> directly into <code>.gitignore</code> because it would ignore my <code>program</code> folder (which I don't want to git ignore)</p>
","1","8038345","",""
"28070617","1216867","2015-01-21 15:18:07","0","778","<git><gitignore><visual-studio-2015>","VS 2015 gitignore and setting files to untracked","<p>Started an asp.net 5 mvc project using Git with Team Project. Did not notice that wwwroot was included. Have now checked in various files but would like that root directory totally ignored. Does not seem possible to do this in the Team Explorer window.</p>

<p>Also, when using settings-repositories and changing .gitignore, I have tried to exclude this folder. But that does not seem to do the trick.
I see the new project.json file has an exclude section with wwwroot in it.</p>

<p>Since I cannot seem to unlink these files/folders from Git, I will probably delete them all for now and see what happens when they are restored.
...
Yes, that did the trick. But any comments or suggestions are welcome.</p>
","0","1216867","",""
"64805128","12706752","2020-11-12 13:46:41","-1","42","<git><file><path><annotations><gitignore>","Differences between path/file-ending annotation in gitignore","<p>I am currently working on a java project. While constructing my .gitignore I noticed multiple different annotations for file endings and paths.
I linked a picture with a few examples.</p>
<p>What is the difference between them?</p>
<p>Namely I noticed the following:</p>
<ul>
<li><code>.foo</code></li>
<li><code>*.foo</code></li>
<li><code>/*.foo</code></li>
<li>and finally <code>!**/src/...</code> (See image for this one)</li>
</ul>
<p><a href=""https://i.stack.imgur.com/4IFiY.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/4IFiY.png"" alt=""Different annotations examples"" /></a></p>
","0","12706752","",""
"64806493","14457310","2020-11-12 15:06:48","-3","330","<git><gitignore>","What does the dot . mean here in the gitignore","<p>I have searched online and on git website for this gitignore explanation but cant find an answer.</p>
<p>What does the dot <code>.</code> mean here in the gitignore line <code>.env.development.local</code>?</p>
<pre><code># misc
.DS_Store
.env.local
.env.development.local
.env.test.local
.env.production.loc
</code></pre>
","3","14457310","0","0"
"64807023","13407071","2020-11-12 15:39:15","1","113","<windows><git><visual-studio-code><gitignore>","Git still tracks files in gitignore file","<p>i am having the following problem with gitignore in windows (that i used in combination with vscode, if this info is important)</p>
<p>i tried a simple example in order not to complicate things.</p>
<p>my root folder contains:</p>
<pre><code>maininterface.py
.gitignore
logs/dev.log
</code></pre>
<p>my gitignore file has only one line:</p>
<pre><code>logs/
</code></pre>
<p>when typing git status i get the following:</p>
<pre><code>Untracked files:
  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)
        .gitignore
        logs/
        maininterface.py
</code></pre>
<p>Am I missing something? the directory logs should not be in the untracked files.<br />
I tried looking for solutions, many people suggest <code>git rm --cached logs</code>
This does not work for me, I get :</p>
<pre><code>fatal: pathspec 'logs' did not match any files 
</code></pre>
<p>(I also tried <code>git rm --cached logs/dev.log</code> , same problem)</p>
<p>BTW I haven't used git add on any of the files.</p>
<p>Thank you if you have a tip...</p>
","10","13407071","",""
"64815391","243516","2020-11-13 04:14:17","1","50","<git><gitignore>","Is there a command to ""roll up"" a tree of gitignores into one parent gitignore?","<p>Over time this large project has acquired quite a few .gitignore files scattered across its many directories. Adding a new .gitignore &quot;at the site&quot; is very handy when you're dealing with some new output folder or something, but it becomes hard to reason about.</p>
<p><strong>Is there a way to &quot;roll up&quot; all these disparate .gitignore files back into the .gitignore at the root of the project?</strong> The end result would be a single .gitignore project-wide, with all the other ad-hoc ones removed.</p>
<p>It would be extra special if I could roll up one subtree at a time, or to a common child, so that I can manage the changes a little bit more effectively, but I won't be choosy.</p>
<hr />
<p><strong>Concrete example:</strong></p>
<p>Before:</p>
<pre><code>root
|- .gitignore
|- subdir1
|  |- .gitignore
|  |- subdir3
|     |- .gitignore
|     |- ignored_file.txt
|- subdir2
   |- .gitignore
</code></pre>
<pre><code># the .gitignore in subdir3
/ignored_file.txt
</code></pre>
<p>After:</p>
<pre><code>root
|- .gitignore
|- subdir1
|  |- subdir3
|     |- ignored_file.txt
|- subdir2
</code></pre>
<pre><code># the .gitignore in root
/subdir1/subdir3/ignored_file.txt
</code></pre>
<p>Thanks for your time!</p>
","3","243516","0","0"
"64833739","11749004","2020-11-14 12:10:47","0","119","<firebase-realtime-database><gitignore><git-push><undo>","My gitignor file did not stop push to GitHub files","<p>I learn git and Github and now I added this rule</p>
<pre><code># misc
.env.production
.env.development
.env
</code></pre>
<p>But when I pushad to GitHub this gitignore file and both <code>.env.development</code> and prod. was pushed also very annoying I have to delete Firebase app I think.</p>
<p>What did I do wrong?</p>
","6","11749004","",""
"64836126","14638691","2020-11-14 16:31:52","0","70","<git><gitignore>","Ignore folders in git but not the files in them","<p>I have created a Java project with IntelliJ. The project structure looks like:</p>
<pre><code>rootfolder\projectname\src\*.java
</code></pre>
<p>And I would like to upload my Java classes to GitHub, but without <code>src</code> folder, like this:</p>
<pre><code>rootfolder\projectname\*.java
</code></pre>
","4","14638691","",""
"64846878","14643324","2020-11-15 16:27:48","0","102","<git><gitignore>","File ""A.gitgnore"" is not ignoring files","<p>I made a gitignore file called <code>A.gitignore</code> in my repo's root directory to ignore <code>.dbf</code> files and anything in a subdirectory called <code>NFIRS</code>.<br />
The gitignore content is two lines:</p>
<pre><code>*.dbf
NFIRS/
</code></pre>
<p>Now I committed and pushed this gitignore. After committing and pushing, whenever I make a <code>.dbf</code> file such as <code>test.dbf</code> in the root directory (filenames that have <em>never</em> been committed) GitHub Desktop still wants to track and commit this new file. <code>git add .</code> in a terminal window also fails to implement the gitignore. It also does not ignore newly created sub-dirs called <code>NFIRS</code> (after ensuring any previous tracking is cleared).</p>
<p>I've tried multiple times in terminal in the root directory:</p>
<pre><code>git rm -r --cached .
git add .
git commit -m &quot;test&quot;
</code></pre>
<p>and this does not fix the issue (so again, not the simple issue of .gitignore ignoring previously tracked files)</p>
<p>I'm a little at a loss for how .gitignore is supposed to work.</p>
","3","14643324","",""
"64850554","7959831","2020-11-15 22:43:02","0","28","<git><github><environment-variables><atom-editor><gitignore>","How to set up gitignore so file shows up as existing but doesnt change?","<p>I'm making a project using git and github and I have a .env file that I want to show as existing but not actually change contents.
So for example i have it set to default as</p>
<pre><code>KEY=&quot;&quot;
SECRET=&quot;&quot;
</code></pre>
<p>This content is on my remote repo and I have added the file to the .gitignore <em>after</em> I made the initial commit so that hopefully it won't stage any keys I added but will keep the initial content. The file changes do show up in my unstaged changes when I made an edit however. This also happens with a databse file.</p>
","2","7959831","",""
"10097648","1325159","2012-04-10 23:00:10","17","5631","<git><symfony><gitignore>","Setting up GIT for Symfony2 project: why add web/bundles folder to gitignore","<p>I am building my first Symfony2 project and I may be confused on the purpose of the <code>web/bundles</code> folder. According to Symfony2 documentation they say this is where static data goes like js libraries, css and images. This all makes sense but while you are still building that base layout isn't it a little annoying to have <code>/web/bundles</code> on the ignore list? In fact why even have it on the ignore list? bootstrap, parameters, cache, etc all makes sense to have on ignore because you don't want to cross development settings with production settings.</p>

<p>This is what symfony instructs you to add to the gitignore:</p>

<pre><code>/web/bundles/
/app/bootstrap*
/app/cache/*
/app/logs/*
/vendor/
/app/config/parameters.yml
</code></pre>
","0","1325159","0","0"
"64853986","12103271","2020-11-16 07:17:29","0","169","<git><github><gitignore>",".gitignore not preventing a directory being pushed to github","<p>I am building a react native application in which I don't want to push android and ios directories to github. No matter what I am writing in <code>.gitignore</code> file, these two directories are always being pushed to the github. Following are the patterns that I have used in <code>.gitignore</code>:</p>
<pre><code>1. android 
   ios
2. /android/*
   /ios/*
3. android/
   ios/
4. /android
   /ios
</code></pre>
<p>Please tell me how can I prevent these folders from going to github?</p>
<p>Thanks!!</p>
<p>Guys the numbering and indentation is not real. I have used them just to depict how many ways I have tried.</p>
","3","12103271","",""
"64875111","6068335","2020-11-17 12:15:21","0","52","<git><gitignore>","git 2 version of file in local and remote","<p>I have a config.php file with my configuration (for example, the MySQL credentials).
Those credentials are different in my local version and in the production server (in the local MySQL, I use user root, and in the production server, the user max).
I want to manage it with git. I need to push and pull every file but not the config.php.
I found this command :</p>
<pre><code>git update-index --assume-unchanged config.php 
</code></pre>
<p>but can I change the remote config.php file (for example, if I change the remote password)? And how to change the local config.php file without affecting the remote?
Should I put this file to the .gitignore?</p>
","0","6068335","",""
"28101020","1056563","2015-01-23 00:15:55","15","20461","<git><gitignore>","git status is showing ""Changes not staged for commit"" for files listed in .gitignore?","<p>Let is look at the .gitignore file - to which I added mllib/pom.xml and pom.xml and even .gitignore (which should not be necessary - so something is amiss..):</p>

<pre><code>$head .gitignore
.gitignore
mllib/pom.xml
pom.xml
</code></pre>

<p>So then let's see what files git wants to add:</p>

<pre><code>$ git status
Changes not staged for commit:
  (use ""git add &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

    modified:   .gitignore
    modified:   mllib/pom.xml
    modified:   
</code></pre>

<p><strong>UPDATE</strong> There are two comments about not ""ignoring the .gitignore"". But after removing the .gitignore again we get this:</p>

<pre><code>Changes not staged for commit:
  (use ""git add &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

    modified:   .gitignore
    modified:   mllib/pom.xml
</code></pre>

<p>So (a)  .gitignore is showing up and (b)  the specific file that really is important not to add to a commit - mllib/pom.xml - <em>also</em> shows up.</p>
","6","1056563","0","0"
"64877051","14623904","2020-11-17 14:19:10","0","470","<git><gitignore><ls>","Can't get a list with the .gitignore files in my project","<p>i'm in a project for my class and i need to list all files that a are being ignored by my gitignored files from a sub folder. i used  git check-ignore, but i don't get the hidden files (files that begin with .</p>
<p>here is the question :</p>
<blockquote>
<p>Write a short shell script that will return the list of existing ignored files in your git repository that are currently present in your local repository.</p>
</blockquote>
<p>if that helps the git version we are using in this project is 2.20</p>
","1","14623904","",""
"64896550","7195196","2020-11-18 15:50:47","0","14","<markdown><syntax-highlighting><gitignore><dockerignore>","How is .gitignore and .dockerignore language named and how to tell code block in markdown to use highlighting for it?","<p>I am writing a <code>README.md</code> for a program that I am developing at work. I would like it to be shown at the program's GitLab repository page. The program automatically prints files that are in given folder and then moves them to another folder. I developed a simple gitignore-like function that makes some of the files (specified in a file called <code>.printignore</code>) being ignored. I wanted to write some examples on how to structure the <code>.printignore</code> file to the <code>README.md</code> file.</p>
<p>I know I can write, for example, <code>js</code> or <code>python</code> right after the opening <code>```</code> to use the syntax for a specific language. However, I am unable to find out how the gitignore-like language is called. I could use some other language that formats at least comments, but if it is possible I would rather not.</p>
<p>Does the marking language of <code>.gitignore</code> and <code>.dockerignore</code> have some specific name? Is it possible to tell the markdown language to use its syntax?</p>
","3","7195196","",""
"46383506","6287968","2017-09-23 19:31:22","6","7295","<git><echo><gitignore><git-shell>","Add files to .gitignore directly from git shell","<p>I'm trying to add a specific file to .gitignore directly from git shell.  File to ignore is <code>token.mat</code></p>

<p>If I type:</p>

<pre><code>touch .gitignore
</code></pre>

<p>and then manually open .gitignore with a text editor and add </p>

<pre><code>token.mat
</code></pre>

<p>save and close, it works, git ignores it (when I type git status at the git shell I no longer see token.mat)</p>

<p>However at the git shell if I type:</p>

<pre><code>touch .gitignore
echo 'token.mat' &gt;&gt; .gitignore
</code></pre>

<p>then git does not ignore token.mat, when I type git status I still see it.  However when I open .gitignore with a text edit I see token.mat listed and it looks exactly the same as when I add it manually.</p>

<p>Does anyone know why this is, or how I can add files to .gitignore directly from the git shell?</p>

<p>Thanks for any help in advance!!</p>

<p>Other details:</p>

<ul>
<li>Windows 7 Professional, service pack 1  </li>
<li>git version: 2.5.3.windows.1</li>
<li>text editor: Notepad ++</li>
</ul>
","1","6287968","0","0"
"46394340","886569","2017-09-24 20:04:02","3","86","<javascript><git><gitignore>","Ignore all subdirectories except one in .gitignore","<p>I am trying to setup gitignore to exclude all subdirectories except for 2. I have included ~!~ for the two i want to include but Sourcetree does not pick it up.</p>

<p>Here is my relevant gitignore</p>

<pre><code># .gitignore
node_modules/
wp-content/plugins/
wp-content/upgrade/
!wp-content/plugins/export-tool
!wp-content/plugins/darwin_checkout_tracking
</code></pre>

<p>The two files were set to be included just not. Before they were excluded.</p>
","1","886569","0","0"
"10143175","51831","2012-04-13 14:54:43","4","12761","<git><ignore><gitignore>","How to ignore a file or directory in git, be it tracked, untracked or even part of commit","<p>I want to completely ignore a part of a git repository. The directory is currently tracked in the repository and I'd like to ensure that</p>

<ul>
<li>whenever anybody changes its contents in the upstream repository, I don't get any merge conflicts even if my copy is changed too.</li>
<li>whenever I change its contents, any commits I make won't reflect these changes</li>
</ul>

<p>I don't care particularly about the actual contents.</p>

<p>The problem arises with files automatically generated during build. Unfortunately, someone happened to commit them to the repository, but they cause build errors due to different paths etc. when used on different machine than their creator and consequently nasty merge conflicts.</p>

<p>AFAIK, <code>.gitignore</code> won't work for this purpose, as it only applies to untracked files.</p>
","0","51831","",""
"64961003","13823281","2020-11-23 00:08:26","0","164","<git><gitignore>","Is there a way to push specified files in the .gitignore file to origin?","<p>I don't want some files to be tracked by git and I'm excluding them with a .gitignore file. but I want to push them to the origin branch because they are necessary when someone clones the project.<br>
Now the question is can I do this without adding and committing the excluded files. I found <a href=""https://stackoverflow.com/questions/11788229/how-do-i-push-files-specified-in-gitignore"">this</a> answer on StackOverflow. but I guess maybe git has a better solution for this.</p>
","1","13823281","",""
"65255087","10283846","2020-12-11 16:29:14","0","580","<git><github><gitignore>","Stop git from updating remote file","<p>I got a git repository where I got several files. (Actually it's my <a href=""https://adventofcode.com/"" rel=""nofollow noreferrer"">Advent of Code</a> repository)</p>
<p>In this repository is a file which I want to keep in the GitHub remote but I don't want git to update it, even if this file changes locally. Also I want this behavior automatically on every machine where I clone this repository to.</p>
<hr />
<p>So basically these steps:</p>
<ol>
<li>Create file and add initial content (v1)</li>
<li>Commit and push file to remote branch</li>
<li><strong>Do something that lets git ignore all changes to this file on every machine</strong></li>
<li>Change the file content (v2)</li>
</ol>
<p>Now I got the file in the remote (v1) and locally (v2) but I don't want to see anything about this file when I run <code>git status</code>. Also if I clone this repository (with file v1) to another machine and make changes to the file (now v3), I don't want to see anything in <code>git status</code> about this file on the other machine.</p>
<p>To provide an example: I want to add the file which will contain my session cookie to GitHub. Obviously I don't want to push my session cookie to GitHub, just the a placeholder or something. But when I run the program, it must contain the right session cookie, so I have to update the file with the actual cookie. Now I don't want git to update this file to GitHub. And when I clone this repository to another machine, I want it to contain the placeholder like in the remote which I can then update manually. Also git should not want to update the file from this machine either.</p>
<hr />
<p>First I tried adding it to .gitignore and running <code>git rm --cached myfile</code> but then git wants to delete this file from the remote as well.</p>
<p>I tried with <code>git update-index --assume-unchanged myfile</code>. Which technically does what I want, just not on all other machines because it only affects my local git repository.</p>
<p>Is there even a way I can accomplish what has to be done in step 3?</p>
","2","10283846","",""
"28466504","218312","2015-02-11 23:20:45","0","125","<git><gitignore>","Find out how git removed a file that should be ignored","<p>I currently have a git repo set up as a bare repository that then <code>git checkout -f</code>s to a public folder for publishing. Recently a commit was made that seemed to delete a file that is in .gitignore.</p>

<p>Is there a way to see how that file was deleted? Pulling down these changes to my local deleted the file on my machine too:</p>

<pre><code>nic@TALRASHA:/mnt/code/repository$ git pull
remote: Counting objects: 42, done.
remote: Compressing objects: 100% (20/20), done.
remote: Total 26 (delta 18), reused 9 (delta 6)
Unpacking objects: 100% (26/26), done.
From ssh://[server-address]/var/www/vhosts/thewebsite/repository
   f470eff..82dc3bf  live       -&gt; server/live
Updating f470eff..82dc3bf
Fast-forward
 application/views/templates/owners/default.php |  20 +++++++++++---------
 layout/owners/images/sprites-mobile-pages.png  | Bin 0 -&gt; 89606 bytes
 layout/owners/js/owners.js                     |  44 ++++++
 src/less/layout/owners/dashboard.less          |  25 +++++++++++++++----
 4 files changed, 76 insertions(+), 13 deletions(-)
 create mode 100644 layout/owners/images/sprites-mobile-pages.png
</code></pre>

<p>Running <code>git log --follow -- filename</code> returns blank result.
Running <code>git ls-files filename --error-unmatch</code> returns ""error: pathspec 'filename' did not match any file(s) known to git.""</p>
","3","218312","",""
"28477334","1251684","2015-02-12 12:20:11","3","1029","<vagrant><ubuntu-14.04><gitignore>","Global .gitignore within vagrant","<p>Steps below work fine when I want to ignore a file globally in Linux however when I SSH into vagrant and run <code>git status</code> I can still see <code>.idea/</code> as ""Untracked"". What should I do in order to help vagrant picking  up these global settings?</p>

<p>I placed <code>.idea/</code> in <code>.gitignore</code> file as created below.</p>

<pre><code>bc@bc:~$ sudo nano .gitignore
bc@bc:~$ git config --global core.excludesfile /home/bc/.gitignore
</code></pre>
","17","1251684","0","0"
"28477631","2750204","2015-02-12 12:35:05","0","215","<git><jupyter-notebook><gitignore>","How to commit a file that defies a pattern in .gitignore?","<p>I wan't to ignore every IPython Notebook found on my project so I put <code>*.ipynb</code> in .gitignore.</p>

<p>However, I would like to commit some specific *.ipynb files that will accompany a release (master branch). If possible, I would like git not to continue tracking those files after the commit, but I wouldn't mind if it does.</p>
","1","2750204","",""
"65274465","7204583","2020-12-13 10:18:35","-2","36","<git><gitignore><git-add>","Set git globally add certain files of type","<p>I want to setup git to stage only certain files of type.
With</p>
<pre><code>git add * 
</code></pre>
<p>in basic dir, i must stage only the files of type cpp,h,txt,html.
How i must do this?</p>
","2","7204583","",""
"28491912","3696238","2015-02-13 03:19:45","0","2226","<git><gitignore>","Git add ignored files in .gitignore","<p>I have created a new repository on Bitbucket and created a gitignore file for the repo. However, when I try to <code>git add --all</code> from bash, it also adds the files that should be ignored. Below is the gitignore file that I am using. Why does it not ignore the files when I issue command <code>git add</code>?</p>

<pre><code>    # Created by https://www.gitignore.io

### VisualStudio ###
## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
build/
bld/
[Bb]in/
[Oo]bj/

# Roslyn cache directories
*.ide/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

#NUNIT
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opensdf
*.sdf
*.cachefile

# Visual Studio profiler
*.psess
*.vsp
*.vspx

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding addin-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# NCrunch
_NCrunch_*
.*crunch*.local.xml

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# TODO: Comment the next line if you want to checkin your web deploy settings 
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config

# Windows Azure Build Output
csx/
*.build.csdef

# Windows Store app package directory
AppPackages/

# Others
*.Cache
ClientBin/
[Ss]tyle[Cc]op.*
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.pfx
*.publishsettings
node_modules/
bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup &amp; report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings

# Microsoft Fakes
FakesAssemblies/
</code></pre>
","5","3696238","",""
"28499415","874701","2015-02-13 12:14:27","5","2166","<git><gitignore>","ignore files ending with numbers with 0-3 digits","<p>This question must have been asked before, but I was not able to find an answer.<br>
I want to use <code>.gitignore</code> to ignore all of the following files:</p>

<pre><code>dsmodelext.c
dsmodelext1.c
dsmodelext2.c
dsmodelext23.c
dsmodelext107.c
</code></pre>

<p>Currently I put four lines in my <code>.gitignore</code> file:</p>

<pre><code>dsmodelext.c
dsmodelext[0-9].c
dsmodelext[0-9][0-9].c
dsmodelext[0-9][0-9][0-9].c
</code></pre>

<p>Is there a way to express the same on a single line?</p>
","0","874701","",""
"28524300","3114742","2015-02-15 08:29:45","3","4981","<gitignore>","correct usage of .gitignore (for file types)","<p>when I type git status I get the following message:</p>

<pre><code>Changes not staged for commit:
  (use ""git add &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

    modified:   .DS_Store
    modified:   README.txt
    modified:   lib/PriceSeries.rb

Untracked files:
  (use ""git add &lt;file&gt;..."" to include in what will be committed)

    MM8 Prices.pdf
    prices from EH.xlsx
</code></pre>

<p>I want to be able to say <code>git add .</code>, without adding the untracked files. I believe that the .gitignore file is supposed to be for this. My .gitignore file (in the .git folder) looks like this:</p>

<pre><code>#Ignore all xlsx files
.xlsx

#Ignore all pdf file
.pdf
</code></pre>

<p>What am I doing wrong?</p>
","2","3114742","",""
"65323226","1009248","2020-12-16 12:25:19","0","508","<git><gitignore>","gitignore: Difference between *.o and /**.o","<p>gitignore: What is the difference if any between <code>*.o</code> and <code>/**.o</code>?</p>
<p><code>*.o</code>: According to the documentation, this will match this file extension in all repository</p>
<p><code>/**.o</code>: This is globbing with the same meaning</p>
","0","1009248","",""
"28536890","4570963","2015-02-16 08:01:12","0","169","<git><repository><gitignore>","Git - creating repository with gitignore","<p>Every time I set up new project I have the same problem, but now It's time to do this right.</p>

<p>In my .gitignore I have paths like this:
<br>/assets/css/*
<br>/assets/images/*
<br>/assets/js/*
<br>/system/cache/*
<br>...etc.</p>

<p>Now when creating and pushing to repository those paths are missing, so for example, there is no images, css, js folder in repository and when I pull the repository from other computer those files/folders are missing and the system doesn't work.</p>

<p>I would like to achive that those paths are on repository but it's files are ignored. </p>

<p>Any suggestion on how to start this repository would be more than welcome.</p>

<p>Cheers</p>
","0","4570963","",""
"28539446","301496","2015-02-16 10:35:41","12","29246","<git><gitignore>","gitignore all files (specific filetype) in a directory and subdirectories","<p>What's the right way to ignore a certain filetype in a certain directory and all subdirectories in it?</p>

<p>Example: ignore all <code>.xml</code> files in <code>master/xyz/</code> and all subdirectories in <code>master/xyz/</code>.</p>

<p>I'm not sure which of the following two approaches is the right one...</p>

<pre><code>master/xyz/*/*.xml

master/xyz/**/*.xml
</code></pre>

<p>Which one should I use?</p>

<p>(I use Git 1.9.1)</p>
","1","301496","0","0"
"28543596","2052564","2015-02-16 14:26:51","14","14730","<git><gitignore><git-commit>","Git - Commit file in .gitignore","<p>I want to commit and push two new files that are inside a folder that is listed in the project's .gitignore. I figure I can just change the .gitignore file, but then I would require two commits: one commit to push the two new files, and a second commit to reset the .gitignore. I'd like to do this in one commit if possible.</p>

<p>Is there any way to commit &amp; push a specific file that is ignored?</p>
","1","2052564","0","0"
"65639119","6844235","2021-01-09 03:40:00","2","371","<git><gitignore>","Function of ./ (dot slash) in .gitignore?","<p>I recently came across a <a href=""https://github.com/web2py/web2py/blob/master/.gitignorehttps://unix.stackexchange.com/questions/397524/what-does-the-mean-dot-slash-in-linux"" rel=""nofollow noreferrer"">.gitignore file</a> that started some newlines with <code>./</code>. I had no idea what those <code>./</code>s did, and I was very surprised to find out that this was both a) a seemingly novel question, and b) very hard to find answers for.</p>
<p>I've seen <a href=""https://unix.stackexchange.com/questions/397524/what-does-the-mean-dot-slash-in-linux"">these</a> <a href=""https://stackoverflow.com/questions/6331075/why-do-you-need-dot-slash-before-executable-or-script-name-to-run-it-in-bas"">related</a> questions, but the function of <code>./</code> in gitignores seems to be different from that in the bash terminal.</p>
<p>My testing seems to indicate that <code>./</code> just doesn't do anything. Given a folder structure:</p>
<pre><code>C:.
│   .gitignore
├───bar
│       bar0.txt
├───baz
│       baz0.txt
└───foo
        foo0.txt
</code></pre>
<p>And a .gitignore</p>
<pre><code># .gitignore
./foo
./foo/*
./foo/
bar
/baz
</code></pre>
<p>If I do <code>git add -A</code> and <code>git status</code>, only these files are tracked:</p>
<pre><code>new file:   .gitignore
new file:   foo/foo0.txt
</code></pre>
<p>So, what is the purpose of <code>./</code>?</p>
<p>Edit: I'm on Windows.</p>
","0","6844235","",""
"28878132","1354768","2015-03-05 12:42:36","2","1655","<git><jenkins><gitignore>",".gitignore for all except Jenkins job config files","<p>I'm using this <code>.gitignore</code> in the Jenkins directory:</p>

<pre><code>#Ignore everything
*
#Don't ignore directories
!*/
#Don't ignore these files
!/.gitignore
!jobs/*/config.xml
!jobs/**/modules**/config.xml
</code></pre>

<p>But .gitignore files in subfolders aren't ignored. I want to except only the root .gitignore.</p>
","0","1354768","0","0"
"47113610","4295477","2017-11-04 17:39:29","1","158","<git><terminal><gitignore>","gitignore everything except repeated sub-directory","<p>I have the following directory structure:</p>

<pre><code>./
├── proj-1
│   ├── README.md
│   ├── src/
│   └── test/
└── proj-2
    ├── README.md
    ├── src/
    └── test/
</code></pre>

<p>How can I ignore everything except for the <code>src/</code> directories using just one <code>.gitignore</code> file in the root directory?</p>

<p>I've tried:</p>

<pre><code>*
!.gitignore
!/*/src/
!/*/src/*
</code></pre>

<p>But that doesn't seem to pick up the directories I want after running <code>git status</code>.</p>

<p>Any tips?</p>
","2","4295477","",""
"47115713","4885518","2017-11-04 21:15:56","-2","175","<git><directory><repository><gitignore><change-tracking>","How to keep directory in git but not track its changes?","<p>Ok, so I'm new to git. I've just created a project, initialized it as a repository and linked it to bitbucket. I'm using NetBeans, and whenever I create a project with NB, it includes a directory called nbproject. I added the directory to .gitignore but the thing is, when a collaborator clones the repo, NB doesn't recognize it as a project because of the missing nbproject folder. Now, this folder, because is specific to each developer, shouldn't have changes tracked. Even when I tried to clone the repo from my laptop I couldn't open the project (I had to copy the nbproject folder from another project into the cloned repo and this is a waste of time). How can I initially push a directory so everybody can open the project without problems but then not track its changes? Sorry for my english. Also, if you could recommend a book, course, tutorial or any resource to learn git, that would be really helpful, thanks.
EDIT: I also read that if i write to .gitignore <code>myfolder/</code> then it will ignore all folders with that name at any level. What if i want a specific myfolder folder to be ignored?</p>
","1","4885518","",""
"28901718","3585633","2015-03-06 15:12:00","1","173","<git><github><gitignore>",".gitignore pattern format ** doesn't work","<p>I'm trying to ignore some folders in my .gitignore with the specific pattern format <code>/**/</code> (I found the docs here : <a href=""http://git-scm.com/docs/gitignore"" rel=""nofollow"">http://git-scm.com/docs/gitignore</a>) like this :</p>

<pre><code>src/**/Entity/*.php~
</code></pre>

<p>But when I do a <code>git status</code> in the terminal, It return to me this:</p>

<pre><code>Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       src/AVC/MediasBundle/Entity/CapturePhotoVideo.php~
#       src/AVC/MediasBundle/Entity/CodeReconnaissanceVocale.php~
#       src/AVC/MediasBundle/Entity/CodeTraduction.php~
#       src/AVC/MediasBundle/Entity/DetailTransaction.php~
#       src/AVC/MediasBundle/Entity/Langue.php~
#       src/AVC/MediasBundle/Entity/Media.php~
#       src/AVC/MediasBundle/Entity/MediaLangue.php~
#       src/AVC/MediasBundle/Entity/Offre.php~
#       src/AVC/MediasBundle/Entity/QualiteVideo.php~
#       src/AVC/MediasBundle/Entity/SousTitre.php~
#       src/AVC/MediasBundle/Entity/Transaction.php~
#       web/images/logo_black.svg
</code></pre>

<p>Or each folder in <code>src/AVC/MediasBundle/Entity/....php~</code> shouldn't appear ...</p>

<p>But if in my .gitignore I replace le line <code>src/**/Entity/*.php~</code> by this line <code>src/AVC/MediasBundle/Entity/*.php~</code> everything works good !</p>

<p>Why doesn't the pattern format <code>**</code> work here?</p>
","2","3585633","",""
"65671922","3964397","2021-01-11 17:41:56","1","522","<git><gitignore><git-pull>","Is it possible to use "".gitignore"" from the remote during a pull?","<p>I have a situation where some files that were previously checked into Git now need to be ignored. To ignore them I added the files to &quot;.gitignore&quot; and did the following:</p>
<pre><code>git rm -r --cached .
git add --all
git commit -m &quot;Removed files from git tracking that should be ignored&quot;
git push
</code></pre>
<p>Now I have a situation where I need to pull these &quot;.gitignore&quot; changes to another server, but when I do a <code>git pull</code> the files that were just added to &quot;.gitignore&quot; are not ignored, and instead they get removed entirely!</p>
<p>I think what is happening is during the pull it is using the local &quot;.gitignore&quot; file that does not ignore these files... and it detects that these files are no longer in git so it just removes them. If I add the files back manually and do another git pull then it begins working properly (now that the correct &quot;.gitignore&quot; file is on the server.)</p>
<p>Is there any way to tell the <code>git pull</code> to use the &quot;.gitignore&quot; file from the remote server instead of the local file that way these files get properly ignored and do not get removed on a git pull?</p>
","4","3964397","0","0"
"65674389","18149","2021-01-11 20:54:33","0","194","<git><glob><gitignore>","Adding a file to .gitignore with a $ in its filename?","<p>How do you <code>.gitignore</code> a file with a <code>$</code> in its filename?</p>
<p>Does it need to be escaped somehow?</p>
","0","18149","",""
"28908683","4018003","2015-03-06 22:22:31","1","120","<git><version-control><gitignore>","Ignored files from .gitignore is different on each developers computer","<p>I've followed the steps <a href=""https://stackoverflow.com/questions/1139762/ignore-files-that-have-already-been-committed-to-a-git-repository"">here</a> to remove all my files from git tracking and then added them back to be tracked. After running <code>git status --ignored</code> I could now see the files being ignored, which was what I was trying to fix. Originally, there were several files not being ignored.</p>

<p>Unfortunately, it seems as if that only fixes it on my machine. I committed the code to <code>origin master</code> but everyone downloaded the repository a few weeks ago. What is the best way to ensure everyone is ignoring the same files? Do they just need to run the commands I provided in the above link or is there an easier way to do this?</p>

<p>Also, what about several branches that were created prior to this change? When I checkout the existing branches they are not showing all the files that should be ignored. Do I need to apply this command to each one of the branches as well?</p>
","2","4018003","0","0"
"10989060","937084","2012-06-12 00:10:51","0","1175","<git><gitignore>",".DS_Store in .gitignore: unnecessary?","<p>I've read about people adding .DS_Store to their .gitignore files, but I did a quick test using Git 1.7.6 and I'm not sure it's even necessary. What do you think?</p>

<pre><code>johndoe@John-Does-MacBook-Pro:~$ mkdir test
johndoe@John-Does-MacBook-Pro:~$ cd test/
johndoe@John-Does-MacBook-Pro:~/test$ git init
Initialized empty Git repository in /Users/johndoe/test/.git/
johndoe@John-Does-MacBook-Pro:~/test$ touch foo.txt
johndoe@John-Does-MacBook-Pro:~/test$ touch .DS_Store
johndoe@John-Does-MacBook-Pro:~/test$ touch bar.txt
johndoe@John-Does-MacBook-Pro:~/test$ touch .DS_Store2
johndoe@John-Does-MacBook-Pro:~/test$ git status
# On branch master
#
# Initial commit
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   .DS_Store2
#   bar.txt
#   foo.txt
nothing added to commit but untracked files present (use ""git add"" to track)
johndoe@John-Does-MacBook-Pro:~/test$ git config -l
user.name=John Doe
user.email=johndoe@example.com
color.ui=true
core.editor=mate -w
core.repositoryformatversion=0
core.filemode=true
core.bare=false
core.logallrefupdates=true
core.ignorecase=true
</code></pre>
","4","937084","",""
"47142759","3886058","2017-11-06 17:43:25","0","92","<git><gitignore>","How to exclude a filetype with .gitignore except in the top-level?","<p>The way my project is set up all <code>.js</code> files are generated from other file types except the <code>.js</code> files in the top level of my repo.</p>

<p>How do I configure my .gitignore to ignore any <code>.js</code> file that is not in the top level of my repo?</p>

<p>I have tried</p>

<pre><code>/**/*.js
</code></pre>

<p>and</p>

<pre><code>**/*.js
!*.js
</code></pre>

<p>and several variations on those, but they seem to always just include or exclude all <code>.js</code> files.</p>
","0","3886058","",""
"28923160","4052494","2015-03-08 04:39:52","0","1040","<android><git><android-studio><gitignore>",".gitignore file for multiple Android projects under a master folder?","<p>I am having a problem building a .gitignore file for my Android Studio workspace, this is my folder setup: </p>

<p><strong><em>Android Workspace</em></strong>---<br>
-> <strong>School</strong>/Application1, Application2, etc.,<br>
-> <strong>Projects</strong>/Application1, Application2, etc. </p>

<p>Android Workspace is the master folder, School and Projects are used to organize my applications, They contain the folders created when I create a new Android Studio project.</p>

<p>I created a .gitignore file and placed it in Android Workspace, but it doesn't seem to be ignoring the files, I then tried placing two .gitignore files in each sub directory, but that didn't work either, so, my question is: How do I structure my .gitignore file to ignore the unnecessary Android Studio files from the Android Workspace folder no matter how deeply nested they are? Or do I have to place a .gitignore in each of the application's directory? </p>

<p>Thanks, and here's the .gitignore file I'm using (Generated by <a href=""https://www.gitignore.io/"" rel=""nofollow"">https://www.gitignore.io/</a>):</p>

<pre><code>### Android ###
# Built application files
*.apk
*.ap_

# Files for the Dalvik VM
*.dex

# Java class files
*.class

# Generated files
bin/
gen/

# Gradle files
.gradle/
build/
/*/build/

# Local configuration file (sdk path, etc)
local.properties

# Proguard folder generated by Eclipse
proguard/

# Log Files
*.log
</code></pre>
","3","4052494","",""
"65700088","12816408","2021-01-13 10:32:07","0","240","<git><gitignore>","gitignore: Ignore everything from subfolder except files with specific extensions","<p>I'm a bit overwhelmed with the amount of gitignore related questions on stackoverflow, but couldn't find one with the same problem I currently have:</p>
<p>This is my file structure:</p>
<pre><code>➜  main git:(master) ✗ tree
.
└── lib
    ├── folder1
    │   ├── sub1
    │   │   └── test.txt
    │   ├── test.md
    │   └── test.txt
    └── folder2
        ├── sub1
        │   └── test.txt
        ├── test.md
        └── test.txt

5 directories, 6 files
</code></pre>
<p>I would like to exclude the lib folder, but include every file with the extension &quot;.txt&quot;.</p>
<p>This is my current .gitignore file:</p>
<pre><code>➜  main git:(master) ✗ cat .gitignore
/lib/
!/lib/**/*.txt
</code></pre>
<p>Unfortunately, the whole lib folder is excluded and no textfile is included.</p>
<p>I also have tried countless of other patterns, but I end up either with the lib folder being ignored by git or a lib folder which is being included with all of its files.</p>
<p>It's also important to me that I don't have to specify each subfolder in my .gitignore (like <code>!folder1/</code>, <code>!folder2/</code>).</p>
","0","12816408","",""
"65700315","14489430","2021-01-13 10:45:08","0","66","<git><gitlab><gitignore>","Why isn't my .gitignore ignoring a folder?","<p>Using GitLab, need to hide the folder <code>.vscode</code>.</p>
<p>I copied the template from here: <a href=""https://gist.github.com/takekazuomi/10955889"" rel=""nofollow noreferrer"">https://gist.github.com/takekazuomi/10955889</a></p>
<p>I'm not sure what I'm doing wrong...</p>
<pre><code>## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.suo
*.user
*.sln.docstates

...

Task1/Task1/.vscode

...

</code></pre>
<p>Images of:</p>
<p><a href=""https://i.stack.imgur.com/4xGKr.png"" rel=""nofollow noreferrer"">Project File Structure</a></p>
<p><a href=""https://i.stack.imgur.com/ALPmi.png"" rel=""nofollow noreferrer"">GitLab Structure</a></p>
","1","14489430","",""
"47161212","3357935","2017-11-07 15:09:41","0","214","<git><naming-conventions><filenames><gitignore>","Why does .gitignore use an empty basename?","<p>Any time I see a <a href=""https://git-scm.com/docs/gitignore"" rel=""nofollow noreferrer""><code>.gitignore</code></a> file in a Git repository, I can't help but notice that, aside from the file extension, the filename is completely empty. Because of this, I've often seen new programmers run into the ""<a href=""https://stackoverflow.com/questions/35245658/you-must-type-a-file-name-error-thrown-when-i-create-a-gitignore-file-on-win""><em>You must enter a filename</em></a>"" error on Windows when learning Git for the first time.</p>

<p>Other standard files such as <code>README.md</code> include basenames, so it seems odd to exclude the name for <code>.gitignore</code>.</p>

<p>Is there a reason <code>.gitignore</code>'s basename is always empty? Would the file still work properly if it were given a filename like <code>project-name.gitignore</code>?</p>
","4","3357935","",""
"28947830","4016367","2015-03-09 17:07:53","0","510","<git><gitignore>","gitignore how to unignore Makefile","<p>How to unignore Makefile, the name of my Makefile is <code>Makefile</code>, I tried this:</p>

<pre><code>*
!Makefile
</code></pre>

<p>but my Makefile is always ignored.</p>
","1","4016367","",""
"66034140","1332468","2021-02-03 19:08:21","1","42","<git><gitignore>","How to have a file in git that syncs default but is ignored for commits?","<p>We have a file that contains some useful debug configurations for our software. We want this file to sync onto every developer's machine. But a developer may modify that file, and we really don't want the effects of a particular debug session to be checked in. Similar questions arise for default <code>.ini</code> files that are synched with git but we want to be able to modify during development but not check in.</p>
<p>We thought we could commit the file once and then add it to <code>.gitignore</code> file, but that does not work -- the file still shows up as changed in <code>git status</code>. We also found these commands:</p>
<pre><code>git update-index --assume-unchanged &lt;file&gt;
git update-index --skip-worktree &lt;file&gt;
</code></pre>
<p>But those must be run on every developer's machine -- they modify a local state, not a state that is checked into the remote repository to be synced to every machine.</p>
<p>Is there any way to have a file that is checked in and synced in its default state but can be modified without showing up as a diff?</p>
<p>The closest I could find to an answer is this
<a href=""https://stackoverflow.com/questions/37933310/git-ignore-a-file-from-future-commits-but-leave-that-on-repo"">Ignore a file from future commits but leave that on repo</a>, but that doesn't keep the file from looking like a diff on the developer's machine.</p>
","1","1332468","",""
"29287137","1061892","2015-03-26 19:22:48","0","1138","<ios><xcode><gitignore>","Xcode .gitignore files within directories","<p>I am looking to <code>.gitignore</code> my plist file found within a subdirectory within my project. When I ignore individual files at the root level where <code>.gitignore</code> is located I have no problems with the exclusion, but when I try to exclude files within the a subdirectory I can't seem set up the proper way to exclude this and my file still appears. I think what is throwing me off the most is the way that my Xcode projects appear in my finder compared to my Xcode program. In Xcode, my <code>.plist</code> appears within a <code>Supporting Files</code> folder. Once would assume that this would mean my gitignore request would be <code>/app-name/Supporting Files/Info.plist</code>, but in the finder, there is no <code>Supporting Files</code> folder, just <code>Info.plist</code>.</p>

<p>Any advice as to what I should do?</p>

<p><img src=""https://i.stack.imgur.com/G7wXR.png"" alt=""Xcode""></p>

<p><img src=""https://i.stack.imgur.com/KPGdn.png"" alt=""Folders""></p>

<p>Should my .gitignore look like:</p>

<p><code>facebook-login-template/Info.plist</code></p>

<p>or</p>

<p><code>/facebook-login-template/Supporting Files/Info.plist</code></p>

<p>or should it be something else?</p>
","0","1061892","",""
"66070586","10050159","2021-02-05 21:07:58","1","817","<python><django><github><pycharm><gitignore>","How to share project to Github via PyCharm such that it does not include .gitignore files","<p>I cannot figure out how to share my PyCharm project with Github so that it does not include <code>.gitignore</code> files. I have read solutions from other posts, and tried them, and the problem persists.</p>
<p>What I've tried:</p>
<ul>
<li>Deleting the repository from Github:   #To start over</li>
<li>Removing path to previously existing Github repo in PyCharm version:
#To disconnect Pycharm GitHub connection</li>
<li><code>git remote remove origin</code>: #To remove all references to remote repo</li>
<li><code>git rm -r --cached .</code> : #To remove all files from git</li>
<li><code>git add .</code>: #To add files back to git *note: <code>.gitignore</code> already exists so this step is done after</li>
<li>installed ignore</li>
<li>Then, sharing with Github...</li>
</ul>
<p>Yet it is still including files listed in <code>.gitignore</code>.  What am I doing wrong?</p>
<p><code>.gitignore</code></p>
<pre><code>
# Created by https://www.toptal.com/developers/gitignore/api/python,django,intellij,macos
# Edit at https://www.toptal.com/developers/gitignore?templates=python,django,intellij,macos

### Django ###
*.log
*.pot
*.pyc
__pycache__/
local_settings.py
db.sqlite3
db.sqlite3-journal
media

# If your build process includes running collectstatic, then you probably don't need or want to include staticfiles/
# in your Git repository. Update and uncomment the following line accordingly.
# &lt;django-project-name&gt;/staticfiles/

### Django.Python Stack ###
# Byte-compiled / optimized / DLL files
*.py[cod]
*$py.class

# C extensions
*.so

# Distribution / packaging
.Python
build/
develop-eggs/
dist/
downloads/
eggs/
.eggs/
lib/
lib64/
parts/
sdist/
var/
wheels/
pip-wheel-metadata/
share/python-wheels/
*.egg-info/
.installed.cfg
*.egg
MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
*.manifest
*.spec

# Installer logs
pip-log.txt
pip-delete-this-directory.txt

# Unit test / coverage reports
htmlcov/
.tox/
.nox/
.coverage
.coverage.*
.cache
nosetests.xml
coverage.xml
*.cover
*.py,cover
.hypothesis/
.pytest_cache/
pytestdebug.log

# Translations
*.mo

# Django stuff:

# Flask stuff:
instance/
.webassets-cache

# Scrapy stuff:
.scrapy

# Sphinx documentation
docs/_build/
doc/_build/

# PyBuilder
target/

# Jupyter Notebook
.ipynb_checkpoints

# IPython
profile_default/
ipython_config.py

# pyenv
.python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
__pypackages__/

# Celery stuff
celerybeat-schedule
celerybeat.pid

# SageMath parsed files
*.sage.py

# Environments
.env
.venv
env/
venv/
ENV/
env.bak/
venv.bak/
pythonenv*

# Spyder project settings
.spyderproject
.spyproject

# Rope project settings
.ropeproject

# mkdocs documentation
/site

# mypy
.mypy_cache/
.dmypy.json
dmypy.json

# Pyre type checker
.pyre/

# pytype static type analyzer
.pytype/

# profiling data
.prof

### Intellij ###
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio, WebStorm and Rider
# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# User-specific stuff
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/**/usage.statistics.xml
.idea/**/dictionaries
.idea/**/shelf

# Generated files
.idea/**/contentModel.xml

# Sensitive or high-churn files
.idea/**/dataSources/
.idea/**/dataSources.ids
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml
.idea/**/dbnavigator.xml

# Gradle
.idea/**/gradle.xml
.idea/**/libraries

# Gradle and Maven with auto-import
# When using Gradle or Maven with auto-import, you should exclude module files,
# since they will be recreated, and may cause churn.  Uncomment if using
# auto-import.
# .idea/artifacts
# .idea/compiler.xml
# .idea/jarRepositories.xml
# .idea/modules.xml
# .idea/*.iml
# .idea/modules
# *.iml
# *.ipr

# CMake
cmake-build-*/

# Mongo Explorer plugin
.idea/**/mongoSettings.xml

# File-based project format
*.iws

# IntelliJ
out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Cursive Clojure plugin
.idea/replstate.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties

# Editor-based Rest Client
.idea/httpRequests

# Android studio 3.1+ serialized cache file
.idea/caches/build_file_checksums.ser

### Intellij Patch ###
# Comment Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-215987721

# *.iml
# modules.xml
# .idea/misc.xml
# *.ipr

# Sonarlint plugin
# https://plugins.jetbrains.com/plugin/7973-sonarlint
.idea/**/sonarlint/

# SonarQube Plugin
# https://plugins.jetbrains.com/plugin/7238-sonarqube-community-plugin
.idea/**/sonarIssues.xml

# Markdown Navigator plugin
# https://plugins.jetbrains.com/plugin/7896-markdown-navigator-enhanced
.idea/**/markdown-navigator.xml
.idea/**/markdown-navigator-enh.xml
.idea/**/markdown-navigator/

# Cache file creation bug
# See https://youtrack.jetbrains.com/issue/JBR-2257
.idea/$CACHE_FILE$

# CodeStream plugin
# https://plugins.jetbrains.com/plugin/12206-codestream
.idea/codestream.xml

### macOS ###
# General
.DS_Store
.AppleDouble
.LSOverride

# Icon must end with two \r
Icon


# Thumbnails
._*

# Files that might appear in the root of a volume
.DocumentRevisions-V100
.fseventsd
.Spotlight-V100
.TemporaryItems
.Trashes
.VolumeIcon.icns
.com.apple.timemachine.donotpresent

# Directories potentially created on remote AFP share
.AppleDB
.AppleDesktop
Network Trash Folder
Temporary Items
.apdisk

### Python ###
# Byte-compiled / optimized / DLL files

# C extensions

# Distribution / packaging

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.

# Installer logs

# Unit test / coverage reports

# Translations

# Django stuff:

# Flask stuff:

# Scrapy stuff:

# Sphinx documentation

# PyBuilder

# Jupyter Notebook

# IPython

# pyenv

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.

# PEP 582; used by e.g. github.com/David-OConnor/pyflow

# Celery stuff

# SageMath parsed files

# Environments

# Spyder project settings

# Rope project settings

# mkdocs documentation

# mypy

# Pyre type checker

# pytype static type analyzer

# profiling data

# End of https://www.toptal.com/developers/gitignore/api/python,django,intellij,macos
</code></pre>
<p><a href=""https://i.stack.imgur.com/ZYQg1.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ZYQg1.png"" alt=""project file structure"" /></a></p>
","5","10050159","",""
"29329730","3684602","2015-03-29 13:31:35","1","76","<git><gitignore>","How to remove distant folders added to .gitignore","<p>I have added a folder (which was previously synchronized) to my .gitignore file.</p>

<p>Fine.
Now when I make a git add -A, git commit -m ""ok"", git push, I still see this folder in my distant rep.</p>

<p>I'd like that folder to be completely ignored and not appear in my distant rep. Can I remove it from those distant rep ? </p>
","1","3684602","0","0"
"11451535","406592","2012-07-12 12:09:56","1723","966742","<git><gitignore>",".gitignore is ignored by Git","<p>My <code>.gitignore</code> file seems to be being ignored by Git - could the <code>.gitignore</code> file be corrupt? Which file format, locale or culture does Git expect?</p>

<p>My <code>.gitignore</code>:</p>

<pre><code># This is a comment
debug.log
nbproject/
</code></pre>

<p>Output from <code>git status</code>:</p>

<pre><code># On branch master
# Your branch is ahead of 'origin/master' by 1 commit.
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#       debug.log
#       nbproject/
nothing added to commit but untracked files present (use ""git add"" to track)
</code></pre>

<p>I would like <code>debug.log</code> and <code>nbproject/</code> not to appear in the untracked files list.</p>

<p>Where should I start looking to fix this?</p>
","12","406592","0","0"
"66103327","12279445","2021-02-08 14:13:49","5","908","<android><git><flutter><version-control><gitignore>","Is it safe to include .gradle folder to my gitignore? If so why it is not included in default gitignore file generated by flutter create myapp command","<p>Is it safe to include .gradle folder to my gitignore?
If so why it is not included in default gitignore file generated by <code>flutter create myapp</code>
command?</p>
<p><code>/.gitignore</code>:</p>
<pre><code># Miscellaneous
*.class
*.log
*.pyc
*.swp
.DS_Store
.atom/
.buildlog/
.history
.svn/

# IntelliJ related
*.iml
*.ipr
*.iws
.idea/

# The .vscode folder contains launch configuration and tasks you configure in
# VS Code which you may wish to be included in version control, so this line
# is commented out by default.
#.vscode/

# Flutter/Dart/Pub related
**/doc/api/
**/ios/Flutter/.last_build_id
.dart_tool/
.flutter-plugins
.flutter-plugins-dependencies
.packages
.pub-cache/
.pub/
/build/

# Web related
lib/generated_plugin_registrant.dart

# Symbolication related
app.*.symbols

# Obfuscation related
app.*.map.json
</code></pre>
","3","12279445","",""
"66116696","2982614","2021-02-09 10:00:03","-1","59","<git><gitignore>","Why does git remove an ignored file (but not an un-ignored file) when pulling a commit that untracked both files?","<p>Consider the following situation:</p>
<ol>
<li>a remote repository creates and tracks two files</li>
<li>the remote repository later on adds one of the two files to .gitignore (that's not correct, I know, but it happened in our organization)</li>
<li>a local repository clones the remote one</li>
<li>in the local repository, we untrack both files with <code>git rm --cached</code></li>
<li>the remote pulls those changes</li>
</ol>
<p>I would expect the remote to still have both files, and to stop tracking them from now on.</p>
<p>Why does this happen?</p>
<p>Here is a bash script MWE that replicates what I mean</p>
<pre class=""lang-sh prettyprint-override""><code>#! /bin/bash

# 1. Set up remote repository
mkdir remote

cd remote
git init .
touch file_to_remain.txt
touch file_to_remove.txt
touch file_to_ignore_and_remove.txt
git add .
git commit -m 'first commit'
echo &quot;file_to_ignore_and_remove.txt&quot; &gt; .gitignore
git add .
git commit -m 'gitignore ignores a file that is already in the index'

# 2. clone local repo
cd ../
git clone ./remote local

# 3. untrack both files
cd local
git rm --cached file_to_ignore_and_remove.txt
git rm --cached file_to_remove.txt
git add .
git commit -m 'removed two files from index'

# 4. pull changes into remote
cd ../remote
git remote add origin `pwd`/../local
git pull origin master
</code></pre>
<p>Instead, what happens is that:</p>
<ul>
<li>both files are still present in the local repository</li>
<li>on the remote, the ignored file is deleted while the non-ignored file is still present.</li>
</ul>
<p>An additional discovery: if I do a <code>git status</code> at before the commit in stage 3 (in the MWE), the <code>file_to_remove.txt</code> is shown as both deleted and untracked, while <code>file_to_ignore_and_remove.txt</code> is shown only as deleted. When I do a <code>git add .</code> only the deletion of <code>file_to_ignore_and_remove.txt</code> is recorded.</p>
","1","2982614","",""
"11498512","723374","2012-07-16 05:23:39","2","397","<git><gitignore>","Multiple .gitignores in a single project","<p>I am having an issue managing my <code>.gitignore</code> file for a website I'm working on. I am storing my website on multiple repositories that require different files to be hidden or visible from git. For example: I don't want my Github repository to store images or database information. My production server on the other hand needs to see both of those, but I might not need some files I use for development purposes.</p>

<p>What's the best way to go about managing a <code>.gitignore</code> for multiple repositories?</p>
","0","723374","",""
"66121370","3623413","2021-02-09 14:53:13","1","1789","<android><firebase><github><repository><gitignore>","What to gitignore from firebase from GitHub repository","<p>I'm adding firebase to my mobile app.
I'm wondering what I should include and ignore from my GitHub repository?</p>
<p>I ignored everything from the Android.gitignore here:
<a href=""https://github.com/github/gitignore/"" rel=""nofollow noreferrer"">https://github.com/github/gitignore/</a></p>
<p>However firebase adds the following folder:
Is there anything I should put in my repository from this folder?</p>
<p><a href=""https://i.stack.imgur.com/BUGM1.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/BUGM1.png"" alt=""enter image description here"" /></a></p>
<p>Thanks!</p>
","3","3623413","",""
"66121687","","2021-02-09 15:11:12","0","79","<git><gitignore>","How push a file without the folder .gitignore rules to provide","<p>Hi i try to push only a file and not the folder where he is located to my repo but i still find no way to do this ..</p>
<p>Is this possible ? If yes or not why ?</p>
<p>Im creating the debug system inside vscode for my work and my lead ask me to only push the file not the folder !</p>
<p>the file is located inside the :</p>
<pre><code>.vscode/launch.json
</code></pre>
<p>i would like to push only the file so in my gitignore i have add the line :</p>
<pre><code>**.vscode/!launch.json
</code></pre>
<p>2 wildcards <code>*</code> means is match any file or zero or more directories.</p>
<p>The negation <code>!</code> negates (re-include) any file that is ignored by the previous pattern. The exception to this rule is to re-include a file if its parent directory is excluded.</p>
<p>But i still having the folder on my git repository...</p>
","4","","",""
"47788691","6741215","2017-12-13 08:38:51","1","2945","<git><gitignore>","override gitignore in subfolder","<p>Consider the following file structure:</p>

<ul>
<li><p>RootFolder</p>

<ul>
<li>.gitignore</li>
<li>SubFolder

<ul>
<li>dist</li>
<li>.gitignore (it ignores the dist folder)</li>
</ul></li>
</ul></li>
</ul>

<p>The .gitignore in the SubFolder is ignoring the dist folder. Is there any way I can include the dist folder by editing the .gitignore in the RootFolder?</p>

<p>I have like 20 SubFolders with the same .gitignore, it would be wonderful if I am able to do this, instead of going into each SubFolder and edit the gitignore manually to include the dist folders.</p>
","4","6741215","",""
"30073139","1168892","2015-05-06 09:48:16","3","289","<git><gitignore>","git ignore everything except nested folder","<p>I have a large code base (say, a wordpress installation) and want to ignore everything except the few files I myself changed (say, a theme). I know I can ignore files except some single files with</p>

<pre><code>/foo/*
!/foo/bar
</code></pre>

<p>But if the directory I want to keep is deeply nested, this does not work. I tried:</p>

<pre><code>/foo/*
!/foo/bar/baz
</code></pre>

<p>but <code>baz</code> is ignored as well. There is a <a href=""https://stackoverflow.com/a/11018557/1168892"">proposed solution</a> in a different question that works like</p>

<pre><code>/foo/*
!/foo/bar
/foo/bar/*
!/foo/bar/baz
</code></pre>

<p>but this grows to a damn PITA if the directory I want to keep is nested deeper.</p>

<p><strong>Is there a simpler solution to keep <code>/foo/bar/baz</code> but ignore everything else?</strong></p>
","0","1168892","",""
"12481465","702275","2012-09-18 16:47:32","26","7059","<git><github><gitignore><git-index>","How to undo git update-index?","<p>I just did the following to to keep a different copy of my config.php file in my localhost vs. my production environment:</p>

<pre><code>$ git update-index --assume-unchanged application/config/config.php
</code></pre>

<p>Unfortunately, I didn't write the config.php file exactly as I should and I need to reverse this such that I can make the change, commit it, and then re-ignore the file.</p>

<p>How do I undo the <code>git update-index</code> command?</p>
","0","702275","0","0"
"66483807","7530518","2021-03-04 22:10:46","2","1836","<github><shopify><gitignore><shopify-template>","What files and folders to include in .gitignore in Shopify Themes Development","<p>I'm new to Shopify Themes Development. I downloaded the free Shopify theme template using Themekit. I want to push the theme to Github but in VS Code it's showing that there are 156 files to be pushed on Github.</p>
<p>Folder names are:
assets, config, layout, locals, sections, snippets, templates</p>
<p>File name:
config.yml</p>
<p>That's obvious, this is not a way.</p>
<p>Can someone please tell me what files and folders i need to write in .gitignore So that those won't be pushed on Github.</p>
<p>Thanks in Advance!</p>
","2","7530518","",""
"13447234","70942","2012-11-19 03:25:02","6","8022","<git><gitignore>","removing untacked file and directories with git/info/exclude","<pre><code>git version 1.7.11.7
Fedora 17
</code></pre>

<p>Hello,</p>

<p>I create a new git working resposity</p>

<pre><code>git init
</code></pre>

<p>I added some files and some directories.</p>

<p>However, I have some files that I want to ignore based on my environment. I don't want to create a <code>.gitignore</code> file as I don't want it added to repository. Just my local.</p>

<p>So I want to ignore my <code>server/build</code> directory so I added it to my <code>.git/info/exclude</code> file.</p>

<pre><code># exclude patterns (uncomment them if you want to use them):
 *.[oa]
 *~
 server/build
</code></pre>

<p>server is the root directory where I init my git resposity.</p>

<p>However, when I do git status I always get this directory in my untacked files.</p>

<pre><code># On branch dev
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
server/build/
</code></pre>

<p>I want to remove this from my git status.</p>

<p>I have tried the following with didn't work for me</p>

<pre><code>git rm -r --cached server/build
</code></pre>
","0","70942","0","0"
"49001036","5786525","2018-02-27 04:16:27","0","95","<git><gitignore>","Git messing with .gitignore and pull caused files to disappear","<p>So far, nothing has allowed me to screw stuff up wholesale like git. I keep hoping that I'm over the hump of the learning curve, and then here I am with something completely new...</p>

<p>I created a new git repo to begin version controlling my homeassistant config. I didn't want everything going up so I created a .gitignore file. In messing with the .gitignore I was experimenting with a couple of different options, the first of which disallowed everything, then added back specific file types. The second only disallowed a slightly broader set of files. During the messing with the .gitignore I made a couple of commits and attempted a push to github, which rejected my push because of a large database file. I added the database file to the .gitignore, and I believe, switched to the second version of the .gitignore, then did a pull. At some point I then noticed that all my files that were not covered by the .gitignore patterns have now disappeared. </p>

<p>I've tried checking out some of my initial commits before files started disappearing, and nothing has returned. Really, I'd just like to get back to the state before I initialized the repo, everything has really been downhill from there. I feel like the files can't actually be gone, because I never did anything that feels like it should have deleted them, but I can't seem to get the repo to reveal them.</p>

<p>My session log is posted here if following my flailing helps to debug: <a href=""https://github.com/alexholman/tale_of_woe/blob/master/session_log.txt"" rel=""nofollow noreferrer"">https://github.com/alexholman/tale_of_woe/blob/master/session_log.txt</a></p>

<p>Looking through the log, line 638 is the first time I should have noticed that my file list had gotten significantly smaller.</p>

<p>I don't mean to be so down on git. It seems wonderful, and the people I know that use it well do some magical things with it. But right now its late, I'm tired, and I miss my files.</p>
","7","5786525","0","0"
"31752182","2069812","2015-07-31 17:48:23","18","16388","<ios><xcode><git><swift><gitignore>","What should be in my gitignore for Xcode 7","<p>With <strong>Xcode 7</strong> finally released I was wondering what an appropriate setting for <code>.gitignore</code> was for Xcode projects in the new version, and whether the same settings that were applicable in <strong>XCODE 6</strong> still apply.</p>

<p><strong>NOTE</strong> This is <strong>XCODE 7 Specific</strong>.  <em>There are various answers for other version of XCODE but I am unaware if 7 adds any new files or types that should be added to the .gitignore.</em></p>
","3","2069812","0","0"
"49030647","8398134","2018-02-28 13:24:01","0","19","<gitignore>","gitignore continuing to ignore files after ignore pattern removed","<p>My changes to .gitignore are not causing git to add some files previously ignored </p>

<p>.gitignore had this in it </p>

<pre><code>!import/
import/*
!import/*.foo
</code></pre>

<p>To have all but the foo files tracked.  This worked well.  However, I want all the files in import/ to be tracked now, so I commented those lines of .gitignore.</p>

<p>I now get this</p>

<pre><code>craig@ubuntu-dev:&lt;workspace&gt;$ cd import
craig@ubuntu-dev:&lt;workspace&gt;/import$ git add .
craig@ubuntu-dev:&lt;workspace&gt;/import$ git commit -m ""comment""
On branch master
Your branch is up-to-date with 'origin/master'.
nothing to commit, working directory clean
</code></pre>

<p>I am a newbie.  Am I using git incorrectly or is there something I have to tell it to re-include the .gitignore or ?
Cheers</p>
","0","8398134","",""
"49040647","9426277","2018-03-01 00:04:41","3","835","<git><overriding><gitignore><ignore>","Can I override the any ignore rule in .gitignore from .git/info/exclude","<p>I have created some rules for all repo user in .gitignore file.I need to ignore some rules without any change in the .gitignore. (these ignore rules should continue for other users) I know i can use ""git add -f filename"" command but  I don't want to point to a specific file/folder each time so I prefer to use ""git add .""</p>

<p>I have the following rule in my .gitignore file </p>

<pre><code>Source/Utils/*
</code></pre>

<p>and  I have tried to override it within my own .git/info/exclude. but it didn't work.</p>

<pre><code>!Source/Utils/*
</code></pre>

<p>Do you have any information about override?</p>
","2","9426277","0","0"
"49058879","425458","2018-03-01 21:21:10","0","545","<bash><git><variables><macros><gitignore>","Can I use macros/variables in a `.gitignore` script?","<p>Is there any way to use macros or variables (à la <code>bash</code>) in a <code>.gitignore</code> script? The <a href=""https://git-scm.com/docs/gitignore"" rel=""nofollow noreferrer"">gitignore docs</a> don't mention anything along those lines, but I figured I'd ask just in case there's some undocumented features and/or cool workarounds. A few people <a href=""https://stackoverflow.com/q/17640160/425458"">have</a> <a href=""https://stackoverflow.com/q/26670878/425458"">asked</a> about using environment variables in a <code>.gitignore</code>, but I want to know if there's any support whatsoever for macro-like or var-like anything.</p>

<h2>use case</h2>

<p>I have a repository which has been undergoing a refactoring of its directory structure/paths. Certain paths are used in multiple patterns in my <code>.gitignore</code> script, so it would be nice to be able to have something in there along the lines of:</p>

<pre><code># set a variable
UNSTABLE_PATH=foo/bar

# use the variable in some patterns
$UNSTABLE_PATH/test_data
$UNSTABLE_PATH/test_output
</code></pre>

<p>And yes, before you say it, I'm aware that clever use of glob and/or recursive glob could probably cover my use case. It would just be nice if there was some simple variable support as well. Though come to think of it I would also settle for a way to make the <code>git mv</code> command rewrite matching paths in the <code>.gitignore</code>.</p>
","5","425458","",""
"14416175","1275959","2013-01-19 16:10:10","1","1708","<git><gitignore><git-pull><git-checkout>","Git checkout failing after pulling and changing .gitignore file","<p>Suppose I have in my local repo two branches 'master' and 'new', in master I decided to put a folder 'folder/' in .gitignore and the I pulled from the repo into master, adding a new folder 'temp/' Now when I want to checkout to 'new', I have this </p>

<pre><code>error: The following untracked working tree files would be overwritten by checkout:
.folder/subfolder/somefile
.folder/subfolder/somefile
tmp/somefiles(1),tmp/somefiles(2)...
</code></pre>

<p>(I commited before checking out out) I tried to run git rm --cached to the 'temp/'and 'folder/' folder and I don't understand why I get this message (and I think check out process is not really clear for me). Some one can help ?</p>
","0","1275959","0","0"
"67367621","3492848","2021-05-03 10:45:36","0","1012","<java><git><intellij-idea><gitignore>","Add IntelliJ files to gitignore","<p>Below my .gitingore file. Why am I seeing see idea directory and myProj.iml on IntelliJ commit changes dialog?
They shouldn't be there since I add them to .gitignore file
What am I missing?</p>
<pre><code>*.class

*.log

*.ctxt

.mtj.tmp/

*.jar
*.war
*.nar
*.ear
*.zip
*.tar.gz
*.rar

# virtual machine crash logs, see http://www.java.com/en/download/help/error_hotspot.xml
hs_err_pid*

.idea/
/out/
target/
myProj.iml
</code></pre>
","6","3492848","",""
"72454542","5326139","2022-05-31 22:04:45","0","203","<json><git><gitignore><gitattributes><git-filter>","Filter out certain parts of a json file on git commit","<p>I am looking to filter out specific parts of a json file so that the given part of the file does not get pulled into a git repository. My use case is that I am setting up a repository to keep some working files, including settings for vsCode. I have a plugin for window colors that sets different colors for different windows that are open. The current color is saved in the .vscode/setting.json file for that window.</p>
<p>I found where it is possible to use the .gitattributes file to apply a filter to a file or set of files, and then use &quot;$git config&quot; to remove certain lines from what is committed, based on a sed command per <a href=""https://stackoverflow.com/questions/16244969/how-to-tell-git-to-ignore-individual-lines-i-e-gitignore-for-specific-lines-of"">this previous question</a>.</p>
<p>I would like to apply this to the &quot;workbench.colorCustomizations&quot; object within the following json file, so that this object does not get committed, while other settings in the file may be committed, such as the &quot;editor.formatOnPaste&quot; object. Does anyone know of a way to do this?</p>
<pre><code>{
    &quot;workbench.colorCustomizations&quot;: {
        &quot;activityBar.background&quot;: &quot;#102D56&quot;,
        &quot;titleBar.activeBackground&quot;: &quot;#173F79&quot;,
        &quot;titleBar.activeForeground&quot;: &quot;#F8FAFE&quot;
    },
    &quot;editor.formatOnPaste&quot;: true
}
</code></pre>
","2","5326139","",""
"55090905","2891692","2019-03-10 18:23:01","0","23","<git><gitignore>","Source\config\config.inc.ahk is ignored by git","<p>i using the .gitignore below.
surprisingly it ignores the file Source\config\config.inc.ahk</p>

<p>last line tried whitelist <strong>all</strong> files and subfolders in the source folder 
<code>!Source/**</code></p>

<p>Therefore i expected that Source\config\config.inc.ahk is not ignored.
How could i fix that?</p>

<p>UPDATE: This may answerd my question: <strong>You have to unignore every directory in the path that you wish to unignore.</strong> <a href=""https://stackoverflow.com/questions/36037838/git-ignore-except-specific-subdirectories"">Git ignore except specific subdirectories</a></p>

<p>what i have tried:</p>

<pre><code># Ignore everything
*

# Whitelist some files
!.gitignore
!README.md

# Whitelist folder files files, and subfolders
!Source/**
</code></pre>

<p>(complete .gitignore: <a href=""https://github.com/sl5net/global-IntelliSense-everywhere-Nightly-Build/blob/master/.gitignore"" rel=""nofollow noreferrer"">https://github.com/sl5net/global-IntelliSense-everywhere-Nightly-Build/blob/master/.gitignore</a>)</p>
","5","2891692","",""
"55089796","2891692","2019-03-10 16:23:02","0","64","<git><gitignore>","Delete all files already added to git repository based on .gitignore","<p>I tried deleteting all files already added to git repository <strong>exept</strong> files whoe not ignored by .gitignore</p>

<p>my workaround was:</p>

<ol>
<li>first i deleteted <strong>all</strong> files from the git repository, </li>
<li>then i added files whoe not ignored by .gitignore.</li>
</ol>

<p>In this way, files were deleted, which were added (identical) immediately thereafter. This is of course sub-optimal, not maximal performant. Is there a better solution for this more elegant?</p>

<p>here my attempts to the finish:</p>

<pre><code>Administrator@SL5 MINGW64 /g/global-IntelliSense-everywhere-Nightly-Build (master)
$ git rm -r --cached .
rm 'AHK Studio Download Page.url'
rm 'ActionLists/ActionListNameFilter.inc.ahk'
rm 'ActionLists/ApplicationFrameWindow/ActionListNameFilter.inc.ahk'

Administrator@SL5 MINGW64 /g/global-IntelliSense-everywhere-Nightly-Build (master)
$ git commit -m 'Delete all the stuff'

Administrator@SL5 MINGW64 /g/global-IntelliSense-everywhere-Nightly-Build (master)
$ git rm -r -f .

Administrator@SL5 MINGW64 /g/global-IntelliSense-everywhere-Nightly-Build (master)
$ git commit -m 'Delete all the stuff'
</code></pre>

<p>I guess if I had used <code>rm -r -f .</code> instead of <code>rm -r --cached .</code> I would have had the same effect.
After using <code>rm -r --cached .</code>, unfortunately there were still files in the repository that should not be there (regarding .gitignore).</p>

<p><code>git rm -r -f .</code> and a commit+push deletes all from the git repository</p>
","0","2891692","",""
"72463517","2432058","2022-06-01 14:26:12","0","39","<git><gitignore>","Avoiding .gitignore on one folder","<p>I have a .gitignore file on my repository to prevent uploading some files.</p>
<p>But I want to have a single folder inside this repository where all kind of files are allowed.</p>
<p>How can I scape the gitignore on that folder?</p>
","0","2432058","",""
"55209928","433570","2019-03-17 17:33:54","1","48","<git><gitignore>","ignore directory which has .git subdirectory?","<p>I'd like to ignore directories if it has it's own <code>.git</code> directory. </p>

<pre><code>project-root
  - sub-project1 (with `.git`)
  - sub-project2 (with `.git`)
  - other files
</code></pre>

<p>How can I tell(<code>.gitignore</code>) to ignore all the directories with its own <code>.git</code> such as sub-project1/2 ?</p>
","3","433570","0","0"
"55256576","9215853","2019-03-20 08:40:48","1","429","<java><gitignore>","create .gitignore with java","<p>I'm aware this question might be a duplicate in some sense but first hear me out.</p>

<p>I tried to create a code where i can create gitignore file with contents and for some reason i always end up having a file with txt extension and without name. Can someone explain this behavior and why?</p>

<p>Example Code:</p>

<pre><code>System.out.println(fileDir+""\\""+"".gitignore"");
FileOutputStream outputStream = new FileOutputStream(fileDir+""\\""+"".gitignore"",false);
byte[] strToBytes = fileContent.getBytes();
outputStream.write(strToBytes);
outputStream.close();
</code></pre>
","3","9215853","0","0"
"55281087","4887726","2019-03-21 13:04:04","1","51","<git><gitignore>","git ignore /* and !/**/somefile* not exclude properly","<p>my git repo directory like this:</p>

<pre><code>--ignore_dir/
----dir2/
------ignorea3.txt
----aaa.txt
----ignorea2.txt
--ignorea1.txt
--ignore1.txt
--.gitignore
</code></pre>

<p><code>.gitignore</code> file like this:</p>

<pre><code>/*
!/**/ignorea*.txt
</code></pre>

<p>with <code>git status</code>, it output:</p>

<pre><code>On branch master

No commits yet

Untracked files:
  (use ""git add &lt;file&gt;..."" to include in what will be committed)

        ignorea1.txt

nothing added to commit but untracked files present (use ""git add"" to track)

</code></pre>

<p>My question is why it not tracking files: <code>ignore_dir/dir2/ignorea3.txt</code> and <code>ignore_dir/ignorea2.txt</code>  </p>

<p>Thanks!</p>

<p><strong>UPDATE</strong><br>
Thanks @RomainValeri and @torek,<br>
I got a complex way to achieve this, by edit gitignore file:</p>

<pre><code>/*
!/ignore_dir/
/ignore_dir/*
!/ignore_dir/dir2/

/ignore_dir/dir2/*
!/ignore_dir/dir2/ignorea*.txt
!/ignore_dir/ignorea*.txt
</code></pre>

<p>It give a explicit tracking every parent level directory of the <code>ignorea*.txt</code>.</p>

<p>Besides, this will not work:</p>

<pre><code>/*
!**/ignorea*.txt
</code></pre>

<p>Hope someone could give a elegant way!</p>
","3","4887726","",""
"55277303","11236642","2019-03-21 09:32:27","0","1092","<python><git><github><gitignore><git-bash>","I am creating a program in python what files should i add to gitignore?","<p>I am currently writing a program in python however before I fully start I set up my git repository so I want to know what are the files that should be added to gitignore before I push to Github.
Not adding the correct files in previous projects caused me many problems, therefore, I am trying to avoid the same mistake</p>
","0","11236642","",""
"55334064","4819627","2019-03-25 08:48:47","2","2176","<git><gitignore><gitea>","gitignore is not working with Visual Studio","<p>I am trying to commit&amp;push my project changes from a C# project using Visual Studio 2017 to my private gitea repository. Unfortunately build outputs like bin, debug but also the VS cache folder .vs is always beeing added to the change list.</p>

<p>When i type 'git add .' i get the following error:</p>

<pre><code>error: open("".vs/xyz/v15/Server/sqlite3/db.lock""): Permission denied
error: unable to index file .vs/xyz/v15/Server/sqlite3/db.lock
fatal: adding files failed
</code></pre>

<p>to me the problem is clear. Git tries to add the .vs subfolder to the change list, but is not able to do so because Visual Studio has a lock on the database. </p>

<p>I have downloaded a .gitignore file from here:</p>

<p><a href=""https://github.com/github/gitignore/blob/master/VisualStudio.gitignore"" rel=""nofollow noreferrer"">https://github.com/github/gitignore/blob/master/VisualStudio.gitignore</a></p>

<p>copied it to the root of the project folder and renamed it to .gitignore. I checked the permission of this file and the folder, and the user has full write permissions (i am using Windows 10 by the way).</p>

<p>In the command line i have done this:</p>

<pre><code>git rm -r --cached .
</code></pre>

<p>Which removed all my source files from the repository. I commited this changed with </p>

<pre><code>git commit -am ""removed source files""
</code></pre>

<p>and readded and commited my git igore file with </p>

<pre><code>git add .\.gitignore
git commit -am ""readded gitignore""
</code></pre>

<p>when i use the command </p>

<pre><code>git check-ignore -v .vs
</code></pre>

<p>i get no output, which somehow tells me, that the gitignore file is not used by git.</p>

<p>I am using git for windows version 2.17.1.windows.2. Additionally i have tortoiseGit installed, which i use for other projects (i'm not sure it it interferes with git so i mention it).</p>
","0","4819627","",""
"55342574","","2019-03-25 16:39:54","0","1017","<c#><git><asp.net-core><gitignore>",".gitignore isn't ignoring files in certain folder","<p>I have a .gitignore file.</p>

<p>One of my declarations is</p>

<p>**/bin/Debug/
**/obj/Debug/</p>

<p>But it's still picking up these files</p>

<p><a href=""https://i.stack.imgur.com/v3ShB.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/v3ShB.png"" alt=""enter image description here""></a></p>
","0","","",""
"55350637","9019104","2019-03-26 05:54:39","3","1078","<git><gitignore><android-studio-3.2>","Files present in .gitignore always get added to git after building Android Project in Android Studio 3.3.2","<p>I have updated android studio from <code>3.0.0</code> to <code>3.3.2</code>. Everytime I build project files like <code>.idea/caches/build_file_checksums.ser</code> and <code>.idea/caches/gradle_models.ser</code> get added to git. This files are already present in <code>.gitignore</code>.This is my Project level .gitignore file </p>

<pre><code>*.iml
.gradle
/local.properties
/.idea/workspace.xml
/.idea/libraries
/.idea/tasks.xml
/.idea/misc.xml
/.idea/modules.xml
/.idea/vcs.xml
.DS_Store
/build
/captures
/.idea/caches/build_file_checksums.ser
/.idea/caches/gradle_models.ser
.externalNativeBuild
</code></pre>

<p>What changes need to be done in project to get rid of this ?</p>
","0","9019104","0","0"
"55359709","324691","2019-03-26 14:33:23","1","29","<git><visual-studio-code><gitignore>","Why doesn't .gitignore help GIT ignore the host.bLaHa.cache file?","<p>Should not this entry in .gitignore make GIT ignore it?</p>

<pre><code>*.cache
</code></pre>

<p>The file is in a subdir, "".firebase"". The file shows up in ""SOURCE CONTROL: GIT"" in vscode as ""Modified"". (In Windows 10.)</p>

<p>EDIT: My problem was that I did not know that .gitignore does not work on tracked files.</p>
","8","324691","",""
"55367804","10226996","2019-03-26 23:50:21","4","3395","<git><unity-game-engine><github><gitignore>","Why is a .gitignore needed for unity projects on Github?","<p>I'm new to the idea of a .Gitignore but I understand that it tells git to ignore certain files in the commit process, why would you want to ignore any Unity file in a Unity project?</p>
","1","10226996","0","0"
"55381551","1672027","2019-03-27 15:57:52","4","887","<git><gitignore>","Git - How to remove exclusion patterns from global .gitignore for a single project","<p>Lets say I have "".foo"" in my global <code>.gitignore</code> and that works great for all of my current projects (and lets say that there is a lot of them, so I want to keep this in my global ignore file).</p>

<p>Now, I'm starting a new project that uses <code>.foo</code> files everywhere.</p>

<p><strong>How can I ""undo"" the exclusion of <code>.foo</code> files defined in my global ignore for just this specific project?</strong></p>

<p>This means I can just <code>git add .</code> when working with the new project and have it pick up all the <code>.foo</code> files, but if I run <code>git add .</code> in any other project then the <code>.foo</code> files are ignored.</p>
","2","1672027","",""
"36675928","1802693","2016-04-17 11:32:35","0","1233","<eclipse><git><javafx><javafx-8><gitignore>","How should I version control my JavaFx 8 project in git repository with eclipse?","<p>I have created a JavaFX project in a git repository and I've added a <code>.gitignore</code> file with eclipse specific files (I don't want to mix the eclipse project files with code).</p>

<p>But if I don't add the eclipse project files to the repository, then I can't import the JavaFX project in eclipse after eclipse project files are gone (e.g. after a hard reset or cloning the repository to another machine etc.)</p>

<p>How should I version control my code without version controllig the eclipse project files?<br>
How should I import the Java FX project into eclipse?</p>
","0","1802693","",""
"69883674","6483329","2021-11-08 12:46:52","0","229","<git><gitignore>","git ignore a specified type of change to file by rule","<p>I have a repository which includes files that are generated when a third party executable is run. I need to track the files that are generated by this executable, to allow me to sync the executable settings between users.</p>
<p>Let us call this file &quot;executable_settings.json&quot;</p>
<p>The file can change in 2 ways:</p>
<ol>
<li>A settings change that needs to be added to the repository</li>
<li>A run-time change which is generated every time that the executable is run and changes the file in a specified way that can be captured by regex  (e.g. &quot;Edited On: XXXX-YY-ZZ&quot;). I do not want these changes to be in the repo.</li>
</ol>
<p>Is there a way to get git to automatically ignore changes to executbale_settings.json, according to a rule? I would like to find a way to have changes of type 2 not appear as changes to git unless there was also a change of type 1 at the same time.</p>
","4","6483329","",""
"36763460","2858235","2016-04-21 08:05:00","11","16238","<git><gitignore>","How to add project.lock.json file to gitignore","<p>I am trying something like below:</p>

<pre><code>#DNX
project.lock.json
</code></pre>

<p>and</p>

<pre><code>*.lock.json
</code></pre>

<p>but it does not seem to be ignoring these files.</p>
","4","2858235","0","0"
"36804201","6242642","2016-04-22 22:22:49","1","161","<git><gitignore>","Allowing files within folders in .gitignore not working","<p>Seen as my project is reaching half a gigabyte of disk space I'd like to avoid uploading/downloading that. But I do need to keep my project group up-to-date with all the changes that are being made by everyone on the team.</p>

<p>So when I tried to make a <code>.gitignore</code> to ignore everything except my C# files it ignored everything instead of committing them. </p>

<p>It works for the <code>.gitattributes</code> and <code>.gitignore</code>, though.<br>
Which I find weird.</p>

<pre><code>#Ignore everything
/*

#Except the neccesary files.
!.gitattributes
!.gitignore
!*.cs
!/Assets/RFPSP/
!/Assets/RFPSP/Scripts/*
!/Assets/RFPSP/Scripts/*/*
!/Assets/RFPSP/Scripts/*/*/*
</code></pre>

<p>I know the location of the code files (referenced above to the folder: ""Scripts"" and folders within that.) but it doesn't seem to work. If at all possible I'd like to keep the folder structure intact too, so that I can initialize a git repo on my main folder and update the file(s) in their respective location(s).</p>

<p>I thought this was the way to do it. Am I horribly mistaken or am I doing something terribly wrong?</p>
","1","6242642","0","0"
"52854568","8816796","2018-10-17 12:09:20","1","2155","<git><github><gitignore>","How to automatically exclude some file types in git?","<p>I usually add the files and extensions that I want to ignore to .git/info/exclude to have a rather neat repository. I'm on a mac and for example I always need to exclude the .DS_Store file that is created. I was wondering if there is a way to change the default <em>exclude</em> file.</p>
","5","8816796","0","0"
"36839838","5127919","2016-04-25 11:55:13","59","66914","<git><gitignore>","gitignore does not ignore .idea directory","<p>Working on a Symfony2 project using PhpStorm IDE, I have added couple of files to git ignore but one file despite being added to git ignore is always appearing. I have tried multiple times but its always there</p>
<p><code>.gitignore</code> file:</p>
<pre><code>/app/config/parameters.yml
/bin/
/build/
/composer.phar
/vendor/
/web/bundles/
/app/bootstrap.php.cache
/app/cache/*
!app/cache/.gitkeep
/app/config/parameters.yml
/app/logs/*
!app/logs/.gitkeep
/app/phpunit.xml

#IDE metadata
**.idea/**

#Bash files
run.sh
</code></pre>
<p>And it is the <code>.idea</code> folder/files that Git just will not ignore:</p>
<pre><code>On branch develop
Changes not staged for commit:
  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
  (use &quot;git checkout -- &lt;file&gt;...&quot; to discard changes in working directory)

        modified:   .idea/workspace.xml

no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)
</code></pre>
<p>Any idea why git will just not ignore the whole directory like i have specified in gitignore?</p>
","1","5127919","0","0"
"52882655","586652","2018-10-18 21:11:18","1","1077","<gitignore><github-desktop>","Github - gitignore folder doesn't exclude all directory files","<p>I'm using Github Desktop on Windows 10. I have a .gitignore file with which I'd like to ignore <em>everything</em> in the directory, including all subdirectories.</p>

<p>What's frustrating is that <em>most</em> files are excluded, but I'm still getting a few random files that I cannot seem to ignore.</p>

<p>I have a directory, say, <code>My Dir/Sub-dir</code>, I want to ignore. I also want to ignore all files of extension, say, <code>*.swf</code>. Thus, I write this <code>.gitignore</code> file:</p>

<pre><code>My Dir/Sub-dir

*.swf
</code></pre>

<p>But, when I go back to Github Desktop, I still get two files similar to the following in the list:</p>

<pre><code>My Dir/Sub-dir/anotherdir/randomfile.xml
My Dir/Sub-dir/animation.swf
</code></pre>

<p>What's going on? Is this a bug? Or am I missing something?</p>

<p><strong>EDIT:</strong></p>

<p>Other alternative <code>.gitignore</code>s I've tried are:</p>

<pre><code>My*Dir/Sub-dir
*.swf
</code></pre>

<p>&nbsp;</p>

<pre><code>My\ Dir/Sub-dir
*.swf
</code></pre>

<p>&nbsp;</p>

<pre><code>My Dir/Sub-dir/
*.swf
</code></pre>

<p>&nbsp;</p>

<pre><code>/My Dir/Sub-dir
*.swf
</code></pre>

<p><strong>EDIT:</strong></p>

<p>So, I've tried the <code>git rm --cached &lt;file&gt;</code> command on my files, and it worked - until one of the files changes again. Github Desktop then <em>once again</em> says they need to be updated.</p>

<p>p.s. It may be that they somehow got indexed in the master branch, as I'm currently in a different branch. Would this cause it? And, if so, how would I eliminate these files from all branches?</p>
","0","586652","",""
"52897379","576746","2018-10-19 17:34:26","1","1769","<git><wildcard><gitignore><subdirectory><negation>",".gitignore wildcard suffix exclusion with negation for subfolder","<p>I have a .gitignore which is like this:</p>

<pre><code>*.png
*.jpg
*.gif
!0/*.png
!0/*.jpg
!0/*.gif
</code></pre>

<p>I want to ignore all image files (.png, .jpg, .gif) in all folders but not in the folder <code>/0/</code>. All image files in this folder should not be ignored.</p>

<p>I tried with the above .ignore file but it is not working as image files in <code>/0/</code> are still ignored. How to write this correctly?</p>
","6","576746","",""
"52906874","10273982","2018-10-20 14:48:25","1","551","<xcode><git><gitignore><preferences>","Using Xcode preferences vs .gitignore file","<p>I'm new to git repositories and have found lots of great support for creating a .gitignore file that I would put in each project directory.</p>

<p>However, I've noticed that in Xcode 10 preferences under Source Control under the git tab there is a spot to specify files to ignore. Is there an advantage to defining the exclusions in Xcode versus the .gitignore file? I can't seem to find anyone that actually does it this way and Apple docs are light.</p>

<p>Are there some items (maybe globals) that I would put be better putting in prefs?</p>

<p>Thanks!</p>
","0","10273982","0","0"
"69915893","9149934","2021-11-10 15:22:20","0","147","<git><gitignore>",".gitignore match folder substring","<p>I have folders in a project that always have <code>.X</code> at the end. In each of these folders, subfolders must be ignored. I am not able to get the filter to work. The <code>.X</code> part must be matched.</p>
<p>Example directory:</p>
<pre><code>.git
foo/one.X/folder_to_ignore
bar/two.X/folder_to_ignore
</code></pre>
<p>Thins I tried, that did not work:</p>
<pre><code>*.X/folder_to_ignore
*X/folder_to_ignore
**.X/folder_to_ignore
**X/folder_to_ignore
*.*.X/folder_to_ignore (regex?)
</code></pre>
<p>And some other variations of that sort.</p>
<p>Thanks.</p>
","0","9149934","",""
"36930938","5694138","2016-04-29 06:22:53","2","1283","<git><gitignore>","My gitignore_global is not working even though gitconfig specify the absolute path","<p>I created a .gitignore_global file in <code>~/Users/Tony/.gitignore_global</code>, which is also the path where the <code>.gitconfig</code> is stored.</p>

<p>This is what is inside the <code>.gitconfig</code>:</p>

<pre><code>[core]
    excludesfile = ~/.gitignore_global
</code></pre>

<p>This is what is inside the <code>.gitignore_global</code>:</p>

<pre><code># Compiled source #
###################
*.com
*.class
*.dll
*.exe
*.o
*.so

# Packages #
############
# it's better to unpack these files and commit the raw source
# git has its own built in compression methods
*.7z
*.dmg
*.gz
*.iso
*.jar
*.rar
*.tar
*.zip

# Logs and databases #
######################
*.log
*.sql
*.sqlite

# OS generated files #
######################
.DS_Store
.DS_Store?
._*
.Spotlight-V100
.Trashes
ehthumbs.db
Thumbs.db

# CocoaPods #
#############
Pods

# SVN #
#######
*.svn
.svn/*

# Xcode #
#########
build/
DerivedData
profile
xcuserdata
!default.mode1v3
!default.mode2v3
!default.pbxuser
!default.perspectivev3
*.mode1
*.mode1v3
*.mode2v3
*.moved-aside
*~.nib
*.pbxuser
*.perspective
*.perspectivev3
*.swp
*.xccheckout
</code></pre>

<p>I do not understand why the <code>.gitignore_global</code> file isn't working. The <code>.DS_Store</code> files are still being detected by git.<br>
I had already tried comments like ""<code>git rm --cached .DS_Store</code>"" and tried others solutions found on Stack Overflow, however git is still detecting the <code>.DS_Store</code> files.</p>
","0","5694138","0","0"
"36971226","1895325","2016-05-01 19:53:49","0","505","<asp.net><asp.net-mvc><git><version-control><gitignore>","How to version ASP.NET MVC web application in git?","<p>I have created an ASP.NET MVC 5.0 web application in Visual Studio 2015. I can see that there are a whole lot of files getting created. To version this project, what all are the files/directories do I need to commit in git? Which are to be excluded in .gitignore?</p>
","0","1895325","",""
"53079960","10584927","2018-10-31 09:17:42","3","961","<git><addition><gitignore><ignore>","Keep existing file in repo while being added to .gitignore","<p>Currently, we have some project property files up on the repo that I'm willing to add to .gitignore so that they get ignored from now on even if we change them locally.</p>

<p>I've already tried:</p>

<pre><code>git rm &lt;file&gt; --cached
</code></pre>

<p>Add that file to .gitignore and then a <code>git add -f &lt;file&gt;</code> so that it gets uploaded to the repository but that will just blow up gitignore and upcoming changes to that file will get tracked by git, which is the thing that I'm trying to avoid.</p>

<p>So, to sum up:</p>

<p>-A file is currently up on the repo.
-I want to keep it on the repo.
-That file must NOT be changed from now on while still being up on the repo so I'll add it on gitignore.
-Git must not track changes on that file.</p>

<p>Thank you by advance.</p>
","1","10584927","",""
"53106637","","2018-11-01 17:46:25","4","1315","<git><gitignore>","gitignore: Ignore everything but specific file type in sub folder","<p>I have a .gitignore file which doesn't seem to work properly. It doesn't upload any files in the subdirectory as intended but I added an except all .cs files, but the subdirectory remains empty. Here is my code:</p>

<pre><code>/*

!.gitignore

!my_repo/build/game/Assets/Scripts/*.cs
</code></pre>

<p>I want nothing apart from the .cs files and the .gitignore file. but the .cs files still doesn't seem to be picked up by git. Thanks.</p>

<p>PS.</p>

<p>I tried doing this also, but it doesn't work either:</p>

<pre><code>!*.cs
</code></pre>
","4","","",""
"53108807","1223975","2018-11-01 20:20:50","3","1272","<git><gitignore><git-config>","gitignore item for multiple projects","<p>I want to ignore a path in several .git repos, but I don't want to make this global configuration. Say I have this:</p>

<pre><code>projects/
    foo/
     .git/
     conf/
    bar/
     .git/
     conf/
    baz/
     .git/
     conf/
</code></pre>

<p>for all the projects in projects/ I want to ignore any changes to the conf folder. Is there a way to do this with</p>

<pre><code>$ git config
</code></pre>

<p>Because this is a work thing and I share stuff with other devs, I don't want to modify the .gitignore files in each project. I need local settings only.</p>
","0","1223975","",""
"37070133","6299783","2016-05-06 10:31:05","0","126","<gitignore>","gitignore include subdirectory in ignored directory not working","<p>I am trying to add an exemption to exclude the ""img"" and ""fonts"" folders under site/assets/ directories in my gitignore. See example below: </p>

<pre><code>!site/
site/*
site/assets/*
!site/assets/img/
!site/assets/fonts/ 
</code></pre>

<p>I am running git version 2.6.4 on OS X Yosemite. None of the examples on stack overflow seems to work with my dilemma. Any suggestions. </p>
","0","6299783","",""
"53125411","341611","2018-11-02 20:27:02","2","167","<git><gitignore>","git - do not push local changes, but receive remote changes in new branch","<p>This may already have an answer; I'm just not sure how to search for it.</p>

<p>Here's my situation: I have a repo that has a configuration file in it called <code>environments.json</code>. There are changes I need to make to this file when working locally that I don't want to commit or get pushed back to the origin. OK, fine; that's what <code>git ignore</code> is for. </p>

<p>But when I set that up, it also means that when I pull a new branch from origin, I don't get any updates made by others to that file. On a daily basis, that isn't an issue, but every so often a new environment object may be added to the file (a new AWS instance, for example), and I do need to get that info.</p>

<p>So my question is: how can I set up git so that when I commit and push my repo, it does not include any changes I've made to <code>environments.json</code>, but when I do a pull, or get a new branch, I do receive changes to the file that others have made and pushed to origin (even if they overwrite my local changes)?</p>
","2","341611","",""
"53144496","2796533","2018-11-04 19:21:11","0","142","<git><gitignore>","Why .gitignore stops working? Always stops after few commits","<p>So my .gitignore just at some point just stops working properly, and is showing me the changes in directories I want to ignore.</p>

<ul>
<li>yes, I save it as ANSI</li>
<li>no extra characters on the file end</li>
<li>.gitinore is in a root dir of the working tree</li>
<li><p>I've read all the info about <a href=""https://stackoverflow.com/questions/11451535/gitignore-is-not-working"">this *** solution</a>:</p>

<p>git rm -r --cached .
git add .
git commit -m ""fixed untracked files""</p></li>
</ul>

<p>It works indeed perfectly on my machine, I make this three steps - commit them - and I can make changes on my machine in ignored directories.</p>

<p>The problem is, when I pull this commit to the server, then it deletes all the ignored stuff! Not that it just ignores it, it removes files and directories from the server so the project becomes useless...</p>

<p>All over the internet this solution seems to be the only one for broken .gitignore, but it's not as it deletes the files and directories that should not be deleted. This is silly, such a stupid bug should be removed long time ago...</p>

<p>edit: it happens on different paths, or files, when manually or by software something is added to the .gitignore - putting the gitignore paths here that broke is pointless. &lt;- this is the bug I mentioned, not that I run some commands...</p>
","4","2796533","0","0"
"69947317","1116368","2021-11-12 18:09:13","0","267","<git><github><gitignore>","GitHub .gitignore recommendation","<p>which folders/files should be excluded in <code>.gitignore</code> file?</p>
<p>I'm creating a project consists of:</p>
<ol>
<li>/node_modules  =&gt; contains dependencies</li>
<li>/dist          =&gt; contains the compiled .js &amp; .d.ts files</li>
<li>/src           =&gt; contains .ts files (the main project)</li>
<li>/test          =&gt; contains .js &amp; .ts just for testing</li>
</ol>
<p>I usually exludes the <code>/node_modules</code> &amp; <code>/test</code> but not sure to exclude the <code>/src</code>.<br />
Any idea?</p>
","4","1116368","",""
"53145763","8618818","2018-11-04 21:41:29","3","1543","<git><gitignore>","How to remove storage folder from .gitignore file?","<p>My .gitignore file contains one big line:</p>

<pre><code>/node_modules/public/hot/public/storage/storage/*.key/vendor/.idea/.vagrantHomestead.jsonHomestead.yamlnpm-debug.logyarn-error.log.env
</code></pre>

<p>Since I have a folder in my storage which contains all icons/images that are used in my website, I want that folder to be uploaded to github as well. Sadly it seems the whole public/storage folder is in gitignore so it's getting ignored.</p>

<p>Little side question - why does my gitignore file has a blank file name when looking at it in the root folder? </p>
","3","8618818","0","0"
"37100275","910877","2016-05-08 13:17:57","0","1895","<android><git><gitignore>","Android studio - gitignore file","<p>i just started to use git and i created .gitignore file, after i do changes in one of the java files i see that the git not ignore from files that suppose to ignored. for example:
<a href=""https://i.stack.imgur.com/BGEri.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/BGEri.jpg"" alt=""enter image description here""></a></p>

<p>only the Logger.java suppose to be committed and the two other files not.</p>

<p>this is my .gitignore file:</p>

<pre><code># Built application files
*.apk
*.ap_

# Files for the Dalvik VM
*.dex

# Java class files
*.class

# Generated files
bin/
gen/
out/

# Gradle files
.gradle/
build/

# Local configuration file (sdk path, etc)
local.properties

# Proguard folder generated by Eclipse
proguard/

# Log Files
*.log

# Android Studio Navigation editor temp files
.navigation/

# Android Studio captures folder
captures/

# Intellij
*.iml

# Keystore files
*.jks
</code></pre>
","1","910877","",""
"53153358","5190318","2018-11-05 11:18:38","0","29","<regex><gitignore><pcre>","wildcards & regex in gitignore","<p>I'd like to write a pattern in my .gitignore which achieves the same as the pcre expression <code>resp-.*-[0-9]{3,}.*</code> How do I do this?</p>

<p>More generally, how do I mix wildcards, and specify the existence of at least a certain amount of numbers, followed by a file extension</p>
","2","5190318","",""
"53168852","155077","2018-11-06 09:16:22","1","55","<git><gitignore>",".gitignore a file extension, but not a directory name","<p>I have the following entry in .gitignore. </p>

<pre><code>*.meta
</code></pre>

<p>Now this would be fine if only files would end in .meta.<br /> 
Unfortunately, I have a directory <code>/ProtoBuf.Meta/</code>.<br />
And now the entire content of ProtoBuf.Meta is ignored... </p>

<p>Is there a way to tell git that this gitignore directive is only for files, not directories ? </p>
","0","155077","",""
"37150036","756246","2016-05-10 22:34:35","6","2152","<git><visual-studio><tfs><visual-studio-2015><gitignore>","Visual Studio 2015 update 2 - Git is showing me in changes all the bin\debug and obj\debug folder/files , why would it be ignoring the gitignore","<p>I had created a new project on a computer with <strong>vs 2015 update 2</strong>,  I <strong>commit</strong> and <strong>sync</strong> to visual studio <strong>TFS</strong> free online repository.   Then I had pulled down a clone onto another computer, and after a few days of creating new files etc... I did a rebuild, builds fine, then I go to <strong>Team Explorer</strong> --> <strong>Changes</strong></p>

<p>I'm seeing in Changes, that there are 138 ... of which  .txt, .dll , .cache, .pdb etc..
  Of course I ""could"" simply not ""stage"" those , but why would visual studio 2015 (upate 2) even be showing me these files.  ( I recall other projects with git / visual studio in which it simply does not show </p>

<pre><code> bin\Debug

 obj\Debug
</code></pre>

<p>What happened?  Why is it doing/showing this?</p>

<p>(gitignore issue?) </p>
","3","756246","0","0"
"53208235","3808318","2018-11-08 12:57:44","23","11619","<git><gitignore><subdirectory>","Multiple .gitignore in subfolders","<p>Is it possible to have a .gitignore file in a subfolder, so that i may be better able to control what i need to be ignored and not affect a larger, ""base"" gitignore?</p>

<p>For example, there is the root .gitignore, but instead of lets say writing /path/to/folder in that file, in my folder to have another .gitignore that will only apply for that folder and it's children?</p>
","2","3808318","0","0"
"37156627","811405","2016-05-11 08:08:50","13","9776","<git><visual-studio><visual-studio-2015><gitignore>","Why is applicationhost.config still being added to source control even thought it's in gitignore","<p>First of all, I've seen <a href=""https://stackoverflow.com/questions/30363172/vs-config-applicationhost-config-in-source-control"">.vs\config\applicationhost.config in source control</a>.</p>

<p>We are working in a team and Visual Studio changes some path inside <code>applicationhost.config</code> file. We need to exclude this. In my <code>.gitignore</code> file, I've added:</p>

<p><code>/.vs/config/applicationhost.config</code></p>

<p>However, in every commit, this is again added to the git. Before VS2015 Update 2, it was no issue, but something has changed to git integration with VS after this update and now it's being included. Whenever my workmates pull changes to the branch, their IIS Express fails because of the changes to this file (it has paths local to my own PC's paths etc.) and vice versa.</p>

<p>How do I pull this file out of the source control completely?</p>
","1","811405","0","0"
"53221739","2380459","2018-11-09 07:53:24","0","608","<git><gitignore><pre-commit-hook><smartgit>","How to hide generated files in smartgit while keeping them up to date in git","<p>TLDR; I just want to keep .css files hidden but updated whenever I commit .less files.</p>

<p>I want to hide a bunch of <code>.css</code> files on <strong>smartgit</strong>, because they are generated from <code>.less</code> files. Most would suggest <code>.gitignore</code>, but I still need them tracked (for deployment reasons). <code>Lessc</code> is run by IDE.</p>

<p>I also tried <strong>assume-unchanged</strong>, but then they are just not committed in.</p>

<p>I also tried <strong>pre-commit</strong> hook, to automatically <strong>add</strong> these <code>.css</code> files, but they are left visible as <code>staged wt as head</code></p>

<p>My last try in <strong>pre-commit</strong> was </p>

<pre><code>touch
--no-assume-unchanged
add
--assume-unchanged
</code></pre>

<p>but while the .css is committed and finally pushed, Smartgit ends up showing them as <code>staged unchanged (assumed but modified)</code> (or something like that).</p>
","4","2380459","",""
"37187092","239431","2016-05-12 12:36:17","39","43651","<javascript><git><angular><gitignore>","Angular2 .gitignore","<p>I'm setting up an Angular 2 sample project. Is my <code>.gitignore</code> enough already or did I miss anything?</p>

<pre><code>node_modules
typings
jspm_packages
bower_components
app/**/*.js
app/**/*.map
</code></pre>
","0","239431","0","0"
"53236846","9961121","2018-11-10 07:18:49","8","12309","<git><unity-game-engine><gitignore><rider><github-desktop>","The .gitignore setting for the .idea folder of Jetbrains Rider's does not work","<p>I am currently working on a game project for Android using Unity and Rider on Windows10. Git administration is using Github Desktop.</p>

<p>After completing the game production, I tried to set up .gitignore to upload to Github, I connected to gitignore.io and selected windows, unity, jetbrains + all, and then entered .gitignore in my .gitignore which is displayed on the screen. The link to the code is <a href=""https://www.gitignore.io/api/unity,windows,jetbrains+all"" rel=""noreferrer"">https://www.gitignore.io/api/unity,windows,jetbrains+all</a>.</p>

<p>The code below is the .gitignore code I wrote down.</p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-html lang-html prettyprint-override""><code># Created by https://www.gitignore.io/api/unity,windows,jetbrains+all
# Edit at https://www.gitignore.io/?templates=unity,windows,jetbrains+all

### JetBrains+all ###
# Covers JetBrains IDEs: IntelliJ, RubyMine, PhpStorm, AppCode, PyCharm, CLion, Android Studio and WebStorm
# Reference: https://intellij-support.jetbrains.com/hc/en-us/articles/206544839

# User-specific stuff
.idea/**/workspace.xml
.idea/**/tasks.xml
.idea/**/usage.statistics.xml
.idea/**/dictionaries
.idea/**/shelf

# Generated files
.idea/**/contentModel.xml

# Sensitive or high-churn files
.idea/**/dataSources/
.idea/**/dataSources.ids
.idea/**/dataSources.local.xml
.idea/**/sqlDataSources.xml
.idea/**/dynamic.xml
.idea/**/uiDesigner.xml
.idea/**/dbnavigator.xml

# Gradle
.idea/**/gradle.xml
.idea/**/libraries

# Gradle and Maven with auto-import
# When using Gradle or Maven with auto-import, you should exclude module files,
# since they will be recreated, and may cause churn.  Uncomment if using
# auto-import.
# .idea/modules.xml
# .idea/*.iml
# .idea/modules

# CMake
cmake-build-*/

# Mongo Explorer plugin
.idea/**/mongoSettings.xml

# File-based project format
*.iws

# IntelliJ
out/

# mpeltonen/sbt-idea plugin
.idea_modules/

# JIRA plugin
atlassian-ide-plugin.xml

# Cursive Clojure plugin
.idea/replstate.xml

# Crashlytics plugin (for Android Studio and IntelliJ)
com_crashlytics_export_strings.xml
crashlytics.properties
crashlytics-build.properties
fabric.properties

# Editor-based Rest Client
.idea/httpRequests

# Android studio 3.1+ serialized cache file
.idea/caches/build_file_checksums.ser

### JetBrains+all Patch ###
# Ignores the whole .idea folder and all .iml files
# See https://github.com/joeblau/gitignore.io/issues/186 and https://github.com/joeblau/gitignore.io/issues/360

.idea/

# Reason: https://github.com/joeblau/gitignore.io/issues/186#issuecomment-249601023

*.iml
modules.xml
.idea/misc.xml
*.ipr

### Unity ###
[Ll]ibrary/
[Tt]emp/
[Oo]bj/
[Bb]uild/
[Bb]uilds/
Assets/AssetStoreTools*

# Visual Studio cache directory
.vs/

# Autogenerated VS/MD/Consulo solution and project files
ExportedObj/
.consulo/
*.csproj
*.unityproj
*.sln
*.suo
*.tmp
*.user
*.userprefs
*.pidb
*.booproj
*.svd
*.pdb
*.opendb
*.VC.db

# Unity3D generated meta files
*.pidb.meta
*.pdb.meta

# Unity3D Generated File On Crash Reports
sysinfo.txt

# Builds
*.apk
*.unitypackage

### Windows ###
# Windows thumbnail cache files
Thumbs.db
ehthumbs.db
ehthumbs_vista.db

# Dump file
*.stackdump

# Folder config file
[Dd]esktop.ini

# Recycle Bin used on file shares
$RECYCLE.BIN/

# Windows Installer files
*.cab
*.msi
*.msix
*.msm
*.msp

# Windows shortcuts
*.lnk

# End of https://www.gitignore.io/api/unity,windows,jetbrains+all</code></pre>
</div>
</div>
</p>

<p>However, some of the files in the .idea folder are different from the .gitignore settings. So I left this question. As far as I know, the subdirectory of the .idea folder should not be registered with git, but I wonder if it is normal to see some files. If this is not normal, it will ask you if you want to add all the .idea folder sub-lists to .gitignore.</p>

<p>The picture below is a picture taken from Github Desktop.</p>

<p><a href=""https://i.stack.imgur.com/GlFLm.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/GlFLm.png"" alt=""enter image description here""></a></p>

<p>I will be waiting for a good answer. Thanks for reading.</p>
","1","9961121","0","0"
"53242590","1118358","2018-11-10 19:22:30","1","31","<git><gitignore>","What is the difference between 'test/' and 'test/**' in a '.gitignore'?","<p>According to the <a href=""https://git-scm.com/docs/gitignore"" rel=""nofollow noreferrer"">.gitignore docs</a> <code>test/</code> would ignore the test directory and everything in it. Additionally, <code>test/**</code> is described as <code>matches everything inside</code>.</p>

<p>I have been experimenting and cannot figure out what the difference between these two is. Can anyone provide an example where those behave differently?</p>
","1","1118358","",""
"69969885","1157814","2021-11-15 05:39:38","2","412","<git><gitignore>","How to do exception in .gitignore if I am using wildcards for folder path in ignore?","<p>I am aware this was asked <a href=""https://stackoverflow.com/q/3203228/1157814"">here</a> and answered, however no answer covers when the ignoring line uses wildcards...</p>
<p>I have the following line in .gitignore:</p>
<pre><code>**/_secrets
</code></pre>
<p>Now I would like to add one exception to this using the <code>!</code> syntax:</p>
<pre><code>!**/_secrets/not_a_secret.txt
</code></pre>
<p>However this does not seem to work.</p>
<p>What I've tried:</p>
<pre><code>!**/not_a_secret.txt
!**/_secrets/not_a_secret.txt
!(**/_secrets/not_a_secret.txt)
</code></pre>
<p>I've also tried to change <code>**/_secrets</code> to <code>**/_secrets/</code> still does not work, all files in the _secrets folder are ignored, <strong>with no exception of not_a_secret.txt file</strong>.</p>
<p>What am I missing?</p>
","5","1157814","0","0"
"53259795","38729","2018-11-12 10:02:43","2","635","<git><gitignore>","Global gitignore - how to exclude a single specific folder","<p>I would like to exclude all <code>.idea</code> files in a specific folder through a global .gitignore (located in <code>~/.gitignore_global</code>).</p>

<p>I tried to put a following lines there:</p>

<pre><code># assuming .gitignore_global understands absolute paths
/Users/&lt;my home folder&gt;/Desktop/Dev/**/.idea

# assuming .gitignore_global takes a location of global gitignore (~) as a root
Desktop/Dev/**/.idea
</code></pre>

<p>Neither seem to work (however, adding just <code>.idea</code> works, so this global gitignore is used by git - however, I don't want to ignore .idea for my personal projects in other folders).</p>

<p>How are global excludes supposed to work?</p>

<p>Which folder is considered by git as a 'root'? (in case of normal <code>.gitignore</code>, all paths are relative to a repository root, but global gitignore seems to work differently).</p>

<p>Thanks!</p>

<p>I'm on a Mac, git version 2.17.2 (Apple Git-113)</p>

<p>EDIT: As per @torek:</p>

<blockquote>
  <p>The global gitignore is treated as if it were in the root Git directory (the work-tree top level).</p>
</blockquote>

<p>So, there is no way to accomplish this, as there is no way to check the path of a whole project.</p>
","5","38729","",""
"37213330","929902","2016-05-13 14:58:37","2","118","<git><version-control><gitignore><atlassian-sourcetree>",".gitignore exception is including extra files","<p>I have .gitignore file as:</p>

<pre><code>MyCompany.MyProject.OAuth/bin/
!MyCompany.MyProject.OAuth/bin/Debug/MyCompany.MyProject.OAuth.dll
</code></pre>

<p>For some reason source tree showing ""MyCompany.MyProject.OAuth.dll"" in commit list and some other files like;</p>

<pre><code>MyCompany.MyProject.OAuth/bin/Debug/AutoMapper.xml
MyCompany.MyProject.OAuth/bin/Debug/Castle.Core.xml
MyCompany.MyProject.OAuth/bin/Debug/Castle.Windsor.xml
MyCompany.MyProject.OAuth/bin/Debug/Newtonsoft.Json.xml
MyCompany.MyProject.OAuth/bin/Debug/MyCompany.MyProject.OAuth.dll
MyCompany.MyProject.OAuth/bin/Debug/MyCompany.MyProject.OAuth.dll.config
</code></pre>

<p>If I remove second line file ignore file it removes everything in this case (as expected). All I want is to include ""MyCompany.MyProject.OAuth.dll""</p>

<p>It is doing a wildcard match or something? and ideas?</p>
","0","929902","0","0"
"53267725","2980080","2018-11-12 18:04:29","0","73","<git><gitignore>","Configure git not to use "".gitignore"" but ""gitignore""","<p>For reasons that do not add anything to this question<sup>1</sup>, I would like to know whether it is possible to configure git to use <code>gitignore</code> instead of <code>.gitignore</code>.</p>

<p>A similar situation is having <code>git</code> instead of <code>.git</code> as the git working dir of a repository, which can be easily accomplished by adding the line</p>

<pre><code>gitdir: ./git
</code></pre>

<p>to a <code>.git</code> file living at the root folder of the project. Hence I wonder whether it is possible to tell git not to use <code>.gitignore</code> but another file to contain the rules for files and folders that need not to be tracked.</p>

<p>There are <a href=""https://stackoverflow.com/q/6117109/2980080"">similar questions</a> suggesting the use of <code>$GIT_DIR/info/exclude</code> as a solution. Even though this leverages in practice the <a href=""https://stackoverflow.com/a/23305143/2980080"">same mechanisms</a> used by the gitignore file, my question is whether the actual <code>.gitignore</code> could be assigned to be some other file.</p>

<p><hr>
<sup>1</sup> For the curious reader: I sync my personal machines, but I do not want to sync hidden files and folders since I like to have different configuration files on different machines. Still, I would like my git repositories to be in sync with the minimum possible effort. This is something I only do with my own projects, where I am often the only contributor -- so please let us not discuss bad and good practices of git usage, and instead keep the focus on the actual question :)</p>
","3","2980080","",""
"69985106","11652652","2021-11-16 07:16:30","0","38","<git><gitignore>","How to add to gitignore specific files?","<p>can you please tell me how to add to .gitignore files with names that contain a part of the name.</p>
<p>My file 2021-11-08-11-29-42.060-VBoxSVC-8706.log</p>
<p>Example .gitignore</p>
<pre><code>*VBox*.log
</code></pre>
","3","11652652","",""
"37230307","1577873","2016-05-14 18:19:06","0","1095","<git><gitignore>","Patterns in the .gitignore file and elsewhere","<p>Find below two quotes from <a href=""https://git-scm.com/docs/gitignore"" rel=""nofollow noreferrer"">this link:</a> </p>

<p>1) In <code>DESCRIPTION</code>:</p>

<blockquote>
  <ul>
  <li>Patterns read from the command line for those commands that support them.</li>
  </ul>
</blockquote>

<p>2) In <code>PATTERN FORMAT</code> (emphasis is mine):</p>

<ul>
<li><blockquote>
  <p>If the pattern does not contain a slash /, Git treats it as a shell
  glob pattern and checks for a match against the pathname relative to
  the location of the .gitignore file (<strong>relative to the toplevel of the
  work tree if not from a .gitignore file</strong>).</p>
</blockquote></li>
</ul>

<p>Both quotes (the second one in bold characters above) seem to refer to a <strong>git ignore</strong> command (not a file) which is mentioned in <a href=""https://stackoverflow.com/a/19659214/1042389"">this answer</a> in SO. The problem that I see here, is that this command is not even mentioned in the <a href=""https://git-scm.com/book/en/v2"" rel=""nofollow noreferrer"">Pro Git book</a>. Thus, it may be that my interpretation about the quotes above is just wrong.</p>

<p>I have another question about the <code>.gitignore</code> file and this is about <a href=""https://stackoverflow.com/questions/4308610/how-to-ignore-certain-files-in-git#comment43965500_4308628"">this comment</a> in SO, that I repeat below:</p>

<p><code>You can put .gitignore anywhere in a git project - if a path starts with /, it will be relative to the location of the .gitignore file; otherwise it will refer recursively to files in the current directory and its descendant directories.</code></p>

<p>I just can't see how to deduce this from the <a href=""https://git-scm.com/docs/gitignore"" rel=""nofollow noreferrer"">link given above</a>.</p>
","4","1577873","",""
"53292720","5572627","2018-11-14 03:21:18","0","147","<git><gitignore>","gitignore for git add","<p>I want gitignore a file that is already committed and pushed to master;</p>

<p>Meaning, I want to ignore any change of that file.</p>

<p>But after I add the path in gitignore, it is still included in commit and pushed when I use </p>

<pre><code>git add .
</code></pre>

<p>how do I ignore such file ?</p>
","2","5572627","",""
"70620954","10873713","2022-01-07 12:01:11","1","122","<laravel><gitignore>","How to exclude .gitignore rules only once?","<p>Make once init of my laravel 8 app on server(ubuntu 20) I need to upload some images under storage, which is excluded
from git by .gitignore rules.</p>
<p>I do not like to remove .gitignore at all, but if there is a way to exclude these rules only once ?</p>
<p>Seems there is some force option, but how can I use it running command locally :</p>
<pre><code>git push -u origin master
</code></pre>
<p>and on server :</p>
<pre><code>git pull origin master
</code></pre>
<p>?</p>
<p>My root .gitignore:</p>
<pre><code># These are some examples of commonly ignored file patterns.
# You should customize this list as applicable to your project.
# Learn more about .gitignore:
#     https://www.atlassian.com/git/tutorials/saving-changes/gitignore

# Node artifact files
node_modules/
dist/

# Compiled Java class files
*.class

# Compiled Python bytecode
*.py[cod]

# Log files
*.log

# Package files
*.jar

# Maven
target/
dist/

# JetBrains IDE
.idea/

# Unit test reports
TEST*.xml

# Generated by MacOS
.DS_Store

# Generated by Windows
Thumbs.db

# Applications
*.app
*.exe
*.war

# Large media files
*.mp4
*.tiff
*.avi
*.flv
*.mov
*.wmv


/public/js/laravel.app.js
/public/js/oneui.app.js
/public/js/tables_datatables.js
/public/css/oneui.css

composer.lock

package-lock.json

.env
vendor/
route_list.txt
</code></pre>
<p>Which is correct syntax ?</p>
<p>Thanks!</p>
","5","10873713","",""
"37912861","6486814","2016-06-19 23:26:25","1","309","<git><gitignore>","ignore a .odt# file for a git repo","<p>I cannot make git to ignore the next file (using a local .gitinore file) :<br />
.~lock.osc-kontrol2ms.odt#</p>
<p>It's a lock file for the libreOffice Writer document used to make notes for the project, and exists only if the document is open. Tried several types of wildcards and escapes in .gitignore, but the file keeps showing up as 'changed' in 'git status' and the git-cola GUI. Some other hidden files and directories are ignored nicely. I managed to remove the file from the git repo itself (it was added to the repo on creation).</p>
<p>I would appreciate some suggestions (running git v1.9.1 on ubuntu linux).</p>
","0","6486814","",""
"37919728","4671053","2016-06-20 10:06:37","0","200","<git><gitignore>","Allow only specific subdirectories on .gitignore","<p>I have some NuGet packages and I need to push some files that are on the build directory, the problem is that github default gitignore for VisualStudio ignores all subdirectories in packages directory.</p>

<pre><code>/packages/SomePackage/build/ &lt;-- Allow
/packages/SomePackage/OtherDirectory/ &lt;-- Ignore
/packages/OtherPackage/AnotherDirectory/ &lt;-- Ignore
</code></pre>

<p>In .gitignore I have this:</p>

<pre><code>**/packages/*
!**/packages/**/build/ 
</code></pre>

<p>But it doesn't work.</p>

<p>How can I make it work?</p>
","0","4671053","",""
"37924614","2294122","2016-06-20 14:05:43","0","701","<git><gitignore>","Why is .gitignore deleting files from my projects repository?","<p>I placed some files in the .gitignore and now it's deleting files and entire folders from the project's repo.</p>

<p>Anyone knows how and why is this happening?</p>

<p>Thanks!</p>
","6","2294122","",""
"37930692","6471630","2016-06-20 19:50:18","3","963","<git><version-control><gitignore><git-add>",".gitignore, git add, and files mysteriously disappearing","<p>I have a project, and have shared the root folder through git.  </p>

<p>My compatriots and I are using different versions of Gradle (and have named the project different things), so it would be appropriate for some things in the .idea folder (a certain folder) to be in the .gitignore file. I did not realize this until now, when my friend has pulled it, changed many things due to using a different version, and now pushed it back.</p>

<p>I have added to the .gitignore file:</p>

<pre><code>/.idea/
</code></pre>

<p>However, git seems to still be sending the changes in that folder to the Github repo.</p>

<p>I have checked out a few things, including <a href=""https://stackoverflow.com/questions/15774606/git-add-does-add-files-listed-in-gitignore"">this</a>, <a href=""https://www.jamescoyle.net/how-to/1094-ignoring-files-in-git-with-gitignore"" rel=""nofollow noreferrer"">this</a>, and a few more questions on stack overflow.</p>

<p>I ran <code>git rm --cached .idea/</code> and that successfully kept the changes from being pushed. However, if I checkout another branch and then return to this one, it does not include the appropriate files in the .idea directory.</p>

<p>Thank you,</p>

<p>A confused coder</p>
","2","6471630","",""
"70679116","15394724","2022-01-12 09:26:59","2","4944","<git><gitignore>","How can i exclude "".exe"" file types from my git commit?","<p>I can exclude single files from my git commit but I want to exclude all files which have <code>.exe</code> file type.</p>
","4","15394724","",""
"70707383","15416156","2022-01-14 07:39:13","0","82","<git><github><gitignore>","How to add rules for gittgnore so that git ignore all types of files exept one type","<p>I have a C++ project. I want to push it on GitHub. In that project there is many types of files. But I want to have only <code>.cpp</code> files on my GitHub repository.</p>
<p>So, how can I set the rules for it thus only <code>.cpp</code> files upload to GitHub rather than all other files.</p>
","3","15416156","0","0"
"70728360","8430441","2022-01-16 08:11:03","0","386","<github><gitignore>","How to avoid uploading all log files using .gitignore","<p>I am trying to avoid pushing appLog to git,
Here's my appLogs.
<a href=""https://i.stack.imgur.com/SqmWx.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/SqmWx.png"" alt=""enter image description here"" /></a>
and I am using bellow list on .gitignore file,</p>
<pre><code>appLog.log
appLog.log.*.gz
</code></pre>
<p>still github desktop is showing me the files in the list.
<a href=""https://i.stack.imgur.com/NPIEI.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/NPIEI.png"" alt=""enter image description here"" /></a></p>
<p>Can anyone pls help me to fix this.
Thanks in advance.</p>
","0","8430441","",""
"70733998","13478452","2022-01-16 20:41:50","0","15","<git><gitignore>","How to get .config folder not to be ignored by .gitignore","<p>I'm trying to create a .gitignore that will ignore everything except from some folders and files. However, I can't get to &quot;unignore&quot; folder that begins with a dot.</p>
<p>This is my <code>.gitignore</code>:</p>
<pre><code>*
!.gitignore

!.tmux.conf

!.config/lvim/
!.config/nvim/
</code></pre>
<p>Right now is properly ignoring every file except <code>.gitignore</code> and <code>.tmux.conf</code> but it wont &quot;unignore&quot; the folders withing <code>.config/</code>.</p>
<p>How can I make it to detect these files?</p>
","3","13478452","",""
"53753201","10783434","2018-12-13 00:00:24","3","540","<git><gitignore>","Did Git change the ""!"" prefix behavior at .gitignore?","<p>I found a below sentence in Git 2.7 Release Notes.</p>

<blockquote>
  <ul>
  <li><p>Allow a later ""!/abc/def"" to override an earlier ""/abc"" that
  appears in the same .gitignore file to make it easier to express
  ""everything in /abc directory is ignored, except for ..."".</p>
  
  <p><a href=""https://raw.githubusercontent.com/git/git/master/Documentation/RelNotes/2.7.0.txt"" rel=""nofollow noreferrer"">Git 2.7 Release Notes</a></p></li>
  </ul>
</blockquote>

<p>However, This function seems to be invalid in subsequent versions.</p>

<pre><code>$ git --version
git version 2.19.1
$  cat .gitignore
/abc
!/abc/def
$ mkdir abc
$ echo foo &gt; abc/def
$ git status
On branch master
nothing to commit, working tree clean
</code></pre>

<p>Did Git change the ""!"" prefix behavior at .gitignore? Or did I mistake?</p>
","1","10783434","0","0"
"70765087","17970323","2022-01-19 03:48:15","1","388","<visual-studio-code><gitignore><file-extension><file-icons>","What does the four horizontal lines symbol mean in vs code and does it mean my gitignore is not setup?","<p>When you create a new file without an extension in VS Code you get four horizontal lines stacked on top of one another; the bottom and the third one up is shorter than the others.
What type of file is this?
And when I setup a react-app, the .gitignore has the four-line icon by it instead of the git logo. Does this mean my gitignore isn't working? and if so, what can I do about this?</p>
","0","17970323","",""
"70767865","5437621","2022-01-19 09:06:16","-1","321","<git><gitignore>","Git ignoring folder not in gitignore","<p>I have a git directory as follows:</p>
<p><a href=""https://i.stack.imgur.com/uDiEA.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/uDiEA.png"" alt=""enter image description here"" /></a></p>
<p>My <code>.gitignore</code> contains:</p>
<p><a href=""https://i.stack.imgur.com/83tfD.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/83tfD.png"" alt=""enter image description here"" /></a></p>
<p><code>git status</code> returns the following:</p>
<p><a href=""https://i.stack.imgur.com/8uewm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8uewm.png"" alt=""enter image description here"" /></a></p>
<p><code>git status --ignored</code> returns:</p>
<p><a href=""https://i.stack.imgur.com/n8zou.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/n8zou.png"" alt=""enter image description here"" /></a></p>
<p>Directory <code>template</code> is a regular directory that isn't a part of any other git project. It contains the following:</p>
<p><a href=""https://i.stack.imgur.com/VX17c.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/VX17c.png"" alt=""enter image description here"" /></a></p>
<p><code>git config --get core.excludesfile</code> returns:</p>
<p><a href=""https://i.stack.imgur.com/XoGjI.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/XoGjI.png"" alt=""enter image description here"" /></a></p>
<p>Any ideas why <code>git</code> is ignoring the directory <code>template</code> ? I even deleted the <code>.git</code> folder and re-initialized git but still the same thing is happening.</p>
","9","5437621","",""
"53780556","8965972","2018-12-14 13:17:45","-1","5551","<git><symfony><gitignore><symfony4>","What purpose does the .gitignore file serve in Symfony 4?","<p>I have noticed that Symfony Composer automatically creates a <code>.gitignore</code> file in a new project. However, I can't find anything about a <code>.gitignore</code> file in Symfony's documentation.</p>

<p>What is the purpose of this file, how does it relate to Symfony, and what should it contain?</p>
","1","8965972","",""
"70841698","11163122","2022-01-24 23:23:48","1","380","<windows><git><gitignore>","Windows global gitignore not working... ""Untracked files""","<p>Despite having a global gitignore on Windows OS, I am still getting a bunch of &quot;Untracked files&quot;.</p>
<p>Below is a truncated list of what it looks like:</p>
<pre class=""lang-none prettyprint-override""><code>Untracked files:
  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)
        foo/bar/__pycache__/
        foo/pkg_name.egg-info/
        scripts/MainProcess.log
        scripts/__pycache__/
        test/foo/bar/__pycache__/
        test/test_pkg_name.egg-info/
        venv/
</code></pre>
<p><strong>What am I doing wrong?  What am I missing?</strong></p>
<hr />
<p><strong>Background</strong></p>
<p>On Windows 10 Pro my <code>git</code> version is <code>git version 2.34.1.windows.1</code>, and here's my <code>~/.gitconfig</code>:</p>
<pre><code>[core]
    excludesfile = C:\\Users\\username\\.config\\git\\ignore
</code></pre>
<p><code>git config --list --show-origin</code> outputs:</p>
<pre><code>file:C:/Users/username/.gitconfig       core.excludesfile=C:\Users\username\.config\git\ignore
</code></pre>
<p><code>git check-ignore **.*</code> outputs nothing.</p>
<p>Here is the PowerShell script used to generate the global gitignore:</p>
<pre><code>New-Item -ItemType Directory -Force -Path $Env:USERPROFILE\.config\git

'Global/JetBrains','Global/Vim','Global/VisualStudioCode','Global/macOS','Python','Terraform' `
  | ForEach-Object {
    Invoke-RestMethod -Uri &quot;https://raw.githubusercontent.com/github/gitignore/master/$PSItem.gitignore&quot;
  } &gt; $Env:USERPROFILE\.config\git\ignore

git config --global core.excludesfile $Env:USERPROFILE\.config\git\ignore
</code></pre>
<p>The result is a <code>C:\Users\username\.config\git\ignore</code> file in UTF-16 LE encoding with <code>LF</code> endings.  You can see the full file in a Pastebin here: <a href=""https://pastebin.com/a730JHtc"" rel=""nofollow noreferrer"">https://pastebin.com/a730JHtc</a></p>
<p>Lastly, the checked out repo also has a per-repo <code>.gitignore</code> (UTF-8 encoding, <code>CRLF</code> line endings) inside that looks like this:</p>
<pre><code># Follow README.rst instructions on global gitignore

</code></pre>
<p>The <code>README.rst</code> instructions it speaks of have been translated into this question.</p>
<hr />
<p><strong>Research</strong></p>
<p>There are many similar questions like this, none of them solved my problem:</p>
<ul>
<li><a href=""https://stackoverflow.com/questions/7335420/global-git-ignore"">Global Git ignore</a></li>
<li><a href=""https://stackoverflow.com/questions/36930938/my-gitignore-global-is-not-working-even-though-gitconfig-specify-the-absolute-pa"">My gitignore_global is not working even though gitconfig specify the absolute path</a></li>
<li><a href=""https://stackoverflow.com/questions/10324649/global-gitignore-being-um-ignored"">global gitignore being, um, ignored</a></li>
<li><a href=""https://mike.place/2020/global-gitignore/"" rel=""nofollow noreferrer"">https://mike.place/2020/global-gitignore/</a></li>
<li><a href=""https://infyom.com/blog/how-to-setup-global-git-ignore-in-window"" rel=""nofollow noreferrer"">https://infyom.com/blog/how-to-setup-global-git-ignore-in-window</a></li>
</ul>
<p>Similar unanswered questions:</p>
<ul>
<li><a href=""https://stackoverflow.com/q/64355852/11163122"">Global .gitignore not working, DS_Store files are still showing in untracked files</a></li>
<li><a href=""https://stackoverflow.com/questions/3955882/having-problems-with-gitignore-and-untracked-files"">Having problems with .gitignore and Untracked files</a></li>
</ul>
","2","11163122","",""
"38130646","5175197","2016-06-30 18:22:48","4","1818","<git><android-studio><gitignore>","Why .gitignore not working for the new project in Android Studio?","<p>I created project in Android Studio with .gitignore file.</p>

<pre><code>.DS_Store

# built application files
*.apk
*.ap_

# files for the dex VM
*.dex

# Java class files
*.class

# generated files
bin/
out/
gen/

# Libraries used by the app
# Can explicitly add if we want, but shouldn't do so blindly.  Licenses, bloat, etc.
/libs


# Build stuff (auto-generated by android update project ...)
build.xml
ant.properties
local.properties
project.properties

# Eclipse project files
.classpath
.project

# idea project files
.idea/
.idea/.name
*.iml
*.ipr
*.iws

##Gradle-based build
.gradle
build/
</code></pre>

<p>After this I used <code>git init</code> command in project directory.
<a href=""https://i.stack.imgur.com/UFeJZ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/UFeJZ.png"" alt=""git init screenshot""></a></p>

<p><code>git status</code> command
<a href=""https://i.stack.imgur.com/rt4MC.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/rt4MC.png"" alt=""git status screenshot""></a></p>

<p><code>git add .</code> and <code>git status</code> commands
<a href=""https://i.stack.imgur.com/ZIqrQ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ZIqrQ.png"" alt=""git add screenshot""></a></p>

<p><code>git commit</code> command
<a href=""https://i.stack.imgur.com/sWWLS.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/sWWLS.png"" alt=""git commit screenshot""></a></p>

<p><code>git status</code> command with empty value
<a href=""https://i.stack.imgur.com/LuryV.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/LuryV.png"" alt=""git status screenshot""></a></p>

<p>Version of Git is 1.9.1. I don't understand why those files added to commit.</p>
","0","5175197","",""
"70882131","6801543","2022-01-27 16:26:15","1","55","<git><gitignore>",".gitignore not ignoring previously commited file in subdirectory despite *.<fileending>","<p>After having forgotten to include it in my .gitignore file, the file 'Labb1.mpf' was accidentally commited and sent upstream. Afterwards I added the line '*.mpf' into my gitignore file, but the file still showed up under 'Untracked Files' when I ran git status and became staged when I used 'git add .'. It was still in untracked files even after a commit which removed the file upstream. Labb.mpf is in a subdirectory with this structure:</p>
<pre><code>C:.
│   .gitignore
|
└───Labb1
    │   Labb1.mpf
</code></pre>
<p>I eventually managed to make it not get included in 'git add .' by specifically writing out the full pathname in the gitignore file.</p>
<pre><code>Labb1/Labb1.mpf
</code></pre>
<p>If I comment out this line and only run '*.mpf', the file become staged with the git add command again.</p>
<p>This is a solution in a way, but I don't know why and it is not a very elegant solution for a problem that may very well come up in other circumstances. Do anyone have any ideas as to how to use the asterisk command to successfully ignore, in this case, .mpf files?</p>
<p>I have tried with both one and two asterisks.</p>
<p>(Update) <strong>Solution</strong>:</p>
<p>Thanks to the tip from VonC, I got to know that any whitespace after a .gitignore declaration makes the statement fail. I had the '.mpf' statement written like this</p>
<pre><code>*.mpf #Remove project definition file
</code></pre>
<p>were as you can see, there is a whitespace between the statement and the comment. By moving the comment to a separate line (and removing the whitespace), the statement did as intended.</p>
","1","6801543","0","0"
"53789929","7803512","2018-12-15 05:51:52","0","228","<git><gitignore>","exclude folders from git repo using .gitignore","<p>I'm trying to setup a .gitignore file to exclude a folder from my git repo, but I can't seem to figure it out.</p>

<p>I want to exclude the folder named Yarn in base directory.</p>

<p><strong>.gitignore</strong>:</p>

<pre><code>Yarn/
</code></pre>

<p>But the folder stills exist in my repo when viewing it on github. </p>

<p>Have I misunderstood something and this is not how to use .gitignore?</p>
","2","7803512","",""
"38184251","123671","2016-07-04 12:00:59","3","554","<git><gitignore>","How can I .gitignore all files in directory except those starting with pattern?","<p>I have the following directory structure:</p>

<pre><code>project
  modules
    some-company-foo
    different-company-bar
    mycompany-a
    mycompany-b
    mycompany-c 
</code></pre>

<p>How can I ignore all the files in modules, except those that <strong>start with</strong> <code>mycompany</code>? </p>

<p>Similar to <a href=""https://stackoverflow.com/questions/7001126/git-ignore-all-except-subfolder"">git ignore all except subfolder</a>, but using a wildcard. I don't want to have to maintain a list of every <code>mycompany-...</code> folder in <code>.gitignore</code>.</p>

<p>Based on other answers, I've tried creating <code>modules/.gitignore</code> with the following contents:</p>

<pre><code>/*
# Do not ignore mycompany modules
!/mycompany*
</code></pre>

<p>And <code>modules</code> isn't mentioned in <code>project/.gitignore</code> at all.</p>

<p>But this doesn't work. Eg, </p>

<pre><code>git add /Users/mike/Documents/project/modules/mycompany-faq/questions/somefile.md
</code></pre>

<p>Fails with:</p>

<pre><code>The following paths are ignored by one of your .gitignore files:
modules/mycompany-faq/questions/somefile.md
Use -f if you really want to add them
</code></pre>

<p><strong>How can I ignore all the files in <code>modules</code>, except those that start with <code>mycompany</code></strong>? </p>
","5","123671","",""
"70933172","13022044","2022-01-31 21:44:27","1","2477","<git><gitignore>","How to write .gitignore so that it only includes YAML files and some specific files?","<p>I have a directory with the following contents:</p>
<pre><code>.
├── .gitattributes
├── .gitignore
├── .gitignore.bak
├── coding_init.bat
├── config
│   ├── config
│   │   └── default.yml
│   └── match
│       ├── base.yml
│       └── packages
├── init.bat
├── mykey
├── packages
│   └── a.txt
├── r.bat
├── reset.bat
├── run_github.bat
└── runtime
    ├── disabledv2.ico
    ├── espanso-daemon.lock
    ├── espanso-worker.lock
    ├── espanso.lock
    ├── espanso.log
    ├── formv2.ico
    ├── icon_no_backgroundv2.png
    ├── iconv2.png
    ├── kvs
    │   ├── has_completed_wizard
    │   ├── has_displayed_welcome
    │   └── has_selected_auto_start_option
    ├── normalv2.ico
    ├── search.png
    ├── tray_explain_image.png
    └── wizardv2.ico
</code></pre>
<p>I want to create a <code>.gitignore</code> file so that only the following files are included in my commits:</p>
<ul>
<li><code>.yml</code> and <code>.yaml</code> files</li>
<li><code>.gitattributes</code></li>
<li><code>.gitignore</code></li>
</ul>
<p>So only these files should go into my commits:</p>
<pre><code>.gitattributes
.gitignore
config/config/default.yml
config/match/base.yml
</code></pre>
<p>I've read the git's documentation about the <code>.gitignore</code> but I still can't make it work. I'm using <code>git version 2.34.0.windows.1</code>.
The following is what I've tried.</p>
<pre><code>C:\test&gt;type .gitignore
*
!*/
!*.yaml
!*.yml
!.gitignore
!.gitattributes
C:\test&gt;git add * &amp;&amp; git commit -m &quot;Auto commit&quot;
[master (root-commit) 3bfab66] Auto commit
 17 files changed, 10 insertions(+)
 create mode 100644 .gitattributes
 create mode 100644 .gitignore
 create mode 100644 config/config/default.yml
 create mode 100644 config/match/base.yml
 create mode 100644 packages/a.txt
 create mode 100644 runtime/disabledv2.ico
 create mode 100644 runtime/espanso-daemon.lock
 create mode 100644 runtime/espanso-worker.lock
 create mode 100644 runtime/espanso.lock
 create mode 100644 runtime/espanso.log
 create mode 100644 runtime/formv2.ico
 create mode 100644 runtime/icon_no_backgroundv2.png
 create mode 100644 runtime/iconv2.png
 create mode 100644 runtime/normalv2.ico
 create mode 100644 runtime/search.png
 create mode 100644 runtime/tray_explain_image.png
 create mode 100644 runtime/wizardv2.ico

C:\test&gt;
</code></pre>
<h2>Update</h2>
<p>I've created a recording to show my problem.
<a href=""https://i.stack.imgur.com/unglX.gif"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/unglX.gif"" alt=""enter image description here"" /></a></p>
<h2>Update 2</h2>
<pre><code>C:\kj&gt;type .gitignore
# Ignore everything by default
*

# Don't ignore directories (so we can look inside them, for other files)
!*/

# Don't ignore these
!*.yaml
!*.yml
!.gitattributes
!.gitignore
C:\kj&gt;
C:\kj&gt;rm -rf .git
C:\kj&gt;git init
Initialized empty Git repository in C:/kj/.git/

C:\kj&gt;git add . --dry-run
add '.gitattributes'
add '.gitignore'
add 'config/config/default.yml'
add 'config/match/base.yml'
add 'runtime/disabledv2.ico'
add 'runtime/espanso-daemon.lock'
add 'runtime/espanso-worker.lock'
add 'runtime/espanso.lock'
add 'runtime/espanso.log'
add 'runtime/formv2.ico'
add 'runtime/icon_no_backgroundv2.png'
add 'runtime/iconv2.png'
add 'runtime/normalv2.ico'
add 'runtime/search.png'
add 'runtime/tray_explain_image.png'
add 'runtime/wizardv2.ico'

C:\kj&gt;
C:\kj&gt;rm -rf .git
C:\kj&gt;git init
Initialized empty Git repository in C:/kj/.git/

C:\kj&gt;git add \*.yml .gitattributes .gitignore --dry-run
fatal: \*.yml: '\*.yml' is outside repository at 'C:/kj'

C:\kj&gt;git add *.yml .gitattributes .gitignore --dry-run
add '.gitattributes'
add '.gitignore'
add 'config/config/default.yml'
add 'config/match/base.yml'

C:\kj&gt;
</code></pre>
","3","13022044","",""
"38191198","2731526","2016-07-04 19:30:53","2","1606","<xcode><swift><git><version-control><gitignore>","How can I fix error: pathspec 'git-practice-project/git-practice-project' did not match any file(s) known to git","<p>I've created a project to practice using Git with Xcode and GitHub. After a lot of work, I've got the repositories created both locally and remotely. I just tried to make a commit and got this error:</p>

<p><a href=""https://i.stack.imgur.com/bRO8M.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bRO8M.png"" alt=""enter image description here""></a></p>

<p>Here's what I'm trying to commit:</p>

<p><a href=""https://i.stack.imgur.com/JPi0i.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/JPi0i.png"" alt=""enter image description here""></a></p>

<p>The last things I did before I got this error were:</p>

<ul>
<li>I added a .gitignore file using the GitHub Swift template in order to remove the .xcscheme file from the cache</li>
<li>from the Terminal, I ran 'git rm --cache'</li>
<li>I created the test_file and then tried to Commit</li>
</ul>

<p>But I can see the folder in the finder:</p>

<p><a href=""https://i.stack.imgur.com/wokNJ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/wokNJ.png"" alt=""enter image description here""></a></p>

<p>I looked around SO a lot and found many questions about git commit problem but what I found had mostly to do with diacritics and other issues that aren't the same as mine.</p>

<p>Did the 'git rm --cache' lead to this situation? What can/should I do to safely correct this problem?</p>

<p>Thanks</p>

<p><strong>Update</strong>: Seems I really got myself into pickle. I've got nested 'git-practice-project' directories several levels deep:</p>

<p><a href=""https://i.stack.imgur.com/vCU6i.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/vCU6i.png"" alt=""enter image description here""></a></p>

<p>I've started at the deepest directory, did an ls, and a git status, the backed myself up to the top doing the same thing at each level. It looks like only the two highest directories have uncommitted changes and the project.pbxproj file exists in both of them.</p>
","0","2731526","0","0"
"38197955","766299","2016-07-05 07:48:13","6","1101","<android><git><android-studio><gitignore>","How to add proguard mapping file on git (exclude in gitignore, Android Studio)","<p>I need to add this file on git (Android Studio Project)<br>
<strong><em>app/build/outputs/mapping/my_flavor/relese/mapping.txt</em></strong><br>
This is my .gitignore file (root of the project)  </p>

<pre><code>...
build/
*/build/
!build/outputs/mapping/my_flavor/release
...
</code></pre>

<p>This is my .gitignore file (module app)  </p>

<pre><code>...
/build
!/build/outputs/mapping/my_flavor/release
...
</code></pre>

<p>The files contained in app/build/outputs/mapping/my_flavor/release are always excluded by git.<br>
Any suggetion on how I can solve it?<br>
Regards</p>
","2","766299","0","0"
"53797085","4061181","2018-12-15 20:40:55","-1","33","<git><gitignore>","Adding several items to .gitignore","<p>I have a project with a layout like this:</p>

<pre><code>folder_a
    folder_b
       file1.html
       file2.html
    folder_c
       file3.html
       file4.html
    folder_d
    .gitignore
</code></pre>

<p>Now, my goal is to include <code>file3.html</code> and the entire contents of <code>folder_a/folder_b</code> to .gitignore. To achieve this, I have written the following in .gitignore:</p>

<pre><code>folder_b/
folder_c/file3.html
</code></pre>

<p>This seems elementary, and yet it doesn't work for me. The data still gets updated. What am I doing wrong? I've read the <a href=""https://ru.atlassian.com/git/tutorials/saving-changes/gitignore"" rel=""nofollow noreferrer"">doc</a>, and now it seems like I should write the full path, is it true? I am stuck.</p>
","5","4061181","",""
"38219957","6450105","2016-07-06 08:56:42","18","32803","<android-studio><gitignore>","Where to put gitIgnore file in Android Studio?","<p>I am developing an app and I must take that project to GitHub. Now, I must make gitIgnore file. I know that file is used to ignore some specified files from my project. I used gitIgnore.io service and I received generated file. This is my gitIgnore file:</p>

<pre><code># Created by https://www.gitignore.io/api/android

### Android ###
# Built application files
*.apk
*.ap_

# Files for the ART/Dalvik VM
*.dex

# Java class files
*.class

# Generated files
bin/
gen/
out/

# Gradle files
.gradle/
build/

# Local configuration file (sdk path, etc)
local.properties

# Proguard folder generated by Eclipse
proguard/

# Log Files
*.log

# Android Studio Navigation editor temp files
.navigation/

# Android Studio captures folder
captures/

# Intellij
*.iml
.idea/workspace.xml

# Keystore files
*.jks

### Android Patch ###
gen-external-apklibs
</code></pre>

<p>But I don't know were to copy this, and where to put that in my Android project.
Could someone help me?</p>

<p>I copied this file into my gitIgnore file in Android Studio, but when I have pushed that project on gitHub my gitnigore file looks like this:</p>

<pre><code>*.iml
.gradle
/local.properties
/.idea/workspace.xml
/.idea/libraries
.DS_Store
/build
/captures
</code></pre>

<p>So, that files that I copied into Android Studio are not here. What is the problem?</p>
","0","6450105","0","0"
"70971184","18109585","2022-02-03 12:20:01","0","190","<git><unix><gitignore><git-ls-files>","git ls-files run from subdirectory","<p>I'm trying to make a shell.sh that when run with bash will basically just run command: <code>git ls-files -o -i --exclude-standard</code></p>
<p>which works perfectly when run from base repo directory, but when i change current directory to *repo/folder and run it from there, there is no output.</p>
<pre><code>so: \
 *repo/git ls-files -o -i --exclude-standard -- good \
 *repo/folder/git ls-files -o -i --exclude-standard -- no bueno
</code></pre>
<p>does anyone know why it does this and how to remediate? Thanks</p>
","2","18109585","",""
"38225629","4112735","2016-07-06 13:45:58","0","61","<php><git><composer-php><gitignore>","PHP - how to make git trace local changes done in private packages downloaded via compsoer","<p>In my company we're working on a PHP application which uses composer to manage dependencies.
Some of these dependencies are our own private packages, which have their own different git repositories (the vendor directory, where they stay, is in gitignore).</p>

<p>My question is, how can we get git to trace changes on these packages, so we can easily commit them (currently we just manually copy the changed files to a locally cloned version of the package, and commit from there).</p>
","2","4112735","",""
"70982737","12288300","2022-02-04 07:22:19","2","3470","<git><github><version-control><gitignore>","git rm failed with fatal: pathspec xxx did not match any files","<p>I first found that .gitignore was not working for me even if I've specified the files that I didn't want to add. I tried using <code>git rm --cached</code> to untrack those files but I was stuck with the following error:</p>
<pre><code>fatal: pathspec 'System2/Benchmark/sys2.xtc' did not match any files
</code></pre>
<p>I've made sure that the file did exist, but git seemed not able to find it.</p>
<p>Since the size of this file is larger than 100 MB, I really needed to make .gitignore work for it. I'm wondering how I could solve the error I had when running <code>git rm --cached</code>. Thanks!</p>
","2","12288300","0","0"
"71007563","14442691","2022-02-06 13:19:37","0","93","<github><server><gitlab-ci><gitignore><pull>","Ignore changes in git pull","<p>I have a server with my dev version and an own JSON database for the server.
Local, i have the newest integrated features with an own database too (so i can modify &amp; co.)
My goal is that i can develope localy and if it's ready I execute git pull on the server and everything is there, except my local database.
So i added &quot;/databases&quot; to the .gitignore, pushed it and deleted the files in the github repository. Then i made my changes and pushed them to the git, but the /databases folder was there again. So i deleted it and pulled localy which deleted my local database. (Why???? i added it to the git ignore). If i pull it on the server, it would probably delte the real database. What can i do?</p>
<p>My gitignore:</p>
<pre><code>/databases
.DS_Store
</code></pre>
","7","14442691","",""
"38267912","6082290","2016-07-08 13:27:09","-3","92","<android><git><android-studio><bitbucket><gitignore>","Trash pushed by git in Android Studio","<p>I'd like to know what is that trash that was pushed by Android Studio to bitbucket. Those files and directories don't even exist in a project directory. What are they and how can I get rid of them. <a href=""http://i.stack.imgur.com/ib0qk.png"" rel=""nofollow"">BitBucketScreenshot</a></p>

<p>.gitignore? If so, why again project directory doesn't contain any of these? 
Greetings.</p>
","5","6082290","",""
"71053046","14589905","2022-02-09 16:14:20","1","87","<git><glob><gitignore>",".gitignore arbitrary sub git repositories","<p>I'm trying to find a catch-all solution for a <code>.gitignore</code> to exclude any directories containing another git repository. The motivation is to be able to locally organize git-repositories hierarchically without <code>git status</code> telling you there is something untracked.</p>
<p>In my mind it would look like;</p>
<pre><code># exclude sub git directories
**/.git/..
</code></pre>
<p>and as I understand the disassembled parts</p>
<ul>
<li><code>**</code> : anywhere in the repository</li>
<li><code>/</code> : any directory</li>
<li><code>.git/</code> : with a <code>.git/</code> directory</li>
<li><code>..</code> : exclude the directory containing the <code>.git/</code></li>
</ul>
<p>An example would be to exclude <code>bar/</code>-directory in the <code>foo/</code>-repository from file-tree: <a href=""https://i.stack.imgur.com/kXgjR.png"" rel=""nofollow noreferrer"">https://i.stack.imgur.com/kXgjR.png</a></p>
<p>However, git does not seem to regard <code>foo/bar/.git/..</code> equivalent to <code>foo/bar/</code>, or <code>foo/bar/./</code> for that matter.</p>
<p>Suggestions?</p>
","1","14589905","",""
"38323100","6383213","2016-07-12 07:59:21","1","562","<c#><model-view-controller><visual-studio-2015><gitignore><asp.net-mvc-5.1>","What I need to consider by createing gitignore file for mvc5","<p>I want to use a gitignore file for my latest MVC-5 project but I don't know what I need to consider.</p>

<p>I found in the web this <a href=""https://www.gitignore.io/api/visualstudio"" rel=""nofollow"">site</a>: </p>

<p>I never used before github or other sites to store and share my project :)</p>

<p>Thanks for the answers</p>
","1","6383213","0","0"
"38324782","5784743","2016-07-12 09:21:10","5","6010","<git><phpstorm><bitbucket><gitignore><gitkraken>",".gitignore isn't ignoring my files","<p>I'm currently using BitBucket for my repos with the git engine. I'm not using github since is a private project, so I can't set it public. </p>

<p>When I create my <code>.gitignore</code> file with gitignore.io, trying to ignore PhpStorm and WebStorm, Gitkraken (which is my git client on Mac) it isn't ignoring the <code>.idea</code> folder. And each time I change my workspace layout opening or closing a sidebar or a file, then git is tracking that change. I can't figure out what's wrong, since I've also tried to set <code>.idea/</code> in <code>.gitignore</code>, but the files inside it are still tracked... </p>

<p>Any ideas?</p>
","4","5784743","0","0"
"38337833","4725700","2016-07-12 19:57:00","6","1587","<git><gitignore>","gitignore what is the meaning of *~ and these other patterns?","<p>I came across <a href=""https://github.com/munen/p_slides/blob/master/.gitignore"" rel=""noreferrer"">this .gitignore file</a> and could not understand it. Especially the first line <code>*~</code> and the second one also.</p>

<p>Here are the complete contents for quick reference:</p>

<pre><code>*~
\#*\#
*.swp
tmp/*
private/**/*
public/cache
.DS_Store
.#*
example_presentation.html
</code></pre>

<p>Please explain it. Where does one find the detailed syntax of patterns used by gitignore, (apart from the man-pages)?</p>

<p>I have already tried the man-pages, but sad to say, I found the patterns descriptions there to be less helpful. Hence the question.</p>
","1","4725700","0","0"
"56459597","10339036","2019-06-05 11:27:34","1","495","<git><visual-studio><gitignore>","How to add specific file to .gitignore in Visual Studio solution?","<p>I want add specific file to be not tracking by <code>git</code>. Im using default <a href=""https://github.com/github/gitignore/blob/master/VisualStudio.gitignore"" rel=""nofollow noreferrer"">Visual Studio .gitignore</a> that was generated by <code>Visual Studio</code> while making solution.</p>

<p>Now, i have a file that i dont want to be tracked. I tried to add this file to <code>.gitignore</code>:</p>

<pre><code>/TaskManager-wpf/Services/UrlBuilder.cs
</code></pre>

<p>but when i paste it into last line of <code>.gitignore</code> it not work and when i change this file, <code>Visual Studio TeamExplorer</code> still tracking this file and want to commit changes on it.</p>

<p>My question is, how to add specific code <code>.cs</code> file into <code>.gitignore</code>?</p>
","1","10339036","",""
"73223875","6110732","2022-08-03 15:24:27","0","40","<git><gitignore>","entry in .gitignore is not ignored, when repo is cloned","<p>There are dozens of questions regarding the problem, that files listed in .gitignore, but I haven't found a solution among these yet.</p>
<p>I have a repo with several config files. But these config-files are only examples. They should be cloned to local, but if changed locally not be written back. They should only be written to the repo, if I add them via <code>git add &lt;filename&gt;</code> instead of <code>git add *</code>.</p>
<p>So far this works locally, if I use <code>git update-index --skip-worktree &lt;path-name&gt;</code>. <code>git update-index --assume-unchanged [path]</code> should work as well, but I didn't try it yet. Once I do this, everything works as expected.</p>
<p>But when I clone the repo to a new machine and change this file, changes are tracked and written back, when using <code>git add *</code>. The expected behaviour would be, that the file is copied to local, but never written back as long as it is mentioned in the .gitignore file.</p>
<p>I'm sure, there is a correct way to do this and I'm doing it wrong, but how?</p>
","9","6110732","",""
"56470770","3990767","2019-06-06 04:07:52","2","300","<git><gitignore>","Ignore line in .gitignore","<p>The .gitignore of a project (maintained by someone else) is like this:</p>

<pre><code>.idea/*
!.idea/watcherTasks.xml
</code></pre>

<p>I want to add private watcher tasks, so my watcherTasks.xml is changed. But I don't want to commit it.</p>

<p>I don't want to type <code>git reset .idea/watcherTasks.xml</code> (or specify the paths) every time I <code>git add</code>/<code>git commit</code>. So I tried to use .git/info/exclude to ignore the file locally:</p>

<pre><code>.idea/watcherTasks.xml
</code></pre>

<p>However, the .git/info/exclude line cannot override the .gitignore line (probably because <code>!</code> has higher priority).</p>

<p>Is there something I can put in .git/info/exclude to cancel the effect of the <code>!.idea/watcherTasks.xml</code> line in .gitignore? I don't want to modify the .gitignore since I do not maintain the project.</p>

<p><strong>This question does not ask for approaches like <code>git commit $path</code>, because I do not want to change future commit commands to use.</strong></p>
","4","3990767","0","0"
"56474353","11607877","2019-06-06 09:09:40","-1","1684","<git><gitignore>","git does not ignore directory even though it is in .gitignore file","<p><code>git status</code> prints the following:</p>

<pre><code>On branch master
Changes to be committed:
  (use ""git reset HEAD &lt;file&gt;..."" to unstage)

    new file:   .gitignore
    new file:   app.js
    new file:   dev1/test.js
    new file:   dev2/test.js
    new file:   git
    new file:   log.txt
</code></pre>

<p>content of <code>.gitignore</code> file:</p>

<pre><code>   hell.txt
   /dev1
</code></pre>

<p>After adding my whole content of the file, it is uploaded  even the file <code>hell.txt</code> as well as <code>dev1</code> folder too 
Also run the file in notepad, No issue of encoding
Also, I double checked this fact, first I included gitignore file then I included all the file.</p>
","4","11607877","",""
"56483295","11545391","2019-06-06 18:37:32","3","464","<xml><git><gitignore><atmelstudio>","How can I have git ignore parts of Atmel Studio's .cproj file?","<p>We have a couple people working on a single Atmel Studio 7 project that is in a git repo.  Everytime someone opens the project, Atmel Studio makes some user-specific changes to the project file (*.cproj) like adding the serial number of the debug probe and updating the exact Atmel Studio version number it was opened with.  I'd like to ignore these changes, but still keep the file in the repo since it includes all of the necessary project settings.</p>

<p>Does anyone have a good solution to this problem?</p>
","4","11545391","",""
"73239997","569976","2022-08-04 17:21:03","0","989","<git><gitignore>","files in .gitignore still show up when doing git status","<p>In my <code>.gitignore</code> (which is in the root of my project repo - the same directory that the hidden <code>.git</code> directory is in) I have just one line:</p>
<pre><code>config.php
</code></pre>
<p>When I do <code>git status</code> it shows unstaged changes to that file (in the root directory), which I wouldn't expect.</p>
<p>When I do <code>git ls-files . --ignored --exclude-standard --others</code> nothing is returned.</p>
<p>This sounds exactly like <a href=""https://stackoverflow.com/q/13999226/569976"">.gitignore Files Still Show Up in Untracked List</a> except in that issue the <code>.gitignore</code> was <em>not</em> in the root directory whereas mine is.</p>
<p>Any ideas as to what's wrong? I'm running Windows 11 Pro.</p>
","3","569976","",""
"73245078","8614398","2022-08-05 05:29:10","1","40","<git><gitignore>","Ignored folders getting removed from git after clearing cache","<p>I had uploaded all my source files to bitbucket and after that I changed my .gitignore file in git.
When I cloned the repository and changed my files my git status not ignoring the folders specified in the .gitignore file.</p>
<pre><code>git status --ignored
</code></pre>
<p>When I run the above command it is not showing the ignored folders. After a ton of search I found that <code>git rm -r --cached .</code> can clear local git cache and after that when i check status all my ignored folders are showing now. But the problem is after a I push my changes to repository the files and folders specified in the gitignore file is getting removed from repository. Is there any way i can prevent files from removing from repository.</p>
","0","8614398","0","0"
"56490631","11231601","2019-06-07 08:24:29","0","1307","<swift><xcode><git><gitignore>","Does Xcode 11 and its new frameworks like SwiftUI demand changes to .gitignore?","<p>I peaked into the .gitignore file that was in the SwiftUI example projects and found this. Should I add it to the current swift,macos template I pull from git? I'm not so concerned as I am curious whether it's superfluous.</p>

<p>I have copied and pasted it under the templates ##Various Settings <code>xcuserdata/</code></p>

<hr>

<p>This is what I copied:
<strong>/<em>.xcodeproj/project.xcworkspace/</em>
!</strong>/*.xcodeproj/project.xcworkspace/xcshareddata</p>

<p><strong>/<em>.xcodeproj/project.xcworkspace/xcshareddata/</em>
!</strong>/*.xcodeproj/project.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings</p>

<p><strong>/<em>.playground/playground.xcworkspace/</em>
!</strong>/*.playground/playground.xcworkspace/xcshareddata</p>

<p><strong>/<em>.playground/playground.xcworkspace/xcshareddata/</em>
!</strong>/*.playground/playground.xcworkspace/xcshareddata/WorkspaceSettings.xcsettings</p>
","0","11231601","",""
"73248322","19698763","2022-08-05 10:28:55","1","88","<git><gitignore><subdirectory>",".gitignore revert a rule in nested subfolders","<h2>Problem</h2>
<p>I have a folder structure like:</p>
<pre><code>.gitignore
notebooks/
notebooks/nb1.ipynb
notebooks/nb1_outputs.something
notebooks/folderA/
notebooks/folderA/nb2.ipynb
notebooks/folderA/nb2_outputs.someothers
notebooks/folderA/folderAA/nb3.ipynb
notebooks/folderA/folderAA/nb3_outputs.someothers
...
</code></pre>
<p>I want to ignore all stuff in the <code>notebooks/</code> folder except <code>*.ipynb</code> files.</p>
<h2>What I have tried</h2>
<p>I wrote in the <code>.gitignore</code> like this:</p>
<pre><code>/notebooks/*
!**.ipynb
</code></pre>
<p>but this did not work for <code>nb2.ipynb</code>, probably because it is in a subfolder which has been ignored by <code>/notebooks/*</code>.</p>
<p>Though I can write manually:</p>
<pre><code>/notebooks/*.*
!/notebooks/*.ipynb
/notebooks/*/*.*
!/notebooks/*/*.ipynb
/notebooks/*/*/*.*
!/notebooks/*/*/*.ipynb
</code></pre>
<p>Is there a way to do this more easily?</p>
<h2>Supplementary info</h2>
<pre><code>(base) ➜  git-test git:(master) ✗ cat .gitignore
notebooks/**
!notebooks/**.ipynb
(base) ➜  git-test git:(master) ✗ tree          
.
└── notebooks
    ├── folderA
    │   ├── nb2.ipynb
    │   └── nb2.out
    ├── nb1.ipynb
    └── nb1.out

2 directories, 4 files
(base) ➜  git-test git:(master) ✗ git status    
On branch master

Initial commit

Untracked files:
  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)

        .gitignore

nothing added to commit but untracked files present (use &quot;git add&quot; to track)
(base) ➜  git-test git:(master) ✗ git --version
git version 2.7.4
</code></pre>
","0","19698763","",""
"73254620","6419922","2022-08-05 19:43:29","0","57","<grails><wrapper><gitignore>","Should I exclude the Grails Wrapper from my git repository?","<p>I've never used the Grails Wrapper before. My preferred method has been SDKMAN so far.</p>
<p>I understand the purpose of the wrapper and basically how to use it. However I have no idea how it works.</p>
<p>Now, I have a couple of questions if I were to use the wrapper</p>
<ol>
<li>Should I exclude <strong>grails-wrapper.jar</strong> and/or <strong>grailsw</strong> from my git repository (.gitignore)?</li>
<li>When it comes to a minor Grails version upgrade (let's say 4.0 --&gt; 4.1), should I manually replace any of those files?</li>
<li>Is there any difference with upgrading a major Grails version (let's say 4.x --&gt; 5.x)</li>
</ol>
<p>My questions concern to any version of Grails (3.x, 4.x, 5.x) since the wrapper reinstatement in Grails 3.2.3</p>
","0","6419922","",""
"73285957","2930156","2022-08-09 02:33:59","-1","162","<git><gitignore>","How to git stash a file mentioned in .gitignore?","<p>I have a file <code>.vscode/settings.json</code> that's listed under <code>.gitignore</code>. Thus <code>git stash</code> will skip stashing it. This causes the following error when I check out another branch</p>
<pre><code>error: Your local changes to the following files would be overwritten by checkout:
    .vscode/settings.json
</code></pre>
<p>This happens even if I issue <code>git stash --all</code>. Even if I temporarily comment out the file path in <code>.gitignore</code>, this seems to not work since stashing will also stash the change to <code>.gitigore</code>, thereby nullifying the commenting out.</p>
<p>Why isn't <code>git stash --all</code> ignoring the <code>.gitignore</code> file? What's the best way to stash a <code>gitignored</code> file?</p>
","3","2930156","",""
"14425962","1421642","2013-01-20 15:18:33","6","4706","<macos><git><intellij-idea><gitignore>","Git is ignoring .idea folder, but that isn't in gitignore","<h2>The problem:</h2>

<p>I'm on OSX. I have a very small .gitignore file, and I even tried completely deleting the file. Nothing helps. Git doesn't see anything under my .idea directory for intellij.</p>

<p>At the very least I want to store .idea/runConfigurations/*. Worse than that, according to <a href=""http://devnet.jetbrains.net/docs/DOC-1186"" rel=""nofollow noreferrer"">this post</a>, <strong>all</strong> the files in that directory but 1 or 2 should be source controlled.</p>

<p>Is there an extra, hidden .gitignore setting somewhere I don't know about? Is there any way to search for and murder it if so?</p>

<h2>Steps taken so far:</h2>

<p>I manually added the most important ones with:</p>

<pre><code>git add .idea/runConfigurations -f
</code></pre>

<p>Trying that without the -f gave:</p>

<pre><code>The following paths are ignored by one of your .gitignore files:
.idea
Use -f if you really want to add them.
</code></pre>

<p>To reiterate: it gave that error even when I completely deleted my .gitignore file</p>

<h2>Similar-but-unsolved thread:</h2>

<p>After raking through SO I managed to find <a href=""https://stackoverflow.com/questions/9436405/git-is-ignoring-files-that-arent-in-gitignore"">one other thread</a> having the same problem. Unfortunately it got marked as answered even though the original poster replied that the problem remained unsolved. Regardless, MY version of the problem remains unsolved</p>
","3","1421642","0","0"
"67400791","1507124","2021-05-05 11:55:46","0","229","<git><gitignore><git-plumbing>","How to exclude files in Git while disregarding .gitignore?","<h1>Background</h1>
<p>I'm migrating a VCS to git. This is done by checking out from the old VCS (TFSVC) and checking into a git repository via scripts.</p>
<p>Essentially in such a loop:</p>
<pre class=""lang-sh prettyprint-override""><code>for x in $(seq 1 100)
do
  tf get $x  # get version x
  git add .  # add everything to index
  git commit # commit
done
</code></pre>
<h1>Problem</h1>
<p>The old VCS contains a <code>.gitignore</code>, as a part of the migration process, I don't want these patterns to apply. This can easily be fixed using <code>git add . --force</code>. The problem is that there are still things that I may want to ignore.</p>
<h1>What I've tried</h1>
<p>I was hoping to use <code>.git/info/exclude</code> for the purpose, but <code>git-add --force</code> apparently ignores this in addition to <code>.gitignore</code> rules. It seems the same goes for <code>core.excludesFile</code>.</p>
<h1>Ideal solution</h1>
<ul>
<li>Exclude the rules of <code>.gitignore</code></li>
<li>Use the rules in <code>.git/info/exclude</code> or some other exclude file or pattern</li>
<li>Somewhat performant, the process is slow enough as it is</li>
<li>Doesn't rely on modifying the working tree</li>
</ul>
<p>An option is of-course to simply <code>git restore --staged $EXCLUDE_PATH_SPEC</code> after adding everything to the index but I'm wondering if there isn't a better solution.</p>
<p>I seem to recall seeing an option for specifying an ignore/exclude glob but I can't seem to be able to find it.</p>
<p>Maybe there's a way to achieve this using a plumbing commands, like <code>git update-index</code>?</p>
<hr>
Edit
<p>I've added clarification that I'd rather not rely on a solution that modifies the working tree (ie: moving/modifying <code>.gitignore</code>) since it's been suggested multiple times. Mainly because of these reasons:</p>
<ol>
<li>There are nested <code>.gitignore</code> files</li>
<li>Their existence and contents rely on the state of the other VCS, I want to be in full control</li>
<li>There is another VCS tracking the files and so anything modifying the working tree, besides the incremental fetching from the other VCS complicates matters</li>
<li>It's in all likelihood slower (although maybe not slow enough to be a major concern)</li>
</ol>
","12","1507124","",""
"67437850","2493921","2021-05-07 15:35:03","0","278","<git><gitignore>",".gitignore file itself is not being ignored after an edit","<p>Prior to editing the .gitignore file in a project the following files were displayed when the status was queried:<br>
<a href=""https://i.stack.imgur.com/mlJPg.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/mlJPg.png"" alt=""enter image description here"" /></a></p>
<p>Wanting to ignore the multiple versions of sandbox Vue files, this was added to the project's .gitignore file at the bottom:</p>
<pre><code># app files
/src/modules/admin/views/sandbox*.vue
</code></pre>
<p>Now when the status is queried the following is displayed:<br>
<a href=""https://i.stack.imgur.com/IBJTD.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/IBJTD.png"" alt=""enter image description here"" /></a></p>
<p>Why is <code>../.gitignore</code> being displayed now?  What should be changed so that file is not displayed?</p>
","5","2493921","",""
"67491603","","2021-05-11 17:23:46","0","206","<java><json><git><gitignore>","How to configure the .gitignore file to not push a certain json file to git","<p>This is my directory structure in my java application. My IDE is intellij. I don't want to push example.json to git because the filesize is large.</p>
<pre><code>.
├── .idea
├── .mvn
├── src
    ├── main
        ├── java
        └── resources
            ├── example.json
    ├── test
├── target
</code></pre>
<p>I went through the gitignore file and saw this line: <code>!**/src/main/**/target</code> and tried to mimic this so that I don't push example.json. The line I inserted was <code>!**/src/main/resources/example.json</code> which I thought would work. However, after pushing to a test branch I saw that the example.json file was still being pushed. What is the proper way to configure the gitignore file to not push the example.json file to git?</p>
","1","","",""
"67492138","93210","2021-05-11 18:04:16","0","61","<git><reference><visual-studio-2017><nuget><gitignore>","How do I make sure Visual Studio 2017 references are not missing with .gitignore?","<p><a href=""https://i.stack.imgur.com/WEofG.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/WEofG.png"" alt=""enter image description here"" /></a></p>
<p>We are using Visual Studio 2017. I'm new here, but somehow my system has very different references than the older developers machine, but git shows no differences when we both are on the latest checkouts. The left side shows the working system, the right side shows the system after NuGet did whatever it did to update packages.</p>
<p>I didn't change the references manually, NuGet update wizards (or something) did.</p>
<p>Changing the references doesn't show anything in the changed files to be staged. I'm guessing this has to do with &quot;.gitignore&quot; file.  Does anyone know what should or should not be included? I haven't worked at a Microsoft shop for about 10 years so I'm used to VI and lower level C/C++ and Linux environments and I'm a bit lost on which menu or registry or whatever contains the information.</p>
<p>Right off the bat I see &quot;lib&quot; and &quot;packages&quot; are not included but those appear to be the same on both computers. &quot;.vs&quot; and &quot;.git&quot; have thousands of files different, but I'm guessing those should not be shared.</p>
<p>Any pointers would be appreciated.</p>
","0","93210","",""
"67493757","7142315","2021-05-11 20:14:01","0","1223","<git><gitignore><git-lfs>","git push hangs and fails after POST git-receive-pack","<p>I am trying to push my repository that has a lot of <code>.png</code>, <code>.mp4</code>, <code>.h5</code> files, that I can ignore.</p>
<h3>the directory structure:</h3>
<pre class=""lang-py prettyprint-override""><code>.gitignore
CV PROJECT
├───.vscode
├───Docker
├───src
│   ├───Game
│   ├───Main
│   │   └───__pycache__  
│   └───Video
│       ├───Images       
│       │   ├───test    
│       │   │   ├───boost # dir that has .png files 
│       │   │   ├───click # dir that has .png files 
│       │   │   └───upgrade # dir that has .png files 
│       │   └───train  
│       │       ├───boost # dir that has .png files 
│       │       ├───click # dir that, has .png files 
│       │       └───upgrade # dir that has .png files 
│       ├───Models # dir that has .h5 files  
│       └───Videos
│           ├───boost # dir that has .mp4 files
│           ├───click # dir that has .mp4 files
│           └───upgrade # dir that has .mp4 files
└───Tutorial
    └───.ipynb_checkpoints
</code></pre>
<p><em><strong>tl;dr</strong></em> what does my <code>.gitignore</code> need to look like?</p>
<hr />
<h2>the commands:</h2>
<pre class=""lang-py prettyprint-override""><code>git config --global http.postBuffer 2048M
git config --global http.maxRequestBuffer 1024M
git config --global core.compression 9

git config --global ssh.postBuffer 2048M
git config --global ssh.maxRequestBuffer 1024M

git config --global pack.windowMemory 256m 
git config --global pack.packSizeLimit 256m

# git hangs here
git push --verbose -f origin master
</code></pre>
<h3>the output:</h3>
<p>git hangs here:</p>
<pre><code>Total 133 (delta 29), reused 0 (delta 0), pack-reused 0
POST git-receive-pack (569667108 bytes)
</code></pre>
<p>so i tried to ignore them using this <code>.gitignore</code>:</p>
<pre><code>*.mp4
*.h5


Models/*
Videos/*
test/*
train/*

boost/*
upgrade/*
click/*
</code></pre>
<p>and got this output:</p>
<pre><code>remote: Resolving deltas: 100% (20/20), completed with 1 local object.
remote: warning: File src/Video/Videos/boost/b7.mp4 is 57.86 MB; this is larger than GitHub's recommended maximum file size of 50.00 MB
remote: warning: File src/Video/Videos/click/c7.mp4 is 73.08 MB; this is larger than GitHub's recommended maximum file size of 50.00 MB
remote: warning: File src/Video/Videos/upgrade/u6.mp4 is 56.50 MB; this is larger than GitHub's recommended maximum file size of 50.00 MB
remote: error: GH001: Large files detected. You may want to try Git Large File Storage - https://git-lfs.github.com.
remote: error: Trace: 3a803801864c0608c9e57dd7cf9d3ee3eaca6a180713b3c7119e8b0414c776ee
remote: error: See http://git.io/iEPt8g for more information.
remote: error: File src/Video/medmodel.h5 is 112.78 MB; this exceeds GitHub's file size limit of 100.00 MB
To https://github.com/romhayh/special-mario.git
 ! [remote rejected] master -&gt; master (pre-receive hook declined)
error: failed to push some refs to 'https://github.com/romhayh/special-mario.git'
</code></pre>
<p>after this i converted the <code>.gitignore</code> to <code>.gitattributes</code> (to not use <code>git lfs track</code>) and got the same error message:</p>
<pre><code>remote: Resolving deltas: 100% (29/29), completed with 1 local object.
remote: warning: File src/Video/Videos/boost/b7.mp4 is 57.86 MB; this is larger than GitHub's recommended maximum file size of 50.00 MB
remote: warning: File src/Video/Videos/click/c7.mp4 is 73.08 MB; this is larger than GitHub's recommended maximum file size of 50.00 MB
remote: warning: File src/Video/Videos/upgrade/u6.mp4 is 56.50 MB; this is larger than GitHub's recommended maximum file size of 50.00 MB
remote: error: GH001: Large files detected. You may want to try Git Large File Storage - https://git-lfs.github.com.
remote: error: Trace: 9add1b6eba287591037b40a5a483a1b7bb9d2746853150a2146bdf83b8e58b9c
remote: error: See http://git.io/iEPt8g for more information.
remote: error: File src/Video/Models/medmodel.h5 is 112.78 MB; this exceeds GitHub's file size limit of 100.00 MB
remote: error: File src/Video/medmodel.h5 is 112.78 MB; this exceeds GitHub's file size limit of 100.00 MB
</code></pre>
","0","7142315","",""
"31991687","1927337","2015-08-13 14:52:37","3","648","<git><vagrant><gitignore><vagrantfile>","How can I have git ignore local changes to a specific file, without modifying the .gitignore?","<p>My specific situation is this: I am working with a team on a git repo. We are using a vagrant machine, so in the git repo there is a Vagrantfile. I would like to modify my vagrant machine's configuration file to use specific amounts of memory and CPU cores, but i don't want to force all the other users of this repo to have these modifications. We DO want to have this Vagrantfile in the repo, so i can't add it to the .gitignore. I don't want to have to keep undoing and redoing my edits every time i commit my changes.</p>
","1","1927337","0","0"
"67545588","927377","2021-05-15 10:13:52","3","936","<git><gitignore><fnmatch>","What is the difference between a single /* and double /** trailing asterisk in a .gitignore file?","<p>Consider the following two patterns in a <code>.gitignore</code> file</p>
<pre><code>foo/*
foo/**
</code></pre>
<p>The <a href=""https://git-scm.com/docs/gitignore#_pattern_format"" rel=""nofollow noreferrer"">pattern format specification</a> states:</p>
<blockquote>
<p>An asterisk <code>*</code> matches anything except a slash. [...]</p>
</blockquote>
<blockquote>
<p>A trailing <code>/**</code> matches everything inside. For example, <code>abc/**</code> matches all files inside directory <code>abc</code>, relative to the location of the .gitignore file, with infinite depth.</p>
</blockquote>
<p>That sounds like the same thing to me when used at the end of a pattern directly after a slash. I did test a few cases - with, and without subdirectories below <code>foo</code> and various negated patterns - and did not observe any difference.</p>
<p><strong>Is there any scenario when one would chose <code>/**</code> over <code>/*</code>?</strong></p>
<hr />
<p>At first, I expected to see a use case with a pattern like the one below, but there wasn't because both patterns will ignore everything inside and as the specification also denotes <em>&quot;[...] it is not possible to re-include a file if a parent directory of that file is excluded [...]&quot;</em></p>
<pre><code>foo/*
!foo/a/b/c/file.txt

foo/**
!foo/a/b/c/file.txt
</code></pre>
","0","927377","",""
"67575854","8662444","2021-05-17 19:20:43","-1","82","<git><github><gitignore>","How Can I ignore more than one directory in .gitignore?","<p>When I put &quot;git status&quot; I get this:</p>
<pre><code>    main/__pycache__/wsgi.cpython-36.pyc
    posting/__pycache__/views.cpython-36.pyc
</code></pre>
<p>I tried putting this in my .gitignore file:</p>
<pre><code>main/__pycache__/
posting/__pycache__/
</code></pre>
<p>But, did not work</p>
","2","8662444","",""
"67593309","13708208","2021-05-18 20:10:46","1","829","<git><phpstorm><gitignore>","How to go back to previous directory in .gitignore","<p>I use PhpStorm as my IDE and it sets up <code>.gitignore</code> file in a directory called <code>.idea</code>. There are folders and files that I want to ignore but I can't go to previous folder no matter what.</p>
<p>Lets have file called <code>example.txt</code>. The folder tree looks like this:</p>
<pre><code>- /Project
  - /.idea
    - .gitignore
    - workspace.xml
  - /src
    - example.txt
</code></pre>
<p>How do I ignore <code>example.txt</code> file? I tried <code>../src/example.txt</code>, <code>src/example.txt</code>, <code>/../src/example.txt</code></p>
","1","13708208","",""
"32007264","1907895","2015-08-14 09:54:03","1","237","<git><gitignore>","git pull image folder only once","<p>I have decided to use <code>git</code> for my project management. I am getting used to it but i have one question. </p>

<p>I have set up a project on System A with some image file . Images are rarely going to change so i decided to place images folder to <code>gitignore</code>. </p>

<p>When I pull/clone project to other system I don't get that images. I know if I add them to <code>gitignore</code> it can't be pulled. But for first time cloning images will be needed for project. </p>

<p>I don't want image folder to be tracked by git but any way to sync that image folder ? </p>
","2","1907895","",""
"67624642","4186069","2021-05-20 16:42:53","-1","128","<git><gitignore>","Git .gitignore Commands","<p>I am reading the official GIT manual. However, I am finding that some things are not being ignored in my <strong>.gitignore</strong> file. For instance:</p>
<p>The GIT manual says, &quot;<em>You can end patterns with a forward slash (/) to specify a directory.</em>&quot;
<em>You can start patterns with a forward slash (/) to avoid recursively</em></p>
<p>As it stands, I have a directory in the same directory where the .gitignore file is located. I also have a directory entitled 'test'. Test has several sub-dirs and the last directory has a text file. The full path is <strong>test/matt/end/matt.txt</strong></p>
<p>I only have one command in the <strong>.gitignore</strong> file. For testing I am substituting to versions of it:</p>
<p>When I use the following:</p>
<p><strong>/test</strong> - It ignores the entire path including the matt.txt file. When I try:
<strong>test/</strong> - It does the same exact thing.</p>
<p>The GIT manual also says the following, &quot;<em>only ignore the TODO file in the current directory, not subdir /TODO:
/TODO</em>&quot;</p>
<p>Can someone please explain this to me please? Could the manual be wrong?</p>
<hr />
<p>I created a new git repository on Linux. You will see everything in the screen shot.</p>
<p>In the .gitignore file I have tried it both ways /matt and matt/ Take a look at the screen shot here <a href=""https://i.stack.imgur.com/8JORI.jpg"" rel=""nofollow noreferrer"">.gitignore</a>. Based on the GIT manual, it shouldn't be working this way.</p>
","8","4186069","",""
"67632820","13503258","2021-05-21 07:53:12","0","217","<gitignore><jetbrains-ide>","Problem with .idea folder and .gitignore file","<p>The <code>.git</code> and <code>.idea</code> folders are at the root of the project folder. But the <code>.idea</code> folder contains a <code>.gitignore</code> file, I don't know if I should create another at the root of the project, or I should use the one that already exists.</p>
","2","13503258","",""
"67660403","12500881","2021-05-23 13:39:13","8","3328","<git><amazon-web-services><gitignore><aws-cdk>","Shouldn't I git ignore cdk.out folder which is made by AWS CDK？","<p>AWS CDK create <code>cdk.out</code> project root. I don't know if I should add git files.</p>
","0","12500881","",""
"67687856","11647808","2021-05-25 12:23:53","-1","152","<git><gitignore>","how to make gitignore to ignore some of the folders inside your repo","<p>There are many similar topics on SO and I've read quite a few of them but the problem remained.</p>
<p>I want to be able to put a folder or file name in gitignore so that it doesn't appear in the repo online but remains locally.</p>
<p>What I did:</p>
<ol>
<li>there is a folder with files locally. I created a new repo using this folder using VSC. I can add and remove files locally, commit, and it will work fine - update the files and file structure.</li>
<li>then I added gitignore hoping to stop tracking some misc folders inside the working dir but after adding said folders it didn't ignore them.
There was a suggestion to try <code>git rm -r --catch .</code>, then <code>git add .</code> files back, commit and it would work. It did not.</li>
<li>I tried to <code>git rm -r --catch</code> individually. Strangely it only works on some folders. Not to mention I have to do it for many folders.</li>
<li>finally, as an ultimate solution (for me, I got mad), I just deleted everything locally from that repo leaving only readme and gitignore. SO suggested that one can't simply ignore/stop tracking files that are already in the repo and you have to do some reindexing and what's not but the point is, if the file was added after gitignore, you can ignore it without extensive bash use.
Here I just added all the needed files back to that repo locally where only readme and gitignore were. Then I started adding files to gitignore only to find out it wouldn't work. Or should I say some folders would be ignored and some of them wouldn't (top lvl folders inside work dir where gitignore is located). Folders with files, there are no more gitignores inside them or anything like that.</li>
</ol>
<p>I tried: <code>folder_name</code>, <code>/folder_name</code>, <code>folder_name/</code>, <code>folder_name/**</code>. From 3 folders only 1 would be inored.</p>
<p>If I try creating a new folder with a random name and adding it to ignore the file, it would be ignored.</p>
<p>Before any copy/pasting files back to the local repo folder I deleted the hidden git folder inside it.</p>
<p>This is the picture of my structure <a href=""http://ibb.co/F4WrX81"" rel=""nofollow noreferrer"">ibb.co/F4WrX81</a>
I just wanted to point out that I've used git casually before, more so to get used to it really, and it was all good. Here is an example <a href=""http://ibb.co/S5y7LBM"" rel=""nofollow noreferrer"">ibb.co/S5y7LBM</a> I would just create a project, work on it some time, then add gitignore, and everything would go smoothly</p>
<p>Any help or suggestions are much appreciated. I can either redo the whole thing or do some bashing. Don't really care at this point.</p>
<p>Thanks in advance.</p>
","3","11647808","",""
"32036374","5232551","2015-08-16 14:50:06","-1","398","<git><version-control><dropbox><gitignore>","Git and Dropbox, gitignore trouble","<p>me and my team have been trying to set up a version control repository in Dropbox, but we've run into a strange snag, not sure if it's because of Dropbox or not, but the gitignore file is being, well, ignored. We're working on windows 7, and we've tried most of the fixes we've found on <a href=""https://stackoverflow.com/questions/11451535/gitignore-not-working"">.gitignore is not working</a> but seems that none help, would you guys have any ideas on a fix, or recommend version/source control that plays well with Dropbox?</p>
","0","5232551","",""
"67712895","10750265","2021-05-26 21:22:38","0","273","<git><eclipse><gitignore>",".gitignore ignoring files which are excluded from the ignore list","<p>I'm doing a Java project using Eclipse with the in build git-functionality. I have an <code>Images</code> folder in the same directory as the <code>.gitignore</code> file.
I want to ignore all files in <code>Images</code> except <code>Destroyed-icon.png</code> <code>Layer_dot.png</code> <code>Not-enough-repair-packs-icon.png</code>.<br />
According to <a href=""https://stackoverflow.com/questions/1279533/is-there-a-way-to-tell-git-to-only-include-certain-files-instead-of-ignoring-cer"">Is there a way to tell git to only include certain files instead of ignoring certain files?</a> I should be able to use the following in my <code>.gitignore</code> file, but is doesn't work. The whole <code>Images</code> directory is ignored.</p>
<pre><code>Images
!Images/Destroyed-icon.png
!Images/Layer_dot.png
!Images/Not-enough-repair-packs-icon.png
</code></pre>
<p>I already tried adding/removing all <code>/</code> before and after <code>Images</code>, restarting eclipse, closing and reopening the project but none of that worked.<br />
There is nothing to Pull as well, my local repository is up to date.</p>
","3","10750265","",""
"14517440","113079","2013-01-25 07:41:11","42","38872","<xcode><gitignore><hidden-files>","How to add .gitignore file into Xcode project","<p>When making sure that iPhone project could be installed as an exact copy into a brand new computer via version control (git), I just realized that <strong>.gitignore</strong> file was missing. Added under version control, but now would like to add that file also <strong>into Xcode project</strong> for easy viewing and editing.</p>

<p>When using ""<code>Control-click</code> + <code>Add Files to myProject...</code>"" popup menu, I can't see any filenames starting with <code>.</code> (that's a dot). How can I add my .gitignore file into Xcode project?</p>
","1","113079","0","0"
"67750028","4858133","2021-05-29 09:57:09","2","1630","<git><flutter><gitignore>","Flutter: gitignore is... ignored","<p>I have a <code>gitignore</code> in my root folder, next to lib, ios, android, build... folders.</p>
<p>Inside it I have a bunch of ignored folders, one is <code>build/</code> but every time I do some changes this folder appears again:</p>
<blockquote>
<p>modified: build/ios/iphonesimulator/Runner.app/Frameworks/GTMAppAuth.framework/GTMAppAuth
modified:build/ios/iphonesimulator/Runner.app/Frameworks/GTMSessionFetcher.framework/GTMSessionFetcher</p>
</blockquote>
<p>I guess this has nothing to do with Flutter, that it's only Git, but this only happens with my Flutter projects, not with the rest</p>
","2","4858133","",""
"14525881","1146022","2013-01-25 16:20:00","0","125","<git><github><gitignore>","git ignore_global set but not being used by git","<p>I've read solutions from other questions git ignore files, but I still can't get it to work.</p>

<p>So here's what I've done: </p>

<ol>
<li>created <code>.gitignore_global</code> file. </li>
<li>added <code>.mp3 .mp4 .oog .wmv .wma</code> then saved. </li>
<li>executed this command : </li>
</ol>

<p><code>git config --global core.excludesfile .gitignore_global</code> </p>

<p>but when i commit it still adds my mp3 files. I even tried <code>git rm -r --cached .</code> then <code>git add .</code> to clear the cache, but even after that it still adds it back. what I'm I missing here?</p>
","1","1146022","",""
"67755445","1017466","2021-05-29 20:21:08","0","1081","<python><git><gitignore>","Why am I not able to exclude __pycache__ directory with .gitignore?","<p>I'm trying to exclude the pycache directory with these lines:</p>
<pre><code>aws_scripts/python/aws_tools/__pycache__/
*.pyc
</code></pre>
<p>I can list that directory from my current location:</p>
<pre><code>ls .\aws_scripts\python\aws_tools\__pycache__\

    Directory: C:\Users\bluet\OneDrive\Desktop\important_folders\Jokefire\git\jf_cloud_scripts\aws_scripts\python\aws_tools\__pycache__

Mode                 LastWriteTime         Length Name
----                 -------------         ------ ----
la---           5/16/2021 10:47 PM            763 aws_add_sg_list.cpython-39.pyc
la---           5/16/2021 10:47 PM           1173 aws_tag_resources.cpython-39.pyc
la---           5/16/2021 10:47 PM            894 banners.cpython-39.pyc
la---           5/16/2021 10:47 PM           1148 choose_accounts.cpython-39.pyc
la---            5/4/2021  8:10 AM          12871 ec2_mongo.cpython-38.pyc
la---           5/15/2021 10:01 AM          15714 ec2_mongo.cpython-39.pyc
la---           5/16/2021 10:47 PM            811 find_vpcs.cpython-39.pyc
la---           5/16/2021 10:47 PM           1183 init.cpython-39.pyc
la---           5/16/2021 10:47 PM            848 list_new_instances.cpython-39.pyc 
la---           5/16/2021 10:47 PM            937 modules.cpython-39.pyc
la---           5/16/2021 10:47 PM            665 read_account_info.cpython-39.pyc  
la---           5/16/2021 10:47 PM           6764 user_input.cpython-39.pyc
</code></pre>
<p>Yet, when I do a git status it still shows me the <code>__pycache__</code> directory:</p>
<pre><code>git status        
On branch develop
Your branch is up to date with 'origin/develop'.

Changes to be committed:
  (use &quot;git restore --staged &lt;file&gt;...&quot; to unstage)
        deleted:    aws_scripts/python/aws_tools/.gitignore

Changes not staged for commit:
  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
  (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)
        modified:   .gitignore
        modified:   aws_scripts/python/aws_tools/__pycache__/ec2_mongo.cpython-39.pyc
</code></pre>
<p>What am I doing wrong?</p>
","0","1017466","",""
"67770044","1565249","2021-05-31 08:10:15","2","131","<git><gitignore>","Exclude/include folders without contents using gitignore","<p>I am currently trying to exclude all contents of those 3 folders but keep the folders themselfs:</p>
<p><a href=""https://i.stack.imgur.com/OFLNp.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/OFLNp.png"" alt=""enter image description here"" /></a></p>
<ul>
<li>files/*</li>
<li>files/private/*</li>
<li>files/tmp/*</li>
</ul>
<p>But for now just the files directory gets included.
This is what my .gitignore looks like:</p>
<pre><code>default-export/files/*
default-export/files/private/*
default-export/files/tmp/*

!default-export/files/.gitkeep
!default-export/files/private/.gitkeep
!default-export/files/tmp/.gitkeep
</code></pre>
","9","1565249","",""
"32054684","2296642","2015-08-17 15:54:52","13","11791","<git><gitignore><prefix>","Can I gitignore files with a prefix?","<p>I have file <strong>a.css</strong> and <strong>b.css</strong> in the same folder. My framework combines those files in a file called <strong>temp.a12cab4598347b07f0079d.css</strong>
This file will be generated wherever there is a css file, so folder matching is no good.
Can I ignore all these files using something like</p>

<pre><code>temp.*.css
</code></pre>

<p>Thank you</p>
","2","2296642","0","0"
"14541253","507018","2013-01-26 20:27:01","96","147696","<git><gitignore>","Commit empty folder structure (with git)","<p>I have data directory in project's root. It has images directory and some files. Here is example:</p>

<pre><code>data
├── images
│   ├── image1.jpg
│   ├── image2.jpg
│   └── image3.jpg 
├── results.csv
└── r.txt
</code></pre>

<p>What to write in gitignore, to ignore files from data/ directory (that is results.csv and r.txt) and files from images/ directory (image.jpg, image2.jpg, image3.jpg)?</p>

<p>When I commit it, folder structure in repository should be:</p>

<pre><code>data/
└── images/
</code></pre>

<p>So, I just want empty folder structure to be commited.</p>
","1","507018","0","0"
"14553139","597624","2013-01-27 22:37:07","0","794","<android><git><gitignore>","How to put dir .apt_generated to gitignore","<p>I put to the .gitignore file</p>

<pre><code>.apt_generated
</code></pre>

<p>but everytime after recompiling the project eGit in Eclipse and <code>git status -s</code> show that the files in .apt_generated are changed.</p>
","0","597624","",""
"67870383","947111","2021-06-07 10:59:55","0","89","<git><gitignore>","git doesn't stop tracking specific autogenerated file despite I excluded it in .gitignore and `.git/info/exclude`","<p>Git doesn't stop tracking specific autogenerated file in the project.
I have a specific file that autogenerated when the project run: <code>platform/views/index.html</code>. I have added it to <code>.gitignore</code>, to <code>.git/info/exclude</code>, run on it <code>git rm --cached platform/views/index.html</code> but every time it's recreated git keep asking me what do I want to do with it.</p>
<p>How can I cause git to stop tracking this file once and forever?
Thank you.</p>
<p>My <code>.gitignore</code> file:</p>
<pre><code>dump.rdb
*.DS_Store
.vscode
.sfdx
npm-debug.log
**/.idea
**/node_modules
.vs
**/.history
newrelic_agent.log
platform/api/modules/interactions/entity-mock.js
platform/views/
</code></pre>
","4","947111","",""
"32076663","1815311","2015-08-18 15:31:48","4","102","<git><gitignore>","What is wrong with my gitignore?","<p>What is wrong with my <code>.gitignore</code> file?</p>

<pre><code>build/
/build
/*/build/
/*/*/build/
build/
</code></pre>

<p>This is the structure of my directory:</p>

<pre><code>myroot
    FacebookSDK
       +--src
       +--build
           +--foo
           +-- bar  
    app
       +--scr
       +--build         
    build
        +--other stuff...
        +--other stuff..
    .gitignore
    other stuff...
</code></pre>

<p>The problem is that <strong>foo</strong> and <strong>bar</strong> are not ignored!</p>

<p>What could be going wrong?</p>

<pre><code>xxxxs-my:xxxx xxx$ git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes not staged for commit:
(use ""git add &lt;file&gt;..."" to update what will be committed)
(use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

modified:   FacebookSDK/FacebookSDK.iml
modified:   FacebookSDK/build.gradle
modified:   FacebookSDK/build/intermediates/bundles/debug/classes.jar
modified:       FacebookSDK/build/intermediates/bundles/debug/res/drawable/com_facebook_button_blue.xml
</code></pre>
","1","1815311","",""
"32080459","877703","2015-08-18 18:51:29","0","2003","<git><gitignore><codekit>",".gitignore does not ignore config.codekit","<h1>Description of the problem</h1>

<p>I have <code>config.codekit</code> listed inside my project's <code>.gitignore</code> file, but changes to <code>config.codekit</code> are still tracked by git.</p>

<h1>Steps to reproduce the problem</h1>

<ol>
<li>create a new project, initialize git, and add the project to CodeKit</li>
<li>make the first commit</li>
<li>add <code>config.codekit</code> to the project's <code>.gitignore</code> file</li>
<li>do <code>$ git status</code> and see that <code>.gitignore</code> is listed under <strong>Changes not staged for commit</strong>, as expected</li>
<li><em>(optionally commit again here, but the problem persists even without committing)</em></li>
<li>affect <code>config.codekit</code> by opening CodeKit and changing project settings, such as adding a directory to <strong>Skipped Items &amp; Paths</strong>. alternatively you can manually edit or even delete <code>config.codekit</code></li>
<li>Open <code>config.codekit</code> (if it hasn't been deleted) and mentally note the changes made</li>
<li>do <code>$ git status</code> and see that, along with <code>.gitignore</code>, <code>config.codekit</code> is listed under <strong>Changes not staged for commit</strong>.</li>
</ol>

<h1>Expected result</h1>

<p><code>config.codekit</code> should not be listed anywhere when checking git status.</p>
","5","877703","",""
"67919760","11709918","2021-06-10 10:57:07","-1","677","<git><unity-game-engine><github><gitignore>","different unity projects in one repo and want gitignore to ignore all high size volume folders","<p>I have a folder where I keep all my different games and each game has its own <code>&quot;Assets&quot;, &quot;Library&quot;, &quot;Logs&quot;</code> etc. folders.</p>
<p>Before, when I wanted to just upload only 1 project to GitHub, I chose <code>.gitignore</code> Unity and it automatically ignored those giant files which was unnecessary to upload.</p>
<p>Right now I have multiple projects in 1 folder and I want to upload them all in 1 repository and also, I want my <code>.gitignore</code> to ignore all unnecessary files in each directory like the way it used to do for only 1 Unity game.</p>
<p>My .<code>gitigonore</code> right now is this:</p>
<pre><code>[Ll]ibrary/
[Tt]emp/ 
[Oo]bj/ 
[Bb]uild/ 
[Bb]uilds/ 
Assets/AssetStoreTools*

# Visual Studio cache directory .vs/

# Autogenerated VS/MD/Consulo solution and project files ExportedObj/ .consulo/
*.csproj
*.unityproj
*.sln
*.suo
*.tmp
*.user
*.userprefs
*.pidb
*.booproj
*.svd
*.pdb
*.opendb
*.VC.db

# Unity3D generated meta files
*.pidb.meta
*.pdb.meta

# Unity3D Generated File On Crash Reports sysinfo.txt

# Builds
*.apk
*.unitypackage
</code></pre>
<p>What should I change in order to fulfill what I want to happen?</p>
<p>BTW I'm new to git and I'm pretty sure there is a very simple answer for my problem.</p>
<p>However I couldn't find it on internet!</p>
","0","11709918","",""
"49909527","4900263","2018-04-18 21:49:03","0","1963","<git><gitignore>",".gitignore file Permission denied","<p>I do not know what I did but I keep getting this error. I had two remotes origin and test of a local copy of a repository.  I deleted the test remote and I wanted to use back again the origin. And now I get an error like </p>

<p><strong>unable to access .gitignore. Permission denied</strong></p>

<p>And when I want to push some commits I am getting</p>

<blockquote>
  <p>error: failed to push some refs to '<a href=""https://github.com/me/Test"" rel=""nofollow noreferrer"">https://github.com/me/Test</a>'
  hint: Updates were rejected because the tip of your current branch is behind
  hint: its remote counterpart. Integrate the remote changes (e.g.
  hint: 'git pull ...') before pushing again.
  hint: See the 'Note about fast-forwards' in 'git push --help' for details.</p>
</blockquote>

<p><a href=""https://i.stack.imgur.com/B40tV.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/B40tV.png"" alt=""enter image description here""></a></p>
","4","4900263","",""
"67958693","11511753","2021-06-13 13:17:47","0","259","<git><gitignore>","file still showing up in github despite being added to gitignore","<p>I have the following file structure and seem to be doing something wrong with handling the gitignore. I am trying to make sure variable.js is not pushed but despite it being listed under gitignore, it is still showing up on github. Could someone please tell me what I am doing wrong here?<a href=""https://i.stack.imgur.com/CDk3r.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/CDk3r.png"" alt=""enter image description here"" /></a></p>
","0","11511753","",""
"67959466","7153055","2021-06-13 14:42:31","5","462","<git><intellij-idea><gitignore>","Intellij Idea shows files from nested git repositories as ""add new"" even when the directories are ignored in .gitignore","<p>I have a directory A with child directories B and C.</p>
<p>All 3 of them are separate git repositories.</p>
<p>In order to avoid confusion, I have added B/ and C/ to A/.gitignore</p>
<p>When i run <code>git status </code> I can only see changes from directory A.</p>
<p>But, when I try to see the changes via Intellij Idea - it also shows all the files under directories B and C as &quot;add new&quot; files.</p>
<p><a href=""https://i.stack.imgur.com/8m6CE.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/8m6CE.png"" alt=""printscreen of Intellij Idea"" /></a></p>
<p>How can I avoid it?</p>
<p><em>git - 2.19.1.windows.1<br>
Intellij Idea - 2021.1.2</em></p>
","3","7153055","",""
"67968180","4864480","2021-06-14 09:53:19","2","963","<android><git><flutter><dart><gitignore>","Flutter: should app/build folder and files be included on git ignore?","<p>So I added a few packages today to my app:</p>
<p>advance_pdf_viewer: ^2.0.0
photo_view: ^0.11.1
webview_flutter: ^2.0.8
just_audio: ^0.7.5</p>
<p>and from that, over 500 files are waiting to be committed to git.
Most files are located in android/app/build/generated/.... or android/app/build/intermediates/....</p>
<p>Should these be ignored, deleted or committed?</p>
<p>Thanks in advance</p>
","0","4864480","",""
"67971558","4444267","2021-06-14 13:54:03","0","87","<git><visual-studio><gitignore>",".gitignore does not seem to ignore files","<p>I have added a .gitignore into my project, but It seems that It don't ignore certain files:</p>
<pre><code>   modified:   .gitignore
    modified:   src/INT.InformationServices.OnePlmSub/Startup.cs
    modified:   src/OnePlmSub.Domain.Abstract/IAttributeService.cs
    modified:   src/OnePlmSub.Domain.Abstract/ISalesItemService.cs
    modified:   src/OnePlmSub.Domain.Abstract/IServiceKitService.cs
    modified:   src/OnePlmSub.Domain.Abstract/ISparePartService.cs
    modified:   src/OnePlmSub.Domain.Abstract/bin/Debug/netcoreapp3.1/OnePlmSub.Domain.Abstract.dll
    modified:   src/OnePlmSub.Domain.Abstract/bin/Debug/netcoreapp3.1/OnePlmSub.Domain.Abstract.pdb
    modified:   src/OnePlmSub.Domain.Abstract/obj/Debug/netcoreapp3.1/OnePlmSub.Domain.Abstract.csproj.CoreCompileInputs.cache
    modified:   src/OnePlmSub.Domain.Abstract/obj/Debug/netcoreapp3.1/OnePlmSub.Domain.Abstract.dll
    modified:   src/OnePlmSub.Domain.Abstract/obj/Debug/netcoreapp3.1/OnePlmSub.Domain.Abstract.pdb
    modified:   src/OnePlmSub.Domain.Configuration/Injections.cs
    modified:   src/OnePlmSub.Domain.Configuration/bin/Debug/netcoreapp3.1/OnePlmSub.Domain.Abstract.dll
    modified:   src/OnePlmSub.Domain.Configuration/bin/Debug/netcoreapp3.1/OnePlmSub.Domain.Abstract.pdb
    modified:   src/OnePlmSub.Domain.Configuration/bin/Debug/netcoreapp3.1/OnePlmSub.Domain.Configuration.dll
    modified:   src/OnePlmSub.Domain.Configuration/bin/Debug/netcoreapp3.1/OnePlmSub.Domain.Configuration.pdb
    modified:   src/OnePlmSub.Domain.Configuration/bin/Debug/netcoreapp3.1/OnePlmSub.Domain.dll
    modified:   src/OnePlmSub.Domain.Configuration/bin/Debug/netcoreapp3.1/OnePlmSub.Domain.pdb
    modified:   src/OnePlmSub.Domain.Configuration/obj/Debug/netcoreapp3.1/OnePlmSub.Domain.Configuration.dll
    modified:   src/OnePlmSub.Domain.Configuration/obj/Debug/netcoreapp3.1/OnePlmSub.Domain.Configuration.pdb
    modified:   src/OnePlmSub.Domain/ProductService.cs
    modified:   src/OnePlmSub.Domain/bin/Debug/netcoreapp3.1/OnePlmSub.Domain.Abstract.dll
    modified:   src/OnePlmSub.Domain/bin/Debug/netcoreapp3.1/OnePlmSub.Domain.Abstract.pdb
    modified:   src/OnePlmSub.Domain/bin/Debug/netcoreapp3.1/OnePlmSub.Domain.dll
    modified:   src/OnePlmSub.Domain/bin/Debug/netcoreapp3.1/OnePlmSub.Domain.pdb
    modified:   src/OnePlmSub.Domain/obj/Debug/netcoreapp3.1/OnePlmSub.Domain.csproj.CoreCompileInputs.cache
    modified:   src/OnePlmSub.Domain/obj/Debug/netcoreapp3.1/OnePlmSub.Domain.dll
    modified:   src/OnePlmSub.Domain/obj/Debug/netcoreapp3.1/OnePlmSub.Domain.pdb
</code></pre>
<p>As you can see, It don't ignore the files in the bin/ and obj/ folders.</p>
<p>My .gitignore can be found here <a href=""https://pastecode.io/s/05bcoo9afk"" rel=""nofollow noreferrer"">https://pastecode.io/s/05bcoo9afk</a></p>
<p>Anyone who have an Idea?</p>
","0","4444267","",""
"67975947","11378599","2021-06-14 19:09:05","0","501","<git><version-control><gitignore>","How to add an exception to a deeply nested file in .gitignore?","<p>We are trying to ignore a folder and add an exception to a specific file, within that folder, which is nested several levels deep.</p>
<p>Here is how i am doing it right now <strong>(works, but is complicated)</strong>:</p>
<pre><code>/ignored_folder/*
!/ignored_folder/foo/
/ignored_folder/foo/*
!/ignored_folder/foo/exception_file.txt
</code></pre>
<p>Is there a way to simplify this, that would work for any depth? This configuration does not make <code>exception_file.txt</code> an ignore exception <strong>(does not work)</strong>:</p>
<pre><code>/ignored_folder/*
!/ignored_folder/foo/exception_file.txt
</code></pre>
","0","11378599","",""
"67994856","8556379","2021-06-16 00:13:57","1","280","<git><gitignore>","Git how to ignore all children and only certain grandchildren in .gitignore","<p>I have a directory structure like this:</p>
<pre><code>/accounts/

/accounts/customer1234/

/accounts/customer1234/webhooks/

/accounts/customer1234/uploads/

/accounts/customer1234/junk.txt

/accounts/customer5678/

/accounts/customer5678/webhooks/

/accounts/customer5678/other_file.xml
</code></pre>
<p>I want to ignore everything except what's in the 'webhooks' directories. This is what I have:</p>
<pre><code># Customer information
accounts/**/*

# Don't ignore the webhooks. 
!accounts/**/webhooks/
!accounts/**/webhooks/*
!accounts/**/webhooks/**/*
!accounts/**/webhooks/**/**/*
!accounts/**/webhooks/**/**/**/*
!accounts/**/webhooks/**/**/**/**/*
</code></pre>
<p>The problem is that Git is still ignoring the entire /accounts directory and everything inside it. There are many customer account folders and I can't name them all individually. How can I ignore everything but all content in each customer's /webhooks directory?</p>
<p>Git 2.3 is installed on the server. Thanks!</p>
","2","8556379","",""
"49930776","5135647","2018-04-19 21:51:18","35","37580","<json><asp.net-mvc><git><.net-core><gitignore>","Using .gitignore file to hide appsettings.json does not actually hide it","<p>I have a C# MVC .Net Core application I'm building, the connection string is in a file called <code>appsettings.json</code> so what I want to do is simply exclude this from my git repository. I have added the following line to the git ignore file:</p>
<p><code>appsettings.json</code></p>
<p>I have also tried:</p>
<p><code>**/appsettings.json</code></p>
<p>But neither seem to work, the change I've made to the <code>appsettings.json</code> file still appears, am I missing something fundamental here?</p>
","1","5135647","0","0"
"68057146","16274098","2021-06-20 15:03:51","0","291","<git><gitignore>","Find all files under source control that are included in .gitignore","<p>Hello I have an git repository with an existing .gitignore file.
Something seems off since some of the paths and/or files in the .gitignore  file are under source control.</p>
<p>To clean that up I was looking for a way to list all files that are under source control that should be ignored because they are included in the .gitignore file.</p>
<p>There is no general way in saying if the files needs to be ignored or included so I need this list to review every file manually.</p>
<p>Does anyone know a way how to do that?</p>
<p>Example: This is very simplified, we are talking about 1000 of files here.
A folder under source control have 4 files in it</p>
<ol>
<li>.gitignore</li>
<li>test.cpp</li>
<li>test.log</li>
<li>test.result</li>
</ol>
<p>Contents of .gitignore</p>
<pre><code>.gitignore
test.*
</code></pre>
<p>test.cpp is already under source control so changes are tracked. This is how it should be. However test.cpp is clearly included in the .gitignore file. Therefore I like to modify the gitignore file so that it contains</p>
<pre><code>.gitignore
test.*
!test.cpp
</code></pre>
<p>so what I want is a list that shows me that test.cpp is under source control while gitignore is exluding it so that I can modify the gitignore file to exactly reflect the current state.</p>
<p>The result of the list in this example should be.</p>
<ol>
<li>.gitignore</li>
<li>test.cpp</li>
</ol>
<p>In my more complex scenario this should also work with files in subfolders.</p>
","2","16274098","",""
"68073483","12240650","2021-06-21 19:12:58","1","40","<git><gitignore>","What's the best way to delete a previously .gitignored file from other machines?","<p>I have a project which, upon startup, copies one of three files A,B,C from one place to another (depends on project configs). This copied file X is .gitignored and always has the same name, and only the original files A,B,C are committed to git. I am now removing this copying logic, and need to make sure this .gitignored file X gets deleted from others' machines. What's the best way to do this?</p>
<p>I have a few ideas so far:</p>
<ol>
<li><strong>Keep the .gitignore and don't delete the file</strong> <em>(messy, I don't want to do this)</em></li>
<li><strong>Update the project startup logic to always delete the file if it exists, then remove that logic after a few weeks when it has run on most developer machines and send messaging to tell others to delete it if they see it</strong> <em>(a little odd, but this matches how the file was created on all other machines in the first place. having to send messaging isn't ideal though)</em></li>
<li><strong>Commit the file, then delete the file</strong> <em>(this could work, but it feels odd. 1) I don't know how this would work on all developer machines since we're adding then deleting a file that was already there ignored, 2) different machines have different versions of this file and I don't want to mess up history)</em>.</li>
</ol>
<p>Has anyone else run into this type of issue and know if there's an obvious best answer? I'm looking for what is easiest both for deployment machines (file is actually deleted) and for all of our developer machines (people don't have to deal with some new untracked file that just pops up).</p>
","0","12240650","",""
"14614511","1288611","2013-01-30 21:51:55","10","4142","<php><git><gitignore><error-log>","Adding all ""error_log"" files to .gitignore","<p>I am getting frustrated with all my PHP error_log files causing merge conflicts with my production &amp; dev servers with git.  The solution is easy enough--adding all files that are called ""error_log"" to .gitignore--but I don't know how to do it. This is what I'm trying in my .gitignore:</p>

<pre><code>error_log
</code></pre>

<p>Which is only excluding the error_log file in the root directory (instead of all the other dirs I have PHP running).</p>

<p>Would *error_log work?</p>

<p>Thanks!</p>
","1","1288611","0","0"
"32117974","1295364","2015-08-20 12:12:47","2","1643","<git><gitignore><git-index>","Keep ignored files when switching branches in git","<p>Eclipse has it's own files <code>.project</code>, <code>.classpath</code> and <code>.settings</code> folder. In git, I have them in the <code>.gitignore</code> file, because I don't want them to be tracked in the remote repository. My problem is that when I switch branch, and then switch back, those files have been removed, so eclipse doesn't recognize the project and I have to import it again so they're generated.</p>

<p>Is there a way to tell git to ignore those files, but keep them in the local repo or something so I don't loose them when switching branches, but changes to them are not tracked and they're not pushed to the remote either?</p>

<p>Files are shown when running <code>git ls-files -o</code>.</p>

<p>I've checked <a href=""https://stackoverflow.com/questions/15552959/git-how-to-keep-ignored-files-when-switching-branches"">GIT: How to keep ignored files when switching branches?</a>, but the file still appears when doing <code>git status</code>.</p>

<p>EDIT:</p>

<p><code>git status</code> alone shows this:</p>

<pre><code>$ git status
On branch refactorizacion
Your branch is up-to-date with 'origin/refactorizacion'.

nothing to commit, working directory clean
</code></pre>

<p>This doesn't work:</p>

<pre><code>$ git add -f .project
$ git rm --cached .project
</code></pre>

<p>I've also tried this, but file appears after <code>git status</code>:</p>

<pre><code>$ git add -f .project
$ git update-index --assume-unchanged .project
$ git status
On branch refactorizacion
Your branch is up-to-date with 'origin/refactorizacion'.

Changes to be committed:
  (use ""git reset HEAD &lt;file&gt;..."" to unstage)

    new file:   .project
</code></pre>
","3","1295364","",""
"68106037","8036670","2021-06-23 19:24:54","-1","46","<git><gitignore>","How to add a file to the .gitignore configuration","<p>I have a working project, but there is a file I accidentally pushed to the remote branch and I need to ignore it in the <code>.gitignore</code>.</p>
<p>This is the structure:</p>
<pre><code>/project
  /app..
  | ...
  | ...
  /public
    | myFile.json
</code></pre>
<p>I added this entry on my <code>.gitignore</code> file:</p>
<pre><code>...
/public/myFile.json
...
</code></pre>
<p>But it continues recognizing it as a outgoing file. What am I missing here?</p>
","0","8036670","",""
"32126553","1312080","2015-08-20 19:16:56","4","119","<git><gitignore>","Does gitignore work for files that have previously been versioned?","<p>I have a file in my branch that I would like ignored.  I added it to <code>.gitignore</code> but, when I change it, it still shows under deltas in <code>git status</code>.  gitignore does work for previously not versioned files.</p>

<p>Is the reason gitignore doesn't work in this instance the fact that the file in question has already been versioned?  How do I circumvent this and ignore it on a going forward basis?</p>
","2","1312080","",""
"49955039","9433929","2018-04-21 10:56:36","5","181","<javascript><git><github><gitignore>","How to restrict git from tracking / updating local changes?","<p>So, I learn git functions, but cannot make the file <code>README.md</code> executed from git branch update in the file <code>.gitignore</code>.</p>

<p>I had wrote the next in <code>.gitignore</code> but it does not help during push on server.</p>

<pre><code>// .gitignore
# readme
README.md
LICENSE
</code></pre>
","2","9433929","0","0"
"15045857","1475220","2013-02-23 21:20:41","2","182","<git><gitignore><git-commit>","Cancelling git push and ignore additional folder","<p>I want to cancel the git push.
I've done it with <code>cntrl + C</code>   command.  I reset --mixed to my old status.
Add the forgetten directory to my gitignore file,
But when I do the <code>git push</code> again , it still tries to send the ignored folder.
Any ideas? </p>
","5","1475220","0","0"
"15057256","963881","2013-02-24 22:10:49","18","35931","<git><gitignore>","Subfolders in .gitignore","<p>I have many subfolders in my repo, in which there are few <code>build/</code> directories I'd like to ignore when committing my code. As I understand it, there are two ways to ignore all of the folders:</p>

<ul>
<li><code>*/build/</code> (Unix wildcards)</li>
<li><code>build/</code> (<em>git</em> way of ignoring files/folders)</li>
</ul>

<p>I've found <a href=""https://stackoverflow.com/questions/2545602/git-ignore-sub-folders"">Git ignore sub folders</a> but it has two answers and I would like to know <strong>what the difference (none?) between the two approaches is</strong>. Does the same rule apply to files?</p>
","0","963881","0","0"
"15084780","1460495","2013-02-26 08:47:46","48","50975","<git><gitignore>",".gitignore: Ignore one specific directory and that one only","<p>I have this directory structure</p>

<pre><code>./bin/&lt;java class files&gt;
./sometool/bin/&lt;files for the tool&gt;
</code></pre>

<p>...as well as some other files and directories.</p>

<p>It seens that if I want to avoid tracking the java class files, I should add this to the .gitignore file:</p>

<pre><code>bin/
</code></pre>

<p>However, it appears that this also ignores the path ./sometool/bin</p>

<p>Is that correct, and if so, how do I get the behavior I want.</p>
","0","1460495","0","0"
"50264518","7646621","2018-05-10 02:17:25","0","26","<git><gitignore>","Differences between the `directName` and `directName/` in `.gitignore`","<p>Differences between the <code>directName</code> and <code>directName/</code> in <code>.gitignore</code>.</p>

<p>In the <code>.gitignore</code> there can edit like this:</p>

<pre><code>venv
venv/  
</code></pre>

<p>the <code>vevn</code> is a directory.<br>
so what's the differences between them? </p>
","1","7646621","",""
"50264876","5303178","2018-05-10 03:07:57","2","2025","<xcode><git><gitignore>","Xcode git can't ignore all *.xcodeproj/xcuserdata/ folders","<p>I followed <a href=""https://stackoverflow.com/questions/6564257/cant-ignore-userinterfacestate-xcuserstate"">cant-ignore-userinterfacestate-xcuserstate</a> and <a href=""https://stackoverflow.com/questions/1139762/ignore-files-that-have-already-been-committed-to-a-git-repository"">ignore-files-that-have-already-been-committed-to-a-git-repository</a>. But these never works.</p>

<p>My Step Reproduction:</p>

<ol>
<li>Quit Xcode</li>
<li>project directory: <code>git rm -r --cached .</code></li>
<li>project directory: <code>git add . &amp;&amp; git commit -m ""remove junk files""</code></li>
<li>Open Xcode project</li>
<li>Then these files appear again.</li>
</ol>

<p>Most troubled me was that each time I rebase code will automatic appear these files so I will rebase fail of unstage files. Each time I need to stash these file. </p>

<p>This is my .gitignore file code section:</p>

<pre><code>### Xcode Patch ###
*.xcodeproj/*
!*.xcodeproj/project.pbxproj
!*.xcodeproj/xcshareddata/
!*.xcworkspace/contents.xcworkspacedata
/*.gcno

*.xcodeproj/xcuserdata/
</code></pre>

<p><a href=""https://i.stack.imgur.com/POBp5.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/POBp5.png"" alt=""source tree want to ignored files""></a></p>

<p><a href=""https://i.stack.imgur.com/mngnH.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/mngnH.png"" alt=""my xcode project structure""></a></p>

<p><a href=""https://i.stack.imgur.com/pvppF.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/pvppF.png"" alt=""this is a react-native project""></a></p>
","1","5303178","0","0"
"68595431","1379286","2021-07-30 18:09:28","2","646","<git><flutter><bitbucket><gitignore>","Why .gitignore and .metadata are not getting commited?","<p>I am developing a flutter app, using <code>bitbucket</code> as the version control. Below is the <code>.gitignore</code> file:</p>
<pre><code># Miscellaneous
*.class
*.log
*.pyc
*.swp
.DS_Store
.atom/
.buildlog/
.history
.svn/

# IntelliJ related
*.iml
*.ipr
*.iws
.idea/

# The .vscode folder contains launch configuration and tasks you configure in
# VS Code which you may wish to be included in version control, so this line
# is commented out by default.
#.vscode/

# Flutter/Dart/Pub related
**/doc/api/
**/ios/Flutter/.last_build_id
.dart_tool/
.flutter-plugins
.flutter-plugins-dependencies
.packages
.pub-cache/
.pub/
/build/

# Web related
lib/generated_plugin_registrant.dart

# Symbolication related
app.*.symbols

# Obfuscation related
app.*.map.json

# Android Studio will place build artifacts here
/android/app/debug
/android/app/profile
/android/app/release
</code></pre>
<p>I do <code>git add *</code> and then <code>git commit -m &quot;message&quot;</code> to make the commit. How unfortunate , the <code>.gitignore</code> file never get commited.</p>
<p>When I am trying to do <code>git pull</code> or <code>git pull --rebase</code>, I get the below error</p>
<pre><code>Updating 200df3e..02afe50
error: The following untracked working tree files would be overwritten by merge:
        .gitignore
        .metadata
Please move or remove them before you merge.
Aborting
</code></pre>
<p>Browsing the internet, the issue seems to be the <code>.gitignore</code> file and <code>metadata</code> not getting commited. So the pull can't merge them.</p>
<p>How can I make sure these files are commited?</p>
<p><strong>UPDATE</strong></p>
<p>I followed user ti7's answer, after the command <code>git stash pop</code>, I got the below message. what does that mean?</p>
<pre><code>On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
  (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)
        modified:   ios/Flutter/Debug.xcconfig
        modified:   ios/Flutter/Release.xcconfig

Untracked files:
  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)
        ios/Podfile

no changes added to commit (use &quot;git add&quot; and/or &quot;git commit -a&quot;)
Dropped refs/stash@{0} (799d2e53c1509af435d5d4d589a0ded18d3aad64)
</code></pre>
","2","1379286","0","0"
"32445733","1067795","2015-09-07 20:36:37","1","81","<git><gitignore>",".gitignore excluding files in all directories","<p>In .gitignore I have </p>

<pre><code>phpmyadmin
.idea
config.php
admin/config.php
system/cache/*
system/logs/*
image/cache/*
</code></pre>

<p>git is somehow ignoring <code>config.php</code> file in <code>system/library/config.php</code> why that can happen ? and how to avoid that ? </p>
","0","1067795","0","0"
"32469867","2628401","2015-09-09 02:08:57","0","1349","<c#><.net><git><cvs><gitignore>","How to include subfolder in packages directory for git?","<p>I've tried searching for this answer on SO but none of the solutions seemed to work for me. I want to include the xUnit.runner package in my solution for building purposes but I can't seem to figure out how to configure the .gitignore file. I've tried this so far:</p>

<pre><code># NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# Include the xUnit Test Runner for VSO test runs
!**/packages/xunit.runner.visualstudio.2.0.1/**
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when   needed
#!**/packages/repositories.config
</code></pre>

<p>I've even tried different iterations with no luck:</p>

<pre><code>!**/packages/xunit.runner.visualstudio.2.0.1/*
!**/packages/xunit.runner.visualstudio.2.0.1/
!**/packages/xunit.runner.visualstudio.2.0.1
</code></pre>

<p>None of these work? Am I ordering the statements incorrectly or something?</p>
","1","2628401","0","0"
"15288712","2111178","2013-03-08 07:18:52","48","42206","<git><gitignore>",".gitignore whitelist on directory and its contents","<p>I'm trying to whitelist the directory (and its contents) SupplierName in my Zend Framework 2 vendor directory.</p>

<p>The original .gitignore file in /vendor looks like this:</p>

<pre><code># Add here the vendor path to be whitelisted
# Ex: for composer directory write here ""!composer"" (without quotes)
!.gitignore
*
</code></pre>

<p>Now I'd like to whitelist the directory  SupplierName  which shouldn't be too hard I thought. I have <a href=""https://www.kernel.org/pub/software/scm/git/docs/gitignore.html"">read the docs on gitignore</a> and tried the following configurations:</p>

<p><strong>First try</strong>, add !SupplierName right after the comment which says that I have to add the whitelisted path here.</p>

<pre><code># Add here the vendor path to be whitelisted
!SupplierName
# Ex: for composer directory write here ""!composer"" (without quotes)
!.gitignore
*
</code></pre>

<p>Right after that I executed <code>git status</code> which didn't show the vendor/SupplierName directory. <code>git add vendor/SupplierName</code> showed the following message: </p>

<blockquote>
  <p>The following paths are ignored by one of your .gitignore files: vendor/SupplierName</p>
</blockquote>

<p><strong>Second try</strong></p>

<pre><code># Add here the vendor path to be whitelisted
# Ex: for composer directory write here ""!composer"" (without quotes)
!SupplierName
!.gitignore
*
</code></pre>

<p>Right after that I executed <code>git status</code> which didn't show the vendor/SupplierName directory. <code>git add vendor/SupplierName</code> showed the following message: </p>

<blockquote>
  <p>The following paths are ignored by one of your .gitignore files: vendor/SupplierName</p>
</blockquote>

<p><strong>Third try</strong></p>

<pre><code># Add here the vendor path to be whitelisted
# Ex: for composer directory write here ""!composer"" (without quotes)
!.gitignore
*
!SupplierName
</code></pre>

<p>Right after that I executed <code>git status</code> which didn't show the vendor/SupplierName directory. <code>git add vendor/SupplierName</code> <strong>seems to work</strong>. But now, when I want to add the Module.php file (and some other files, subdirectories, etc) the following happens. <code>git add vendor/SupplierName/Module.php</code> --> </p>

<blockquote>
  <p>The following paths are ignored by one of your .gitignore files: vendor/SupplierName/Module.php</p>
</blockquote>

<pre><code># Add here the vendor path to be whitelisted
# Ex: for composer directory write here ""!composer"" (without quotes)
*
!.gitignore
!SupplierName
!SupplierName/
!SupplierName/*
</code></pre>

<p>Allows me to add files directly in vendor/SupplierName, but <code>git add vendor/SupplierName/config/module.config.php</code> still results in </p>

<blockquote>
  <p>The following paths are ignored by one of your .gitignore files: vendor/SupplierName/config/module.config.php</p>
</blockquote>

<p>I've been searching for problems regarding recursive whitelisting, because that seems to be the problem, but nothing came up.</p>
","6","2111178","0","0"
"50311023","8594141","2018-05-12 22:01:23","1","835","<git><gitignore>","exclude everything but some subfolders in gitignore not working properly","<p>Please help me, it should be some minor thing. I have a subfolder called ""assets"" in my root. It has many subdirectories and I would like to have only one of them tracked by GIT (this is called ""vendor""). The asset folder has a .gitignore file and a test.txt for testing purpose.</p>

<p>The .gitignore file in the asset folder looks like this:</p>

<pre><code>*
!.gitignore
!vendor
!test.txt
</code></pre>

<p>Yet, if I type ""git status web/assets/"" it only tracks the test.txt and the .gitignore file itself. Why is the vendor folder not tracked? I also tried it with !vendor/</p>

<p>Please help! Thanks</p>
","0","8594141","0","0"
"68645693","11107475","2021-08-04 05:10:50","3","2179","<git><intellij-idea><gitignore>","Where should .gitignore file be located in IntelliJ?","<p>When initializing Git in IntelliJ, a .gitignore file is created in the .idea folder. However, many of the suggestions I have seen about the .gitignore file say to ignore the .idea folder. Wouldn't this ignore the .gitignore file itself, or not be possible? Where should the .gitignore file be located?</p>
","0","11107475","",""
"16825799","264675","2013-05-29 23:53:24","2","120","<git><gitignore>",".gitignore ignoring more than I want to?","<p>In my gitignore, I have these two lines:</p>

<pre><code>Project1/web.config
Project2/web.config
</code></pre>

<p>However, it is also ignoring <code>Project1/web.config.debug</code>, <code>Project1/web.config.qa</code>, and etc. How do I specify to allow theres?</p>
","8","264675","0","0"
"16868766","1802138","2013-06-01 03:25:18","1","1330","<git><gitignore>","How to sync multiple *.gitignore files to .gitignore_global?","<p>I'd like my <code>.gitignore_global</code> to be the head node of several <code>*.gitignore</code> files. To achieve this, I'd like <code>.gitignore_global</code> to append contents of multiple <code>*.gitignore</code> files to itself by importing <code>*.gitignore</code> files with its path.</p>

<p>For example, if <code>git</code> understands <code>source</code> command, <code>.gitignore_global</code> may look like:</p>

<pre><code># platform-specific .gitignore files
source ~/.gitignore/gitignore.git/Global/Linux.gitignore
source ~/.gitignore/gitignore.git/Global/OSX.gitignore
source ~/.gitignore/gitignore.git/Global/Windows.gitignore

# language-specific .gitignore files
source ~/.gitignore/gitignore.git/C++.gitignore
source ~/.gitignore/gitignore.git/Java.gitignore

# above .gitignore files are cloned from the following Github page:
# https://github.com/github/gitignore.git
</code></pre>

<p>Unfortunately, the <code>source</code> command was not recognized by <code>git</code>. Any recommendations?</p>
","0","1802138","0","0"
"33434190","3793963","2015-10-30 10:50:01","11","5322","<git><gitignore>","Ignore same file in different folders with .gitignore","<p>How do I use .gitignore to ignore a file that can be in more than one folder, having the same name?</p>

<p>I have</p>

<p><code>-folderA
      -folderAA
           -file.json
 -folderB
      -folderBB
          -file.json</code></p>

<p>What I need is an expression to ignore both <em>file.json</em> in <strong>folderA/folderAA</strong> and <strong>folderB/folderBB</strong> without having to use two expressions for each file.</p>

<p><em>EDIT START</em><br>
The file is already tracked by git<br>
<em>EDIT END</em>  </p>
","0","3793963","",""
"16875692","1290529","2013-06-01 18:08:18","0","1044","<git><gitignore>","how to correct set .gitignore file","<p>When I try to commit changes to master git shows me unversioned files with .dll,.cash,.. extensions. While googling I found that I must create .gitignore file (like <a href=""https://github.com/github/gitignore/blob/master/VisualStudio.gitignore"" rel=""nofollow"">this</a>). I have created it and placed in .git project directory.But I still see .dll and other unneccessary files. Then I tryed to <a href=""http://robots.thoughtbot.com/post/18739402579/global-gitignore"" rel=""nofollow"">set</a> global .gitignore file (I placed .gitignore file on the same directory with .gitconfig file). Still no changes. How to correct set .gitignore file and what additional actions I must apply?</p>
","0","1290529","",""
"33461815","2520643","2015-11-01 11:49:38","6","6511","<git><gitignore>",".gitignore files not ignored when pulling remote changes","<p>I have some files that I don't want to share between my repositories. I added them to <code>.gitignore</code> at the root of my project :</p>

<pre><code># Specifies intentionally untracked files to ignore when using Git
# http://git-scm.com/docs/gitignore
# ...
.idea/
</code></pre>

<p>And yet I keep getting this error when pulling remote changes using <code>git pull</code> : </p>

<pre><code>error: Your local changes to the following files would be overwritten by merge :
      .idea/workspace.xml
Please, commit your changes or stash them before you can merge.
Aborting
</code></pre>

<p>I have seen some questions about this error message, but they were about overwriting the files. I want to <strong>ignore</strong> the changes (I don't want git to track them at all and I don't want git to change my local files).</p>

<p>What am I doing wrong ? Maybe the problem is I created the <code>.gitignore</code> file <em>after</em> I had already committed the files I wanted to ignore, and I need to remove them from the repo somehow...?</p>
","0","2520643","0","0"
"16900419","4144","2013-06-03 15:31:11","4","812","<git><gitignore>","gitignore file ignore cachebusted files","<p>I have my <code>.gitignore</code> working fine but for some reason I cannot get it to ignore my <code>/min</code> folder which contains, among other things, my cache busted js in the format of <code>whatever.min.v0.0.1.js</code></p>

<p>Here is my current <code>.gitignore</code> file:</p>

<pre><code>node_modules/
.sass-cache/
public/stylesheets/*.css
public/min/*.js
</code></pre>

<p>How do I get it to ignore just everything in the <code>public/min</code> folder?</p>
","0","4144","0","0"
"33520079","1007240","2015-11-04 10:58:36","2","239","<git><gitignore>","Make .gitignore ignore everything except one file","<p>I'm pretty new with the whole .gitignore thing so I hope someone can help me out with this.</p>

<p>We're developing with Xamarin and we would like to ignore the packages/ folder except one file which is placed in different (sub)directories.</p>

<p>I would like to keep the following file: </p>

<pre><code>/packages/SQLitePCL.raw_basic.0.8.2/build/Xamarin.iOS10/SQLitePCL.raw_basic.targets
</code></pre>

<p>But all the other folders and files inside /packages/ I would like to be removed.</p>

<p>I tried something like:</p>

<pre><code>packages/
!packages/SQLitePCL.raw_basic.0.8.2/build/Xamarin.iOS10/SQLitePCL.raw_basic.targets
</code></pre>

<p>But I don't think this is the way to go.</p>
","0","1007240","",""
"33530045","1770201","2015-11-04 19:06:51","1","655","<git><gitignore><git-add>","How to git ignore everything but one folder?","<p>I have a git repo in my home folder. I'm trying to NOT include basically the entirety of my home folder, with the exception of my .vim folder.</p>

<p>In my .gitignore, I have</p>

<p><code>
*
!.vim
</code></p>

<p>The problem is that this only adds the <code>.vim</code> directory into my git repo, but not its files and its subdirectories (and its files, and its subdirectories, and so on). I'd like to have <code>.vim</code> and ALL of its subfiles and subdirectories into my git repo. How do I change this <code>.gitignore</code> for the desired behavior?</p>
","1","1770201","0","0"
"50863629","5906110","2018-06-14 18:18:09","14","2178","<android><xml><kotlin><gitignore>","Should I add .idea/assetWizardSettings.xml to gitignore?","<p>Should I add .idea/assetWizardSettings into git ignore? It is generated when I created launcher icons for adaptive and legacy </p>
","2","5906110","0","0"
"18022941","645092","2013-08-02 17:37:33","-1","2262","<git><gitignore>","how to make git find my files in the library folder, not ignored by gitignore?","<p>Here is my .gitignore file:</p>

<pre><code># built application files
*.apk
*.ap_

# files for the dex VM
*.dex

# Java class files
*.class

# generated files
bin/
gen/

# Local configuration file (sdk path, etc)
local.properties

# Eclipse project files
.classpath
.project
.metadata
local.properties
.classpath
.loadpath
.settings

# External tool builders
.externalToolBuilders/

# Locally stored ""Eclipse launch configurations""
*.launch

# CDT-specific
.cproject

# PDT-specific
.buildpath

# Proguard folder generated by Eclipse
proguard/

# Intellij project files
*.iml
*.ipr
*.iws
.idea/
/project.properties
/proguard-project.txt
.settings
/lint.xml
</code></pre>

<p>Result of git status:</p>

<h1>On branch master</h1>

<p>nothing to commit, working directory clean</p>

<p>After git add library same result... And a <code>ls -al library/</code> show me my files!</p>
","8","645092","",""
"34553193","1964544","2016-01-01 02:55:02","4","3421","<git><gitignore><subdirectory>","ignore gitignore files in subdirectories","<p>This is the content of my ""root"" .gitignore</p>

<pre><code># exclude everything ...
*
# ...except
!/.gitignore
!*/
!/modules/wp-azth/**
</code></pre>

<p>the problem is that, under modules folder, i've a lot of third-party modules with a .gitignore file inside.</p>

<p>Using rules above, all third-party modules folders are ignored but their .gitignore files are not ( and i don't need it of course )</p>

<p>is there a way to ignore .gitignore files inside ignored subfolders? maybe .git/config can be used for this? </p>

<p>( i think it's a bad behaviour of git that considers them even if they are ignored )</p>

<p><strong>UPDATE</strong>: It seems a lack of git, it allows ignored folder to ""arbitrary"" un-ignore itself having !.gitignore rule inside a gitignore file placed ( by anyone ) inside an ignored subdirectory. 
Ignored folders normally could contains files that are dynamic , temporary or 3rd party ( cache, temp, plugins etc ) ... so git allows to create unwanted behaviours just using a simple !.gitignore as rule inside subdirectory.</p>

<p><a href=""http://i.stack.imgur.com/XdMzn.png"" rel=""nofollow"">git gui screenshot</a></p>
","8","1964544","0","0"
"34567061","387194","2016-01-02 14:38:15","0","1318","<git><gitignore>","how to exclude file only in root directory using git?","<p>I want to ignore file <code>init.js</code> that is inside root directory but not inside <code>lib/apps/&lt;DIR&gt;/</code> directories, how can I do this?</p>

<p>I've tried:</p>

<pre><code>./init.js
</code></pre>

<p>but this don't work.</p>
","2","387194","",""
"18060089","1332642","2013-08-05 13:59:32","1","1956","<git><gitignore>","Using .gitignore","<p>I am having trouble with my .gitignore. I have a directory tree like so:</p>

<pre><code>/djangoproject
    venv
        bin
            startgunicorn.sh
        djo
    www
        static
        analytics
    .git
        .gitignore
</code></pre>

<p>My .gitignore reads:</p>

<pre><code>../www/analytics
../venv/bin
../venv/build
../venv/include
../venv/lib
../venv/local
*.pyc
</code></pre>

<p>When I </p>

<p><code>git add ../*</code> or <code>git add -A</code></p>

<p><code>git push</code></p>

<p>I don't want <code>startgunicorn.sh</code> or my <code>analytics</code> dir to be pushed, but I do want <code>djo</code> and <code>static</code> to be. That's not happening—my gunicorn.sh file keeps changing to the local machine's. Where is my error?</p>
","0","1332642","",""
"18064827","2238121","2013-08-05 18:10:26","0","152","<git><gitignore>","Ignore everything but specific directories using .gitignore","<p>I need to ignore every under <code>/src</code> directory but not <code>/src/BankBundle</code>. For that in my <code>.gitignore</code> file I do this:</p>

<pre><code>/vendor/*
/app/cache/*
/app/logs/*
/web/uploads/*
/web/bundles/*
/app/config/parameters*
.DS_Store
/src/BankBundle/Resources/public/example.html
composer.lock

/src/*
!/src/BankBundle
</code></pre>

<p>This isn't working because any changes I made outside <code>/src/BankBundle</code> less say in <code>/src/AnBundle</code> SmartGit recognizes as a change and then show me for COMMIT, what I'm doing wrong?</p>
","2","2238121","",""
"18067439","2362247","2013-08-05 20:48:03","43","57923","<git><gitignore><pull>","Exclude specific files from 'git pull'","<p>I have a production <em>git</em> repo that I only <em>pull</em> changes from the main repo into; I never change this repo or do <em>commits</em>/<em>pushes</em> from here. I recently accidentally <em>pushed</em> some untracked (at least I thought they were) image files to the main repo from my local dev repo. Now when I try to <em>pull</em> the latest from the main repo, <em>git</em> reports an error regarding overwriting the exiting image file with the file from the main repo. I don't even want this file from the repo (it's located in a <code>.gitignored</code> directory on the production repo).</p>
<p>How can I <strong>a)</strong> get rid of these unwanted image files in my main repo, or <strong>b)</strong> exclude these files from my <code>git pull</code>?</p>
","1","2362247","0","0"
"51499182","1506850","2018-07-24 12:55:20","1","1138","<git><backup><gitignore>","backup all gitignored files from a working copy","<p>I am workin on a git repository.
I have a working copy, with huge file list.</p>

<p>My <code>.gitignore</code> looks like</p>

<pre><code>roo/output*  # ignore set of folders
*.pyc           # ignore a filetype
root/a_folder   # ignore a folder
root/filemame*.txt # ignore a set of files
root/**/.bin # ignore an extension within a folder
</code></pre>

<p>Now I would like to create a new working copy. In order for it to work, I also need the files which are gitignored in the original wc.</p>

<p>I have tried some of the answers here:</p>

<p><a href=""https://stackoverflow.com/questions/466764/git-command-to-show-which-specific-files-are-ignored-by-gitignore"">Git command to show which specific files are ignored by .gitignore</a></p>

<pre><code>git check-ignore * # return only folders for me

git status --ignored # takes forever to run
git ls-files --others -i --exclude-standard # returns empty for me
</code></pre>

<p>I would need to get this list with the original path names, so that I can create a zip file keeping the folder structure so that I can unzip it seamlessly in the new working copy.</p>
","1","1506850","0","0"
"51510842","9982037","2018-07-25 04:33:12","3","66","<git><gitignore>","why doesn't git track my directory?","<p>I made a .gitignore file as belows:</p>

<pre><code>## all files
*
## keep track
!bin
</code></pre>

<p>bin is a directory.
However, if I make or change a file in the bin directory, it is not tracked at all.
How can I fix it?
I have also tried '!bin/*' and '!bin/**'.</p>
","0","9982037","0","0"
"35696592","1822061","2016-02-29 09:59:43","1","697","<git><gitignore><githooks>","How to configure git to ignore the ELF file type?","<p>Ideally, I would like to add a specific filetype to the .gitignore file, not by looking on the extension but instead looking on the file type.</p>

<p>I could for example examine the return code from</p>

<pre><code>file some/file | grep -q ELF
</code></pre>

<p>If the return code is zero I don't want to add the file to the commit. Is there a way to achieve this either by editing the .gitignore file or by writing some kind of a git hook? </p>
","0","1822061","0","0"
"51587096","325069","2018-07-30 04:47:11","38","33085","<python><git><gitignore>","Using .gitignore with *.pyc in subfolders","<p>I see that with python 3, there is a __pycache__ in each subfolder of my application and of course *.pyc files will be created there as well.  In my .gitignore of my app's root folder, can I simply place:</p>

<pre><code>**/__pycache__
**/*.pyc
</code></pre>

<p>to have these ignored in all future subfolders created?  Or do I need to place a .gitignore in each and every subfolder ?  </p>

<p>On a related note, how do I check what all is being untracked (ignored). I tried ""git status -u"" and it does not show __pycache__ or .pyc files as being untracked. </p>
","1","325069","0","0"
"51621763","1541397","2018-07-31 20:42:05","4","1552","<git><gitignore>",".gitignore not matching subdirectories","<p>I have directory tree like this:</p>

<pre><code>__pycache__
systems
    __pycache__
    ...
components
    __pycache__
    ...
...
</code></pre>

<p>I tried the following <code>.gitignore</code>s to ignore all <code>__pycache__</code> directories. However, they are not working - only the first one is ignored.</p>

<p><code>**/__pycache__/</code> and <code>__pycache__/</code></p>

<p>How do I ignore all of them?</p>
","2","1541397","0","0"
"51664088","5938111","2018-08-03 01:18:36","4","893","<git><gitignore>",".gitignore The different between /foo and /foo/","<p>Are there any different between <code>foo/</code> and <code>/foo/</code> in <code>.gitignore</code>?
I've been reading in <a href=""https://git-scm.com/docs/gitignore"" rel=""nofollow noreferrer"">git-doc</a> but I found nothing. Are those two the same?</p>
","0","5938111","",""
"51684900","7180331","2018-08-04 10:59:26","0","399","<git><gitignore>","Ignore files that do not contain "".example.js"" in their file names .gitignore","<p>I have the following situation.I have a folder called configs.
Inside there I have some files which contain the word "".example.js"".Now what I want to do for this directory is to ignore the files that do not contain "".example.js"",</p>

<p>For example consider <code>foo.example.js</code> and <code>foo.js</code>.I want to ignore <code>foo.js</code>
The reason that I just don't add <code>foo.js</code> in my .gitignore is that in that directory there might be more files that do not include <code>.example.js</code> like 
<code>secrets.js</code> or <code>settings.js</code>.Is there any way to do this?</p>
","0","7180331","",""
"51717482","4122849","2018-08-07 01:06:52","2","479","<git><github><gitignore><package-managers>","Reference multiple online gitignore templates in gitignore","<p>For my global gitignore, I would like to use multiple up-to-date gitignore templates from <a href=""https://github.com/github/gitignore"" rel=""nofollow noreferrer"">https://github.com/github/gitignore</a> for my OS / IDEs / languages / frameworks like <a href=""https://github.com/github/gitignore/blob/master/Global/macOS.gitignore"" rel=""nofollow noreferrer"">macOS</a>, <a href=""https://github.com/github/gitignore/blob/master/Java.gitignore"" rel=""nofollow noreferrer"">Java</a>, <a href=""https://github.com/github/gitignore/blob/master/Android.gitignore"" rel=""nofollow noreferrer"">Android</a>, and <a href=""https://github.com/github/gitignore/blob/master/Global/JetBrains.gitignore"" rel=""nofollow noreferrer"">JetBrains</a>.</p>

<p>There are some solutions here to concatenate locally:</p>

<p><a href=""https://stackoverflow.com/questions/7005142/can-i-include-other-gitignore-file-in-a-gitignore-file-like-include-in-c-li"">Can I include other .gitignore file in a .gitignore file? (like #include in c-like languages)</a></p>

<p><a href=""https://stackoverflow.com/questions/18750179/gitignore-loads-other-gitignores"">gitignore loads other gitignores</a></p>

<p>but I'm wondering if there are any more elegant solutions that simply concatenate the up-to-date templates from the specified urls.</p>
","0","4122849","0","0"
"70028083","1315599","2021-11-18 23:36:45","1","291","<git><microservices><gitignore><dockerignore>","Create .gitignore, .trivyignore, .dockerignore once per multiple git repositories","<p>We have a microservices project (tens of microservices) which are spread across different repositories instead of a single large mono-repo. Each of the repositories has files like <code>CODEOWNERS</code>, <code>.gitignore</code>, <code>.dockerignore</code> etc.</p>
<p>Most of the times when we need to change those files we need to make a similar change and we create a bunch of the PRs, which is annoying and time consuming.</p>
<p>Is there a way to define those files once per multiple repositories so we can change them in one place?</p>
<p><a href=""https://i.stack.imgur.com/lZcFq.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/lZcFq.png"" alt=""enter image description here"" /></a></p>
","4","1315599","",""
"70041055","17160958","2021-11-19 21:23:47","0","51","<github><gitignore>","Saving .gitignored files","<p>I created a new branch in my git repo and I'd like to not have to copy and paste in all of my gitignored files every time I switch branches. is there a way to save a file to the repo but just not have it show on github or is this just one of those things?</p>
","4","17160958","",""
"53341908","4288043","2018-11-16 16:31:16","1","89","<git><file-permissions><gitignore>","remove execute only file from git tracking","<p>I needed to make a file in a repository non-readable and non-writable:</p>

<pre><code>sudo chmod 101 file1.sh
</code></pre>

<p>when you list it it looks like this:</p>

<pre><code>$ ls -la file1.sh
---x-----x 1 cardamom cardamom 13 Nov 16 16:52 file1.sh
</code></pre>

<p><code>git add</code> will not work:</p>

<pre><code>error: open(""file1.sh""): Permission denied
error: unable to index file file1.sh
fatal: updating files failed
</code></pre>

<p>and adding it to <code>.gitignore</code> does not cause it to be ignored.<br>
I don't really need to track it, but would be good to not have it pop up every time <code>git status</code> is typed in. </p>

<p>How does one either add it to the repo or tell git to ignore it?</p>
","2","4288043","",""
"37279961","180500","2016-05-17 15:09:16","6","1121","<git><gitignore><node-modules><git-stash>","Why is git stash removing my node_modules folder?","<p>I'm having an issue where when I run <code>git stash -u</code> (ie. stash all, including untracked files), Git removes my node_modules directory. On top of this, it doesn't even restore it on <code>git stash pop</code> - I have to run <code>npm install</code> again to get it back.</p>

<p>node_modules is ignored in .gitignore (via the line <code>node_modules/*</code>), and as far as I can see has never been committed in the history of the project (<code>git log --all -- node_modules</code> returns nothing). Shouldn't <code>git stash</code> ignore it (even when committing untracked files)? I'm pretty sure I've used <code>git stash</code> like this before without any issues with node_modules.</p>

<p><strong>Update:</strong> I've checked, and this issue is not limited to a particular project - it seems to happen anywhere I run <code>git stash -u</code>. For what it's worth, my Git version is 2.6.3.windows.1 (on Windows).</p>
","5","180500","",""
"53370925","3535729","2018-11-19 08:35:45","0","58","<git><xpages><gitignore>","Typical files for .gitignore file for Xpages","<p>What are the typical files you include in your .gitignore file for your XPages project?</p>

<p>For now I have:</p>

<pre><code># NSF settings 
ODP/AppProperties/database.properties 
ODP/AppProperties/$DBIcon 
ODP/.classpath 
ODP/Code/Jars/commons-lang-2.6.jar.metadata ODP/Code/ScriptLibraries/j2ee.javalib 
ODP/Resources/Files/environment.properties ODP/Resources/Files/environment.properties.metadata 
ODP/Resources/IconNote 
ODP/Resources/AboutDocument 
ODP/Resources/UsingDocument
</code></pre>
","0","3535729","0","0"
"37311118","107083","2016-05-18 22:28:37","0","290","<git><gitignore>","How to tell git to ignore changes in certain files, but not to put them in .gitignore?","<p>I have some files that are part of a project that have some minor modifications from their source in the repository to control settings specific to my development environment.</p>

<p>They are constantly listed as ""modified"" and are always left unstaged.</p>

<p>These files do not belong in a .gitignore, as far as I am aware, since they belong in the repository. I would like git to basically ignore the fact that they have been modified.</p>

<p>This must be a common scenario, and I am looking for the best-practice way to handle it.</p>

<p>Thanks!</p>
","5","107083","",""
"53396249","4554305","2018-11-20 15:25:40","5","2109","<angular><git><npm><gitignore><npm-debug>","ignore files named npm-debug.log.XXXXXX in .gitignore","<p>Does anyone knows how to ignore this file from the repository with .gitignore?</p>

<p><a href=""https://i.stack.imgur.com/mK84P.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/mK84P.png"" alt=""enter image description here""></a></p>

<p>I'm using Gitlab.</p>

<p>I've already tried this:</p>

<p><a href=""https://i.stack.imgur.com/2kN21.png"" rel=""noreferrer""><img src=""https://i.stack.imgur.com/2kN21.png"" alt=""enter image description here""></a></p>

<p>Thanks in advance</p>
","2","4554305","",""
"70111093","17507623","2021-11-25 12:24:48","-1","805","<git><build><gitignore>","Good way for git to ignore build folders in C++ project?","<p>I'm currently working on a C++ project and use git for version control.</p>
<p>Now, we're using the git repo folder as the main project folder, so every time a change is pushed, it includes the relevant build folders (<code>build-ProjectName-Desktop-Debug sorta style folder</code>)</p>
<p>I'm aware of <code>gitignore</code> being a thing, can I somehow tell that to ignore all folders whose name starts with <code>build-</code>?</p>
","0","17507623","",""
"70116623","14872121","2021-11-25 19:57:26","0","500","<django><git><gitignore>","Django migrations files for large project in git (Best Practice)","<p>I work with a team in Django project, in the local git with same database.
we found that there was a lot of problems with django migrations specially when the team is large.</p>
<p>So we decided to make databases for each developer, sometimes the developer delete them migrations files to solve some problems with migrations.</p>
<p>we get a lot of the conflict in Django migrations files, we decided to add migrations files to gitignore.</p>
<p>Then all the work become more smoothly. but we get some problems we lost the git history for migrations files, this gives problems at updating the project versions from the specific git tag. Also, it will delete the migrations files at every time we make &quot;checkout&quot; in git.</p>
<p><strong>I suggested the following but I did find its answers</strong></p>
<p><em>make migrations files tracked by local repository and ignored in the remote repository.</em></p>
<p><strong>Any one have forced this issue?</strong></p>
","3","14872121","",""
"37359295","1900290","2016-05-21 05:33:55","1","335","<gitignore>","Unable to ignore eclipse specific files in gitignore","<pre><code>#   modified:   bar/.classpath
#   modified:   bar/.gitignore
#   modified:   bar/.project
#   modified:   bar/build.gradle
#   modified:   foo/.classpath
#   modified:   foo/.gitignore
#   modified:   foo/.project
#   modified:   foo/.settings/org.eclipse.jdt.core.prefs
#
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   .gitignore
</code></pre>

<p>The project structure is as follows</p>

<pre><code>project/foo
project/bar
project/.gitignore
</code></pre>

<p>I have added the following in project/.gitignore, but it doesn't seem to ignore eclipse settings files.</p>

<pre><code>.classpath
.project
.settings
</code></pre>

<p>How do I make this work recursively from the root project.</p>
","0","1900290","0","0"
"70128986","3808307","2021-11-26 19:01:25","2","1573","<git><gitignore>","Freezed files are added to the commit, ignoring gitignore","<p>These are the lines in my .gitignore concerning the files generated by <code>flutter pub run build_runner build --delete-conflicting-outputs</code></p>
<pre><code>*.freezed.dart
*.g.dart 
</code></pre>
<p>I tried</p>
<pre><code>git rm -rf --cached .
git add .
</code></pre>
<p>and still <code>*.freezed.dart</code> and <code>*.g.dart</code> get added again</p>
","0","3808307","0","0"
"53466704","","2018-11-25 10:49:23","3","439","<git><gitignore>","How to include folder excluded by parent .gitignore?","<p>I have two projects that have separate .gitignore files.</p>

<p>So, the project structure is as:</p>

<pre><code>child-project-
             |
             images
             .gitignore
main-project-
            |
            some source code
images-
.gitignore
</code></pre>

<p>Now in the parent .gitignore I have a line such as <code>images/</code> which excludes the directory called <code>images</code> that is located in the parent. But, I have another folder called <code>images</code> that is located inside the <code>child-project</code> directory, and I want it to be included. How can I enable it?</p>
","0","","",""
"38368154","4225660","2016-07-14 07:33:16","0","60","<git><gitignore>","how to ignore all file and directory except a directory I need by using .gitignore","<p>When I pushed my project to github I needed a problem.The structure of my project like this: <a href=""https://i.stack.imgur.com/2duKm.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/2duKm.png"" alt=""enter image description here""></a></p>

<p>Now I want to upload <code>.gitignore</code> <code>README.md</code> and all of directory <code>d2</code>.</p>

<p>I don't want to write directory in <code>.gitignore</code> because the project not only has <code>d1</code> I don't want to upload.There so many directory(d3,d4,d5) I don't want to upload.</p>

<p>I want to find a way  that I can ignore all the directory except <code>d2</code>.</p>

<p>I have tried to write <code>.gitignore</code> like this:</p>

<p><code>
*
!/d2/
!.gitignore
!./README.md
</code></p>

<p>But it didn't work.</p>

<p>Do anyone know how to do?Thanks.</p>
","1","4225660","0","0"
"38374992","653770","2016-07-14 13:02:25","2","790","<git><visual-studio><gitignore>","How do I need to modify this gitignore file to include a settings-subfolder in the Debug-directory of a VisualStudio project?","<p>I have downloaded a generic <code>.gitignore</code> file for Visual Studio from GitHub (I don't remember where), that I need to modify, but I can't figure out what I am doing wrong. The <code>.gitignore</code> file lies in the root-directory of my Visual Studio solution and contains the following lines (I included the full content below):</p>

<pre><code># Build results
[Bb]in/
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
build/
bld/
[Oo]bj/
</code></pre>

<p>I need to add a <code>Settings</code> folder in the <code>Debug</code> folder of a subproject, which has the path <code>ProgramEditor\bin\Debug\Settings\</code>, which I need to track with GIT. Unfortunately I cannot figure out how to achieve this. I have tried the following:</p>

<pre><code># Build results
[Bb]in/*
[Dd]ebug/*
!Bin/Debug/Settings
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
build/
bld/
[Oo]bj/
</code></pre>

<p>With this I now get the contents of <code>ProgramEditor\bin\Debug\Settings\</code> to show up as new files in SourceTree, but I also get a slew of other files/paths, that I still want to ignore, such as for example:</p>

<pre><code>ProgramEditor\bin\Debug\StructureMap.xml
ProgramEditor\bin_OLD\Debug\GalaSoft.MvvmLight.Extras.xml
ProgramEditor\bin_OLD\Debug\System.Windows.Interactivity.dll_OLD
</code></pre>

<p>And folders from other subprojects such as, e.g.:</p>

<pre><code>Hardware.Pump\bin\Debug\System.Net.Http.xml
</code></pre>

<p>Can anyone tell what I am missing/doing wrong?!</p>

<p>Full contents of my <code>.gitignore</code> file:</p>

<pre><code>*.suo
*.g.cs
*.lref
*.cache
*.g.i.cs
*.baml

## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.

# User-specific files
*.suo
*.user
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)
*.userprefs

# Build results
[Bb]in/
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
build/
bld/
[Oo]bj/

# Visual Studio 2015 cache/options directory
.vs/
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUNIT
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# DNX
project.lock.json
artifacts/

*_i.c
*_p.c
*_i.h
*.ilk
*.meta
*.obj
*.pch
*.pdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp
*.tmp_proj
*.log
*.vspscc
*.vssscc
.builds
*.pidb
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opendb
*.opensdf
*.sdf
*.cachefile

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding add-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# TODO: Comment the next line if you want to checkin your web deploy settings 
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/packages/*
# except build/, which is used as an MSBuild target.
!**/packages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/packages/repositories.config
# NuGet v3's project.json files produces more ignoreable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Microsoft Azure ApplicationInsights config file
ApplicationInsights.config

# Windows Store app package directory
AppPackages/
BundleArtifacts/

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!*.[Cc]ache/

# Others
ClientBin/
[Ss]tyle[Cc]op.*
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.pfx
*.publishsettings
node_modules/
orleans.codegen.cs

# RIA/Silverlight projects
Generated_Code/

# Backup &amp; report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm

# SQL Server files
*.mdf
*.ldf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe

# FAKE - F# Make
.fake/
PrintProgramExamples/
SCP_Program_GUI.VC.db
Core/CurrentImage.jpg
Core/CurrentImage_tmp.jpg
*.diagsession
</code></pre>
","1","653770","",""
"71127452","8466673","2022-02-15 13:39:01","-1","122","<git><gitignore>","Why are some files not recognized by .gitgnore?","<p>I have taken over a Vue/Gridsome project. The project can be started via the
docker-compose.yml file. After booting the node container, all files in the .docker folder (~4000 files) were prepared for the GIT commit.</p>
<p>I then added the .docker folder in the <code>.gitignore</code>. Instead of ~4000 Files
there are now only 6 files from the .docker folder. And I wonder why it
doesn´t ignore these files although I put the whole folder <code>.docker</code> into the
<code>.gitignore</code> folder.</p>
<h3>Question: Why are these files not ignored?</h3>
<p><strong>My .gitignore</strong></p>
<pre class=""lang-sh prettyprint-override""><code>.bash_history (.docker/data/node)
update-notifier-npm.json (.docker/data/node/.config/configstore)
cli.json (.docker/data/node/.config/configstore/update-notifier-@gridsome)
anonymous-cli-metrics.json (.docker/data/node/.npm)
565911....de (.docker/data/.npm/index-v5/2b/b7)
30c54c....OO (.docker/data/.npm/index-v5/2b/b7)
</code></pre>
<p><strong>.gitignore when i was clone the project</strong></p>
<pre><code>*.log
.cache
.DS_Store
src/.temp
node_modules
dist
.env
.env.*
</code></pre>
<p><strong>then i add .docker folder to .gitgnore</strong></p>
<pre><code>.docker
</code></pre>
","9","8466673","",""
"71131948","792891","2022-02-15 19:00:42","0","229","<git><gitignore><git-untracked>","Git : Untrack files without remove git cache","<p>I try to ignore a folder with <code>git update-index --skip-worktree</code> command, but it cant mark to <strong>S</strong> (skip-worktree) files under the folder until i remove git cache. <code>git rm -r --cached</code></p>
<p>When i check files with <code>git ls-files -v</code> all of them still mark with <strong>H</strong>.
If i remove git cahce, this time, it removes all files from local which are need to be mark S, and files wait in stage to commit.</p>
<p>I try to <code>gitignore_global</code> but same thing is happen.
I need untrack the folder directory without removing cache or push anything to remote.
Is it possible ?</p>
","2","792891","",""
"38449222","107763","2016-07-19 03:40:35","1","129","<git><gitignore>",".gitignore issues, doesn't ignore file","<p>My .gitignore contains the following:</p>

<pre><code>deploy/media/customoptions/options/*/*/70x/*
deploy/media/customoptions/options/*/*/200x/*
deploy/media/customoptions/options/*/*/*/*
</code></pre>

<p>I realize this is a bit more then it really needs, but I've been testing different patterns to try to get it working.  </p>

<p>When I run an add command:</p>

<pre><code>git add deploy/media/customoptions/ --verbose --dry-run
</code></pre>

<p>One of the files it's matching I would like to be ignored. <strong>Why is this being added?</strong> Based on the path, it should match true above.</p>

<pre><code>deploy/media/customoptions/options/998/4325/200x/200-ntlrope.jpg
</code></pre>

<p>I have tried deleting the entire .git directory and <code>git init</code>ing it again to start from a blank slate, and still adds that file.</p>
","2","107763","",""
"38450276","","2016-07-19 05:36:05","129","145405","<git><gitignore>","Force git to update .gitignore","<p>I have a <code>.gitignore</code> file, and it's ignoring some files. I have updated the <code>.gitignore</code> file (removed some filenames and added some filenames). This is not reflected in <code>git status</code>. How can I force git to update these changes, so that track files which are not tracked before and vice versa. </p>

<p>I have tried this <a href=""https://stackoverflow.com/q/1139762/4576114"">question</a>, still all of my files are not tracked (according to my updated <code>.gitignore</code>). (In simple, how can I force git to retract files once <code>.gitignore</code> is updated or deleted). </p>
","2","","0","0"
"38487560","1391441","2016-07-20 17:55:08","0","192","<git><gitignore>","git ignore everything except a file, a folder, and an extension within that folder","<p>I need to create a <code>.gitignore</code> file that follows these rules:</p>

<ol>
<li>Ignore everything in root</li>
<li>Except for a single file <code>fil.py</code></li>
<li>Except for a single folder <code>fol/</code> </li>
<li>But do ignore files with the extension <code>.pyc</code> within <code>/fol</code></li>
</ol>

<p>I've tried several combinations, but I can't get it to work. Here's what I've tested:</p>

<p>1-</p>

<pre><code># ignore everything in root
*
# except for this file
!fil.py
# except for this folder
!/fol
# But do ignore these files
/fol/*.pyc
</code></pre>

<p>This will track changes made to files within the <code>fol/</code> folder, but will ignore <em>all</em> new files added to it.</p>

<p>2-</p>

<pre><code># ignore everything in root
*/
# except for this file
!fil.py
# except for this folder
!/fol
# But do ignore these files
/fol/*.pyc
</code></pre>

<p>This correctly tracks both old and new files within <code>fol/</code>, while ignoring <code>*.pyc</code> files; but will also track files in the root folder.</p>

<p>3-</p>

<pre><code># ignore everything in root
/*
# except for this file
!fil.py
# except for this folder
!/fol
# But do ignore these files
/fol/*.pyc
</code></pre>

<p>This correctly tracks both old and new files within <code>fol/</code>, and ignores files in the root folder. But it will also track all <code>*.pyc</code> files in the <code>fol/</code> folder.</p>

<p>Any help will be much appreciated.</p>
","1","1391441","",""
"71237440","15233428","2022-02-23 13:01:33","2","1189","<laravel><git><vue.js><gitignore>","How to add Larvel Log file in gitignore","<pre><code>/storage/logs/laravel.log
</code></pre>
<p>I Added this Code But it's Not Working. Your Help will be Appreciated</p>
","1","15233428","",""
"71275357","18315033","2022-02-26 09:05:07","0","32","<git><gitignore>","My .gitignore file not not working although all file is untracked files","<p>All files is untracked ,i try add password.txt file to .gitignore but it doesn't work,i already have try other files in untracked list too.</p>
<p><strong>See Picture:</strong></p>
<p><img src=""https://i.stack.imgur.com/5ViMD.png"" alt=""screenshot"" /></p>
<p>Like you see,after add password.txt file to .gitignore ,but in untracked list,it still there!
Someone know how to solve this please !!!!</p>
","5","18315033","",""
"71302987","16234929","2022-03-01 02:07:37","-1","256","<git><gitignore>","Dynamic .gitignore configs to follow the same pattern over and over","<p>git here.</p>
<p>My project structure will look something like this:</p>
<pre><code>app/
    README.md
    .gitignore
    src/
        &lt;all source code goes here&gt;
    docs/
        &lt;docs go here&gt;
    misc/
        examples/
            &lt;examples go here&gt;
        fizzbuzz/
            properties/
            configs/
</code></pre>
<p>The <code>misc/fizzbuzz/properties/</code> directory is very special and I am hoping to be able to set up some special <code>.gitignore</code> configurations for it. In this directory I will have many child directories, like so:</p>
<pre><code>app/
    README.md
    .gitignore
    src/
        &lt;all source code goes here&gt;
    docs/
        &lt;docs go here&gt;
    misc/
        examples/
            &lt;examples go here&gt;
        fizzbuzz/
            properties/
                abc/
                def/
                ghi/
                ...etc.
            configs/
</code></pre>
<p>Each of these child directories (of <code>properties/</code>) will follow the same pattern:</p>
<pre><code>abc/
    abc.properties
    abc.txt
    many many other files...
def/
    def.properties
    def.txt
    many many other files...
ghi/
    ghi.properties
    ghi.txt
    many many other files...
</code></pre>
<p>So in each child directory there will be:</p>
<ol>
<li>A properties file whose name is the exact same as the name of the child directory it is a member of (<code>ghi.properties</code> under <code>properties/ghi/</code>, etc.); and</li>
<li>A txt file whose name is also the exact same as the name of the child directory it is a member of (<code>ghi.txt</code> under <code>properties/ghi/</code>, etc.); and</li>
<li>Many, many other files. Some will be <code>ghi.*</code> (a &quot;ghi&quot; file, just not of type properties or txt). Some will be <code>*.properties</code> or <code>*.txt</code> (other properties files or txt files, just not <code>ghi.properties</code> or <code>ghi.txt</code>, etc.). Some will be named all over the place (<code>foobar.mp4</code>, <code>flam.csv</code>, etc.). But the thing these files have in common is that they are not of the form &quot;<code>&lt;parent-dir-name&gt;.properties</code>&quot; or &quot;<code>&lt;parent-dir-name&gt;.txt</code>&quot;.</li>
</ol>
<p><strong>I am trying to configure <code>.gitignore</code> to ignore everything in these child directories except for the properties and txt file that matches the name of the directory they live inside of.</strong></p>
<p>Can anyone help nudge me in the right direction?</p>
","4","16234929","",""
"71324766","11812216","2022-03-02 14:54:51","0","1759","<git><firebase><unity-game-engine><github><gitignore>","What is a proper gitignore when using FireBase in Unity?","<p>I have been googling this without any luck, the little results i found don't address the file hierarchy i am dealing with in my project.<br />
So i have a simple unity project and BEFORE i use FireBase the folder hierarchy looks like this:</p>
<pre><code>Assets  
----&gt;Scenes  
Packages  
</code></pre>
<p>After importing FireBase the hierarchy looks like this:</p>
<pre><code>Assets  
----&gt;Editor Default Resources  
----&gt;ExternalDependencyManager  
----&gt;FireBase  
----&gt;Parse  
----&gt;Plugins  
----&gt;Scenes  
----&gt;StreamingAssets  
Packages  
</code></pre>
<p>Any idea what should i change in my .gitignore to avoid all those hundreds of megabytes from being added to my github?</p>
<p>My current gitignore:</p>
<pre><code># This .gitignore file should be placed at the root of your Unity project directory
#
# Get latest from https://github.com/github/gitignore/blob/main/Unity.gitignore
#
[Ll]ibrary/
[Tt]emp/
[Oo]bj/
[Bb]uild/
[Bb]uilds/
[Ll]ogs/
[Uu]ser[Ss]ettings/

# MemoryCaptures can get excessive in size.
# They also could contain extremely sensitive data
[Mm]emoryCaptures/

# Recordings can get excessive in size
[Rr]ecordings/

# Uncomment this line if you wish to ignore the asset store tools plugin
# /[Aa]ssets/AssetStoreTools*

# Autogenerated Jetbrains Rider plugin
[Aa]ssets/Plugins/Editor/JetBrains*

# Visual Studio cache directory
.vs/

# Gradle cache directory
.gradle/

# Autogenerated VS/MD/Consulo solution and project files
ExportedObj/
.consulo/
*.csproj
*.unityproj
*.sln
*.suo
*.tmp
*.user
*.userprefs
*.pidb
*.booproj
*.svd
*.pdb
*.mdb
*.opendb
*.VC.db

# Unity3D generated meta files
*.pidb.meta
*.pdb.meta
*.mdb.meta

# Unity3D generated file on crash reports
sysinfo.txt

# Builds
*.apk
*.aab
*.unitypackage
*.app

# Crashlytics generated file
crashlytics-build.properties

# Packed Addressables
[Aa]ssets/[Aa]ddressable[Aa]ssets[Dd]ata/*/*.bin*

# Temporary auto-generated Android Assets
[Aa]ssets/[Ss]treamingAssets/aa.meta
[Aa]ssets/[Ss]treamingAssets/aa/*  
</code></pre>
","8","11812216","",""
"71389176","16881932","2022-03-08 01:53:02","3","296","<gitignore>","Ignore other .gitignore files than the one in root","<p><strong>My Actual Question</strong></p>
<p>I would like that only the <code>.gitignore</code> file in the root of my directory structure ignore files, i.e, the <code>.gitignore</code> files in subdirectories shouldn't ignore files.</p>
<p><strong>To be clear</strong></p>
<p>I don't want to gitignore other <code>.gitignore</code> files. I want them to be commited to git but I don't want them to gitignore other files.</p>
<p><strong>Specific use-case</strong></p>
<p>Let's say I want to commit a boilerplate project structure to git. Let's say the project structure looks like this:</p>
<pre><code>project-root/
│
├── boilerplate/
│   ├──directory/
│   ├──some-other-directory/
│   ├──.env
└── └──.gitignore // Has a line &quot;.env&quot; which will ignore the .env file in this directory 
│
├── boilerplate2/
│   ├──directory/
│   ├──some-other-directory/
│   ├──.env
└── └──.gitignore
│
└── .gitignore // The .gitignore in root 
</code></pre>
<p>Now the <code>.gitignore</code> file in <code>boilerplate</code> directory will gitignore <code>.env</code> which I don't want. How can I stop nested <code>.gitignore</code> files from taking action?</p>
<p><strong>What I tried?</strong></p>
<p>I tried the negation (<code>!</code>) operator in the main <code>.gitignore</code> file. For the sample structure above, it's equivalent to <code>!boilerplate/.env</code>. The <code>.gitignore</code> in root simply doesn't have any power over the <code>.gitignore</code> file in the specified directory. It doesn't override it. Why does it work like that? Is there a workaround?</p>
<p><strong>Edit</strong>:</p>
<p><a href=""https://stackoverflow.com/a/71391591/16881932"">VonC</a> suggests to automate that using scripts, but that's not the question. The question is, how to do that using only <code>.gitignore</code>, if it is possible at all.</p>
","0","16881932","0","0"
"53888263","10820974","2018-12-21 16:47:35","1","45","<git><gitignore>","Exceptions in .gitignore do not exclude files in subfolders","<p>When I run <code>git status</code> it seems that it's only tracking files that have been modified but not new files in subfolders.</p>

<p>This is pretty much my .gitignore:</p>

<pre><code># Ignore everything
*

# But this files that i want to track
!.config/
!.fonts/
!.bashrc
!.gitignore
!.profile
!.Xresources
!.vimrc
!.zshrc

!README.md
</code></pre>

<p>It is in my <code>$HOME</code>.
If I create a new file in directories <code>.fonts/</code> or <code>.config/</code> it seems like git is ignoring them. But it does track files like <code>.vimrc</code> or <code>.zshrc</code></p>

<p>I tried to open this repo with GitKraken and it works how I'm expecting.
I only have this error when I run <code>git status</code> in command line</p>
","1","10820974","0","0"
"53888669","9457336","2018-12-21 17:24:10","0","1827","<git><key><gitignore><credentials><ignore>","Is there any way to upload files ignored by gitignore only to an specific repo?","<p>We're setting up a project in Rails and the fact is we have two git repos for that purpose, one is bitbucket (Were we keep track of the project), and the other is Heroku (Production). We have to upload a credentials file into Heroku so the app can work properly but we don't want that file to be uploaded to Bitbucket for security issues so our question is: Can we set some sort of option into gitignore file to upload the credentials file JUST TO Heroku AND NO to bitbucket? Thanks in advance.</p>

<p>We've tried to upload the file via transfer.sh and gpg but we'd rather no use it since this file is very delicate in terms of security. Also creating the file using heroku bash is not possible since Heroku automatically deletes it.</p>
","1","9457336","",""
"71465807","8482565","2022-03-14 09:54:32","1","48","<git><gitignore>","Can I have a file in a git repo, everybody gets it, but it is ignored for everyone?","<p>I have two files I would like in the repository (they are included in clone and update), so everybody has access to these scripts. But I want that changes in them are not tracked and they are never automatically committed (by anyone).</p>
<p>If I put them in the gitignore file and remove them from the repository (and keep a local copy with --cached), then they are not accessible to others anymore.</p>
<p>Am I overlooking a simple way to use the gitignore function to achieve this?</p>
<p>edit: These files are plotting scripts with three parameters in the beginning (which are edited and run locally). Most of the time nothing else in the script changes (and if it did it would be worthy of a commit).</p>
","6","8482565","",""
"53904799","3163116","2018-12-23 15:20:16","0","602","<git><laravel><gitignore><laravel-artisan>","Git .gitignore not working on artisan file from laravel","<p>I'm trying to add artisan file from laravel installation in .gitignore. Not working. It is possible that GIT to mistake artisan [file] with a directory? There is no extension on artisan file and this can be a problem.</p>
","1","3163116","",""
"71488335","1981585","2022-03-15 20:01:25","2","21","<github><gitignore>","gitignore trailing /** vs trailing / vs just putting directory","<p>I'm trying to understand if I need to put a trailing /** on my directory list for my gitignore file.</p>
<p>Are</p>
<pre><code>doc-assets
doc-assets/
doc-assets/**
</code></pre>
<p>all the same thing? I'm not seeing a difference, but people seem to specify in other answers here that the /** includes all items in a directory... which seems unnecessary if I'm just ignoring the directory itself.</p>
<p>In this case, the directory is at the root of the git repository, and .gitignore is in the root as well.</p>
<p>Is it possible that the specificity (or lack thereof) is so people can specify files NOT to ignore? What other reasons would there be for using one of those three ignore options over another?</p>
","0","1981585","",""
"71541804","17987266","2022-03-19 20:29:19","0","187","<python><setuptools><gitignore>","How to make setuptools honor .gitignore?","<p>I have the following directory structure:</p>
<pre><code>lib/
   lib/
      pkg1/
         __init__.py
      pkg2/
         __init__.py
      data/ # has many subdirectories and files
   tests/
   .gitignore
   setup.py
</code></pre>
<p>The <code>data</code> folder (not a package) has files and other subfolders, and some of them are excluded from the git repo due to <code>.gitignore</code>.</p>
<p>I want to <code>python setup.py bdist_wheel</code> this project and include the files in <code>data</code>, but I don't want any <code>.gitignore</code>'d file in the final wheel. Does <code>setuptools</code> support that?</p>
","2","17987266","",""
"71611522","9439560","2022-03-25 02:31:53","0","372","<python><azure><github><azure-functions><gitignore>","Azure Function CI/CD deployment using GitHub loses important file in the .gitignore","<p>Odd question, but a question for which I have found no answers for. A classic &quot;middleman&quot; (Git) screwing the consumer problem.</p>
<p>I have an Azure Function (python, timer trigger), that I can successfully deploy straight from VS Code. It's the usual file <a href=""https://learn.microsoft.com/en-us/azure/azure-functions/functions-reference-python?tabs=asgi%2Cazurecli-linux%2Capplication-level"" rel=""nofollow noreferrer"">structure</a>, etc. BUT, when I assign a deployment slot in the Portal (Deployment Center), connecting to GitHub (using <a href=""https://learn.microsoft.com/en-us/azure/azure-functions/functions-continuous-deployment"" rel=""nofollow noreferrer"">this example</a>), I lose an important <code>.py</code> file that I have listed in my <code>.gitignore</code> file. The <code>.gitignore</code> file is in the root of the project folder.</p>
<p>This file has some API keys, Slack hooks, etc. - so it is essential to my Function. Obviously, I do not want those keys exposed on my GitHub page, but I need them in the Azure Function.</p>
<p>Am I SOL, if I want to do a CI/CD pipeline?</p>
<p>E.g., I'm not always around my personal laptop with VS Code, and I might want to fiddle with the timer schedule straight from GitHub on the fly - and this CI/CD connection is the best way to make sure my Function keeps running (it's a python function on a linux consumption plan, so I can't just edit CRON from the portal).</p>
","0","9439560","",""
"71650884","3625699","2022-03-28 16:51:05","0","92","<git><visual-studio><gitlab><gitignore>",".gitignore include SqlServerTypes folder with all contents","<p>I am using the official Visual Studio <code>.gitignore</code>.</p>
<p><a href=""https://github.com/github/gitignore/blob/main/VisualStudio.gitignore"" rel=""nofollow noreferrer"">https://github.com/github/gitignore/blob/main/VisualStudio.gitignore</a></p>
<p>I have projects in a nested folder, say:</p>
<pre><code>/MySolution/src/MyProject1/SqlServerTypes/...
/MySolution/src/MyProject2/SqlServerTypes/...
/MySolution/src/MyProject3/SqlServerTypes/...
/MySolution/src/MyProject4/SqlServerTypes/...
...
/MySolution/src/MyProjectN/SqlServerTypes/...
</code></pre>
<p>There can be multiple projects but I need to whitelist <code>SqlServerTypes</code> folder and all its contents on any path. How is this possible?</p>
<pre><code>!SqlServerTypes/*
!SqlServerTypes/**
!SqlServerTypes/**/*.dll
!SqlServerTypes/x64/*.dll
!SqlServerTypes/x86/*.dll
</code></pre>
<p>This did not work for me. It is placed at the bottom of the <code>.gitignore</code> file.
When writing <code>git rm -r --cached .</code> and <code>git add .</code> in the root folder, the .dlls from my <code>SqlServerTypes</code> folders are not included.</p>
<p><a href=""https://i.stack.imgur.com/0b7ms.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/0b7ms.png"" alt=""enter image description here"" /></a></p>
<p>The contents of the repository as seen on gitlab.com:</p>
<p><a href=""https://i.stack.imgur.com/6hq2C.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/6hq2C.png"" alt=""enter image description here"" /></a></p>
<ul>
<li>as you can see, the dlls and the x64 and x86 folders are not present.</li>
</ul>
<p>This behavior is required for using SqlServerTypes NuGet package for projects because installing the package, the folder is automatically added to the project, but it is not refreshed after deleted. Because of this, when the files are ignored, the NuGet package does not work correctly, although &quot;installed&quot;.</p>
<p>Thank you, any help is very appreciated</p>
","0","3625699","",""
"71671184","13947038","2022-03-30 03:33:21","0","117","<git><gitignore>","space at beginning of line in .gitignore seems to get the line ignored","<p>The only difference between the <code>.gitignore</code> is a space at the beginning of a line, and it seems to make the line ignored. Why is the result different. I add the space for alignment.</p>
<p><strong>Git folder tree structure</strong>:</p>
<pre><code>.
└── d1
    ├── d11
    │   ├── f1
    │   └── f2
    ├── d12
    │   ├── f1
    │   └── f2
    └── f1
</code></pre>
<p>First <strong>.gitignore</strong>:</p>
<pre><code>/*
!d1
d1/*
!/d1/d11
</code></pre>
<p>First stageable files:</p>
<pre><code>On branch master

No commits yet

Changes to be committed:
  (use &quot;git rm --cached &lt;file&gt;...&quot; to unstage)
        new file:   d1/d11/f1
        new file:   d1/d11/f2
</code></pre>
<p>Second <strong>.gitignore</strong>: (notice the difference in the third rule)</p>
<pre><code>/*
!d1
 d1/*
!/d1/d11
</code></pre>
<p>Second stageable files:</p>
<pre><code>On branch master

No commits yet

Changes to be committed:
  (use &quot;git rm --cached &lt;file&gt;...&quot; to unstage)
        new file:   d1/d11/f1
        new file:   d1/d11/f2
        new file:   d1/d12/f1
        new file:   d1/d12/f2
        new file:   d1/f1
</code></pre>
<p><a href=""https://i.stack.imgur.com/aJ095.png"" rel=""nofollow noreferrer"">Here is the image of my execution</a> I expect the outcome should be the same.</p>
<p>The wrong intuition may come from this rule which says nothing about beginning space. I did see the word trailing though.</p>
<pre><code>Trailing spaces are ignored unless they are quoted with backslash (&quot;\&quot;).
</code></pre>
","4","13947038","0","0"
"53967666","","2018-12-29 07:38:52","-1","3340","<git><gitignore>","How to add content to .gitignore?","<p>I am reading a book by Ethan Brown called Learning JavaScript. On Ch2 the author will start describing and teaching how to use some tools that will be interesting to learn throughout the course. One of them is git.</p>

<p>There is this part where he tells me to add .gitignore and add a few contents to it.</p>

<p>But I haven't found a way that didn't throw me errors. The passage goes as follows:</p>

<blockquote>
  <p>First, from your project root, initialize a  repository:</p>

<pre><code>$ git init
</code></pre>
  
  <p>This will create a project repository for you (there’s now a hidden
  directory called  .git in your project root).</p>
  
  <p>Inevitably,  there 
  will  be  some  files  you  never  want  tracked  in  version 
  control:  build artifacts,  temporary  files,  and  the  like.  These 
  files  can  be  explicitly  excluded  in  a  file called .gitignore.
  Go ahead and create a .gitignore file now with the following contents:</p>

<pre><code># npm debugging logs
npm-debug.log*

# project dependencies
node_modules

# OSX folder attributes
.DS_Store

# temporary files
*.tmp
*~
</code></pre>
</blockquote>

<p>I was able to create the git init. That was easy. But from then on things got a little complicated.</p>

<p>I tried adding the .gitignore file from this resource provided by sully6768 -> <a href=""https://stackoverflow.com/questions/10744305/how-to-create-gitignore-file"">How to create .gitignore file</a></p>

<p>And it worked. But I wasn't able to commit the content to .gitignore.</p>

<p>So pretty much my question is...</p>

<p>How do I make the part bellow work using <em>Linux Terminal</em>. </p>

<blockquote>
  <p>Go ahead and create a .gitignore file now with the following contents:</p>

<pre><code># npm debugging logs
npm-debug.log*

# project dependencies
node_modules

# OSX folder attributes
.DS_Store

# temporary files
*.tmp
*~
</code></pre>
</blockquote>

<p>I don't know how to do that. </p>

<p>Thank you in advance.</p>

<p>Other sources investigated:</p>

<ol>
<li><a href=""https://stackoverflow.com/questions/34492138/adding-files-to-gitignore"">Adding files to gitignore</a></li>
<li><a href=""https://stackoverflow.com/questions/10176875/add-gitignore-to-gitignore"">Add .gitignore to gitignore</a></li>
<li><a href=""https://stackoverflow.com/questions/2209810/add-glob-to-gitignore"">add #*# glob to .gitignore?</a></li>
<li><a href=""https://stackoverflow.com/questions/10744305/how-to-create-gitignore-file"">How to create .gitignore file</a></li>
</ol>

<p>Citation from: Learning JavaScript
by Ethan Brown
Copyright © 2015 O’Reilly Media. All rights reserved.
Printed in the United States of America.
Published by O’Reilly Media, Inc. , 1005 Gravenstein Highway North, Sebastopol, CA 95472.</p>
","2","","",""
"71735516","492307","2022-04-04 10:13:59","0","1475","<git><gitignore>","Proper way to setup multiple .gitignore files in nested folders of a repository","<p>I have the following folder structure:</p>
<pre><code>Project/
    .git/
    .gitignore #1
    a/
        a1/
             a2.txt
             a3.txt
        .gitignore #2
    b/
        b1.txt
    c.txt
</code></pre>
<p>I would like to have <code>git</code> not ignore <code>a2.txt</code>, and not ignore entirety of <code>b/</code>. Everything else should be ignored.</p>
<p>Based on suggestions/comments/answers provided <a href=""https://stackoverflow.com/questions/71728176/easier-way-to-not-ignore-a-specific-deeply-nested-set-of-files"">here</a>, the content of <code>.gitignore #1</code> is:</p>
<pre><code>a/
c.txt
</code></pre>
<p>This essentially ignores <code>c.txt</code> and everything in folder <code>a/</code>, the latter being subject to not being overridden by a deeper nested <code>.gitignore</code>.</p>
<p>The content of <code>.gitignore #2</code> is:</p>
<pre><code>!a1/a2.txt
</code></pre>
<p>I was hoping this deeper nested <code>gitignore</code> file would lead to not ignoring file <code>a2.txt</code>.</p>
<p>However, running <code>git status --ignored</code> results in:</p>
<pre><code>On branch master

No commits yet

Untracked files:
  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)
        .gitignore
        b/

Ignored files:
  (use &quot;git add -f &lt;file&gt;...&quot; to include in what will be committed)
        a/
        c.txt

nothing added to commit but untracked files present (use &quot;git add&quot; to track)
</code></pre>
<p>That is, the entirety of <code>a/</code> seems to be ignored despite the exception I was hoping would be provided by <code>.gitignore #2</code>.</p>
<p>How can nested <code>.gitignore</code>'s be correctly used to achieve the requirement above?</p>
<p>(Note: I have only named the <code>.gitignore</code> files in the description above as <code>#1</code> and <code>#2</code> for clarificatory purposes to differentiate between the two. In my actual computer, these files are properly named just <code>.gitignore</code>.)</p>
","3","492307","",""
"71739059","11760058","2022-04-04 14:33:26","-2","102","<git><gitignore>","What is fastest way to .gitignore a directory: With or without trailing slash and **?","<p>I want to exclude the directory 'dir' from a git repo using .gitignore. No further exclude patterns shall refer to it with <code>!/dir...</code>, it shall only be mentioned once in the .gitignore.</p>
<p>Which of these alternatives is the fastest for git to apply and decide not to look further into the dir?</p>
<ul>
<li><code>/dir</code></li>
<li><code>/dir/</code></li>
<li><code>/dir/*</code></li>
<li><code>/dir/**</code></li>
</ul>
<p>The pattern matching is implemented in <a href=""https://github.com/git/git/blob/master/dir.c"" rel=""nofollow noreferrer"">git/dir.c</a>.
Relevant functions seem to be <a href=""https://github.com/git/git/blob/4b6846d9dcd391164b72bd70e8a0c0e09776afe3/dir.c#L324"" rel=""nofollow noreferrer"">match_pathspec_item</a>, <a href=""https://github.com/git/git/blob/4b6846d9dcd391164b72bd70e8a0c0e09776afe3/dir.c#L447"" rel=""nofollow noreferrer"">do_match_pathspec</a>, <a href=""https://github.com/git/git/blob/4b6846d9dcd391164b72bd70e8a0c0e09776afe3/dir.c#L1535"" rel=""nofollow noreferrer"">prep_exclude</a> and <a href=""https://github.com/git/git/blob/4b6846d9dcd391164b72bd70e8a0c0e09776afe3/dir.c#L1851"" rel=""nofollow noreferrer"">treat_directory</a>.</p>
","3","11760058","",""
"53976946","5178726","2018-12-30 10:42:26","5","726","<git><github><gitignore>","same global remote gitignore file across all branches","<p>What I am trying to achieve is having one single .gitignore file (tracked by git) that is synced across all of the branches in the remote repository (hosted on GitHub) and thus also on the corresponding local branches. The .gitignore file I am currently using is not perfect so once in a while (sometimes multiple times per day) I have to update it. The problem then is that I have to <code>checkout</code> that .gitignore file across all branches manually which is becoming more and more a pain in the ass as more branches are created. So for every branch I do (with the updated .gitignore in branch master)</p>

<pre><code>git checkout some-outdated-branch
git checkout master .gitignore
git add .gitignore
git rm -r --cached .
git add .
git commit -m ""Updated .gitignore and fixed tracked files""
</code></pre>

<p>As this is relatively time consuming for multiple branches I tried to search for a way to have the one .gitignore file in branch master (or in a seperate gitignore-branch branch) that is automatically synced across all branches (locally, as well as remotely when pushed).<br>
The problem here is that I do not want to use <code>git config --global core.excludesfile /path/to/local/.gitignore
</code> (as suggested <a href=""https://stackoverflow.com/a/4944954/10847445"">here</a>) as I want my project partners to also use that specific .gitignore file and not have to change the <code>git config</code> file for this. In <a href=""https://stackoverflow.com/questions/4944879/gitignore-across-all-branches#comment31078764_4944954"">this comment</a> someone else is asking this question, but it has not been answered. I can also not find any answers on Stack Overflow regarding my problem. </p>

<p><strong>Short summary</strong><br>
I want to edit the .gitignore file on one branch only and have that change synced with all other branches (automatically) in a time and effort efficient manner. After that I want to push the change in all branches to the remote repository (preferably with only one or a few lines of code and not having to remake a commit with corresponding commit message for each branch).</p>
","2","5178726","",""
"71755256","6211109","2022-04-05 16:22:32","0","295","<git><gitignore>","Ignore a folder containing a specific file in git","<p>In my root directory, there are several folders containing Python code. Sometimes, I may have to write ad hoc code for plotting some results quickly. But I do not want these files or the results on the remote repository. I can add such folders to <code>.gitignore</code> to exempt them from being added. Or I can unstage those folders after adding them. But I am looking for an easier way to do this.</p>
<p>I was thinking along the lines of <code>.nomedia</code> files. Media files in folders with a <code>.nomedia</code> file are ignored. Similarly, can I place some custom hidden file (say, <code>.nogit</code> or so) in the sub-directories which I do not want to include in git? Or is this not a healthy thing to do?</p>
","3","6211109","",""
"71816309","14110946","2022-04-10 11:49:48","0","534","<continuous-integration><yaml><gitignore>","Should .github worflow yml files be ignored?","<p>Hope you are all doing great :)</p>
<p>This is a simple question, that I found no answer to, online. Should .github/workflow actions (yml files) be added to gitignore?</p>
","0","14110946","",""
"71856734","14442010","2022-04-13 11:28:18","0","23","<git><gitignore>","gitignore ignores the file I asked not to ignore","<p>Here's my complete <code>.gitignore</code> file for my Django project:</p>
<pre><code># Django Python Stack
*.py[cod]
*$py.class

# Django
*.log
*.pot
*.pyc
__pycache__/
local_settings.py
db.sqlite3
db.sqlite3-journal
media/
static/

# Environments
.env
venv/

# Visual Studio Code
.vscode/
!.vscode/settings.json
!.vscode/tasks.json
!.vscode/launch.json
!.vscode/extensions.json
!.vscode/*.code-snippets
.history/
.history
.ionide
*.code-workspace
</code></pre>
<p>and here are the staged changes:</p>
<p><a href=""https://i.stack.imgur.com/AajNQ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/AajNQ.png"" alt=""enter image description here"" /></a></p>
<p>So the <code>launch.json</code> file I've explicitly excluded is still ignored:</p>
<p><a href=""https://i.stack.imgur.com/AbMRc.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/AbMRc.png"" alt=""enter image description here"" /></a></p>
<p>What's the solution?</p>
","2","14442010","",""
"71964274","17029749","2022-04-22 06:25:46","1","143","<python><git><jupyter><gitignore><github-desktop>","Every file added to .gitignore was deleted by Git during a Pull","<p>I recently wanted to start tracking some project files for a certificate course I'm taking, so I got the Git Desktop app and linked my main project folder to my Github repo, where I intended to only track specific folders.</p>
<p>So thinking this was the right way to go, I added basically everything that I didn't want to track to the <code>.gitignore</code> file.<br />
All these Jupyter Notebooks, tens of thousands of data images, etc.</p>
<p>And after one night, and one pull to get the readme from the online repo into my local files, Git deleted every single file that was named on the <code>.gitignore</code> file.<br />
Every folder is empty, except for the tracked project folders.</p>
<p>Is there a way to recover the files, and prevent this from occurring in the future?</p>
","4","17029749","0","0"
"71978229","7713770","2022-04-23 08:55:48","0","441","<git><yii><gitignore>",".gitignore file with yii framework","<p>I have a yii 1 application. And I have a .gitignore file in the folder: Yii/sdi. The file .gitignore looks like this:</p>
<pre><code>assets/*
!assets/.gitignore
protected/runtime/*
!protected/runtime/.gitignore
protected/data/*.db
</code></pre>
<p>But by source control there are still 10K changes, for example this files in the folder:</p>
<blockquote>
<p>C:\xampp\htdocs\yii\sdi\protected\components\widgets\select2\assets\js\i18n</p>
</blockquote>
<p>So what I have to change in the .gitignore file?</p>
<p>Thank you</p>
<p>I deleted the folder SDI. So I have it now directly in the root folder - all the other folders.</p>
<p>And I have the .gitignore file like this:</p>
<pre><code># phpstorm project files
.idea

# netbeans project files
nbproject

# zend studio for eclipse project files
.buildpath
.project
.settings

# windows thumbnail cache
Thumbs.db

# composer vendor dir
/vendor

# composer itself is not needed
composer.phar

# Mac DS_Store Files
.DS_Store

# phpunit itself is not needed
phpunit.phar
# local phpunit config
/phpunit.xml

tests/_output/*
tests/_support/_generated

#vagrant folder
/.vagrant

protected/components/widgets/select2/assets/*

assets/*
!assets/.gitignore
protected/runtime/*
!protected/runtime/.gitignore
protected/data/*.db
</code></pre>
<p>And the .gitignore file is in the .idea folder</p>
<p>So Webscraper is root folder then in the root folder I have a .idea folder. and in the .idea folder there I have the .gitignore file.</p>
<p>oke, if I do this:</p>
<pre><code>!.gitignore

protected/components/widgets/select2/assets/*

# Default ignored files
/shelf/
/workspace.xml
# Datasource local storage ignored files
/dataSources/
/dataSources.local.xml
# Editor-based HTTP Client requests
/httpRequests/

# phpstorm project files
.idea

# netbeans project files
nbproject

# zend studio for eclipse project files
.buildpath
.project
.settings

# windows thumbnail cache
Thumbs.db

# composer vendor dir
vendor/

# composer itself is not needed
composer.phar

# Mac DS_Store Files
.DS_Store

# phpunit itself is not needed
phpunit.phar
# local phpunit config
/phpunit.xml

tests/_output/*
tests/_support/_generated

#vagrant folder
/.vagrant


.protected/vendor/*

assets/*
!assets/.gitignore
protected/runtime/*
!protected/runtime/.gitignore
protected/data/*.db


</code></pre>
<p>still have 9K plus changes</p>
","0","7713770","",""
"72026953","1093940","2022-04-27 10:09:17","0","34","<git><azure-devops><gitignore>",".gitignore general Log/ but track specific Log-folder?","<p><strong>The question</strong></p>
<p>How do I generally .gitignore Log/log folders, but include my specific <code>NetTerminal/Log/</code> folder and contents below it?</p>
<hr />
<p><strong>Background</strong></p>
<p>We're using Azure DevOps and have a repository with the .gitignore template file &quot;VisualStudio&quot;.</p>
<p>The .gitignore file has by default this line:</p>
<pre><code>[Ll]og/
</code></pre>
<p>It happens that we have a Visual Studio project with a log class in: <code>NetTerminal/Log/Log.cs</code>.
The folder and the file is being ignored by git because of the default line above.
The NetTerminal folder is not below another Log folder, so that's not the reason.</p>
<p>I have tried adding <strong>any</strong> of the below, but they doesn't do anything, the file doesn't show up in Sourcetree's Uncommitted Changes list.</p>
<pre><code>!NetTerminal/Log/
!NetTerminal/Log/*
!NetTerminal/Log/Log.cs
</code></pre>
<p>If I add a * to the default, as follows, now my custom file is found - but if I create a new Log folder somewhere else and add a file into it, it is also showing up, so the [Ll]og/* line is kind of ignored?</p>
<pre><code>[Ll]og/*
</code></pre>
<p>Please advice? :-)</p>
<h1>Answer</h1>
<p>As this question has been closed, I'm writing the answer to my question here. Maybe the question can be reopened, then I'll move this to a real answer.</p>
<p>The answer to this problem lies in one line of <a href=""https://git-scm.com/docs/gitignore"" rel=""nofollow noreferrer"">the manual for gitignore files</a>:</p>
<blockquote>
<p>If there is a separator at the beginning <strong>or middle</strong> (or both) of the
pattern, then the pattern is relative to the directory level of the
particular .gitignore file itself. Otherwise the pattern may also
match at any level below the .gitignore level.</p>
</blockquote>
<p>I knew about /zyx being (relative to the .gitignore file, so file or folder &quot;zyx&quot; is located in the same folder as the .gitignore file.
I also knew about zyx/ meaning zyx IS a folder, not a file.
So I made the mistake to put !NetTerminal/Log believing it could unignore my Log folder located in NetTerminal folder <em>somewhere</em> in the folder structure. But no can do, specifing a folder structure to match against automatically makes it relative to the .gitignore file. I find this sad. Prefixing with / clearly states that this is located in relation to the .gitignore file.</p>
<p>So first I thought I had to put the full path relative to the .gitignore file, making it volunerable if we would change our folder structure.</p>
<p>BUT, &quot;**/&quot; to the rescue! From <a href=""https://git-scm.com/docs/gitignore"" rel=""nofollow noreferrer"">the manual</a>:</p>
<blockquote>
<p>A leading &quot;<strong>&quot; followed by a slash means match in all directories. For
example, &quot;</strong>/foo&quot; matches file or directory &quot;foo&quot; anywhere, the same
as pattern &quot;foo&quot;. &quot;**/foo/bar&quot; matches file or directory &quot;bar&quot;
anywhere that is directly under directory &quot;foo&quot;.</p>
</blockquote>
<p>So, the solution is:</p>
<pre><code>[Ll]og/
!**/NetTerminal/Log/
</code></pre>
<p>With this, new Log folders (with files inside) is ignored and my NetTerminal/Log file is included.</p>
<p>YEAY!</p>
","13","1093940","",""
"54130976","1620607","2019-01-10 14:37:56","0","1868","<git><visual-studio><gitignore><projects-and-solutions>",".gitignore with Visual Studio Solutions containing multiple project folders","<p>I have a c:\git folder where I store all my code.
In this folder is a folder for each application/solution.
Each application/solution can have many projects.</p>

<p>Example folder structure:</p>

<pre><code>c:\git\abc\abc-da\
c:\git\abc\abc-WebUI\
c:\git\abc\abc-WinService\
c:\git\abc\abc-Tester\
c:\git\abc\abc-UnitTest\
</code></pre>

<p>My question is this:<br>
If I put my VisualStudio.gitIgnore file in the c:\git\abc\ folder (named .gitignore obviously) then would it apply to all subfolders? or do I have to copy the .gitignore to each project folder?</p>
","0","1620607","0","0"
"54160252","3766405","2019-01-12 13:57:34","1","163","<git><gitignore>","Does git specify recursive behaviour for gitignore patterns?","<p>This is the exact question as <a href=""https://stackoverflow.com/questions/31461236/where-is-gitignore-recursive-behavior-specified"">Where is gitignore recursive behavior specified?</a>, because I do not think its accepted answer explains what in git's documentation specifies the recursive behaviour of gitignore patterns.</p>

<p>Consider the following scenario. The structure of the repository is</p>

<pre><code>.gitignore
a
|
-- f
</code></pre>

<p>(that is, at the root of the repository there is a <code>.gitignore</code> file and a folder named <code>a</code>, and inside <code>a</code> there is a file named <code>f</code>)</p>

<p>The <code>.gitignore</code> file at the root of the repository contains <code>f</code> as the only pattern.</p>

<p>Now if we were to read the <a href=""https://git-scm.com/docs/gitignore"" rel=""nofollow noreferrer"">gitignore documentation</a>, we would find the following paragrah (emphasis mine):</p>

<blockquote>
  <p>If the pattern does not contain a slash /, Git treats it as a shell glob pattern and <strong>checks for a match against the pathname relative to the location of the .gitignore file</strong> (relative to the toplevel of the work tree if not from a .gitignore file).</p>
</blockquote>

<p>From the paragraph quoted above I understand that when <code>git</code> checks whether file <code>f</code> should be ignored or not, it would try to match its ""<strong>pathname relative to the location of the .gitignore file</strong>"" to the pattern. Therefore, it would try to match the pattern <code>f</code> with <code>a/f</code>, which should not match.</p>

<p>Is my understanding not correct? Thank you.</p>
","0","3766405","",""
"54190128","4268390","2019-01-14 22:28:26","1","38","<git><gitignore>","gitignore file from multiple subdirectory","<p>I know tittle is little confusing, I have below structure where I want to delete specific sub-directory and file extensions. I try to use wildcard <code>**</code> but I dont think its working</p>

<pre><code>Main/AllOn/bin/Debug     
Main/AllOff/bin/Debug    
Main/Auto/bin/Debug/    
Main/Manual/bin/Debug
</code></pre>

<p>What is the best way to ignore files in <code>bin/Debug</code> folder?</p>

<p>I have try this but didn't worked for me<br>
<code>Main/**/bin/Debug/*.exe</code> to ignore all the .exe files<br>
<code>Main/**/bin/Debug/bin</code> ignore the bin sub-directory under Debug</p>
","4","4268390","",""
"72236952","7934600","2022-05-14 02:46:05","3","278","<git><gitignore>","Can a gitignore file have a name?","<p>For example, can you name a <code>.gitignore</code> file <code>foo.gitignore</code>?</p>
<p>Ultimately, the purpose for this being to have multiple <code>.gitignore</code> files for different sub-project types.</p>
","3","7934600","0","0"
"54267950","7374033","2019-01-19 14:11:54","0","40","<bash><git><gitignore><prompt>","""git branch"" outputs result even when I'm inside an "".gitignored"" folder","<p>I'm trying to parse the branch I'm currently checked out into to my bash prompt. This is quite easy using the following bash function in your PS1: </p>

<pre><code>parse_git_branch() {
 git branch 2&gt; /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
}
export PS1=""\[$(tput setaf 3)\]\u\[$(tput setaf 2)\]@\[$(tput setaf 4)\]\h \[$(tput setaf 5)\]\w\[$(tput setaf 7)\]\[$(tput setaf 3)\]\$(parse_git_branch) \[$(tput setaf 7)\]\\$ \[$(tput sgr0)\]""
</code></pre>

<p>My problem arises when the prompt still shows a 'checked out' branch from within a folder inside the <code>.gitignore</code> file.
For instance:
Let's suppose <code>/home/rbroggi/workspace/project_one</code> is the root of my repository tracked by git (  e.g.: the place where the <code>.git</code> folder is to be found). And within this repository I have a .gitignore file <code>/home/rbroggi/workspace/project_one/.gitignore</code> with the following record:
<code>ignoredfolder/</code>. I would assume an empty output/result from <code>git branch</code> once changing directory into the <code>ignoredfolder</code> but instead it keeps outputting the branch I'm checked out in the parent folder. This is very annoying and maybe if I had visibility over how the command <code>git branch</code> works I could avoid getting the output for ignored folders. </p>

<pre><code>rbroggi@arch ~/workspace/project_one (master) $ pwd
/home/rbroggi/workspace/project_one
rbroggi@arch ~/workspace/project_one (master) $ cat .gitignore
ignoredfolder/
rbroggi@arch ~/workspace/project_one (master) $ cd ignoredfolder/
rbroggi@arch ~/workspace/project_one/ignoredfolder (master) $ git branch 2&gt; /dev/null | sed -e '/^[^*]/d' -e 's/* \(.*\)/ (\1)/'
 (master)
rbroggi@arch ~/workspace/project_one/ignoredfolder (master) $
</code></pre>

<p>Thank you for taking the time to trying and helping me.</p>

<p>Rodrigo Broggi</p>
","5","7374033","",""
"54305626","5339829","2019-01-22 09:59:46","4","5506","<android><git><gitignore>","How to gitignore a particular Java file or any folder or any XML file in Android project?","<p>I have a project in Bitbucket and I want to give access to one of my intern. I want to ignore certain Java files and certain file inside debug folder.</p>

<p>I have tried using the way, adding this line in my gitignore file:</p>

<pre><code>/app/src/main/java/com/example/amanv/emulatordetection/NewActivity.class
</code></pre>

<p>However, this didn't work out.</p>

<p>I also tried:</p>

<pre><code>/NewActivity.class
</code></pre>

<p>didn't work out too.</p>

<p>How can I do that?</p>
","0","5339829","",""
"54315206","239879","2019-01-22 19:31:25","39","14144","<python><github><gitignore><pyenv>","Should we gitignore the .python-version file?","<p>I have a <code>.python-version</code> file, and when I create a Python repo with github and specify that it should have a <code>.gitignore</code>, it adds the <code>.python-version</code> file to it. It seems to me that that file should NOT be ignored since other people running the code on different machines would want to know what version of Python they need.</p>

<p>So why is it <code>.gitignore</code>d?</p>
","3","239879","0","0"
"54334618","537259","2019-01-23 19:48:14","1","64","<git><gitignore>","Remove folder in git repo?","<p>I have a folder for my virtual environment on my local that were pushed to my git repo before I set up my .gitignore file.</p>

<p>How can I remove the folder from the git repo but leave it on local? </p>
","0","537259","",""
"54374685","7951907","2019-01-26 00:52:18","1","1037","<git><gitignore><rebase>","Ignoring naughty files with git rebase","<p>I have a GitHub repo where I keep mainly <code>.tex</code> files, with Makefiles that compile all of the files to create <code>.pdf</code>s. On this repo, the <code>.gitignore</code> file serves to ignore some compilation files related to this, most notably the <code>.pdf</code>s themselves. Now I also have some files that aren't the result of compiling the <code>.tex</code> files, and should therefore not be ignored by <code>git</code>. I recently added some code (using the <code>minted</code> package) in my <code>.tex</code> files that creates compilation files of two certain types, namely <code>.pygstyle</code> and <code>.pygtex</code>. These files are files I don't want to keep in the repo, hence I added them to my <code>.gitignore</code>--after already adding them in a previous commit :(.</p>

<p>I'd like to find the commands I'd have to type in order to rebase this branch in a way that doesn't remove all files in the <code>.gitignore</code> from source control, seen as there are some <code>.pdf</code>s that I'd like to keep, but the compilation files I mentioned above should be ignored.</p>

<p>I tried rebasing the normal way, only to find out about those lost files that couldn't be ignored; ever since, I've been aimlessly rebasing onto new branches, with little to no success.</p>

<p>Ideally, there would be a way to retroactively apply the <code>.gitignore</code> file to the commits introducing the ""naughty files"", without removing other files that were manually added to bypass the <code>.gitignore</code>.</p>

<p>I thought about not using rebase (for example by simply applying the <code>.gitignore</code> to a subset of all the files), but I'd like to keep it clean and use <code>git rebase</code> instead.</p>
","1","7951907","",""
"54395559","1173037","2019-01-28 04:29:30","0","369","<xcode><git><gitignore>","Xcode .gitIgnore showing shows files with ignored folder","<p>I have tried to solve this by</p>

<ol>
<li><strong>Deleting</strong> all pods and re installing</li>
<li><strong>Cleaning</strong> build folder</li>
<li><strong>Deleting</strong> .gitignore and recreating</li>
</ol>

<p>However there are a few files within the Pods dir that continue to show up</p>

<p>I'm ignoring using this in my .gitignore since my initial commit - nothing in this has ever been committed.</p>

<pre><code>Pods/
</code></pre>

<p>Note this has only started recently with a with a new pod update</p>

<p>When I try to commit I get the following. </p>

<p>All other pods within this dir are ignored.</p>

<p>I have looked at these, but no luck fixing</p>

<p><a href=""https://stackoverflow.com/questions/25003448/gitignore-ignoring-whitelisted-folder"">.gitignore ignoring whitelisted folder</a></p>

<p><a href=""https://stackoverflow.com/questions/39014896/gitignore-not-ignoring-folder"">.gitignore not ignoring folder</a></p>

<p><a href=""https://stackoverflow.com/questions/38227797/gitignore-not-ignoring-folders"">Gitignore not ignoring folders</a></p>

<p><a href=""https://stackoverflow.com/questions/2965060/gitignore-doesnt-ignore-files"">.gitignore doesn&#39;t ignore files</a></p>

<p>This looked like it may have the solution but not sure if I want to try it, so decided to post and understand the reason why this is happening </p>

<p><a href=""https://stackoverflow.com/questions/24410208/gitignore-does-not-ignore-folder"">gitignore does not ignore folder</a></p>

<p>Note: Running Swift 4.2 / Xcode 10.1</p>

<p><a href=""https://i.stack.imgur.com/xdv6m.jpg"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/xdv6m.jpg"" alt=""enter image description here""></a></p>
","0","1173037","",""
"54405427","2362643","2019-01-28 15:39:26","0","25","<git><gitignore>","Untrack files on gitignore but still maintain file in origin","<p>I want to maintain some config files with default config in origin but continue modifying this files locally.</p>

<p>If I stop track this files, git removes this on origin too. The .git/info/exlude is not an option because this is only for one person locally and I need this for a team.</p>

<p>Any ideas what I can do? Thanks!</p>
","2","2362643","",""
"54418087","5024157","2019-01-29 09:45:33","0","97","<git><commit><gitignore>","How can I use .gitignore properly?","<p>This is how my .gitignore file looks like:</p>

<pre><code>/.env
/public/bundles/
/var/
/vendor/
/public/data/
/public/data/data.json
</code></pre>

<p>I added the <code>data.json</code> file later to the <code>.gitignore</code> file and now I have the problem that git does not accept the file as ignored. So whenever I make a change on the file, git is listing the file <code>public/data/data.json</code> in uncommited changes...</p>
","1","5024157","",""
"72298763","19150113","2022-05-19 04:45:45","0","496","<node.js><node-modules><gitignore>","why can't i hide the node_module file by .gitignore after applying node_modules/ or /node_modules on nodejs","<p>My .gitignore file is on as the same root as .git folder</p>
<p><a href=""https://i.stack.imgur.com/ilXLb.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/ilXLb.png"" alt=""here my project folder view"" /></a></p>
<p>i have also tried out different format like 'node_modules/' '/node_modules'
though it's hiding my .env file.
But gitignore still not hiding my node_modules folder</p>
<p><a href=""https://i.stack.imgur.com/picXn.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/picXn.png"" alt=""enter image description here"" /></a></p>
<p>I have also tried by uninstalling the node_modules &gt; updated the .gitignore file &gt; npm install. Still it doesn't work. What should i do now?</p>
","4","19150113","",""
"54430460","3120446","2019-01-29 22:16:25","2","100","<git><gitignore>",".gitignore -- track files AND specific subdirectories of directory","<p>Before this is marked as a duplicate out of hand, I've looked at a dozen Stack Overflow questions and none of them have worked for my case.</p>

<pre><code>root/
├── trackdir1/          # track directory and its subdirectories
├── trackdir2/          # track directory and its subdirectories
├── ignoreddir/         # ignore all other subdirectories of root
├── .../
└── *                   # keep all FILES within root
</code></pre>

<p>I have a directory (which is actually a couple directories in, but let's pretend it's <code>root</code>).  I want to track all files within <code>root</code> and some specific subdirectories of <code>root</code>, but to ignore all other subdirectories.</p>

<p>All of the Stack Overflow questions I've looked at did one or the other: included files but ignored subdirectories, or included specific subdirectories and ignored files.</p>

<p>Based on my understanding of .gitignore (which is clearly lacking), I need to make an exception for the files in <code>root</code>, exceptions for the specific subdirectories I want to track, and then exclude the files under all subdirectories within root.</p>

<pre><code>!/*
!/trackdir1/
!/trackdir1/**
!/trackdir2/
!/trackdir2/**
/*/**
</code></pre>

<p>However, this pattern still excludes <code>trackdir1</code> and <code>trackdir2</code>.  I've also tried things like <code>!/trackdir1</code> and <code>!/trackdir1/*</code>.</p>

<p>What am I doing wrong?</p>
","0","3120446","",""
"72308511","15872763","2022-05-19 17:05:18","0","87","<gitignore>",".gitignore file is not ignoring my node_modules folder","<p><em>In my gitignore file i have tried some many ways of ignoring the node_modules folder</em></p>
<p><strong>.gitignore - file</strong>
./node_modules
/node_modules
node_modules</p>
<p><strong>project structure</strong></p>
<ul>
<li>node_modules</li>
<li>public</li>
<li>src</li>
<li>.gitignore</li>
</ul>
","1","15872763","",""
"54467638","336920","2019-01-31 19:08:34","3","712","<git><gitignore>","How to ignore a file in the parent directory (and git root)?","<p>Given git root with:</p>

<pre><code>/Guardfile
/local (dir)
/.gitignore
</code></pre>

<p>And a <code>.gitignore</code> in local, how to ignore the <code>Guardfile</code> from the <code>.gitignore</code> within local?</p>

<p>Don't want to change the <code>.gitignore</code> at the root because that is checked into git.</p>

<p>I tried:</p>

<pre><code>../Guardfile
</code></pre>

<p>and</p>

<pre><code>/Guardfile
</code></pre>

<p>and</p>

<pre><code>./../Guarfile
</code></pre>

<p>git version 2.17.2</p>

<p>Use case (because someone will probably say ""Don't do that"".). It's pretty obvious but I don't want to change the project <code>.gitignore</code>. I keep all the files that don't belong in git in the local dir. But <code>Guardfile</code> needs to be in root dir.</p>
","0","336920","",""
"54529687","2201526","2019-02-05 07:41:02","2","192","<git><gitignore>","Do changes from git update-index propagate to other users?","<p>I'm working with one other programmer using Github on an IntelliJ IDEA project. I'm not very experienced with Git and he's not very experienced with programming so we need a simple solution.</p>

<p>This question is not about myself updating the index--it's about whether my partner needs to do something, and if he doesn't will he commit changed .idea files?</p>

<p>I accidentally didn't include the <code>.idea</code> directory in <code>.gitignore</code> when first creating the repository. I've added it now and committed the new <code>.gitignore</code>, and I know that I need to do something else--use <code>git update-index --skip-worktree</code> to stop tracking those files (see <a href=""https://stackoverflow.com/questions/14513854/gitignore-doesnt-stop-changes-being-tracked-in-files"">.gitignore doesn&#39;t stop changes being tracked in files</a>). My question is whether my partner will have to do something similar. I'm sure he will get the new <code>.gitignore</code> when he pulls this commit, but will he also have to run <code>git update-index --skip-worktree</code>?</p>
","2","2201526","",""
"73332982","1892584","2022-08-12 10:49:17","3","430","<bash><git><command-line-interface><gitignore>","CLI command to add files to gitignore","<p>I'm working in a highly nested project and want to add some files to gitignore from the shell, but it's a bit of a pain working relative paths.</p>
<p>I can do a one liner like this (wrapped for legibility):</p>
<pre><code>echo file |
xargs -n1 greadlink -f |
xargs realpath --relative-to=$(git rev-parse --show-toplevel) \
  &gt; $(git rev-parse --show-toplevel)/.gitignore
</code></pre>
<p>but if feels like there should be something a better like <code>git addtoignore file</code>. Is there a simple, reliable command I can use to add a file to the gitignore without dealing with relative path names.</p>
","5","1892584","0","0"
"73335820","9931606","2022-08-12 14:38:53","0","193","<node-modules><gitignore>","How to exclude a specific dependency in package json by gitignore","<p>I am got a problem with <code>node-sass</code> module when I am building the project using ReactJs. It could not build successfully in distinguished devices (such as window and mac M1). I can fixed the trouble on each device by upgrading or downgrading the version of <code>node-sass</code> to compatible with <code>node</code> versions.
I've just only think the way to solve it by excluding the modules when I push code to git on each device and by the way the project will be still updated with the remained modules in <code>package.json</code>.</p>
<p>I just want to ask how can I exclude just only one node-sass to the pushing and still keep the another packages? Please give me a reason if not. I just want to discuss about this problem. Otherwise, I will find the way to remove it from my project, later.</p>
<p>Thanks for your support.</p>
","0","9931606","",""
"73335015","7010082","2022-08-12 13:34:51","-3","40","<python><git><gitignore>","What is the purpose of saved* command in a .gitignore file?","<p>Following the <code>.gitignore</code> file in one of my research project built in python I have noticed the <code>saved*</code> command but I couldn't relate the purpose of it from that project directory.</p>
<p>Here're  the commands in the <code>.gitignore</code> file:</p>
<pre><code>*.pyc

.ipynb_checkpoints

saved*
</code></pre>
<p>Now, I could make out the first two commands but why is actually the <code>saved*</code> command used for in a certain .gitignore file?</p>
<p>Is it for blocking any newly created directories  and treating them as unversioned files in the project folder ??</p>
","2","7010082","",""
"56591590","11514103","2019-06-14 04:57:36","1","239","<git><gitignore>","How to exclude all subfolders with a specific name in .gitignore","<p>I have several subfolders in various parts of my project called ""autosave"" and I want .gitignore to ignore any subfolder called ""autosave"" regardless of where it is in the project, how would I do this?</p>

<p>I am kinda new with git but I did try */autosave/   but that doesn't appear to work. Also, some are capitalized and some aren't (Autosave and autosave).</p>
","1","11514103","0","0"
"56596271","8339668","2019-06-14 10:27:37","0","425","<eclipse><git><maven><jakarta-ee><gitignore>","What is target directory in maven-archetype-webapp in Eclipse and shall I add it to .gitignore?","<p>This is my sample Maven Dynamic Web Project in Eclipse (maven-archetype-webapp).</p>

<p>Which folders shall be excluded from git (that is added to .gitignore)?</p>

<p>I used to think that target folder in Maven means compiled .class files and is never needed to be committed/pushed - so I thought of adding entire <code>target/</code> to <em>.gitignore</em> - because I don't want maven-fetched jars in git repo. But the problem is that then it would ignore my index.jsp (and other jsp/html files to be added) and web.xml !!! </p>

<p>Besides target folder contains MyListener.java, not MyListener.class!</p>

<p>And target folder does not contain Student.java or Student.class (this class is used inside MyListener.java with Spring ClassPathXmlApplicationContext as <code>Student student = (Student) context.getBean(""student"");</code>)</p>

<p><a href=""https://i.stack.imgur.com/eTLt9.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/eTLt9.png"" alt=""enter image description here""></a>
<a href=""https://i.stack.imgur.com/2q5CH.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/2q5CH.png"" alt=""enter image description here""></a></p>

<p>P.S. The contents of <code>Deployed Resources</code> folder is this:
<a href=""https://i.stack.imgur.com/eonxq.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/eonxq.png"" alt=""enter image description here""></a></p>

<p><a href=""https://maven.apache.org/guides/introduction/introduction-to-the-standard-directory-layout.html"" rel=""nofollow noreferrer"">Maven docs</a>:</p>

<blockquote>
  <p>There are just two subdirectories of this structure: src and target. </p>
  
  <p>The <strong>target directory is used to house all output of the build.</strong></p>
</blockquote>

<p>P.S. <strong>I added target to .gitignore and the project was safely cloned and built on another machine! So - solved!</strong></p>
","0","8339668","",""
"73357767","17311077","2022-08-15 07:01:34","-2","282","<javascript><git><visual-studio-code><gitignore>","How to add specific files in gitignore?","<p>I have added some files in the same directory of .gitignore. When I push the changes to BitBucket, the files added in .gitignore, also uploaded.
How to ignore babel.config.json and package.lock.json. Refer the screenshot.</p>
<p><a href=""https://i.stack.imgur.com/c1GRP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/c1GRP.png"" alt=""enter image description here"" /></a></p>
","1","17311077","",""
"73359406","12508182","2022-08-15 09:56:29","0","37","<git><gitignore>","whenever I check the git status under untracked files I am getting this ./ nothing else I want this to be ignored by the git","<pre><code>git status
On branch master

No commits yet

Untracked files:
  (use &quot;git add &lt;file&gt;...&quot; to include in what will be committed)
    ./

nothing added to commit but untracked files present (use &quot;git add&quot; to track)
</code></pre>
<p>Thanks in advance.</p>
","3","12508182","",""
"56608346","5824959","2019-06-15 07:31:46","4","1428","<git><github><heroku><gitignore>","Separate gitignore files for Heroku and GitHub?","<p>I have one file that is necessary for my heroku app but that I do not want in my GitHub repository. </p>

<p>Is there any way to have a <code>.gitignore</code> that is only used when pushing to GitHub?</p>

<p>Additionally, is there any other way that I can avoid pushing that one file to GitHub?</p>
","0","5824959","0","0"
"56614146","1053930","2019-06-15 21:01:44","2","118","<git><gitignore><git-status><git-untracked>",".gitignore and untracked files are shown in git status","<p>I am getting wierd scenario on Centos 7.5.1804 with git 1.8.3.1.
I have <code>.gitignore</code> as</p>

<pre><code>*.pyc
</code></pre>

<p>but <code>git status</code> showing following </p>

<pre><code>$ git status
# On branch master
# Untracked files:
#   (use ""git add &lt;file&gt;..."" to include in what will be committed)
#
#   a.pyc
#   b.pyc
#   c.pyc
#   d.pyc
</code></pre>

<p>Also, those files have never been committed. So <strong>git status</strong> should not have shown those files. What could cause this to happen? </p>
","5","1053930","0","0"
"73408010","7102346","2022-08-18 18:41:55","0","319","<git><cmake><gitignore>","What are the reasons to not ignore the build folder in git when building with CMake?","<p>My personal experience is that the <code>build</code> folder should be ignored in git by default. I've come across <a href=""https://stackoverflow.com/q/44794644/7102346"">situations</a> where one would want to add the <code>build</code> folder to git (and perhaps an additional README.txt in it) to let users know where to build the project. However, that is deviating from the general premise that anything automatically generated should never be part of a repository.</p>
<p>So why am I asking, then? Well, the GitHub's own <a href=""https://github.com/github/gitignore"" rel=""nofollow noreferrer"">gitignore repository</a> did not include the <code>build/</code> line in any one of the <code>.gitignore</code> files I combined together, not even in the <a href=""https://github.com/github/gitignore/blob/main/CMake.gitignore"" rel=""nofollow noreferrer""><code>CMake.gitignore</code></a> itself. That to me is a reason to doubt my own judgement.</p>
<p>Should <code>build/</code> be part of the CMake gitignore? Is it not there because of the assumption that users are always doing true out-of-source builds? To my experience, that is very false. In fact, I haven't seen a single guide recommend a true out-of-source build once. Not even the Microsoft's own VS Code <a href=""https://marketplace.visualstudio.com/items?itemName=ms-vscode.cmake-tools"" rel=""nofollow noreferrer"">CMake Tools</a> extension does true out-of-source builds.</p>
<p>I assume it's safe to add <code>build/</code> to my root <code>.gitignore</code> file. But what are the reasons to not do it?</p>
","7","7102346","0","0"
"56675952","11554408","2019-06-19 21:16:12","2","206","<git><github><branch><gitignore>","How to move .gitignore file from one branch to another from commandline","<p>I have created and pasted a .gitignore file to my master branch, and I want to move it to the hometask_1 branch with the windows 10 command line.</p>

<p>I have used the commands below:</p>

<pre><code>git checkout master
git checkout hometask_1 -- .gitignore
</code></pre>

<p>After the above commands I am getting the following error:</p>

<p><code>error: pathspec '.gitignore' did not match any file(s) known to git</code></p>
","0","11554408","",""
"55427677","7559329","2019-03-30 02:43:36","2","762","<android><github><gitignore>","How add Manifest.xml on gitignore to not push","<p>I'm creating a project with react-native and have the folder android,
inside there's file android/app/src/main/AndroidManifest.xml where I have my google api key and I don't want to push this file just once, when I import to project, then I add this path on .gitignore but it doesn't ignore.</p>

<p>how should I put the path on the file gitignore to not push this file ?</p>
","0","7559329","",""
"55470789","514150","2019-04-02 09:02:02","1","2901","<git><gitignore>","Git ignoring the .gitignore file and saying the .DS_Store file is modified","<p>I don't want my MacBook's .DS_Store-files to be committed to my Git repository.</p>

<p>Unfortunately my .gitignore and even .gitignore_global seem to be ignored completely.</p>

<p>Any ideas what could be the reason?</p>

<pre><code> ujjain:~/Dropbox/workspace| (HEAD) [+1] | feature/Jenkinsfile [+1]
$ cat .gitignore
...

# Mac OS Test
.DS_Store
 ujjain:~/Dropbox/workspace| (HEAD) [+1] | feature/Jenkinsfile [+1]
$ git status
On branch feature/Jenkinsfile
Your branch is up to date with 'origin/feature/Jenkinsfile'.

Changes not staged for commit:
  (use ""git add &lt;file&gt;..."" to update what will be committed)
  (use ""git checkout -- &lt;file&gt;..."" to discard changes in working directory)

  modified:   .DS_Store

no changes added to commit (use ""git add"" and/or ""git commit -a"")
</code></pre>
","4","514150","0","0"
"72574747","18834054","2022-06-10 13:03:45","0","558","<visual-studio-code><node-modules><gitignore>","gitignore file problem : Not able to ignore node_modules","<p>I have one <strong>.gitignore</strong> file for my mern app.</p>
<p>I want to ignore all <code>node_modules</code> ( in client-side and server) but I am only able to ignore client's node_modules. It also not ignore <code>.env</code> file. What could be the reason? Can anyone answer me?</p>
<p><a href=""https://i.stack.imgur.com/y6rrt.png"" rel=""nofollow noreferrer"">enter image description here</a></p>
","0","18834054","",""
"55503022","6424511","2019-04-03 19:35:53","0","930","<git><gitignore>","gitignore doesn't ignore untracked file","<p>Need to setup gitignore for upcoming project, current testing however shows it doesn't actually ignore the untracked file.</p>

<p>eBGTest being my git repo, the file I'm trying to ignore is eBGTest/test</p>

<p>eBGTest/.gitignore</p>

<pre><code>/test/
.test
test
test
test
test
/test
./test
eBGTest/test
test.test

</code></pre>

<p>Edit (git status output):
Untracked files:
  (use ""git add ..."" to include in what will be committed)</p>

<pre><code>    .gitignore
    test
</code></pre>

<p>no changes added to commit (use ""git add"" and/or ""git commit -a"")</p>

<p>It's not being tracked by git as you can see above</p>
","13","6424511","",""
"55512443","1728830","2019-04-04 09:29:53","1","1464","<typescript><npm><gitignore>","Include .gitignored files compiled from typescript in `npm install -g`","<p>I'd like to ignore the JavaScript files compiled from TypeScript in my git repo. (That greatly simplifies merging, rebasing, partial commits etc.)  The relevant parts of my setup look like this:</p>

<p><strong>tsconfig.json</strong></p>

<pre><code>{
    ""compilerOptions"": {
      ""outDir"": ""./dist""
    }
}
</code></pre>

<p><strong>.gitignore</strong></p>

<pre><code>dist
</code></pre>

<p>When installing globally like this:</p>

<pre><code>rm -rf dist
node_modules/.bin/tsc
sudo npm install -g
</code></pre>

<p>the gitignored <code>dist</code> folder is not installed. Is there any proper solution to this? The following ones aren't really satisfactory:</p>

<ul>
<li>Comment/uncomment <code>dist</code> in <code>.gitignore</code> before and after <code>sudo npm install -g</code></li>
<li>Cope with parallelly managing ts and js files</li>
</ul>
","3","1728830","",""
"55514758","8381155","2019-04-04 11:24:13","4","1832","<maven><gitignore><maven-jar-plugin>","maven-jar-plugin does not include .gitignore file","<p>I try to package an application into a jar file with maven. Somehow all files except <code>.gitignore</code> files are added to the jar.</p>

<p>Why is this file skipped and how can I disable this?</p>

<p>Even if I try to include it like below the include is ignored and the jar file remains empty.</p>

<pre><code>&lt;plugin&gt;
  &lt;groupId&gt;org.apache.maven.plugins&lt;/groupId&gt;
  &lt;artifactId&gt;maven-jar-plugin&lt;/artifactId&gt;
  &lt;configuration&gt;
    &lt;includes&gt;
      &lt;include&gt;**/.gitignore&lt;/include&gt;
    &lt;/includes&gt;
  &lt;/configuration&gt;
&lt;/plugin&gt;
</code></pre>

<ul>
<li>maven-jar-plugin version: 3.1.0</li>
<li>maven version: 3.5.2</li>
</ul>
","10","8381155","",""
"55515901","3284713","2019-04-04 12:21:25","0","21","<git><jupyter-notebook><gitignore>",".gitignore jupyter checkpoint files/folder","<p>I have a shared git folder with part of the project developed on jupyter notebooks.</p>

<p>I <strong>do not</strong> want jupyter autosaved files (checkpoints) to be pushed/pulled with the rest of the project.</p>

<p>In the main project folder (where the <code>.gitignore</code> file is) I have the following folder created by Jupyter: <code>.ipynb_checkpoints</code>. Inside that folder there are a bunch of checkpoint files all of the form: <code>somename-checkpoint.ipynb</code>.</p>

<p>I tried to add the following to my <code>.gitignore</code> but none of these works.</p>

<pre><code>/.ipynb_checkpoints
/*ipynb_checkpoints
*-checkpoint.ipynb
</code></pre>

<p>None of these worked and the files are still read and pulled/pushed.</p>
","4","3284713","",""
"55542981","8433017","2019-04-05 20:33:54","1","34","<git><github><repository><gitignore>","Git - File is on github but also on .gitignore - What happens on git pull?","<p>What happens if you have a file on remote, that is locally on .gitignore, when you do a pull? Will you overwrite the content of the local file?</p>
","1","8433017","",""
"72589265","17945716","2022-06-12 03:15:34","2","918","<gitignore>","A comprehensive git ignore file","<p>Over the years, I have worked in developing programs in C# and Unity and Python and Django and applications for HoloLens and Oculus with IDEs like Visual Studio and Visual Studio Code and also web dev in Angular and TypeScript and JavaScript.</p>
<p>I have gathered everything that I believe should be ignored for any project that involves development in these languages and frameworks, but all in one git ignore without causing issues for each other.</p>
<p>So far, I have the following. I do wonder though if someone might spot something that should not be in here or perhaps redundant:</p>
<pre><code>[Dd]ebug/
[Dd]ebugPublic/
[Bb]uild/
[Bb]uilds/
[Pp]ackage/
[Pp]ackages/
[Rr]elease/
[Rr]eleases/
[Ll]ogs/
[Ll]og/
[Uu]wp/
[Aa]pp/
[Ll]ibrary/
[Tt]emp/
[Oo]bj/
[Bb]in/
[Bb]ackup*/
[Ee]xported[Oo]bj/
3rdParty/
[Tt]hirdParty/
[Aa]ssets/3rdParty/
[Aa]ssets/[Tt]hirdParty/
[Aa]ssets/[Tt]hirdParty.meta
[Aa]ssets/[Pp]lugins*
[Aa]ssets/[Aa]sset[Ss]tore[Tt]ools*
/.vs/
.vscode/
*.bak
._*
~$*
*~
obj/
x64/
x86/
Installer/
App/[pP]layers/
WindowsStoreApp/
HoloSymMDL2*
Assembly-CSharp.csproj
WSATestCertificate.pfx
WSATestCertificate.pfx.meta
UnityVS*
UnityGenerated/
UnityPackageManager/
project.json
project.lock.json
project.fragment.lock.json
/*.csproj
*.csproj
*.booproj
*.unityproj
*.unitypackage
*.log
*.user
*.userprefs
*.userosscache
*.sln.docstates
*.sln
/*.sln
*.suo
*.svd
*.swp
*.tmp
*.tmp_proj
*.opendb
*.pdb
*.pidb
*.pdb.meta
*.pidb.meta
*.apk
*.blend[1-9]
StyleCop*
*.stackdump
sysinfo.txt
.Trash
.Trashes
.DS_Store
.DS_Store?
.Spotlight-V100
$RECYCLE.BIN/
.consulo/
*.coverage
*.coveragexml
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user
.JustCode
_TeamCity*
*.dotCover
_NCrunch_*
.*crunch*.local.xml
*.mm.*
AutoTest.Net/
.sass-cache/
[Ee]xpress/
ipch/
*.aps
*.ncb
*.opensdf
*.sdf
*.cachefile
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*
*.VisualState.xml
TestResult.xml
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c
_Chutzpah*
*.ide/
*.psess
*.vsp
*.vspx
$tf/
*.gpState
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html
publish/
*.[Pp]ublish.xml
*.azurePubxml
*.pubxml
*.publishproj
*.nupkg
**/packages/*
!**/packages/build/
csx/
*.build.csdef
AppPackages/
*.cert
*.privkey
*.pfx
*.pfx.meta
sql/
*.Cache
ClientBin/
[Ss]tyle[Cc]op.*
*.dbmdl
*.dbproj.schemaview
*.publishsettings
node_modules/
Generated_Code/
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
*.mdf
*.ldf
*.rdl.data
*.bim.layout
*.bim_*.settings
FakesAssemblies/
[Ee]hthumbs.db
[Ee]hthumbs.db.meta
[Tt]humbs.db
[Tt]humbs.db.meta
Desktop.ini
*.cab
*.msi
*.msm
*.msp
/node_modules
/.pnp
.pnp.js
/coverage
/build
.env.local
.env.development.local
.env.test.local
.env.production.local
npm-debug.log*
yarn-debug.log*
yarn-error.log*
/[Ll]ibrary/
/[Tt]emp/
/[Oo]bj/
/[Bb]uild/
/[Bb]uilds/
/Assets/AssetStoreTools*
Bin/
Assets/AssetStoreTools*
App/
UWP/
.vs/
ExportedObj/
*.lnk
*.ipch
*.obj
*.tlog
*.idb
Thumbs.db
ehthumbs.db
</code></pre>
","2","17945716","",""
"55559183","8887398","2019-04-07 12:49:15","0","46","<gitignore>","How to use gitignore with asterisks?","<p>I have a directory for IntelliJ I would like to leave out of my repo (the 'out' folder). </p>

<p>I tried to add this to my git ignore file:</p>

<pre><code>*/out/*
</code></pre>

<p>I tried all sorts of variants of this. None of them work without filling out the entire exact path to the directory. So this is working:</p>

<pre><code>someDir/AnotherDir/AnotherAnotherDir/out/
</code></pre>

<p>How do I use gitignore with asterisks?</p>
","2","8887398","",""
"55576958","4684797","2019-04-08 15:32:48","1","1305","<git><gitignore>",".gitignore does not ignore files with certain extensions","<p>I added this to my .gitignore file:</p>

<pre><code># JPEG
*.jpg
*.jpeg
*.jpe
*.jif
*.jfif
*.jfi

# JPEG 2000
*.jp2
*.j2k
*.jpf
*.jpx
*.jpm
*.mj2

# JPEG XR
*.jxr
*.hdp
*.wdp

# Graphics Interchange Format
*.gif

# RAW
*.raw

# Web P
*.webp

# Portable Network Graphics
*.png

# Animated Portable Network Graphics
*.apng

# Multiple-image Network Graphics
*.mng

# Tagged Image File Format
*.tiff
*.tif

# Scalable Vector Graphics
*.svg
*.svgz

# Portable Document Format
*.pdf

# X BitMap
*.xbm

# BMP
*.bmp
*.dib

# ICO
*.ico

# 3D Images
*.3dm
*.max
</code></pre>

<p>Found <a href=""https://github.com/github/gitignore/blob/master/Global/Images.gitignore"" rel=""nofollow noreferrer"">here</a>.</p>

<p>Then I added some <code>.png</code> files and commited this change and pushed it, but the files are showing up if I execute <code>git status</code>.</p>

<pre><code>    geändert:       skin/frontend/venedor/custom/images/kreis_rot_weiss.png
    geändert:       skin/frontend/venedor/custom/images/kreis_weiss.png
</code></pre>

<p>What am I doing wrong?</p>
","0","4684797","",""
"55663325","6521116","2019-04-13 08:02:28","3","2583","<git><caching><gitignore><git-rm>","Why git rm --cached not remove local ever tracked file but others","<p>When untrack a file in the git repository, use <code>git rm -r --cached .</code>. This will not remove the ever tracked file in local storage, but when other developers fetch this commit with <code>git pull</code>, the ever tracked file will been removed on their machine storage.</p>

<p>You can reproduce it with:</p>

<ol>
<li>save current work. (<strong>Machine A</strong>)</li>
</ol>

<pre><code>git add .
git stash save ""work position""
</code></pre>

<ol start=""2"">
<li>create a new file and commit it.(<strong>Machine A</strong>)</li>
</ol>

<pre><code>echo hello&gt;&gt;file_not_to_track
git add .
git commit -m ""add file file_not_to_track""
</code></pre>

<ol start=""3"">
<li>pull from another machine(or another directory)(<strong>Machine B</strong>)</li>
</ol>

<pre><code>git pull
</code></pre>

<p>show files now</p>

<pre><code>ls
file_not_to_track  README.md
</code></pre>

<ol start=""4"">
<li>untrack the file.(<strong>Machine A</strong>)</li>
</ol>

<pre><code>echo file_not_to_track &gt;&gt; .gitignore
git rm -r --cached .
git add .
git commit -m ""untrack file_not_to_track""
git push
</code></pre>

<p>show files now</p>

<pre><code>ls
file_not_to_track  README.md
</code></pre>

<ol start=""5"">
<li>fetch code(<strong>Machine B</strong>)</li>
</ol>

<pre><code>git pull
remote: Counting objects: 3, done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 0 (delta 0)
Unpacking objects: 100% (3/3), done.
From example.com:my/example_project
   6525df1..f413f8b  master     -&gt; origin/master
Updating 6525df1..f413f8b
Fast-forward
 .gitignore        | 1 +
 file_not_to_track | 1 -
 2 files changed, 1 insertion(+), 1 deletion(-)
 create mode 100644 .gitignore
 delete mode 100644 file_not_to_track
</code></pre>

<p>show files now</p>

<pre><code>ls
README.md
</code></pre>

<p>As it shows <code>git rm -r --cached .</code> remove ever tracked file on others repo but not in current repo.</p>
","0","6521116","0","0"
"55697947","8588359","2019-04-15 22:17:28","1","4926","<xml><intellij-idea><kotlin><gitignore>",".idea/compiler.xml in .gitignore?","<p>Whenever I <code>gradle build</code> my Spring app in IntelliJ, <code>compiler.xml</code> gets modified and shows up in my <code>git status</code>.</p>

<p>Is it safe to put compiler.xml file in .gitignore with the other <code>.idea/</code> files?</p>
","1","8588359","",""
"72645665","11725056","2022-06-16 12:13:05","1","98","<git><gitignore><dvc>","How to track a folder again when used ""git rm -rf --cached folder_name"" : Error: The following paths are ignored by one of your .gitignore files","<p>I wanted to un-track my git files so I put <code>.dvc</code> inside my <code>.gitignore</code> file, and run</p>
<pre><code>git rm -rf --cached .dvc
</code></pre>
<p>and then committed.</p>
<p>I realised my mistake soon and then wanted to add the files again . I tried deleting the <code>gitignore</code> file, commit, make a new <code>.gitignore</code> and then try adding but all is futile. <code>git add .dvc</code> does not track my files and using <code>git add .dvc/*</code> gives me error:</p>
<pre><code>The following paths are ignored by one of your .gitignore files:
.dvc/cache
.dvc/tmp
Use -f if you really want to add them.
</code></pre>
<p>Running the command <code>git check-ignore -v .dvc/*</code> gives me:</p>
<pre><code>.dvc/.gitignore:3:/cache    .dvc/cache
.dvc/.gitignore:2:/tmp  .dvc/tmp

</code></pre>
<p>What can be done now?</p>
","7","11725056","",""
"72671100","17421412","2022-06-18 16:54:25","0","111","<git><gitignore>","Asterisk or venv/* in .gitignore","<p>What should I leave in .gitignore inside of venv file in order to not keep track when using <code>git add *</code>.</p>
<p>I am a bit confused because just asterisk is used inside of original .gitignore, but I saw suggestions like adding venv/* or even venv/</p>
","0","17421412","0","0"
"55776767","11388908","2019-04-20 19:00:49","2","2280","<python-3.x><github><gitignore><telegram-bot>","How to hide bot Telegram token with gitignore?","<p>On GitHub in the public domain is the code of my telegram bot, where is my token. I want to hide it, what should I do? I know that this should be done with gitignore</p>

<pre><code>import telebot
import time
TOKEN = ""872521057:AAF2Kx4Y3WC-cs................""
bot = telebot.TeleBot(TOKEN)
@bot.message_handler(commands=['start', 'help'])
def send_welcome(message):
    bot.reply_to(message, ""Hello"")
@bot.message_handler(func=lambda m: True)
def echo_all(message):
    bot.reply_to(message, message.text)
bot.polling(none_stop=True)
</code></pre>
","0","11388908","0","0"
"72678021","11251219","2022-06-19 15:11:23","0","94","<git><gitignore>","Advanced gitignore","<p>I know you can use a pattern like <code>*test*</code> to ignore any directory or file containing word <code>test</code>.</p>
<p>But now I'm looking for something more advanced.</p>
<pre><code>|- Folder A
|  |- File A
|  |- File B
|- Folder B
|  |- File C
|  |- File D
|  |- Pro.txt
|- Folder C
|  |- Pro.txt
|- Folder D
   |- File E
   |- File F
</code></pre>
<p>I want to ignore all folders that directly contain the <code>Pro.txt</code> file like <code>Folder B</code> &amp; <code>Folder C</code>.<br />
I do not want to ignore just the file, I want to ignore the whole folder (with subfolders and files)</p>
<p>The file <code>Pro.txt</code> is empty and just an indicator that which folders I do not wish to be uploaded on git and is not required to exist.</p>
<p>And before you say it, I can not change the folder name to contain a specific word.</p>
","2","11251219","",""
"55805063","4997818","2019-04-23 05:50:32","0","43","<eclipse><git><gitignore>","gitignore unable to ignore files under certain directories","<p>How do I ignore all folders/files under audit directory?</p>

<p>I tried adding <code>**/audit</code> to .gitignore which is present in the root of my project. where .git is present but the file is still getting displayed in unstaged changes in eclipse. Is it because of the <code>-</code> in file name?</p>

<pre><code>data/test/audit/portfolio-tnc/TEST-2019-04-22T03-20-31.json
</code></pre>
","1","4997818","",""
"55835586","4729407","2019-04-24 17:29:52","0","29","<git><version-control><gitignore>","git: track a folder but ignore a folder within it","<p>I'm trying everything but without success. I have a folder A, with folder B,C and D within it. I want to track B and C and ignore D.
I tried:</p>

<pre><code>.gitignore file:

A/D
</code></pre>

<p>it doesn't work. Git keeps ignoring the whole A folder.
How can I do it?</p>
","1","4729407","",""
"55836619","9127397","2019-04-24 18:41:43","0","356","<angular><spring-boot><gitignore>","nested modules in .gitignore","<p>I have a simple spring boot &amp; angular app. I want to push it all to one repository but I have no idea how to ignore node_modules or how to use these two ,gitignore files on one push? Here is my project structure:</p>

<p><a href=""https://i.stack.imgur.com/QPU91.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/QPU91.png"" alt=""enter image description here""></a></p>
","1","9127397","",""
"55842678","11408776","2019-04-25 05:58:19","0","812","<android><git><android-studio><github><gitignore>","How to make sure .gitignore works for multiple Android projects in the same repository","<p>My problem is similar to the one outlined in <a href=""https://stackoverflow.com/questions/28923160/gitignore-file-for-multiple-android-projects-under-a-master-folder/"">this post</a>, but the solution did not help. I essentially have one Github repository with a whole bunch of different folders/directories that each contain a separate Android project.</p>

<p>The structure of one such project looks like  MyTeamRepo -> MyAndroidProject -> app</p>

<p>Normally if it was just a single Android project, throwing the .gitignore in the /gradle directory would work, but it's not working out in my case.</p>

<p>Here's what's currently in my .gitignore: </p>

<pre><code># Built application files
*.apk
*.ap_
*.aab

# Files for the ART/Dalvik VM
*.dex

# Java class files
*.class

# Generated files
bin/
gen/
out/

# Gradle files
.gradle/
build/

# Local configuration file (sdk path, etc)
local.properties

# Proguard folder generated by Eclipse
proguard/

# Log Files
*.log

# Android Studio Navigation editor temp files
.navigation/

# Android Studio captures folder
captures/

# IntelliJ
*.iml
.idea/workspace.xml
.idea/misc.xml
.idea/tasks.xml
.idea/gradle.xml
.idea/assetWizardSettings.xml
.idea/dictionaries
.idea/libraries
.idea/caches


# Android Studio 3 in .gitignore file.
.idea/caches/build_file_checksums.ser
.idea/modules.xml

# Keystore files
# Uncomment the following lines if you do not want to check your keystore files in.
#*.jks
#*.keystore

# External native build folder generated in Android Studio 2.2 and later
.externalNativeBuild
# Google Services (e.g. APIs or Firebase)
google-services.json

# Freeline
freeline.py
freeline/
freeline_project_description.json
# fastlane
fastlane/report.xml
fastlane/Preview.html
fastlane/screenshots
fastlane/test_output
fastlane/readme.md

# Version control
vcs.xml

# lint
lint/intermediates/
lint/generated/
lint/outputs/
lint/tmp/
lint/reports/
</code></pre>

<p>My problem is I still keep having these .idea and .gradle files popping up everywhere within the subfolders every time I make any changes to the Android project, causing all sorts of merge conflicts when I try to pull changes from Github.</p>

<p>I also think part of the problem is that the .idea had previously been committed to Github and now I am always tracking it.</p>

<p>What steps do I need to take to completely clean my repository and to make sure the .gitignore is doing its job?</p>
","4","11408776","",""
"72722737","18695943","2022-06-22 22:42:42","1","165","<visual-studio-code><gitignore>","Hiding the .gitignore using VSCode's Files:Exclude","<p>I am trying to hide my .gitignore file in the VSCode project file explorer.</p>
<p>If I use this expression:</p>
<pre><code>**/.*
</code></pre>
<p>Then .git, among a few others, will become hidden.</p>
<p>But when I try this:</p>
<pre><code>**/.gitignore
</code></pre>
<p>I am still unable to hide it. I also tried a few other things, like these:</p>
<pre><code>**/.git*
**/*.git*
**/*.gitignore
</code></pre>
<p>I feel a little silly, sorry! Thanks for your time, I sincerely appreciate it. It seems like a little silly thing, but I want to know!</p>
","1","18695943","",""
"55858950","4930178","2019-04-25 23:36:28","4","204","<gitignore>","Ignore gitignore rules","<p>Is there any way to ignore gitignore rules but still check in the .gitignore file? Or maybe we should use a different implementation?</p>

<p>This is not a question about how to apply gitignore rules or ""why my rule doesn't work correctly"".</p>

<p>We are trying to create templates for our users, which will include 1) a folder that initially exists but will be automatically updated 2) a .gitignore file that has some rules. There is also some logic that copies the whole template folder to the users machine, including both the files mentioned above.</p>

<p>We want to check in the .gitignore file, but we don't want the rules to be applied to our own repo.</p>

<p>The template folder would look like this:</p>

<p>-template
    -generated
        -a.file
-.gitignore</p>

<p>The .gitignore looks something like:</p>

<pre><code>...

**/generated
...
</code></pre>

<p>We want the user to ignore their changes to 'a.file' but we don't want to ignore it for ourselves.</p>

<p>Is there a good way to just ignore the rules, or the better practice is to use a different implementation?</p>

<p>(Apologize if the description is terriblly hard to understand.)</p>
","0","4930178","0","0"
"72732628","15489490","2022-06-23 15:18:07","0","383","<git><github><gitignore>","Should I .gitignore before git commit or commit files before .gitignore?","<p>I want to know if I should create the <strong>.gitignore</strong> file and add the files I do not want to be committed or if I should <strong>commit</strong> all files before creating my .gitignore file?</p>
","4","15489490","",""
"72744916","19400965","2022-06-24 13:37:15","1","47","<git><gitignore>","Git add new file listed in .gitignore","<p>I created my <code>.gitignore</code> and listed the new files I created, but git still add them when I run my <code>git add .</code></p>
<p>While searching for a solution, I saw a lot of similar question of mine, but for each question people created the <code>.gitignore</code> after running the <code>git add .</code> command, and the problem was solved with the removing cached files method (<code>git rm --cached .</code>), but that didn't work for me since those files were never added before the creation of the <code>.gitignore</code> files.</p>
<p>The .gitignore is at the root of my working directory, and looks like that :</p>
<pre><code>db.sqlite3
.idea/
venv/
media/
</code></pre>
<p>And this is what I get when i run <code>git add .</code> and <code>git status</code>:</p>
<pre><code>On branch main
new file:   .idea/vcs.xml
new file:   .idea/workspace.xml
new file:   db.sqlite3
new file:   media/Test.jpg
new file:   media/TestProfilePict.jpg
</code></pre>
<p>Any idea why it's not working?</p>
","3","19400965","",""
"55876899","4658491","2019-04-27 03:04:21","2","1882","<unity-game-engine><gitignore>","How to fix .gitignore such that it can allow *.meta files to be uploaded","<p>I'm using gitignore.io to generate a .gitignore file, using unity and visual studio as search terms. However, after uploading it to my repo, i realized that the *.meta files are not uploaded. It seems to be ignored, which shouldn't be the case as <code>![Aa]ssets/**/*.meta</code> should never ignore any <code>.meta</code> files in any folder under the Assets folder.</p>

<p>Edit: this .gitignore is placed in the root of my repo.</p>

<p>Below is the generated file.</p>

<pre><code># Created by https://www.gitignore.io/api/unity,visualstudio
# Edit at https://www.gitignore.io/?templates=unity,visualstudio

### Unity ###
[Ll]ibrary/
[Tt]emp/
[Oo]bj/
[Bb]uild/
[Bb]uilds/
[Ll]ogs/

# Never ignore Asset meta data
![Aa]ssets/**/*.meta

# Uncomment this line if you wish to ignore the asset store tools plugin
# [Aa]ssets/AssetStoreTools*

# TextMesh Pro files
[Aa]ssets/TextMesh*Pro/

# Visual Studio cache directory
.vs/

# Gradle cache directory
.gradle/

# Autogenerated VS/MD/Consulo solution and project files
ExportedObj/
.consulo/
*.csproj
*.unityproj
*.sln
*.suo
*.tmp
*.user
*.userprefs
*.pidb
*.booproj
*.svd
*.pdb
*.mdb
*.opendb
*.VC.db

# Unity3D generated meta files
*.pidb.meta
*.pdb.meta
*.mdb.meta

# Unity3D generated file on crash reports
sysinfo.txt

# Builds
*.apk
*.unitypackage

# Crashlytics generated file
crashlytics-build.properties


### VisualStudio ###
## Ignore Visual Studio temporary files, build results, and
## files generated by popular Visual Studio add-ons.
##
## Get latest from https://github.com/github/gitignore/blob/master/VisualStudio.gitignore

# User-specific files
*.rsuser
*.userosscache
*.sln.docstates

# User-specific files (MonoDevelop/Xamarin Studio)

# Mono auto generated files
mono_crash.*

# Build results
[Dd]ebug/
[Dd]ebugPublic/
[Rr]elease/
[Rr]eleases/
x64/
x86/
[Aa][Rr][Mm]/
[Aa][Rr][Mm]64/
bld/
[Bb]in/
[Ll]og/

# Visual Studio 2015/2017 cache/options directory
# Uncomment if you have tasks that create the project's static files in wwwroot
#wwwroot/

# Visual Studio 2017 auto generated files
Generated\ Files/

# MSTest test Results
[Tt]est[Rr]esult*/
[Bb]uild[Ll]og.*

# NUNIT
*.VisualState.xml
TestResult.xml

# Build Results of an ATL Project
[Dd]ebugPS/
[Rr]eleasePS/
dlldata.c

# Benchmark Results
BenchmarkDotNet.Artifacts/

# .NET Core
project.lock.json
project.fragment.lock.json
artifacts/

# StyleCop
StyleCopReport.xml

# Files built by Visual Studio
*_i.c
*_p.c
*_h.h
*.ilk
*.meta
*.obj
*.iobj
*.pch
*.ipdb
*.pgc
*.pgd
*.rsp
*.sbr
*.tlb
*.tli
*.tlh
*.tmp_proj
*_wpftmp.csproj
*.log
*.vspscc
*.vssscc
.builds
*.svclog
*.scc

# Chutzpah Test files
_Chutzpah*

# Visual C++ cache files
ipch/
*.aps
*.ncb
*.opensdf
*.sdf
*.cachefile
*.VC.VC.opendb

# Visual Studio profiler
*.psess
*.vsp
*.vspx
*.sap

# Visual Studio Trace Files
*.e2e

# TFS 2012 Local Workspace
$tf/

# Guidance Automation Toolkit
*.gpState

# ReSharper is a .NET coding add-in
_ReSharper*/
*.[Rr]e[Ss]harper
*.DotSettings.user

# JustCode is a .NET coding add-in
.JustCode

# TeamCity is a build add-in
_TeamCity*

# DotCover is a Code Coverage Tool
*.dotCover

# AxoCover is a Code Coverage Tool
.axoCover/*
!.axoCover/settings.json

# Visual Studio code coverage results
*.coverage
*.coveragexml

# NCrunch
_NCrunch_*
.*crunch*.local.xml
nCrunchTemp_*

# MightyMoose
*.mm.*
AutoTest.Net/

# Web workbench (sass)
.sass-cache/

# Installshield output folder
[Ee]xpress/

# DocProject is a documentation generator add-in
DocProject/buildhelp/
DocProject/Help/*.HxT
DocProject/Help/*.HxC
DocProject/Help/*.hhc
DocProject/Help/*.hhk
DocProject/Help/*.hhp
DocProject/Help/Html2
DocProject/Help/html

# Click-Once directory
publish/

# Publish Web Output
*.[Pp]ublish.xml
*.azurePubxml
# Note: Comment the next line if you want to checkin your web deploy settings,
# but database connection strings (with potential passwords) will be unencrypted
*.pubxml
*.publishproj

# Microsoft Azure Web App publish settings. Comment the next line if you want to
# checkin your Azure Web App publish settings, but sensitive information contained
# in these scripts will be unencrypted
PublishScripts/

# NuGet Packages
*.nupkg
# The packages folder can be ignored because of Package Restore
**/[Pp]ackages/*
# except build/, which is used as an MSBuild target.
!**/[Pp]ackages/build/
# Uncomment if necessary however generally it will be regenerated when needed
#!**/[Pp]ackages/repositories.config
# NuGet v3's project.json files produces more ignorable files
*.nuget.props
*.nuget.targets

# Microsoft Azure Build Output
csx/
*.build.csdef

# Microsoft Azure Emulator
ecf/
rcf/

# Windows Store app package directories and files
AppPackages/
BundleArtifacts/
Package.StoreAssociation.xml
_pkginfo.txt
*.appx
*.appxbundle
*.appxupload

# Visual Studio cache files
# files ending in .cache can be ignored
*.[Cc]ache
# but keep track of directories ending in .cache
!?*.[Cc]ache/

# Others
ClientBin/
~$*
*~
*.dbmdl
*.dbproj.schemaview
*.jfm
*.pfx
*.publishsettings
orleans.codegen.cs

# Including strong name files can present a security risk
# (https://github.com/github/gitignore/pull/2483#issue-259490424)
#*.snk

# Since there are multiple workflows, uncomment next line to ignore bower_components
# (https://github.com/github/gitignore/pull/1529#issuecomment-104372622)
#bower_components/

# RIA/Silverlight projects
Generated_Code/

# Backup &amp; report files from converting an old project file
# to a newer Visual Studio version. Backup files are not needed,
# because we have git ;-)
_UpgradeReport_Files/
Backup*/
UpgradeLog*.XML
UpgradeLog*.htm
ServiceFabricBackup/
*.rptproj.bak

# SQL Server files
*.mdf
*.ldf
*.ndf

# Business Intelligence projects
*.rdl.data
*.bim.layout
*.bim_*.settings
*.rptproj.rsuser
*- Backup*.rdl

# Microsoft Fakes
FakesAssemblies/

# GhostDoc plugin setting file
*.GhostDoc.xml

# Node.js Tools for Visual Studio
.ntvs_analysis.dat
node_modules/

# Visual Studio 6 build log
*.plg

# Visual Studio 6 workspace options file
*.opt

# Visual Studio 6 auto-generated workspace file (contains which files were open etc.)
*.vbw

# Visual Studio LightSwitch build output
**/*.HTMLClient/GeneratedArtifacts
**/*.DesktopClient/GeneratedArtifacts
**/*.DesktopClient/ModelManifest.xml
**/*.Server/GeneratedArtifacts
**/*.Server/ModelManifest.xml
_Pvt_Extensions

# Paket dependency manager
.paket/paket.exe
paket-files/

# FAKE - F# Make
.fake/

# CodeRush personal settings
.cr/personal

# Python Tools for Visual Studio (PTVS)
__pycache__/
*.pyc

# Cake - Uncomment if you are using it
# tools/**
# !tools/packages.config

# Tabs Studio
*.tss

# Telerik's JustMock configuration file
*.jmconfig

# BizTalk build output
*.btp.cs
*.btm.cs
*.odx.cs
*.xsd.cs

# OpenCover UI analysis results
OpenCover/

# Azure Stream Analytics local run output
ASALocalRun/

# MSBuild Binary and Structured Log
*.binlog

# NVidia Nsight GPU debugger configuration file
*.nvuser

# MFractors (Xamarin productivity tool) working folder
.mfractor/

# Local History for Visual Studio
.localhistory/

# BeatPulse healthcheck temp database
healthchecksdb

# Backup folder for Package Reference Convert tool in Visual Studio 2017
MigrationBackup/

# End of https://www.gitignore.io/api/unity,visualstudio
</code></pre>
","2","4658491","0","0"
"55883572","10462278","2019-04-27 18:22:54","0","1661","<git><unity-game-engine><gitignore><lockfile>",".gitignore file doesn't seem to ignore anything at all","<p>I am working on a Unity project with Gitlab as my version control system. As I just started on this project I made the repository a few hours ago. I initialized a README file and then cloned it into my PC.</p>

<p>Once cloned into it, I added a Unity gitignore file and called it "".gitignore""
Then I pushed the .gitignore file to the origin master again.
Once that was done, I added the fresh Unity project into the git. Then, when I did ""git add ."" ALL the files were added, also all ignored files and instantly everything broke down due to the fact that the unityLockFile was blocking the whole progress from continuing. I have tried to change a few variables in the .gitignore after the problem but git just doesn't seem to ignore anything.</p>

<p>In the file hierarchy in Windows the green checkmark is visible on the .gitignore file.</p>

<p>I have tried to change some variables in the .gitignore. I also tried to push normally when unity was closed, but it was still pushing way too many things. If I would try to pull it into my friends PC, it would give tons and tons of merge conflicts due to the fact that every single file was being send to him.</p>

<p>This is the inside of the .gitignore file V</p>

<pre><code># This .gitignore file should be placed at the root of your Unity project directory

/[Ll]ibrary/
/[Tt]emp/
/[Oo]bj/
/[Bb]uild/
/[Bb]uilds/
/[Ll]ogs/

# Never ignore Asset meta data
!/[Aa]ssets/**/*.meta

# Uncomment this line if you wish to ignore the asset store tools plugin
# /[Aa]ssets/AssetStoreTools*

# TextMesh Pro files
[Aa]ssets/TextMesh*Pro/

# Visual Studio cache directory
.vs/

# Gradle cache directory
.gradle/

# Autogenerated VS/MD/Consulo solution and project files
ExportedObj/
.consulo/
*.csproj
*.unityproj
*.sln
*.suo
*.tmp
*.user
*.userprefs
*.pidb
*.booproj
*.svd
*.pdb
*.mdb
*.opendb
*.VC.db

# Unity3D generated meta files
*.pidb.meta
*.pdb.meta
*.mdb.meta

# Unity3D generated file on crash reports
sysinfo.txt

# Builds
*.apk
*.unitypackage

# Crashlytics generated file
crashlytics-build.properties

</code></pre>

<p>I would like to know how to fix the problem of git not ignoring any files to prevent any further problems with the ongoing problem.</p>

<p>Thanks for any help in advance!</p>
","7","10462278","",""
"72753152","19363772","2022-06-25 10:38:26","3","661","<git><visual-studio-code><gitignore>",".gitignore is hidden in VSCode","<p>my VSCode (Insiders) hid the <code>.gitignore</code> a few days ago, and I cannot revert this, I tried searching a lot, but the solution of adding:</p>
<pre class=""lang-json prettyprint-override""><code>{
...
&quot;files.exclude&quot;: {
    &quot;**/.gitignore&quot;: false
  },
...
}
</code></pre>
<p>in settings.json doesn't work, in the Settings with UI I only have:</p>
<ul>
<li><code>.svn</code></li>
<li><code>.hg</code></li>
<li><code>CVS</code></li>
<li><code>.DS_Store</code></li>
<li><code>Thumbs.db</code></li>
</ul>
<p>The <code>.git</code> folder isn't hidden, nor <code>.vscode</code> or other files starting by <code>.</code>, just <code>.gitignore</code>.</p>
<p>I'm using VSCode Insiders <code>1.69.0-insider</code>, commit <code>4c72dedb4ad283a569f83a7389468c3ae2c742c3</code>.</p>
","0","19363772","0","0"
"55941532","2600283","2019-05-01 19:21:47","0","552","<git><gitignore>","How to make gitignore exclude a specific js file present in 2 folders, whereas ignoring all other js files?","<p>File Structure:</p>

<ul>
<li>Root

<ul>
<li>Folder1

<ul>
<li>file.js</li>
<li>more files</li>
</ul></li>
<li>Folder2

<ul>
<li>file.js</li>
<li>more files</li>
</ul></li>
<li>.gitignore</li>
</ul></li>
</ul>

<p>I want to ignore all .js files except file.js(which is present in both folders with same name). So, in my gitignore, I tried the following:</p>

<p>Option 1:</p>

<pre><code>!*file.js
*.js
</code></pre>

<p>Option 2:</p>

<pre><code>!/*/file.js
*.js
</code></pre>

<p>Option 3:</p>

<pre><code>!/Folder1/file.js
!/Folder2/file.js
*.js
</code></pre>

<p>But always only the file.js in Folder1 is included with all 3 options, and file.js in Folder2 is always ignored. Other js files in both folders are ignored perfectly. What am I doing wrong here?</p>
","1","2600283","",""
"72810833","723334","2022-06-30 05:47:27","1","47","<git><gitignore>","Ignore content changes to file after pushed to git repository","<p>I have a file <code>users.csv</code> which is pushed to the repository. This csv file gets updated every time the test suite is run.</p>
<ul>
<li><p>I don't want the file to be shown as modified in my local machine
every time the test suite is run. In that case i assume i can use the
command</p>
<pre><code>git update-index --assume-unchanged [&lt;file&gt; ...] 
</code></pre>
</li>
</ul>
<p>Ref: <a href=""https://stackoverflow.com/questions/3319479/can-i-git-commit-a-file-and-ignore-its-content-changes"">Can I &#39;git commit&#39; a file and ignore its content changes?</a></p>
<ul>
<li>Now, assume that another developer pulled all the changes that i pushed. <strong>When the test suite is run on his machine, the same csv should not show as modified and the file should be still there in his machine.</strong></li>
</ul>
<p>I assume adding the file in .gitignore will not help since the file is already tracked.</p>
<p>Any idea on how to achieve this?</p>
","0","723334","0","0"
"55975285","1680941","2019-05-03 18:22:38","0","619","<git><gitignore><git-clone>","How to bypass .gitignore?","<p>We are trying to set up a new staging server and are attempting a <code>git clone</code>.  We would like to one-time pull files from our .gitignore (data files which should exist but don't need to be current).  Is there a way to ignore .gitignore just this once?</p>
","4","1680941","",""
"55973222","8252883","2019-05-03 15:46:59","1","957","<git><gitignore>","How to Undo git add -f?","<p>I hava a folder <code>.idea/</code> in my repository, and it is on the <code>.gitignore</code> list.</p>

<p>For some reason, I had used <code>git add .idea/ -f</code> to force git add <code>.idea</code> folder to my repos.</p>

<p>I just want to do this once.</p>

<p>But I found when I use <code>git add .</code> in anther time, git still add <code>.idea</code>'s change to my repository. It is not my willing, How to solve this?</p>
","0","8252883","",""
"72826509","19458777","2022-07-01 08:32:45","-1","295","<github><magento><magento2><gitignore><magento2.4>","How to Push Magento 2 from My PC to github","<p>My store is ready 100% and Now I wanna push it to GitHub but I cant, plz tell me steps in detail.
I will be really thanks full to you,</p>
","0","19458777","",""
"56010229","1861453","2019-05-06 18:00:52","5","1639","<git><syntax><gitignore>","What does `syntax: glob/regexp` mean in a .gitignore file?","<p>I noticed in my team's .gitignore file the following lines, and I'm not sure what they mean:</p>

<pre><code>...
syntax: regexp
...
syntax: glob
...
</code></pre>

<p>I've tried searching online, and while I've found lots of information about glob syntax and regexp syntax, I've found nothing that explains what actually putting the line <code>syntax: glob</code>, etc. in the .gitignore file means. Even the <a href=""https://git-scm.com/docs/gitignore"" rel=""noreferrer"">gitignore documentation</a> doesn't make any mention of it.</p>

<p>Each of those lines is followed by several lines containing filenames, directories, etc. Are these lines telling git what syntax the following lines use when pattern matching?</p>
","0","1861453","",""
"72839953","7116473","2022-07-02 14:43:27","0","415","<git><unity-game-engine><github><filesystems><gitignore>","Unity .gitignore does not exclude the whole directory","<h2>Steps to reproduce:</h2>
<ol>
<li>I am using a <a href=""https://github.com/github/gitignore/blob/main/Unity.gitignore"" rel=""nofollow noreferrer"">stable gitignore unity file</a></li>
<li>Run <code>git rm -r --cached .</code> before recommitting gitignore file changes</li>
<li>Run <code>git add .</code></li>
<li>The output of <code>git status --ignored</code> yields mixed results (see &quot;<em>scr A</em>&quot; below) - <strong>some files in the excluded directory do not get ignored</strong> and some do</li>
</ol>
<h2>Key points:</h2>
<ul>
<li>Large files I'm not interested in are not getting ignored (such as Unity's <a href=""https://forum.unity.com/threads/question-what-is-that-bee-stuff.1124242/#:%7E:text=Unity%20Technologies&amp;text=Bee%20is%20our%20build%20backend,officially%20supported%20Linux%20Editor%20release."" rel=""nofollow noreferrer"">build engine &quot;Bee&quot;</a> file) and break my <code>git push</code> attempts. Using GitHub.</li>
<li>I've created an empty repo where the big files where never pushed before and still run into the same issue on the first upload with the above .gitignore file</li>
<li>The .gitignore file resides in the root of my project (same level as the Unity project name and .git init dir)</li>
<li>I tried excluding the specific files which also did not work</li>
<li>Git version 2.31.0.windows.1, Unity version 2022.1.4f1</li>
</ul>
<p><em>scr A</em>:
<a href=""https://i.stack.imgur.com/UWQBq.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/UWQBq.png"" alt=""enter image description here"" /></a></p>
","8","7116473","",""
"56044751","8197421","2019-05-08 16:00:20","0","222","<git><gitignore>","Folder ""node_modules"" is being added by git even having a .gitignore file with a Node template","<p>I have a Node App for which I added a .gitignore file with a template for Node. But even with the .gitignore file, the node_module folder keep being committed. </p>

<p>After searching a lot I found two main answers. One is to use:</p>

<pre><code>git rm -rf --cached .
git add .
</code></pre>

<p>And the other is to check if the file is encoded in ASCII or UTF-8 for example.</p>

<p>Well, the file is encoded in UTF-8. </p>

<p>If I do the git commands above, it keeps adding all the files/folders. Then, it says that my branch is up to date with the origin's one and because of that, there's nothing to commit.</p>

<p>Here's the code to ignore node_modules folder in the .gitignore file:</p>

<pre><code># Dependency directories
node_modules/
jspm_packages/

</code></pre>
","4","8197421","",""
"72867716","5872611","2022-07-05 10:17:18","0","809","<next.js><gitignore>","Include .swc folder in .gitignore for Next.js 12 projects?","<p>I just started working with Next.js 12 on a fresh project. When I ran <code>next</code>, a folder called .swc was automatically generated for me. I was wondering do I include this folder inside my .gitignore file like the .next folder?</p>
","1","5872611","",""
"72932248","8360719","2022-07-10 22:19:07","0","64","<git><github><passwords><gitignore>","How to retrieve your own repo .gitignore file from another local machine?","<p>So I know that anything put in your .gitignore file will not be pushed to GitHub and can't be retrieved by cloning the repo simply because it was ignored when publishing.</p>
<p>But now I have a problem because I'm working on another local machine. I stored all secret keys in a .env file and now need to make some changes to specific keys, passwords, etc. and don't know how to retrieve any information. It is my repo so I'm hoping there is a way to do this through some means? Or is it a lost cause because NOTHING was pushed? I'm thinking the only way to make sure I don't lose any of this information is to write it down on a piece of paper or store it somewhere which is not the smart thing to do. Or maybe never ever close or exit my current laptop I'm using when creating my project. These solutions sound horrible but hey, I don't know what to do. Any suggestions?</p>
<p>I forgot to add I still have the keys and passwords, so maybe I can create another .env file and my project will work. And if I have more passwords or keys I can push and be added to my repo, will my app still work okay? But the main question is for future projects what I should do</p>
","0","8360719","",""
"56177359","2771889","2019-05-16 22:28:52","0","29","<git><gitignore>","Is there a name for gitignore's search pattern","<p><code>.gitignore</code> lines have their specific rules of interpretation.</p>

<p><a href=""https://linux.die.net/man/5/gitignore"" rel=""nofollow noreferrer"">https://linux.die.net/man/5/gitignore</a></p>

<pre><code>â€¢ A blank line matches no files, so it can serve as a separator for readability. 
â€¢ A line starting with # serves as a comment. 
â€¢ An optional prefix ! which negates the pattern; any matching file excluded by a previous pattern will become included again. If a negated pattern matches, this will override lower precedence patterns sources. 
â€¢ If the pattern ends with a slash, it is removed for the purpose of the following description, but it would only find a match with a directory. In other words, foo/ will match a directory foo and paths underneath it, but will not match a regular file or a symbolic link foo (this is consistent with the way how pathspec works in general in git). 
â€¢ If the pattern does not contain a slash /, git treats it as a shell glob pattern and checks for a match against the pathname without leading directories. 
â€¢ Otherwise, git treats the pattern as a shell glob suitable for consumption by fnmatch(3) with the FNM_PATHNAME flag: wildcards in the pattern will not match a / in the pathname. For example, ""Documentation/*.html"" matches ""Documentation/git.html"" but not ""Documentation/ppc/ppc.html"". A leading slash matches the beginning of the pathname; for example, ""/*.c"" matches ""cat-file.c"" but not ""mozilla-sha1/sha1.c"". 
</code></pre>

<p>The same rules are used by other tools as well, e.g. the <code>files</code> key in npm's <code>package.json</code> expects the same format.</p>

<p>Is there a name for this pattern? Or what would be the most suitable name?</p>
","0","2771889","",""
"72972314","1616488","2022-07-13 20:32:44","0","531","<git><gitignore><.git-folder>","adding nested .git folders inside .gitignore","<p><a href=""https://stackoverflow.com/questions/1470572/ignoring-any-bin-directory-on-a-git-project"">This</a> question shows how to use <code>.gitignore</code> to ignore various locations of <code>bin</code> folder inside your project. I've tried the same but with <code>.git</code> folder. I've put <code>.git/</code> inside my <code>.gitignore</code> then run <code>git init</code> and then <code>git add .</code> but with no luck. Git still complains about adding another repo inside current repo. My goal is to create one big repo which will contain multiple other repos (I do not need their git history, just files). I know about best practices and git modules etc. I'm just curious why it does not works with <code>.git/</code> but it works with <code>bin/</code></p>
<p><strong>EDIT</strong>
I' do not know what I did wrong at the time of writing this post but now it seems that it is working. I have empty <code>.gitignore</code> and if I issue <code>git status</code> there is no mention about <code>.git</code> folders. This also confirms <code>git ls-files</code> (which I've issued after <code>git add .</code> and <code>git commit</code>). But if I rename those <code>.git</code> folders e.g. to <code>.git.tmp</code> then <code>git status</code> start to &quot;see&quot; them. This behavior is also described in <a href=""https://stackoverflow.com/questions/34618950/git-ignore-git-folder"">this</a> post. My git version is 2.25.1</p>
","2","1616488","",""
"72972453","19435638","2022-07-13 20:45:49","0","283","<c#><git><visual-studio><dll><gitignore>","How do you add a Visual Studio solution / project to an existing git repo?","<p>So I have an existing git repo full of c code. I want to compile that c code into a .dll, and then add a c# solution utilizing the dll and commit and push the updated code to git so that others can pull and build the solution without having to bother with building the dll themselves.</p>
<p>However I am not very familiar with visual studio at all, and am use to the control of working in vsc or vim. The approach I tried was to clone the c repo to a local folder, then open that folder with visual studio, compile the c code and add my solution / project files, then use visual studios commit feature to commit the changes and push them to origin.</p>
<p>However, this did not update the .gitignore, so this pushed every single file in the solution. I am not sure what is necessary so that others can build the solution and what is unnecessary or may even break the solution on another person's machine, since I see config, cache, and db files with my paths included in the commit.</p>
<p>I could edit the .gitignore manually, but again, I don't know what is or is not necessary, and I have to imagine there is a way to automatically do this in visual studio that I am just missing.</p>
<p>Is there a proper workflow I should be using to clone a git repo and add a dll and a c# solution in visual studio?</p>
","3","19435638","",""
"56204967","2444661","2019-05-19 05:16:54","0","43","<git><gitignore>","A query on gitignore","<p>I added 'dist' folder to .gitignore.
I expect that now this folder and its contents wont be tracked by git.</p>
<p>But when I do 'git status', I see:</p>
<blockquote>
<p>deleted:    dist/app.bundle.js</p>
<p>deleted:    dist/favicon.png</p>
<p>deleted:    dist/index.html</p>
</blockquote>
<p>Why this behaviour?</p>
","3","2444661","",""
"72997260","19557809","2022-07-15 16:44:49","0","33","<git><gitlab><gitignore>",".gitignore isn't ignoring a Dockerfile which was manually changed in Gitlab","<p>I included Dockerfile in .gitignore file. While migrating from branch A to B and B to C, the Dockerfile was ignored as needed. But in branch C, I committed changes in Dockerfile manually on Gitlab. Later when I merged C to D, the Dockerfile did not get ignored by .gitignore.
How do I handle this case?</p>
","2","19557809","",""
"56222119","6141587","2019-05-20 13:37:55","1","515","<git><github><gitignore>","Whitelist nested files and folders using .gitignore","<p>I want to exclude entire <code>android/</code> &amp; <code>ios/</code> folder</p>

<p>And I want to include the following files in it:</p>

<pre><code>android/settings.gradle
android/app/build.gradle
android/build.gradle
android/app/src/main/java/com/reactnativegoogleadmob/MainApplication.java

ios/Podfile
ios/ReactNativeGoogleAdmob/AppDelegate.h
ios/ReactNativeGoogleAdmob/AppDelegate.m
</code></pre>

<p>So my <code>.gitignore</code> is:</p>

<pre><code># Remove following directories

android/*
ios/*

# Add following files

!android/settings.gradle
!android/app/build.gradle
!android/build.gradle
!android/app/src/main/java/com/reactnativegoogleadmob/MainApplication.java

!ios/Podfile
!ios/ReactNativeGoogleAdmob/AppDelegate.h
!ios/ReactNativeGoogleAdmob/AppDelegate.m
</code></pre>

<p>But it only includes top level files like:</p>

<pre><code>android/settings.gradle
android/build.gradle
ios/Podfile
</code></pre>

<p>I also tried <code>android/**/*</code> &amp; <code>ios/**/*</code> but it gives same results as <code>android/*</code> &amp; <code>ios/*</code>.</p>

<p>How do I include the rest of the files? I tried other solutions too but hitting a roadblock.</p>
","0","6141587","",""
"73014945","599393","2022-07-17 19:56:52","0","19","<git><github><gitignore>","GitHub consistently displays directories in .gitignore file","<p>I've been working with GitHub for years, but this is a new issue. My project (<a href=""https://github.com/MisterMorse/abbas-tables-node-express-api"" rel=""nofollow noreferrer"">https://github.com/MisterMorse/abbas-tables-node-express-api</a>) keeps displaying JetBrains fluff despite my .gitignore file marking it. The file says:</p>
<p>.idea/</p>
<p>.idea</p>
<p>idea/</p>
<p>idea</p>
<p>/.idea/</p>
<p>/.idea</p>
<p>/idea/</p>
<p>/idea</p>
<p>But the folder is ALWAYS displayed. What am I doing wrong?</p>
","4","599393","",""
"56248836","3136861","2019-05-22 03:17:59","1","238","<gitignore><jetbrains-ide>",".gitignore_global has no effect on .idea/ created by JetBrains","<p>I am trying to get Git to ignore <code>.idea/</code> created by JetBrains' product but somehow it works on every folder I created except the <code>.idea/</code> created by JetBrains. Why ? </p>

<p>So how do I globally ignore <code>.idea/</code> ? </p>

<p>I already had my <code>core.excludesfile</code> set to <code>~/.gitignore_global</code></p>
","0","3136861","0","0"
"73028290","16504824","2022-07-18 20:32:41","0","31","<git><config><gitignore>","How to ignore a file without deleting it when switching git branches?","<p>I'm working on a PHP application where each developer has their own config.yml which contains passwords we don't want to put into a repo, so the file has been added to .gitignore. The problem is that each time I switch branches my config.yml disappears and I need to restore it from backup. How do I keep the file out of the repo without getting it removed every time I swap branches?</p>
","2","16504824","",""
"56260537","1245120","2019-05-22 15:42:16","1","2817","<git><github><repository><gitignore><git-clone>","How to upload ignored files to github repository","<p>In my local repository, I have 8 files</p>

<p><a href=""https://i.stack.imgur.com/HEH2a.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/HEH2a.png"" alt=""enter image description here""></a>  </p>

<p>But in I have specified to ignore <code>.mat</code> files in <code>.gitignore</code>. So when pushing the repository on github, the ignored files are not added.<br>
But I want anyone who clones my repository later, have the <code>.mat</code> files and photos as examples of the data which work with the program.  </p>

<p>I can upload the files but that way the user who clone the repository later won't download those files when cloning.  </p>

<p>I also can modify the <code>.gitignore</code> file and commit adding <code>.mat</code> files to include them on my github repository.  </p>

<p>But is there any other way?</p>
","0","1245120","",""
"73035495","10710643","2022-07-19 10:44:04","0","181","<javascript><git><github><gitignore>","How can I have part of a code never to be commited in git","<p>Let's suppose we have a file which we are heavily changing. So in case of trial-and-error, we write something for testing. which we don't want to send to commit or even get noticed by git.  like</p>
<pre class=""lang-js prettyprint-override""><code>function testThis(){
   console.log('helloworld');
}
</code></pre>
<p>I write this function, this is part of a very big file. during staging this change will be considered. Since there are many changes like this in a file. So it is possible that during hand picking which change to stage, this change might get staged by mistake.</p>
<p>So my question is: <strong>Is there any wrapper or something that is particular to git, in which if I wrap this code, then this change will not even be considered for staging</strong>, let alone for committing. something like</p>
<pre><code>&lt;.gitignore&gt;
function testThis(){
   console.log('helloworld');
}
&lt;/.gitignore&gt;
</code></pre>
","4","10710643","",""
"73065622","18542740","2022-07-21 11:47:11","-3","95","<git><gitlab><gitignore><git-commit>","Previouse git commits are missing","<p><a href=""https://i.stack.imgur.com/u5muQ.png"" rel=""nofollow noreferrer"">enter image description here</a>
My previous 90+ commits  are not showing in my branch neither in other :(.</p>
<p>I've only clue that the commit are gone after solving the git error <strong>failed to resolve HEAd as valid ref</strong>, or may be it is because of pushing the codes forcefully.</p>
<p><strong>STEP-1</strong></p>
<p>Added <code>.gitignore</code> File in dir with some additional rules to ignore irrelevant dirs/files.</p>
<p><strong>STEP-2</strong></p>
<pre><code>git add .
git commit -m &quot;msg&quot;
git push origin dev_branch -f
</code></pre>
<p>This are the most recent command for I've executed in my terminal.
Thanks in advance</p>
","7","18542740","",""
"73067433","13072731","2022-07-21 13:48:26","0","111","<git><gitignore>",".gitignore setup for directories","<p>I`ve the following directory structure and i want to add the directories &quot;public&quot; and &quot;brand&quot; to git, but no other subdirectories of /app/:</p>
<pre><code>/app
--.gitignore
--/public
----.gitkeep
----/brand
------.gitkeep
</code></pre>
<p>The /app/.gitignore file looks as follows:</p>
<pre><code>*
!public/.gitkeep
!public/brand/.gitkeep
!.gitignore
</code></pre>
<p>However, only the &quot;public&quot; directory is added to git but not the .gitkeep files nor the directory &quot;brand&quot;. Do you have an idea what´s wrong with the .gitignore file?</p>
","4","13072731","",""
"73074272","151200","2022-07-22 01:49:46","0","55","<git><gitignore>","Adding a pattern from a list in .gitignore","<p>I need to ignore these three files:</p>
<pre><code>boot.dev.tpl
boot.tst.tpl
boot.prd.tpl
</code></pre>
<p>Is there a way to add that to <code>.gitignore</code> in one line, something like:</p>
<p><code>boot.[dev|tst|prd].tpl # This doesn't work</code></p>
","2","151200","",""
"73077655","16177121","2022-07-22 08:52:42","0","143","<git><gitignore>","gitignore not ignoring files properly","<p>I want to ignore some files in git but git is staging the files mentioned in <code>gitignore</code>.</p>
<p>My <code>gitignore</code>.</p>
<pre><code>*.exe
*.out
*.app
</code></pre>
<p><strong>Local Repository Strucutre</strong></p>
<pre><code>algorithms/          //contains cpp files with .exe
data structure/      //contains cpp files with .exe
git.gitignore        &lt;-- gitignore
README.md
LICENSE
</code></pre>
<p><strong>Staging files</strong></p>
<p><a href=""https://i.stack.imgur.com/GTE0m.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/GTE0m.png"" alt=""enter image description here"" /></a></p>
","12","16177121","",""
"73088229","17945716","2022-07-23 05:20:58","1","103","<unity-game-engine><gitignore><hololens><mrtk><openxr>","Possible gitignore issue for setting up a new OpenXR project with MRTK to do Unity-Hololens dev","<p>I am following the instructions on <a href=""https://learn.microsoft.com/en-us/windows/mixed-reality/develop/unity/new-openxr-project-with-mrtk"" rel=""nofollow noreferrer"">this</a> page to set up my <code>Unity</code> project for developing an app for <code>Hololens2</code>.</p>
<p>Once I switched platform and saved the new settings, I was curious to see what changes had been made under the hood by looking at my <code>SourceTree</code> modified files, but there is none. I have made a lot of changes to <code>Build Settings</code> and <code>Player Settings</code>.</p>
<p>Is this normal (i.e. are such settings supposed to be ignored) or there is something wrong with my <code>gitignore</code> file that stops these changes from being tracked and registered?</p>
<p>Where are the changes to <code>Build Settings</code> and <code>Player Settings</code> stored? <strong>Should they be kept under version control?</strong></p>
","0","17945716","0","0"
"73102458","5868574","2022-07-24 22:16:37","0","188","<git><gitignore>","Git, set up .gitignore to ignore all files EXCEPT .conf files, including subdirectories too","<p>How to get Git to ignore all files in a directory and <strong>ALSO</strong> in its subdirectories except for .conf files?</p>
<p>Currently I have this in my .gitignore:</p>
<pre><code>!/some/dir/
/some/dir/*
!/some/dir/**/
!/some/dir/**/*.conf
</code></pre>
<p>So, I want to ignore all files in /some/dir/ and also its subdirectories, except for *.conf files.</p>
<p>But it is not ignoring any file in /some/dir/.</p>
<p>For example, /some/dir/somefile is not ignore, /some/dir/subdir/anotherfile is not ignore also. I just want to not ignore files like: /some/dir/subdir/file.conf.</p>
","1","5868574","",""
"73109355","10259660","2022-07-25 12:35:30","0","40","<git><gitignore>","one condition in my .gitginore ist not being effective (while another is)","<p>I don't get this behaviour</p>
<pre><code>git status
...
Changes not staged for commit:
  (use &quot;git add &lt;file&gt;...&quot; to update what will be committed)
  (use &quot;git restore &lt;file&gt;...&quot; to discard changes in working directory)
        modified:   ansible.log
</code></pre>
<p>while</p>
<pre><code>me@rhel8:~/repos/ansible_get_postgres_version&gt; cat .gitignore 

ansible.log
*.log
*.out
</code></pre>
<p>so, apparently the .gitignore is not effective when in comes to the <code>ansible.log</code> file.</p>
<p>However, <code>.gitignore</code> is not completely ineffective</p>
<p><code>echo &quot;hello gitty&quot; &gt; test_this.out</code> creates such a file but that is <strong>not</strong> shown as new to git with a <code>git status</code> (so, it actually <strong>is</strong> ignored).</p>
<p>One condition I could imagine as being the culprid is the fact that maybe the <code>.gitignore</code> did not exist before the <code>ansible.log</code> file got created. It that is the case ... what would I have to do in order to get it to being ignored by git as intendet?</p>
","2","10259660","",""
"73115229","15095504","2022-07-25 20:51:03","0","20","<github><gitignore>","Keep a private file on github without gitignore","<p>Several of my Github repos have files I don't want to publicize. Initially, my solution to this was to use &quot;.gitignore&quot;. Recently though, I accidentally deleted an entire repo. I could recover the files on GitHub, but I couldn't recover the &quot;ignored&quot; files. Is there I way I can store all my files on GitHub but choose to make some files private?</p>
","3","15095504","",""
"56390814","10399138","2019-05-31 07:44:00","0","672","<git><vim><gitignore><fold>","Is there a way to gitignore a specific word?","<p>I want my git to ignore the vim-foldmarker ({{{,}}}) that I add to a repo.
I know git has the --ignore-whitespace option but,
is there a way to tell git to ignore a specific word or strings?
Of course I want git to track the diffs which is not ""{{{"" or ""}}}""</p>

<p>if the original code cloned is</p>

<pre class=""lang-python prettyprint-override""><code>def foo(bar):
    # do someting
    return ""buz""
</code></pre>

<p>and I edit like</p>

<pre class=""lang-python prettyprint-override""><code>def foo(bar): # {{{ &lt;- this tells vim to fold from here
    # do something
    return ""baz"" # }}} to here
</code></pre>

<p>I want git diff to be like this</p>

<pre><code>-    # do someting
+    # do something
-    return ""buz""
*    return ""baz""
</code></pre>

<p>not like this</p>

<pre><code>-def foo(bar):
+def foo(bar): # {{{ &lt;- this tells vim to fold from here
-    return ""buz""
*    return ""baz"" # }}} to here
</code></pre>
","1","10399138","0","0"
"73180793","19549817","2022-07-31 05:01:59","1","1856","<spring-boot><maven><github><gitignore>","Should I gitignore .mvn folder in a spring boot project?","<p>I have a spring-boot application. It contains <code>.mvn</code> folder. Should I add it to the `.gitignore file?
Or does it contain something that needs to be Git committed and version controlled?</p>
","4","19549817","",""