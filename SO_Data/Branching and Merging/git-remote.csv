Post Link,User Link,CreationDate,Score,ViewCount,Tags,Title,Body,CommentCount,OwnerUserId,AnswerCount,FavoriteCount
"46432986","8372328","2017-09-26 17:57:42","1","387","<git><repository><project><git-remote><creation>","git hub repository creation fails","<p>I tried following commands and failed:</p>

<pre><code>&gt; cd SecurityAlert/
&gt; sudo apt-get install git
&gt; git init
&gt; git add .
&gt; git config --global user.email ""mail@gmail.com""
&gt; git config --global user.name ""user""
&gt; git commit -m ""First commit""
&gt; git remote add origin https_link_github.com/user/SecurityAlert
&gt; git push origin master
</code></pre>

<blockquote>
  <p>To https_link_github.com/user/SecurityAlert<br>
    ! [rejected]        master -> master (non-fast-forward)</p>
  
  <p>error: failed to push some refs to
  'https_link_github.com/sandeepmhptr/SecurityAlert' hint: Updates were<br>
  rejected because the tip of your current branch is behind<br>
      hint: its remote counterpart. Integrate the remote changes (e.g.<br>
      hint: 'git pull ...') before pushing again.<br>
      hint: See the 'Note about fast-forwards' in 'git push --help' for details.<br></p>
</blockquote>

<pre><code>git pull
</code></pre>

<blockquote>
  <p>There is no tracking information for the current branch. Please
  specify which branch you want to merge with. See git-pull(1) for
  details
  git pull  </p>
  
  <p>If you wish to set tracking information for this branch you can do so with:
  git branch --set-upstream-to=origin/ master</p>
</blockquote>

<pre><code>&gt; git remote add -v

&gt; git remote -v
</code></pre>
","0","8372328","",""
"51794673","1223975","2018-08-10 22:19:35","1","281","<git><github><gitlab><git-remote>","Check if ""remote"" is indeed a git remote","<p>Say I have a list of strings like so:</p>

<pre><code>remotes/origin/master
remotes/origin
origin/master
origin
</code></pre>

<p>how can I tell if the beginning of the string is a valid remote? For example,</p>

<pre><code>remotes/origin
origin
</code></pre>

<p>should both be valid remotes, in general, right? How to determine that though?</p>
","1","1223975","0","0"
"76240530","6202327","2023-05-13 00:01:48","0","20","<git><binaryfiles><git-remote>","Having 2 git remotes, one with git lfs the other without","<p>I have a tricky situation. I have a project, there are 2 remotes, a personal gitlab remote and a remote hosted by my organization.</p>
<p>It seems the organization git server cannot handle/ does not have git-lfs. I only need to submit to the organization's git repo to make sure there is a copy accessible to other people. I don't use that server regularly.</p>
<p>Is there  a way to configure git with to remotes so that my gitlab remote uses git-lfs regularly but the organization remote ignores all git-lfs files and pretends they don't exist?</p>
","0","6202327","",""
"76587137","10441038","2023-06-30 08:09:07","0","14","<git><public-key-encryption><gnupg><git-remote><gcrypt>","Add multi-participants with git-remote-gcrypt","<p>I'm learnning how to use <code>git-remote-gcrypt</code> with multi-participants.
Let's say I have two computers acting as two user/participants.</p>
<p>I do things like following:</p>
<pre><code>Step1: Generate GPG key pairs for them respectively.
    On computer0:
    gpg --full-gen-key
    GPG key pair-0: usr0@00.com fingerprint:xxxx0000xxxx

    On computer1:
    GPG key pair-1: usr1@11.com fingerprint:yyyy1111yyyy

Step2: Exchange pub keys.
    exported user0's pub key and imported into user1's gpg trustdb,
    exported user1's pub key and imported into user0's gpg trustdb.

Step3: Create an empty repo on github.com
    get the URL git@github.com:leon/testgcrypt.git

Step4: Create an empty local repo on Computer0
    mkdir testgcrypt &amp;&amp; cd testgcrypt &amp;&amp; git init

Step5: Commit some contents into computer0's local repo, in order to simulate my real scenes.
    echo &quot;content0&quot; &gt; content0.txt
    git add -- . &amp;&amp; git commit -m &quot;0.0.0 content0&quot;

Step6: Add remote ref on computer0
    git remote add github gcrypt::git@github.com:leon/testgcrypt.git
    git config remote.github.gcrypt-participants xxxx0000xxxx yyyy1111yyyy
    git branch --set-upstream github/master master
    git push
</code></pre>
<p>For now, everything goes as my expecting.
Now I need to clone the repo onto Computer1, in order to simulate a new coleague joint my work.</p>
<p>Continue as follows:</p>
<pre><code>Step7: Configure Computer1
    mkdir testgcrypt &amp;&amp; cd testgcrypt &amp;&amp; git init
    git remote add github gcrypt::git@github.com:leon/testgcrypt.git
    git config remote.github.gcrypt-participants xxxx0000xxxx yyyy1111yyyy

Step8: Clone the repo onto Computer1
    git pull github master
</code></pre>
<p>At Step8, I encountered error:</p>
<blockquote>
<p>gcrypt: Decrypting manifest</p>
<p>gpg: error getting version from 'scdaemon': No SmartCard daemon</p>
<p>gpg: decryption failed: No secret key</p>
<p>gcrypt: Failed to decrypt manifest!</p>
</blockquote>
<p>I guest the reason is that Computer1 is trying to decrypt the content with its own priv-key, while the content was encrypted with Computer0's priv-key.</p>
<p>I'm expecting it decrypt with Computer0's pub-key.</p>
<p>I think that my case is a very common scenes when we use git-remote-gcrypt as a multi-participants tool.</p>
<p>How to let above two users can hold different key pairs, and see the modifications/commits from peers, and decrypt the contents merely with peer's pub-key?</p>
<p>Sorry for my ugly English! thx!</p>
","0","10441038","",""
"21498932","157971","2014-02-01 13:59:18","5","674","<git><git-branch><git-remote><remote-repository>","Deleting remote branches in git: understanding it for once and for all","<p>The reason why I'm posting here today is because the behavior I see on the command line differs from what I actually read online. So it confuses me.</p>
<p>The two commands under question here are:</p>
<pre><code>git branch -r -d origin/topic1
</code></pre>
<p>and</p>
<pre><code>git push origin :topic1
</code></pre>
<p>My understanding so far (I may be completely wrong though, my brain is fried):</p>
<ul>
<li>The first should remove both the tracking reference <em>and</em> the remote branch</li>
<li>The second should remove the remote branch but NOT the tracking reference (if a local branch exists), although the reason why you wouldn't remove the tracking reference seems pointless and confusing to me as a sort-of-beginner.</li>
</ul>
<p>Here is a recent scenario I have run into. I just cloned a repository with two remote branches:</p>
<pre><code>origin/master
origin/develop
</code></pre>
<p>The only local branch I have is:</p>
<pre><code>master
</code></pre>
<p>I want to delete the remote branch <code>origin/develop</code>, so watch this:</p>
<pre><code>Robert@COMP /c/Code/project (master)
$ git branch -rd origin/develop
Deleted remote branch origin/develop (was 9ff16e8).

Robert@COMP /c/Code/project (master)
$ git fetch
From github.com:username/project
 * [new branch]      develop    -&gt; origin/develop
</code></pre>
<p>As you can see, I tried to delete the remote branch, and immediately fetch the latest changes from origin, but for some reason it recreated the branch. I have no idea why it would do this, I'm very confused. I don't have a local corresponding branch for <code>origin/develop</code>, so I don't know why it is doing this.</p>
<p>I'd like to know why this happened, but also (to address the more general title of this question, and to perhaps help everyone else scavenging stack overflow for answers to these confusing ambiguities), I'd like more general answers to some questions:</p>
<ul>
<li>There are two ways to delete a remote branch. What is a really good, simple way to remember which one to use under which circumstance?</li>
<li>Assuming it matters at all, how does the existence of a corresponding local branch (for a remote branch) affect the decision of how a remote branch is deleted?</li>
<li>How does the existence of a tracking reference/relationship between a local and remote branch affect how you choose to delete a branch, and which of the methods of deleting a branch also cleans up tracking references?</li>
</ul>
","1","157971","0","0"
"2916958","123486","2010-05-26 21:29:06","28","24864","<git><git-rebase><git-remote>","git rebase onto remote updates","<p>I work with a small team that uses git for source code management.  Recently, we have been doing topic branches to keep track of features then merging them into master locally then pushing them to a central git repository on a remote server.  This works great when no changes have been made in master:  I create my topic branch, commit it, merge it into master, then push.  Hooray.</p>

<p>However, if someone has pushed to origin before I do, my commits are not fast-forward.  Thus a merge commit ensues.  This also happens when a topic branch needs to merge with master locally to ensure my changes work with the code as of now.  So, we end up with merge commits everywhere and a git log rivaling a friendship bracelet.  </p>

<p>So, rebasing is the obvious choice.  What I would like is to: </p>

<ul>
<li>create topic branches holding several commits</li>
<li>checkout master and pull (fast-forward because i haven't committed to master)</li>
<li>rebase topic branches onto the new head of master</li>
<li>rebase topics against master(so the topics start at masters head), bringing master up to my topic head</li>
</ul>

<p>My way of doing this currently is listed below:</p>

<pre><code>git checkout master
git rebase master topic_1
git rebase topic_1 topic_2
git checkout master
git rebase topic_2
git branch -d topic_1 topic_2
</code></pre>

<p>Is there a faster way to do this?</p>
","0","123486","0","0"
"21725363","198011","2014-02-12 10:35:26","0","1940","<git><https><git-remote>","git can't find remote helper for https (but it's there)","<p>I installed git 1.8.5.4 from source under <code>$HOME/bin</code>. My system is SUSE Linux Enterprise Server 11 SP1 (x86_64)</p>

<p>After installation I cannot clone repos from https urls, getting the following error:</p>

<pre><code>$ git clone https://github.com/apbarrero/pyrad.git                                                                                                                                                
Cloning into 'pyrad'...
fatal: Unable to find remote helper for 'https'
</code></pre>

<p>I checked that git is properly compiled against libcurl-devel and libexpat-devel packages. Then I tryed using git-remote-https installed under <code>$HOME/bin/libexec/git-core/</code> and it worked fine to connect to the same remote:</p>

<pre><code>$ $HOME/libexec/git-core/git-remote-https https://github.com/apbarrero/pyrad.git
capabilities
fetch
option
push
check-connectivity

list
@refs/heads/master HEAD
9599cf833354793b81d2a47504826332473bcb12 refs/heads/master
1f8f2b995bb5ab55e6c6f1051ccb44875ab1e60d refs/tags/0.6
68552227901d377b513884c70d9582da0329a270 refs/tags/0.6^{}
e0cd958edc5b3aad7e31435990674e2cff4e3b7e refs/tags/0.7
c50213b2d4213f3574c1a6b454e6887a529de340 refs/tags/0.7^{}
6085deb4ee37862d65f4a26f472fa2d1894a4331 refs/tags/0.8
33902c5b3da1272a4f5930815f561b8068315ba3 refs/tags/0.8^{}
5a45639faaf1cbf7622fe47e2795d6f5a0ee6658 refs/tags/0.9
edd69b9014d7e5bbf9da203d7db9a26587756aa4 refs/tags/0.9^{}
6e3b16ed19b329be944bd1b10aa17d02eb473009 refs/tags/1.0
30beedc5c4e56a15f4025d25331515aa2a917234 refs/tags/1.0^{}
dacf4bd37aaddd3872faeb8a77c801fe3c8550cb refs/tags/1.1
4c3e2d6700947ca6ea7b3319ff52abb7029bf3be refs/tags/1.1^{}
9a7f5a4e9fe19ef9f45db4e28a7d4648a011cc9b refs/tags/1.2
ee7ec8f2b37da5e84bf0fbb83e214a8bd3cfdf70 refs/tags/1.2^{}
e16af24d814e8d8c83b172ca6103fd3ab93b08db refs/tags/2.0
ce4a625caf5c6d892e020ec150373043a203366e refs/tags/2.0^{}
</code></pre>

<p>So I guess it's an installation problem. Any clue on how git locates remote helpers installed in the system?</p>
","2","198011","",""
"21853661","1738427","2014-02-18 12:20:52","1","65","<git><git-clone><git-remote>","How to get all remotes urls from remote git repo?","<p>For example, let we have a git repository A, which have two remotes:</p>

<pre><code>user@user:~/dev/tmp/some_repo$ git remote -v
remote_a        /home/user/dev/tmp/a/ (fetch)
remote_a        /home/user/dev/tmp/a/ (push)
remote_b        /home/user/dev/tmp/b/ (fetch)
remote_b        /home/user/dev/tmp/b/ (push)
</code></pre>

<p>I want to clone this repository and get same remotes, but have only origin:</p>

<pre><code>user@user:~/dev/tmp$ git clone some_repo/ some_clone
Cloning into 'some_clone'...
done.
user@user:~/dev/tmp$ cd some_clone/
user@user:~/dev/tmp/some_clone$ git remote -v
origin  /home/user/dev/tmp/some_repo/ (fetch)
origin  /home/user/dev/tmp/some_repo/ (push)
</code></pre>

<p>Is there any way to get all the remotes from the origin, so <strong>remote_a</strong> and <strong>remote_b</strong> were remotes for <strong>some_clone</strong> one too?</p>
","0","1738427","",""
"59920937","596370","2020-01-26 17:34:31","2","1008","<git><gitlab><git-remote><git-fetch>","git command warning says redirecting to <url>.git","<p>I am holding a project on <code>gitlab</code>, and I am having a cloned copy on my <code>ubuntu</code> desktop. On recent days I am facing a weird warning (<code>redirecting to https://gitlab.com/&lt;my_handle&gt;/&lt;project&gt;.git/</code>) on <code>remote update</code> and <code>fetch</code> operation.</p>

<p>Below mentioned is my <code>remote</code>, do I need to update it to hold <code>.git</code> at the end of URL ?</p>

<pre><code>$ git remote -v
origin  https://gitlab.com/&lt;my_handle&gt;/&lt;project&gt; (fetch)
origin  https://gitlab.com/&lt;my_handle&gt;/&lt;project&gt; (push)
</code></pre>

<p>Note: The other existing <a href=""https://stackoverflow.com/questions/53012504/what-does-the-warning-redirecting-to-actually-mean"">question</a> does not answer this doubt.</p>
","4","596370","",""
"22361697","869936","2014-03-12 19:19:05","2","1172","<git><git-remote>","How to make 'git push' work like 'git push origin branch'?","<p>Here's a git status showing that I have one commit ready to be pushed:</p>

<pre><code>$ git status
# On branch develop
# Your branch is ahead of 'origin/develop' by 1 commit.
#   (use ""git push"" to publish your local commits)
#
nothing to commit, working directory clean
</code></pre>

<p>But then trying <code>git push</code> doesn't work:</p>

<p><code>$ git push
Everything up-to-date
</code></p>

<p>Even when I use <code>git branch develop --set-upstream-to origin/develop</code>, <code>git push</code> still says 'Everything up-to-date'.</p>

<p>How can I force the behavior of <code>git push</code> to match <code>git push origin branch</code>?</p>

<p><strong>New information:</strong>
I believe this to be unique to this repository as other repositories on my machine have 'git push' working fine.</p>

<p><strong>New information (2):</strong>
.git/config file of the project in question:</p>

<pre><code>[core]
        repositoryformatversion = 0
        filemode = true
        bare = false
        logallrefupdates = true
        ignorecase = true
        precomposeunicode = false
[gitflow ""branch""]
        master = master
        develop = develop
[gitflow ""prefix""]
        feature = feature/
        release = release/
        hotfix = hotfix/
        support = support/
        versiontag = 
[remote ""origin""]
        url = https://obfuscated.unfuddle.com/git/obfuscated_ob/
        fetch = +refs/heads/*:refs/remotes/origin/*
        push = refs/heads/master:refs/heads/master
[branch ""develop""]
        remote = origin
        merge = refs/heads/develop
[branch ""master""]
        remote = origin
        merge = refs/heads/master
</code></pre>
","11","869936","",""
"41461152","5317198","2017-01-04 10:08:45","9","3146","<git><git-remote>","Which characters are illegal within a git remote name?","<p>Which characters are illegal within a git remote name ?</p>

<p>I didn't found it the git documentation.</p>
","1","5317198","0","0"
"4040717","96531","2010-10-28 07:32:05","115","124817","<git><version-control><branch><git-branch><git-remote>","git remote prune – didn't show as many pruned branches as I expected","<p>From the man page:</p>

<blockquote>
<pre><code>Deletes all stale tracking branches under &lt;name&gt;.
These stale branches have already been removed from the remote repository
referenced by &lt;name&gt;, but are still locally available in ""remotes/&lt;name&gt;"".
</code></pre>
</blockquote>

<p>So I removed a bunch of branches using</p>

<pre><code>git push origin :staleStuff
</code></pre>

<p>and then ran</p>

<pre><code>git remote prune origin
</code></pre>

<p>However, only one single local branch was pruned. Some of these branches were created by me, some by co-workers. Does this indicate that I wasn't tracking those branches correctly in the first place?</p>
","1","96531","0","0"
"277077","8252","2008-11-10 04:50:26","236","206279","<git><git-push><git-remote>","How can I find the location of origin/master in git, and how do I change it?","<p>I'm a Git newbie.  I recently moved a Rails project from Subversion to Git.  I followed the tutorial here: <a href=""http://www.simplisticcomplexity.com/2008/03/05/cleanly-migrate-your-subversion-repository-to-a-git-repository/"" rel=""noreferrer"">http://www.simplisticcomplexity.com/2008/03/05/cleanly-migrate-your-subversion-repository-to-a-git-repository/</a></p>

<p>I am also using unfuddle.com to store my code.  I make changes on my Mac laptop on the train to/from work and then push them to unfuddle when I have a network connection using the following command:</p>

<pre><code>git push unfuddle master
</code></pre>

<p>I use Capistrano for deployments and pull code from the unfuddle repository using the master branch.</p>

<p>Lately I've noticed the following message when I run ""git status"" on my laptop:</p>

<pre><code># On branch master
# Your branch is ahead of 'origin/master' by 11 commits.
#
nothing to commit (working directory clean)
</code></pre>

<p>And I'm confused as to why.  I thought my laptop was the origin... but don't know if either the fact that I originally pulled from Subversion or push to Unfuddle is what's causing the message to show up.  How can I:</p>

<ol>
<li>Find out where Git thinks 'origin/master' is?</li>
<li>If it's somewhere else, how do I turn my laptop into the 'origin/master'?</li>
<li>Get this message to go away. It makes me think Git is unhappy about something.</li>
</ol>

<p>My mac is running Git version 1.6.0.1.</p>

<hr>

<p>When I run <code>git remote show origin</code> as suggested by dbr, I get the following:</p>

<pre><code>~/Projects/GeekFor/geekfor 10:47 AM $ git remote show origin
fatal: '/Users/brian/Projects/GeekFor/gf/.git': unable to chdir or not a git archive
fatal: The remote end hung up unexpectedly
</code></pre>

<p>When I run <code>git remote -v</code> as suggested by Aristotle Pagaltzis, I get the following:</p>

<pre><code>~/Projects/GeekFor/geekfor 10:33 AM $ git remote -v
origin  /Users/brian/Projects/GeekFor/gf/.git
unfuddle    git@spilth.unfuddle.com:spilth/geekfor.git
</code></pre>

<p>Now, interestingly, I'm working on my project in the <code>geekfor</code> directory but it says my origin is my local machine in the <code>gf</code> directory.  I believe <code>gf</code> was the temporary directory I used when converting my project from Subversion to Git and probably where I pushed to unfuddle from.  Then I believe I checked out a fresh copy from unfuddle to the <code>geekfor</code> directory.</p>

<p>So it looks like I should follow dbr's advice and do:</p>

<pre><code>git remote rm origin
git remote add origin git@spilth.unfuddle.com:spilth/geekfor.git
</code></pre>
","0","8252","0","0"
"66832049","13206710","2021-03-27 13:50:40","2","863","<git><github><git-remote>","Reconnect git local to GitHub remote without losing a new local branch and commits","<p>With some help I managed to recover a local git project from a <code>fatal: not a git repository (or any of the parent directories): .git</code> issue... <a href=""https://stackoverflow.com/questions/66830941/why-does-git-not-recognise-my-local-repository"">Why does git not recognise my local repository?</a></p>
<p>But now my local git is ahead on a new local branch (that doesn't exist on the GitHub remote) and is disconnected from the existing remote origin.</p>
<ul>
<li><code>git remote -v</code> returns nothing</li>
</ul>
<p>How do I reconnect and push the local git to the existing GitHub remote without losing the new local branch with it's commits?</p>
","2","13206710","",""
"66832428","14439702","2021-03-27 14:29:47","2","1709","<git><github><git-push><git-remote>","Push git to remote (Github) only one last commit, without history?","<p>I'd like to push my project and share the repo on Github and my coworkers. But I have one problem, while I'm developing the project I committed some private stuff e.g. passwords to the git, so I don't want to commit the history to Github. I just need to share the latest version of the Project, one last commit to Github, without past commits, history.</p>
<p>What I tried:</p>
<pre><code>git push -u github_tmp d3710442f80889be21324d5be14a25fe4a0d0274:refs/heads/main
</code></pre>
<p>This didn't work, this does commit to Github but it shows me not 1 commit but like 26 commits (yes included all the past commits history on the branch)</p>
<p>So, how can I do that? Thanks.</p>
","6","14439702","0","0"
"32147093","4167811","2015-08-21 18:27:03","116","52430","<git><git-remote>","git delete remotes: remote refs do not exist","<h2>In short;</h2>

<ul>
<li>How can I delete remote multiple merged remotes?</li>
</ul>

<h2>More background;</h2>

<p>I have a git repo with tens of remotes which have been merged into master.  I can delete these remotes one at a time by using:</p>

<pre><code>git push --delete origin myBranch-1234
</code></pre>

<p>However this is a slow and tedious process for all remotes.  So I'm trying this command:</p>

<pre><code>git branch -r --merged | grep origin | grep -v master | xargs git push origin --delete
</code></pre>

<p><code>git branch -r --merged</code> lists all merged remotes.<br>
<code>grep origin</code> tells the command to include origin.<br>
<code>grep -v master</code> tells the command to exclude master.<br>
<code>xargs git push origin --delete</code> tells the command to delete the list of remotes.</p>

<p>All together, I expect this to gather all merged remotes and delete them.</p>

<p>When I run the above command, I receive the following for every merged remote;</p>

<pre><code>error: unable to delete 'origin/myBranch-1234': remote ref does not exist
error: unable to delete 'origin/myBranch-1235': remote ref does not exist
error: unable to delete 'origin/myBranch-1236': remote ref does not exist
error: unable to delete 'origin/myBranch-1237': remote ref does not exist
... etc
</code></pre>

<p>However these remotes do exist and I can checkout each of them.  Many sites and people recommend that I run <code>git fetch --prune</code> to clean up missing references.  This does nothing because all of these remotes exist.</p>

<h2>So I ask you, dear stack exchange;</h2>

<ul>
<li>Why can I delete one remote, but not many?</li>
<li>Is my command correct?</li>
</ul>

<p>I think I'm missing something small.  Every time I research this, it seems like I'm doing this correctly, but I'm getting the above errors.</p>

<ul>
<li><a href=""https://stackoverflow.com/questions/2003505/delete-a-git-branch-both-locally-and-remotely"">Delete local and Remote Branches</a></li>
<li><a href=""https://gist.github.com/schacon/942899"" rel=""noreferrer"">gist Delete Merged Remotes</a></li>
</ul>
","0","4167811","0","0"
"68223544","839513","2021-07-02 10:23:44","1","846","<git><git-remote><git-filter-repo>","How to push to the original remote repository after rewriting with git-filter-repo","<p>I removed a sensitive string from all the repo history, using <a href=""https://github.com/newren/git-filter-repo"" rel=""nofollow noreferrer"">git-filter-repo</a>.</p>
<p>Now, in my local git, I see</p>
<ol>
<li>I don't have the <code>remote</code> anymore.</li>
<li>All the commits are with tag about the old commit (<code>replace/deb3de48620ffc7a9f9f0210a3111da398d67c57</code>)</li>
<li>After adding the remote back, all local branches are on different commits from the <code>origin</code> branches.</li>
</ol>
<p>How can I remove the <code>replace/</code> tags and push the whole git history to replace the history in the <code>remote</code>?</p>
","5","839513","",""
"68316727","16299914","2021-07-09 12:22:52","1","2482","<django><git><github><git-remote><github-for-windows>","git: 'remote-https' is not a git command. See 'git --help'","<p>I have been trying to clone my repository and it shows the following error:-
git: 'remote-https' is not a git command. See 'git --help'</p>
<p>Here is my:-
Clone from</p>
<pre><code>https://github.com/NavyaThakur/django-project1
</code></pre>
<p>To directory</p>
<pre><code>C:\Users\91933\github\django-project1
</code></pre>
<p>I tried reinstalling github desktop but no use.
Please help me through this</p>
","1","16299914","",""
"32189047","1363592","2015-08-24 18:18:51","0","33","<git><github><git-submodules><git-remote>","How do I link a shared common git repo as a subdir in other project repos","<p>I have been unable to find the answer to this question after
a couple of days of searching and finding hints suggesting
'git remote' and 'git submodule' but lacking sufficient clarity.</p>

<p>I wrote a CLI python script Banner.py containing a useful importable function.
(see '<a href=""https://github.com/jlettvin/Banner"" rel=""nofollow"">https://github.com/jlettvin/Banner</a>').
I use it in Makefiles, bash scripts, and as a function in other python scripts.</p>

<p>Now suppose I have projects A and B,
both of which could use that script and function.
I want to make a 'util' directory in both A and B containing Banner.py.
Then I want to call '$(HOME)/util/Banner.py' in Makefiles
and import Banner into python scripts in those projects too.</p>

<p>While working on project A I discover a tweak must be made to Banner.py.
I want to modify Banner.py in project A, commit and push it in project A,
and then use pull in project B to get the updated version
and also pull the Banner repo independently elsewhere.</p>

<ol>
<li>What git commands do I use to link the Banner project to projects A and B?</li>
<li>Will 'git status' in project B alert me to the Banner repo change?</li>
<li>Can I be notified which projects to pull when I push Banner from project A?</li>
</ol>

<p>The first question is the one that matters the most to me.
If I can modify the Banner repo and then silently pull it
when I pull repos A and B, that might suffice, but I'd like better.</p>
","0","1363592","",""
"50338743","2712872","2018-05-14 20:45:46","0","281","<git><repository><branch><git-remote>","Git branch and remote in my terminal is different from what I see in github","<p>I am learning git and it is getting confusing for me. I am confused about branches, remote repository and directories. Someone else cloned a code on my local machine. When I do <code>git branch</code> I see these three branches:</p>

<pre><code>ChrisMerge
* EliasWork
develop
</code></pre>

<p>and when I do <code>git remote</code> I get these</p>

<pre><code>chris
origin
prime
</code></pre>

<p>I thought maybe they are directories but I cannot find any directory named chris, develop. So where are the codes stored? Because the codes in each of them are different.</p>

<p>On my git account on github.com, I thought maybe I can see one of these names there. But under branches there are other names like, <code>devel, ver, ...</code>
I need someone to make this clear for me once and for all.</p>
","0","2712872","",""
"15437719","1978617","2013-03-15 16:41:07","93","331917","<git><git-remote>","Git push error: ""origin does not appear to be a git repository""","<p>I am following the <a href=""http://qugstart.com/blog/ruby-and-rails/create-a-new-git-remote-repository-from-some-local-files-or-local-git-repository/"">instructions given here</a> to create a Git repository. All went well until the last line:  </p>

<pre><code>$ git push -u origin master  
</code></pre>

<blockquote>
  <p>fatal: 'origin' does not appear to be a git repository<br>
  fatal: The remote end hung up unexpectedly</p>
</blockquote>

<p>I'm using git version 1.7.11.3 on OS X 10.6.8</p>

<pre><code>$ git remote -v  
</code></pre>

<p>returns nothing</p>

<p>Config file for the repository:  </p>

<pre><code>[core]
repositoryformatversion = 0  
filemode = true  
bare = false
logallrefupdates = true  
ignorecase = true  
</code></pre>

<p>I've had to open sudoers file using sudo visudo command and add the following to it (under # User privilege specification):  </p>

<pre><code>git ALL=(ALL) ALL.  
</code></pre>

<p>Now if I do:  </p>

<pre><code>$ git remote add origin /Volumes/500GB/git-repository/myproject.git  
</code></pre>

<p>it comes back with no error, but I don't see any code in the repository
(it has the aforementioned directories like branches, hooks, ...)  </p>

<p>If I do:</p>

<pre><code>$ git push -u origin master  
fatal: 'origin' does not appear to be a git repository
fatal: The remote end hung up unexpectedly

$ git remote -v   
origin /Volumes/500GB/git-repository/myproject.git (fetch)     
origin /Volumes/500GB/git-repository/myproject.git (push)
</code></pre>
","4","1978617","0","0"
"47726087","2702368","2017-12-09 06:46:13","6","738","<git><git-remote>","Undo set-branches on git remote","<p>I've currently set up my git remote to restrict which branches are fetched:</p>

<pre><code>git remote set-branches myOrigin myBranch
</code></pre>

<p>This adds the proper entries to <code>.git/config</code>:</p>

<pre><code>[remote ""myOrigin""]
    fetch = +refs/heads/myBranch:refs/remotes/myOrigin/myBranch
</code></pre>

<p>Now I want to undo this, and go back to the default configuration:</p>

<pre><code>[remote ""myOrigin""]
    fetch = +refs/heads/*:refs/remotes/myOrigin/*
</code></pre>

<p>How can I do this without manually modifying my <code>.git/config</code>? Is there a <code>git</code> command I can run?</p>
","1","2702368","",""
"12122106","1612483","2012-08-25 12:48:17","6","4171","<git><heroku><git-remote>","`git:remote` is not a heroku command","<p>I deployed an app a few days ago and I am trying to modify some pages. To work on my current version, I wanted to fetch my files from heroku.</p>

<p>I used:</p>

<pre><code>heroku git:remote -a fierce-escarpment-8305
</code></pre>

<p>like it is said on the page 
<a href=""https://devcenter.heroku.com/articles/git"">https://devcenter.heroku.com/articles/git</a>.</p>

<p>and received the message:</p>

<pre><code>  !    `git:remote` is not a heroku command.
  !    See `heroku help` for a list of available commands.
</code></pre>

<p>I don't know what that means. Can anyone help me ?</p>

<p>Thank you</p>
","1","1612483","",""
"29813947","2576839","2015-04-23 04:51:32","9","13941","<git><git-push><git-remote>","GIT: fatal: 'master' does not appear to be a git repository","<p>I was pushing my master branch to my GIT repo and go this error</p>

<pre><code>  fatal: 'master' does not appear to be a git repository
</code></pre>

<p>On the advice of a stack question I typed</p>

<pre><code>  git remote -v
</code></pre>

<p>and got</p>

<pre><code>  heroku    https://git.heroku.com/peaceful-cove-8372.git (fetch)
  heroku    https://git.heroku.com/peaceful-cove-8372.git (push)
  origin    https://github.com/SimonWalsh1000/breathe.git (fetch)
  origin    https://github.com/SimonWalsh1000/breathe.git (push)
</code></pre>

<p>I then typed</p>

<pre><code>   simonalice$ git push -u origin master
</code></pre>

<p>And it worked but said</p>

<pre><code>   Branch master set up to track remote branch master from origin.
</code></pre>

<p>I am very new to GIT and I am not fully sure what has happened. I would be very grateful if someone could explain this sequence to me. I haven't been able to get clear answers. Is my master branch now, the master branch in GIT or is it some clone?</p>

<p>Many thanks</p>
","3","2576839","0","0"
"12201083","1185254","2012-08-30 16:06:30","18","23422","<git><git-branch><git-push><git-remote>","""src refspec does not match"" and ""failed to push some refs"" errors on git push","<blockquote>
  <p><strong>Possible Duplicate:</strong><br>
  <a href=""https://stackoverflow.com/questions/959477/error-when-git-push-to-github"">Error when &ldquo;git push&rdquo; to github</a>  </p>
</blockquote>



<p>I tried to push my new branch (let's just call it <code>new_branch</code>) to remote rep. There is no such branch there yet, but <code>git push origin new_branch:new_branch</code> should create it. When I try to do it, this is what I get:</p>

<pre><code>error: src refspec new_branch does not match any.
error: failed to push some refs to 'ssh://git@***'
</code></pre>

<p>I dug through million of questions like this on SO, but none of them specified these two errors at once and they referred only to <code>master</code> branch (I don't know if it makes any difference).</p>

<p>What I already tried include <code>commit</code>, <code>reset</code> and <code>push</code> in many configurations. And they didn't work so far. I suppose there may be some issue with <code>HEAD</code>, because I messed with it some time ago. But it's a guess and I don't even know how to check it properly, since GIT is still a <em>teeny-tiny</em> mystery for me.</p>

<p>So - how can I get rid of these errors and push my local branch to remote repository?</p>
","1","1185254","0","0"
"19874156","1219463","2013-11-09 08:56:35","0","98","<git><git-remote>","git merge remotes branches","<p>I have two remotes to my git repo.</p>

<pre><code>origin/master
origin/develop
beta/master
beta/develop
</code></pre>

<p>my <code>origin/develop</code> is 2 commits above the beta/master.I want to merge these two commits on beta/master and push to beta.But when I do <code>&gt;git merge beta/master origin/develop</code>,it gives everything upto date.While I see with git log <code>beta/master</code>,it doesn't have those commits.</p>

<p>How do I merge these branches ?</p>
","3","1219463","",""
"12205820","805082","2012-08-30 21:29:52","1","82","<git><git-branch><git-remote>","Created a git remote which points to an external git repo. Permission denied when I do a pull","<p>I have a project where I want to push ""official"" code to one server, while ""test"" code on another. I have two git repositories living in two completely different servers (for reasons that are not in my control). Let's call the servers Server_ONE and Server_TWO. Since the code for these two projects are the same, I want to manage this project from a single place on my local machine.</p>

<p>And so I did this:</p>

<pre><code>#These work fine
git clone ssh://user@SERVER_TWO:my_project.git
git remote add Server1_branch user@SERVER_ONE:my_project.git

#This fails
git fetch Server1_branch master
user@SERVER_ONE's password: #I have no idea what password to enter. 
Permission denied (publickey,gssapi-with-mic,password).
</code></pre>

<p>I know that Server_ONE is denying permissions. But I have no idea where to add permissions?</p>

<p>I am NOT using Github. These are both private repositories. </p>
","4","805082","",""
"33058069","2193439","2015-10-10 19:24:54","1","89","<git><git-commit><git-remote><git-reset><git-revert>","Hard reset to a previous git Commit - Not working","<p>I have run</p>

<pre><code>git log
</code></pre>

<p>And find this-</p>

<pre><code>    C:\WAMP\www\gtwhero [panelist_qa_AJAX_solution]&gt; git log
    commit afbda8a710aab851937532543bb0a99f246874e3
    Merge: 19323e3 cfde9ef
    Author: S. M. Abrar Jahin &lt;abrarjahin@live.com&gt;
    Date:   Sun Oct 11 00:51:40 2015 +0600

        Merge branch 'panelist_qa_AJAX_solution' of https://github.com/techmarket/gtwhero into panelist_qa_AJAX_solution

    commit 19323e3d1c8055c324a7ed65c3868e92420aad9f
    Author: S. M. Abrar Jahin &lt;abrarjahin@live.com&gt;
    Date:   Sun Oct 11 00:48:43 2015 +0600

        nothing

    commit cfde9eff38fccd15dfc521e7ba075622a31a5a6e
    Merge: 38a68bd b773dd2
    Author: Platon &lt;heonozis@mail.ru&gt;
    Date:   Sat Oct 10 17:08:30 2015 +0300

        Merge remote-tracking branch 'remotes/origin/master' into panelist_qa_AJAX_solution

        Conflicts:
            app/Http/Controllers/WebinarController.php

    commit b773dd225b8ffa34cb9231a4e58063756d7e53f1
    Merge: 1d9923d 21f19e3
    Author: Platon Mysnyk &lt;Heonozis@mail.ru&gt;
    Date:   Sat Oct 10 16:04:29 2015 +0300

        Merge pull request #98 from techmarket/fix-webinar-hosts-all-questions-issue

        Fix webinar hosts all questions issue

    commit 21f19e3585329d3d2006e32254ff62808b241f90
    Author: Ronak &lt;coolronak.shah@rediffmail.com&gt;
    Date:   Sat Oct 10 16:27:21 2015 +0530

        Reverse the QA order in Webinar host Layout

    commit ea539597995011952b2ca083ae61b4ca1c4176aa
    Author: Ronak &lt;coolronak.shah@rediffmail.com&gt;
    Date:   Sat Oct 10 16:12:28 2015 +0530

        Fix Webinar Host Layout QA section update and Also changed the Alert message for Vote chart refreshed in host layo
    commit 38a68bda7d0e7c13d92bf42f791f9c3e805d909d
    Author: S. M. Abrar Jahin &lt;abrarjahin@live.com&gt;
    Date:   Sat Oct 10 16:23:39 2015 +0600

        ""panelist_id"" and auth fix with help of @Ronak

    commit 3ba2bfea5d7ad8ff4a83b23595c7a9841bc064b2
    Author: S. M. Abrar Jahin &lt;abrarjahin@live.com&gt;
    Date:   Sat Oct 10 13:31:08 2015 +0600

        Animation for removing item

    commit 2181c108c76f187c09744ae6df131f8f80f0b16d
    Author: S. M. Abrar Jahin &lt;abrarjahin@live.com&gt;
    Date:   Sat Oct 10 12:27:53 2015 +0600

        Animation Added in QA

    commit 180337bfe91686d137e3222c196e626f712832b1
    Author: S. M. Abrar Jahin &lt;abrarjahin@live.com&gt;
    Date:   Sat Oct 10 12:17:34 2015 +0600

        All AJAX of this page ""http://localhost/gtwhero/public/webinar/LB42JgKdjEAOAe5b37MV/panelist"" done

    commit e25c6c19605627a00ca033139c2d98af0feacacf
    Author: S. M. Abrar Jahin &lt;abrarjahin@live.com&gt;
    Date:   Sat Oct 10 07:45:42 2015 +0600

        Before breakfast - done, remaining AJAX query
</code></pre>

<p>The code is already pushed in github.</p>

<p>I want to go back to the state when I have made a commit-</p>

<pre><code>    commit 3ba2bfea5d7ad8ff4a83b23595c7a9841bc064b2
    Author: S. M. Abrar Jahin &lt;abrarjahin@live.com&gt;
    Date:   Sat Oct 10 13:31:08 2015 +0600

        Animation for removing item
</code></pre>

<p>So, what I had tried is-</p>

<blockquote>
  <p>git reset --hard 3ba2bfea5d7ad8ff4a83b23595c7a9841bc064b2</p>
</blockquote>

<p>When I run it, it says, ""<strong>HEAD is now at 3ba2bfe Animation for removing item</strong>""</p>

<p>But I am finding that, it is not the state when I had made the commmit.</p>

<p>What can I do, can anyone please help?</p>
","4","2193439","",""
"16496581","579840","2013-05-11 11:25:10","3","161","<git><repository><git-remote>","How to keep a second git remote repository for selected commits (states)","<p>I want to keep two separate git remote repositories for a project (while having one local copy). One should be the development repository and one should be the representative public repository. I want the public repository to contain only selected states, i.e. I want to commit only the stable versions without the in-between history of small commits. As far as I understand Git if I just commit every now and then to the public repository it will automatically update the whole history of commits. Is there a way around this?</p>
","0","579840","0","0"
"33910395","2345960","2015-11-25 07:05:42","2","423","<github><local><commit><undo><git-remote>","Error: Undo last git commit on both local and remote","<p>Let say I have a branch on my local <code>A</code> and this is exist in remote as well <code>origin/A</code>. Both my local and remote branch is in sync. For example in local I have commit like - <code>C1</code>, <code>C2</code>, <code>C3</code> and <code>C4</code> and same in my remote as well.</p>

<p>Now I want to revert the change that I commit for <code>C4</code>. I already pushed this to remote, so I want to do that in remote as well.</p>

<blockquote>
  <p>NOTE: I found lot of question in stackoverflow for this. Here is
  <a href=""https://stackoverflow.com/questions/6459080/how-can-i-undo-a-git-commit-locally-and-on-a-remote-after-git-push"">one</a>. But it's not working for me! </p>
</blockquote>

<p>As per this I tried: </p>

<pre><code>git reset --hard HEAD~1
git push -f origin A
</code></pre>

<p>First command works fine and my local version does not have the <code>C4</code> commit now.</p>

<p>Problem is in the second command. It showing <code>remote: error: denying non-fast-forward refs/heads/A (you should pull first)</code>.</p>

<p>How to solve this issue?</p>
","1","2345960","",""
"17441279","846910","2013-07-03 06:39:24","3","3393","<git><gitignore><git-pull><git-remote><git-checkout>","git: ignore a file on pull from remote1, but push local version to remote2","<p>I have 3 git repositories:</p>

<ul>
<li><code>local</code>: my development repo on my local machine;</li>
<li><code>remote1</code> used for collaboration with other developers;</li>
<li><p><code>remote2</code> which is a Production server.</p>

<ol>
<li><p>I would like to <code>pull</code> regularly from <code>remote1</code> to my <code>local</code> repo and keep some local tracked files intact (i.e. fetch and merge from <code>remote1</code>, but exclude some local tracked files from being merged).</p></li>
<li><p>On the other side, I would like to regularly <code>push</code> to <code>remote2</code> and I would like local tracked files to be pushed as well.</p></li>
</ol></li>
</ul>

<p>In other words, I would like to have the following versions of <code>file1</code>:</p>

<ul>
<li><code>local</code>: file1 <em>v.1</em></li>
<li><code>remote1</code>: file1, <em>v.2</em></li>
<li><code>remote2</code>: file1, <em>v.1</em></li>
</ul>

<p>Note: <code>file1</code> can be anything (.css, .html, even .png)</p>

<p>I have tried the following approaches:</p>

<ul>
<li><code>.gitignore</code> a file (does not work, the file becomes being tracked again after pull from <code>remote1</code>)</li>
<li><code>git pull --no-ff --no-commit remote1 master</code>, then <code>git checkout --ours file1</code> according to <a href=""https://stackoverflow.com/questions/2073841/how-can-i-discard-remote-changes-and-mark-a-file-as-resolved"">this</a> (does not work, file1 becomes v.2)</li>
<li><code>.git/info/exclude</code> as described <a href=""https://stackoverflow.com/questions/1753070/git-ignore-files-only-locally/1753078#1753078"">here</a> (does not work, nothing is ignored and even if it is ignored, <code>file1</code> will not be pushed to <code>remote2</code> then) </li>
</ul>
","0","846910","0","0"
"50764051","47633","2018-06-08 15:36:47","3","1936","<git><git-push><git-pull><git-remote><git-stash>","git: best way to ""stash"" changes to continue work from a remote repo","<p>As far as I understand stashes are local, and are not meant to be pushed to remote repos.</p>

<p>Sometimes I have ongoing work that is not ready to be committed, but that I have to somehow share with other workers or with myself accessing from a different workstation.</p>

<p>What would be the best way to emulate some kind of ""remote stash"" with git or to use git for a workflow like I've just described?</p>
","3","47633","0","0"
"34198102","","2015-12-10 09:30:28","1","55","<git><reference><branch><git-remote>","git remote branch multiple elements reference","<p>A public Git repository was cloned to local storage. The repository is for MSM SoC Linux kernel development.</p>

<pre><code>git remote show origin
</code></pre>

<p>generates a long list of tracked remote branches.
Here an example of one list item</p>

<blockquote>
  <p>caf/linaro/linux-linaro-stable/v3.14/topic/arm64-apm     tracked</p>
</blockquote>

<p><strong>Question 1</strong><br>
What type of stuff does the element <em>topic</em> refer to?<br>
What type of stuff does the element <em>v3.14</em> refer to?<br>
What type of stuff does the element <em>linux-linaro-stable</em> refer to?<br>
What type of stuff does the element <em>linaro</em> refer to?<br>
What type of stuff does the element <em>caf</em> refer to?  </p>

<p>I am <strong>not</strong> asking for the function the particular point might have in the addressed project. I am asking <strong>just</strong> for the type of the stuff/object.</p>

<p><strong>Question 2</strong>
Why must the reference to the <em>arm64-apm</em> branch include all these elements?
Why can't it be in the simple form</p>

<pre><code>&lt;remote name&gt;/&lt;branch name&gt;
</code></pre>

<p>as learned from most Git books.</p>
","0","","",""
"17805849","2608241","2013-07-23 09:05:03","1","84","<git><web><versioning><git-remote><git-flow>","setting up git and git-flow for 2 versions of a website. Remote access for some developers","<p>I'm looking for the best deal to setting up git with the way I work, my dev team and I :
We woold like to use git for a website versionning with a remote webserver and some local developers. But we would have 2 states of the website online : one for production and one for develoments. We have already done a cp -fr of the root production website dir to another new dir and make virtualHosts with Apache to these 2 dirs.</p>

<p>I've found good things with git-flow, but I d'ont know exactly how to ""link"" the 2 website versions  with git and remotely access them indenpendently :
Must I ""git init --bare"" my online root website production version (with eventually the good post hook to protect .git files from http access and separate the dir)
then, must I do same thing for the develop version in the other dir (that it must be online to in order to test it), or must I just make a branch or clone with git ?</p>

<p>And how the local machine can acces all those 2 remote confs ?</p>

<p>We need to make some corrections on the develop remote online version for testing, and when it clean, put changes from the dev version to the prod version.</p>

<p>All local git dev workstations are ready with ssh acces (with pub-ssh-rsa.key in remote server :in /home/git/.ssh/....)</p>
","0","2608241","0","0"
"57681907","4346115","2019-08-27 20:35:32","1","172","<git><branch><git-remote>","How can I fix git local branch tracking issue?","<p>Hi! recently I had a issue with my local branch (""new-design""), where from months ago it was tracking its remote branch (origin/new-design) perfectly.  In this week I realize that my commits wasn't reflecting in this remote branch, also, it changed unexpectly to master remote branch (origin/master).</p> 

<p><p>From this: <b>local/new-design - origin/new-design</b> to this: <b>local/new-design - origin/master</b><p></p>

<p>Tracking the repository history I had never opened a pull-request (this whould not change traching branch references) neither changed mannualy this references. </p>

<p>Any ideas about what happened here? And more important, what is the best method (rebate-onto, compare, etc) to move all commits done in master to new-design branch?</p>
","1","4346115","0","0"
"17832012","1003575","2013-07-24 10:58:18","0","78","<git><git-remote>","Working locally and remotely at the same time with git","<p>I cloned a git repository from a git server. </p>

<p>I want First to create a new branch locally (in my local code). and then I want to make smoe changes on the code and then make somme local commit.</p>

<p>And then I want to commit the new local branch and the local commits to the git server.</p>

<p>How to do that?</p>
","0","1003575","",""
"38837705","5965865","2016-08-08 20:10:43","84","40326","<git><git-remote>","What is the difference between 'origin' and 'remote' in git commands?","<p>In git lingo, are <code>origin</code> and <code>remote</code> the same thing? Or does <code>origin</code> refer to the local directory?</p>

<p>In the case of <code>git push -u origin master</code>: Which of the following interpretation is correct?</p>

<ol>
<li>""push everything upstream to the remote repo called 'origin' and its branch 'master'""</li>
<li>""push everything from the local originating repo called 'origin' to the upstream 'master' branch""</li>
</ol>

<p>Appreciate any clarification!</p>

<p>The answers to my question clarified two issues for me: </p>

<ol>
<li><code>origin</code> refers to the remote repo, rather than the local cloned copy of the remote repo. This is not clear when one reads that <code>origin</code>is an alias of <code>remote</code> and is created at the time of <code>git clone</code>  </li>
<li><code>origin</code> refers to the remote repo in <code>git push -u origin master</code> because local copies of the repo are implied and ""rarely referenced"".</li>
</ol>
","4","5965865","0","0"
"39047947","3022952","2016-08-19 21:31:07","5","1427","<git><git-remote>","How would I git remote prune just a specific remote branch?","<p>One of my coworkers ""reused"" a branch name, so every time I pull, I get an error message:</p>

<pre><code>error: 'refs/remotes/origin/branch' exists; cannot create 'refs/remotes/origin/branch/subbranch'
...
error: some local refs could not be updated; try running 
 'git remote prune origin' to remove any old, conflicting branches
</code></pre>

<p>The thing is, I don't want to do a wholesale remote pruning - I'm paranoid, and I want to keep those local references around, in case other coworkers have screwed up in new and interesting ways.</p>

<p>Is there a way I can prune just the offending branch without also pruning all of the other branches which are happily sitting as remote refs on my local repository?</p>
","1","3022952","",""
"50969027","3383167","2018-06-21 12:50:54","0","72","<git><git-remote>","Git push shows git comments","<p>I have a project in remote git repository and when I push the code it is showing as following in the remote repository:</p>

<pre><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD
&lt;?php
/**
 * Front to the WordPress application. This file doesn't do anything, but loads
 * wp-blog-header.php which does and tells WordPress to load the theme.
 *
 * @package WordPress
 */

/**
 * Tells WordPress to load the WordPress theme and output it.
 *
 * @var bool
 */
define('WP_USE_THEMES', true);

/** Loads the WordPress Environment and Template */
require( dirname( __FILE__ ) . '/wp-blog-header.php' );
=======
&lt;?php

/**

 * Front to the WordPress application. This file doesn't do anything, but loads

 * wp-blog-header.php which does and tells WordPress to load the theme.

 *

 * @package WordPress

 */



/**

 * Tells WordPress to load the WordPress theme and output it.

 *

 * @var bool

 */

define('WP_USE_THEMES', true);



/** Loads the WordPress Environment and Template */

require( dirname( __FILE__ ) . '/wp-blog-header.php' );

&gt;&gt;&gt;&gt;&gt;&gt;&gt; dev-wip
</code></pre>

<p>As you can see there are some git comments(? I don't know the proper term, sorry.) can be seen in the code such as:</p>

<p><code>&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt;&lt; HEAD</code></p>

<p><code>&gt;&gt;&gt;&gt;&gt;&gt;&gt; dev-wip</code></p>

<p>Can anyone help me with why it is not rendering properly?</p>
","6","3383167","",""
"39080765","2409793","2016-08-22 13:23:04","3","2672","<git><push><git-remote>","Will git push --force delete remote files?","<p>If i perform a <code>git push --force &lt;remoterepo&gt; &lt;remotebranch&gt;</code></p>

<p>will this delete files in the <code>&lt;remotebranch&gt;</code>, if these do not exist in my branch?</p>

<p>(apart of course from prioritizing my local changes over remote ones, when it comes to files existing in both local and remote branches)</p>
","1","2409793","0","0"
"14242254","263900","2013-01-09 16:52:32","0","1111","<git><git-remote><git-untracked>","error: Untracked working tree file '.gitignore' would be overwritten by merge","<p>What do I have to do to get around this ""already up-to-date"" error:</p>

<p>I created a new local repo and tried to pull the remote master branch.  It stumbled over my new .gitignore and errored out.  I deleted the .gitignore (to be replaced with the repo's), but now I can't pull that branch.</p>

<pre><code>User@BRD-09-DEC10 /c/path/to/local (master)
$ git pull stage master
user@website.com password:
remote: Counting objects: 1211, done.
remote: Compressing objects: 100% (1191/1191), done.
remote: Total 1211 (delta 81), reused 0 (delta 0)
Receiving objects: 100% (1211/1211), 83.05 MiB | 491 KiB/s, done.
Resolving deltas: 100% (81/81), done.
From ssh://website.com/path/to/repo
 * branch            master     -&gt; FETCH_HEAD
error: Untracked working tree file '.gitignore' would be overwritten by merge.

User@BRD-09-DEC10 /c/path/to/local (master)
$ ls -al
total 5
drwxr-xr-x    4 User Administ        0 Jan  9 11:35 .
drwxr-xr-x   17 User Administ     4096 Jan  9 11:32 ..
drwxr-xr-x    7 User Administ     4096 Jan  9 11:38 .git
-rw-r--r--    1 User Administ       19 Jan  9 11:35 .gitignore
drwxr-xr-x    3 User Administ        0 Jan  9 11:35 nbproject

User@BRD-09-DEC10 /c/path/to/local (master)
$ rm .gitignore

User@BRD-09-DEC10 /c/path/to/local (master)
$ git merge stage/master
fatal: 'stage/master' does not point to a commit

User@BRD-09-DEC10 /c/path/to/local (master)
$ git pull stage master
user@website.com's password:
From ssh://website.com/path/to/repo
 * branch            master     -&gt; FETCH_HEAD
Already up-to-date.
</code></pre>

<p>I was hoping that I get this because the remote branch is already stored locally (it took a while to git the first time), but if that's the case, then I guess I don't know how to merge that branch.</p>

<p>This happens periodically - any idea why?</p>
","0","263900","",""
"35591887","2926340","2016-02-24 02:00:14","39","60414","<git><git-remote><git-fetch>","How to undo 'git fetch'","<p>I just added additional <code>remote A</code> to my <code>repo B</code> and then run <code>git fetch A</code>. How can I undo the fetch? If I just remove <code>remote A</code>: <code>git remote remove A1</code> would it undo fetch?</p>

<h3>UPDATE:</h3>

<pre><code>$ git remote add A path/to/A
$ git fetch A
</code></pre>

<p>The above are commands I run so in result I got all branches fetched to my <code>repo B</code> however I just need one specific branch from <code>repo A</code> and I need it to go in specific folder on <code>repo B</code> but that is another story <a href=""https://stackoverflow.com/questions/35590795/merge-code-between-two-dfferent-git-repositories"">Merge code between two dfferent git repositories</a>.</p>
","12","2926340","0","0"
"51162223","8908459","2018-07-03 20:12:43","1","478","<git><bitbucket><git-pull><git-remote>","Process for syncing branches between git remotes","<p>I am working on my own copy of a git repo called buildroot. I created a copy of the repo on the free bitbucket server. I am trying to periodically sync my private repo from the mainline buildroot repo.</p>

<p>I pulled down the local copy to my PC using</p>

<pre><code>git clone https://my_user@bitbucket.org/my_user/buildroot.git
</code></pre>

<p>Then I added the mainline buildroot repo as a remote</p>

<pre><code>git remote add mainline https://git.buildroot.net/buildroot
</code></pre>

<p><code>git remote -v</code> now looks like this</p>

<pre><code>mainline    https://git.buildroot.net/buildroot (fetch)
mainline    https://git.buildroot.net/buildroot (push)
origin      https://my_user@bitbucket.org/my_user/buildroot.git (fetch)
origin      https://my_user@bitbucket.org/my_user/buildroot.git (push)
</code></pre>

<p>I can pull the changes from as single branch (such as master) on the <code>mainline</code> remote and these changes show up in my <code>origin</code> repo after a <code>git push</code></p>

<pre><code>get pull mainline master
git push
</code></pre>

<p>However, new branches never show up on my <code>origin</code> repo. Do I have to explicitly checkout each one of these from <code>mainline</code> and then push to <code>origin</code> or is there a better way to do this?</p>

<p>As seen below, my private repo is missing branches 2018.02.x and 2018.05.x</p>

<pre><code>git branch -a

* master
remotes/mainline/2017.02.x
remotes/mainline/2017.05.x
remotes/mainline/2017.08.x
remotes/mainline/2017.11.x
remotes/mainline/2018.02.x
remotes/mainline/2018.05.x
remotes/mainline/master
remotes/mainline/next
remotes/origin/2017.02.x
remotes/origin/2017.05.x
remotes/origin/2017.08.x
</code></pre>
","0","8908459","0","0"
"69517959","15943622","2021-10-10 18:36:45","-4","537","<git><github><git-push><git-remote>","I'm trying to push my create-react-app code to github but its not pushing any code and only created a readme file","<p>i created a new react app using create-react-app as seen below</p>
<p><a href=""https://i.stack.imgur.com/t9UZO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/t9UZO.png"" alt=""enter image description here"" /></a></p>
<p>I pushed the code following the instructions set by github</p>
<p><a href=""https://i.stack.imgur.com/sgOYZ.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/sgOYZ.png"" alt=""enter image description here"" /></a></p>
<p>But, as you will see in the next image, the code hasn't been pushed and only a readme file exists in the repo. How to I solve this?</p>
<p><a href=""https://i.stack.imgur.com/TuPli.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/TuPli.png"" alt=""enter image description here"" /></a></p>
","1","15943622","",""
"6019113","87973","2011-05-16 14:47:24","7","3466","<git><git-remote><git-branch>","How to follow a file in git","<p>I have deleted a file a couple of times in git, but it keeps turning up again as other branches are merged; I guess something like this:</p>

<pre><code>                      o--  a topic  --o
                     /                 \
o-- [create file] --o-- [delete file] --o-- [file exists again]
</code></pre>

<p>It's especially hard for me to grasp what's going on since we work with git using ""internal releases"", i.e. I create release branches that I push, which our release manager pulls and merges down to master and I pull his master.</p>

<p>How can I find out where I (or someone else) deleted a file and what merge(s) that re-introduced the file? Thanks!</p>
","1","87973","0","0"
"52664526","9239879","2018-10-05 11:22:17","2","829","<git><git-remote>","Changing source branch in git","<p>I was wondering if it possible to change the source branch from which I created branch, the thing is, months ago I had a branch created from dev branch, meanwhile, month later, we create our branches from release branch, how to solve this issue?</p>
","4","9239879","",""
"52671254","1174405","2018-10-05 18:18:36","1","143","<git><location><git-remote>","using git remote command outside the repository dir","<p>Is there any way to pass a location of the repository to the command <code>git remote</code> so the command will take it as a subject to work on?</p>

<p>I want to call</p>

<pre><code>git remote add origin &lt;url&gt;
</code></pre>

<p>outside the repository directory, is it possible to pass the repository location as a parameter to the command?</p>

<p><a href=""https://git-scm.com/docs/git-remote"" rel=""nofollow noreferrer"">git remote documentation</a> - do you see any ways to do that?</p>
","2","1174405","",""
"36644042","2562058","2016-04-15 09:59:34","2","1739","<git><atlassian-sourcetree><git-remote><sourcetree>","Creating a git remote on a Windows network location using SourceTree: fatal: unable to get current working directory: No error","<p>I want to create a remote repo in a network place with Windows name <code>\\company.net\dumptruck\repos\MyRepo</code> by using SourceTree. I have read around but I haven't found a solution to my case. Here is what I have done.</p>

<ol>
<li>I tried to open the terminal from SourceTree but it didn't open. This because I guess you need to create/clone a repo first.</li>
<li>Then I have tried to create a new repo through the SourceTree GUI by providing either <code>\\company.net\dumptruck\repos\</code> and <code>//company.net/dumptruck/repos/</code> as path. In both the cases I got the error <code>fatal: unable to get current working directory: No error</code> </li>
<li>I thought that it may be better to go with the Command Line. Therefore, I created a local repo in <code>C:\Somewhere\MyRepo</code> in order to be able to open the terminal. Then, I issued <code>cd //company.net/dumptruck/repos/</code> followed by <code>git init --bare</code>. I get the same error as before: <code>fatal: unable to get current working directory: No error</code> Note that I can reach the folder <code>//company.net/dumptruck/repos/</code></li>
<li>Both the commands <code>pwd</code> and echo <code>$PWD</code> provide <code>//company/dumptruck/repos/</code> </li>
</ol>

<p>Any hint?</p>
","0","2562058","0","0"
"49137948","6382627","2018-03-06 18:46:56","3","7596","<git><github><git-remote>","Fatal error in remote git push","<p>I'm trying to push a local project to an empty GitHub repository (created only minutes ago), but I'm getting some errors.</p>

<p>I created my GitHub repository following the instructions <a href=""https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/"" rel=""nofollow noreferrer"">here</a>, and made my initial local git commit:</p>

<pre><code>git add .
git commit -m ""Initial commit"" (this was successful)
git remote add origin https://github.com/[name]/[repo].git
git remote -v
</code></pre>

<p>Everything worked fine through that point, but next I tried this:</p>

<pre><code>git push -u origin master
</code></pre>

<p>And got back the following stdout:</p>

<pre><code>Counting objects: 8, done.
Delta compression using up to 8 threads.
error: garbage at end of loose object 'b3872d786a175232c101cca4bbd8f2cddde5622d'
fatal: loose object b3872d786a175232c101cca4bbd8f2cddde5622d (stored in .git/objects/b3/872d786a175232c101cca4bbd8f2cddde5622d) is corrupt
fatal: The remote end hung up unexpectedly
fatal: The remote end hung up unexpectedly
fatal: write error: Bad file descriptor
error: failed to push some refs to 'https://github.com/[name]/[repo].git'
</code></pre>

<p>This is the first time I've tried to push a local project to GitHub, and I can't seem to find a solution to my problem on GitHub's site or StackOverflow. Anybody know what to do here? Running OS X.</p>
","7","6382627","0","0"
"56895679","11247758","2019-07-05 01:57:33","1","60","<github><git-pull><git-remote>","Can I download contents remotely by ""git pull staff master"" for as many times as I want?","<p>I downloaded a bunch of files into a local folder by ""git pull staff master"" a few days ago. But I deleted the entire folder by mistake. Then I tried to download those files again by ""git pull staff master"" again. Although I got </p>

<pre><code>From ...(URL)
* branch      master    -&gt; FETCH_HEAD
Already up to date
</code></pre>

<p>I didn't have files in fact downloaded in the folder. During those days, I didn't make any changes. The URL of the remote repo remained the same.</p>

<p>How can I download those files again? Is there a setting like ""can only git pull once"" that prevents me from downloading those files for more than once?</p>
","0","11247758","",""
"73786616","18791843","2022-09-20 12:20:11","2","211","<git><azure><github-actions><permission-denied><git-remote>","Permission Denied with git remote add in Github Actions","<p>Locally I'm able to do the git deploy and push.
In my github actions the following is set after npm build has run:</p>
<pre class=""lang-bash prettyprint-override""><code>cd build
git init
git config user.email 'email@email.com'
git config user.name 'github-actions - CI'
git add -A
git commit -m 'build by GA'
git remote add azure https://${{ secrets.GITUSER }}:${{ secrets.GITPW }}@&lt;azure_local_git_url&gt;.git
</code></pre>
<p>OUTPUT:</p>
<p><a href=""https://i.stack.imgur.com/VoiSO.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/VoiSO.png"" alt=""enter image description here"" /></a></p>
<p>After this there would be a git push, but clearly the problem is with git remote add.</p>
<p>Cant seem to figure out whats going on.</p>
<p>EDIT:
In azure there is an App service, used with local git deployment, and the user and password, which is set in the secrets GITUSER and GITPW, is Application Scope level. This was used by a jenkins server where it worked.</p>
","0","18791843","",""
"73942106","6705194","2022-10-04 00:44:10","0","116","<git><git-remote>","git remote has no output","<p>I recently got a new Apple silicon Mac, where previously I've used Linux/Ubuntu. I'm using zsh in the default terminal app. I noticed that using</p>
<pre><code>git remote
git remote -v
</code></pre>
<p>have no output even though I'm in a git repository that has a remote. For example</p>
<pre><code>git push
</code></pre>
<p>works and</p>
<pre><code>cat .git/config
</code></pre>
<p>gives</p>
<pre><code>...
[branch &quot;master&quot;]
        remote = &lt;URL OF REMOTE&gt;
        merge = refs/heads/master
...
</code></pre>
<p>When I use my Linux machines, I get the expected result which is:</p>
<pre><code>$ git remote
origin
</code></pre>
<p>and</p>
<pre><code>$ git remote -v
origin &lt;URL OF REMOTE&gt; (fetch)
origin &lt;URL OF REMOTE&gt; (push)
</code></pre>
<p>so I'm wondering why <code>git remote</code> isn't working.</p>
","3","6705194","",""
"57177736","11745900","2019-07-24 07:44:36","0","134","<git><version-control><git-remote>","Working with multiple remotes in git: ""Your branch is ahead of ""origin/master"" by X commits..""","<p>We have a project with two developers where we have one remote repository that we have both cloned locally and where we push our work.</p>

<p>After pushing changes, we go to another server (let´s call it S), where the actual magic happens ie. production. Here we have to pull the changes of course from the previously mentioned repo.</p>

<p>For reasons we have different remote repos (alt for me and origin for my friend) so when I want my remote changes to update in production I use <code>git pull alt master</code> there is a notice that states:</p>

<p><code>""Your branch is ahead of ""origin/master"" by X commits. Use ""git push"" to publish your local commits.""</code></p>

<p>What does this mean? Isn´t the actual advice that my friend needs to use 'git pull origin master' in order to update it? I have no writing permissions to origin/master so doesn´t that mean that him making <code>git pull origin master</code>in S would make the notice go away? </p>

<p>I understand that this is pretty basic stuff, but we are both pretty new at this stuff so any help is greatly appreciated! :) I also browsed through most of the similar kind of questions, but couldn´t find an answer.</p>
","0","11745900","",""
"74080166","11934175","2022-10-15 14:11:00","0","246","<git><gitlab><git-submodules><git-remote>","Commit git submodule in a parent module","<p>I git cloned a public project (read-only)</p>
<p>and I changed some code of it.</p>
<p>and then, I would like to upload it in my private git just for storing.</p>
<p><strong>SUMMARY</strong></p>
<p>I want to make my private git repo which includes a public read-only project edited by myself.</p>
","3","11934175","",""
"74126309","18270309","2022-10-19 13:34:11","0","25","<git><git-remote><git-credential-manager>","git remote - can it be set on the global / system level rather than on the project (repo) level?","<p>as in the subject: is it possible to have a git remote config on the global or system level, rather than for each individual project (repo)?</p>
<p>This is in relation to a scenario in which we are working with two different source control platforms, one of which we are using frequently (default) to code-develop and collaborate, and the other which holds a &quot;clean&quot; mirror / copy of some of our repositories (same name). So the idea would be to push to that second remote some of the projects every now and then, and it would be easier if we did not have to always configure the second remote for each project.</p>
<p>Thank you in advance for the answers.</p>
","1","18270309","",""
"74460343","298209","2022-11-16 12:18:13","0","112","<git><git-remote>","How to configure remote upstream without `git push`","<p>Is it to possible to configure the remote upstream branch for a <strong>new</strong> local branch without doing a <code>git push</code>?</p>
<p>I thought this is what <code>--set-upstream-to</code> option of <code>git branch</code> is for but I get the following error:</p>
<pre><code>$ git branch --set-upstream-to remote2/foobar foobar

fatal: the requested upstream branch 'remote2/foobar' does not exist
hint: 
hint: If you are planning on basing your work on an upstream
hint: branch that already exists at the remote, you may need to
hint: run &quot;git fetch&quot; to retrieve it.
hint: 
hint: If you are planning to push out a new local branch that
hint: will track its remote counterpart, you may want to use
hint: &quot;git push -u&quot; to set the upstream config as you push.
hint: Disable this message with &quot;git config advice.setUpstreamFailure false&quot;
</code></pre>
<p>I'm aware of the config for the push command to do this automatically when pushing but I do not want to use that. What I'm trying to do is writing a script that makes sure ‍main branch is pushed <code>remote1</code> while all other branches are pushed <code>remote2</code>. In particular I want it to (1) clone repo A from <code>origin1</code> (2) add <code>origin2</code> as a remote, (3) checkout a new local branch, (4) make sure <code>git push</code> on this branch goes to <code>origin1</code>. I thought I could do something like this but I get the error above:</p>
<pre><code>$ git clone git@github.com:username/repo1.git $1
$ pushd $1
$ git remote add origin2 git@github.com:username/repo2.git
$ git checkout -b $1
$ git branch --set-upstream-to origin2/$1
$ popd
</code></pre>
","4","298209","",""
"74481983","3455918","2022-11-17 20:54:38","1","62","<git><github><remote-server><git-remote>","Why doesn't github throw an error ! [remote rejected] master -> master (branch is currently checked out) and a remote server does?","<p>Suppose I do this.</p>
<h1>Using github</h1>
<ol>
<li><p>on local machine:
<code>git init testrepo</code></p>
</li>
<li><p>on github: make a repo test.git pressing buttons in the web interface</p>
</li>
<li><p>on local:</p>
</li>
</ol>
<p><code>cd testrepo</code></p>
<p><code>git remote add origin https://github.com/Someuser/test.git</code></p>
<p>and then:</p>
<p><code>touch somefile</code></p>
<p><code>git add .</code></p>
<p><code>git commit -m 'first'</code></p>
<p><code>git push -u origin master</code></p>
<p>Everything is fine and I have my <em>somefile</em> syncronized to github repo.</p>
<h1>Using a remote server</h1>
<ol>
<li><p>on local machine:
<code>git init testrepo</code></p>
</li>
<li><p>on remote machine:</p>
</li>
</ol>
<p><code>git init test.git</code>*</p>
<ol start=""2"">
<li>on local:</li>
</ol>
<p><code>cd testrepo</code></p>
<p><code>git remote add origin remotemachine:~/test.git</code></p>
<p>and then:</p>
<p><code>touch somefile</code></p>
<p><code>git add .</code></p>
<p><code>git commit -m 'first'</code></p>
<p><code>git push -u origin master</code></p>
<p>Oh, no!..</p>
<h2>Error message.</h2>
<p><code>! [remote rejected] master -&gt; master (branch is currently checked out)</code></p>
<p>Everything looks the same. Why does github act differently?</p>
<p>Optionally, what is the remedy? Optionally - because you'll see a bunch of proposed solutions in the below question but none of them is accepted answer.</p>
<p>I am aware of this question <a href=""https://stackoverflow.com/questions/2816369/git-push-error-remote-rejected-master-master-branch-is-currently-checked/"">Git push error '[remote rejected] master -&gt; master (branch is currently checked out)'</a></p>
<p>However it doesn't answer my question.</p>
<p>*After getting my question answered I have understood that <code>git init test.git</code> is a bad practice going reverse to conventions. Because it creates a folder with a .git folder inside of it. This .git folder IS a repo. And what is INSIDE a newly created folder APART from .git IS A WORKING SPACE.</p>
<p><code>git init test.git --bare</code> is ok, however, because this command creates a <code>test.git</code> folder (a bare repo) corresponding to what would be inside a <code>.git</code> folder mentioned above.</p>
","2","3455918","",""
"75010603","234593","2023-01-04 19:52:57","0","31","<git><git-remote><git-reset>","How to move (i.e. reset) a local git upstream tracking branch? e.g. to ""undo"" a `git fetch origin main`","<p>AFAIK the only git command to manipulate upstream tracking branches is <code>git fetch</code> (and <a href=""https://stackoverflow.com/questions/72145463/when-would-git-move-remote-tracking-branches-automatically-without-git-fetch"">other commands that trigger a fetch</a>), but they only really allow a &quot;fast forward&quot; operation against the remote branch.</p>
<p>I would like to have more control and be able to &quot;reset&quot; it like any other local branch, without affecting remote. I <em>think</em> one way is to modify the file at <code>.git/refs/remotes/origin/&lt;branchname&gt;</code> to point to a different SHA, but is that correct/safe?</p>
<h3>Why: to decouple multiple ongoing branches/workstreams</h3>
<p>Let's say I've got:</p>
<pre><code>* (HEAD -&gt; kache/foo, origin/kache/foo) done, ready to push
| * (kache/bar) almost done, commits are atomic
|/
| * (kache/baz) still wip, commits are a mess
|/
* (main, origin/main)
</code></pre>
<p>I discover that <code>foo</code> needs a fresh <code>main</code> (for w/e reason), so I fetch <code>origin/main</code>, rebase <code>foo</code> on top, and then get it merged.</p>
<p>But now, <code>main</code> is far behind <code>origin/main</code>. Before I context switch, getting back a &quot;clean slate&quot; means forwarding <code>main</code> to <code>origin/main</code> and rebasing all branches on top. Should rebase conflicts arise, <code>bar</code> will be easy to fix, but <code>baz</code> won't.</p>
<p>I generally have many local dev branches and working on a single one (<code>foo</code>) has caused a workflow interruption on every other branch. In addition, the more &quot;wip&quot; like <code>baz</code> there are, the worse the mass-rebase overhead will be.</p>
<p>I've already tried/got various &quot;<a href=""https://stackoverflow.com/questions/17315285/rebasing-a-tree-a-commit-branch-and-all-its-children"">rebasing a tree</a>&quot; solutions. I'll keep trying, but solving the general-case means being resilient against (multiple) rebase conflicts, being abort-able (atomic), retryable (recorded resolutions), etc, and AFAIK a general-case turnkey solution doesn't exist.</p>
<p>In this situation, I'd like to just reset <code>origin/main</code> back to <code>main</code>. Once <code>foo</code> is merged, I can delete my local <code>foo</code>, reset my <code>origin/main</code>, and immediately context-switch to <code>bar</code> or <code>baz</code>. Unlike a mass-rebase, it would be fast and would always work. I'd be able to fetch <code>main</code> and mass-rebase later when it's convenient, decoupling my <code>foo</code> workstream from every other.</p>
","5","234593","",""
"75065708","14969991","2023-01-10 05:09:08","0","72","<git><git-branch><git-push><git-remote><git-config>","git push hangs on the ""Total"" line only for a specific branch","<p>I'm trying to push 4 commits on a specific local branch to my remote repository which is on a private Git server. The push progress is displayed as follows:</p>
<pre><code>Enumerating objects: 152, done.
Counting objects: 100% (152/152), done.
Delta compression using up to 12 threads
Compressing objects: 100% (70/70), done.
Writing objects: 100% (105/105), 13.92 KiB | 4.64 MiB/s, done.
Total 105 (delta 59), reused 68 (delta 26), pack-reused 0
</code></pre>
<p>And it hangs there after the 'Total' line. I've tried waiting for more than 10 minutes, but no luck. The commits do not have any large files, all are text files with small changes.</p>
<p>I have tried the following based on responses for similar issues:</p>
<ol>
<li>Increased the git buffer size by running <code>git config --global http.postBuffer 157286400</code></li>
<li>Did a git garbage collection by running <code>git gc</code></li>
<li>Ran a <code>git push -u origin &lt;branch-name&gt;</code></li>
</ol>
<p><strong>Important Note: This only happens for one specific branch, I can push changes as usual on other branches.</strong></p>
<p>PS: I'm on Windows 11, tried GUI clients, Git inside Visual Studio, and git via Terminal, no luck.</p>
","2","14969991","",""
"75154593","20977027","2023-01-18 04:09:03","1","33","<git><git-submodules><git-remote>","How can I clone a subfolder of a git repository into another git repository as a submodule?","<p>I'm new to git and git submodules. Although I've done some research I can't seem to find a proper answer to what I'm trying to achieve.</p>
<p>So suppose I have a repository called Big Repo cloned locally on my machine that contains:</p>
<pre><code>|- FolderA/
|- FolderB/
|- FolderC/
|- FolderD/
</code></pre>
<p>And another repo called Small Repo that contains</p>
<pre><code>|- foo/
    |- FolderE/
           |- content.txt
|- bar/
|- other/
</code></pre>
<p>So what I need is get <strong>only</strong> FolderE from Small Repo and add it to Big Repo locally as a submodule. That is option 1. How can a achieve that? (and I need to be only &quot;FolderE/&quot;, not the entire small repo or &quot;foo/FolderE&quot;).</p>
<p>Option 2 is: since I won't be making any pull/push to Big Repo (I only use it locally to run some code) I can delete the .git folder or change the remote url so that it points to Small Repo, but again I don't want Small Repo to mess with the folders within Big Repo.</p>
<p>So my final structure will be</p>
<pre><code>|- FolderA/
|- FolderB/
|- FolderC/
|- FolderD/
|- FolderE/
     |- content.txt
</code></pre>
<p>And when I run git push it only pushes FolderE and its content to Small Repo. When I run git pull it only pulls FolderE and its content into Big Repo.</p>
<p>What's the best approach to achieve this, assuming it is feasible?</p>
","0","20977027","",""
"75233182","19370784","2023-01-25 11:17:41","2","26","<git><repository><git-remote>","How to find local git repositories without remote origin?","<p>Local git repositories often start out without a remote repository.
How can one find all those repos which haven't been pushed yet (=have no remote origin attached to them)?</p>
<p>Recursive folder searches are slow.</p>
","0","19370784","",""
"75312983","20418783","2023-02-01 16:05:12","0","31","<git><git-remote>","I misstyped git remote add","<p>I misstyped &quot;git remote add origin ...&quot;.</p>
<p>Actually, i typed &quot;git remote add orginin&quot;.
How can i change it back to origin ?</p>
<p>I rather not delete my local repository, if i can just change orginin to origin it would be perfect.</p>
<p>I checked with <code>git remote -v</code>.</p>
<p>I got <code>orginin ssh://git@...git (fetch)</code></p>
<p><code>orginin ssh://git@... (push)</code></p>
<p>I tried <code>git remote set-url origin git://newurl</code>
-&gt; <code>error: No such remote 'origin.</code></p>
","1","20418783","",""
"75330356","3951576","2023-02-03 00:40:40","1","39","<git><fetch><tags><git-remote>","git fetch a tag from a remote, but could not see it from ""git tag""","<p>git fetch a tag from a remote, but could not see it local.</p>
<pre><code>git remote add remote1 c:\repo\project1.git
git fetch remote1 tag_1.0

    From c:\repo\project1
        * tag           tag_1.0  -&gt; FETCH_HEAD

git tag
</code></pre>
<p>git tag does not show the fetched tag tag_1.0. How to list the tag and create a branch from the tag?</p>
","0","3951576","",""
"76001530","15802152","2023-04-13 04:03:14","1","51","<git><ssh><cmd><git-remote>","How to connect to local git repo on another disk?","<p>I have a local source git repo <code>C:\Users\qweta\Documents\scrmd.git\</code> and a local blank repo <code>D:\syb\loc</code>.</p>
<p>I want to add <code>srcmd.git</code> as a remote repo in <code>loc</code>. The adding seems to work:</p>
<pre><code>D:\syb\loc master ❯ git remote add origin &quot;C:\Users\qweta\Documents\scrmd.git\&quot;
D:\syb\loc master ❯ git remote -v
origin  C:\Users\qweta\Documents\scrmd.git&quot; (fetch)
origin  C:\Users\qweta\Documents\scrmd.git&quot; (push)
</code></pre>
<p>But <code>git remote show</code> and <code>git fetch origin</code> give the same error:</p>
<pre><code>D:\syb\loc master ❯ git remote show origin
ssh: Could not resolve hostname c: Name or service not known
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
</code></pre>
<p><strong>Can you give some advice on how to solve this?</strong></p>
<p>My system: Windows 10</p>
<p>My terminal: Command Prompt in Windows Terminal, the master thing in user prompt is added by clink and oh-my-posh extensions to work with git.</p>
<p>This problem doesn't exist when I try to add it to remote reference in a git folder in <code>C:\SOMELOCATION</code>.</p>
","4","15802152","",""
"62831916","11928727","2020-07-10 10:02:29","0","76","<git><github><git-commit><git-remote>","How do I remove a file from local git repository and local file system but not from remote repository?","<p>I have been trying to delete a file from my local file system and local git repository.</p>
<p>I am using <code>git rm --cached &lt;file name&gt;</code></p>
<p>But whenever I am working with another file and push the changes git also deletes the locally removed file from my remote repository. I want the file to stay on my GitHub.</p>
<p>I would really appreciate some help.</p>
","4","11928727","",""
"8288353","158449","2011-11-27 19:28:23","2","1572","<git><git-remote>","How can I display the location of remotes for a git repository?","<p>Is there a way to display all known information about a repository's remotes, either individually or all at once? </p>
","0","158449","0","0"
"44695733","7273347","2017-06-22 09:41:08","1","136","<git><version-control><git-remote>","git branch unkown but checkout works","<p>on my remote repository a new branch has been created. In GitBash in my Working Directory (on master branch) I type <code>git remote update</code> and <code>git pull</code>. To my understanding <code>git remote update</code> will update all branches set to track remote ones as explained here:
<a href=""https://stackoverflow.com/questions/17712468/what-is-the-difference-between-git-remote-update-git-fetch-and-git-pull"">What is the difference between &#39;git remote update&#39;, &#39;git fetch&#39; and &#39;git pull&#39;?</a></p>

<p>So when I type <code>git diff master newBranch --name-only</code> I expected to see a list of files which are different in both branches. But instead I got the following error message:</p>

<blockquote>
  <p>fatal: ambiguous argument 'newBranch': unknown revision or path not in
  the working tree.</p>
</blockquote>

<p>But if I type <code>git checkout newBranch</code> it works fine, and if I switch back to master by typing <code>git checkout master</code> suddenly <code>git diff master newBranch --name-only</code> works perfectly?</p>

<p>Could anyone explain to me this behavior?</p>
","0","7273347","",""
"9104266","129171","2012-02-01 22:22:40","27","13507","<windows><git><windows-7><share><git-remote>","How do I access a git repo on a windows share?","<p>I want to be able to sync a work repo from my Windows 7 desktop to my Windows 7 laptop without pushing my commits to our main server. How do I do this? I can't figure out how to set up a remote path so that git can understand where it is. I generally use Git Bash for dealing with git, not the windows commandline, so the issue here is likely that I can't figure out how to write a path in Git Bash which will reference a windows share. </p>

<p>So, say I have a repo at (windows share path):</p>

<pre><code>\\\\MyWorkPCName\dev\myrepo\
</code></pre>

<p>And in the command line, I can access the directories and files (albeit using pushd since cmd is stupid), how do I convert this in to a valid git remote?</p>
","0","129171","0","0"
"9540345","221111","2012-03-02 21:04:16","1","2377","<git><git-pull><git-extensions><git-remote>","Bad git pull creates invalid remote tracking branch","<p>In my workplace, we just moved to Git for revision control after more than 10 years of using Source Safe (yay!). I now have to support our engineers in their learning of the new tool. It is important to note that we are all using the GitExtensions UI under Windows.</p>
<p>A couple of colleagues did the following (from the UI):</p>
<ul>
<li>clone the central repository (<strong>origin</strong>)</li>
<li>create a new local branch (<strong>A</strong>) based on the main <strong>develop</strong> branch</li>
<li>create commits on the <strong>A</strong> branch</li>
<li>while having that <strong>A</strong> branch still checked out, they (mistakenly) did a pull of the main <strong>develop</strong> branch into their <strong>A</strong> branch</li>
</ul>
<p>Here is what the UI of GitExtensions looks like when we do a pull (I sadly cannot post screen grabs from work):</p>
<blockquote>
<p>Pull from: <strong>origin</strong></p>
<p>Local branch: <strong>A</strong></p>
<p>Remote branch: <strong>develop</strong></p>
<p>Merge option: <strong>Merge remote branch into current branch</strong></p>
<p>(Pull button is then pressed)</p>
</blockquote>
<p>Here is what the command log of GitExtensions reveals it did for the pull:</p>
<pre><code>git pull --progress &quot;origin&quot; +refs/heads/develop:refs/remotes/origin/A
</code></pre>
<p>After that command, the users saw a new <strong>origin/A</strong> remote tracking branch appear in their history, while we confirmed no branch <strong>A</strong> is present on origin.</p>
<p>I looked at the git pull manual to try and understand what happened, but I still cannot understand if what we are seeing is a GitExtensions bug or an misunderstanding on our part of what git pull should do.</p>
<p>Anyone can help me figure out what is happening here?</p>
<p>Thanks in advance</p>
<h3>Edit</h3>
<p>I know that pulling the remote <strong>develop</strong> branch into the local <strong>A</strong> branch does not make sense and I know how to resolve the situation by deleting the remote tracking branch. What I really want is to understand the logic behind the <strong>origin/A</strong> remote tracking branch being created in the first place, since no <strong>A</strong> branch was ever present on origin.</p>
<p>Thanks</p>
","0","221111","",""
"45144872","8069961","2017-07-17 12:54:32","3","204","<git><git-remote>","How to setup current branch (dev) to push to refs/remotes/test with git push only?","<p>I have setup my current branch <code>dev</code> to push to <code>refs/remotes/test</code> with the following <code>git push --set-upstream origin dev:test</code>. </p>

<p><code>.git/config</code> looks like:</p>

<pre><code>[remote ""origin""]
    url = https://appulocal@bitbucket.org/appulocal/test_st.git
    fetch = +refs/heads/*:refs/remotes/origin/*
[branch ""dev""]
    remote = origin
    merge = refs/heads/test
</code></pre>

<p>but when I do <code>git push</code> it does not push from local <code>dev</code> to <code>test</code> on remote. 
 Git bash shows the message:</p>

<pre><code>fatal: The upstream branch of your current branch does not match
the name of your current branch.  To push to the upstream branch
on the remote, use

    git push origin HEAD:test

To push to the branch of the same name on the remote, use

    git push origin dev

To choose either option permanently, see push.default in 'git help config'.
</code></pre>

<p>How to resolve this so that only on doing <code>git push</code> my current branch <code>dev</code> pushes to <code>test</code> on remote?</p>
","1","8069961","",""
"45208988","892628","2017-07-20 08:08:41","0","1087","<node.js><github><repository><package.json><git-remote>","Create git repo using node package.json","<p>I am just exploring nodejs at the moment and learning about the <code>package.json</code> file it creates during as a result of the <code>npm init</code> command.</p>

<p>It asks for a git repository and as a result it creates this syntax as part of the file:</p>

<pre><code>  ""repository"" :
   { ""type"" : ""git"", 
     ""url"" : ""https://github.com/username/reponame.git""
   }
</code></pre>

<p>I have tried it with an existing repository and there is no problem, but is there any way to use the package.json to create the remote repository?</p>

<p>I assume you would need to use a token, so it can check your account perhaps?</p>
","0","892628","",""
"63723839","13530722","2020-09-03 12:36:00","9","20686","<amazon-web-services><git-remote><aws-codecommit>","AWS CodeCommit with git-remote-codecommit","<p>Im using windows and im trying to use git-remote-codecommit.</p>
<p>steps for HTTPS Connections to AWS CodeCommit with git-remote-codecommit.</p>
<p><a href=""https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-git-remote-codecommit.html"" rel=""noreferrer"">https://docs.aws.amazon.com/codecommit/latest/userguide/setting-up-git-remote-codecommit.html</a></p>
<p>While fetching , this error shows:</p>
<pre><code>git clone codecommit://MyRepositoryName

git: 'remote-codecommit' is not a git command. See 'git --help'
</code></pre>
<p>please help..</p>
","3","13530722","0","0"
"45764872","8485683","2017-08-18 20:50:20","13","5580","<git><github><git-branch><git-remote>","How to push an existing branch into a new repo using git?","<p>I'm currently working on a project where we have a UI branch and a Services branch (not my branching design).  We now need to separate them into two distinct repos. I am trying to find the best way to do this while preserving the history and not having the new repo track back to the old one. </p>

<p>Thanks in advance.</p>
","1","8485683","0","0"
"63773040","8225502","2020-09-07 07:25:30","1","581","<macos><remote-access><git-clone><git-pull><git-remote>","Clone git repo to a Shared Mac OS X (folder) from Windows","<p>Clone git repo to a Shared Mac OS X (folder) from Windows</p>
<p>I am not able to clone a git repository in a shared folder over LAN, do let me know if anyone can help here</p>
<pre><code>Cloning into '\\&lt;ip address&gt;\Demo\Demo_1\Demo_Test'...
POST git-upload-pack (152 bytes)
POST git-upload-pack (190 bytes)
remote: Enumerating objects: 3, done.        
remote: Counting objects:  33% (1/3)        
remote: Counting objects:  66% (2/3)        
remote: Counting objects: 100% (3/3)        
remote: Counting objects: 100% (3/3), done.        
remote: Total 3 (delta 0), reused 0 (delta 0), pack-reused 0        
Receiving objects:  33% (1/3)
Receiving objects:  66% (2/3)
Receiving objects: 100% (3/3)
Receiving objects: 100% (3/3), done.
error: unable to write file &lt;ip address&gt;/Demo/Demo_1/Demo_Test/.git/objects/pack/5kjserkj343lkjl2k34nsdfjlks.pack: Permission denied
fatal: cannot store pack file
fatal: index-pack failed
</code></pre>
<p>Read write permission already granted for the shared folder to administrator, Mac OS user, everyone, staff</p>
<p>Tried chmod recursive too for the root folder</p>
","5","8225502","0","0"
"63875965","14039389","2020-09-13 21:57:12","0","288","<git><git-remote>","How do I remove duplicate git remotes from local ist?","<p>I was playing around with pushing the same project folder to different repos (GitHub and GitLab) and ended up renaming it into a bunch of different names.</p>
<p>Now how do I remove remotes with name like 'upstream' and 'origin' from my list generated when I use <code>git branch -a</code>?</p>
<p>WHAT A MESS OF A LIST: <a href=""https://i.stack.imgur.com/jdNDU.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/jdNDU.png"" alt=""screenshot showing many branches"" /></a></p>
","0","14039389","",""
"64481406","9538253","2020-10-22 11:36:31","0","53","<git><github><git-bash><git-remote><git-reset>","Reset remote to specific commit in github (can't reset local and force push because of a large file)","<p>I want to reset a Github repo to a specific commit. The simplest way to do this is to reset local first and force push it to the remote. But there are large files in the project. So it's uploading all files again when force pushing. Is there any way to reset the remote by not force pushing local?</p>
","1","9538253","",""
"10666085","494642","2012-05-19 14:34:38","20","27489","<git><git-submodules><git-clone><cloning><git-remote>","How do I get `git clone --recursive` to recreate submodules' remotes and branches?","<p>I have a project with a handful of submodules.  Many of them are cloned from a GitHub fork to which I've added a branch for my custom mods.  A typical setup is like thus:</p>

<p>In local folder: MyProject1/Frameworks/SomeAmazingRepo/</p>

<pre><code>$ git branch -vva
*my-fork                       123456 [my-fork/my-fork] Latest commit msg from fork
master                         abcdef [origin/master] Latest commit msg from original repo
remotes/my-fork/my-fork        123456 [my-fork/my-fork] Latest commit msg from fork
remotes/my-fork/master         abcdef [origin/master] Latest commit msg from original repo
remotes/origin/HEAD            -&gt; origin/master
remotes/origin/master          abcdef [origin/master] Latest commit msg from original repo

$ git remote -v
my-fork                        git@github.com:MyUser/SomeAmazingRepo.git (fetch)
my-fork                        git@github.com:MyUser/SomeAmazingRepo.git (push)
origin                         git://github.com/OriginalOwner/SomeAmazingRepo.git (fetch)
origin                         git://github.com/OriginalOwner/SomeAmazingRepo.git (push)
</code></pre>

<p>I <code>git clone --recursive</code> my project to begin a new spin-off project and when it begins to recurse, it spits out an error claiming it can't find the stored commits for these repos.  Upon inspection it seems that the remotes haven't been added and the branch is left (empty) in master ...</p>

<p>In local folder: MyProject2/Frameworks/SomeAmazingRepo/</p>

<pre><code>$ git branch -vva
*master                        abcdef [origin/master] Latest commit msg from original repo
remotes/origin/HEAD            -&gt; origin/master
remotes/origin/master          abcdef [origin/master] Latest commit msg from original repo

$ git remote -v
origin                         git://github.com/OriginalOwner/SomeAmazingRepo.git (fetch)
origin                         git://github.com/OriginalOwner/SomeAmazingRepo.git (push)
</code></pre>

<p>The only remedy is to go and add the remotes manually to all the repos (very tedious).</p>

<p>There exists a similar issue in the cases where there are two tracking branches as above but only one remote (origin => my github fork).  In these case, it finds the commit and checks it out but fails to recreate the tracking branch, leaving a ""dangling"" commit...very scary as it doesn't warn you!</p>

<p>How do I clone my project so that it reliably recreates the submodules' remotes and branches?</p>
","5","494642","0","0"
"11093356","4704515","2012-06-19 01:46:10","0","340","<git><git-branch><git-rebase><git-remote>","Repairing git branch: refs now show refs/remotes/branch and refs/remotes/origin/branch","<p>I screwed up a local branch on my computer by rebasing it to some other branch. I wanted to rebase but I didn't switch to the branch I wanted to rebase, and as a result I screwed up <code>somebranch</code>. I had no idea how to undo my rebase screwup in <code>somebranch</code> (if anyone knows it would be good to know for the future) so I decided that since I have <code>somebranch</code> on github I would just delete it locally and then pull it from github. I don't know what I did but I screwed that up too. Eventually I found what I believe to be the right commands to recreate a deleted local branch by pulling it in from my remote origin:<br>
<br></p>

<pre><code>git fetch origin somebranch:refs/remotes/somebranch
git checkout -b somebranch --track origin/somebranch
</code></pre>

<p><br>
In gitk I can see there are three things now:<br>
<em>somebranch, remotes/somebranch, remotes/origin/somebranch</em>  </p>

<p>but all my other branches only show a local and one remote. example:<br>
<em>someotherbranch, remotes/origin/someotherbranch</em>  </p>

<p>I ran <code>git for-each-ref</code> and both ref/remotes/somebranch and ref/remotes/origin/somebranch point to the same commit.  </p>

<p>My question is what is the difference between the two and how do I get rid of the ref/remotes/somebranch. I tried <code>git update-ref -d remotes/somebranch</code> but it didn't work.</p>
","0","4704515","",""
"29037412","2470993","2015-03-13 16:33:02","0","83","<git><git-remote>","workflow git spy remote","<p>Suppose I have a bare repository A, it has branch master. I create local repository and add A as a remote. I want the local repository never push to remote, but it can commit local and pull from remote.</p>

<pre><code>bare repository:      o-----o------------o
                      |     |            |
                    pull   pull         pull
                      |     |            |
local repository:     o-----o-------x----o

o: commit of bare repository (some devs make).
x: commit of mine in local and not pushed.
</code></pre>

<p>With git, can I do that?</p>
","2","2470993","",""
"29050472","1940979","2015-03-14 15:14:07","0","62","<git><ssh><git-remote>","git server refusing password or ssh-key","<p>I currently have a git server I user at home set up for multi-user private repos like below</p>

<pre><code>/opt/git
/opt/git/me/..all my projects here
/opt/git/someotheruser/...all his/her projects here
</code></pre>

<p>I have the git-shell in-place and now after a few months am trying to get access to my repo from a different box its not letting me do so I still am able to push and all that from my laptop but just can't get to use my new desktop to connect to the server. What do i need to do am using ubuntu and the latest git version.</p>
","1","1940979","",""
"29396908","4738993","2015-04-01 17:17:48","0","43","<windows><git><backup><git-remote><git-gui>","How to set up / use git as (little more than) a simple backup system","<p>I'm a single developer working on several small, unrelated projects written in C/C++.</p>

<p>I tried using git (mostly because a client asked me to - I think he doesn't know what a DVCS is but must have heard that git is fashionable :) ) but I was baffled by the documentation, and the tutorials all seemed tailored for needs that are entirely different from mine: large projects with teams of programmers.</p>

<p>I wanted to start using git simply as a ""backup system on steroids"" first, learning new features later as I need them. I thought the setup and daily usage would be easy, but after a whole day of tutorials I've yet to commit a single project (and I need a bottle of Maalox and some aspirin :) )</p>

<p>To summarize:</p>

<ol>
<li>I'm a solo programmer (no one else will touch the code).</li>
<li>I use a single Windows laptop (no need to work from multiple PCs).</li>
<li>No need for branches (the projects are small).</li>
<li>I <strong>do</strong> need a remote repository (only as an emergency measure against HD crashes / laptop theft. I have a private server where I can install what I need).</li>
<li>I almost never need to retrieve old versions of my code (in 2014 I did that exactly twice, in a few minutes, using backups).</li>
<li>The code is already well-commented as it is (the commits will probably have very simple comments).</li>
<li>My workflow is simple: I want to open a project on my own HD, work on it until the feature is added / the bug is fixed / I get sleep deprivation, then commit the changes and move to the next task.</li>
</ol>

<p>So, let's say that I have projects Foo and Baz for Client1, and Bar for Client2. What I need to know is:</p>

<ul>
<li>the best way to set up the system, given my requirements.</li>
<li>what commands to issue during daily usage (see point 7)</li>
</ul>

<p>I've installed Git GUI (on the laptop) and GitLab (on the server), but I'm amenable to change.</p>

<p>Thanks in advance,</p>

<p>Flavio Rizzardi</p>
","3","4738993","0","0"
"47637214","5816911","2017-12-04 15:56:49","1","465","<git><git-remote><git-fetch>","git remote -v not showing remote after git fetch --all","<p>I'm working with a git project and I need to add a remote repository.<br>
In the <strong>PC1</strong> I added the remote repo with:
<code>git remote add new_repo https://192.168.2.223</code> (this is the IP of my <strong>PC1</strong> within the network).<br>
Then, in another pc (<strong>PC2</strong>) within the same network, I tried to fetch the <em>new_repo</em> I've just created:
<code>git fetch --all</code>.</p>

<p>Now in the <strong>PC2</strong>, if I type: <code>git remote -v</code> I can't see the <em>new_repo</em>.<br>
What's wrong?</p>
","3","5816911","",""
"57762519","12002442","2019-09-02 20:43:23","1","36","<git><github><merge><repository><git-remote>","Branching and merging my github remote repo","<p>I am quiet new to git and github. I have a team of 4 working on a project and have set up a remote repo in github. We have been pushing to the master branch for several weeks now. I want to know how to push to a test branch and later after reviewing merge it to the master when finalized. Can someone help?</p>

<p>I have tried creating a test branch and merging it with the master and it messed up the whole history. It says the master is behind the test by 'n' commits and this doesn't seem right.</p>
","1","12002442","0","0"
"39128477","2519875","2016-08-24 16:22:35","23","32445","<git><git-branch><git-remote>","git, How to push local branch into the specific remote","<p>Could you explain how to push a local branch to a specific remote branch?</p>
<pre><code>$ git branch -vv 
dev 4d46c96 [origin/dev] Merge branch '1783' into dev
dev_3_feature 226b914 second commit in dev_3_feature
dev_second_feature 6b5f10f second commit in dev_2_feature
master baf5fc0 [origin/master: ahead 1] master feature
* myFeature da5cc64 second commit in dev_1_feature
test 334cf7e commiting my super changes locally
</code></pre>
<ol>
<li><p>I want my <code>DEV</code> features to be pushed into <code>origin/dev</code> and stay there as branches, how can I do that ?</p>
</li>
<li><p>What/where/how should I set up locally to push into <code>origin/dev</code> by default instead of <code>origin/master</code>?</p>
</li>
</ol>
","0","2519875","0","0"
"39283646","431698","2016-09-02 02:55:13","0","93","<git-push><git-pull><git-remote>","Methods to make git pull from one remote and push to another remote?","<p>I have two remotes origin and fork. What I want to achieve is to make <code>git pull</code> pull from origin and make <code>git push</code> push to fork.</p>

<ol>
<li>One approach is set different URLs for pull and push in
<code>.git/config</code>. <code>url</code> is for pull. <code>pushurl</code> is for push. <a href=""https://stackoverflow.com/a/7420741/431698"">https://stackoverflow.com/a/7420741/431698</a> mentions this method.</li>
<li>The other is to use <code>git remote set-url</code> to set <code>url</code> and <code>git remote set-url --push</code> to set <code>pushurl</code>. This approach basically does the same thing as method 1. <a href=""https://stackoverflow.com/a/15903520/431698"">https://stackoverflow.com/a/15903520/431698</a> mentions this method.</li>
<li>Use <code>remote.pushdefault</code>. <a href=""https://stackoverflow.com/a/18562564/431698"">https://stackoverflow.com/a/18562564/431698</a> mentions this method.</li>
</ol>

<p>Is there any method to achieve my goal?</p>
","2","431698","",""
"1572190","61342","2009-10-15 12:54:58","9","792","<git><git-clone><git-remote>","Preserve git remotes","<p>I have fixed network of git remotes and I would like them to be attached to repository. Unfortunately git-clone doesn't clone remotes. Is there a way around it?</p>
","2","61342","0","0"
"39907082","708436","2016-10-06 23:20:27","2","80","<git><git-remote>","Where does the command `git remote add` make changes to?","<p>When I run a command such as:</p>

<pre><code>git remote add origin git@github.com:MyName/MyRepo.git
</code></pre>

<p>Firstly, what files are being changed? Is it some file in my <code>.git/</code> directory at the base of my local tree that I cloned the repository into?</p>

<p>Secondly, if I then clone the repository on another machine, will that <code>remote add</code> command have been remembered? Or will it have to be run again?</p>
","0","708436","",""
"20889346","156982","2014-01-02 18:26:41","62","46006","<git><git-remote>","What does ""git remote"" mean?","<p>What does &quot;remote&quot; mean? When cloning a repository located at a central location, aren't we creating its remote version?</p>
<p>When I execute the command</p>
<pre><code>$ git remote
</code></pre>
<p>I get <em><strong>origin</strong></em>. What does this mean?</p>
<p>When I execute</p>
<pre><code>$ git branch -r
</code></pre>
<p>I get <em><strong>origin/master</strong></em>. Now what is this?</p>
","7","156982","0","0"
"40230191","3534132","2016-10-25 01:56:21","4","2357","<git><visual-studio-code><git-remote>","VS Code: Command to view git remote changes?","<p>Currently, to view remote changes on git, I do the following in the terminal.</p>

<pre><code>git remote update
git status -uno
</code></pre>

<p>But is there a way to do this graphically in visual studio code? Perhaps through any extensions?</p>
","0","3534132","",""
"40319328","2377787","2016-10-29 12:58:58","4","3396","<git><git-remote>","git add fetch url to remote","<p>In my repo I have the following situation:</p>

<pre><code>$ git remote -v
origin  http://repoA/_git/libs (fetch)
origin  http://repoB/libs.git (push)
origin  http://repoA/_git/qpp_libs (push)
</code></pre>

<p>I want to fetch also from <code>repoB</code>. This is how I wanted to achieve this:</p>

<pre><code>git remote set-url --add origin http://repoB/libs.git
</code></pre>

<p>But after running the command above there are still only 3 URLs:</p>

<pre><code>$ git remote -v
origin  http://repoA/_git/libs (fetch)
origin  http://repoB/libs.git (push)
origin  http://repoA/_git/qpp_libs (push)
</code></pre>

<p>How do I add aanother fetch URL?</p>
","0","2377787","0","0"
"21317574","413414","2014-01-23 19:27:47","8","9474","<git><fetch><git-remote>","git fetch prune is not working","<p>I have a bunch of remote branches that were deleted and now I want to remove the branches locally. I've tried:</p>
<p><code>git fetch -p</code></p>
<p>but it does not work.</p>
<p>If I do:</p>
<p><code>git branch -r</code></p>
<p>and</p>
<p><code>git branch</code></p>
<p>the lists are not the same because <code>git branch</code> still lists deleted remote branches, even after I run <code>git fetch -p</code>. I've seen this as the accepted answer to do this in quite a few questions on here, but it isn't working for me.</p>
<p>I'm not sure I've worded the problem correctly so here's another explanation. Say I have:</p>
<blockquote>
<p>GitHub:  (remote)<br />
    Branch A<br />
    Branch B<br />
    Branch C</p>
<p>Local:<br />
    Branch A ==&gt; (remote) Branch A<br />
    Branch B ==&gt; (remote) Branch B<br />
    Branch C ==&gt; (remote) Branch C</p>
</blockquote>
<p>Now somebody deletes a branch on GitHub, giving:</p>
<blockquote>
<p>GitHub:  (remote)<br />
    Branch A<br />
    Branch C</p>
</blockquote>
<p>What I want my local repo to look like is:</p>
<blockquote>
<p>Local:<br />
    Branch A ==&gt; (remote) Branch A<br />
    Branch C ==&gt; (remote) Branch C</p>
</blockquote>
","2","413414","0","0"
"19839996","999452","2013-11-07 15:36:45","13","21334","<git><ssh><git-clone><git-remote>","Setting-up local git repository","<p>I am a fan of using <a href=""https://github.com/"" rel=""noreferrer"">GitHub</a> as my project file repository. But it interest me more if I am able to create a repository on this computer on a different directory path. Then clone that create repository on my new working directory.</p>

<p>I was planning to make a <a href=""https://github.com/"" rel=""noreferrer"">GitHub</a> <strong>locally</strong>. I've been searching about this and many return that I should use <a href=""http://gitolite.com/gitolite/"" rel=""noreferrer"">gitolite</a> and many more instead. The problem I am using Windows and I want to do all the steps using command line.</p>

<p>What command lines should I enter to create a repository on a different directory other than the working directory and be able to clone that repository to other terminals within the local network.</p>

<hr>

<p><strong>LINKING TERMINAL to Windows Host</strong></p>

<p>I have created a repository directory pathed to <code>Users\username\GIT\project.git</code>.
I am trying to link my terminal using the command line <code>git clone file://{IPv4 server address}/Users/username/GIT/project.git</code> returns </p>

<pre><code>fatal: '/{IPv4 server address}/Users/username/GIT/project.git' does not appear to be a git repository
fatal: The remote end hung up unexpectedly
</code></pre>

<p>How can I resolve this? I my host is running on Windows 7 and my connecting terminal(s) will be using Ubuntu 12.04 LTS and MacOS Mavericks.</p>

<hr>

<p><strong>UPDATE TRACK</strong></p>

<ol>
<li>Updated my question body. I don't know what steps should I follow.</li>
<li>Inserted <strong>LINKING TERMINAL to Windows Host</strong> question for repository sharing over local network.</li>
</ol>
","11","999452","0","0"
"57975690","4820101","2019-09-17 13:46:41","1","44","<git><git-branch><git-remote>","git is not having all branch files in ref dir AND not maintaining commit id in branch reference file. Why?","<p>From, my understanding, GIT keeps track of branches using plain text files with name same as the branch name. These files are stored in <code>.git\refs\remotes\origin</code> for remote tracking of remote branches and for local branches these file are in <code>.git\refs\heads</code></p>

<p>Below is the output from git branch:</p>

<pre><code>$ git branch -a
  joincolumn_issue
* master
  remotes/origin/HEAD -&gt; origin/master
  remotes/origin/joincolumn_issue
  remotes/origin/mappedBy
  remotes/origin/master
  remotes/origin/todelete
</code></pre>

<p><strong>First part of the problem/questions:</strong><br>
As you can see there are several remote branches git is aware of... but on looking at .git dir i don't see all of them -</p>

<pre><code>Samsh@Sambox MINGW64 /d/graphql-hibernate/.git/refs/remotes/origin (GIT_DIR!)
$ ls
HEAD  joincolumn_issue
</code></pre>

<p>Why are the files for other branches not present. Ok. The branches other then <code>joincolumn_issue</code> have never been checkout from remote. So if that is the reason. Fine, if at all that's the case, then <strong>how and from where does git obtain the other branches details</strong> (as it's listing them in <code>git branch -a</code>, it's definitely not polling the repo for this query)</p>

<p><strong>Part two of the problem/question:</strong>
On looking at the contents of the files in the ref dir-</p>

<pre><code>Samsh@Sambox MINGW64 /d/graphql-hibernate/.git/refs/remotes/origin (GIT_DIR!)
$ cat joincolumn_issue
1950d716308e5063f1b8f28c2423166781335333
</code></pre>

<p>This is as expected pointing to a commit id. fine. But the problem is with below output.   </p>

<pre><code>$ cat HEAD
ref: refs/remotes/origin/master
</code></pre>

<p>HEAD is referring to master, and there is no such file in <code>.git</code> dir. So now you understand my problem, I am not able to see how git is able to figure out the tip of master with out knowing/tracking the related commit id.</p>
","1","4820101","",""
"20335836","1996022","2013-12-02 19:03:03","1","1525","<git><github><branch><git-branch><git-remote>","git - Get all new branches from remote","<p>I am working in an environment where every contributer basically uses their own branch for basically everything new they make. Therfore we get about 10 new branches a month. I do not know how the branches are going to be named but I'd still like to have them all. So far I am only able to track the branches I know the name of.<br>
This basically translates as: I want to automatically craete all remote branches locally!</p>

<p>Is there a simple solution to this problem?</p>

<p>I use the GitHub GUI for windows and the console. I'm not afraid to use any of the two. But I would prefer a solution that uses simple methods of the GitHub GUI. If there aren't any I won't mind the normal console solutions.</p>
","0","1996022","0","0"
"39438100","3079975","2016-09-11 16:11:17","1","449","<vps><git-remote>","How to set up a git repository in Windows VPS?","<p>I have a VPS - Windows Server 2012 R2 and I already install GIT on the server.<br/>
<br/>
Now I want to set up a repository on it and our team can clone that repository to local computer and work on it.
<br/>
<br/>
I try to find the way to set up but I have not found any posts.
<br/>
<br/>
How can I set up it? Can I use any tool to set up on vps and commit from local machine?</p>
","0","3079975","0","0"
"58316353","7719412","2019-10-10 06:02:39","2","10134","<git><github><git-remote>","How to remove the git remote origin and add new remote origin?","<p>I have cloned the code from one git repo of another person and now I want to commit the code to my git repo. How I can do this without copy-pasting post-checkout separately?</p>

<p>Any git reference would be more helpful.</p>
","1","7719412","0","0"
"1856499","136562","2009-12-06 20:27:28","202","92294","<git><git-remote><git-fetch>","Differences between git remote update and fetch?","<p>Is <code>git remote update</code> the equivalent of <code>git fetch</code>?</p>
","0","136562","0","0"
"39861912","2977570","2016-10-04 21:17:52","25","3148","<git><git-remote><git-fetch>","Is there any reason to not set 'git fetch' to always use the --prune option?","<p>Using git fetch --prune deletes local remote tracking branches when the branch on the remote machine has been deleted.  Setting remote.origin.prune to true using the following...</p>

<pre><code>git config --global fetch.prune true
</code></pre>

<p>...makes using the fetch command always implicitly use the --prune option. </p>

<p>I am putting together a best-practices/introduction to git for some developers in my group who aren't quite familiar with it. I want to be sure I know this is not a dangerous behavior before advising them to do so. I at least give them a heads up of what to watch out for if there is some extraneous mishap case. </p>

<p>It doesn't seem like this is a destructive operation because it doesn't delete any local (non-remote) branches. It also seems like this is a great way to not build up remotes that aren't in use anymore without periodically specifying git fetch --prune or git remote prune. </p>

<p>If this is all true, why is this not the default behavior for git?</p>
","5","2977570","0","0"
"20985827","1988876","2014-01-08 02:21:12","0","636","<git><github><git-push><git-pull><git-remote>","how to request pull request from a particular remote in git?","<p>This is how my config file of git looks:</p>

<pre><code>[core]
        repositoryformatversion = 0
        filemode = true
        bare = false
        logallrefupdates = true
        ignorecase = true
        precomposeunicode = false
[remote ""origin""]
        url = git@github.com:XXXXXXX/training.test.git
        fetch = +refs/heads/*:refs/remotes/origin/*
[branch ""master""]
        remote = origin
        merge = refs/heads/master
[remote ""upstream""]
        url = https://github.com/YYYYYYY/training.test.git
        fetch = +refs/heads/*:refs/remotes/upstream/*
</code></pre>

<p>The <code>remote</code> ""origin"" points to my github account
The <code>remote</code> ""upstream"" points to a different github account from where I forked into mine.</p>

<p>Q1: so everytime I do a <code>git pull</code>, it will <code>pull</code> from my <code>remote</code> (which is ""origin"").
how will I do a <code>git pull</code> of the <code>remote upstream</code> .</p>

<p>Q2: any changes I <code>commit and push</code> to my repository, the other user ""YYYYY"" must be notified for a pull request. how would I achieve this?</p>
","0","1988876","0","0"
"21154380","599813","2014-01-16 06:00:50","3","108","<git><bash><githooks><git-remote>","How can I reject git pushes on an origin repo from a local repo if it does not pass unit tests?","<p>I have an origin repo that I have full access to and I don't want code to be pushed successfully to this repo unless the code being pushed successfully passes my unit tests. I saw many examples of .git/hooks/update scripts and they seem to break down into a few categories that do not fit my use case.  </p>

<p>For example, in (<a href=""http://git-scm.com/book/en/Customizing-Git-An-Example-Git-Enforced-Policy"" rel=""nofollow"">http://git-scm.com/book/en/Customizing-Git-An-Example-Git-Enforced-Policy</a>), the script accesses files locally in the <code>.git/hooks/</code> directory (ACL example) or <strong>individual</strong> files in the new or old SHAs.</p>

<p>I need to do an entire build process on all the new files as if I were in the directory of the new commit and were running  </p>

<h1>.git/hooks/update</h1>

<pre><code>#!/usr/bin/bash
mvn test
exit $?
</code></pre>
","0","599813","0","0"
"59156132","5108777","2019-12-03 11:31:08","4","767","<git><fetch><git-remote>","How do I define a git 'remote.<group>' for fetching?","<p>I work in several projects, with other people, that evolve according to requests from our clients. More often than not, I'm completely submerged in my current work and do not get updates about what is going on in the rest of the projects. So I do a ""complete fetch"" each morning so I don't get completely lost. I have worked out a shell script that does that for me, so it changes to each project's directory, show where it's at, and fetches (no pull) and returns me to wherever I was (beware, it is all one line, just broke it down to help reading):</p>

<pre><code>$ pushd . &amp;&amp; cd /W/Git/project1 &amp;&amp; pwd &amp;&amp; git fetch 
&amp;&amp; cd /W/Git/project2 &amp;&amp; pwd &amp;&amp; git fetch 
&amp;&amp; cd /W/Git/project3 &amp;&amp; pwd &amp;&amp; git fetch &amp;&amp; popd
</code></pre>

<p>I just <a href=""https://git-scm.com/docs/git-fetch"" rel=""nofollow noreferrer"">read a bit</a> about remote. that would be updated with <code>git fetch</code>:</p>

<blockquote>
  <p>git fetch can fetch from either a single named repository or URL, or from several repositories at once if  is given and there is a remotes. entry in the configuration file.</p>
</blockquote>

<p>So I think <code>git fetch remote.&lt;group&gt;</code> would very well fit the purpose of my monstrous command line, simplifying maintenance and memory. But I could not find direct reference at how to define such a <code>remote.&lt;group&gt;.</code> Anyone can give me a command line example?</p>
","2","5108777","",""
"40423398","1945981","2016-11-04 13:02:42","0","635","<git><git-submodules><git-remote>","git submodule is not syncing","<p>I have a git submodule. On the server I have set it up, everything is working fine. On a different server, it's not finding the revision in the submodule it should go to. All changes have been pushed to the remote repository. I tracked the problem down to the remotes, that I might have screwed up while setting them up.</p>

<p>On the server where everything is working:</p>

<pre><code>$ cat .gitmodules 
&gt; [submodule ""foo/submodule""]
&gt;         path = foo/submodule
&gt;         url = https://:@gitlab.server.com:8443/goodremote/submodule.git
$ cd foo/submodule/
$ git remote -v
&gt; origin  https://:@gitlab.server.com:8443/goodremote/submodule.git (fetch)
&gt; origin  https://:@gitlab.server.com:8443/goodremote/submodule.git (push)
&gt; upstream        https://:@gitlab.server.com:8443/badremote/submodule.git (fetch)
&gt; upstream        https://:@gitlab.server.com:8443/badremote/submodule.git (push)
</code></pre>

<p>The commit that is checked out resides on the <code>origin</code> remote, so I believe the <code>.gitmodules</code> is correct.</p>

<p>But here's what happens on the server where it's not working:</p>

<pre><code>$ cat .gitmodules
&gt; [submodule ""foo/submodule""]
&gt;         path = foo/submodule
&gt;         url = https://:@gitlab.server.com:8443/goodremote/submodule.git
$ git submodule sync
$ git submodule update --init --recursive
&gt; Initialized empty Git repository in foo/submodule/.git/
&gt; remote: Counting objects: 13483, done.
&gt; remote: Compressing objects: 100% (3001/3001), done.
&gt; remote: Total 13483 (delta 10625), reused 13236 (delta 10444)
&gt; Receiving objects: 100% (13483/13483), 103.89 MiB | 24.57 MiB/s, done.
&gt; Resolving deltas: 100% (10625/10625), done.
&gt; fatal: reference is not a tree: 71a57a9551a3c10229b92d724716a0f897001dab
&gt; Unable to checkout '71a57a9551a3c10229b92d724716a0f897001dab' in submodule path 'foo/submodule'
$ cd foo/submodule
$ git remote -v
&gt; origin  https://:@gitlab.server.com:8443/badremote/submodule.git (fetch)
&gt; origin  https://:@gitlab.server.com:8443/badremote/submodule.git (push)
</code></pre>

<p>I understand the error message. The commit that is supposed to be checked out, is not to be found on that remote. However, I do not know how I can tell the submodule to use the right remote. Can I either define both remotes in the submodule or at least update the submodule to use the other remote? I believed this is what the <code>.gitmodules</code> is used for, but apparently it doesn't work.</p>

<p>Edit: I managed to fix this in an unsatisfactory way. I set up the repository including submodule on the new server until I hit the error outlined above. Then I go into the submodule, fix all the remotes and use <code>git submodule update</code>. While this is working, it is definitely not the way it is supposed to work. I'm puzzled.</p>
","6","1945981","0","0"
"21537396","90096","2014-02-03 20:46:36","6","465","<git><git-remote>","Is it safe to rename remotes in git?","<p>I have 2 remotes - origin and remote2 one and I want to rename remote2 to origin and origin to source. Is it safe to do so? If yes, how do I do it?</p>

<p>Edit: By safe I mean that if some branch is tracked from ""origin"", will it continue to be track from ""source"" after rename. Also I wish I new what else could go wrong :)</p>
","2","90096","0","0"
"29855192","4523359","2015-04-24 18:44:39","0","267","<git><git-push><git-remote><git-bare>","git push does not update remote workdir","<p>I do execute the following steps to create on DEBIAN Server
1) git bare repo; 
2) a working dir, where the files are copied after local git push;
3) a local clone on Windows, bare server repo is cloned.</p>

<p>I executed the following commands:</p>

<pre><code># SERVER: Setup git bare repo on server on Debian Wheezy v7.8, GIT 2.3.6
# mkdir /domains/site/test-workdir
# make a content copy on DEBIAN server into a test workdir
cp -rp /content/* /domains/site/test-workdir

mkdir /domains/git/site-bare.git
cd /domains/git/site-bare.git
git --git-dir=. --work-tree=/domains/site/test-workdir/. init
git config receive.denycurrentbranch ignore
cd /domains/git/site-bare.git/hooks
nano post-receive
# add the following content until # end
#!/bin/sh
export GIT_WORK_TREE=/domains/site/test-workdir/
export GIT_DIR=/domains/git/site-bare.git/
cd $GIT_DIR
git checkout -f
# end
chmod +x post-receive
cd ..
git add .
git commit -m ""Initial commit""
git status
# On branch master
# nothing to commit, working directory clean


# LOCAL:
cd /w/Dev/\!GIT/
mkdir test-remote
cd /w/Dev/\!GIT/test-remote
git init
git remote add web-local ssh://root@192.168.1.101/domains/git/site-bare.git
git remote -v
# web-local       ssh://root@192.168.1.101/domains/git/site-bare.git (fetch)
# web-local       ssh://root@192.168.1.101/domains/git/site-bare.git (push)
git pull web-local master


# SERVER
cd /domains/site/test-workdir/
rm -r *

# LOCAL (Windows7 64bit, git v2.3.6)
# git push should execute post receive on remote, so workdir should get again the content
git push web-remote master
</code></pre>

<p>Once I also got the </p>

<pre><code>Counting objects: 27, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (27/27), done.
Writing objects: 100% (27/27), 2.49 KiB | 0 bytes/s, done.
Total 27 (delta 21), reused 0 (delta 0)
remote: fatal: Not a git repository: '/domains/git/site-bare.git/.git'
To ssh://root@192.168.1.101/domains/git/site-bare.git
27b6ceb..8ed3301  master -&gt; master
</code></pre>

<p>Later I did not get such ""Not a git repository"" error.
But anyway, the workdir is not filled with content, this is my problem.</p>

<p>UPDATE:
If I do ""git checkout -f"" of the server, then the workdir is updated, so this means that the post-receive hook is not executed.</p>

<p>UPDATE2: Fixed a bug in post-receive, but still not updated. Just if I execute the post-receive script manually.</p>

<p>Any idea why the remote workdir is not updated?</p>
","0","4523359","0","0"
"19934834","745556","2013-11-12 16:39:49","0","4827","<git><git-remote>","git remote set-url: How can I set a relative path?","<p>I know I can use <code>git remote set-url origin</code> to change the URL of a remote repo? On my Linux machine I run something like</p>

<pre>git remote set-url origin ~/projects/test.git</pre>

<p>but <code>git</code> always changes the relative path into an absolute one such as <code>/home/user/projects/test.git</code>.</p>

<p>Can I prevent this behaviour?</p>
","2","745556","",""
"29881183","3996059","2015-04-26 17:48:07","0","431","<git><homebrew><osx-yosemite><git-remote>","Home brew git-remote hang","<p>My brew (homebrew) hang always on git-remote, without any message.</p>

<p>First I see the spinning cycle and after some seconds ... nothing > program hang. The same git-remote... symptoms on brew doctor (no cmd output - terminal title ruby ..next.. git-remote... NOTHING MORE &amp; no spinning cycle).</p>

<p>Here the necessary informations:</p>

<pre><code>&gt; Mac OS X 10.10.3

&gt; Xcode Version 6.3.1 (6D1002)

&gt; gcc --version # command line tools
Configured with: --prefix=/Applications/Xcode.app/Contents/Developer/usr --with-gxx-include-dir=/usr/include/c++/4.2.1
Apple LLVM version 6.1.0 (clang-602.0.49) (based on LLVM 3.6.0svn)
Target: x86_64-apple-darwin14.3.0
Thread model: posix

&gt; git version 2.3.2 (Apple Git-55)
&gt; which git                     
/usr/bin/git
&gt; cd `brew --prefix`
&gt; git reset --hard origin/master
HEAD is now at e3edfcc gst-validate: add 1.4.0 bottle.
</code></pre>

<p>You need more informations? No problem write a comment.</p>

<p>I've also try to reinstall git, but without success.</p>

<pre><code>brew reinstall git
</code></pre>

<p><strong>Any idea to solve this issue?</strong></p>

<p>Thanks.</p>
","2","3996059","",""
"39104977","200985","2016-08-23 15:15:24","-2","98","<git><git-remote>","git - After removing a remote, its branches are still reported","<p>I ran <code>git remote remove origin;</code>, and after that, <code>git log --all --decorate;</code> shows several branches from <code>origin</code>, such as <code>origin/master</code>, <code>origin/devel</code>, etc.</p>

<p>These are not local branches.</p>

<p>I've used <code>git remote prune origin</code> and <code>git remote update --prune</code>, but nothing changes. The first command prunes local tracking branches, so I don't expect it to help. The second command says ""prune all the remotes that are updated."", and <code>origin</code> wasn't actually updated; perhaps this is why it's not pruning that repo?</p>

<p>How do I make git forget about this repository completely?</p>
","3","200985","0","0"
"20118792","318280","2013-11-21 10:47:00","1","73","<git><git-remote>","Share list of remote git repositories","<p>Given this workflow...</p>

<ol>
<li>Clone a third party remote repository (e.g. from github) into my computer.</li>
<li>Create commits in my computer.</li>
<li>Create a backup repository in my own server (e.g. <code>git remote add backup me@git.backup-server:my_project</code>)</li>
<li>Regularly push those commits to the backup server.</li>
</ol>

<p>... one can find that the backup server has no idea where the project was originally cloned from. So in case I lose my local repository and reach the backup server, I have no idea that it originally came from github, and therefore will need to manually search on the Internet for the source in order to ever sync with it again.</p>

<p>Is there any automatic way to deal with this issue? I.e. have the <code>backup_server</code> clone automatically receive the github (or wherever) remote URL without having to manually ssh into the server and add the information myself.</p>

<p>What I'd be looking for might resemble <code>git send_list_of_remotes backup-server</code>. Or maybe there's a way to version the relevant part of the .git/config file contents. Something like that.</p>
","0","318280","",""
"66400307","13742862","2021-02-27 15:26:24","-1","35","<git><workflow><git-merge><git-remote>","make git branch ffwd-able again after adding unrelated file?","<p>I have a local <code>master</code> branch, tracking <code>origin/master</code>, which was forked from (let's say) <code>upstream/stable</code> at some point. I could pull / merge from <code>upstream/stable</code> as changes became available, then send those changes on to <code>origin/master</code>. Everything was good.</p>
<p>Now, I've added a single file, <em>unrelated</em> to the files in <code>upstream/stable</code>, and suddenly my branch is not fast-forwardable.</p>
<p>I could merge from <code>upstream/stable</code> (leading to an annoying merge commit) and push to <code>origin/master</code>, but I suspect that, given the merge commit, my local <code>master</code> branch will still not be ffwd-able from <code>upstream</code> afterwards. <em>Even at times when I don't make any further local commits</em> to <code>master</code> (but still want to constantly update <code>origin</code> from <code>upstream</code>).</p>
<p>Goodbye easy shuttling between <code>upstream</code> and <code>origin</code>; hello nasty ancestry structures (I've seen what repeated merges look in tree view) and useless merge commits.</p>
<p>I don't even know how to experiment with this, as I don't see a way to merge commit-by-commit from <code>upstream/stable</code>, only all the way to its tip.</p>
<p>I know about <code>merge --rebase</code>, but of course that rewrites local history, which doesn't work when local <code>master</code> is constantly synced to <code>origin/master</code>.</p>
<p>What to do?</p>
","0","13742862","",""
"58234462","690455","2019-10-04 10:19:35","1","536","<git><git-remote><git-bare>","How to restore a locally lost git bare repo (using separate-git-dir) with one of its remotes","<p>A long time ago, I set up a repo using git --separate-git-dir because I did want the repo inside the working directory. Unfortunately, that separate (presumably ""bare""?) repo has been lost to hard drive failure, and I want to rebuild it using the contents of a remote I had added (which was pushed to frequently).</p>

<h3>How do I do that?</h3>

<p>I tried by recreating a new, empty git repo:</p>

<pre><code>git init --separate-git-dir=/desired/path/to/bare/git/repo
</code></pre>

<p>This of course creates a <code>.git</code> file in the working directory with the contents, <code>gitdir: /desired/path/to/bare/git/repo</code></p>

<p>Then, I did:</p>

<pre><code>git remote add network ssh://host/path/to/repo
git fetch network
</code></pre>

<p>But, if I run <code>git status</code>, I get</p>

<pre><code>On branch master

No commits yet
</code></pre>

<h3>What I'd like to get</h3>

<p>I only ever used (and pushed) the master branch. I am hoping to get this repo to a state WITHOUT MODIFYING THE WORKING DIRECTORY where I can type <code>git status</code> and hopefully it only sees the changes between the current, unmodified working directory and the last commit pushed to the remote, which should now be in my local bare?</p>

<p>I'm really just trying to pick up where I left off.</p>

<p>Thank you.</p>
","5","690455","0","0"
"12962752","1426193","2012-10-18 20:00:29","7","2665","<git><git-branch><git-remote>","How to set a git branch to push to a remote with a different branch name and pull from completely different url","<p>My local git repo needs to pull from one server.  It then needs to push a specific branch to a review repo with a different branch name on a different server.</p>

<p>Something like:
Pull everything from PullOnlyRepo on Server1 (we'll call that origin maybe?)
Push Branch hotfix to ReivewRepo with branch name JistChanges on Server2.  </p>

<p>Right now git config -l shows:</p>

<pre><code>remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*
remote.origin.url=&lt;URL for Server1&gt;
remote.origin.pushurl=no_push (this shouldn't matter since it is a pull only repo)
branch.production.remote=origin
branch.production.merge=refs/heads/production
remote.review.url=&lt;URL for Server2&gt;
remote.review.fetch=+refs/heads/*:refs/remotes/review/*
</code></pre>

<p>git pull does what I want (fetch changes from the correct place on Server1 and merges them into my work tree).</p>

<p>However git push doesn't.  In order to achieve what I want I have to do</p>

<pre><code>git push review hotfix:JistChanges
</code></pre>

<p>Is there some way to make git pull do this without having to put in the extra stuff?</p>

<p>There are some questions out there already that set up so that your local branch pushes to a remote with a different branch name.  However they also change the upstream and where the pull comes from.  </p>
","1","1426193","0","0"
"13045072","305270","2012-10-24 08:02:29","2","867","<git><git-remote>","How to setup a remote for git that it's in my c disk (win vista)?","<p>I would like to know how to create a remote into a windows folder because all the tuts shows me how to make a remote into a remote server and not a folder. <a href=""http://elegantcode.com/2011/06/18/git-on-windows-creating-a-network-shared-central-repository/"" rel=""nofollow"">http://elegantcode.com/2011/06/18/git-on-windows-creating-a-network-shared-central-repository/</a></p>
","1","305270","0","0"
"13052172","1771600","2012-10-24 15:15:33","23","14668","<git><version-control><repository><git-remote>","How can I associate local unversioned code to git remote repository?","<p>I need to associate a clean unversioned code to an existing git remote repository. </p>

<p>I explain better my situation. 
My project is moved from svn to git. I have a svn local working copy with old code (nothing new to commit) that has to be syncronized with the new git repository. I could clone the repo but I should restore many ignored configuration files by hand and I would avoid it.</p>

<p>So I removed all .svn directories and I would track my code with the git remote repository.</p>

<p>Is there a way to do it?</p>
","4","1771600","0","0"
"30704966","265341","2015-06-08 08:59:53","0","674","<git><git-branch><git-remote>","git branch on another server","<p>I am working with a customer who provided git branch access to get the latest src code. I've to continue working with that src code.<br>
But my company won't allow me to commit the src code directly to their branch. And so, my company provided with our own repository account to commit the additions/modifications/deletions etc.<br>
I would like to know if we can branch my customer's src code into our repository so that at the end of the project I can merge with customer's code easily. May be just by a pull request to customer's server. <br>
Is my understanding correct or is there any other better alternative to achieve the same.</p>
","0","265341","",""
"13133289","1685275","2012-10-30 05:41:01","1","448","<git><commit><git-push><git-clone><git-remote>","How I can update changes on remote git repository?","<p>I finished to commit and push changes on remote git repository but when I view remote repository's files, these are outdated. I'm using Git Bash.</p>

<p><a href=""http://tinypic.com/r/2o5jk/6"" rel=""nofollow"">View image</a></p>

<p>The red text are changes made in repositories clones. These changes aren't reflected in the original repository's physical file</p>

<p>How I can do to reflect the changes?</p>
","3","1685275","0","0"
"13135601","358788","2012-10-30 09:00:32","27","34661","<git><github><git-pull><git-remote>","""Proper"" way to pull git ""production branch"" to production server","<p>I'm quite new to Git, and have read the Pro Git book @ <a href=""http://git-scm.com/book/en/Git-Branching-Basic-Branching-and-Merging"" rel=""noreferrer"">http://git-scm.com/book/en/Git-Branching-Basic-Branching-and-Merging</a>. My question is if what I'm doing today is the prefered way to work with production server and a remote Git repo.</p>

<p>I have my repo hosted on GitHub, using three remote branches: developing -> testing -> master.</p>

<p>Whenever the 'testing' branch has been verified to be working, I <code>git merge</code> 'master' with 'testing' (fast forward?) locally, and <code>git push</code> 'master' to GitHub.</p>

<p>On the production server (/opt/www/url.com/) I have done: </p>

<pre><code>git init
git remote add origin https://github.com/.....
git pull origin master
</code></pre>

<p>Now everytime I want to update the master I issue a <code>git pull</code></p>

<pre><code>git pull origin master
</code></pre>

<p>Production will never push any changes to remote. And local changes won't happen. Am I doing it correct? If not, what is the prefered way to pull updates to production?</p>

<p>Edit #1: I don't want to manage any conflicts on the production server, which I am facing now (somehow I've done something wrong). I simply want to pull down the latest updated master branch, and switch to it.</p>
","0","358788","0","0"
"20768456","2152057","2013-12-25 02:05:43","1","175","<git><github><git-remote>","Push local git to new remote","<p>I have 2 git repositories set up, and I did a lot of coding in 1.  Someone else grabbed the code to make changes to the code, but never pushed them up.</p>

<p>The changes are now so large, I want to push it to an entirely new repository. I have their computer, and I tried to <code>git remote rm origin</code>. Then i tried <code>git remote add origin &lt;url&gt;</code>, but it gives the following error</p>

<blockquote>
  <p>fatal: remote origin already exists.</p>
</blockquote>

<p>Is there a way to push this to a new origin, and have it entirely forget about the first(like, not even remember it's a branch of the first)?</p>
","2","2152057","",""
"58203992","18149","2019-10-02 14:50:36","0","160","<git><git-rebase><git-remote><git-cherry-pick><git-mv>","Should I git mv or just mv the files I'm cherry-picking / rebasing from another directory?","<p>I have some <code>csv</code> files that I modify on a regular basis, they don't really contain any sensitive information, they are just used as imports into a program, and I modify them as requested.</p>

<p>Lately I've found what may be a more efficient way to process the changes, but I tested it on a temporary git repository outside of the project.  </p>

<p>Since this was successful I now want to <code>git cherry-pick</code> the <a href=""https://stackoverflow.com/questions/1994463/how-to-cherry-pick-a-range-of-commits-and-merge-into-another-branch"">range of changes</a> to it, so first I added the temporary git repo as a remote to my project.</p>

<pre><code># In my project I added a remote of the test repo with 
# a copy of the csv's in the HEAD of my main project.
git remote add tempchanges &lt;path-to-test-repo&gt;

# Created a new branch in my project to test this out in.
git checkout -b new/9_30_2019

# Cherry-picked the changes from the remote test repo, but they ended up in the root of the project.
git cherry-pick &lt;start-commit-in-test-repo&gt;..&lt;head-commit-in-test-repo&gt;

# Started a rebase
git rebase -i &lt;start-commit-in-test-repo&gt;~1

# (`edit`ed each commit in the rebase)
</code></pre>

<p><em>(In hindsight, I think this was a mistake, I should have just cut another branch in my existing project, but I digress)</em></p>

<p>The temporary repository only has a master branch, and everything has been done in the root of the project across a range of commits.</p>

<p>When I <code>cherry-pick</code> the changes into my project, and into the local branch, the <code>csv</code> files all end up in the root directory of my project but they belong in the <code>src/csv</code> file of my project instead, so I've decided to do an interactive <code>rebase</code> from the start of the range of commits (minus 1 commit) and edit each so that the changes show up in my project's repository in the <code>src/csv</code> directory instead of in the root.</p>

<p>But my question is, if I want to do this, should I use <code>git mv</code> to move the files or just a standard bash <code>mv</code> command and then reapply each of the changes with the rebase with the corresponding commit message added to the temp project.  </p>

<p>So far I've tried the <code>git mv -f</code> to move the files on the first commit and the changes weren't even mentioned when I went to commit them before running <code>git rebase --continue</code>.</p>

<p>Is there anything else I should be doing to make this process go smoother, and I'm assuming I should be using <code>mv</code> instead of <code>git mv -f</code> as the changes appear to show up that way prior to the commit.</p>

<p>I'd also like to preserve the commit messages without having to copy them from the logs in the old repo.</p>
","0","18149","",""
"1221840","134256","2009-08-03 11:32:40","668","716751","<git><github><git-push><git-remote>","Remote origin already exists on 'git push' to a new repository","<p>I have my project on GitHub at some location, <code>git@github.com:myname/oldrep.git</code>.</p>

<p>Now I want to push all my code to a new repository at some other location, <code>git@github.com:newname/newrep.git</code>.</p>

<p>I used the command:</p>

<pre><code>git remote add origin git@github.com:myname/oldrep.git
</code></pre>

<p>but I am receiving this:</p>

<blockquote>
  <p>fatal: remote origin already exists.</p>
</blockquote>
","5","134256","0","0"
"20470830","1828051","2013-12-09 12:35:21","2","431","<git><git-push><git-remote>","How do I protect git-assume-unchanged files from being overwritten by remote?","<p>The following behaviour is wondering and annoying me:</p>

<ol>
<li>I have a file in my local repository.</li>
<li>I push into the remote repository. (Note: I need the file in my repository!)</li>
<li>Now I want to perform local edits, that shall not be pushed remotely (e.g. a configuration customizing for my local machine only).</li>
<li>By using <code>git update-index --assume-unchanged</code> I tell git not to track changes to this file.</li>
<li>But when I do a <code>git checkout -f</code>, my local file is overwritten again.</li>
</ol>

<p>What would be a better way to keep my local changes but not push them remotely? Or: if there is something wrong in my procedure, what should I change?</p>
","1","1828051","",""
"58487453","11219171","2019-10-21 13:32:55","0","84","<github><push><git-remote>","Pushing files from one account to other in github","<p>Iam trying to push some changes to other account from another account but it is giving me permission error.I checked the github settings but everything there seems to be right.Can anybody help me with this?</p>

<p><a href=""https://i.stack.imgur.com/beHAY.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/beHAY.png"" alt=""enter image description here""></a></p>

<p><strong>EDIT:</strong>
I tried changing my user name and email too still it is giving same error
<a href=""https://i.stack.imgur.com/hRsiu.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/hRsiu.png"" alt=""enter image description here""></a></p>
","0","11219171","",""
"35178541","4994502","2016-02-03 13:33:38","1","35","<git><git-remote>","Differences in ""git branch"" output after removing and adding again remote repository","<p>When I clone some project from remote reopsitory, and then make git <code>branch -a</code>.</p>

<p>I got:</p>

<pre><code>$ git branch -a
* master
  remotes/origin/HEAD -&gt; origin/master
  remotes/origin/master
</code></pre>

<p>Then, if I remove remote repository and add it again:</p>

<pre><code>$ git remote remove origin
$ git remote add origin username@server:/path/to/repository.git
$ git branch -u origin/master master
</code></pre>

<p>I expect something similar, but got different output:</p>

<pre><code>$ git branch -a
* master
  remotes/origin/master
</code></pre>

<p>Where this difference comes from, and what does it means? And how can I achieve same output after manual remote addition?</p>

<p>I expect then to see some difference in <code>cat .git/config</code> but outputs are same in both cases.</p>
","0","4994502","",""
"18734087","1128104","2013-09-11 06:27:20","1","94","<git><git-remote>","Enabling my coworker to do git put without him being connected to the repo","<p>I am currently away from home, but have my work laptop with my. On it, I have a Git repo that I created because I am the only one who really does anything on this particular project.</p>

<p>I shared the folder and gave my coworker the rights to clone the git repo to his machine (as a remote branch)</p>

<p>He now needs my latest changes, normally he would do a git pull. This is not possible because I have no VPN right now and he cant connect via unsecured channels.</p>

<p>Is there a way to export the repo (and host it encrypted somewhere on the web) so that he can just download, unpack and import it? I want there to be no difference in the result than as if we were working normally. Also we have to be able to continue working on it together after I am back at work.</p>

<p>-edit- I should add that the repo is currently very small</p>
","0","1128104","0","0"
"18762764","2772372","2013-09-12 11:17:24","5","6555","<git><git-branch><git-remote>","how can I create git branch like develop/user1/issue1","<p>I want a create git branch like <code>develop/user1/issue1</code> on remote repository
how can I create that?</p>

<pre><code>- master =&gt; /origin/master
- develop =&gt; /origin/develop
    - user1 =&gt; /origin/develop/user1
         - issue1 =&gt; /origin/develop/user1/issue1
         - issue2 =&gt; /origin/develop/user1/issue2
         - issue3 =&gt; /origin/develop/user1/issue3
    - user2 =&gt; /origin/develop/user2
         - issue4 =&gt; /origin/develop/user1/issue4
         - issue5 =&gt; /origin/develop/user1/issue5
</code></pre>
","3","2772372","0","0"
"51009710","1809260","2018-06-24 11:56:23","0","135","<git><git-remote><smartgit>","How to setup multiple tracking levels of branchs with git","<p>I have a git local branch that tracked the remote svn trunk.</p>

<p>I created a new development branch and set the local branch to track it.</p>

<p>I want that the development branch will also track the svn/trunk
something like:</p>

<pre><code>from:
local branch &gt; development branch

to:
local branch &gt; development branch &gt; svn/trunk
</code></pre>

<p>Is it possible to do it with git?</p>

<p>I'm using
git version 2.14.3</p>

<p>git GUI - smartgit v18.1</p>
","0","1809260","0","0"
"18808207","10631","2013-09-15 01:58:15","0","59","<git-svn><branching-and-merging><git-remote>","Use git-svn with multiple svn repos and branches","<p>I have a svn branch that I had been working on and decided to start using git-svn to work locally. Now I have two problems. I want to move my work into another svn repository (on the same host) but I'd first like to merge the latest work from trunk. How would I do this with git-svn? Also, how would I continue my work in a separate svn-repo while continually merging work from the original repo? Also, I don't want to checkout the entire history from the original trunk because the project is rather huge. I am new to git and to git-svn, though I've taken a crash course in git branching and I feel confident enough to use advanced commands like rebase and cherry-pick. I mainly need to know how to apply these concepts thru git-svn. Do the svn repos get setup as a git remote somehow? Are there good resources on the net explaining how it works? Any guidance is much appreciated.</p>
","0","10631","",""
"45021755","633318","2017-07-10 21:19:24","1","66","<git><git-remote><git-subtree>","How to keep remote of git subtree in repository?","<p>I have a repository where one directory is a subtree from somewhere else. I know I can add a remote in my local repository, but this gets lost when I push to another repository. </p>

<p>I would like to have knowledge of the subtree remote stored in the super repository. Is this possible?</p>
","0","633318","",""
"45115755","6442877","2017-07-15 07:36:49","2","1800","<git><git-push><git-remote>","git push : push to second remote","<p>my project has 2 remote git server to push.</p>

<p>it pushes to both of them but fetch from the first one as you can see below:</p>

<pre><code>git remote -v
origin  git@gitlab.com:XXXXXX/XXXXXX.git (fetch)
origin  git@gitlab.com:XXXXXX/XXXXXX.git (push)
origin  http://second_server_ip:port/XXXXXX/XXXXXX.git (push)
</code></pre>

<p>some times the first one is going down for deploying new version or some other stuff and in these times if I want to push I will get this error:</p>

<pre><code>git push
ssh_exchange_identification: Connection closed by remote host
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
</code></pre>

<p>but the second server is up.</p>

<p>so is there any way to push just in the second server?</p>
","6","6442877","",""
"46545153","7623825","2017-10-03 12:55:40","2","4426","<git><repository><git-remote>","Unable to push git local master to remote repository","<p>I'm just trying to push my local master to the remote repository on github, but this is not possible. I have already made a repository in my github directory - on the website, and the app that I'm working on is simple in that I've only been working on the local master - no branches or anything. </p>

<p>When I try 'git push -u origin master' in the terminal, the reply is:</p>

<pre><code>permission denied (publickey)
fatal: could not read from remote repository
</code></pre>

<p>When I try 'git push', the response is:</p>

<pre><code>fatal: the current branch master has no upstream branch. To push the 
current branch and set the remote as upstream, use 'git push --set-
upstream origin master'
</code></pre>

<p>But when I try 'git push --set-upstream origin master' I get:</p>

<pre><code>Permission denied (publickey).
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
</code></pre>

<p>I've been reading as much as I can online on this, but I can't get anywhere, so some advice would be much appreciated, thanks :-)</p>
","5","7623825","",""
"46557947","6159196","2017-10-04 06:00:25","1","122","<git><ubuntu><git-remote>","Pushing to remote git server","<p>I setup an Ubuntu server with openssh and git, nothing else is on there. It is a VM on my LAN. I created a dir under home dir called sites, in there is my main site where I want to push to. Ran these commands:</p>

<pre><code>mkdir -p mysite.git
cd mysite.git
git init --bare
</code></pre>

<p>Then from my workstation I ran:</p>

<pre><code>git remote add origin steve@10.0.0.15:sites/mysite.git
git push origin master
</code></pre>

<p>It seemed to push it with no errors, however when I browse the dirs on the git server I can't locate any of the files. Am I missing something?</p>
","2","6159196","0","0"
"10347050","583539","2012-04-27 08:08:21","5","2192","<git><git-remote>","Remove (null) git Remote","<pre><code>$ git remote -v
(null)  git@github.com:username/Savvy.git (fetch)
(null)  git@github.com:username/Savvy.git (push)
origin  git@github.com:username/SavvyCode.git (fetch)
origin  git@github.com:username/SavvyCode.git (push)
</code></pre>

<p>How can we delete the <em>(null)</em> remote above? Thanks. </p>
","1","583539","",""
"28337390","362754","2015-02-05 06:17:10","3","1600","<git><git-branch><git-pull><git-remote>","git pull command output message meaning into which branch","<p>Say there is a remote branch <code>br1</code> checkout on the remote repo, and the <code>master</code> branch on a local repo. </p>

<ul>
<li><p>Command 1: If I do a ""<code>git pull origin br1:br1</code>"" it pulls remote <code>br1</code> into local <code>br1</code>, and shows: 
<code>
9188a5d..97d4825  br1        -> br1
9188a5d..97d4825  br1        -> origin/br1
</code></p></li>
<li><p>command 2: If I do just a ""<code>git pull</code>"", it will pull remote <code>br1</code> into local <code>master</code>, but it shows only the following:
<code>
9188a5d..97d4825  br1        -> origin/br1
</code></p></li>
</ul>

<p>I'm expecting it also shows something like ""<code>br1 -&gt; master</code>"". Why it does not show that? </p>

<p>Does ""<code>br1 -&gt; br1</code>"" mean pulling remote <code>br1</code> into local <code>br1</code>? </p>

<p>What does that ""<code>br1 -&gt; origin/br1</code>"" mean? </p>

<p><strong>Update</strong>: With help from VonC, I figured out the following: </p>

<ul>
<li><p><code>git pull</code> updates all the tracking branches. <code>br1 -&gt; origin/br1</code> means <code>br1</code> on the remote is pulled into local tracking branch <code>origin/br1</code>. </p></li>
<li><p><code>git pull origin br1:br1</code> pulls remote <code>br1</code> into local <code>br1</code> and into <code>origin/br1</code>. Then the messages after that mean the same change set is also pulled into the current checked-out branch (the message is <code>Updating ...</code>, it does not show <code>br1 -&gt; master</code>):
<code>
$ git pull origin br1:br1
   beb48a4..b344dd1  br1        -> br1
   beb48a4..b344dd1  br1        -> origin/br1
Updating cca5a9b..b344dd1
Fast-forward
 file2 | 0
 file3 | 0
 4 files changed, 0 insertions(+), 0 deletions(-)
</code></p></li>
<li><p>Previously I thought <code>git pull</code> pulls into the local master. That is not the case. It is that <code>git pull origin br1:br1</code> does it. </p></li>
</ul>

<p><strong>Update 2</strong>: With explanations by torek, the specific problem is that the command <code>git pull origin br1:br1</code> pulls remote <code>br1</code> into <code>FETCH_HEAD</code> after a sequence of other actions and subsequently merges the <code>FETCH_HEAD</code> onto the current branch. </p>
","0","362754","0","0"
"9994189","1310415","2012-04-03 13:22:48","1","214","<django><git><heroku><branching-and-merging><git-remote>","git multiple remotes: what to do with ignored/private files","<h2>My problem/issue</h2>

<p>We are working on an opensource project which we have hosted on github. The project is written in Django and so we have our settings in a settings.py file. We have it open source not because we are too cheap for a subscription, but because we intentionally want it to be open source.</p>

<p>Anyways, we also want to run this code ourselves and so we have a site_settings.py which contains all sensitive data like the db password etc. Since we don't want this on github for everyone to see, this is in the .gitignore file.</p>

<p>Normally we clone the repo and add this file locally and on the server, this way we all have our personal settings and sensitive data isn't stored on git.</p>

<p>The problem is that we now want to run our code on Heroku, which doesn't support the creation of files on the server, since heroku doesn't work like a normal server ( it works with a distributed file system).</p>

<p>Of course I have thought about it myself, but I am not sure if this is the right approach. Please keep in mind that I am both new to Heroku and Git. The following is my current solution:</p>

<h2>My current idea on how to fix this</h2>

<p>There are two remotes:</p>

<ul>
<li>origin == Github</li>
<li>heroku == Heroku</li>
</ul>

<p>leaving out all the development and feature branches, we only have both the master branches (on Heroku and Github) to worry about.</p>

<p>My idea was to have the branches set up like this locally:</p>

<ul>
<li>master -> remotes/origin/master</li>
<li>heroku -> remotes/heroku/master</li>
</ul>

<p>On the master branch we put the site_settings.py in the .gitignore so git will ignore it when committing to Github, the same goes for all the dev branches etc. We collect all our changes in the master branch until we have a new release.</p>

<p>On the heroku branch we edited the .gitignore file to stop ignoring the site_settings.py, so it will be committed to Heroku once we push to the heroku branch.</p>

<p>Once we have a new release we switch to heroku branch and merge master into heroku like so:</p>

<pre><code>git checkout heroku
git pull
git merge master
</code></pre>

<p>Once we have sorted out merge conflicts from the merge, we commit to Heroku and we have a new release up and running.. =D</p>

<h2>My question</h2>

<p>Is my idea acceptable to solve this (will it even work with the .gitignore like this?) and if not how do we solve this in the cleanest/best way possible? If you need more info don't hesitate to ask :)</p>
","0","1310415","0","0"
"46597915","996205","2017-10-06 03:40:03","8","11609","<git><version-control><git-branch><git-remote><git-fetch>","Git Branches NOT Showing in ""git branch"" after Pull or Fetch but ""git checkout"" works ...?","<p>After committing my latest work on a new branch <code>branchname</code> to my local git repo on machine A, I pushed that work to my gitlab remote repo with</p>

<pre><code>$ git push origin branchname 
</code></pre>

<p>The <code>master</code> branch was already in sync with the remote repo. All branches showed up on the remote repo on my gitlab list. </p>

<p>I later went to machine B. I first did a </p>

<pre><code>$ git pull origin master 
</code></pre>

<p>and master was updated, but my new <code>branchname</code> didn't show up when I typed <code>git branch</code>, nor did another branch that I new existed in the history tree. I went to this <a href=""https://stackoverflow.com/questions/6373277/git-sync-local-repo-with-remote-one"">post</a> and followed the directions from the first answer. Another 'git branch' still did not show my other branches. On a whim, I simply tried to do </p>

<pre><code>$ git checkout branchname 
</code></pre>

<p>and it was there and checked out fine. A <code>git branch</code> command then showed master and branchname in my list of branches. I did the same thing with another branch, and it too then showed up in the branch list after a <code>git branch</code> command.</p>

<p>Is this normal git behavior for such operations? The main thing I am wondering is if you pull or fetch from a remote repo to update a local repo that had to know previous knowledge of branches on the remote, why don't they show up during a <code>git branch</code> command? And, why can I check them out when I couldn't see them after a <code>git branch</code>?</p>

<p>This saga is similar to <a href=""https://stackoverflow.com/questions/12319968/remote-branch-not-showing-up-in-git-branch-r"">THIS</a> one, but my branches were actually there and just NOT showing following git branch commands until I checked them out.</p>
","1","996205","",""
"28372061","4538342","2015-02-06 18:09:08","0","742","<git><branch><git-remote>","Create Branch of Branch in git?","<p>I have master with a branch FooDev in git repository. 
Master-----FooDev</p>

<p>Can I create a Branch(es) off of FooDev, so:
master----FooDev--|-----Sprint1Sue
                  |------- Sprint1Joe</p>

<p>If so how do I so this? Can I see this somehow in my local repo? It does not see I can branch from a branch and
git push needs remote branch, but i don't know how/if I can specify a branch as a specific origin.</p>

<p>M</p>
","0","4538342","",""
"28377688","99717","2015-02-07 01:56:05","4","5011","<git><git-branch><git-remote><git-track>","""git remote show origin"": why all branches show ""tracked"" even when some aren't?","<p>Why does ""git remote show origin"" list remote branches as ""tracked"" even when those branches are not linked to a local branch for pull/push? Does ""tracked"" mean something else in this context?  I thought that was the whole meaning of ""tracked"": <a href=""http://git-scm.com/book/en/v2/Git-Branching-Remote-Branches#Tracking-Branches"" rel=""nofollow"">git docs on branch tracking</a>.</p>

<p>1) clone a repo with more than one remote branch</p>

<p>2) run <code>git remote show origin</code> -- says ""testBranch"" is tracked.  But <code>git branch -vv</code> correctly shows only master tracking origin/master, and <code>git branch -a</code> correctly shows that there's only the one local branch, master.</p>

<p>3) So: what does <code>git remote show origin</code> mean when it lists testBranch as ""tracked""?  To be clear: there's nothing ""wrong"" with how things are setup: everything works fine.  I just don't understand why the remote testBranch is labeled as ""tracked"".  That's what I want an answer to.</p>

<pre><code>hawk@Tug:~/temp/TestRepo (master)$ git remote show origin
* remote origin
  Fetch URL: git@github.com:haughki/TestRepo.git
  Push  URL: git@github.com:haughki/TestRepo.git
  HEAD branch: master
  Remote branches:
    master     tracked
    testBranch tracked
  Local branch configured for 'git pull':
    master merges with remote master
  Local ref configured for 'git push':
    master pushes to master (up to date)
hawk@Tug:~/temp/TestRepo (master)$ git branch -vv
* master 8df130e [origin/master] shoulda done this last time
hawk@Tug:~/temp/TestRepo (master)$ git branch -a
* master
  remotes/origin/HEAD -&gt; origin/master
  remotes/origin/master
  remotes/origin/testBranch
</code></pre>
","2","99717","0","0"
"28414640","976880","2015-02-09 16:35:46","7","6608","<git><githooks><git-remote>","Access the changed files path in git pre-receive hook","<p>I'm writing a git pre-receive hook on the remote repo to make sure pushed code is consistent with our company's internal guidelines.</p>

<p>I'm able to find all the files that are to be checked when a pre-receive hook is fired, however, I don't have the path to these files to open them using normal file operations(e.g. <code>cat git_working_directory/file_name</code> would throw <code>No such file or directory</code> error). <strong>The application which validates the code requires the file path</strong> as an argument so that it can open the file and run its checks.</p>

<p>Consider this scenario: the developer created a new file and pushed it to the server and the pre-receive hook is triggered. At this stage the new file is not saved on to the remote's working directory because the pre-receive hook is still running.  </p>

<p><em>I'm wondering if there is a temporary location where the files are saved in git as soon as they are pushed so that I can pass that directory to the application to run the checks?</em></p>

<p>Update:</p>

<p>I could checkout to a temporary location and run the checks there, this could be an option but considering the fact that developers frequently push, sometimes even at the same time and the repo being very big, this option doesn't seem to be feasible. I'm looking more for a solution where I can just use the path to the file if it is somehow available.</p>
","5","976880","0","0"
"46679371","6534673","2017-10-11 03:36:48","1","34","<github><git-remote>","Anyone familiar with errors if I set two remotes on a git repository?","<p><strong>Scenario:</strong> A core repo having common code which can be used by other repos(say, client).</p>

<p>I have set <strong>core</strong> as a remote in <strong>client</strong>, so to get commits from core and client both in client repo I can do:</p>

<pre><code>git pull core master
git pull origin master
</code></pre>

<p>I have tested this and it appears to be working fine in above scenario, any obvious error I might be missing?</p>

<p><strong>Note:</strong> git-submodules cannot be used in my case</p>
","0","6534673","0","0"
"46687863","877513","2017-10-11 12:08:35","1","196","<git><git-remote>","git issue when add a new local folder as a remote project","<p>all,</p>

<p>I have a pretty simple issue, but did not find a good explanation and solution in 10 mins. So I think it is better to ask here. Normally, I follow the rule using web ui to create a remote project and then start my local. But today, I follow the rules below (from <a href=""https://help.github.com/articles/adding-an-existing-project-to-github-using-the-command-line/"" rel=""nofollow noreferrer"">here</a>) to add a local folder as a new remote git project.</p>

<pre><code>$git init
$git add .
$git commit -m ...
$git remote add origin https://gitlab.com/group/project
$git remote -v
$git push origin master
</code></pre>

<p>All went well till the last step. I got an error below:</p>

<pre><code>fatal: https://gitlab.com/group/project/info/refs not valid: is this a git repository
</code></pre>

<p>How can I further check what is going on and how to solve this error?</p>

<p>Thanks</p>
","3","877513","",""
"65563701","3507638","2021-01-04 13:43:26","1","658","<git><bitbucket><git-remote><git-filter-repo>","Best way to create a new repository after executing git-filter-repo","<p>I want to split my repository and my conclusion is that I should create a new repository where I remove the unwanted parts using <code>git-filter-repo</code>.</p>
<p>After reading a lot of documentation around it, I'm pretty sure how I should use <code>git-filter-repo</code>, but I'm missing how I should execute the other steps in a correct way.</p>
<p>This is the method that I came up with, but I would like your advice on if it is the correct way, or if there is something I'm missing.
I'm using bitbucket for my repository, and when I tried it out the bitbucket web interface is very slow and sometimes it fails to list branches etc.</p>
<p>First I create a new empty repo on bitbucket, repo2.
Then I execute the following sequence:</p>
<pre><code>git clone --bare --mirror https://user@bitbucket.com/workspace/repo1
cd repo1
git filter-repo --path &lt;path to remove&gt; --invert-paths
git remote add origin https://user@bitbucket.com/workspace/repo2
git push --mirror
</code></pre>
<p>Note that <code>git filter-repo</code> will remove the original remote path to origin.</p>
<p>I'm not sure if I should use --mirror or something else on clone and push. some documents say that I should use <code>git push -u origin --all</code>, but I guess that some references would be missing after that.</p>
<p>Why is bitbucket so slow in listing my new repo2? It is also listing the size to only be a few kB, but it seem to contain everything I want. Is it just that it takes some time for the servers to update?</p>
","1","3507638","",""
"65564143","14930554","2021-01-04 14:14:23","-1","39","<git><github><git-remote>","How to push changes to git hub?","<p>How to push changes to remote repository?</p>
<ol>
<li>I had one local project then i push this project to remote repository.</li>
<li>Then I made some changes locally by creating a branch and merging it with master branch</li>
<li>Now i am not able to push these changes to remote repository I am getting an error &quot;rejected fetch first&quot;.</li>
</ol>
","2","14930554","",""
"28805140","607948","2015-03-02 08:11:06","0","56","<git><git-rebase><git-remote>","Did rebase of git from remote branch, after rebase, branch info is lost","<p>I have a remote branch : let's say X
and i have a mirror or above : Let's say Y
With in Y, i have another branch feature.</p>

<p>I wanted to rebase feature with X, so tried following command :
git rebase X/master Y/feature</p>

<p>After this, branch info is lost, and i am not able to push any changes.</p>

<p>Any pointers??</p>
","2","607948","",""
"29260711","793154","2015-03-25 16:04:11","1","415","<git><github><git-remote>","Change the scope of a remote origin in git","<p>I recently started to use git/github.  What drove me to it was an online course, and now I am looking to do things on my own.   </p>

<p>As I want to look at the code for an R package, the caret package, I forked it in my github account.  Then I created a folder to clone it into and added the origin.  </p>

<p>The error that I get is <code>remote origin already exists</code>. When I check the remote origins with <code>git remote -v</code>, I get a github address from a previous project from my online course.  </p>

<p>My question about the scope (folderwise) of the origins is because the online course project location is very far away from the caret folder that I created.  </p>

<p>How can I modify the origins in order to clone that project?  I will also appreciate a brief explanation on how these repos are handled by git.   </p>
","0","793154","0","0"
"12311330","1649939","2012-09-07 03:29:25","6","6637","<git><git-remote>","How to delete files from git bare remote repository?","<p>I have a remote bare git repository.</p>

<p>A new developer cloned it, but he didn't have a properly configured .gitignore file, so he mistakenly pushed some unwanted files into the remote. When I pulled the changes and merged, I got these previously untracked files. Others have also pulled the changes from the remote and have these unwanted files as well.</p>

<p>How do I delete these files from the remote repository, and everyone else's remote/origin/branches?</p>
","0","1649939","0","0"
"29986459","2505580","2015-05-01 12:01:05","2","2056","<windows><git><shell><git-remote><git-fork>","Rename git remote name to ""upstream""","<p>I have a tiny problem with my git setup. I am working with forked repositories quite often. To fork them, I use the button on GitHub. After that, the command <code>git remote -v</code> shows me ""origin"" and ""original-username"".</p>

<p>""original-username"" is now the upstream branch where I can pull changes from and create pull requests too. I would like to have this named ""upstream"" though.
That would make it easier to use the same commands on different forks, and I can even create aliases with that.</p>

<p>So I know I can change the remote name with <code>git remote rename original-username upstream</code>, but that would mean I have to do it for every fork, every time I get that fork on a machine, and I have to make git remote -v first etc, and I am lazy :P<br/>
Also original-username is different on every fork.</p>

<p>So my question is:<br />
<strong>Is there a possibility to rename the remote branch (from different names) to upstream, maybe with a cool alias function or a small script?</strong></p>

<p>My dream woudl something like this:</p>

<pre><code>[alias]
    setupstream = ""!f(){ git remote rename $oldupstream upstream; };f""
</code></pre>

<p><code>$oldupstream</code> should be gotten automatically, in some way.</p>
","0","2505580","0","0"
"12399758","383759","2012-09-13 05:11:08","5","103","<git><version-control><git-push><git-pull><git-remote>","How do git remotes work?","<p>If I have a main project that is version controlled.</p>

<p>I then add a remote for a third party plugin</p>

<p><code>git remote add myplugin &lt;url&gt;</code></p>

<p>I can then do <code>git pull myplugin master</code></p>

<p>and it just pulls in the changes from that remote.</p>

<p>Now lets say my project is setup as:</p>

<pre><code>/
/index.php
/whatever
</code></pre>

<p>and the remote is setup as </p>

<pre><code>/
/whatever.php
</code></pre>

<p>when I pull in the remote I end up with</p>

<pre><code>/index.php
/whatever
/myplugin
/myplugin/whatever.php
</code></pre>

<p>this is good.</p>

<p>What I am wondering is,
If I make changes to myplugin,</p>

<p>If I issue <code>git push myplugin master</code> what is pushed?</p>

<p>Is it going to only push changes in myplugin? 
or does a remote act as a second repository and will commit the entire repository?</p>
","0","383759","0","0"
"30888951","5019120","2015-06-17 10:31:06","1","97","<git><synchronization><repository><git-remote><mirror>","Syncing one remote git repo with other","<p>I would like to create like a 'mirror repo'. 
Lets say that there is a <strong>remote repository</strong> from which I can only <strong>clone</strong>. 
Now, there's a <strong>second, mine remote repo</strong> and I would like it to '<em>monitor</em>' the <strong>first</strong> remote and automatically update if there is anything new.</p>

<p>I mean without involving the local repo. It's how I do that already. 
I checkout the <strong>first</strong> repo, make changes and push it to the <strong>second</strong> one.</p>

<p>But it takes too much time. I would like it to automatically <em>sync</em> for example once a day.</p>
","2","5019120","",""
"13403224","1086034","2012-11-15 17:46:17","1","254","<git><git-remote><git-fetch><git-tag>","What is the behavior of `git remote update <name>` when `remote.<name>.tagopt` is not set?","<p>The <a href=""http://www.kernel.org/pub/software/scm/git/docs/git-remote.html"" rel=""nofollow""><code>git remote</code> man page</a> explains what <code>--tags</code> and <code>--no-tags</code> does, but not the default behavior if neither is specified. What is that behavior?</p>
","0","1086034","",""
"13242785","1757914","2012-11-06 00:44:55","0","1386","<git><git-remote><multi-master-replication>","git multi master setup?","<p>I have been tasked with configuring the following setup.</p>

<p>Currently, we have an internal canonical repo for an opensource project. We have a post-receive hook that pushes any updates to a remote repository exposed to the public.</p>

<p>Joe Public can pull from the public repo.</p>

<p>No one pushes to the remote repo except the post-receive hook</p>

<p>We have quite a few users working on the code internally and I really don't want to mess with the workflow that they have already working.</p>

<p>internal users check the code out from the internal canonical repo and commit to the same.</p>

<p>external devs have to submit patches and then an internal user will commit for them (after review).</p>

<p>At this point we want to start allowing some external devs to have commit access to the repository.</p>

<p>This means making the remote repo canonical.</p>

<p>It also means changing the workflow for users. Unless the collective here can come up with something I am missing with regard to git.</p>

<p>Quick diagram of the current workflow.</p>

<p>INTERNAL USER.</p>

<p>clone from internal repo. -> monkey with code -> push to internal repo -> post-receive hook pushed to remote repo.</p>

<p>EXTERNAL USER.</p>

<p>clone from external repo. -> monkey with code -> submit patch via mailing list -> Internal User pushes code to internal repo -> post-receive hook pushed to remote repo.</p>

<p>NEW WORKFLOW IDEALLY!!</p>

<p>INTERNAL USER. </p>

<p>clone from internal repo. -> before clone is provided pre-receive hook makes certain we have an updated mirror from the remote -> monkey with code -> push to internal repo -> pre-receive hook proxies the commit to the remote repo and syncs the 2.</p>

<p>EXTERNAL USER.</p>

<p>clone from remote repo. -> monkey with code -> push to remote repo.</p>

<p>This is kind of like a multi master setup. Where you can push code to either repo and pull code from either repo.</p>

<p>Some other caveats.</p>

<p>The internal repo can push and pull from the remote repo. 
The remote repo <strong>cannot</strong> reach the internal repo.</p>

<p>What do you think? </p>
","0","1757914","",""
"13281411","1807771","2012-11-08 02:03:56","3","136","<git><git-clone><git-remote>","git remotes of same working directory are different (or at least it seems like it)","<p>I have a working directory that I track with GIT on one of my computers and at some point in the past I created a remote (bare) repo on an external hard drive. This remote is called <code>origin</code>. I then cloned that repo on other computers at a later time. Since I created <code>origin</code>, I make sure I always keep it up to date by pushing all my changes from any computers to it. I then pull those changes back to the other computers so that my working directories are all the same.</p>

<p>The other day I decided to reorganize my external HDD. I created a new bare repo (let's call it <code>other_remote</code>) in a different location on the drive, added it as a new remote to my working directory on one of my computers and pushed that working directory to it.</p>

<p>Now, I was going to erase the repo <code>origin</code> from my HDD, but before proceeding, I had doubts and I decided to compare the two remote repos to make sure I was not doing something that I would regret.</p>

<p>I started with <code>du</code> and I got this:</p>

<pre><code>$ du -sch origin                                                                                                                                  
207M    origin
207M    total

$ du -sch other_remote                                                                                                                      
34M     other_remote
34M     total
</code></pre>

<p>Now that scared me! I obviously didn't erase <code>origin</code> yet. I did a lot of research (here and on google) but I couldn't find any info about that.</p>

<p>The only thing I found was someone saying that you can use <code>git count-objects -v</code> to get a good estimate of the size of a repo. But again, this command gives quite different results on my two bare repos:</p>

<pre><code>$ cd path/to/origin
$ git count-objects -v
count: 137
size: 211976
in-pack: 0
packs: 0
size-pack: 0
prune-packable: 0
garbage: 0

$ cd other/path/to/other_remote
$ git count-objects -v
count: 6
size: 9888
in-pack: 131
packs: 1
size-pack: 24725
prune-packable: 0
garbage: 0
</code></pre>

<p>Can anyone help me understand why my two remote repos are so different? Is it safe for me to erase <code>origin</code> and only keep <code>other_remote</code>? Will I loose some information if I do so?</p>

<p>Thanks a lot</p>
","0","1807771","0","0"
"2262914","273054","2010-02-14 21:39:46","5","1042","<git><github><git-push><git-remote>","Branching my own project from github, then pushing it back to github with branches intact","<p>This feels like im missing something obvious, but i've been reading tutorials for 3 days and can't seem to make it happen. </p>

<p>I have a private repo on github. I want to run it as two separate branches. As I understand it, I clone the repo so its on my local machine, then branch it using</p>

<p>git branch newbranch</p>

<p>git checkout newbranch</p>

<p>so far so good. Now i make some changes, commit to newbranch. It seems like I can push this all to my remote repo intact, but I'm having trouble doing it without simply merging it with master, which is not what I want to do. How can I put my branches on github intact?</p>

<p>Is this the correct workflow for doing this? If it is, what am I doing wrong?</p>
","0","273054","0","0"
"2384057","147365","2010-03-05 01:50:42","11","40613","<windows><git><git-remote>","Cannot remove git repository completely","<p>I have been using git on windows-msysgit. Whenever I try to remove a repository completely either using explorer or using </p>

<pre><code>$ git rm -rf ptp/
fatal: Not a git repository (or any of the parent directories): .git
</code></pre>

<p>it errors out ""The data present in the reparse point buffer is invalid"" or the fatal error above.</p>

<p>What's wrong with me/git?</p>

<p>Thanks in advance</p>
","5","147365","0","0"
"31415413","343204","2015-07-14 19:16:57","4","2539","<git><git-remote>","git - delete local tracking","<p>I've deleted some remote branches (<code>dev/featureA</code> and <code>dev/featureB</code>) however when I run <code>git remote show origin</code> I still see them being listed under the local branches section. E.g.</p>

<pre><code>$ git remote show origin

Local branches configured for 'git pull':
  dev/featureA                  merges with remote dev/featureA
  dev/featureB                  merges with remote dev/featureB
</code></pre>

<p>Do I need to disable tracking or something similar?</p>
","0","343204","0","0"
"31415298","343204","2015-07-14 19:09:49","4","5484","<git><git-remote>","Difference between 'git branch -r' and 'git remote show origin'","<p>I've seen this answer (<a href=""https://stackoverflow.com/questions/27068739/git-branch-r-vs-git-remote-show-origin"">git branch -r vs git remote show origin</a>) which notes that one queries locally whilst the other connects to the server. However, the displayed format for these queries is different.</p>

<p>Is there a difference in what they display or do they simply show the same information but formatted very differently?</p>
","0","343204","",""
"13954956","1916112","2012-12-19 14:53:02","2","173","<git><git-branch><git-remote>","How do I determine the point (origin//????) for a particular branch with git","<p>On some development branches I need to use origin/master on others I need to use origin/dev.  I want to use some scripts to automate my work a little more, and I would like to know how to determine the origin string to use without having to pass it in as a parameter or have it set as an environment variable.</p>

<p>Using 'git remote show origin' gives me a bunch of output with the information I need near the end.  It says:</p>

<p>Local branch configured for 'git pull':
    mybranch merges with remote dev</p>

<p>Is there some way to do this without having to parse through all of the output for 'git remote show origin'?</p>
","0","1916112","0","0"
"21676570","2409752","2014-02-10 11:56:09","0","231","<git><git-submodules><git-remote><git-subtree>","How to use a git sub repository pushing to a private remote but pulling also from its original origin","<p>I need to setup a repository like this:</p>

<ul>
<li><em>rep</em> (pull &amp; push from/to <em>private remote</em>)
<ul>
<li>normal stuff</li>
<li><em>sub-rep</em> (pull from <em>private remote</em> &amp; <em>public remote</em> and push to <em>private remote</em>)
<ul>
<li>stuff in <em>sub-rep</em></li>
<li><em>sub-module</em> (pull from <em>private remote</em> &amp; <em>public remote</em> and push to <em>private remote</em>) 
<ul>
<li>stuff in <em>sub-module</em></li>
</ul></li>
</ul></li>
</ul></li>
</ul>

<p><em>rep</em> is the repository I'd like to set up</p>

<p><em>private remote</em> is my own remote repository.</p>

<p><em>sub-rep</em> is the inclusion (<code>submodule</code> or <code>subtree</code>) of another repository fetched from <em>public remote</em> as a sub folder in <em>rep</em>. As I read that there are two ways of including another repository I simply write ''sub repository'' instead of <code>submodule</code> or <code>subtree</code>.</p>

<p><em>sub-module</em> is a <code>submodule</code> inside <em>sub-rep</em></p>

<p>The requirement is that all commits I make in <em>rep</em>, <em>sub-rep</em> and <em>sub-module</em> can be pushed to my <em>private remote</em>, so that I can continue my work from somewhere else. But I still want to be able to receive updates from the <em>public remote</em>. And at this point, no commit I make should be pushed to the <em>public remote</em>.</p>

<p>The key should be to use multiple remotes, but I'm not sure how to handle the repository inside repository (inside repository...) thing right. As the setup will be relatively complex (I think) an additional workflow example would be very helpful.</p>
","5","2409752","",""
"65861084","2593810","2021-01-23 15:39:46","4","826","<git><github><repository><git-submodules><git-remote>","What happens to a git submodule when its referenced repo is deleted?","<p>Suppose I find an interesting repository on github that I want to use, I add it as submodule and then one day the owner of the repo decide to delete the repo, would my submodule become broken?</p>
","1","2593810","",""
"11796539","1565045","2012-08-03 13:17:58","0","57","<git><github><bitbucket><git-remote>","Merged git remotes not visible on single remote","<p>I've the following git remote configuration in order to push changes to two separate repositories (inspired by <a href=""https://stackoverflow.com/questions/849308/pull-push-from-multiple-remote-locations#answer-3195446"">pull/push from multiple remote locations</a>):</p>

<pre><code>[remote ""origin""]
    fetch = +refs/heads/*:refs/remotes/origin/*
    url = git@bitbucket.org:sgrodzicki/test.git
    url = git@github.com:sgrodzicki/test.git
</code></pre>

<p>This works well until I make a new clone somewhere:</p>

<pre><code>git clone git@bitbucket.org:sgrodzicki/test.git
</code></pre>

<p>The clone configuration has only one host:</p>

<pre><code>[remote ""origin""]
    fetch = +refs/heads/*:refs/remotes/origin/*
    url = git@bitbucket.org:sgrodzicki/test.git
</code></pre>

<p>The same thing with the other repository (GitHub):</p>

<pre><code>git clone git@github.com:sgrodzicki/test.git
</code></pre>

<p>Then it looks like this:</p>

<pre><code>[remote ""origin""]
    fetch = +refs/heads/*:refs/remotes/origin/*
    url = git@github.com:sgrodzicki/test.git
</code></pre>

<p>My question is: <strong>how to make these configuration changes visible on both hosts?</strong></p>
","0","1565045","",""
"29536941","1398409","2015-04-09 11:12:58","1","233","<git><permissions><git-remote>","Add remote server as git remote","<p>I tried to add a Git remote with</p>

<pre><code>git remote add remote-server ssh://domain_name.com/opt/test/testapp.git

git push remote-server master
</code></pre>

<p>The problem is that I am trying to push from the local server as user 'kute', and the file <code>opt/test/testapp.git</code> is owned by another user, say 'test'.
So, when I run <code>git push remote-server master</code>, I get the following permission issue:</p>

<blockquote>
  <p>fatal: Unable to create temporary file: Permission denied error:
  pack-objects died of signal 13 error: failed to push some refs to</p>
</blockquote>

<p>Is there any solution to this permission issue? </p>
","4","1398409","0","0"
"11981765","284113","2012-08-16 06:28:21","2","205","<git><git-remote>","couting number of files in git repository","<p>Is there any possibility to count number of file in a git remote reposity without cloning them? In CVS we will use </p>

<pre><code>cvs rls -lR $OldSrc $ProjectName'""  | grep -v -e '^\$' -e '$ProjectName' -e '^d' | wc -l
</code></pre>

<p>Where ,</p>

<pre><code>    OldSrc --&gt; Tag name [optional]
    ProjectName --&gt; Actual project repository name.
</code></pre>

<p>Kindly tell me the convenient command in git.</p>
","0","284113","",""
"29656306","1951857","2015-04-15 16:58:34","0","66","<git><git-merge><git-remote><git-config><git-merge-conflict>","Configure merge options for a particular remote repository in git?","<p>I'd like to use a particular merge option ('ours') for the recursive strategy when pulling from a particular remote repository, but not others.</p>

<p>I know about <code>git config branch.&lt;name&gt;.mergeoptions ""-Xours""</code>, but that's per-branch rather than per-remote repository.</p>

<p>The use case, if it's helpful: I am making a project template that I would like to be able to clone when starting a new project.  After working on the project for a while, I'd like to be able to merge in any non-breaking changes from the template with the assumption that conflicts should default to the project and not the template.</p>

<p>Any help in accomplishing this would be great.</p>
","0","1951857","",""
"29685585","343204","2015-04-16 20:44:26","1","47","<git><git-remote>","Is this git branch local or remote?","<p>I've setup my USB stick as a remote. Now, when I do <code>git branch</code> I get the following:</p>

<pre><code>dev/app/menus
master
usb/dev/app/banner
usb/dev/app/menus
</code></pre>

<p>How do I access <code>usb/dev/app/banner</code>?</p>

<p>Do I need to pull or fetch it first?</p>

<p>And is this now local or remote? (i.e. if I pulled out the USB stick could I merge that code).</p>
","1","343204","",""
"12578062","125429","2012-09-25 07:22:44","4","1322","<git><version-control><git-clone><git-remote>","Take arbitrary git working copy and make exactly the same as remote branch","<p>Say I have an arbitrary local git working directory that was cloned from some remote. I want to make the local git repository be EXACTLY the same as the remote, irrespective of what's happened to the local directory since it was cloned. I do not want to do another full clone.</p>

<p>Say the local working directory has:</p>

<ul>
<li>additional untracked files</li>
<li>deleted files </li>
<li>staged changes. </li>
<li>may be on some arbitrary branch. </li>
<li>have a bunch of commits since being cloned from remote</li>
</ul>

<p>Now I want to make this local repository reflect remote exactly. Here's my current solution but I'm not sure if it covers all cases and whether there is an easier solution:</p>

<pre><code>git stash
git clean -f -x -d
git checkout master
git fetch origin
git reset --hard origin/master
git pull origin master
</code></pre>

<p>Is there a better way to do this?</p>
","2","125429","0","0"
"48519439","1157814","2018-01-30 10:42:19","0","68","<git><git-branch><git-remote>","How to see all past branches in the git remote?","<p>I would like to list all branches, even those what already removed in a remote (origin). The main point that I would like to see event the removed ones</p>

<p>It would be OK just to see branch the names, but ideally the creation date and some other metainfo would be great like user name who created the branch.</p>

<p>I've found many related Q and A but neither lists the already removed branches. I am a newbie in git, so I do not know even is this possible, but I hope.</p>
","3","1157814","",""
"31628376","2536318","2015-07-25 16:00:10","9","1069","<git><github><push><git-remote>","Prevent git to push to wrong remote","<p>I have a local branch ""gh"" that I always want to push to my account on github; I also have another local branch ""lab"" that I always want to push to my organization's account on github.<br>
I have setup two remotes (gh and lab) for that.</p>

<pre><code>$ git remote -v
gh  git@Ninguem.github.com:Ninguem/prj.git (fetch)
gh  git@Ninguem.github.com:Ninguem/prj.git (push)
lab git@Ninguem.github.com:lab-rasparta-org/prj.git (fetch)
lab git@Ninguem.github.com:lab-rasparta-org/prj.git (push)
</code></pre>

<p>I'm afraid to inadvertently mess the two when pushing. Is there a way to prevent that?<br>
<strong>Note:</strong><br>
I've already fetched the two successfully, so I thing they're somehow ""linked"" together correctly... how do I manage what branches are ""linked"" to what remote branches and is there a safety mechanism?</p>
","1","2536318","0","0"
"31631726","66814","2015-07-25 22:26:13","2","990","<git><git-remote><git-checkout>","How does git deal with identical branch names from two different remote repo?","<p>If I set up two remote using <strong>git remote add</strong> for a repo, and the two repo contain a branch with the same name.  How does git know which branch of which repo I intend to use when I switch to it using <strong>git checkout</strong>?</p>
","0","66814","",""
"18926293","2317533","2013-09-20 21:39:14","0","270","<git><git-remote><git-config>","I don’t have an origin remote in my .git/config. How can I fix that?","<p>Not sure what I did wrong, but I started with a local repository, then pushed it to remote. (Yes, I am new.) My <code>.git/config</code> shows:</p>

<pre><code>[remote ""devgit""]
  url = devgit:groupname/product
  fetch = +refs/heads/*:refs/remotes/devgit/*
</code></pre>

<p>I really expected that except in the <code>url</code> entry, that <code>""devgit""</code> should be <code>""origin""</code>. I have another repo where that is the case.</p>

<p>Can I change this to origin? If so, how? I want people to be able to push/pull from this repo consistently with the way they do others. What is the likely error I made setting up the remote? (I assume that is when it went awry.)</p>

<p>Also, this <code>.git/config</code> does not yet have a <code>[branch ""master""]</code> section. Exactly what will cause that to take place?</p>
","0","2317533","",""
"51047785","868548","2018-06-26 16:41:24","4","534","<git><archive><git-remote><gitpython><git-archive>","git archive --remote command using GitPython","<p>How can I use command (git archive --remote) using GitPython? As per the GitPython docs we can use git directly. I am doing something like:</p>

<p>git = repo.git
git.archive(remote= '<a href=""http://path"" rel=""noreferrer"">http://path</a>')</p>

<p>But getting an error
 ""Exception is : Cmd('git') failed due to: exit code(1)""</p>

<p>Is there any sample that I can look at to execute git archive --remote in a python script?</p>

<p>Thanks</p>
","0","868548","",""
"40796328","5361741","2016-11-25 01:01:22","1","1512","<git><git-remote>","How to go back to latest remote commit git","<p>I had to go back to an earlier commit of my code locally, so I used <code>git reset --hard &lt;tag&gt;</code> to go back to that commit, how do I now go back to what the latest commit was (according to the remote repository)?</p>
","1","5361741","",""
"21807396","3033990","2014-02-16 04:44:27","3","1979","<git><git-branch><git-remote>","How to set up a git development environment when you're testing remotely","<p>This may seem like a silly question, but I feel like I understand GIT fairly well, and yet I can't seem to set up my development environment as I would like.  I'm either missing something really simple, or I'm going about it all wrong :)</p>

<p>I initialized a bare git repo on my server, cloned it to my local machine, committed my files and pushed to origin.  Then, locally I created three branches (master, release, develop) and published them all to origin.  I intend to have multiple developers pulling from the develop branch, and I would like to make sure they can't push to the master branch but that may be better for a different question.</p>

<p>Now, I make my changes to the files locally, and then upload them to the testing server and check the testing server through the web browser.  I would have to imagine that this is how most people test their work unless they have their computers configured as web servers and have php and mysql installed.  Once I'm happy with my changes, I push them to the origin repo, and everything works fine.</p>

<p>My challenge comes in keeping the testing server in synch with my local machine.  I've tried setting up a repo in my remote testing directory, and I've added a second remote to my local git repo, hoping I could push to the testing repo to synch the files on the testing server with my local files.  But I can't figure out how to have two remotes and keep both of them in synch with my local machine.  </p>

<p>If I create a new local branch, check it out to start working on a new feature and then push the branch to my testing remote, the head on the testing remote is still master and not my new feature branch.  Therefore, i'm making changes locally to a feature branch, but when I publish the changes to the testing server through coda, I'm actually changing files on the master branch of the testing repo.  If I can't keep my testing snapshots in synch with my local snapshots, I don't know how to take full advantage of gits branching features.  </p>

<p>Is it really that crucial that I am developing AND testing locally?  How on earth does one set up a development environment with git when you have to test remotely?  Is having a testing repo the completely wrong way to think about this?  There must be a way to have multiple remotes and have them checkout to the latest branch that is pushed so you can have an instance of your local files in synch remotely on a testing server.  PLEASE HELP!</p>
","3","3033990","",""
"14132492","407756","2013-01-03 03:04:10","7","8489","<git><heroku><ssh><ssh-keys><git-remote>","Why can't git resolve the hostname when I push to a valid SSH address?","<p>I am deploying an app on Heroku so I created a Heroku app from a repo and then did <code>git push heroku master</code>. When I do this it keeps giving me the error:</p>

<pre><code>!  Your key with fingerprint xxx is not authorized to access heroku-app.

fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
</code></pre>

<p>I tried various things with changing my SSH keys including deleting them all and creating new ones. Still it gives me the same error. I have added the key to Heroku.</p>

<p>Then I tried running <code>ssh -vT git@heroku.com:heroku-app.git</code> and the result was:</p>

<pre><code>OpenSSH_5.9p1, OpenSSL 0.9.8r 8 Feb 2011
debug1: Reading configuration data /etc/ssh_config
debug1: /etc/ssh_config line 20: Applying options for *
debug1: /etc/ssh_config line 53: Applying options for *
ssh: Could not resolve hostname heroku.com:heroku-app.git: nodename nor servname provided, or not known
</code></pre>

<p>I cannot figure out what that error is pointing to. The hostname is definitely valid. Is it possible I am don't have something I need in the SSH config file? Any ideas would be fantastic because I have spent quite a few hours today trying to get this to work without avail.</p>
","8","407756","0","0"
"48730612","889075","2018-02-11 10:39:43","0","183","<git><merge><git-merge><git-remote>","How does git update local interim (missing on remote) commits on remote branch","<p>Say, I have a branch <code>featureA (A-&gt;B-&gt;C-&gt;F-&gt;G)</code> that has branched off from <code>master (A-&gt;B-&gt;C-&gt;D-&gt;E)</code> since the 3rd third commit <code>C</code>. </p>

<p>When <code>master</code> is merged into <code>featureA</code>, <code>featureA</code> now looks like <code>featureA (A-&gt;B-&gt;C-&gt;D-&gt;E-&gt;F-&gt;G-&gt;T)</code> where <code>-&gt;D-&gt;E</code> are of <code>master</code> and <code>T</code> represents the merged commit. </p>

<p><code>git status</code> tells me that <code>Your branch is ahead of 'origin/featureA' by 3 commits.</code></p>

<p>and on pushing <code>featureA</code> to <em>remote's</em> <code>featureA</code>, <code>featureA</code> on remote looks like <code>(A-&gt;B-&gt;C-&gt;D-&gt;E-&gt;F-&gt;G-&gt;T)</code>.</p>

<p>What I'd like to know as to how git merges interim commits <code>-&gt;D-&gt;E</code> (that were initially missing on remote featureA) on remote.</p>

<p>Does git tries to replicate the local <code>featureA</code> onto remote <code>featureA</code> or internally how it works. I'm not sure if I am correctly phrasing my doubt.</p>

<p>I hope somebody can ascertain my doubt even though it may not be correctly phrased.</p>

<p>thanks
dk</p>
","2","889075","",""
"31701210","585501","2015-07-29 13:02:24","4","458","<git><git-remote><git-track>","Does 'git branch -u (or --set-upstream-to)' lose tracking information of all the existing remote tracking branches?","<p>I was in my 'master' branch when I thought of creating a new branch and did it by:</p>

<pre><code>$ git checkout -b od_newstructure
Switched to a new branch 'od_newstructure'
</code></pre>

<p>The I committed few changes and added this new branch to remote and started tracking</p>

<pre><code>$ git commit
$ git branch -u origin/od_newstructure
Branch od_newstructure set up to track remote branch od_newstructure from origin.
$ .. some other work including git pull and git push
</code></pre>

<p>I now wanted to switch back to master. So I did </p>

<pre><code>git checkout master
Switched to branch 'master'
</code></pre>

<p>But then, master seemed not be tracking origin/master anymore!</p>

<pre><code>$ git branch -vv
* master          d1db2e3 Subdivided into several namespaces
  od_newstructure d1db2e3 [origin/od_newstructure] Subdivided into several namespaces
</code></pre>

<p>It was also verified by a git pull</p>

<pre><code>$ git pull
There is no tracking information for the current branch.
Please specify which branch you want to merge with.
See git-pull(1) for details
</code></pre>

<p>My question is why did the previous tracking branches lost its tracking information when I switched to a new tracking branch? Is this a default and sound behavior? Would I have to add upstream by <code>git branch -u</code> every time I switch to a tracking branch?</p>
","3","585501","0","0"
"48820631","1386448","2018-02-16 05:32:41","22","19592","<git><git-branch><git-remote>","git remote prune origin does not delete the local branch even if its upstream remote branch is deleted","<p>This is a common use-case for me, I clone a repository, checkout a branch, do some code changes, make multiple commits, then when it's stable, I do a push to remote, eventually the branch gets merged and deleted, and I'm left with a local branch with upstream gone.</p>
<p>I was looking for a safe way of deleting all such branches. From the description, it seemed like <code>git remote prune origin</code> is doing this exactly. But it doesn't seem to be working for me.</p>
<p>Seeing the following behaviour, the branch <code>encrdb_init</code> has been deleted from <code>remote</code> but the <code>git remote prune origin</code> command does not seem to prune it. I am not sure why.</p>
<pre><code>$ git branch
  bugfix/encrdb_init
  * master
$
$ git remote prune origin
$
$ git checkout bugfix/encrdb_init
  Switched to branch 'bugfix/encrdb_init'
  Your branch is based on 'origin/bugfix/encrdb_init', but the upstream 
  is gone.
  (use &quot;git branch --unset-upstream&quot; to fixup)
$
$ git branch
  bugfix/encrdb_init &lt;&lt;&lt; shouldn't this have been pruned?
  * master
</code></pre>
<p>for reference adding output of <code>git remote show origin</code></p>
<pre><code>$ git remote show origin
* remote origin
  Fetch URL: &lt;redacted&gt;
  Push  URL: &lt;redacted&gt;
  HEAD branch: master
  Remote branches:
    SSL_test                                                  tracked
    addNodeFix                                                tracked
    autoprefix                                                tracked
    release/1.0.2                                             tracked
  Local branches configured for 'git pull':
    bugfix/encrdb_init          merges with remote bugfix/encrdb_init
    master                      merges with remote master
    release/1.0.2               merges with remote release/1.0.2
  Local refs configured for 'git push':
    master                 pushes to master                 (up to 
date)
    release/1.0.2          pushes to release/1.0.2          (up to 
date)

$ git branch -vv
* bugfix/encrdb_init          341a078c [origin/bugfix/encrdb_init: gone] &lt;redacted comment&gt;`
</code></pre>
","8","1386448","0","0"
"22310512","234264","2014-03-10 20:22:36","0","397","<git><deployment><git-push><git-remote>","Is it possible to stop tracking files in the git repo, but have them remain in all remote checkouts?","<p>I accidentally added a third-party library into my repo and pushed the changes to the live server, which is a bare repo with a post-receive hook that checks out the master branch into the webroot.</p>

<p>I'd like to stop tracking the files in my local repo, add them to the .gitignore and then push my changes to the live server, without deleting the files from the live server. I still need that library on the live server, just not managed by version control. I'd like to be able to make changes to the library on the live server (all best practices aside) without it being overwritten with the version from the git repo on every push.</p>

<p>Is this possible? I've tried it with other repos and it's always deleted.</p>
","0","234264","",""
"41760564","2897683","2017-01-20 09:49:26","0","35","<git><git-remote>","git, create remote branch in the same place as another remote","<p>How can I create a remote branch based on another already existing remote without checking out to creating local and pushing to the remote. </p>

<p>To elaborate a little, at <code>repo1</code> I am at <code>branchA</code>. There exist an <code>origin/branchB</code> and I want to create a <code>origin/branchC</code> in the same place as B. A is different from both. I know <code>B</code> is a duplicate to <code>C</code> in <code>repo1</code> but at another <code>repo2</code> eg, it will be different. </p>

<p>(I know the question sounds weird but in my large company environment the production build needs to have a single branch name, but checking all repos is impossible due to space limitations. )</p>
","0","2897683","",""
"59621764","8496110","2020-01-07 03:20:59","0","489","<git><github><pull-request><git-checkout><git-remote>","git checkout a pull request branch on your own fork","<p>We have this original repo called <code>origin</code> that all of us fork from and make changes.</p>

<p>I have a fork of this original repo called <code>fork1</code> my friend has a fork of this original repo called <code>fork2</code>.</p>

<p>Today, he made changes on <code>fork2</code> on branch <code>feature</code> and wanted to open a pull request to merge the branch <code>feature</code> to <code>origin</code>
To approve his pull request, I wanted to test out <code>feature</code> on my <code>fork1</code>. How should I do it?</p>
","2","8496110","0","0"
"42031168","5510446","2017-02-03 18:54:08","2","1293","<git><version-control><git-push><git-remote>","git remote rm not allowing me to remove config section?","<p>So, this is my first time making a website, using git, and the such.</p>

<p>i was trying to use git as a way of updating my website. i was told to do the following:</p>

<pre><code>git remote add live ssh://user@domain.com/absolute-path-to-site
</code></pre>

<p>followed by:</p>

<pre><code>git push live master
</code></pre>

<p>when i tried pushing i got the following message:</p>

<blockquote>
  <p>fatal: '/absolute-path-to-site' does not appear to be a git
  repository fatal: Could not read from remote repository.</p>
  
  <p>Please make sure you have the correct access rights and the repository
  exists.</p>
</blockquote>

<p>i figured i did something wrong and tried backtracking by using</p>

<pre><code>git remote rm ssh://user@domain.com/absolute-path-to-site
</code></pre>

<p>well it doesn't let me remove the path, I get:</p>

<blockquote>
  <p>error: Could not remove config section 'remote.ssh://user@domain.com/absolute-path-to-site'</p>
</blockquote>

<p>I can't really find anything to help my with this situation (or I'm not looking right) please help.</p>
","11","5510446","0","0"
"42059382","7372627","2017-02-06 01:53:46","0","908","<git><github><gitlab><git-remote>","Update remote repository git","<p>I am trying to pushed my code on gitlab existing repository
I have pushed in it just few days before and noe I have modified some folders and files in my local repository and when I commit and push my code to my remote repo it is showing 
After commit -> NO changes added to commit
and after push -> Everything is up to date</p>

<p>And when I look into remote repo , nothing is updates, it is showing my old code there..
I think this is because I update my local repository with some folders and files
anyone here has an idea what could be the problem?</p>
","4","7372627","0","0"
"60490170","12993714","2020-03-02 13:46:01","5","11017","<repository><hostname><git-remote><resolve>","ssh: Could not resolve hostname github.com error","<p>I am using raspberrypi terminal using vnc viewer at window and I am trying to clone Git repository. But I am keep getting this error message. </p>

<pre><code>ssh: Could not resolve hostname github.com: Temporary failure in name resolution fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists.
</code></pre>

<p>I've been trying to solve this error for a whole day but i still cannot solve this error.. It would be great to know solutions for this. Thank you</p>
","4","12993714","",""
"42074748","5864667","2017-02-06 18:29:09","0","2236","<git><github><git-remote>","Local out of date git","<p>When I run git remote show origin on terminal, it shows the following - 
Local out of date. How can one update it?
I think that this is the probable reason why I am not able to push changes to the repository.     </p>

<p><div class=""snippet"" data-lang=""js"" data-hide=""false"" data-console=""true"" data-babel=""false"">
<div class=""snippet-code"">
<pre class=""snippet-code-js lang-js prettyprint-override""><code>* remote origin
  Fetch URL: https://github.com/tono/emotion-detection.git
  Push  URL: https://github.com/tono/emotion-detection.git
  HEAD branch: master
  Remote branches:
    master tracked
    tono tracked
    boro tracked
  Local branch configured for 'git pull':
    master merges with remote master
  Local refs configured for 'git push':
    master  pushes to master  (local out of date)
    boro pushes to boro (local out of date)</code></pre>
</div>
</div>
</p>
","2","5864667","0","0"
"4717700","110313","2011-01-17 20:44:10","2","997","<git><git-rebase><git-remote>","git rebase remote, but keep changes locally for later commit","<p>I goofed and committed development changes on the master, and pushed them upstream. Whats the best way to back out those changes from the remote repo, but keep a branch locally for later merging into master?</p>
","0","110313","0","0"
"59845959","1984868","2020-01-21 17:04:09","0","371","<git><composer-php><git-remote>","Composer package conflict in git repository; how to untrack files but avoid deletion of files when pushing to remote","<p>I installed a package on my web application via composer.
And added the package folder to .gitignore, whilst committing <code>composer.json</code> and <code>composer.lock</code></p>

<p>To deploy to our server, we Push to a bare Git remote on the server which in turn pushes the modified files to the relevant location on the server.</p>

<p>This workflow was all working fine.</p>

<p>At a later date, someone else working on the repository added the package files to the repository and removed the package from gitignore.</p>

<p>We want the package version to be managed purely by composer and not by the git repository, as it was before.</p>

<p>My only idea so far is to do the following:</p>

<ol>
<li>Remove the files from the repo and add the package folder back to gitignore. Commit this.</li>
<li>Push to the remote (which will obviously push the removed files)</li>
<li>run <code>composer update</code> quickly on the server once pushed, to reinstall the removed package.</li>
</ol>

<p>BUT the problem here is that this <em>will</em> remove the package for a few seconds from the server, and we want to avoid that if possible as it is a core plugin on the site. We don't want to cause something to break.</p>

<p>Is there any way I can remove the package folder from being tracked, whilst <strong>NOT causing the package to be deleted from the remote when the commit is pushed</strong>?</p>

<p>I have read about <code>assume-unchanged</code> and <code>skip-worktree</code> here (<a href=""https://stackoverflow.com/questions/13630849/git-difference-between-assume-unchanged-and-skip-worktree/13631525#13631525"">Git - Difference Between &#39;assume-unchanged&#39; and &#39;skip-worktree&#39;</a>), but I am unsure which to use and what effect either of these commands will have (if any) specifically on the remote?</p>
","2","1984868","",""
"22120955","3368909","2014-03-01 22:02:34","0","283","<git><ssh><git-remote>","Secure git push and pull using git without password, from remote repository","<p>I want to push and pull a repository from a remote server without having to use a password.  I have tried following using the Git guide, but it does not work, I still get asked for a password.</p>

<p>Here is what I've done:</p>

<ol>
<li><p>Generate a key in <code>.ssh</code> on git</p>

<pre><code>ssh-keygen -t rsa -C “git@github.com”
</code></pre>

<p>New key is generated.</p></li>
<li><p>Copy and paste to remote server (Raspberry Pi) in <code>.ssh</code>.</p></li>
</ol>

<p>But this does not work.  I cannot find anything on secure git push and pull from the remote server without password.</p>
","2","3368909","",""
"4938239","175250","2011-02-08 20:48:07","10","10722","<git><git-push><git-remote>","Using git to publish to a website","<p>I used this guide to use git to autopublish my changes on my website when I push to my remote origin git repository:</p>

<p><a href=""http://www.lwp.ca/james/2010/03/using-git-to-manage-online-website-projects/"">http://www.lwp.ca/james/2010/03/using-git-to-manage-online-website-projects/</a></p>

<p>Here's my /hooks/post-update file:</p>

<pre><code>cd ../../public_html/dir/wbg
env -i git pull
</code></pre>

<p>Here's my directory structure:</p>

<p>/home/git/wbg.git  &lt;-- my remote git repository</p>

<p>/home/public_html/dir/wbg &lt;-- my web folder</p>

<p>When I run</p>

<pre><code>git push origin master
</code></pre>

<p>The repository updates but my web folder is still empty. Any ideas?</p>

<p>Edit: if any future traffic sees this, my real problem was that BOTH your remote origin AND your destination website directory must be git repositories. You can't just set it up to copy your project to a new folder unless that folder is also a git repo.</p>
","2","175250","0","0"
"3736998","157984","2010-09-17 16:05:50","3","26640","<git><git-remote>","Suddenly unable to git fetch from origin","<p>In my repository, I remotely track our main repository, which is bare.  I've never had any problems with fetching from origin the past.</p>

<p>However, when I tried to remote update this morning, I got the following error:</p>

<pre><code>fatal: '/users/integrator/project' does not appear to be a git repository
fatal: The remote end hung up unexpectedly
error: Could not fetch origin
</code></pre>

<p>I haven't changed anything, and the repository is definitely still there.  There are several people who have access to the integrator account, but they generally do merges and pulls.  We don't allow pushing to this repository.</p>

<p>My question is: what could have caused this to happen? Or, are there any diagnostics I can use to figure out what is going wrong?  I am not the only user suddenly having this problem, so the problem is more likely on the side of origin.</p>

<p>Update: </p>

<p>When I try to clone the bare repository, I get the following error:</p>

<pre><code>git clone /users/integrator/project
Cloning into project...
fatal: failed to open '/users/integrator/project/.git/objects': No such file or directory
</code></pre>

<p>Here's a list of the contents of /users/integrator/project:</p>

<pre><code>config
HEAD
packed-refs
ssh_helper
bin/
hooks/
info/
  exclude
objects/
  [lots of folders with two character long names]
  info/
  pack/
refs/
  heads/
  tags/
</code></pre>
","1","157984","0","0"
"60086121","12352707","2020-02-06 00:36:05","1","893","<git><github><git-remote><git-tag>","Unable to Push git tags from remote?","<p>I'm trying to create some tags on a local clone and push it to master, and delete a tag from remote and push it to my local clone, to be clear, the remote is github, but were talking about tags, not releases.</p>

<p>I create a tag the tag <code>v0.1-beta</code> on remote.
I create a tag <code>v1.0-full-release</code> on local.</p>

<p>I'm noticing that even after a git fetch, git pull, and git push on my local end that nether side see's each others tags.</p>

<p>I looked it up and found that you could use <code>git fetch --tags</code> to fetch tags from remote, so now my local client is up to date. But I can't find a way to push my local <code>v1.0-full-release</code> tag to remote. <code>Git push</code> isn't doing it, and I can't find anything in the documentation.</p>

<p>SideNote: I've done most of my testing in the terminal, but I also notice in both Github for desktop, Kitkracken, and Gmaster that when I created the tag locally, and the other on the remote, fetching or pushing from those clients would't sync the tags ether. </p>

<p>If someone could also explain why it was decided that the standard <code>git fetch</code>, <code>git pull</code>, and <code>git push</code> shouldn't include tags by default, that would also be great.</p>
","1","12352707","",""
"5218573","422716","2011-03-07 10:36:19","0","161","<git><git-push><git-remote>","git remote /home/username/www/lorem.git","<p><br>
How can I use /home/username/www/example.git with remote add command?</p>

<p>if I use this:  </p>

<pre><code>git remote add origin user@example.com:/home/user/www/example.git   
git push origin master
</code></pre>

<p>I got this error:   </p>

<pre><code>error: src refspec master does not match any.   
error: failed to push some refs to 'user@example.com:/home/user/www/example.git'
</code></pre>
","0","422716","",""
"66361517","2437508","2021-02-25 02:27:23","0","1106","<git><git-remote><git-bare>","git - working with remote branches from a bare repo","<p>I want to do some funky stuff with a project on github (not mine). So I want to basically clone it but I don't want to have a working tree... so this is what I do: I create a bare repo locally, then I added a remote to the github repo. I fetched, I get all the stuff that that repo contains.... I am a happy guy..... until I want to check the branches that are available:</p>
<pre><code>$ git branch -a
$
</code></pre>
<p>Ok... that is not what I was expecting. If I try to check any branch from the repo (that I know is there), I just get git to tell me the reference doesn't exist:</p>
<pre><code>$ git show --summary origin/master
fatal: ambiguous argument 'origin/master': unknown revision or path not in the working tree.
Use '--' to separate paths from revisions, like this:
'git &lt;command&gt; [&lt;revision&gt;...] -- [&lt;file&gt;...]'
</code></pre>
<p>How do I address branches (or actually anything) from the remote repo from my bare repo?</p>
<h1>Update</h1>
<p>My assumptions that git should be able to handle this is actually correct. It does manage it correctly... however, because it is a big project, git failed while running the fetch after adding the remote... and that error message I did not catch before. :-O</p>
<pre><code>$ git fetch upstream
remote: Enumerating objects: 60400, done.
remote: Counting objects: 100% (60400/60400), done.
remote: Compressing objects: 100% (32/32), done.
Receiving objects: 100% (4133663/4133663), 1.41 GiB | 12.29 MiB/s, done.
remote: Total 4133663 (delta 60370), reused 60389 (delta 60368), pack-reused 4073263
Connection to github.com closed by remote host.
Resolving deltas: 100% (3134856/3134856), done.
</code></pre>
<p>So... all in all, it's my fault, apparently.</p>
","9","2437508","",""
"30269857","3311358","2015-05-15 22:47:56","1","40","<git><git-remote>","How can I expose a git repo so that users on other machines can add it as a remote?","<p>I have a git repo on an Ubuntu server. I would like users on MacOS workstations to be able to add this repo as a remote, and push files to it. How can I configure the git repo on the Ubuntu box to allow this?</p>

<p>Sorry if this is an elementary question, or doesn't make sense. I'm still finding my footing with git, and I'm not even sure what to Google to find the answer to this.</p>
","4","3311358","",""
"30314933","1914692","2015-05-19 00:36:36","1","421","<git><git-merge><git-remote>","Git merge: why I saw some are ""Merge branch 'master' of github.com:foo/bar"", and some are ""Merge remote-tracking branch 'origin/master'""?","<p>Git merge: why I saw some are ""Merge branch 'master' of github.com:foo/bar"", and some are ""Merge remote-tracking branch 'origin/master'""?</p>

<p>In my understanding, ""merge"" always merge remote tracking branch.</p>
","1","1914692","0","0"
"30322093","4481549","2015-05-19 09:46:05","5","11947","<windows><git><heroku><git-remote>","How can I edit my .git/config file?","<p>How can I edit my <code>.git/config</code> file? </p>

<p>Apparently, my <code>heroku</code> remote is set to something other than <code>heroku</code>; as a result, I am unable to properly deploy my Rails app on Heroku. However, I can't find how to edit it to set it to the right thing.</p>

<p>Where can I find the config file? I can't find a file named that way in my repository or in my Git folder installation. Where should I search for it and can I edit it?</p>

<pre><code>$ git remote -v
heroku  https://git.heroku.com/pure-plateau-4958.git (fetch)
heroku  https://git.heroku.com/pure-plateau-4958.git (push)
origin  git@github.com:vike27/sciencevest100.git (fetch)
origin  git@github.com:vike27/sciencevest100.git (push)
</code></pre>

<p>however heroku open doesn't work and heroku support says it is because of the previous afformentioned error in my .git/config file</p>

<p>I am on Windows8</p>
","4","4481549","0","0"
"13577181","300224","2012-11-27 03:57:33","2","89","<git><git-remote>","git remote server moved, how to update working copy configuration?","<p>Here is my current set up</p>

<pre><code> FDMBA:EnglishStudy willentriken$ git remote -v
 origin root@devel.phor.net:~/repos/echo.git (fetch)
 origin root@devel.phor.net:~/repos/echo.git (push)
</code></pre>

<p>But we changed the hostname of the server from devel.phor.net to something else. Can I ""repoint"" my local git repository to point to this new server address without losing any of the local commits, etc. that I have?</p>
","0","300224","",""
"13725059","1725377","2012-12-05 14:08:26","4","1841","<git><github><branch><push><git-remote>","Can't push branch to github","<p>I forked a github repo and cloned the fork to my machine. Then I created a new branch from <code>master</code> called <code>#25</code> (the issue's ID I want to fix). I fixed the bug and commited to by branch. Now I'm trying to push this branch to github, so I can send a pull request, but it doesn't work. Even though I followed the instructions, the branch won't show up on github.</p>

<pre><code>$ git push origin #25
Everything up-to-date
</code></pre>

<p>I'm on the correct branch:</p>

<pre><code>$ git branch
* #25
  master
</code></pre>

<p>And the commit was also successful:</p>

<pre><code>$ git log
commit 083f15035feab5af1673ed3685e10cca6e24aeeb
Author: John Example &lt;johnexample@gmail.com&gt;
Date:   Wed Dec 5 14:53:16 2012 +0100

    Fixed #25: Window now correctly resizes to fullscreen.
</code></pre>

<p>What am I doing wrong?</p>
","5","1725377","",""
"31284744","1236694","2015-07-08 06:08:08","2","49","<git><caching><git-push><git-commit><git-remote>","how does Git internally handle git push where no outstanding commits","<p>How does Git internally handle a <code>git push</code> for the case where the local branch is up-to-date with the remote , i.e. no outstanding commits ?</p>

<p>Does Git actually retrieve the latest state from the remote origin to determine that ""Everything is up-to-date"" --or-- does Git rely on its local cache of the remote origin ?</p>
","0","1236694","0","0"
"13810889","1725377","2012-12-10 23:09:49","0","92","<git><version-control><bitbucket><git-remote>","Remove remote git repository","<p>Is it possible to completely delete a remote repository (assuming I have write access). I'm trying to completely clear a repository on BitBucket and push a fresh copy. I know I can delete and recreate the repo on BitBucket itself, but I was wondering if I could just ""clear"" it on the terminal?</p>
","0","1725377","",""
"31531443","1466978","2015-07-21 06:02:26","4","235","<git><git-clone><git-remote>","git cloning two times and pushing through two levels","<p>I am a newbie in git. I don't know if this is possible. what I am doing is I cloned a remote repository in my desktop. I then again cloned that cloned repo into another folder. Is there anyway to connect all these repo. Will i be able to make change to the second clone and push it through first clone and finally to remote repository?</p>
","0","1466978","0","0"
"66588076","2128007","2021-03-11 18:05:10","1","59","<git><devops><githooks><git-remote><git-mirror>","How to make sure developers use new git remote after repository migration","<p>Every answer about migrating git repo says:</p>
<pre><code>git clone --mirror git@github/odlrepo.git
git push --mirror git@github/newrepo.git
</code></pre>
<p>But nobody says, what to do after...</p>
<p>How to force developers to use <strong>newrepo</strong>?</p>
<p>Solutions that I came with are:</p>
<ul>
<li>git hook on <strong>oldrepo</strong> which will push changes to <strong>newrepo</strong> (but if developers keep pushing to both - it seems like its asking for troubles)</li>
<li>git hook which blocks commits and says &quot;change remote, we are using now <strong>newrepo</strong></li>
</ul>
<p>But maybe there are some better solutions?</p>
","5","2128007","0","0"
"22019755","3351916","2014-02-25 16:07:39","1","105","<git><version-control><push><git-remote><branching-strategy>","git workflow: several developers, only 2 branches","<p>I've the following situation:</p>

<p>One internal server (server1) with the main repo with 2 branches <strong>master</strong> and <strong>dev</strong>, 
four developers with 3 clones of the git working with branches of the <strong>dev</strong></p>

<p>Rules:</p>

<ol>
<li>the server1/master cannot be touched or merged by the developers</li>
<li>every developers needs to update version of server1/master before work and before push</li>
</ol>

<p>I think about that procedure:
The developer 1 has to do:
after <strong>git clone</strong> and maybe <strong>git pull</strong>, every day will be something like:</p>

<pre><code>git checkout dev
git pull (for synch every modification from other developers)
git checkout -b myModification (for making a branch from dev)
</code></pre>

<p>after making modification add and commit:</p>

<pre><code>git checkout dev
git merge --no-ff myModification
*git pull (for fetching  modification in dev made in the meanwhile from others developers)
</code></pre>

<p>after testing on dev branch:</p>

<pre><code>git push origin dev
</code></pre>

<p>I would like to know </p>

<ol>
<li>what is the best workflow definition for my problem </li>
<li>what are the git command for every developers</li>
<li>If the <strong>git pull</strong> is correct or is better to have <strong>git rebase -i dev</strong> or change the position of this command</li>
</ol>

<p>thank you in advance</p>
","0","3351916","",""
"22148582","417629","2014-03-03 13:53:58","4","6372","<git><git-branch><git-pull><git-remote>","Why can't I git pull from a remote?","<p>I'm trying to do a <code>git pull</code> from a remote repo on WP Engine, and running into a problem.</p>

<pre><code>$ git pull production master
fatal: Couldn't find remote ref master
$ fatal: The remote end hung up unexpectedly
</code></pre>

<p>I ran the following for more info;</p>

<pre><code>$ git branch -a
  master
* wpengine
  remotes/origin/HEAD -&gt; origin/master
  remotes/origin/master
</code></pre>

<p>And then tried;</p>

<pre><code>$ git pull production origin/master
fatal: Couldn't find remote ref origin/master
$ fatal: The remote end hung up unexpectedly
</code></pre>

<p>And also;</p>

<pre><code>$ git pull production remotes/origin/master
fatal: Couldn't find remote ref remotes/origin/master
$ fatal: The remote end hung up unexpectedly
</code></pre>

<p>Am I referencing the remote branch that I want to pull incorrectly, or is there a problem with WP Engine that I need to solve?</p>
","10","417629","0","0"
"60134199","12352707","2020-02-09 06:52:54","1","302","<git><git-merge><git-commit><git-remote>","What is the standard practice when you're done with a git branch?","<p>I forked a repo, then created a branch called <code>patch1</code> made changes and committed them, then I created a pull request upstream and got it merged upstream with master. But in my local repo the branch isn't merged, how do I pull the merge from upstream without getting the rest of the branches from upstream that I don't want/need such as <code>Hotfix12</code> or <code>NewFeature5</code>? </p>

<p>What is standard practice here?</p>
","0","12352707","",""
"48936752","1936237","2018-02-22 20:37:54","2","957","<git><git-submodules><git-remote><git-bare>","Git: Push a local git submodule, including submodule files, to a remote bare repository","<p>I have two local projects which I manage with <code>git</code>, one being dependent on the other – like this:</p>

<pre><code>project A/
├── project B/     
│   ├── file B₁
│   ├── file B₂
│   ├── …
</code></pre>

<p>It makes sense to me to have <code>project B</code> as a git submodule of <code>project A</code>.</p>

<p>Now, I have set up a remote <em>bare</em> repository for <code>project A</code> for backup and sharing purposes. Of course, I want the remote repository to contain all of <code>project B</code>, including its files (<code>file B₁</code>, <code>file B₂</code>, …). But <code>git push</code> and <code>git push --recurse-submodules=on-demand</code> don’t achieve this. Whenever I list the files in my remote repository by <code>git ls-tree -r HEAD</code>, only the files of <code>project A</code> itself are listed. This <em>does</em> make sense to me.</p>

<p>However, is there a way to push the entire submodule <code>project B</code> to my remote base repository somehow, preferably in a clean way?</p>
","0","1936237","0","0"
"3829426","262667","2010-09-30 09:42:43","5","2951","<git><git-fetch><git-remote>","git fetch with path instead of remote","<p>I understand the idea of running <code>git fetch &lt;remote&gt;</code>, because the remote branches are then available with <code>git checkout &lt;remote&gt;/&lt;branch&gt;</code>.</p>

<p>But how does it work if I just run</p>

<pre><code>git fetch path/to/other/repo
</code></pre>

<p>How can I checkout the corresponding branches? Note that the operation runs silently (even with <code>--verbose</code>), and that no new branch is created.</p>

<p><strong>edit</strong>: just to be clear: I perfectly understand how git works with remotes. I'm just curious about this alternate syntax <code>git fetch path/to/remote</code>, or <code>git fetch &lt;url&gt;</code>. How is it supposed to work? Why does it not create new branches? Why does it run silently even in verbose mode? What is the intended usage?</p>
","0","262667","",""
"22607535","1296313","2014-03-24 11:01:57","0","914","<git><visual-studio><git-remote>","Are git bare repositories on network drives a bad idea for collaboration?","<p>We are a small team of 3-5 developers that use around 20-30 Visual Studio projects.</p>

<p>Until now we didn't use any source control method.</p>

<p>We decided to give git a try.</p>

<p>We have been playing with success locally having our personal repositories to track our development.</p>

<p>Now i want to start the real use for us which is to develop things in parallel by using git properly.</p>

<p>I wanted just to create a bare repository for each project and store it a local file server.</p>

<p>I dont want to go online on github or any other system, nor i want to create a git *nix box to act as server.</p>

<p>Is this a terrible idea?</p>
","6","1296313","",""
"67077107","7571870","2021-04-13 14:44:38","0","8","<git><git-remote>","Manage git repo using custom remote origin","<p>We have a codebase which is internal to our company - so we can't check in code to a github account for example. Is it possible to instead configure the remote origin to point to a designated server? That server would be within the company's VPC and would be where you push a commit. How would that server need to be configured? I tried searching online but most of the results I got were around switching remote origins between bitbucket/github.</p>
","2","7571870","",""
"67100567","263268","2021-04-15 00:05:48","2","554","<git><git-clone><git-remote>","Why isn't git clone setting up a remote tracking branch?","<p>On a new laptop running Git 2.24.3 (Apple Git-128), I notice that whenever I clone a repo, I don't get a remote (and hence remote tracking branch) setup:</p>
<pre><code>$ git clone git@gitlab.com/myuser/myproject.git
Cloning into 'myproject'...
remote: Enumerating objects: 70, done.
remote: Counting objects: 100% (70/70), done.
remote: Compressing objects: 100% (40/40), done.
remote: Total 70 (delta 34), reused 63 (delta 27), pack-reused 0
Receiving objects: 100% (70/70), 180.33 KiB | 124.00 KiB/s, done.
Resolving deltas: 100% (34/34), done.
$ cd myproject
$ git status
On branch master
nothing to commit, working tree clean
$ git remote -vv
$
$ git branch -a
* master
$ ls -l .git/refs
total 0
...redacted... heads
...redacted... remotes
...redacted... replace
...redacted... tags
$ ls -l .git/refs/remotes
$
</code></pre>
<p>Is there some setting somewhere I need to change? It's a bit tedious having to manually create a remote each time when I always want to push back from where I cloned.</p>
<p>The documentation clearly says this should be happening:</p>
<blockquote>
<p>Clones a repository into a newly created directory, creates remote-tracking branches for each branch in the cloned repository (visible using git branch -r), and creates and checks out an initial branch that is forked from the cloned repository's currently active branch.</p>
</blockquote>
<p>I'm getting the active branch checked out, but no remote.</p>
","14","263268","0","0"
"4209208","447989","2010-11-17 21:11:36","79","8723","<git><github><git-push><git-remote>","How to convert a readonly git clone from github to a forked one","<p>From time to time I encounter this issue.</p>

<p>Let's say that I did following to read the source code of rails because I am running into some issues.</p>

<pre><code>git clone git://github.com/rails/rails.git
</code></pre>

<p>During the research I tested something and now I have a fix I would like rails core team to take a look at. How do I push my changes to a forked version of rails.</p>

<p>Remember when I cloned, I did not clone a forked version but a read-only version.</p>

<p>It is not that I am opposed to forking. It is just that sometimes I think I am just going to browse then I want to add something.</p>
","1","447989","0","0"
"4235964","514827","2010-11-21 01:33:11","4","8658","<git><github><git-push><git-pull><git-remote>","What can I do when git push fails with ...""local out of date""?","<p>I'm sure this is a pretty easy fix, but I'm not sure why my pushes to GitHub are failing.</p>

<p>Right now it looks like:</p>

<pre><code>$ git push origin master
To git@github.com:user_name/project_name.git
 ! [rejected]        master -&gt; master (non-fast-forward)
error: failed to push some refs to 'git@github.com:user_name/project_name.git'
To prevent you from losing history, non-fast-forward updates were rejected
Merge the remote changes before pushing again.  See the 'Note about
fast-forwards' section of 'git push --help' for details.
</code></pre>

<p>And: </p>

<pre><code>$ git remote show origin
* remote origin
  Fetch URL: git@github.com:user_name/project_name.git
  Push  URL: git@github.com:user_name/project_name.git
  HEAD branch: master
  Remote branch:
    master tracked
  Local ref configured for 'git push':
    master pushes to master (local out of date)
</code></pre>

<p>Also, when I try a git pull:</p>

<pre><code>$ git pull
You asked me to pull without telling me which branch you
want to merge with, and 'branch.master.merge' in
your configuration file does not tell me, either. Please
specify which branch you want to use on the command line and
try again (e.g. 'git pull &lt;repository&gt; &lt;refspec&gt;').
See git-pull(1) for details.

If you often merge with the same branch, you may want to
use something like the following in your configuration file:

    [branch ""master""]
    remote = &lt;nickname&gt;
    merge = &lt;remote-ref&gt;

    [remote ""&lt;nickname&gt;""]
    url = &lt;url&gt;
    fetch = &lt;refspec&gt;

See git-config(1) for details.
</code></pre>

<p>What did I do to cause this state ... and what should I do to fix it?</p>
","0","514827","",""
"49590436","2665148","2018-03-31 17:20:25","0","55","<git><commit><git-branch><pull-request><git-remote>","Keep state of latest git commit--but remove my own, earlier commits I do not want to show.","<p>I could not quite find an answer to this simple problem. I have created a feature branch and have added several commits. No one else has committed. I have already pushed to remote. I wish to present my code as it exists in my latest commit for pull request, as an initial, clean version, without my own, earlier commits. As the code stands right now, the git change history unnecessarily clutters the pull request. </p>

<p>I have done this: </p>

<ol>
<li>creation of of this feature branch</li>
<li>earlier commit -- my own changes</li>
<li>earlier commit -- my own changes</li>
<li>earlier commit -- my own changes</li>
<li>latest commit -- in pull request I want to present this code as initial version</li>
</ol>

<p>How do I remove the history from the intermediate commits 2 through 4, and so show the code as it exists in commit 5 as new code showing changes only from commit 1?</p>

<p>Should I simply remove the files from git and re-add them in a new push? or otherwise clean up commits 2 through 4, while keeping the code as it currently stands in no. 5? </p>
","0","2665148","",""
"49618881","8973164","2018-04-02 21:11:13","0","20","<git><merge><git-merge><git-remote><git-server>","Merge on Raspberry Pi2 git server","<p>Hello Stack Overflow community,</p>

<p>I have configured a git server on my Raspberry PI 2 with the current Raspian Image (March 2018).</p>

<p>In my git repro I have two branches:</p>

<pre><code>git@raspberrypi:~/database.git$ git branch
comments
*master
</code></pre>

<p>If I merge the 'comments' branch into the 'master' I get the following error message:</p>

<pre><code>git@raspberrypi:~/database.git$ git merge comments
fatal: This operation must be run in a work tree
</code></pre>

<p>What am I doing wrong here?</p>

<p>Thank you,</p>

<p>Marc</p>
","3","8973164","",""
"67322196","3503228","2021-04-29 17:18:21","1","112","<git><url><ssh><git-submodules><git-remote>","Inconsistent git submodule remote url","<p>I have a git submodule:</p>
<pre class=""lang-sh prettyprint-override""><code>$ cd zathura
$ git remote get-url origin
ssh://git@github.com/pwmt/zathura.git
$ cd ..
</code></pre>
<p>But inside <code>.git/config</code></p>
<pre class=""lang-sh prettyprint-override""><code>[submodule &quot;zathura&quot;]
    url = https://github.com/pwmt/zathura.git
</code></pre>
<p>And inside <code>.gitmodules</code></p>
<pre><code>[submodule &quot;zathura&quot;]
    path = zathura
    url = https://github.com/pwmt/zathura.git
    ignore = dirty
</code></pre>
<hr />
<h3>Questions</h3>
<p>Why the Remote urls are inconsistent (a mixture of https and ssh)?
Is this  valid? Or is it due to some mistake that I might have done? How can I have consistent remote url and which url is used by git?</p>
","3","3503228","0","0"
"14947589","350542","2013-02-19 00:04:14","0","1085","<git><branch><git-remote>","github remotes/origin prefixes","<p>I noticed that, for some reason, some of my git branches are prefixed with ""remotes/origin"": </p>

<pre><code>BZ9
 * master   
 remotes/origin/BZ8   
 remotes/origin/BZ9   
 remotes/origin/HEAD -&gt; origin/master   
 remotes/origin/junit1   
 remotes/origin/master
</code></pre>

<p>What is the difference between, for example, the ""remotes/origin/BZ9"" branch and the BZ9 branch?  Clearly, they both originate from the same conceptual branch, but git is considering them to be distinct. </p>
","0","350542","",""
"14961481","633318","2013-02-19 15:46:11","3","388","<git><git-remote>","Two git repositories with each other as remotes","<p>I'm exploring options for managing my team's data. Currently they exist in two different locations and not under version control. I'm seeking the wisdom of experienced git users as I'm fairly new to git.</p>

<p>I'd like to set up each location as a git repository and point to the other location as a remote. Is this possible? Is it going to cause issues when trying to reconciles differences if the data gets changed in one place and not the other? I'd like to simply create two git repositories and set each other as remotes, but I suspect (I hope I'm wrong) that they won't be able to know that the data is the same.</p>
","0","633318","",""
"60230895","7197899","2020-02-14 17:21:22","2","1176","<git><bitbucket><git-remote><git-rewrite-history>","git rewrite history on remote","<p><strong>Disclaimer</strong>: I'm sure the title of this questions has already thrown up all your red flags and has made you want to either flame me or give me some explanations about why rewriting history is a grave sin. That's fine, you can do that, but please also address the question that I have.</p>

<p>I made some very, very bad mistakes in my git repo which blew it up to several gigabytes, yikes! Luckily, this is my own private repo, so I went through and rewrote history to remove all the mistakes. I followed <a href=""https://git-scm.com/book/en/v2/Git-Internals-Maintenance-and-Data-Recovery"" rel=""nofollow noreferrer"">these instructions</a>, basically:</p>

<ol>
<li>Find all the files I want to remove.</li>
<li>Use git-filter-branch to remove them.</li>
<li>Remove the records from the logs and refs</li>
<li>Re-garbage collect.</li>
</ol>

<p>Doing this, I got the repo down from several gigabytes to a single megayte, yay! I followed up with a <code>git push origin --force --all</code>, and everything updated successfully.</p>

<p>Now, I want to clone my repo into a new system to test that my rewrite worked. When I clone, I get this:</p>

<pre><code>remote: Enumerating objects: 6359, done.
remote: Counting objects: 100% (6359/6359), done.
remote: Compressing objects: 100% (4857/4857), done.
fatal: The remote end hung up unexpectedly 1.70 GiB | 3.05 MiB/s
</code></pre>

<p>This seems strange to me. First of all, my repo is no longer several gigabytes, it is only 1 megabyte. Additionally, I do not have 6539 objects. After the rewrite, I only have 2128 objects. It seems like it is downloading the repo before I pushed the rewrite.</p>

<p>So my question is: How can I get the remote repo to see that I've rewritten history to make the repo much, much smaller?</p>

<p>Thanks!</p>

<p>P.S. The repo is on bitbucket.</p>
","1","7197899","0","0"
"60801121","11688476","2020-03-22 15:21:56","0","296","<python><django><git><heroku><git-remote>","Heroku how to update git remotes after project rename","<p>I already renamed my project to PROJECT_NAME on Heroku and should I update project git remotes,</p>

<h2>This is Heroku guide:</h2>

<pre><code>$ git remote rm heroku
$ heroku git:remote -a PROJECT_NAME
</code></pre>

<p>But when I run the first command, I'm getting this error:</p>

<pre><code>fatal: No such remote: heroku
</code></pre>
","2","11688476","",""
"41867470","3311276","2017-01-26 05:33:25","1","89","<git><git-push><git-remote>","performing git push with repo URL pre set","<p>every time I have to push my branch to remote on GitHub I have to run the following command, </p>

<pre><code>git push --set-upstream sensorAtHome WIP
</code></pre>

<p>however at office I just go ahead and push to our company cgit server.</p>

<p>so what is different and what do I need to do, locally for my GitHub project 
I have a already done this:</p>

<pre><code>git remote add &lt;name&gt; &lt;url&gt;
</code></pre>

<p>I thought that was enough .</p>

<p>secondly what <code>&lt;name&gt;</code> refers to name of branch or name of repository?</p>
","1","3311276","0","0"
"22896228","536299","2014-04-06 15:46:23","0","172","<git><bash><git-merge><git-commit><git-remote>","Interrogations about ""servless CI with git"" bash script","<p>I am in reference to the excellent article by <strong>David Gageot</strong>: <em><a href=""http://blog.javabien.net/2009/12/01/serverless-ci-with-git/"" rel=""nofollow"">Serverless CI with git</a></em>.</p>

<p>Let me include David's script here:</p>

<pre><code>#!/bin/bash
if [ 0 -eq `git remote -v | grep -c push` ]; then
  REMOTE_REPO=`git remote -v | sed 's/origin//'`
else
  REMOTE_REPO=`git remote -v | grep ""(push)"" | sed 's/origin//' | sed 's/(push)//'`
fi

if [ ! -z ""$1"" ]; then
  git add .
  git commit -a -m ""$1""
fi

git pull

if [ ! -d "".privatebuild"" ]; then
  git clone . .privatebuild
fi

cd .privatebuild
git clean -df
git pull

if [ -e ""pom.xml"" ]; then
  mvn clean install

  if [ $? -eq 0 ]; then
    echo ""Publishing to: $REMOTE_REPO""
    git push $REMOTE_REPO master
  else
    echo ""Unable to build""
    exit $?
  fi
fi
</code></pre>

<p>If I understand correctly this script, it will clone the initial git repository to a second hidden git repository where unit tests will be run.</p>

<p>If unit tests pass, the second hidden repository is pushed to the initial working repository.</p>

<p>My questions are as follows:</p>

<ul>
<li>How is one supposed to use this script? By invoking it instead of the <code>git commit</code> command? As a pre-commit hook?</li>
<li>What happens if changes are made to the initial git repository when units test are running?</li>
</ul>
","0","536299","",""
"43086530","1858970","2017-03-29 07:02:22","0","3181","<git><github><ssl-certificate><git-remote><ubuntu-server>","Setting the IP address of github as the origin url","<p>I have a server that has DNS problems and cannot find ""Github.com"". I have to use Github's IP address instead. But when I try to use the IP address like this:</p>

<pre><code>git remote set-url origin http://192.30.253.113/foo/bar.git
</code></pre>

<p>when I try to push to origin this happens:</p>

<pre><code>git push origin master
</code></pre>

<blockquote>
  <p>fatal: unable to access '<a href=""https://192.30.253.113/foo/bar.git/"" rel=""nofollow noreferrer"">https://192.30.253.113/foo/bar.git/</a>': SSL: certificate subject name (github.com) does not match target host name '192.30.253.113'</p>
</blockquote>
","1","1858970","",""
"6083564","324237","2011-05-21 18:17:45","10","4480","<git><git-push><git-remote>","git: disable automatic pushing to a certain remote branch","<p>When I run <code>git push</code>, my local branch <code>some_branch</code> is pushed to a remote branch <code>some_remote\some_branch</code>. </p>

<p>When I run <code>git remote show some_remote</code> I get: </p>

<pre><code>Local refs configured for 'git push':
[cut]
some_branch         pushes to some_branch
</code></pre>

<p>I don't want this. How do I remove this entry? </p>
","0","324237","0","0"
"43317872","1818935","2017-04-10 08:09:28","17","10057","<git><git-merge><git-remote><git-config><git-fetch>","Understanding .git/config's 'remote' and 'branch' sections","<p>Here's the contents of the <code>remote</code> and <code>branch</code> sections of my <code>.git/config</code> file.</p>

<blockquote>
<pre><code>[remote ""origin""]  
    url = https://EvanAad@bitbucket.org/EvanAad/bitbucketstationlocations.git  
    fetch = +refs/heads/*:refs/remotes/origin/*  
[branch ""master""]  
    remote = origin  
    merge = refs/heads/master
</code></pre>
</blockquote>

<p>What is the meaning and purpose of the contents of these sections, in particular the <code>fetch</code> and <code>merge</code> subsections? How is this information used by Git to guide its operation?</p>
","3","1818935","0","0"
"62201598","3815432","2020-06-04 18:21:19","0","47","<git><github><git-remote>","github: how to record merge conflicts","<p>I have one branch <code>local_branch</code> and I merged into it from a new remote. Now there is a plenty of merge conflicts that I need to resolve. After solving them I need the resolution of the conflicts to propagate somehow to local <code>master</code> branch (by issuing pull request) instead of resolving them over between <code>master</code> and <code>local_branch</code>.  </p>

<p>Whats best way to achieve that?  </p>

<p>I don't want to directly merge the new remote into <code>master</code> because I want to issue a <code>git pull request</code> for the old remote for my colleagues to see which and how conflicts were resolved. </p>

<p>Just to clarify:</p>

<ol>
<li><code>new_remote branch</code> -> <code>local_branch</code> (from old remote)</li>
<li>Resolve merge conflicts</li>
<li>Pull request to merge to <code>master</code> (how to avoid second resolution of the very same conflicts?). <code>master</code> is pretty close to the <code>local_branch</code>, so between them there are no issues (before new remote merge)</li>
</ol>
","4","3815432","",""
"24925106","1305226","2014-07-24 04:23:56","3","2452","<git><branch><git-remote><jgit><git-checkout>","how to create git branch in remote repository without checking out using jgit","<p>Can we create a remote branch in git using jgit without checking out. For example I want to create a branch named <em>foo</em> from branch named <em>bar</em> in my remote repository without checking out branch <em>bar</em> locally.</p>
","0","1305226","0","0"
"62240722","2628868","2020-06-07 04:06:45","0","1782","<git><git-remote><git-fetch>","how to change remote fetch url in git","<p>My git remote repo looks like this:</p>

<pre><code>$ git remote -v
origin  https://github.com/jiangxiaoqiang/dolphin-scripts.git (fetch)
origin  https://github.com/jiangxiaoqiang/dolphin-scripts.git (push)
origin  https://gitee.com/jiangxiaoqiang/dolphin-scripts.git (push)
</code></pre>

<p>now I want fetch from <em>gitee</em> by default, how to change the fetch url to <em>gitee</em>?</p>
","1","2628868","",""
"50113971","997606","2018-05-01 09:13:16","0","173","<git><git-remote>","Importing the remotes of another git repository","<p>Naturally, it is easy to add another git repository as a remote (<code>git remote add ...</code>).  But can I import the remotes of another repository into my repository?  For example, if I have a local copy of<code>http://server/repo.git</code> called <code>myrepo</code> then inside <code>myrepo</code> ""<code>origin</code>"" means <code>http://server/repo.git</code>.  But the latter may also have a remote called ""<code>origin</code>"".  Can I import that remote (and its branches) into <code>myrepo</code> (perhaps calling it <code>origin-origin</code>)?</p>
","6","997606","",""
"15507305","193619","2013-03-19 18:12:04","2","788","<head><git-remote><libgit2>","Get remote HEAD with libgit2?","<p>I can't seem to figure out how to get a <code>git_reference *</code> to a particular remote's HEAD.</p>

<p>I've got:</p>

<pre><code>git_repository * repo = NULL;
git_reference *   ref = NULL;

/* ...load repository... */

if(git_reference_lookup(&amp;ref, repo, ""remotes/origin/HEAD""))
    printf(""Error obtaining reference to remote HEAD!"");
</code></pre>

<p>The error message is displayed when the application is run, indicating that the reference wasn't found. However, the remote HEAD does indeed exist:</p>

<pre>$: find .git/refs/*
.git/refs/heads
.git/refs/heads/master
.git/refs/remotes
.git/refs/remotes/origin
.git/refs/remotes/origin/HEAD
.git/refs/tags</pre>

<p>Why can't I obtain a <code>git_reference *</code> to the remote HEAD?</p>
","0","193619","",""
"15598875","8151","2013-03-24 13:11:31","0","533","<git><github><git-remote>","git remote add -f doesn't add tracking branches","<p>I'm cloning a fork of a project in github and want to set up an upstream remote to track the original project. As I understand things, fetching the upstream remote should create tracking branches of the remotes branches in my local repo, but git isn't doing that, so either I misunderstand the process or I'm doing something wrong.</p>

<p>I've tried both </p>

<pre><code>git remote add upstream https://github.com/dude1/awesome-project.git
git fetch upstream
</code></pre>

<p>and</p>

<pre><code>git remote add -f upstream https://github.com/dude1/awesome-project.git
</code></pre>

<p>and when I do <code>git branch -a</code> after either set of operations all I have is my origin tracking branches.</p>

<p>What am I doing wrong?</p>
","0","8151","",""
"15626353","46194","2013-03-25 22:54:31","6","1098","<git><branch><git-branch><git-remote><remote-branch>","Detailed explanation of 'git remote show'","<p>I honestly cannot find any detailed documentation of the output of <code>git remote show</code> (certainly not on the <a href=""https://www.kernel.org/pub/software/scm/git/docs/git-remote.html"" rel=""nofollow"">man page</a>)</p>

<p>In particular, a clear, exact explanation of the <code>Local</code> sections would be appreciated.</p>

<p>An example of what I find confusing: </p>

<p>Here I have two remotes, <em>klas</em> and <em>origin</em> and the output they produce:</p>

<pre><code>&gt; git remote show klas
* remote klas
  Fetch URL: ..\klasrepo
  Push  URL: ..\klasrepo
  HEAD branch: master
  Remote branches:
    experiment  tracked
    feature     tracked
    master      tracked
    pu          tracked
    stashbranch tracked
  Local branch configured for 'git pull':
    pu merges with remote pu
  Local refs configured for 'git push':
    experiment pushes to experiment (fast-forwardable)
    feature    pushes to feature    (fast-forwardable)
    master     pushes to master     (fast-forwardable)
    pu         pushes to pu         (up to date)
&gt; git remote show origin
* remote origin
  Fetch URL: C:/Temp/git/.\barerepo.git
  Push  URL: C:/Temp/git/.\barerepo.git
  HEAD branch: experiment
  Remote branches:
    experiment tracked
    master     tracked
  Local branches configured for 'git pull':
    experiment  merges with remote experiment
    master     rebases onto remote master
  Local refs configured for 'git push':
    experiment pushes to experiment (up to date)
    master     pushes to master     (fast-forwardable)
</code></pre>

<p>Notice that <em>experiment</em> and <em>master</em> are listed under <strong>both</strong> <code>local refs configured for 'git push'</code>. What does that mean? I have configured <em>master</em> and <em>experiment</em> to track <em>origin/master</em> and <em>origin/experiment</em> respectively (and <em>pu</em> to track <em>klas/pu</em>).</p>

<p>My local <em>feature</em> branch is not set up to track anything, but is still listed under <code>local refs configured for 'git push'</code> (the only connection seems to be the identical name, another non-tracking branch, <em>foo</em>, is not mentioned). <code>git push</code> while on <em>feature</em> gives <code>fatal: The current branch feature has no upstream branch.</code> - hardly ""fast-forwardable"".</p>

<p>It seems that the criteria for a local branch being listed under <code>local refs configured for 'git push'</code> is that there happens to exist a remote branch with the same name??</p>

<p>For reference:</p>

<pre><code>&gt; git branch -vva
  experiment                0cf7b2a [origin/experiment] added rand content 82 to .\rand_content.txt
* feature                   4b25f46 added rand content 62 to bar.txt
  foo                       40aee50 added rand content 17 to .\rand_content.txt
  master                    4b25f46 [origin/master] added rand content 62 to bar.txt
  pu                        44ad10b [klas/pu] added rand content 51 to doo.txt
  remotes/klas/experiment   1f4e89b app
  remotes/klas/feature      884e953 added rand content 80 to bar.txt
  remotes/klas/master       57877c1 added in tobias repo
  remotes/klas/pu           44ad10b added rand content 51 to doo.txt
  remotes/klas/stashbranch  8678cf0 added rand content 44 to .\rand_content.txt
  remotes/origin/HEAD       -&gt; origin/master
  remotes/origin/experiment 0cf7b2a added rand content 82 to .\rand_content.txt
  remotes/origin/master     4b25f46 added rand content 62 to bar.txt
&gt; git config --list --local | select-string 'branch|remote'
remote.origin.url=C:/Temp/git/.\barerepo.git
remote.origin.fetch=+refs/heads/*:refs/remotes/origin/*
branch.master.remote=origin
branch.master.merge=refs/heads/master
branch.master.rebase=true
remote.klas.url=..\klasrepo
remote.klas.fetch=+refs/heads/*:refs/remotes/klas/*
branch.experiment.remote=origin
branch.experiment.merge=refs/heads/experiment
branch.pu.remote=klas
branch.pu.merge=refs/heads/pu
&gt; git --version
git version 1.8.1.msysgit.1
</code></pre>
","0","46194","0","0"
"15687758","446936","2013-03-28 16:56:31","0","1633","<linux><windows><git><git-remote><gitk>","view the git repository on remote linux server -> in Windows?","<p>Problem: Need to view Git history visually in windows, repository is on remote Linux server (Ubuntu).
Question: What are two easy ways to view the git repository on remote linux server -> in Windows?</p>

<p>I have initially tried mirroring the remote mirror, then viewing it locally - updating when needed, but I get an error when connecting,</p>

<pre><code>git clone --mirror username@serveraddress.com:/home/username/projectfolder

fatal: Could not read from remote repository.
Please make sure you have the correct access rights and the repository exists.
</code></pre>

<p>Again I'm on Windows using Git Bash, trying to clone a remote repo that's on Linux.</p>

<p>Thanks in advance.</p>
","7","446936","",""
"15873682","482717","2013-04-08 07:34:29","1","84","<git><egit><git-remote>","git/EGit loses remote configuration","<p>EGit loses remote configuration.</p>

<p>I have such Remotes configuration (2 remotes):</p>

<p><img src=""https://i.stack.imgur.com/5Ci5i.png"" alt=""1st""></p>

<p>But in the morning I get again (origin point to /PaulVI):</p>

<p><img src=""https://i.stack.imgur.com/0ZYvW.png"" alt=""2nd""></p>

<p><code>git remote</code> output:</p>

<pre><code>C:\Users\weibl\Documents\GitHub\nodeclipse-2 [master]&gt; git remote -v
PaulVI  https://github.com/PaulVI/nodeclipse-2.git (fetch)
PaulVI  https://github.com/PaulVI/nodeclipse-2.git (push)
origin  https://github.com/PaulVI/nodeclipse-2.git (fetch)
origin  https://github.com/PaulVI/nodeclipse-2.git (push)
</code></pre>
","3","482717","0","0"
"15921202","1717039","2013-04-10 08:51:57","0","1284","<git><git-remote>","git send-pack: protocol error: bad band #50","<p>I am trying to push some files to a server with git push. I have configured the server to push the files:</p>

<pre><code>git remote set-url test ssh://user@location.com:2200/fullpath/
</code></pre>

<p>but I am getting the following error:</p>

<pre><code>git send-pack: protocol error: bad band #50
fatal: The remote end hung up unexpectedly 
</code></pre>

<p>It seems that something is failing on the remote side but I can't find any reference to this protocol error.</p>

<p>Does anyone know how to solve this error? Or which logs should I search to better understand the problem?</p>
","0","1717039","",""
"15931171","2030688","2013-04-10 16:16:36","5","507","<git><gitolite><git-remote>","Is there a reason why you shouldn't mix ssh and smart http access with git?","<p>I have set up a git server using gitolite for a small team. One of us created a repo and pushed the initial commits using smart http - let's say it resides at</p>

<pre><code>http://ourhost/project.git
</code></pre>

<p>I then proceeded to clone the project using ssh i.e. </p>

<pre><code>git clone git@ourhost:project.git
</code></pre>

<p>Git let me do it and created the project folder but reported that the repo was <strong>empty</strong>. 
Furthermore any git pull I did gave me ""<strong>couldn't find remote ref master</strong>"" errors.
When I then ran</p>

<pre><code>git remote -v show origin 
</code></pre>

<p>It showed HEAD branch: (unknown). When I checked on the server (runs gitlab) I could see the master branch and all the code so it was clearly there.</p>

<p>Finally I cloned it using smart http and lo and behold it all worked and I can get on with it.</p>

<p>But why is this? Why should it matter which method each of us use to push/pull? Gitlab even shows the two URLs (for ssh or smart http) as alternatives for repos so it seems to be expected to work...)</p>

<p>Or am I missing something...?</p>
","5","2030688","0","0"
"16013098","2019043","2013-04-15 10:37:47","0","1662","<git><permission-denied><git-clone><git-remote>","Cannot clone a git repository and have to create a repository locally first and to configure its local remote setting","<p>My <code>~/.ssh</code> contains two keypairs:</p>

<ul>
<li><code>id_rsa_foo</code>&amp;<code>id_rsa_foo.pub</code>
<ul>
<li>for user <code>foousername</code> on GitHub (<code>github.com</code>)</li>
</ul></li>
<li><code>id_rsa_bar</code>&amp;<code>id_rsa_bar.pub</code>
<ul>
<li>for user <code>barusername</code> on GitHub (<code>github.com</code>)</li>
<li>for user <code>barusername</code> on my server (<code>indefero.myserver.com</code>)</li>
</ul></li>
</ul>

<p>The <code>~/.ssh/config</code> ""knows"" the keyfiles:</p>

<pre><code>#github.com-foousername account
Host github.com-foousername
    HostName github.com
    User git
    IdentityFile ~/.ssh/id_rsa_foo

#github.com-barusername account
Host github.com-barusername
    HostName github.com
    User git
    IdentityFile ~/.ssh/id_rsa_bar

#indefero.myserver.com-foousername account
Host indefero.myserver.com-foousername
    HostName indefero.myserver.com
    User foousername
    IdentityFile ~/.ssh/id_rsa_bar
</code></pre>

<p>The <code>~/.ssh/known_hosts</code> ""knows"" the server:</p>

<pre><code>github.com,207.97.227.239 ssh-rsa AAAAB3N...AaQ==
204.232.175.90 ssh-rsa AAAAB3N...AaQ==
indefero.myserver.com,111.222.333.444 ssh-rsa AAAAB3N...Ytw==
</code></pre>

<p>Now when I'm trying to clone from GitHub, an error ocurres: <code>Permission denied (publickey). fatal: The remote end hung up unexpectedly</code></p>

<pre><code>user@machine ~/Desktop/test
$ git clone git@github.com:foousername/project1.git
Cloning into 'foousername'...
Permission denied (publickey).
fatal: The remote end hung up unexpectedly
</code></pre>

<p>But when I create a repository on my local machine first and set the local/project <code>config</code> up:</p>

<pre><code>[remote ""origin""]
    fetch = +refs/heads/*:refs/remotes/origin/*
    url = git@github.com-foousername:foousername/project1.git
</code></pre>

<p>I can <code>pull</code>/<code>push</code>. (This way works for the GitHub repos, the myserver ropos don't want even so and require a password: <code>indefero@indefero.it-and-t.com's password:</code>. But might be another problem.)</p>

<p>How can I change this behaviour, in order to clone repos?</p>
","0","2019043","",""
"32665142","5134106","2015-09-19 06:41:59","7","9832","<git><git-remote>","How to delete url in git","<p>I am pushing data to github. When I push data i am facing problem.I am pushing data using this.</p>

<pre><code>git init
touch README.md
git add .
git commit -m ""initial commit""
git remote add origin https://github.com/YourAccount/firstPush.git
git push -u origin master
</code></pre>

<p>Actuall I run  <code>git remote add origin https://github.com/YourAccount/firstPush.git</code> this command wrong.
When I again push data with correct path I got error </p>

<pre><code>fatal: remote origin already exists.
</code></pre>
","0","5134106","0","0"
"32679270","3767809","2015-09-20 12:12:54","1","102","<git-remote>","Remotely show the most recent tag reachable from a git commit","<p>I can use <code>git describe</code> to locally show the most recent tag on a local git repository that is reachable from a git commit. Using <a href=""https://gitlab.com/procps-ng/procps"" rel=""nofollow"">procps</a> as an instance, <code>git describe</code> returns this <code>v3.3.11-4-g99fa7f9</code> value (at the time of this writing). However, if I don't already have a local git repository, I can use</p>

<p><code>git ls-remote --tags https://gitlab.com/procps-ng/procps.git | grep -v ""\^"" | cut -d/ -f3 | sort -Vu | tail -1</code> </p>

<p>to remotely do the same as <code>git describe --abbrev=0</code> that returns this <code>v3.3.11</code> value and not this <code>v3.3.11-4-g99fa7f9</code> value. So, is it possible to remotely show the most recent tag that is reachable from a git commit to return this  <code>v3.3.11-4-g99fa7f9</code> value instead of this <code>v3.3.11</code> value  (preferably with a single instruction sans external scripts)?</p>
","0","3767809","0","0"
"16118797","1090755","2013-04-20 09:36:56","33","88038","<git><ssh><repository><git-remote>","git push to remote repository ""Could not read from remote repository""","<p>I searched for a while but I can't find a solution to my Problem.</p>

<p>I have a Server I can connect to via ssh with the username <code>git</code> and a local git repository.<br>
Now I want to push my local repository to a newly created one on the Server.</p>

<p>Here is what I did:</p>

<ul>
<li>created a git repository in <code>/home/git/test.git</code></li>
<li>initialized the repository as bare</li>
<li>added the remote repository on the local machine<br>
<code>git remote add test ssh://git@serverIp:/home/git/test.git</code></li>
<li>now I executed the push command:<br>
<code>git push test master</code></li>
</ul>

<blockquote>
  <p>I always get the </p>
</blockquote>

<pre><code>fatal: could not read from remote repository

Please make sure you have the correct access rights
and the repository exists.
</code></pre>

<p>I am working on a local windows 7 machine and want to upload to a linux server.<br>
I can log in via ssh with the <code>git</code> user.
I also tried to do this as the <code>root</code> user(to get things to work once) with the same result.<br>
I never get asked for the ssh <code>password</code>.</p>

<p>I really don't know what I am doing wrong.<br>
Before you call this a duplicate, I searched a lot for this problem and none seemed to talk about the same problem.</p>

<p>update: </p>

<p><ul>
<li>""which git"" returns /usr/bin/git</li>
<li>PATH echo includes /usr/bin</li>
<li>id_rsa and id_rsa.pub files are all set up and withput Passphrase</li>
<li>ssh git@serverIp which git-receive-pack works too and returns /usr/bin/git-receive-pack</li>
<li>ssh git@serverIp ls /home/git/test.git works</li>
<li>all relevant directories are chmod 755</li>
<li>git is owner of the repository</li>
<li>auth.log file gets no new entries on tried push command</li>
<li>GIT_TRACE=2 git push test master returns:</p>

<blockquote>
  <p>'C:\Program Files (x86)\PuTTY\plink.exe' '-batch' 'git@serverIp' 'git-receive-pack '\''/home/git/test.git'\''' fatal: Could not read from remote repository. Please make sure you have the correct access rights and the repository exists.</li>
  </ul></p>
</blockquote>
","5","1090755","0","0"
"16147563","1619822","2013-04-22 12:50:58","1","75","<git><git-rebase><git-remote><git-tag>","Why does git remote show two commits for the same tag?","<p>When I check the tags for a remote git repository using <code>git ls-remote --tags origin</code> I see the following:</p>

<pre><code>0a8e26c20   refs/tags/v1.0
acd5c5c8e   refs/tags/v1.0^{}
</code></pre>

<p>I rebased a few commits earlier in the history and suspect that explains what is going on here. </p>

<p>When I check the commit log, I see that <code>0a8e26c20</code> in fact doesn't exist. However I can successfully checkout that commit but end up with commit <code>acd5c5c8e</code> (as if one links to the other).</p>

<p>Could someone confirm that the rebase caused this and (if it's possible) tell me how to fix it?</p>

<p>Thanks!
Arlo</p>
","0","1619822","0","0"
"68825364","16674454","2021-08-18 00:37:17","1","36","<xcode><github><git-remote>","How to transfer github remote in Xcode","<p>There was an error in my original project so I downloaded a past version of it through GitHub. I added an existing remote and used the github address for the location. When I commit and push, it pushes the files on &quot;main&quot; instead of &quot;master&quot; (the original one). How can I make it push onto the master branch?</p>
","3","16674454","",""
"32827803","2670182","2015-09-28 16:35:59","1","1043","<git><git-remote><gist>","pushing git repo (folder with a .git child) that has child folders that are also git repos","<p>I've been accumulating related experiments in a directory structure and as I go, I create a gist so I can demo the experiment on bl.ocks.org.<br />
When I create the gist, I add it as a remote for the subfolder's repo.  That way I can include checking the bl.ock in my iterations by pushing to the remote (gist).</p>
<p>The result is a directory tree with lots of repos in it and these individual repos sometimes have multiple branches.  Also, some of the subfolders are not repos.</p>
<p>Now, I want to consolidate the experiments in a master github repo. So i created a repo on github, set it as the remote, pulled merged etc., and then pushed.<br />
All of the non-repo folders pushed ok, but all of the folders in the tree that contained a .git folder did not push properly: they are there in the github repo but they are &quot;greyed out&quot;.  I recognise this from when I have a repo with multiple branches where folders that do not exist on the selected branch are &quot;greyed out&quot; in the same way: presumably this is github's way of representing empty folders.<br />
<a href=""https://i.stack.imgur.com/bN0hg.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/bN0hg.png"" alt=""enter image description here"" /></a>
How can I handle this?  I understand that I can't have multiple branches at a subfolder level... do I need to create branches in the master repo by merging one of the branches in the subfolders?  How is this meant to work?</p>
<p>I would have thought that git would just push the current checked-out state of the subfolder repos and look towards the root for gitness...  thus, the subfolders would not be treated as repos from the perspective of the parent.</p>
<p>Is there a way that I can integrate the subfolder branches into the new structure for example?</p>
","2","2670182","",""
"32838533","3546762","2015-09-29 07:49:05","7","14434","<git><git-remote>","Change the origin of git branch","<p>I have created branch this way:</p>

<pre><code>git branch MyBranch origin/test
</code></pre>

<p><code>test</code> was branch parallel to master. Now test is merged into master</p>

<p>How can i change the origin of <code>MyBranch</code> so it points to master</p>
","2","3546762","0","0"
"16369135","268847","2013-05-03 23:50:02","2","169","<git><git-remote><git-tag>","Find all tags at same commit as a given tag in a remote git repository","<p>I am trying to find all tags that are at the same commit as a given tag in a <em>remote</em> git repository. If at all possible, I do not want to clone a local copy of the remote.</p>

<p>For example, I have a repository where the two tags <code>release/latest</code> and <code>release/1.00</code> both point to the same commit. So, given the tag <code>release/latest</code> I want my script to return <code>release/1.00</code>. </p>

<p>I am using <code>ls-remote</code> to list the remote tags: </p>

<pre><code>git ls-remote --tags gitolite@myserver.example.org:/base.git
</code></pre>

<p>This command returns </p>

<pre><code>ad759      refs/tags/release/1.00
0e9d0      refs/tags/release/1.00^{}
de388      refs/tags/release/latest
0e9d0      refs/tags/release/latest^{}
</code></pre>

<p>(I shortened the commit hashes to save space.)</p>

<p>I do not know how to interpret this: Why are there two lines for each tag? Which reference points to the ""real"" tags? Should I ignore the tags not followed by <code>^{}</code>?</p>
","1","268847","0","0"
"17133992","971392","2013-06-16 13:48:39","1","409","<git><branch><git-remote>","git showing old remote branches","<p>I have executed <code>git remote rm origin</code> and I still get the following result.</p>

<p><img src=""https://i.stack.imgur.com/y0m31.png"" alt=""this""></p>

<p>Executing <code>git branch -r</code> returns no result, and when executing <code>git remote rm origin</code> again, I get </p>

<blockquote>
  <p>Could not remove config section 'remote.origin'</p>
</blockquote>

<p>I have also executed a <code>git gc --purge=now</code> and no result for the above issue. Any idea what could go wrong, and how to fix it?</p>

<p><code>.git/config</code> contents</p>

<pre><code>[core]
    repositoryformatversion = 0
    filemode = false
    bare = false
    logallrefupdates = true
    symlinks = false
    ignorecase = true
    hideDotFiles = dotGitOnly
[branch ""master""]
[gitflow ""branch""]
    master = master
    develop = develop
[gitflow ""prefix""]
    feature = feature/
    release = release/
    hotfix = hotfix/
    support = support/
    versiontag = 
</code></pre>

<p>That's the weird part, no <code>origin</code> nor <code>upstream</code> is defined</p>
","8","971392","0","0"
"69046015","3355024","2021-09-03 13:49:39","1","119","<git><git-submodules><git-remote><git-fetch>","Where does git fetch from when doing a git submodule update?","<p>The <code>git submodule update</code> documentation says:</p>
<blockquote>
<p>Update the registered submodules to match what the superproject expects by cloning missing submodules, <strong>fetching missing commits in submodules</strong> and updating the working tree of the submodules.</p>
</blockquote>
<p>But I can't find anything about from which remote git will fetch from. I was hoping to find some configuration, which would define the remote to fetch from.</p>
<p>My setup right now is: I have two remotes defined in one of my submodules. When doing a <code>git submodule update</code> I get following error:</p>
<pre><code>fatal: --stdin can only be used when fetching from one remote
</code></pre>
<p>This sounds like git is trying to fetch from all known remotes. Is there a way to configure the remote fetch from?</p>
<p>Worth mentioning: none of the submodule's remotes is named <code>origin</code> (I really hope that is not the issue here)</p>
","2","3355024","",""
"17268043","420867","2013-06-24 04:30:17","1","237","<mercurial><equivalent><git-remote>","mercurial equivalent to `git remotes -v`","<p>I want to see a list of stored remote locations (as in url's) from which I can pull from.</p>

<p>With git, I can do <code>git remote -v</code></p>

<p>Is there an equivalent with mercurial?</p>
","0","420867","",""
"17315772","2387750","2013-06-26 09:02:49","1","144","<git><twitter-bootstrap><git-remote><intro.js>","How to track multiple open source projects inside of a single project with git?","<p>I was wondering how to track multiple smaller/compartmentalized opensource projects in git that are included in a larger (code base size - not necessarily popularity wise) project.  Example:</p>

<p>Say I'd like to use the two open source projects inside an E-Commerce site I'm building: </p>

<ul>
<li>Bootstrap (<a href=""http://twitter.github.io/bootstrap/getting-started.html"" rel=""nofollow"">http://twitter.github.io/bootstrap/getting-started.html</a>)</li>
<li>intro.js (<a href=""http://usablica.github.io/intro.js/"" rel=""nofollow"">http://usablica.github.io/intro.js/</a>)</li>
</ul>

<p>My file structure would look like this:</p>

<pre><code>myrepo/front_end/style/bootstrap/
                    ├── css/
                    │   ├── bootstrap.css
                    │   ├── bootstrap.min.css
                    ├── js/
                    │   ├── bootstrap.js
                    │   ├── bootstrap.min.js
                    └── img/
                        ├── glyphicons-halflings.png
                        └── glyphicons-halflings-white.png
myrepo/front_end/javascript/intro/
                    ├── intro.js
</code></pre>

<p>Since the two open source projects are small subsections of the project, if I were to set up remote repos for the two github project repos and then have local branches tracking the remote masters the local branches wouldn't resemble the project repo at all.  </p>

<p>So, how do I track remote projects to make sure I incorporate bug fixes as soon as they are released?</p>

<p>Any help is greatly appreciated!</p>

<p>Thanks!</p>

<p>DS-MATT</p>
","2","2387750","",""
"17328823","515537","2013-06-26 19:30:01","11","3098","<git><branch><commit><git-remote><git-tag>","How do I get all refs that point to a commit in git?","<p>Is there any way to get a list of refs (including tags, branches, and remotes) that point to a particular commit in git?</p>
","0","515537","0","0"
"50878371","9898652","2018-06-15 15:12:54","2","177","<git><git-remote>","Is one git remote aware of another?","<p>I have a local repository, to which I have associated two remotes (via git remote add...). I regularly push to both remotes. Are the two remotes linked or aware of each other in any way?</p>

<p>In case it's relevant, I'm trying to design a homework ""competition"" for multiple people to work on without being aware of the others' work.</p>
","15","9898652","",""
"50879249","6236430","2018-06-15 16:06:25","1","246","<git><githooks><git-remote>","update files in folder on a network drive when i do a git push","<p>I'm hoping someone is able to shed some light on the voodooo that is auto updating files on a network drive.</p>

<p>On my local drive (c:/dev/project) i have a git repo which has a remote on bitbucket, the remote network drive (x:/hdd/project) is a full git clone which also has a remote of origin pointing to bitbucket. It is possible to work on either drive and both sites are available to my browser.</p>

<p>Currently if i do some changes on the local drive (c:) and do a git push the files go into bitbucket then i need to change to the remote drive (x:) and do a git pull.</p>

<p>This is all well and good but if i forget to do this and someone works on the project and forgets to do a git pull before starting then there will be conflict issues.</p>

<p>I've read I can setup a git hook to update on git push from local (c:) but the documentation and examples are not very clear. I've also read I can use a remote in addition to origin but again the documentation is limited and didn't help me understand what i need to do.</p>

<p>So for a remote i looked over <a href=""http://tony.halcyonlane.com/blog/2011/09/22/Using-git-at-work-on-a-Windows-network-drive/"" rel=""nofollow noreferrer"">http://tony.halcyonlane.com/blog/2011/09/22/Using-git-at-work-on-a-Windows-network-drive/</a> this uses origin but obviously i can call it anything (say dev-box). This also says i need to create the clone using --bare which was not done on these dev folders. This is also 7 years old so unlikely to be too relevant.</p>

<p>for git hooks i looked over <a href=""https://www.digitalocean.com/community/tutorials/how-to-use-git-hooks-to-automate-development-and-deployment-tasks"" rel=""nofollow noreferrer"">https://www.digitalocean.com/community/tutorials/how-to-use-git-hooks-to-automate-development-and-deployment-tasks</a></p>

<pre><code>#!/bin/bash
unset GIT_INDEX_FILE
git --work-tree=/var/www/html --git-dir=/home/demo/proj/.git checkout -f
</code></pre>

<p>which is confusing so is --work-tree the local (c:) and -git-dir the remote(x:) and does this need to be on the remote and not the local?</p>

<p>As you can see more questions than answers. I just need a clear explanation or a good example i can follow.</p>

<p>thanks</p>

<p>Craig</p>
","1","6236430","",""
"34687657","1327867","2016-01-08 23:15:17","5","2497","<git><git-remote>","Why does git remote prune origin remove my local tags?","<p>I have several tags that reference commits from local branches and remote tracking branches, or ancestors of those commits.</p>

<p>I want to remove references to branches and tags on <code>origin</code> after having run <code>git fetch</code>:</p>

<p><code>git remote prune origin --dry-run</code></p>

<p>But the output indicates it would prune my local tags, even ones that were created manually by me instead of being <code>fetch</code>ed from any remote:</p>

<pre><code> * [would prune] origin/git-svn
 * [would prune] origin/ignore/some_branch
 * [would prune] refs/tags/MyLocalTag
 * [would prune] refs/tags/MyLocalTag2
</code></pre>

<p>Why is git trying to prune my local tags (even those that point to my local branches with no upstream)?</p>
","3","1327867","0","0"
"18175161","2525981","2013-08-11 18:20:21","2","5001","<eclipse><github><egit><git-remote>","How do I set up the remote tracking branch in Egit?","<p>I have recently set up an Android project on Github.<br>
Everything seems fine except for the fact that the remote tracking branch is absent from the remote tracking folder. </p>

<p><img src=""https://i.stack.imgur.com/9agiQ.png"" alt=""remote tracking empty in Egit""></p>

<p>As a result, I can't push my changes to the Github folder.<br>
How would you resolve this?</p>
","1","2525981","0","0"
"50914108","9957800","2018-06-18 16:47:08","0","250","<git-remote>","How to create git remote repository using script RHEL 7","<p>I apologize if this question has been asked but I could not find any answers when I  did a search.
    I am trying to create a GIT remote repository that is being hosted on our server (123.123.com) instead of gitlab.com using a script. I have found really great scripts that connected via https that I was able to tweak and get it to work in my vm @ home but that configuration is user to gitlab.com. 
    I don't know how to tweak the script to replace things like ""content-type json"" .... or find the API for the server. So, I think ideally the below script written by ckalima  is what I would like to use but I'm a noob to GIT and definitely scripting on a whole. <a href=""https://gist.github.com/ckalima/1364886"" rel=""nofollow noreferrer"">https://gist.github.com/ckalima/1364886</a>
    I replaced all the variables and it does not work. In the end, it says it creates the repo but it really doesn't. Sorry for the long post, thanks in advance. Joybells</p>

<pre><code># remgit.sh
# Creates a remote git repository from the current local directory

# Configuration
# Replace SSH_USERNAME, SSH_HOST, SSH_GIT_PATH with your details
USER=SSH_USERNAME
HOST=SSH_HOST
GIT_PATH=SSH_GIT_PATH

REPO=${PWD##*/}
GIT_REMOTE_URL=ssh://$USER@$HOST/$GIT_PATH/$REPO

echo ""-------------------------------------------""
echo ""------ Building New Git Repository --------""
echo ""-------------------------------------------""

# Setup remote repo

echo ""--""
echo ""-- Creating bare remote repo at:""
echo ""-- $USER@$HOST/$GIT_PATH/$REPO""
echo ""--""

ssh $USER@$HOST 'mkdir '$GIT_PATH'/'$REPO' &amp;&amp; cd '$GIT_PATH'/'$REPO' &amp;&amp; git --bare init &amp;&amp; git --bare update-server-info &amp;&amp; cp hooks/post-update.sample hooks/post-update &amp;&amp; chmod a+x hooks/post-update &amp;&amp; touch git-daemon-export-ok'

# Configure local repo

echo ""--""
echo ""-- Initializing local repo &amp; pushing to remote""
echo ""--""

touch .gitignore
git init
git add .
git commit -m 'initial commit'
git push --all $GIT_REMOTE_URL
git remote add origin $GIT_REMOTE_URL
git config branch.master.remote origin
git config branch.master.merge refs/heads/master
git fetch
git merge master
git branch -a

echo ""--""
echo ""-- Your new git repo '$REPO' is ready and initialized at:""
echo ""-- $USER@$HOST/$GIT_PATH/$REPO""
echo ""--""
</code></pre>
","6","9957800","",""
"18436812","2084311","2013-08-26 04:49:30","22","31615","<git><github><push><git-remote>","Why do I get error: RPC failed; result=52, HTTP code = 0 fatal: The remote end hung up unexpectedly when pushing to github?","<p>I created a new repository on <code>github</code> and wanted to push some files. So I initialize the repository like normal and do <code>git add .</code> to add the current directory (which is my <code>java</code> project folder with <code>bin</code> and <code>src</code> folder inside). Then I added the remote directory using:</p>

<pre><code>git remote add https://github.com/username/project.git
</code></pre>

<p>Then I made my first commit <code>git commit -m ""First Commit""</code></p>

<p>then I type <code>git push -u origin master</code> and I get this error:</p>

<pre><code>Counting objects: 63, done.
Delta compression using up to 4 threads.
Compressing objects: 100% (60/60), done.
Writing objects: 100% (62/62), 16.98 KiB, done.
Total 62 (delta 15), reused 0 (delta 0)
error: RPC failed; result=52, HTTP code = 0
fatal: The remote end hung up unexpectedly
fatal: The remote end hung up unexpectedly
Everything up-to-date
</code></pre>

<p>But if I add just one file and try to commit just a single file, it works. </p>

<p>What is going on? Why can I not commit my whole Java project? Its a pretty small project only 214k. Please help! Thanks! </p>
","3","2084311","0","0"
"22805711","1525238","2014-04-02 08:32:23","5","891","<git><git-remote>","Old remote alias still visible in git logs and gitk, how to delete?","<p>I recently renamed a remote to a new alias and the old alias (and all its commits up until the point of renaming) is still visible in the logs and consequently gitk. Running</p>

<pre><code>$ git remote show old-alias 
</code></pre>

<p>obviously returns:</p>

<pre><code>fatal: 'old-alias' does not appear to be a git repository
</code></pre>

<p>This is pretty annoying. How do I cleanly remove these references? Is it OK if I manually delete the </p>

<pre><code>.git/logs/refs/remotes/old-alias/
.git/refs/remotes/old-alias/
</code></pre>

<p>directories?</p>

<p><strong>Edit:</strong></p>

<p>Here is the <code>git remote -v</code> output:</p>

<pre><code>origin  git@github.com:my-user/our-repo (fetch)
origin  git@github.com:my-user/our-repo (push)
upstream        git@github.com:upstream-user/our-repo (fetch)
upstream        git@github.com:upstream-user/our-repo (push)
</code></pre>

<p>Here is the <code>git log --oneline --graph --decorate</code> output:</p>

<pre><code>* 692d53f (HEAD, origin/somebranch, somebranch) Commit message                                                                                                                                 
* 9a4e794 Commit message                                                                                                                                                     
* 419376b Commit message
* 9a945bd (origin/someotherbranch, someotherbranch) Commit message
* 9a0fe3b Commit message
* 021d553 Commit message
* fa60dba Commit message
* 2d52d72 Commit message
* c59307f Commit message
* b89ae1c Commit message
* 063030c Commit message
* 97b8c77 Commit message
* ec65002 Commit message
* 38d7bb8 Commit message
* 36856fc Commit message
* 13b5065 Commit message
*   66e7dae (upstream/master, origin/master, old-alias/master, master) Commit message
|\  
| * caf7e86 Commit message
| * a0c5abe Commit message
| * 9d1a735 Commit message
| * 4e7770d Commit message
| * cd3dd89 Commit message
* |   3037432 Merge pull request message
|\ \  
| |/  
| * 12b4a01 Commit message
| * be41159 Commit message
|/  
* 8210859 Commit message
* 6b2090e Commit message
* 4b069f3 Commit message
*   1ef939c Merge pull request message
|\  
| * fc559bb Commit message
|/  
* 6fab424 Commit message
* ce10b38 Commit message
* 345128e Commit message
</code></pre>

<p><code>old-alias</code> was changed to <code>origin</code> around commit <code>2d52d72</code> via <code>git remote rename old-alias origin</code>. </p>
","4","1525238","0","0"
"18493285","514919","2013-08-28 16:21:07","1","1730","<git><git-remote>","Pointing existing source code to remote .git repository","<p>User A and User B have the same code. User A creates a repository (<code>git init</code>, <code>git remote add origin &lt;repo-url&gt;</code>, <code>git commit</code>, <code>git push</code> in that order). Remote repository gets created and has the changes from User A.</p>

<p>User B already has the same changes locally but wan't to start pointing and getting tracked by the same repository. How does User B achieve that?</p>

<p>I tried a <code>git init</code> followed by a <code>git remote add origin &lt;repo-url&gt;</code>. <code>git branch</code> does not list any branches, not even <code>master</code>. What could be going wrong here?</p>

<p>The projects being added are already inside an existing Git repository. i.e My project structure is Xdir/Ydir. Xdir is a Git repo. Everything I'm trying to do now is inside Ydir. That was not a problem for User A. But somehow User B is having issues pointing to it.</p>
","0","514919","",""
"35022009","5842402","2016-01-26 19:16:48","0","746","<git><git-clone><git-remote>","Setting up an already cloned git workspace as local repository","<p>I have a clone from a remote repository, and i do my work on this clone and does git commit and git push to remote repo. </p>

<p>I work using a desktop PC and some times using a laptop. From laptop now I do remote desktop to my desktop PC and work. But if I can create a local repository in my desktop PC using the above clone, and  create clone from this local repository on my desktop and laptop.  So i can do git push to my local repository on desktop from my desktop and laptop. I don't want to do git push to remote repository until my work is complete. Once it is finished I can push my changes to remote repository.</p>

<p>Is this possible ?</p>

<p>To accomplish this I did the following steps.</p>

<ol>
<li>Created a local bare repository using git init --bare, let us call this as L</li>
<li>cloned L and we can call this as L1</li>
<li>Inisde L1, i cloned my remote repository R</li>
<li>After this my plan was to commit &amp; push everything under L1</li>
<li>So even R will be available in my local repository L.</li>
<li>Then clone L to L2 on my desktop and L3 on my laptop, work on L2 and L3 and push the changes to L.</li>
<li>Once the changes are safe to push to remote, then pull the changes from L to L1 </li>
<li>This (step 7) will bring the changes to R, so commit and push the changes from R to remote repo.</li>
</ol>

<p>This was the plan and i could do up to step 3. I am unable to complete step 4.
Unable to commit R to L. It when i do git status, i get the following</p>

<p>~/ws/GL00MG1/LR00MG (master *=) > git status
On branch master
Your branch is up-to-date with 'origin/master'.
Changes not staged for commit:
  (use ""git add ..."" to update what will be committed)
  (use ""git checkout -- ..."" to discard changes in working directory)
  (commit or discard the untracked or modified content in submodules)</p>

<pre><code>    modified:   B_FOLDER (modified content, untracked content)
</code></pre>

<p>no changes added to commit (use ""git add"" and/or ""git commit -a"")</p>
","3","5842402","",""
"4855561","149008","2011-01-31 20:10:45","80","62705","<git><git-clone><git-remote>","Difference between git remote add and git clone","<p>What does the <code>clone</code> command do? Is there any equivalent to it in svn?</p>

<p>What is the difference between </p>

<pre><code>git remote add test git://github.com/user/test.git
</code></pre>

<p>And </p>

<pre><code>git clone git://github.com/user/test.git
</code></pre>

<p>Does the name of the created repo matter?</p>
","2","149008","0","0"
"42585548","3800049","2017-03-03 17:59:16","2","1921","<git><git-submodules><git-remote>","git submodule: track 2 branches","<p>Since a while (v1.8.2), <code>git submodule</code> allow us to track a specific branch:</p>

<pre><code>git submodule add -b &lt;tracked_branch&gt; &lt;added_sobmodule&gt;
</code></pre>

<p>That's pretty useful in a use case where you use meta-projet to track a bunch of project in their <em>releasing</em> branch from a public remote. </p>

<p>Now, I have a use case in which I need to track both a <em>release</em> branch <strong>and</strong> a <em>dev</em> branch. So I add to the previous command:</p>

<pre><code>git submodule add -b &lt;another_tracked_branch&gt; &lt;already_added_sobmodule&gt;
</code></pre>

<p>I get this error (v2.12.0): </p>

<pre><code>'already_added_sobmodule' existe déjà dans l'index
</code></pre>

<p>Which mean that <em>already_added_sobmodule</em> already exist in the index...</p>

<p>How could I track (using submodule) only 2 of the branches of a public git remote?</p>
","0","3800049","0","0"
"62090839","2370337","2020-05-29 16:47:19","0","3509","<git><git-push><git-remote><git-amend>","I have two git commits that appear the same after a pushed amend","<p>I have a git branch that I am working on locally.  After editing some code and doing a commit and a push to a remote repo, I noticed that I had an error in my commit message.  I used amend to correct this.  First I tried to push, but this was not allowed,  So I did a pull and then a push.  Everything appeared to work.  When I look at the repo, I can see two commits, one for each message (both correct and incorrect, so I guess my correction was useless lol.)  Then I noticed that both commits contained the same code changes.  This seems strange, because I don't think that both should contain code changes.  Does this mean that the changes are applied twice?  Is this a problem that could cause issues later?  Does this need to be fixed?  If so, how do I fix this?</p>

<p>=====</p>

<p>commands</p>

<ol>
<li>(IDE) Changes made, added and committed </li>
<li>git push -u origin BRANCH_NAME</li>
<li>(IDE) Amend performed</li>
<li>git push (error: failed to push some refs)</li>
<li>git pull</li>
<li>git push</li>
</ol>
","0","2370337","",""
"25001405","2697957","2014-07-28 18:03:13","2","2240","<git><git-remote>","Git: Having server git repo 'push' to /public_html","<p>I'm in the process of learning how to get a new git repo set up. I just have previously used git repos in the pass that were set up.</p>

<p>Goal:
I'm trying to figure out how the set-up process to this works. I have it so my local can be pushed to my remote git repo successfully. I'd like to have the remote git repo 'push' to where my live site is at now, but only a certain folder. Is this possible? </p>

<p>My git repo file setup:
/.git
/trunk (where my site files are, I want this pushable into my /pubic_html files on the server)
/resources (just psd's and such, I don't want this in my /public_html files on the server)
/db-backups (just database backups, I don't want these in my /public_html files on the server)</p>

<p>I would  log into my remote webserver, cd into <code>~/public_html/</code> and run 'get pull' and have just all my site files/folders be updated from my repo. (hope this make sense)</p>

<p>My current setup follows: </p>

<hr>

<p>My local git config file:</p>

<pre><code>[remote ""origin""]
    fetch = +refs/heads/*:ref/remotes/origin/*
    url = ssh://mygituser@website.com/~/opt/git/mywebsiterepo.git
</code></pre>

<hr>

<p>My remote git config file: </p>

<pre><code>[remote ""origin""]
   fetch = +refs/heads/*:ref/remotes/origin/*
</code></pre>

<p>Location: <code>~/opt/git/myrepo.git</code>  (where I ran git <code>init --bare --shared</code>)</p>

<hr>

<p>My remote website git config file:</p>

<pre><code>[remote ""origin""]
        fetch = +refs/heads/*:ref/remotes/origin/*
        url = ~/opt/git/mywebsiterepo.git
</code></pre>

<p>Location: <code>~/public_html</code></p>

<h2>Update</h2>

<p>I just thought of a way I need to do this correctly with having my git <code>/trunk</code> folder to be the <strong>only</strong> thing 'pull'ed inside my <code>/public_html</code> folder for my live site. </p>

<ul>
<li>removed my old git clone of my repo that was in <code>~/public_html</code> </li>
<li>created a new git clone to new folder<code>~/git/myrepo/</code></li>
<li>created a Symlink <code>public_html -&gt; /home/mywebsite/git/myrepo/trunk</code></li>
</ul>

<p>So now my <code>/trunk</code> folder with all my website files is the only thing inside my life <code>/public_html</code> :)</p>
","0","2697957","",""
"25027653","3838094","2014-07-30 02:01:37","23","40202","<git><netbeans><git-push><git-remote>","git remote repository contains commits unmerged into the local branch","<p>I am using git inside netbeans IDE. I wanted to change the commit message for the most recent commit I had made. I did that, checked the <code>amend last commit</code> checkbox and committed it to my local repository. When I push this commit to my github repo, I get the error: <code>git remote repository contains commits unmerged into the local branch. open output to see more information.</code> How do I fix this ? I am new to source control. I only want to do very basic version control with my current project. Please tell me how to fix this.</p>

<p><strong>Screen:</strong></p>

<p><img src=""https://i.stack.imgur.com/yO2Iu.jpg"" alt=""enter image description here""></p>

<p><strong>Output message:</strong></p>

<pre><code>git branch
git remote -v
setting up remote: origin
git submodule status
git push https://github.com/double-whammy/netbeans_affablebean.git refs/heads/master:refs/heads/master
Remote Repository Updates
Branch Update : master
Old Id        : id1
New Id        : id2
Result        : REJECTED_NONFASTFORWARD
Local Repository Updates
Branch Update : origin/master
Old Id        : id1
New Id        : id2
Result        : NOT_ATTEMPTED
==[IDE]== Pushing - AffableBean finished.
</code></pre>
","0","3838094","0","0"
"62352646","943619","2020-06-12 21:18:05","4","1296","<git><branch><git-remote>","How do you find the default branch of a remote git repository?","<p>Different repositories name their primary development branches differently (e.g. <code>main</code>, <code>gh-pages</code>, <code>master</code>, etc.), and scripts meant to work with multiple repositories need an automated way to discover the current repository's default branch name.</p>

<p>What <code>git</code> command returns that name?</p>
","1","943619","",""
"25277397","1108891","2014-08-13 03:05:18","6","2486","<git><git-remote>","How do we run git status for a specific remote?","<p>We have two remotes for our local git repository. One remote is called <code>dev</code>, the other one is called <code>origin</code>. When we run <code>git status</code> or <code>git status dev</code>, we receive this message:</p>

<pre><code># On branch 1.8.x
# Your branch is ahead of 'origin/1.8.x' by 4 commits.
#   (use ""git push"" to publish your local commits)
#
nothing to commit, working directory clean
</code></pre>

<p>The message tells us the status for the <code>origin</code> remote. That isn't what we want. How can we check the status for only the <code>dev</code> remote?</p>
","0","1108891","0","0"
"43933867","4797454","2017-05-12 09:15:12","0","80","<git><git-remote><git-tag><git-rev-list><ls-remote>","Is it possible to check, if a git tag is reachable from another git tag in same repo using remote commands?","<p>Is it possible to check if, a git tag/commit is reachable from another git tag/commit in a repo through remote git commands i.e without cloning the code.</p>

<p>I can do it locally using git rev-list or git merge-base.
I tried using git ls-remote, but unable to do so.</p>
","3","4797454","",""
"43768699","1391026","2017-05-03 19:44:35","0","75","<git><git-branch><git-remote>","How to list branches which are in remote A but not in remote B with git?","<p>For example if I have a ""main"" upstream repository where I develop, and a side-repository where I backup my work after a finished work-day - now I want to delete branches on the side-repository which are not in the ""main"" repository are anymore, because they are merged (or whatever).</p>

<p>How to list branches which exist in the ""side"" remote but not in the ""main"" remote?</p>
","3","1391026","",""
"6927778","716834","2011-08-03 14:06:29","3","1500","<git><git-branch><git-clone><git-remote>","git clone does not checkout active branch","<p>I have a remote bare repository with two branches 'master' and 'testing', where HEAD refers to 'testing'.
When cloning this repository git checks out 'master', if 'master' and 'testing' are on the same revision (i.e. HEAD == testing == master).
Only if 'testing' is one (or more) commit(s) behind or ahead, git clone checks out the 'testing' branch on the local side. 
I tried this with git 1.7.5 on Mac OS X (10.6.8).</p>

<p>Addendum:
I just tried the same with a non-bare repository:</p>

<pre><code>mkdir A
cd A
git init
touch a
git add a
git commit -m ""init repo A with a""
git checkout -b testing
</code></pre>

<p>now back in the root dir:</p>

<pre><code>cd ..
git clone A B
cd B
git branch -v -a
* master                 28f599b init A
  remotes/origin/HEAD    -&gt; origin/master
  remotes/origin/master  28f599b init A
  remotes/origin/testing 28f599b init A
</code></pre>

<p>it's 'master'! Back to repo A (we are still in branch 'testing'):</p>

<pre><code>cd ../A
touch b
git add b
git commit -m ""add b in branch testing""
</code></pre>

<p>now 'testing' is one commit ahead 'master'. Now let's clone A again:</p>

<pre><code>cd ..
git clone A C
cd C
git branch -a -v
* testing                23bca39 add b in branch testing
  remotes/origin/HEAD    -&gt; origin/testing
  remotes/origin/master  28f599b init A
  remotes/origin/testing 23bca39 add b in branch testing
</code></pre>

<p>You can re-verify this weird behavior by going back to A, checkout 'master' and merge it with 'testing' (so that all branches have the same head). Now clone A into D and D will be checked out on master!</p>
","1","716834","0","0"
"44049797","3527914","2017-05-18 13:57:02","0","87","<git><version-control><git-commit><git-push><git-remote>","Hot fix between two remote git repositories","<p>I have two git remote repositories, one is for test and the other is for production.</p>

<pre>
    git remote -v
    production      https://ejemplo@bitbucket.org/deploy/pr1.git (fetch)
    production      https://ejemplo@bitbucket.org/deploy/pr1.git (push)
    test    https://ejemplo@bitbucket.org/deploy/pr1_test.git (fetch)
    test    https://ejemplo@bitbucket.org/deploy/pr1_test.git (push)
</pre>

<p>When someone make a change, they work locally and push to the testing remote:</p>

<pre>    git push test master</pre>

<p>Someone makes the pull, test the change and if tis OK, push it to production.
<br><br></p>

<pre>    git push production master</pre>

<p>The problem is when i have various changes to test before push to production, but i need to apply an inmediate hotfix. 
I cant push the hotfix to production without push al the others changes that are before it (not tested yet).</p>

<p><br>
<br>
example: 
<br>
<br></p>

<pre>
    test repository : 
    test commit 6 - <b>hotfix</b> (i fix something) 
    test commit 5
    test commit 4
    test commit 3 - to this point is equal to production.
    test commit 2
    test commit 1
</pre> 

<pre>
    Production repository: 
    production commit 3
    production commit 2
    production commit 1
</pre>

<p>I want to push the hotfix commit (commit 6) without push to production commit 4 and 5. Is possible to do this?</p>

<p>Thanks.</p>
","1","3527914","0","0"
"44551484","1425037","2017-06-14 17:50:11","0","31","<git><repository><git-remote>","Pushing info from a private git server to a service like gitlab","<p>I have been contemplating getting a Bitscope Raspberry Pi Blade Server for a while and wanted to install <code>git-core</code> onto it. I was wondering if there is a way to take the local repository and commit the changes to that repository to a service provider like gitlab. I am wondering this because I'd like to have a complete off site version of all of the code. Is this possible?</p>
","2","1425037","",""
"26062467","343204","2014-09-26 14:53:59","1","267","<git><ssh><git-remote>","git - browse remote repos","<p>Is it possible to browse all the remote repos available on a given server?</p>

<p>I've seen this:</p>

<p><a href=""https://stackoverflow.com/questions/16779054/git-browse-remote-repository"">Git - Browse remote repository</a></p>

<p>which is about browsing branches in a remote repo. However, I'm assuming this is more of an ssh scripting solution as you need to be able to ssh to the machine and list all the git repos in a certain directory.</p>
","3","343204","0","0"
"42347647","543735","2017-02-20 14:53:10","2","296","<git><git-svn><git-clone><git-remote>","Is there a way to clone a git repository including its remote repositories?","<p>Is there a way to use some <strong>git clone / fetch</strong> mechanism to keep the repo in my clone up to date including all <strong>refs/remotes/ from the remote</strong>?</p>

<p>This has nothing to do with <code>git fetch --all</code>, <code>git pull --all</code> or <code>git svn</code>. It's just about copying the remotes of a remote to a clone.</p>

<p>A command like this would be great:</p>

<pre><code>git clone --include-remote-remotes git@linuxmachine:TheGitSvnClone
</code></pre>

<p>And then periodically</p>

<pre><code>git fetch --update-remote-remotes origin
</code></pre>

<p><strong>Some Details:</strong></p>

<p>The remote has its own remote named <em>svn</em> which contains some branches:</p>

<ul>
<li>refs/heads/master</li>
<li>refs/remotes/svn/trunk</li>
<li>refs/remotes/svn/branch1</li>
<li>refs/remotes/svn/branch2</li>
</ul>

<p>As a result of the clone I'd expect a normal git repository including a working copy (checked out files) and the following refs:</p>

<ul>
<li>refs/heads/master</li>
<li>(refs/remotes/origin/master)</li>
<li>refs/remotes/svn/trunk</li>
<li>refs/remotes/svn/branch1</li>
<li>refs/remotes/svn/branch2</li>
</ul>

<p>I can't use <code>git clone --mirror</code> because that creates a bare repository.</p>

<p><strong>Why so complicated?</strong></p>

<p>Our company is currently using svn. Meanwhile I'm preparing the migration from svn to git. </p>

<p>Unfortunately <code>git svn fetch</code> takes forever on my windows machine so I'm using a linux machine that does the <code>git svn fetch</code> periodically and then I copy the resulting git repo using FileZilla. </p>
","6","543735","0","0"
"23387057","454103","2014-04-30 11:36:15","5","2303","<git><branch><git-clone><git-remote>","git checkout new remote branch when cloning with depth 1 option","<p>After I did a clone of a repo, a new branch <code>test</code> has been added to the <code>origin</code> remote. But I still see:</p>

<pre><code>$ git branch -a
* master
  remotes/origin/HEAD -&gt; origin/master
  remotes/origin/master
</code></pre>

<p>What git command/s should I use to get the following output:</p>

<pre><code>$ git branch -a
* master
  remotes/origin/HEAD -&gt; origin/master
  remotes/origin/master
  remotes/origin/test
</code></pre>

<p>The <a href=""https://stackoverflow.com/questions/1783405/git-checkout-remote-branch"">git checkout remote branch</a> question is not my question because that is happening after I see all the remote branch references.</p>

<p>I cannot clone the repo again because I have my local changes/commits in it.</p>

<p>So, how to bring the new remote branch references to my repo using git commands?</p>

<p>I am using a BitBucket repo that has the following branches: <img src=""https://i.stack.imgur.com/sSUjI.png"" alt=""branches""></p>

<hr>

<p><strong>Trials</strong></p>

<p><code>git fetch</code> does not work:</p>

<pre><code>$ git branch -a
* master
  remotes/origin/HEAD -&gt; origin/master
  remotes/origin/master
$ git fetch
$ git branch -a
* master
  remotes/origin/HEAD -&gt; origin/master
  remotes/origin/master
$ git fetch origin 
$ git branch -a
* master
  remotes/origin/HEAD -&gt; origin/master
  remotes/origin/master
</code></pre>
","0","454103","0","0"
"50835675","9423269","2018-06-13 11:06:46","0","37","<git><git-bash><git-remote>","git - updating remotes - Do I need to provide the remotes name?","<p>I'm writing a script to update several hundred repository remotes due to a url change for our internal code hosting. </p>

<p>Some of these repositories have a different remote name (i.e. different than origin). Have tested not providing the remote name and the updated remote can be pinged but I don't understand the behavior. </p>

<ol>
<li>Is this unusual? </li>
<li>What happens if there are 2 or more remotes?</li>
</ol>

<p>Updating the remotes in a more well defined way is preferred and I've tried using bash to extract the origin name:</p>

<p>What the character between the remote name and address in below?</p>

<pre><code>$ git remote -v
origin  ssh://git@code_hosting_site.com/project_name/repo_name.git (fetch)
      ^^
</code></pre>

<p>Thanks for any help.</p>
","2","9423269","",""
"69183574","2883328","2021-09-14 19:31:54","3","1213","<git><github><git-remote>","How can I get rid of the message ""Heads up! The branch 'master' that you pushed to was renamed to 'main'"" when pushing changes to git?","<p>When pushing to github, I seem to always get a &quot;Heads up!&quot; message (below) that tells me that my <code>master</code> branch was renamed to <code>main</code>.  But I see no <code>main</code> branch on the remote <code>origin</code> repository.</p>
<p><strong>Message Example</strong></p>
<pre><code>$ git push -f
...
remote:
remote: Heads up! The branch 'master' that you pushed to was renamed to 'main'.
remote:
</code></pre>
<p>I've checked everything I could think of and there is no <code>main</code> branch on origin, there is no <code>main</code> branch on local.  Where is that message coming from?</p>
<p>Here is a listing of my branches:</p>
<pre><code>$ git branch --all
* master
  remotes/origin/HEAD -&gt; origin/master
  remotes/origin/master
</code></pre>
<p>Solutions Tried</p>
<p>I tried using <code>git branch -u origin/master</code> I've seen suggested elsewhere, but it did not help.</p>
","3","2883328","",""
"19124280","196874","2013-10-01 19:27:19","1","99","<git><amazon-web-services><ssh><remote-access><git-remote>","How to pass in git rsa passphrase from remote ssh?","<p>I have an AWS ubuntu 10.xx server.  Due to technical issue, I'm running Git 1.7.4 instead of the latest one. (so I cannot use the credential helper).</p>

<p>At that server, it has a shell script calling git pull.</p>

<p>I have the rsa in that server. so if I go inside that server and do git pull, it will ask for passphrase.  That's good and there is no problem at that point.</p>

<p>HOwever, if I call that shell script for git pull remotely, it will fail. because there is no prompt for the passphrase thus it will fail.    I will get ""Permission denied (publickey)"".  </p>

<p>So, what should I do? </p>
","2","196874","0","0"
"61318205","1389417","2020-04-20 08:34:27","0","127","<git><repository><aem><windows-server><git-remote>","How to connect my local server git repository with remote repository (Adobe cloud git repository)?","<p>I have create a Git repository on my local server where we will commit &amp; push our changes through eclipse.Further, we want to connect with  this local server git repository with our remote git repository (Adobe cloud git repository). I can successfully commit and push changes from my local machine to local server git repository. Now my this server repository looks like this as it stores data in packs. 
<a href=""https://i.stack.imgur.com/36dB7.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/36dB7.png"" alt=""enter image description here""></a></p>

<p>I can also pull changes from another machine. Now I need to connect this local server with my remote repository so that we can push changes their. Can you please help me what commands I need to give ? I have tried to explore this but it is quite confusing. So kindly help in this regard. </p>
","5","1389417","",""
"43060264","","2017-03-28 03:41:20","1","309","<git><intellij-idea><git-remote>","Using git-remote-dropbox with Intellij IDEA","<p>I want to use <a href=""https://github.com/anishathalye/git-remote-dropbox"" rel=""nofollow noreferrer"">git-remote-dropbox</a> as a git remote.</p>

<p>How do I have to set it up in Intellij IDEA?</p>

<p>If I use <code>dropbox://path/to/repo</code> in the menu topic <code>File</code> <code>Settings Repository</code>, I get an error message:</p>

<pre><code>URI not supported: dropbox://path/to/repo
</code></pre>
","0","","0","0"
"6279082","787656","2011-06-08 13:00:40","48","68982","<git><version-control><git-branch><git-push><git-remote>","git push to remote branch","<p>Folks,</p>

<p>I had cloned a repo. I created a branch out of it to work on a feature by issuing the following command:</p>

<p><code>git branch fix78</code></p>

<p>then I worked on that branch by </p>

<p><code>git checkout fix78</code></p>

<p>I continued to make commits to this local branch. Now I wanted to push this to the repo and hence I issued the following command:</p>

<p><code>git push origin master:fix78</code></p>

<p>I viewed the repo from a web browser and saw that a new branch called fix78 was created on the repo. But it did not have any of my commits that I had made.</p>

<p>What am I doing wrong here? This is what I am trying to achieve:</p>

<p>There is a repo(master(trunk in the SVN lingo)), now when I am working on a feature I want to create a local branch of it and then I also want to check in this branch to the repo(so that other team members can see what I am working on), then I want my local branch to be in sync with this remote branch that I create. </p>

<p>Any help/feedback would be totally awesome.</p>

<p>Thanks. </p>
","0","787656","0","0"
"42722240","5872887","2017-03-10 15:38:28","1","983","<git><backup><git-remote><backup-strategies>","How do I use git without having a proper git server?","<p>I want to be able to make backups of my project in a windows environment without having to manually copy and paste my whole folder. Unfortunately I am not allowed to use a remote git server for this project, so I was wondering if I could use git for backing up my project on a mounted hard drive.</p>

<p>I have tried this <a href=""https://stackoverflow.com/questions/6976459/push-git-project-to-local-directory"">solution</a>:</p>

<pre><code>git remote add Y file:///path/to/Y
</code></pre>

<p>However, when I try to push I receive this error:</p>

<pre><code>fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
</code></pre>

<p>I tried to init a bare repository on my mounted device and local directory but I faced the same error.</p>

<p>Summarizing, I want to be able to backup my project in a windows environment automatically or with few commands such as git commit and git push. Any ideas?</p>
","0","5872887","0","0"
"5563211","685946","2011-04-06 08:04:35","1","185","<git><msysgit><xargs><git-remote>","Using xargs in msysgit to remote prune all doesn't seem to work","<p>I have multiple remote references, and there's no ""git remote prune --all"" so I attempted ""git remote show | xargs -n 1 git remote prune"" but it doesn't work.
I'm running msysgit 1.7.4. I know it works in Linux (well ""git remote show | xargs git remote prune"" does) but I just get no output in msysgit, and I know it's not working as I can still prune after running that.</p>

<p>""git remote show | xargs -n 1 echo git remote prune"" shows me it's compiling the ""git remote prune public1"" commands correctly.</p>

<p>Any ideas?</p>
","1","685946","0","0"
"61614691","13475075","2020-05-05 13:46:00","0","18","<git><github><git-remote><git-status>","git status does not see changes applied remotely (github)","<pre><code> git status 
</code></pre>

<p>says: <code>""Your branch is up to date with 'origin/master'""</code>
   the origin/master is being tracked well after: </p>

<pre><code>git branch --set-upstream-to=remotes/origin/master
</code></pre>

<p>Branch 'master' set up to track remote branch 'master' from 'origin'.</p>

<p>connection to the remote repo is OK. (proxy is set correctly) </p>

<pre><code> git pull
</code></pre>

<p>sees the difference and pulls the required. Why would ""Git status"" not see the difference?</p>
","4","13475075","",""
"61831943","8062444","2020-05-16 04:35:56","0","435","<git><github><git-submodules><git-remote>","How can I have multiple projects with their own local git repositories in one GitHub repository?","<p>I am a university student working on a summer research project with a few colleagues.  I am working on one research project that involves an iOS app (built with Swift/Xcode), a Java app (built with IntelliJ IDEA), an Arduino sketch (made with CLion/C++), and a MicroPython file (made with PyCharm/Python).  Since I am working with others on a team, and all of these separate codebases produce one finished product, I would like to have one GitHub repository where all of these are stored, each in their own subfolder.  Google does this on their examples repository: <a href=""https://github.com/googlesamples/google-services"" rel=""nofollow noreferrer"">https://github.com/googlesamples/google-services</a>.  They have multiple Xcode projects under the ""iOS"" folder and multiple Android projects under the ""Android"" folder, as well as some source code throughout.  The Xcode projects appear to all have their own repositories, given the <code>.gitignore</code> file in each of them.  Also, all of the projects are on the same branch.  How can I achieve this in my own repository?  So far I've tried submodules, which seem to not upload the code to GitHub in a way that is accessible.  I've also tried adding the GitHub repository as a remote to each project and pushing the projects from there, but I get errors because the <code>master</code> branch on the GitHub repository has changes that are not reflected locally.  I would prefer that all the projects are on one branch like they are in the Google repository.  Would it be possible for all of the projects to share a local repository, or would that be unmanageable?  Thanks.</p>
","1","8062444","",""
"6150188","370290","2011-05-27 09:16:42","171","165633","<git><mirror><git-clone><git-remote><git-fetch>","How to update a git clone --mirror?","<p>I have created a git repository to mirror a live site (which is a non-bare git repository):</p>

<pre><code>git clone --mirror ssh://user@example.com/path/to/repo
</code></pre>

<p>Now, to keep this mirror clone updated with all changes from its remote origin, which command or commands I must use?</p>

<p>I'd like to keep everything updated: commits, refs, hooks, branches, etc.</p>

<p>Thanks!</p>
","0","370290","0","0"
"62255128","13553094","2020-06-08 04:42:35","4","2328","<git><github><git-remote>","GIT: with CRA app in your rootfolder, how can I push to git correctly?","<p>I am quite new to git. it might be a stupid question but I really don't know how to solve this problem.. I have been trying to find the answer but I couldn't...</p>

<p>I was trying to create my project using React.js and Node.js. I created my sever.js and client folder that is created from 'npx create-react-app client'. 
when I first pushed to git, I had this error message. </p>

<pre><code> ! [rejected]        master -&gt; master (fetch first)
error: failed to push some refs
hint: Updates were rejected because the remote contains work that you do
hint: not have locally. This is usually caused by another repository pushing
hint: to the same ref. You may want to first integrate the remote changes
hint: (e.g., 'git pull ...') before pushing again.
hint: See the 'Note about fast-forwards' in 'git push --help' for details.
</code></pre>

<p>when I force-pushed it, it just went through and I found my client folder is not pushed to git at all, it is just empty in the repo. also, I noticed there was .git folder in client folder.(did not know cra app comes with .git file)</p>

<p>in client folder, I typed on command line (I googled and i found this command will undo .git init)</p>

<pre><code>rm -rf .git
</code></pre>

<p>after this, I dont get the error message but still I cannot push client folder to git, the folder is still empty in the repo. </p>

<p>Also, the image of client folder in the repo is different then others. there is an arrow in the folder, the other folder does not have an arror in it.
<a href=""https://i.stack.imgur.com/jZ62H.jpg"" rel=""nofollow noreferrer"">enter image description here</a></p>

<p>client folder is cra app and src folder has server side codes.</p>

<p>how can I push my code to git correctly??</p>
","2","13553094","0","0"
"24815516","3050541","2014-07-18 00:10:55","5","887","<git><github><git-remote>","What does it mean for a git repo to have multiple remotes?","<p>I was reading over Pro Git, and the section on remote repositories is sort of confusing for me. In particular, there's a section where the author says:</p>

<p><a href=""http://git-scm.com/book/en/Git-Basics-Working-with-Remotes"" rel=""noreferrer"">http://git-scm.com/book/en/Git-Basics-Working-with-Remotes</a></p>

<p>""If you have more than one remote, the command lists them all. For example, my Grit repository looks something like this.</p>

<pre><code>$ cd grit
$ git remote -v
bakkdoor  git://github.com/bakkdoor/grit.git
cho45     git://github.com/cho45/grit.git
defunkt   git://github.com/defunkt/grit.git
koke      git://github.com/koke/grit.git
origin    git@github.com:mojombo/grit.git
</code></pre>

<p>This means I can pull contributions from any of these users pretty easily. But notice that only the origin remote is an SSH URL, so it’s the only one I can push to (we’ll cover why this is in Chapter 4).""</p>

<p>My question is, what are the four remote repositories (bakkdoor, cho, defunkt, koke) in relation to grit? Are they repos make up the grit repo? Or are they separate copies of the same grit repo? Or are they not related at all?</p>

<p>Furthermore, if the grit repo is made up of those 4 separate repos, why are they separately named? Wouldn't it make more sense to have them all under ""origin""?</p>

<p>As you can see, I'm pretty much totally lost on this. I feel like the way it's being explained to me is going right over my head.</p>
","0","3050541","",""
"24856617","277826","2014-07-21 01:40:41","7","6627","<git><git-remote>","Run git commands on remote?","<p>I have already seen:</p>

<ul>
<li><a href=""https://stackoverflow.com/questions/4269611/how-to-run-git-commands-on-remote-repository"">How to run GIT commands on remote repository</a> - ""SSH into the server"" or ""<code>git fetch</code>; <code>gitk --all</code>""</li>
<li><a href=""https://stackoverflow.com/questions/15279313/run-git-commands-on-remote-working-tree-git-work-tree-path"">Run git commands on remote working tree (GIT_WORK_TREE=/path)</a> - the answer is about <code>git push --tags</code></li>
<li><a href=""https://stackoverflow.com/questions/1971732/how-to-git-show-on-a-remote-repo"">How to &quot;git show&quot; on a remote repo?</a> - ""Use git fetch to get the remote history, then snatch the file from the local object store.""</li>
<li><a href=""https://stackoverflow.com/questions/23309796/how-to-run-git-command-remotely"">How to run git command remotely?</a> - ""<code>ssh username@host ""cd my/repo/path &amp;&amp; git show""</code>""</li>
<li><a href=""https://stackoverflow.com/questions/9159294/how-can-i-manually-run-the-hook-post-receive-on-git"">How can I manually run the hook post-receive on git?</a> ""A hook is an executable shell script. You can execute it from the command line if you need to run it by hand, although constructing the expected stdin inuput is somewhat tedious if your repo has more than one head (that is, you use branches).""</li>
<li><a href=""https://stackoverflow.com/questions/15118669/detecting-changes-to-remote-branch"">Detecting changes to remote branch</a> - ""Don't monitor files in the inner workings of git manually. Use git to check things for you. In this case <code>git rev-parse --verify origin/master</code> will show you the SHA of your local copy of origin/master, and <code>git ls-remote origin master</code> to get the SHA from the remote.""</li>
<li><a href=""https://stackoverflow.com/questions/13941976/git-log-command-to-check-for-commit-history-on-remote-server"">Commit history on remote repository</a> - ""<code>git log remotename/branchname</code> - You can't connect directly to the server to check the log there, what you do is download the state of the server with <code>git fetch</code> and then locally see the log of the remote branches.""</li>
</ul>

<p>Judging by this, for what I want to do, I have to login via <code>ssh</code> and run a script on the remote server; but I was hoping for a more git-integrated solution, so let me explain what I want to do.</p>

<p>I have a remote repo, which is git-svn; then I have a local git-only repo which is a clone of the remote. So, the local has a reference to the remote URL in <code>remote.origin.url</code> (seen via <code>git config --list</code>). </p>

<p>What I want to do, is run the equivalent of <code>git svn log</code> (maybe with some post-processing) on the remote, but with the call initiated from the <em>local</em> machine/repo - and get the results, again on the local machine/repo. Of course, <code>git-svn</code> may not even be installed on the local machine, which means only the remote would be able to understand such a command. </p>

<p>I'd be ready to code a hook for the remote repo - but as far as I can see, hooks can run only at specified events (i.e. <code>pull</code>, <code>update</code>...) - you cannot really call them arbitrarily: I remember, once I was developing a <code>post-update</code> script; and to debug it, I had to set it to return an error always, and then I'd ""push"" a ""fake"" commit, which would have run the script, and upon the reception of the error, roll-back the repo -- of course, this is not how I imagine the remote script should run. </p>

<p>Another thing that might be possible is to code an alias for the local repo, which then calls SSH in respect to the <code>remote.origin.url</code> - maybe that would make the running of <code>git svn log</code> remotely a bit easier?</p>

<p>In the end, this is my question - what options do I have to run a relatively custom <code>git</code> command (like <code>git svn log</code>, or a <code>git</code> alias defined remotely) on a remote repo, by utilizing to greatest extent possible the data already available in the local repo <sub>(that is, I want to avoid writing a <code>bash</code> script, with repeated hardcoded paths/URLs, that will call <code>ssh</code> and do whatever necessary on the remote)</sub> -- possibly, in a similar manner that a remote <code>post-update</code> <code>git</code> hook returns its stdout to the local caller, prefixed by ""remote: ""?</p>
","0","277826","0","0"
"25118279","1539932","2014-08-04 12:03:41","0","646","<git><github><git-commit><git-remote><unfuddle>","git object have invalid commit data - date","<p>I am trying to upload my unfuddle repo to github. I have added github repo by ssh and it is working fine. But when i trying to push data it says invalid object author line. When i push to unfuddle it works fine .</p>

<pre><code>remote: error: object 9283f9029b065b6be9d4ecb483e47be8dcce84be:invalid author/co
mmitter line - missing space before date
remote: fatal: Error in object
</code></pre>

<p>can anyone guide me how to edit the author line /date for this commit object . </p>

<p>EDIT</p>

<p>i checked the details for this commit, and it has unix default date. </p>

<pre><code>$ git show 9283f9029b065b6be9d4ecb483e47be8dcce84be
commit 9283f9029b065b6be9d4ecb483e47be8dcce84be
Author: HEMC &lt;HEMC@HEMC-PC&gt;
Date:   Thu Jan 1 00:00:00 1970 +0000
</code></pre>

<p>I tried to rewrite the date as explained <a href=""https://stackoverflow.com/questions/454734/how-can-one-change-the-timestamp-of-an-old-commit-in-git"">here</a> .</p>

<pre><code>git filter-branch --env-filter \
    'if [ $GIT_COMMIT = 9283f9029b065b6be9d4ecb483e47be8dcce84be ]
     then
         export GIT_AUTHOR_DATE=""Mon May 2 21:38:53 2014 -0800""
         export GIT_COMMITTER_DATE=""Mon May 19 01:01:01 2014 -0700""
     fi'
</code></pre>

<p>But it says <code>Cannot rewrite branches: You have unstaged changes.</code></p>

<p>I tried to drop stash . </p>

<pre><code>$ git stash drop
No stash found.
</code></pre>

<p>I don't know, what is the problem with rewrtit.</p>
","6","1539932","",""
"62625777","13466110","2020-06-28 17:09:55","0","503","<git><gitlab><ssh-keys><git-pull><git-remote>","why I don't have access to gitlab repository after doing git pull to update my local project?","<p>The team that I work for transferred the project from bitbucket to gitlab, so while I was working before the transfer, I didn't have any problem with bitbucket, I mean with the SSH key, I inserted on bitbucket the public key that I created with my laptop and everything's going well,  so I was doing git pull, push, add, commit...etc.
but after transferring the project to git-lab( I registered myself on git-lab and I was invited to the project by the boss, I put my public key on git-lab), I made <code>git remote set-URL origin git@gitlab.com:...path.../file.git</code> to update my origin project, so I didn't receive anything as a reply for this command line.
so after that, when I did <code>git pull</code>, I don't have access( permission denied ), I don't understand why.
you can see the picture bellow.
Is there someone here who knows why ?
THANKS <img src=""https://i.stack.imgur.com/lonBD.jpg"" alt=""enter image description here"" /></p>
","3","13466110","",""
"62872529","4807826","2020-07-13 09:00:34","0","260","<python><google-app-engine><heroku><git-remote><gitpython>","How to host, write to, and push a text file to a git repo","<p>I have a very specific problem that I've absolutely no experience in and would like some guidance.</p>
<p>I have a simple HTML/JS form hosted on my site that asks for a phone number, and upon submit, makes a request with the number to a Python app I've hosted with Google App Engine, which then operates an API to send the text to that number.</p>
<p>So far, that's worked well. But I want to be able to store that number to a simple text file, and push that to my git repo, because I have a Heroku app that listens for every push to redeploy the app and run a scheduled task to send out a regular text message to every number on that now-updated list.</p>
<p>The problem I've run into is figuring out where this number text file is hosted and how to write to it, and then push using a library like gitpython.</p>
<p>It all works locally, but not when the app is built and deployed by Google App Engine/Heroku.</p>
","3","4807826","",""
"25643877","1455384","2014-09-03 12:06:26","1","1530","<git><git-push><git-remote>","git - unpacking objects (getting source files on remote)?","<p>I ran these commands:</p>

<p>on remote:</p>

<pre><code>cd ~/my/projects/project1
mkdir .git
git --bare init
</code></pre>

<p>on local in git repo:</p>

<pre><code>git remote add origin user@host:/home/user/my/projects/project1/.git
git push origin master
</code></pre>

<p>Then it pushed that repo, but I actually don't see any files I was working at, only <code>.git</code> folder. So I guess all those files were packed?</p>

<p>So on remote I tried this:</p>

<pre><code>cd ~/my/projects/project1
git unpack-objects --strict &lt; .git/objects/pack/pack-d9017753a07899310a31f891c081ed63dd93e6f0.pack
Unpacking objects: 100% (638/638), done.
</code></pre>

<p>But I don't see anything. So how can I simply get same content that I have on my local repo?</p>

<p>Same I mean to have in <code>~/my/projects/project1</code>:
all folders and files of source code and <code>.git</code> folder inside remote repo.</p>

<p>In local repo, it looks like this:
<code>ls -a</code></p>

<pre><code>.   base_location_extension  crm_dc_extend           .git
..  calendar_service         crm_location_extension  hr_dc_extend
</code></pre>

<p>In remote, it looks like this <code>ls -a</code>:</p>

<pre><code>.  ..  .git
</code></pre>
","0","1455384","",""
"44226031","8077015","2017-05-28 09:59:47","0","42","<git><versioning><git-remote><ignore>","Do not sync versioning file in git","<p>I'm working on a C++ project using git. Since we all use different IDE we all have our own project files. But I don't want to change the files added to the project all the time I switch the branch. So is there a way to have the project file in the versioning but never push it to the remote?</p>
","3","8077015","",""
"52259364","134830","2018-09-10 13:54:08","2","430","<git><git-remote>","Should git repository remotes on the local filesystem be prefixed with file://?","<p>If I want to define a remote for a git repository that is on the same filesystem, it was suggested to me that it ought to be prefixed with <code>file://</code>. That is,</p>

<pre><code>git remote add theremote file:///path/to/repo
</code></pre>

<p>I'd like to know if there are any problems with just using</p>

<pre><code>git remote add theremote /path/to/repo
</code></pre>

<p>I did a quick check and <code>git remote add</code>, <code>git clone</code>, <code>git pull</code>, and <code>git push</code> all seem happy with the simpler option.</p>

<p>Are there any cases where the lack of a <code>file://</code> prefix will cause an issue?</p>
","0","134830","",""
"7815559","794380","2011-10-19 01:17:30","3","222","<git><branch><git-branch><git-remote>","Is checking out remote branches in git safe now?","<p>I've just started learning Git, and <a href=""http://git.or.cz/course/svn.html#remote"" rel=""nofollow"">the tutorial I'm using says that when cloning remote repositories, switching to a remote branch is a big no-no.</a> That is - if I've cloned a repository that has a branch names <code>branch1</code>, and I want to work on it, I need to use</p>

<pre><code>git checkout --track -b branch1 origin/branch1
</code></pre>

<p>to track it. However, when I tried to use</p>

<pre><code>git checkout branch1
</code></pre>

<p>Git replied</p>

<pre><code>Branch branch1 set up to track remote branch branch1 from origin.
Switched to a new branch 'branch1'
</code></pre>

<p>So, my common sense tells my that since that tutorial was written, Git's developers fixed that pitfall and made it so if someone tries to switch to a remote branch, Git automatically does it the right way and creates a local branch that tracks it. However, I can't find any reference to this change in the release notes or in a Google search.</p>

<p>So, did they fix it? Is it now safe to simply checkout those remote branches? Or maybe I misunderstood the warning in that tutorial, and it was referring to another pitfall I should watch out from?</p>
","0","794380","0","0"
"44525202","172406","2017-06-13 15:04:07","0","204","<bash><git-remote><git-log>","Can the url of the remote be included in the output of `git for-each-ref` command?","<p>I am writing to a script to list all the git repositories on my system, their branches, and the latest commits on the system. So I have created this script prints out the following. </p>

<p><code>directory, branch(ref), date, commit hash, date, commit message, ref (again)</code>.</p>

<pre class=""lang-bash prettyprint-override""><code>#!/bin/bash
IFS='
'
for directory in `ls -d $1/*/`; do
  # echo ""$directory : $directory.git""
  if [[ -d $directory/.git ]] ; then
      # filter=/refs/heads
      filter=''
      for branch in $(git -C $directory for-each-ref --format='%(refname)' $filter); do
          echo $directory : $branch :  ""$(git -C $directory log -n 1 --oneline  --pretty=format:'%Cred%h - %C(yellow)%ai - %C(green)%s %C(reset) %gD' $branch)"" : $(echo $branch | rev | cut -d\/ -f-1 | rev)
      done
  fi
done
</code></pre>

<p>What I don't have is the repository URLs for the remotes. Can the remote's URL be printed as part of the output of <code>git for-each-ref</code> command?</p>

<p>I guess I could use <code>git remote -C $directory -v</code> to list the remotes for the repository into a lookup list which I would use for each value of <code>xxxxx</code> in <code>refs/remotes/xxxxx</code> into a variable which would be added to the <code>echo</code> command.</p>
","0","172406","",""
"7299237","631619","2011-09-04 12:33:33","15","24598","<git><git-remote><gitx><gitg>","how can I do a git pull in the gitg / gitx visual tool?","<p>I can do a push using gitg and push my code to the remote master branch but I can't see any option to do a git <strong>pull</strong>.</p>

<p>I am on Ubuntu 10 and 11</p>
","2","631619","0","0"
"7318918","84201","2011-09-06 11:09:30","115","325481","<git><git-remote>","fatal: does not appear to be a git repository","<p>Why am I getting this error when my Git repository URL is correct?</p>
<pre><code>fatal: 'git@skarp.beanstalkapp.com/gittest.git' does not appear to be a git repository
fatal: The remote end hung up unexpectedly
</code></pre>
<p>See it in context below, or <a href=""https://i.stack.imgur.com/vy0JX.jpg"" rel=""noreferrer"">as a screenshot</a>.</p>
<pre><code>jitendra@JITENDRA-PC /c/mySite (master)
$ git push beanstalk master
fatal: 'git@skarp.beanstalkapp.com/gittest.git' does not appear to be a git repository
fatal: The remote end hung up unexpectedly

jitendra@JITENDRA-PC /c/mySite (master)
$ git clone git://github.com/jquery/jquery.git
Cloning into jquery...
Remote: Counting objects: 19803, done.
Remote: Compressing objects: 100% (5196/5196), done.
Remote: Total 19803 (delta 14204), reused 19549 (delta 14052)
Receiving objects: 100% (19803/19803), 12.80 MiB | 591 KiB/s, done.
Resolving deltas: 100% (14204/14204), done.

jitendra@JITENDRA-PC /c/mySite (master)
$ gitk --all

jitendra@JITENDRA-PC /c/mySite (master)
$ gitk -all

jitendra@JITENDRA-PC /c/mySite (master)
$ git remote add origin git@skarp.beanstalkapp.com/gittest.git

jitendra@JITENDRA-PC /c/mySite (master)
$ git push origin master
fatal: 'git@skarp.beanstalkapp.com/gittest.git' does not appear to be a git repository
fatal: The remote end hung up unexpectedly

jitendra@JITENDRA-PC /c/mySite (master)
</code></pre>
","5","84201","0","0"
"7617435","3101","2011-10-01 00:57:58","1","2086","<git><git-push><git-filter-branch><git-remote>","How to get a list of all refs a git push would push?","<p>We're trying to implement a git workflow where there exists a pre-receive hook on the remote repo to validate that all pushed refs have commit messages that contain certain required information. In order to provide some convenience to developers, we'd also like a local git command developers can run to see what all refs would be pushed by a push command so they can verify before pushing whether or not their push would pass the hook, and also create a new git command that calls filter-branch or something else to rewrite all the commit messages to fill in any missing information.</p>

<p>So, is it possible to get a list of everything that would be pushed by a push command? <code>git push --dry-run --verbose</code> only gives a very cursory summary:</p>

<p>For example, </p>

<pre><code>&gt; git push --dry-run --verbose origin head:test/me

Pushing to git@git.mycompany.com:myproject.git
To git@git.mycompany.com:myproject.git
 * [new branch]      head -&gt; test/me
</code></pre>
","5","3101","",""
"7950385","386268","2011-10-31 05:56:15","5","4609","<git><git-remote>","Merging remote branches in git","<p>I am developing a system where I'm following the trails of another project, adding my own stuff but not directly to the original project. I setup my repository with three remote branches:</p>

<ol>
<li>Master - Where my development takes place.</li>
<li>Vendor - Where I sync with the original project periodically.</li>
<li>Integration - Where I want to merge (Master) and (Vendor) together. </li>
</ol>

<p>My workflow idea is for the synchronization to take place automatically (since it's basically a fast-forward of sorts), and the integration to be half-manual (since it requires merges and fixes). I've got the first part (the sync) covered, but I can't figure out what command/s to actually issue to integrate Master and Vendor into integration.</p>

<p>This is the output of <em>git branch -a</em>:</p>

<pre><code>* integration
  master
  vendor
  remotes/origin/HEAD -&gt; origin/master
  remotes/origin/integration
  remotes/origin/master
  remotes/origin/vendor
</code></pre>

<p>How do I go forward from this point to:</p>

<ol>
<li>Synchronize this workspace with the remote repository?</li>
<li>Merge vendor &amp; master into integration?</li>
<li>Push integration back to the remote repository?</li>
</ol>

<p>And obviously, if I have something wrong in the workflow I'd love to hear it.</p>
","2","386268","0","0"
"26090689","1843451","2014-09-28 23:32:52","2","1364","<git><github><version-control><git-branch><git-remote>","git set-upstream-to VR track","<p>Recently I tried to set my local branch <code>feature</code> to track changes on my remote branch like so:</p>

<pre><code>$ git branch --set-upstream feature origin/feature
</code></pre>

<p>Everything went well, however I got that message saying:</p>

<pre><code>The --set-upstream flag is deprecated and will be removed. Consider using --track or --set-upstream-to
</code></pre>

<p>My question is how to use <code>track</code> and <code>set-upstream-to</code> options and if there is a significant difference between them?</p>

<p><strong>UPDATE:</strong> I'm using <code>git</code> version <code>1.8.4</code></p>
","0","1843451","0","0"
"44680166","741156","2017-06-21 15:20:18","0","72","<git><github><git-remote>","setup multiple git to push to single remote on staging branch then automate merge to master","<p>my current remote repo has 2 branches ""master, test"" 
what i need is to push multiple projects i have into this test branch, but i don't want to merge project on local so that i can keep every project history clean.</p>

<p>folder structure or localmachine
/client
/api
/admin
/docs
every folder has its own repo ""local"".</p>

<p>i want to push them all to ""remote /test branch""
so than the test branch folder structure would contain all my repos (like local)</p>

<p>how can i achive this ? i've tried everthing online but most question address sync local to remote, and what i need is to sync ""remote with local"" without disrupting my workflow</p>

<p><strong>EDIT</strong></p>

<p>i managed to do what i need using following commands.</p>

<ol>
<li>inside every local git i added another remote pointing to main repo
<code>git remote add deploy git@git.website.com:usern/mainrepo.git</code></li>
<li>checkout current creating a new branch
<code>git branch -b stage-deploy</code></li>
<li>add and commit repo to new branch
<code>git add . &amp;&amp; git commit -m""message""</code></li>
<li>sync push this new branch with main repo
<code>git push -u deploy</code></li>
</ol>

<p>now i have the content of this subproject deployed to banch <code>mainrepo/stage-deploy</code> next i merge this branch with test branch, since every project has its own folder, so no conflicts should happen.
after i merge, i delete the stage-deploy branch from both repos. and i'm done.</p>

<p>i do this inside every project and now i have all projects syncing to one repo, and this mainrepo/test has posthocs working to deploy to test server successfuly.</p>

<p><strong>remaining problem</strong>
currently to merge the 'stage-deploy' branch with test branch i do it manual from the gitlab web interface. then i go back to local project and checkout delete the branch from local repo too,</p>

<p>how to automate merging newly created branch ?</p>
","2","741156","",""
"26147327","2976493","2014-10-01 17:42:00","0","105","<git><git-remote>","How to reference my current working branch in git","<p>I was wondering, and couldn't find too much online...is there a way to reference your current branch when doing a git push? For example, say I have 100s of branches created for bugs and stuff remotely and I constantly work on different branches every time, so if I'm on branch Bug1 and i make a change, I gotta add, commit, and then push remotely. Now if I change to Bug2 branch, I also gotta add, commit, and push remotely.</p>

<p>For each push I do, the syntax is as follow:</p>

<pre><code>git push origin Bug1
</code></pre>

<p>or </p>

<pre><code>git push origin Bug2
</code></pre>

<p>My question is, is there a way to reference the current branch so I can just do like this and not have to specify the same branch every time?:</p>

<pre><code>git push origin -c    &lt;-- -c for like current branch i'm on
</code></pre>

<p>Any help would be appreciated. Thanks!</p>
","1","2976493","",""
"8477493","269581","2011-12-12 16:31:08","1","249","<git><mercurial><bazaar><git-remote>","How do I hide a file from a single remote repo in git?","<p>I've got a project I'd like to start sharing on github which I'd set up as another remote repo.  But I've got some sensitive configuration information (amazon s3 account details) that I don't want to obviously share on github.</p>

<p>Is there a way I can get the remote github repos to ignore the settings file, but have the local and other remote repos work with it?</p>

<p>EDIT - 
reopening this question to see if there are any other distributed source control systems (mercurial? bazaar? etc) that can do this?</p>
","0","269581","",""
"36446832","1803648","2016-04-06 09:22:48","0","58","<linux><git><github><git-remote>","'git remote' displays different url than set in .git/config","<p>Yesterday started having weird issues with my github repos, when was suddenly prompted for user &amp; passwd for push. Git is set up using ssh, and no changes have been made in months.</p>

<pre><code>$ git remote -v
origin  https://github.com/user/repo.git (fetch)
origin  https://github.com/user/repo.git (push)

$ cat .git/config
 /-/
[remote ""origin""]
    url = git@github.com:user/repo.git
/-/

$ git config remote.origin.url
git@github.com:user/repo.git
</code></pre>

<p>Re-setting via remote set-url doesn't change anything either.
No issues with bitbucket repos. Has there been some change I've missed?</p>
","4","1803648","",""
"52496731","2293686","2018-09-25 11:07:44","14","3411","<git><gitlab><git-merge><git-remote><git-revert>","After git revert, merge showing no changes and already updated","<p>I have a <code>dev</code> branch which already merged with branches <code>featureA</code> and <code>featureB</code>.
I merged that <code>dev</code> branch to <code>master</code> and pushed to remote. Later I identified <code>featureB</code> is not yet ready to merge with <code>master</code> as there is a faulty commit. So I revert that merge of  <code>dev</code> --> <code>master</code>. </p>

<pre><code>git revert -m 1 &lt;merge-commit-hash&gt;
</code></pre>

<p>Then I am trying to merge <code>featureA</code> to <code>master</code>. But I cannot merge. It will say <code>Already up to date</code>.</p>

<p>I know the reason as Linus Torvalds said,</p>

<blockquote>
  <p>Linus explains the situation:</p>
  
  <p>Reverting a regular commit just effectively undoes what that commit
      did, and is fairly straightforward. But reverting a merge commit also
      undoes the <em>data</em> that the commit changed, but it does absolutely
      nothing to the effects on <em>history</em> that the merge had.</p>
  
  <p>So the merge will still exist, and it will still be seen as joining
      the two branches together, and future merges will see that merge as
      the last shared state - and the revert that reverted the merge brought
      in will not affect that at all.</p>
  
  <p>So a ""revert"" undoes the data changes, but it's very much <em>not</em> an
      ""undo"" in the sense that it doesn't undo the effects of a commit on
      the repository history.</p>
  
  <p>So if you think of ""revert"" as ""undo"", then you're going to always
      miss this part of reverts. Yes, it undoes the data, but no, it doesn't
      undo history.</p>
</blockquote>

<p>In this situation only solution to merge that <code>dev</code> again to <code>master</code> is <code>revert the revert commit</code>. But I only want to merge the one branch included in <code>dev</code> branch, that is <code>featureA</code></p>

<p>How can I merge the branch (<code>featureA</code>) to mainline branch (<code>master</code>), that included in reverted merge branch (<code>dev</code>)  ?</p>
","1","2293686","0","0"
"63583632","6218067","2020-08-25 16:52:23","1","33","<javascript><git><git-remote>","Push the updated master branch to remote repository which in in same project folder and configured in local git repo","<p>I have a project in below structure</p>
<p><a href=""https://i.stack.imgur.com/v2ZFV.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/v2ZFV.png"" alt=""enter image description here"" /></a></p>
<p><a href=""https://i.stack.imgur.com/KhLEN.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/KhLEN.png"" alt=""enter image description here"" /></a></p>
<p>My local git repository is array_code .In array_code folder I have my latest code in codemaster branch.
The remote repository has been preconfigured in to my local git repository.You can see in second image project folder.</p>
<p>Now how can i push the updated codemaster branch in to remote repository.</p>
<p>Can you please help with the command which I could figure as both are in same project folder</p>
","0","6218067","0","0"
"27847819","4434269","2015-01-08 19:14:51","1","75","<git><github><ssh><git-remote>","Creating local remote git repo","<p>sorry if this has been answered somewhere but my hour of searching was fruitless.</p>

<p>Im trying to set up an auto-build repo for my application on a local machine. My goal is to have my normal git repo for development and collaboration and then once it is ready for a build to push to a remote repo on a local machine that will use a hook to trigger an auto-build.</p>

<p>My problem is trying to create a remote repo on my local machine. I had no problem creating a remote repo using a git URL but I'm not sure how to go about setting up a local repo that is accessible by ssh keys. </p>

<p>From what I've read it should be something like this:
<code>
git remote add buildrepo user@localMachine:~/poject/buildrepo
</code></p>

<p>If someone could give me some advice, point me in the right direction or tell me I'm silly for trying to do it this way it would be greatly appreciated!</p>
","1","4434269","",""
"37461647","189186","2016-05-26 13:01:17","11","2601","<git><git-submodules><git-remote>","git: manage multiple remotes in a submodule","<p>My team uses a publicly available github hosted project as a submodule in our main project. We would like to manage our own patches against that project, without pushing upstream, but then we can't share those patches unless we have a mirror where we push our private branch.</p>

<p>Assuming we have the mirror, our submodule needs two remotes: one where we fetch upstream changes from, and one where we push merges with our patch branch. How can we store the information about the remotes with the submodule (or with the superproject), so that, every member of the team can trivially perform an upstream update, without having to <code>git add remote upstream ...github...project.git</code>.</p>

<p>We intend to solve the problem by writing a shell script to automate the process and a file for storing the upstream remotes, but is there a <em>git way</em> of doing this?</p>

<p>May be related, but I don't see a proper solution: <a href=""https://stackoverflow.com/questions/6589391/git-add-remote-in-submodule"">git add remote in submodule</a></p>
","2","189186","0","0"
"37481044","4814744","2016-05-27 10:26:18","2","518","<git><centos7><git-push><git-remote><git-post-receive>","Error with git over https push to remote server fatal could not switch to :permission denied","<p>I have a problem that cannot solve for days now and it's eating me what could be wrong.</p>

<p>I've set up a git server on Centos 7 machine.I 've also set up git over https.
Everything is working fine.I created post receive hook to checkou to path/to/repo but when i try to push to remote Server(Centos) i get the following error.</p>

<pre><code>remote: fatal: Could not switch to 'path/to/repo' : Permission denied.
</code></pre>

<p>I have tried everything change permisssions, owners gave 0777 to both the repo and path/to/repo files and folders with no luck.</p>

<p>The funny thing is that i've set up a vm on my machine with git server to test it first before going to the production and is working fine with no problems after i changed permissions.</p>

<p>But on when i set the production the same way i get </p>

<pre><code>remote: fatal: could not switch to /path/to/repo: Permissions Denied 
</code></pre>

<p>tested with root user and a test user and with permissions to 0777 to see if it will work changed owners groups(test,root,apache) but with no luck.I even restarted the server.</p>

<p>It's like permissions are not changing</p>

<p>Does anyone have any idea what might be the problem?</p>

<p>Thank you.</p>
","0","4814744","",""
"70223952","11973801","2021-12-04 07:59:57","4","8291","<github><git-push><git-remote>","remote: Permission to *****newuser.git denied to *****1stusername","<p><strong>in Visual studio code</strong></p>
<p>i spent a lot more time for this, I'm trying push <strong>my deleted project that is coming from 1st account github</strong> into  <strong>an existing repository in new another account</strong>, but I'm getting error like this :</p>
<pre><code>$ git push -u origin main
remote: Permission to username/project_name.git denied to first_account_username.
fatal: unable to access 'https://github.com/user_name/project_name.git/': The requested URL returned error: 403 
</code></pre>
<p>i tried those command line for push an existing repository in new account, please let me know what'd i miss ?</p>
<pre><code>git remote add origin https://github.com/user_name/project_name.git
git branch -M main
git push -u origin main
</code></pre>
","1","11973801","0","0"
"70454174","1420197","2021-12-22 19:25:25","1","382","<git><git-remote>","Unable to set the Git https url – it switches automatically to git protocol","<p>There is a very weird issue I have seen today on a Windows machine, specifically: <code>git push origin master</code> would fail with a message similar with this:</p>
<pre><code>Unable to push to git://github.com/user/repo
Please use https://github.com/user/repo
</code></pre>
<p>Cool, so we tried <code>git remote set-url origin 'https://github.com/user/repo'</code>.</p>
<p>When we tried to push again, a new error appeared:</p>
<pre><code>Unrecognized protocol 'https
</code></pre>
<p>This particular error, strangely, happens because of the way how Command Prompt looks at the wrapping quotes, so it may be not related to git.</p>
<p>Ran again, the same command, but without quotes: <code>git remote set-url origin https://github.com/user/repo</code></p>
<p>Now, surprise! When running <code>git remote -v</code> it should the <code>git://github.com/user/repo</code>.</p>
<p>The exact behavior happens when using GitHub for Desktop. When setting an https url in this format: <code>https://github.com/user/repo</code> it is automatically changed to <code>git://github.com/user/repo</code>.</p>
<hr />
<p>We fixed the issue by switching to ssh urls, but this still remains a mistery.</p>
<hr />
<p>Why is this happening at all? How to debug this?</p>
","1","1420197","",""
"37806599","5006206","2016-06-14 08:19:10","4","459","<git><git-remote>","Revert git remote accidentally pushed repository changes","<p>How could be possible to remove accidentally pushed repository from a remote origin?</p>
<p>Before push there where two independent repositories with own history
e.g. :</p>
<blockquote>
<p>Repo1: Commit1--Commit2--Commit3&lt;--Head</p>
<p>Repo2: Commit1--Commit2&lt;--Head</p>
</blockquote>
<p>After adding additional remote which refers Repo1 repository to Repo2 and pushed all Repo2 changes to Repo1 remote, Repo1 starts looking like this:</p>
<blockquote>
<p>Repo1:
Repo2Commit1--Repo2Commit2-- --Repo1Commit1--Repo1Commit2--Repo1Commit3&lt;--Head</p>
</blockquote>
<p>So it appears as one master branch with two independent commit history sequences that not related to each other.</p>
<p>In addition <code>git log</code> doesn't show all the commits, it shows only history for the one independent sequence.</p>
<p>Is there a way to revert Repo2 commits from Repo1. So it will look as before e.g:</p>
<blockquote>
<p>Repo1: Commit1--Commit2--Commit3&lt;--Head</p>
</blockquote>
<p>Any ideas?</p>
<p><a href=""https://i.stack.imgur.com/RetXP.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/RetXP.png"" alt=""How is it possible?"" /></a></p>
","4","5006206","0","0"
"9252272","3747","2012-02-12 20:12:50","1","255","<github><git-remote>","Why Remote for Github is named ""origin"" instead of ""github""","<p>I'm new to GIT and github and confused as to why the standard remote name is origin instead of github.</p>

<p>Why not just use ""github"" instead of ""origin"" for the remote name?</p>
","1","3747","",""
"44910764","7605002","2017-07-04 16:37:33","1","4597","<java><github-api><git-remote>","How to connect to github repository using java and github api","<p>I need to create remote Github repository using java (Using my credentials) and I need to push .Json file to that repo.</p>

<p>I saw some examples using JGit and some other references like <a href=""http://www.codeaffine.com/2015/11/30/jgit-clone-repository/"" rel=""nofollow noreferrer"">http://www.codeaffine.com/2015/11/30/jgit-clone-repository/</a> </p>

<p>I've written small code</p>

<pre><code>GitHubClient client = new GitHubClient(); 
client.setCredentials(""username"", ""password""); 
RepositoryService service = new RepositoryService(client); 
Repository repo=new Repository(); repo.setName(""newRepo""); 
service.createRepository(repo); 
</code></pre>

<p>It isn't working</p>

<p>Please help me with a working example. That would be really helpful.</p>
","0","7605002","0","0"
"27068739","4209419","2014-11-21 19:20:35","0","670","<git><git-branch><git-remote>","git branch -r vs git remote show origin","<p>So I was looking for a way to see a list of all the branches that exist on the remote, and found the following 2 commands:</p>

<p><code>    1. git branch -r
    2. git remote show origin</code></p>

<p>Whats the difference between the 2 commands?</p>
","0","4209419","",""
"63594177","6820170","2020-08-26 09:02:21","0","37","<github><visual-studio-code><git-remote>","Where can I find the name to add when creating a remote repo(github)","<p>I learn git with Vcode and dont understand how to enable to &quot;push&quot; to GitHub</p>
<p>I created a new empty repo in GitHub like</p>
<p><a href=""https://github.com/xxxx/testRepo.git"" rel=""nofollow noreferrer"">https://github.com/xxxx/testRepo.git</a></p>
<p>and in Vcode I select &quot;push&quot; and it ask if want to set up a new remote and I select yes and chose GitHub. A list drops down with all my GitHub projects and I select the testRepo.git.</p>
<p>It then ask my for a &quot;remote name&quot;.
I read in the docs that the name defaults to &quot;origin&quot;(the location you cloned from) but origin is my code locally and if I write the name &quot;origin&quot; (the only name that works), VCode then ask me to</p>
<p>'
<a href=""https://i.stack.imgur.com/Ysf8u.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Ysf8u.png"" alt=""enter image description here"" /></a></p>
<p>At this point I press Cancel and ask this question!</p>
","0","6820170","",""
"64289734","3249197","2020-10-10 03:41:07","1","497","<git><git-remote>","git: setting a remote to the local repository itself","<p>let's create a new git repository:</p>
<pre><code>$ git init test
$ cd test
</code></pre>
<p>and then add a remote, pointing to ourselves</p>
<pre><code>$ git remote add origin .
</code></pre>
<p>note the dot, referring to the test directory.</p>
<p>this seems to function as expected. you can make commits, set up branch tracking, and push and pull from yourself. the only strange thing i've run into is that if you commit, then fetch, your unpushed changes are already present if you go to push (it makes sense why this happens, but it's perhaps unexpected).</p>
<p>is this functionality stable / intended? what are the consequences of using a remote like this? will any git command usages error out on a repository like this? are there any real use cases?</p>
<p>I was thinking this might be good for getting git functionality minus the replication (as opposed to pushing to a bare repository on your same computer)</p>
<p>this seems like a strange feature, and i'm surprised i haven't found any discussion on it anywhere.</p>
","1","3249197","",""
"46208207","889053","2017-09-13 23:20:27","3","2871","<git><github><git-remote><git-fetch>","fetch git repo at specific commit without cloning","<p>I am trying to get a git repo at a specific commit hash <strong>without cloning</strong>! Every example wants to clone the whole repo. This makes sense but the repo I have in mind is huge and I need this to leave a small footprint as it is going with a docker image.</p>

<p>The commit hash is in the URL - either <code>wget</code> or <code>curl</code> could/should recursively fetch but I have a feeling github is blocking that as all I ever get is <code>robots.txt</code></p>

<p>The repo and commit: </p>

<blockquote>
  <p><a href=""https://github.com/phalcon/cphalcon/tree/1d6d21c98026b5de79ba5e75a3930ce7d1ebcd2e"" rel=""nofollow noreferrer"">https://github.com/phalcon/cphalcon/tree/1d6d21c98026b5de79ba5e75a3930ce7d1ebcd2e</a></p>
</blockquote>

<p>my best attempt error:</p>

<pre><code>git fetch https://github.com/phalcon/cphalcon/ 1d6d21c98026b5de79ba5e75a3930ce7d1ebcd2e
error: Server does not allow request for unadvertised object 1d6d21c98026b5de79ba5e75a3930ce7d1ebcd2e
</code></pre>

<p><strong>update</strong></p>

<p>Suggestions of answers that use clone aren't answering the question. I can clone/checkout no problem. Trying to do it without having the whole repo locally</p>
","4","889053","0","0"
"46215139","1298499","2017-09-14 09:17:58","1","29","<git><git-remote>","git make your local branch remote, local branch already has an upstream","<p>Currently I have a branch that has an upstream (remote branch).</p>

<p>I have made some commits so, my local branch is e.g. 9 commits ahead of the remote branch.</p>

<p>I want to create a new remote branch and change the tracking remote branch to this branch.</p>

<p>Should I first have to unset the upstream and then push the local branch to remote or it does not matter?</p>

<p>thanks in advance</p>
","0","1298499","0","0"
"64997848","14113310","2020-11-25 02:48:46","0","127","<git><gitlab><git-branch><git-checkout><git-remote>","How to clone a copy of all remote branches on local with git","<p>I encounter an issue with some of my projetc. I started them on my older computer that doesn't work now. But, I have my projetcs on a gitlab repository. However, when I cloned them on my new computer, I just have master branch on my local, I think it's normal.
So my question is : how can I have the local copy of the content of remote branches on my local please ?</p>
<p>I really don't enjoy to 'checkout' on remote/example branch ... :/
I hope I was clear in my words</p>
<p>Sorry for my English, I'm french.</p>
<p>Have a nice day</p>
","2","14113310","",""
"28226798","2480715","2015-01-29 23:42:50","0","131","<git><version-control><git-branch><git-remote><git-checkout>","How can I retrieve git remote branches?","<p>I'm clearly missing something since I am unable to fetch the remote branch I need on the server from the git repo I've been working with locally.</p>

<p><strong>On my local dev environment</strong></p>

<p>I run <code>git remote -v</code> and it gives me:</p>

<pre><code>origin  git@git.example.com:the_repo (fetch)
origin  git@git.example.com:the_repo (push)
</code></pre>

<p>I run <code>git branch</code> and it gives me:</p>

<pre><code>* live
  master
</code></pre>

<p><strong>On my live server environment</strong></p>

<p>I run <code>git remote -v</code> and it gives me:</p>

<pre><code>origin  git@git.example.com:the_repo (fetch)
origin  git@git.example.com:the_repo (push)
</code></pre>

<p>I run <code>git branch</code> and it gives me:</p>

<pre><code>* master
</code></pre>

<p>When I try to fix this situation by running <code>git fetch</code> or <code>git fetch origin</code>, I still do not see my <code>live</code> branch upon running <code>git branch</code> again. I suspect this is because <code>git branch</code> only lists my local branches. </p>

<p><strong>How can I fetch the repo's remote branches and list them before I check them out locally?</strong></p>

<p>Many thanks - much appreciated.</p>
","0","2480715","",""
"65043372","12512406","2020-11-27 20:14:07","3","539","<git><git-remote>","Is "".git"" at end of repository name important in local git repository, remote repository location?","<p>I just realised all this time, I was using <code>https://github.com/userName/repoName</code> to set the remote location for a local repository in git. But, everywhere it is used with <strong>.git</strong> suffix as <code>https://github.com/userName/repoName.git</code> to set the remote. I believe .git is used to indicate that the location is a git (version controlled) repository.</p>
<p>But, does it really matter, if I had ignored the <code>.git</code> all this time. Should I modify the remote of my local repositories?</p>
<p>Personally, I didn't face any issues till now. So I guess, it is just a naming convention sort of thing, and don't have to be concerned much about this.</p>
","5","12512406","0","0"
"70588497","1058591","2022-01-05 06:12:50","-1","152","<git><git-remote>","store git passwd in local","<p>I have a git remote repository and a username and password on it.<br>
When I clone my repo, Because it has many sub repo inner. For each time I have to enter my username and password.<br>
I can oly read from git server.<br>
How do I store permanently my username and password for using remote repo?</p>
","1","1058591","",""
"37839100","1517143","2016-06-15 15:02:29","0","66","<git><repository><git-remote><git-filter-branch>","Split directories in git to new repository","<p>I dont know if my approach is correct but I get the result as I want.
Could you help me figure out?</p>

<p>I have a repository abbr repo with 3 solutions which I split up.</p>

<p>Before:</p>

<pre><code>Root
|_Project1
|_Project2
|_Project3
</code></pre>

<p>After:</p>

<pre><code>Root
|_Project1
</code></pre>

<p>etc etc.</p>

<p>My approach:</p>

<pre><code>git clone &lt;url-to-old-repo&gt; &lt;new-repo-folder&gt;
cd &lt;new-repo-folder&gt;
git checkout &lt;branch&gt;
git remote rm origin
git filter-branch \
   --prune-empty \
   --index-filter '
      git rm --cached -qr --ignore-unmatch -- . &amp;&amp; git reset -q $GIT_COMMIT -- \
      &lt;project-folder&gt;
   ' \
   -- \
   --all
git remote add origin &lt;url-to-new-repo&gt;
git push -u origin &lt;branch&gt;
</code></pre>

<p>After all these commands, I end up with a new repo with my folder I want and the history is preserved. And this is done with all 3 projects. The remaining repo which contains all project is unused in future, maybe kept for backup.</p>
","2","1517143","",""
"54698856","275088","2019-02-14 20:50:14","2","2173","<bash><git><git-remote>","How to update the remote url for multiple git repositories in Bash?","<p>I have a bunch of git repos which have been moved to another host. I can update the remote for an individual repo with</p>

<p><code>git remote set-url origin &lt;url&gt;</code></p>

<p>How do I automate this for a few dozens of repos? Basically, I need to replace the hostname/path part of the url.</p>
","3","275088","0","0"
"72369281","10935201","2022-05-24 20:47:38","1","702","<git><git-remote>","How to create a git remote?","<p>I'm not talking about <code>git remote add</code>, I'm talking about actually creating <em>&quot;the remote&quot;</em>, like one on GitHub, the one you have to add with <code>git remote add</code>. From what I know a remote is just another copy of a repo, but it's stored on some dedicated machine. I want to try hosting something like that on my local network, so I can have bootleg GitHub at home. Is it possible?</p>
","2","10935201","",""
"54805979","8201676","2019-02-21 11:26:00","1","124","<git><git-push><git-remote><git-bare>","No changes in the remote bare repo after git push","<p>There is a remote bare repo on a Linux server (<code>repozytorium.git</code> in the following example) and a local non-bare repo. The problem is that after <code>git push dev master</code> no changes take place at the server, even though <code>repozytorium.git/refs/heads/master</code> contains the hash of all commits made locally. </p>

<p>The server contains directories that I want to be tracked by git and those that I don't want tracked. Local repo contains only the former. Is there a way to overwrite directories to be tracked on the server?</p>

<p>The output of the <code>.git/config</code> is:</p>

<pre><code>[core]
    repositoryformatversion = 0
    filemode = false
    bare = false
    logallrefupdates = true
    symlinks = false
    ignorecase = true
[remote ""dev""]
    url = user@server:/data/repozytorium.git
    fetch = +refs/heads/*:refs/remotes/dev/*
[branch ""master""]
    remote = dev
    merge = refs/heads/master 
</code></pre>

<p>Just to be clear: output of <code>git remote -v</code> is:</p>

<pre><code>dev     user@server:/data/repozytorium.git (fetch)
dev     user@server:/data/repozytorium.git (push)
</code></pre>
","1","8201676","",""
"54910060","7331538","2019-02-27 16:26:49","0","68","<git><macos><usb><git-remote>","git is not finding remounted USB drive which contains a bare repository","<p>I started a bare repository on a USB drive so I can have good version control over multiple machines.</p>

<p>After cloning the USB repository on a machine (mac) I removed the usb and continued working on the cloned, local copy. I then remounted the usb to the machine and attempted to push my work on the usb. However, this error appears when I try to push</p>

<pre><code>git push usb master
fatal: 'usb' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
</code></pre>

<p>Which I think means that git is not finding any remote repositories. and when I tried, <code>git remote</code> no remote repositories appear. I also made sure I remounted the USB on the same port but the issue persisted. Do I need to somehow re establish a connection?</p>
","4","7331538","",""
"54933016","926064","2019-02-28 19:36:06","1","180","<git><git-remote>","Excluding a git remote from ""fetch --all""","<p>Is it possible to have configured remotes in git that are only fetched when formally requested by its name? So they would be excluded of operations like <code>fetch --all</code>.</p>

<p>Imagine a dormant (disabled, or something) remote called ""my-no-auto-fetch-remote"":</p>

<pre><code>$ git fetch my-no-auto-fetch-remote
</code></pre>

<p>(it's fetched)</p>

<pre><code>$ git fetch --all
</code></pre>

<p>(the my-no-auto-fetch-remote shouldn't be fetched)</p>
","0","926064","",""
"55043246","2664531","2019-03-07 11:58:50","0","492","<git><repository><git-branch><git-push><git-remote>","Push git branch to other repository","<p>I have the following use case:</p>

<p>We have a private <code>gitlab</code> repository and want to push to a public <code>github</code> repo to open source it. But the private repository and the public repository shall contain different versions of some files. E.g. different documentation, etc...</p>

<p>I have tried to push the opensource_branch from the private <code>gitlab</code> repo to the public <code>github</code> repo:</p>

<pre><code>git push origin_github opensource_branch:master 
</code></pre>

<p>But the result is that all other historical commits before are also pushed (which contain documentation which shall not be public). </p>

<p>Any ideas how to solve this without manually copy &amp; paste all the time?</p>

<p>Thanks.</p>

<p>PS: I have of course searched SO for similar use cases but did not find exactly this one. Every other question regarding pushing to other remotes does not have the requirement that particular historic commits shall not be visible on the remote at all.</p>
","0","2664531","",""
"46124770","5482356","2017-09-08 21:27:59","1","81","<git><github><git-remote>","Is there a way to clone an existing remote git repo into a local directory without overwriting the current local files?","<p>I feel like there's a simple answer to this but I'm fairly new to git so looking at the documentation and other Stack overflow posts has been confusing me.</p>

<p>Let's say I have a local directory on my computer named <em>home</em>. Inside <em>home</em> are 2 files called ""project1"" and ""configurations."" I also have a remote git repo that exists on GitHub solely (I have not cloned it into any local directory) named myRepo. </p>

<p>I am trying to make it so <em>home</em> becomes a local clone of myRepo on my machine. When I try to git clone into the repo it just creates a new local repo inside of <em>home</em> called myRepo. I am aware the name difference may be a problem but I don't know the best way to approach this.</p>

<p>I would also like to preserve the previously existing local files ""project1"" and ""configurations"" in the newly cloned repo, instead of overwriting them. I'm aware I will need to eventually push them to the remote.</p>

<p>Can anyone give me advice on how to best go about this? And if you could explain it more in basic/layman terms I'd really appreciate it! I'm just very confused right now. </p>
","3","5482356","",""
"27889153","1309179","2015-01-11 16:07:40","2","173","<xcode><xcode6><git-remote><repository><xcode-server>","Xcode server does not show xcode configured git repository","<p>I'm setting up an XCode Server to get some CI Bots going for a project I'm doing.</p>

<p>I have Xcode (6.1.1) configured to connect to a remote git repo, and everything works fine. All VCS operations works as expected.</p>

<p>I then installed XCode server (4.0.3) and pointed it to my Xcode application. It seems to be happy and recognises my Developer Team etc.</p>

<p>Now I was under the impression that the git repo I have configured in xcode would show up under the 'Repositories' tab on Xcode Server, but this list is empty.</p>

<p>What am I missing here ? Is this an overall bad plan (connect to remote git, have bots pull and build my stuff) ?</p>

<p>Cheers,
Niklas</p>
","1","1309179","",""
"64155737","397830","2020-10-01 12:47:48","4","2375","<git><version-control><git-remote>","How to update a mirrored git repository","<p>We are in the process of moving from a local repository to azure.</p>
<p>We have already cloned and mirrored the repository once:</p>
<pre><code>git clone --bare https://xxx/xxx/old-repository.git
cd old-repository.git
git lfs fetch --all
git push --mirror https://xxx/xxx/new-repository.git
git lfs push --all https://xxx/xxx/new-repository.git
</code></pre>
<p>But now we have made a lot of changes on the <strong>new repository</strong>, for all the CI/CD process(only on develop).
But meanwhile, developers have continued to work and commit on the old repository(on several branches).</p>
<p>Is there a way to &quot;merge&quot; the original repository on the new one? Or at least just take the current version of the old repository, and applies again all the new changes?</p>
<p>How would you &quot;update&quot; our copy?</p>
","3","397830","0","0"
"64646102","14563940","2020-11-02 13:01:04","0","358","<git><github><git-remote>","Remove incorrectly written URL from git remote push URL","<p>I have got this situation:</p>
<pre><code>$ git remote show origin
* remote origin
  Fetch URL: git@gits-15.sys.kth.se:/gruprog-20/hansji-p-uppgift.git
  Push  URL: https://github.com/kulkarninomizuproduct/p-uppgift.git
  Push  URL: ^C
  Push  URL: ^C
  Push  URL: git@gits-15.sys.kth.se:/gruprog-20/hansji-p-uppgift.git
  HEAD branch: master
  Remote branch:
    master tracked
  Local branch configured for 'git pull':
    master merges with remote master
  Local ref configured for 'git push':
    master pushes to master (fast-forwardable)
</code></pre>
<p>This happened when i tried to copy some things, and the &quot;^C&quot; got accidently added as a push URL to my remote called &quot;origin&quot; when i pressed ctrl+C (though I never pressed enter). I have tried many different commands to remove it:</p>
<pre><code>$ git remote remove ^C
$ git remote rm ^C
$ git remote rm url ^C
$ git remote set-url --delete --push ^C
$ git remote set-url --delete ^C
$ git remote set-url --delete --push &lt;^C&gt;
$ git remote set-url --delete --push origin ^C
</code></pre>
<p>I suspect that the URL isnt actually &quot;^C&quot; but the actual command ctrl+C because look at this difference:</p>
<pre><code>#When I write &quot;git remote rm&quot;, then ctrl+C (as above, I dont need to press enter)(it returns nothing):

$ git remote rm ^C


# When I write &quot;git remote ^C&quot;

$ git remote rm ^C
fatal: No such remote: '^C'
</code></pre>
","2","14563940","",""
"46348473","8436767","2017-09-21 16:01:49","0","26","<git><git-remote>","initialize git on remote harddrive\machine","<p>I am trying to initialize my local git on a remote(ethernet connected) hard drive. I have bash installed on my windows machine. so  </p>

<pre><code>root@DESKTOP-JAMJG6V:/mnt/c/Windows/System32# git config --global user.name ""Name""
root@DESKTOP-JAMJG6V:/mnt/c/Windows/System32# git config --global user.email ""email@email.email""
root@DESKTOP-JAMJG6V:/mnt/c/Windows/System32# git config --list
user.name=name
user.email=email@email.email
</code></pre>

<p>Following the instructions at <a href=""https://git-scm.com/book/en/v2/Git-Basics-Getting-a-Git-Repository"" rel=""nofollow noreferrer"">https://git-scm.com/book/en/v2/Git-Basics-Getting-a-Git-Repository</a> where </p>

<pre><code>cd /home/user/your_repository
git init
</code></pre>

<p>I have tried this:</p>

<pre><code>root@DESKTOP-JAMJG6V:/mnt/c/Windows/System32# cd ""Y:/All Projects/Lab Equipment/DataQ/python/""
bash: cd: Y:/All Projects/Lab Equipment/DataQ/python/: No such file or directory
</code></pre>

<p>Y is a remote hard drive. What am I doing wrong? The directory I am trying to access exists.</p>
","2","8436767","",""
"46367681","212570","2017-09-22 14:57:23","1","440","<git><git-remote>","How to point a subdirectory of a git repo to a separate remote repo?","<p>I've got an existing project in a repository with a single remote. I'm trying to add another remote, but I need the new remote to only be associated with a subdirectory.</p>

<pre><code>/project/db
/project/misc
/project/app
/project/Dockerfile
/project/README.md
</code></pre>

<p>Given a project structure like the above, I want to be able to have <code>/project/app</code> connected to a new remote repository, so that if I push to that repository, it treats <code>/app</code> as the root. Is this even possible? I know I could just create a new local repo and copy the files from <code>/app</code> into it, but I'd like to keep my project history, and keep the other files (which are related) with the <code>/app</code> files.</p>

<p><em>The reason I'm doing this is because I had to switch from custom hosting, where I controlled the site root, to a different provider (WPEngine) with a more strict setup where the app files need to be in the repository root.</em></p>
","0","212570","0","0"
"64885590","51292","2020-11-18 01:09:39","0","53","<git><github><git-remote>","Added an existing project to github and got a ""* [new branch] master -> master""","<p>was following the instructions <a href=""https://docs.github.com/en/free-pro-team@latest/github/importing-your-projects-to-github/adding-an-existing-project-to-github-using-the-command-line"" rel=""nofollow noreferrer"">here</a> to add an existing <a href=""https://github.com/rtayek/eclipseworkspaces"" rel=""nofollow noreferrer"">project</a> to github. I did a <code>git push origin master</code> and got: <code>* [new branch] master -&gt; master</code>.</p>
<p>I do not recall seeing this before. Is this normal?</p>
<p>Edit 1:</p>
<pre><code>ray@rays8350 /cygdrive/d/ray/allEclipseProjects/eclipseworkspaces
$ git remote show origin
* remote origin
  Fetch URL: https://github.com/rtayek/eclipseworkspaces.git
  Push  URL: https://github.com/rtayek/eclipseworkspaces.git
  HEAD branch: master
  Remote branch:
    master tracked
  Local ref configured for 'git push':
    master pushes to master (up to date)

ray@rays8350 /cygdrive/d/ray/allEclipseProjects/eclipseworkspaces
$ git remote -vv
origin  https://github.com/rtayek/eclipseworkspaces.git (fetch)
origin  https://github.com/rtayek/eclipseworkspaces.git (push)

ray@rays8350 /cygdrive/d/ray/allEclipseProjects/eclipseworkspaces
$ git branch -vv
* master 8112d8f added license.

ray@rays8350 /cygdrive/d/ray/allEclipseProjects/eclipseworkspaces
$ git branch -a
* master
  remotes/origin/master

ray@rays8350 /cygdrive/d/ray/allEclipseProjects/eclipseworkspaces
$
</code></pre>
","3","51292","",""
"64889837","13904654","2020-11-18 08:54:29","3","943","<git><github><git-remote>","'git remote add' doesn't create repo","<p>I want to add remote repository from my shell but fail. I'm logged in and I'm in my local repository. So I enter this:</p>
<pre><code>% git remote add origin https://github.com/&lt;username&gt;/example.git
% git remote -v
origin  https://github.com/&lt;username&gt;/example.git (fetch)
origin  https://github.com/&lt;username&gt;/example.git (push)
</code></pre>
<p>So it seems that the repo has been created. But I see no new repo in my github account. And when I try to inspect the remote (or push anything there) it throws an error:</p>
<pre><code>% git remote show origin
remote: Repository not found.
fatal: repository 'https://github.com/&lt;username&gt;/example.git/' not found
</code></pre>
<p>I tried googling similar questions but couldn't find the answer. Does anyone know what I might be missing?</p>
","4","13904654","",""
"46407926","2111691","2017-09-25 14:39:38","2","1212","<git><bitbucket><diff><git-diff><git-remote>","How to get git diff between tags on repository without cloning/checkout","<p>I would like to know if there is a possibility to make something like:</p>

<blockquote>
  <p>git diff --repository ssh://git@server/repository.git TAG1 TAG2</p>
</blockquote>

<p>I know that you want to ask:
""Why don't you simply clone the repo and then make typical diff?""</p>

<p>Well, I want to make a script that will iterate through dozens of repositories as fast as possible in order to find changed that I have interest in. This script will be used by many people so I would really like to avoid slowing it down by downloading each repository.</p>

<p>So, my final question: is there anything that can do such a diff?</p>
","7","2111691","",""
"28149378","1105929","2015-01-26 11:39:02","0","108","<git><git-remote>","git: how to restore remote master?","<p>Locally I was working on the master. Then I accidentally did <code>git push origin master</code> instead of <code>git push origin develop:master</code></p>

<p>What is the best way to restore the master on remote?  </p>
","0","1105929","",""
"65259163","5258204","2020-12-11 21:57:25","0","96","<git><git-submodules><git-remote><subtree>","How to have editable git dependencies in my project (fe. Android)","<p>I just wonder if somebody can help me solve this issue which Im trying to solve for several days...</p>
<p>I want to make private reusable libraries for my projects but I want to be able to edit these libraries (for example some library can provide me with prepared login screen and I want to tweak design of this screen)
I already tried submodules, but that´s not really appropriate solution
I also tried subtrees with multiple remotes but I think it will be messy when I have like 10 libraries in project (git tree will be huge and complicated)</p>
<p>In my head the behaviour should be something like this:</p>
<ul>
<li>I add dependencies to my project</li>
<li>I edit and tweak these libraries</li>
<li>When I commit these changes, I want these changes be in my main git project, not in the library git</li>
<li>When I make some bugfixes in my libraries, I push these changes with TAG and then pull the changes to my main project and resolve conflicts if any show up</li>
</ul>
<p>I discovered this plugin <a href=""https://github.com/alexvasilkov/GradleGitDependenciesPlugin"" rel=""nofollow noreferrer"">https://github.com/alexvasilkov/GradleGitDependenciesPlugin</a> which seemed promising but have the same flaw as submodules (I must commit changes to the library git instead of main project git)</p>
<p>Is something like this even possible? Thanks for any help</p>
","0","5258204","",""
"46728183","2409793","2017-10-13 10:50:36","1","278","<git><git-remote>","git: Cannot see HEAD pointer of the remote (upstream) repo","<p>I have configured 2 remote repos in <code>git</code></p>

<pre><code>(develop)$ git remote -v
origin  git@gitlab:pkaramol/aproject.git (fetch)
origin  git@gitlab:pkaramol/aproject.git (push)
upstream    git@gitlab:anothernamespace/aproject.git (fetch)
upstream    no-push (push)
</code></pre>

<p>This is according to the known fork and pull from the <code>upstream</code> workflow; so that I can work on my forked project and periodically pull updates from the <code>upstream</code> and push them to my fork (<code>origin</code>).</p>

<p>However, I was wondering what is the current branch the <code>upstream</code>'s <code>HEAD</code> is pointing to, in order for me to know when running (being on my <code>master</code> branch): <code>git pull upstream master</code></p>

<p>which <code>upstream</code> branch will be fetched and merged in my local <code>master</code>.</p>

<p>But after running:</p>

<pre><code>$ git branch -av
* master                                                 aa8a454 A commit message
  remotes/origin/HEAD                                     -&gt; origin/master
  remotes/origin/master                                  aa8a454 A commit message
  remotes/upstream/master                                aa8a454 A commit message
  remotes/upstream/feature_branch_1                      3fo2090 Another commit message
</code></pre>

<p>Why isn't there a <code>remotes/upstream/HEAD</code> reference?</p>

<p>How can I know what branch the <code>upstream</code>'s <code>HEAD</code> is pointing to?</p>
","1","2409793","0","0"
"46746754","8027549","2017-10-14 16:24:26","1","56","<git><github><git-remote>","Git - develop on own remote and publish on github","<p>I have the following situation:</p>

<p>I am developing something with some other people on our own (private) server. This is useful to keep the files backed up and available. However, I would also like to host them on github. </p>

<p>Is there a way I can push and pull from my own server, but push (and <em>only</em> push) to github? I would like to disable fetching from github entirely because it doesn't make much sense. Essentially, we would like to use github as a way to publish our application so others can clone it, but still work entirely on our own infrastructure.</p>

<p>I added the remote with <code>git remote add github &lt;url&gt;</code> and added a push URL for it using <code>git remote set-url --add --push github &lt;url&gt;</code>.</p>

<p>Now I would need to remove the fetch URL but when I do <code>git remote set-url github --delete &lt;url&gt;</code>, it says <code>fatal: Will not delete all non-push URLs</code>.</p>

<p>This is obviously intended behaviour, but I would still like to work around it (or find a good solution to my problem). Can I just delete the fetch URL in my config or does that break anything in the long run? Is there an entirely different solution to my problem?</p>

<p>I've read through <a href=""https://stackoverflow.com/questions/14290113/git-pushing-code-to-two-remotes"">Git - Pushing code to two remotes</a>, but the solution presented there adds a second push URL, instead of a new remote. As far as I understand, this is not exactly what I would want, as the manual for <code>git remote</code> says:</p>

<blockquote>
  <p>Note that the push URL and the fetch URL, even though they can be set
  differently, must still refer to the same place. What you pushed to
  the push URL should be what you would see if you immediately fetched
  from    the fetch URL. If you are trying to fetch from one place (e.g.
  your upstream) and push to another (e.g. your publishing repository),
  use two separate remotes.</p>
</blockquote>

<p>...so I should rather use two repos, right? Or am I understanding this wrong?</p>
","4","8027549","",""
"65627996","7873949","2021-01-08 11:16:54","1","227","<git><git-push><git-remote><git-repo>","git cannot push an existing repository. 'remote-httpshttps' is not a git command","<p>Failed to push existing git repository to remote.</p>
<p>It did not happen before. I have tried install the last version of git but still fail to push.</p>
<pre><code>git push --set-upstream origin master
git: 'remote-httpshttps' is not a git command. See 'git --help'.
</code></pre>
","2","7873949","0","0"
"10962544","1008587","2012-06-09 16:15:33","5","1028","<git><github><git-extensions><git-remote>","Visual studio 2010 git extention manage remotes unable to connect","<p>I am pretty sure I am making a trivial mistake. I am using using Git Source Control Provider for VS 2010 and Git Extension UI. I am completely new to git concepts and I am doing everything through UI and not using command prompt.</p>

<p>I created a repo and then a private and public key. Then I configured the remotes for the repo using the private key (Public was added to my account on GitHub). It all worked fine as I was able to push my local repo. To configure remote I used Git Extension in VS (Git -> Manage remotes).</p>

<p>Then I created another repo and tried to configure the remotes again using the same private key but it failed and showed the error ""Unable to open connection: Host does not exist"". I created another private/public key pair but it failed again with same message.</p>

<p>What am I doing wrong? Anyone? Thanks in advance.</p>
","0","1008587","",""
"28887857","2327334","2015-03-05 21:15:05","0","43","<git><github><git-branch><git-push><git-remote>","Having git pull and push to different default remotes based on the branch","<p>Im trying to figure out how to setup git where I can pull/push from/to one remote and it by default pulls/pushes it into its own local branch. </p>

<p>This remote won't be the origin remote and Id like to merge the branch occasionally to the master branch which will be pushed/pulled to/from origin.</p>

<p>But its important to note that the other remote(s) will be completely independent and have their own master and such branches. So it may look something like this</p>

<p>remote-a (master) -> local (remote-a-branch)</p>

<p>Any help will be much appreciated, thanks in advance</p>
","0","2327334","",""
"65702826","11378048","2021-01-13 13:20:51","0","794","<git><git-clone><git-remote>","Git: what is project.git and how to clone it via SSH from an owned domain","<p>This is very stupid (question or git system or git documentation - I still haven't decided).</p>
<p>I have ssh access to client's server. There is a website <code>domain.com</code>, and there is <code>git</code> repository, they are under <code>/var/www/html</code>. In <code>git</code> config file there are no remotes, but should they be there? Git itself is installed, I can list history for example.</p>
<p>And subject is the question: at local pc how can I push and pull from that repository? Or am I misunderstanding something?</p>
","3","11378048","",""
"66025455","3142041","2021-02-03 10:17:27","0","161","<git-remote><grgit>","how to fetch git remote url using grgit APIs","<p>I need to read .git folder having below git remote url within my groovy script using grgit APIs.</p>
<pre><code>url = git@github.com:***/****.git
</code></pre>
<p>Can you please help</p>
","0","3142041","",""
"12462481","1675418","2012-09-17 15:28:24","62","106243","<git><git-push><git-remote>","What is the difference between git push origin and git push origin master","<p>Is there any difference in pushing the master branch of a local git repository to the master branch of a remote repository called origin with <code>git push origin master</code>
or with <code>git push origin</code>?</p>
","0","1675418","0","0"
"30117577","4841892","2015-05-08 06:54:21","0","2661","<git><github><repository><git-remote><git-extensions>","cannot find remote repository in git extensions 2.48.04","<p>I downloaded git Extension 2.48.04 and tried to add remote repository as GitExtensions 2.48 official documentation</p>

<p><a href=""http://git-extensions-documentation.readthedocs.org/en/latest/remote_feature.html"" rel=""nofollow noreferrer"">http://git-extensions-documentation.readthedocs.org/en/latest/remote_feature.html</a></p>

<p>but the problem is there is no remote tab or manage remote repositories as shown in the above link </p>

<p><img src=""https://i.stack.imgur.com/Q0OOI.png"" alt=""enter image description here""></p>

<p>So how can I add remote repository ? (I use puTTY method)</p>
","0","4841892","",""
"13424858","707301","2012-11-16 21:43:47","0","104","<windows><git><tortoisegit><git-remote><git-checkout>","How do I set git up to keep my files in sync?","<p>I'm having a problem with getting my Git repository to function the way that I want it to. I'm sure it can do what I want, but I'm just not figuring it out on my own. Here's my setup...</p>

<ul>
<li>PC1: This is my dev machine where I created the repository, and make changes to it.</li>
<li>SERVER1: This is where my remote Git repository is located, and all changes are pushed to it from PC1.</li>
<li>PC2: This is my QA machine. I cloned the Git repo from SERVER1. I wish to checkout whatever branch I want to test from the remote repository, and be able to do pulls to get the latest code.</li>
</ul>

<p>I use TortoiseGit on both PCs. I created a branch (2012_2_2) on PC1, committed changes, and pushed to SERVER1. From PC2, I selected ""Switch/Checkout"", and checked out remotes/orgin/2012_2_2. </p>

<p>Sadly, this doesn't work. When I look at the properties of the PC2 repository, the Current Branch say ""fatal: ref HEAD is not a symbolic link"". Also, I am unable to pull changes made to branch 2012_2_2. When I select pull from the menu, the only branch available to pull from is origin/master.</p>

<p>Where did I go wrong?</p>
","3","707301","",""
"13472687","366112","2012-11-20 11:55:45","4","3294","<git><git-merge><git-clone><git-remote>","clone git repo to a non-empty folder","<p>I have a large C project under git. Someone else has the same C project but he's not using git.</p>

<p>Both of us started from the same baseline, but I simply did a <code>git init</code> / <code>git add .</code> and started using git.</p>

<p>I'd like to merge my git managed changes into the other branch and init git on his project's folder so we're both synced and use git.</p>

<p>How would you do this in git?</p>
","1","366112","0","0"
"48997672","9415671","2018-02-26 21:48:47","0","43","<git><clone><git-remote>","Editing the content of git repository without `git clone`","<p>I want to update a remote rep by adding more content but am wondering if I can do that without having to clone all its content first.</p>

<p>Is it possible to establish the same kind of connection between the folder on my machine and an existing remote rep without downloading the remote content?</p>
","1","9415671","",""
"72486457","19262385","2022-06-03 08:00:01","9","21855","<git><git-push><git-remote>","fatal: unable to connect to github.com: github.com[0: 140.82.121.4]: errno=Unknown error","<p>I'm having a problem with my Git account. Every time I execute <code>git push</code>, I get the following error:</p>
<p><img src=""https://i.stack.imgur.com/82WXc.png"" alt=""Git push error"" /></p>
<p>I discovered that I'm working with an SSH URL:</p>
<p><img src=""https://i.stack.imgur.com/0Kowg.png"" alt=""SSH URL"" /></p>
<p>I tried switching back to an HTTPS URL using the following commands:</p>
<pre><code>git config --global url.https://github.com/.insteadOf git://github.com/
git config --global url.&quot;https://&quot;.insteadOf git://
</code></pre>
<p>However, it doesn't seem to change anything:
<img src=""https://i.stack.imgur.com/3OKSq.png"" alt=""example"" /></p>
<p>I tried many options that I thought were solutions such as manually configuration of config file but nothing works.</p>
","0","19262385","",""
"55266991","7825072","2019-03-20 17:36:07","1","79","<git><git-rebase><git-clone><git-remote><git-fork>","collaboration with shallow git clones","<p><strong>How can I create a shallow clone of a single branch that can be pushed to a new remote and later be reintegrated into the original remote?</strong></p>

<p>I need to send code to a customer. That customer wants to make changes that I need to integrate into my code base later. However, I cannot give the customer a full clone.</p>

<p>I can create a clone that is exactly what I want the customer to have.</p>

<pre><code>git clone --branch customer-release --depth 1 url
</code></pre>

<p>I can remove my remote, make commits on a new branch (as the customer would do), add my remote again, and push the customer branch for integration onto my remote.</p>

<p>However, I cannot push the shallow clone onto a newly created remote (as the customer would want to do).<br>
I experimented with orphan branches and rebasing but was ultimately unsuccessful.</p>
","1","7825072","0","0"
"55310294","2125837","2019-03-23 03:18:46","1","2308","<git><github><git-branch><git-remote>","How to create git Remote-Tracking Branch","<p><a href=""https://www.git-tower.com/learn/git/faq/track-remote-upstream-branch"" rel=""nofollow noreferrer"">They said</a> that is it as simple as</p>

<blockquote>
  <p>You can tell Git to track the newly created remote branch simply by using the -u flag with ""git push"".</p>
</blockquote>

<p>But it never worked for me. </p>

<p>How to create the git Remote-Tracking Branch, with which</p>

<blockquote>
  <p>Git can now inform you about ""unpushed"" and ""unpulled"" commits.</p>
</blockquote>

<p>Here is mine:</p>

<pre><code>$ git status 
On branch newfeature/v4-json
nothing to commit, working tree clean
</code></pre>

<p>vs what I'm expecting, quoting from <a href=""https://www.git-tower.com/learn/git/faq/track-remote-upstream-branch"" rel=""nofollow noreferrer"">above article</a>:</p>

<pre><code>$ git status
# On branch dev
# Your branch and 'origin/dev' have diverged,
# and have 1 and 2 different commits each, respectively.
#
nothing to commit (working directory clean)
</code></pre>

<p>I.e., info about the ""unpushed"" and ""unpulled"" commits.<br>
I.e., I want to see the same as:</p>

<pre><code>$ git status
On branch master
Your branch is ahead of 'origin/master' by 3 commit.
  (use ""git push"" to publish your local commits)

nothing to commit, working tree clean
</code></pre>

<p>Yet from my above actual output, you can see that i'm not able to see how many commits I've made so far anymore, <em>despite that I've made several commits</em>. </p>

<p>This is what I did:</p>

<pre><code>$ git push -u origin newfeature/v4-json
Counting objects: 12, done.
Delta compression using up to 2 threads.
Compressing objects: 100% (11/11), done.
Writing objects: 100% (12/12), 1.87 KiB | 958.00 KiB/s, done.
Total 12 (delta 9), reused 0 (delta 0)
remote: Resolving deltas: 100% (9/9), completed with 9 local objects.
remote: 
remote: Create a pull request for 'newfeature/v4-json' on GitHub by visiting:
remote:      https://github.com/.../pull/new/newfeature/v4-json
remote: 
To github.com:xxx/yyy.git
 * [new branch]      newfeature/v4-json -&gt; newfeature/v4-json
Branch 'newfeature/v4-json' set up to track remote branch 'newfeature/v4-json' from 'origin' by rebasing.
</code></pre>

<p>But I don't have such remote tracking branch 'newfeature/v4-json' from 'origin' set up by <code>git</code>:</p>

<p>A) <code>git remote show origin</code> does not show a remote tracking branch for my newfeature at all:</p>

<pre><code>$ git remote show origin
* remote origin
  Fetch URL: git@github.com:go-easygen/easygen.git
  Push  URL: git@github.com:go-easygen/easygen.git
  HEAD branch: master
  Remote branch:
    master tracked
  Local branches configured for 'git pull':
    master             rebases onto remote master
    newfeature/v4-json rebases onto remote newfeature/v4-json
  Local refs configured for 'git push':
    master             pushes to master             (up to date)
    newfeature/v4-json pushes to newfeature/v4-json (up to date)
</code></pre>

<p>while the following is what I want to see, according to <a href=""http://www.gitguys.com/topics/adding-and-removing-remote-branches"" rel=""nofollow noreferrer"">http://www.gitguys.com/topics/adding-and-removing-remote-branches</a></p>

<pre><code>$ git remote show origin
* remote origin
  Fetch URL: /tmp/.../git/rp0
  Push  URL: /tmp/.../git/rp0
  HEAD branch: master
  Remote branches:
    master     tracked
    newfeature tracked
  Local branches configured for 'git pull':
    master     rebases onto remote master
    newfeature rebases onto remote newfeature
  Local refs configured for 'git push':
    master     pushes to master     (up to date)
    newfeature pushes to newfeature (up to date)
</code></pre>

<p>Note in the <code>Remote branches:</code> section, besides <code>master tracked</code>, there is also a <code>newfeature tracked</code>. This <code>newfeature tracked</code> is called <em>remote tracking branch</em> as per above article. </p>

<p>B) neither is <code>git branch -a</code>:</p>

<pre><code>$ git branch -a
  master
* newfeature/v4-json
  remotes/origin/HEAD -&gt; origin/master
  remotes/origin/master
</code></pre>

<p>There is only one <code>remotes/origin/master</code> remote tracking name there, while I'm expecting more. E.g. (irrelevant but just to show the case with more remote tracking names), </p>

<pre><code>$ git branch -a
* master
  remotes/origin/HEAD
  remotes/origin/master
  remotes/origin/v1.0-stable
  remotes/origin/experimental
</code></pre>

<p>C) nor is <code>git branch -vv</code>:</p>

<pre><code>$ git branch -vv
  master             75369c3 [origin/master] - [*] allow ...
* newfeature/v4-json 8c98d9c - [*] update ...
</code></pre>

<p>while I'm expecting to see, </p>

<pre><code>$ git branch -vv
  master             75369c3 [origin/master] - [*] allow ...
* newfeature/v4-json 8c98d9c [origin/newfeature/v4-json] - [*] update ...
</code></pre>

<p>Moreover,</p>

<p><code>git pull</code> is not updating my <em>local</em> branch from <em>remote</em> either:</p>

<pre><code>$ git pull
From github.com:xxx/yyy
 * branch            newfeature/v4-json -&gt; FETCH_HEAD
Already up to date.
Current branch newfeature/v4-json is up to date.

$ git pull
From github.com:xxx/yyy
 * branch            newfeature/v4-json -&gt; FETCH_HEAD
Already up to date.
Current branch newfeature/v4-json is up to date.

$ git pull
From github.com:xxx/yyy
 * branch            newfeature/v4-json -&gt; FETCH_HEAD
Already up to date.
Current branch newfeature/v4-json is up to date.
</code></pre>

<p>I.e., no matter how many time I pull, I'm not getting the same output as, </p>

<pre><code>$ git pull
Already up to date.
Current branch master is up to date.
</code></pre>

<p>All above is <strong><em>not</em></strong> normal. I've created Remote-Tracking Branch with MS VS before many times, and the results are exactly as what I am expecting, not above. However, I don't like the black magic tricks, so I want to know how I can do the same with plain <code>git</code>. </p>

<p>So what is the correct way to create git Remote-Tracking Branch?</p>
","0","2125837","",""
"52913659","5353461","2018-10-21 09:03:00","3","528","<git><push><git-push><git-remote>","Programmatically get remote used for git push","<p>How can I obtain the remote used when issuing <code>git push</code>?</p>

<p>I want to be able to use this in a script, or in git alises.</p>

<p>Related: <a href=""https://stackoverflow.com/q/16838158/5353461"">Default remote for git fetch</a></p>
","0","5353461","0","0"
"69932654","3220554","2021-11-11 17:41:58","0","31","<git><git-remote>","git push fails after moving remote repository on same server","<p>I've got a git working repo and a bare repo on the same server as follows:</p>
<pre><code>/
+---dev
|    +---work
|    |    |   
|    |    +---.git
|    |    +---src
|    |    +---...
|    |
|    +---bare-repo.git
|
+---other
</code></pre>
<p>Pushing and pulling from the work repo to the bare repo was working fine. Then I had the need to reorganise the directories like this:</p>
<pre><code>/
+---dev
|    +---work
|    |    |   
|    |    +---.git
|    |    +---src
|    |    +---...
|
+---git
|    +---bare-repo.git
|
+---other
</code></pre>
<p>While in <code>/dev/work</code> I changed the remote URL with:</p>
<pre><code>git remote set-url origin /git/bare-repo.git
</code></pre>
<p>This command succeeded, but when I trying to <code>push</code> I'm getting:</p>
<pre><code>fatal: '../bare-repo.git' does not appear to be a git repository
fatal: Could not read from remote repository.
</code></pre>
<p>Interesting. While <code>git remote -v</code> shows</p>
<pre><code>origin  /git/bare-repo.git (fetch)
origin  /git/bare-repo.git (push)
</code></pre>
<p>the git config file contains:</p>
<pre><code>[core]
    repositoryformatversion = 0
    filemode = true
    bare = false
    logallrefupdates = true
[branch &quot;master&quot;]
    remote = ../bare-repo.git
    merge = refs/heads/master
[remote &quot;origin&quot;]
    url = /git/bare.repo.git
    fetch = +refs/heads/*:refs/remotes/origin/*
</code></pre>
<p>So, the <code>set-url</code> did not change the <code>remote</code> for branch master. Should it? I guess, no. So the command I've found to change the URL of the remote 'origin' was not the best. I can edit the config file and correct the path manually, I suppose, but what would have been the correct procedure?</p>
","4","3220554","",""
"37145151","340512","2016-05-10 17:25:22","327","153646","<git><git-remote><git-fetch><git-gc>","How to handle git gc fatal: bad object refs/remotes/origin/HEAD error?","<p>I randomly hit this today while trying to run Git <em>garbage collect</em>:</p>

<pre><code>$ git gc
fatal: bad object refs/remotes/origin/HEAD
error: failed to run repack
</code></pre>

<p>How do I deal with this?</p>
","0","340512","0","0"
"53246722","3437012","2018-11-11 07:33:56","2","88","<git><git-remote><git-fetch>","What's the difference between `git fetch origin` and `git fetch git://127.0.0.1/`","<p>I am experimenting with git and have created a repository in <code>~/A</code> containing only a master branch.</p>

<p>I have then cloned this repository into <code>~/B</code> (by starting a <code>git daemon</code> in <code>~/A</code> and running <code>git clone git://127.0.0.1/</code>).</p>

<p>I then created a new <code>test</code> branch in <code>~/A</code> and tried to get that branch in <code>~/B</code>. However, <code>git fetch git://127.0.0.1/</code> only showed</p>

<pre><code>From git://127.0.0.1
 * branch            HEAD       -&gt; FETCH_HEAD
</code></pre>

<p>To get the new branch I ended up doing <code>git fetch</code>, which as far as I understand is equivalent to <code>git fetch origin</code>. In any case, both of these give me</p>

<pre><code>From git://127.0.0.1
 * [new branch]      test       -&gt; origin/test
</code></pre>

<p>after which I can start working on the <code>test</code> branch in <code>~/B</code> by doing <code>git checkout test</code>. </p>

<p><strong>How is it possible that <code>git fetch git://127.0.0.1/</code> and <code>git fetch origin</code> have different results, when <code>git remote -v</code> shows</strong></p>

<pre><code>origin  git://127.0.0.1/ (fetch)
origin  git://127.0.0.1/ (push)
</code></pre>

<p>The daemon shows the same request for all commands, namely </p>

<pre><code>[20291] Extended attribute ""host"": 127.0.0.1
[20291] Request upload-pack for '/'
</code></pre>
","3","3437012","",""
"37201586","5605721","2016-05-13 05:00:11","1","438","<linux><windows><git><git-remote>","Connect local git repos on windows and raspberry pi","<p>I have a windows machine and a raspberry pi, each with a git repo.
I was able to set it up so I can pull from the pi to windows with the following command:</p>

<pre><code>git remote add pi@192.168.3.101:/home/pi/code/
</code></pre>

<p>This should be stable since the pi is set to a static local IP. <strong>I'd like help with an equivalent command to run on the pi so I can pull from the windows machine to the pi given that the windows machine is not set to a static ip (maybe using the machine name?).</strong> I'm still learning the ropes when it comes to windows/linux interaction and nothing I googled seemed to turn up what I was looking for. </p>

<p>I don't want to put the code up on github, so please don't suggest that. 
And I want to be able to develop on either machine so that means neither repo can be setup as bare. I appreciate any help!</p>
","0","5605721","",""
"37978438","3541320","2016-06-22 21:19:43","0","128","<git><centos><push><branch><git-remote>","git Push local branch to remote, RPC failed","<p>I know the command for do what I want (to push a local branch to the remote repository) but there's an error:</p>

<pre><code>[root@XXX app-name]# git push -u origin SomeBranch
Password:
Counting objects: 21, done.
Compressing objects: 100% (11/11), done.
Writing objects: 100% (11/11), 260.55 KiB, done.
Total 11 (delta 10), reused 0 (delta 0)
error: RPC failed; result=22, HTTP code = 417
</code></pre>

<p>And then it get stucked. What is happening? I'm connecting through putty (from Windows) to my local virtual machine (Centos 64), the remote repository is in another server.</p>
","0","3541320","",""
"70805485","11214643","2022-01-21 17:43:44","0","1361","<github><repository><push><commit><git-remote>","remote: Permission to NotMyRepo.git denied to Me. fatal: unable to access 'https://github.com/NotMyRepo.git/': The requested URL returned error: 403","<p>I cloned a repo, and I wanted to add some functionality.</p>
<p>I could simply copy/paste on to my own project, but I wanted to use the &quot;add personal&quot; option instead, because the main code is not mine after all, so copying it with CTRL+C + CTRL+V would not be fair imo.</p>
<p>By &quot;add personal&quot; option I mean <a href=""https://stackoverflow.com/a/18200424/11214643"">$ git remote add personal http://github.com/YOU/YOUR_REPO</a></p>
<p>I created the folder in my repo were the commit would end, and ever since (2 days now) I've been trying to commit the changes + the cloned code to that repo without success, and Ive tried every answer on SO (config username / email, ssh key pair creation, ssh agent, git bash commands, windows cmd, installing all github apps + bash, control panel, secret passphrase or whatever, etc... etc.. etc...), without any success, also half the solutions are now to no use since github now uses tokens to do anything and the ide (Android Studio) keeps asking me for tokens each try (my account is now filled with tokens for each attempt), the &quot;complete&quot; error is this:</p>
<p>remote: Permission to NotMyRepo.git denied to Me. fatal: unable to access 'https://github.com/NotMyRepo.git/': The requested URL returned error: 403</p>
<p>I guess it would make sense that I need permission from the author, but ... I could simply copy paste so, if I was able to clone why am I not allowed to &quot;add a new remote&quot;.</p>
","0","11214643","0","0"
"38209945","1816995","2016-07-05 18:10:53","0","655","<git><git-remote>","I can neither add nor remove a git remote with a specific name, it does not appear in `.git/config`","<p>I accidentally reversed the order of some arguments when trying to add an upstream remote to my git repo. </p>

<p>I.e., I input </p>

<pre><code>git remote add https://github.com/jupyter/nbconvert.git upstream
</code></pre>

<p>Which led to</p>

<pre><code>fatal: 'https://github.com/jupyter/nbconvert.git' is not a valid remote name
</code></pre>

<p>But now, </p>

<pre><code>git remote add upstream https://github.com/jupyter/nbconvert.git
</code></pre>

<p>returns: </p>

<pre><code>fatal: remote upstream already exists.
</code></pre>

<p>and </p>

<pre><code>git remote rm upstream
</code></pre>

<p>returns:</p>

<pre><code>error: Could not remove config section 'remote.upstream'
</code></pre>

<p>Then, </p>

<pre><code>git remote -v
</code></pre>

<p>I get </p>

<pre><code>origin  git@github.com:michaelpacer/nbconvert.git (fetch)
origin  git@github.com:michaelpacer/nbconvert.git (push)
upstream
</code></pre>

<p>And when I look in my <code>.git/config</code> there is no instance of <code>[remote ""upstream""]</code>…</p>

<p>So I'm a little stumped. </p>
","1","1816995","",""
"38222461","5783481","2016-07-06 11:03:29","0","1164","<git><git-branch><gawk><git-remote>","git branch for multiple remotes","<p>When running <code>git branch -r</code> I see the branches on my remote repository.
Is there a way to see in the same working directory, the branches of multiple repositories?
My goal is to create a file that lists all branches in couple of repositories, like this:</p>

<pre><code>repo1:master,dev,qa,fy-2473
repo2:master,dev,fy-1128,staging
repo3:master,fy-1272,staging
</code></pre>

<p>So on and so forth.
I have this to print the branches the right way:</p>

<pre><code>git branch -r | awk -F' +|/' -v ORS=, '{if($3!=""HEAD"") print $3}' &gt;&gt; repolist.txt
</code></pre>

<p>I just need to have this functionality work with couple of repositories without having to clone each and everyone of them for this single purpose.
Thanks.</p>
","0","5783481","0","0"
"70988482","11165214","2022-02-04 14:59:11","0","78","<git><synchronization><backup><git-remote>","How to use a git remote for synchronization and backup?","<p>I am currently writing my thesis and want to use git to have not just backup, but also version control.
I have two workplaces, and an basically 2 online servers, as shown in the following chart.
<a href=""https://i.stack.imgur.com/08KYl.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/08KYl.png"" alt=""enter image description here"" /></a></p>
<p>Until now, I have just synchronized the office-computer and the laptop by synchronizing one of them with the backup folder on the backup server and subsequently comparing the other workstation with the backup server (which occasionally leads to conflicts if a file has been changed on both workstations).
Now I want to add the version control using git. I would like to have master repository (let's call it master) on the remote server, where on the workstations there are local repositories (let's call them slave_office and slave_laptop) and changes on each side are pushed to the remote repository.
My idea is this: When I finish my work on one workstation (say office), I will commit and push the changes to the remote repository, and then start the synchronization. When I want to use the laptop to work, I will first pull the changes from the remote repository and then start the synchronization. Then, the local files will be the same as on the backup server. Then, after finishing work, I would use the same order as before: First commit/push to the repository, then start the backup synchronization. Using this scheme, after pulling from the remote repo and synchronizing, I should have 4 identical copies of the project on office computer, backup server, remote repo and laptop, right?
(To avoid confusion, I should note why I use 2 servers: the backup server contains also private files that I don't want to share, whereas the git project should also be kind of &quot;publicly&quot; available on the remote server, which can be accessed by colleagues.)</p>
<p>My question is now:</p>
<ol>
<li>Is this a &quot;good&quot; solution or is this way of combining synchronization and version control prone to create errors or other sources of discomfort?</li>
<li>How do I set up such a system. I am a git noob somehow, and ,although I used git a long time ago in a very simply setup and I am somewhat familiar with the basic commands, I am struggling with telling git, where the different repositories are and which is the remote. At the moment, I am stuck trying to get the files from the local repository cloned to the remote repository (&quot;pathspec did not match any files&quot;). I would be grateful for a kind of walkthrough.
Thank you very much!</li>
</ol>
","3","11165214","",""
"71015384","7308092","2022-02-07 08:19:07","5","2013","<git><git-remote>","What does git remote command 'set-branches' do?","<p>From the documentation, <a href=""https://git-scm.com/docs/git-remote#Documentation/git-remote.txt-emset-branchesem"" rel=""noreferrer"">https://git-scm.com/docs/git-remote#Documentation/git-remote.txt-emset-branchesem</a>, it is not clear to me what it actually does.</p>
","0","7308092","0","0"
"71034508","","2022-02-08 13:11:54","0","65","<git><github><gitlab><git-remote>","gitlab repo without knowledge of your remote on github","<p>I have a project which is published on Gitlab. But I also want to have it on Github as a private repo... I just have a question... if I clone it locally and then add a remote to the Github repository... this information will be accessible from the Gitlab repo? If so, how could I get it? I mean... assuming the Github remote is called <code>remote_github</code> and someone clones the gitlab repo locally when I run <code>git remote</code> it doesn't output <code>remote_github</code>.</p>
","0","","",""
"73216842","19665927","2022-08-03 05:55:52","0","85","<amazon-web-services><amazon-s3><git-remote><aws-codecommit><aws-rest-api>","How to PutFile into AWS code commit using git-remote-codecommit? what is the git-remote-codecommit url?","<p>I have used AWS code commit &quot;<strong>PutFile</strong>&quot; API with url as : <a href=""https://codecommit.us-east-2.amazonaws.com"" rel=""nofollow noreferrer"">https://codecommit.us-east-2.amazonaws.com</a> to add a file into AWS repo.
<a href=""https://docs.aws.amazon.com/codecommit/latest/APIReference/API_PutFile.html"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/codecommit/latest/APIReference/API_PutFile.html</a></p>
<p>This PutFile as per above link is not working if my file contents are larger.
So PutFile API explantion : suggested to use GIT client where I am trying to know about git-remote-codecommit.
So Can anyone please provide me what is the url of git-remote-codecommit and how do I perform operations using that. Also what are the credentials I need to use and how to create them?</p>
<p>reference :
using Rest API : PutFile
I usually provide below json values and url to send a request and get the response back</p>
<pre><code>{
   &quot;branchName&quot;: &quot;string&quot;,
   &quot;commitMessage&quot;: &quot;string&quot;,
   &quot;email&quot;: &quot;string&quot;,
   &quot;fileContent&quot;: blob,
   &quot;fileMode&quot;: &quot;string&quot;,
   &quot;filePath&quot;: &quot;string&quot;,
   &quot;name&quot;: &quot;string&quot;,
   &quot;parentCommitId&quot;: &quot;string&quot;,
   &quot;repositoryName&quot;: &quot;string&quot;
}
 https://codecommit.us-east-2.amazonaws.com
'''
Similarly using git-remote-codecommit , Do we have any API reference instead of CLI commands ?
like similar url as above along with we can provide request body and get the response?
</code></pre>
<p>Thank you</p>
","1","19665927","",""
"14426231","729403","2013-01-20 15:51:45","3","240","<git><git-remote>","Why is old name of git remote sill in .git/refs/remotes?","<p>I recently moved my 'main' remote git repository from <code>code.google</code> to <code>github</code>. Then, I renamed old <code>origin</code> repo to <code>code-google</code> and previously created remote <code>github</code> to <code>origin</code>. So far so good.</p>

<p>But...</p>

<p>There are still references in <code>.git/refs/remotes</code>:</p>

<pre><code>code-google  github  origin
</code></pre>

<p>I tried this, but it does not seem to be working:</p>

<pre><code>$ git remote prune github --dry-run
fatal: 'github' does not appear to be a git repository
fatal: The remote end hung up unexpectedly
</code></pre>

<p>Why is github still there since it was renamed? Why am I not able to dispose of it? And how can I clean up my repo?</p>
","6","729403","0","0"
"14432234","194309","2013-01-21 03:43:05","16","11959","<git><git-remote>","How do I move my remote git repo to another remote git repo?","<p>I want to move my remote git repository and all its branches to a new remote repository.</p>

<p>old remote = <code>git@github.com:thunderrabbit/thunderrabbit.github.com.git</code></p>

<p>new remote = <code>git@newhub.example.net:tr/tr.newrepo.git</code></p>
","2","194309","0","0"
"67448103","2504705","2021-05-08 13:28:46","1","2696","<github><git-clone><git-remote>","git clone is throwing repository not found error","<p>While trying to clone my private repository, I'm getting the following error</p>
<pre><code>fatal: repository 'https://github.com/kefitech/qp-guard.git/' not found
</code></pre>
<p>I have done some googling but unable to solve the issue.</p>
<p>Steps completed</p>
<pre><code>1. config --global user.name and password is set using terminal (windows cmd)
2. git remote -v
</code></pre>
<p>git remote -v is returning an error:</p>
<pre><code>fatal: not a git repository (or any of the parent directories): .git
</code></pre>
<p>So, tried set the remote URL to my repository using the command:</p>
<pre><code>git remote set-url origin https://&lt;my-user&gt;@github.com/&lt;my-org&gt;/qp-guard.git
</code></pre>
<p>Bur this also returning the same error returned by git remote -v command</p>
<p>Please note that:</p>
<pre><code>1. I'm a collaborator 
2. I can clone any public repos 
3. I have not used git client (terminal, cmd) for a long time but it was working before.
</code></pre>
<p>Looking forward to any pointers to solve this issue.</p>
","3","2504705","0","0"
"67480402","1936026","2021-05-11 04:00:37","0","114","<git><git-remote>","Replace a git remote without affecting branches","<p>I am mid-development into a project and due to DevOps changes there is suddenly the need to re-connect to the remote (with a new URL). What are the steps that I need to take to remove the old remote and establish connection with the new one without ruining my unmerged branches?</p>
<p>I have tried updating the remote URL using:</p>
<p><code>git remote set-url origin codecommit::us-west-2://myrepo</code></p>
<p>but getting this error when fetching from master:</p>
<pre><code>fatal: repository 'https://git-codecommit.us-west-2.amazonaws.com/v1/repos/myrepo/' not found
</code></pre>
<p>Am I missing something?</p>
<p>As background, the CodeCommit repo that I used to work with has been changed to require federated access. So I want to use git-remote-codecommit (GRC) with the corresponding URL instead of the old standard HTTPS URL.</p>
","3","1936026","0","0"
"31985258","2768350","2015-08-13 10:08:29","0","59","<git><svn><git-remote>","git: sync with SVN and push to another remote","<p>I have used <code>git svn</code> to clone an external SVN repository. </p>

<p>I would like to:</p>

<ul>
<li>push commits I make to a git remote (but not to the SVN remote)</li>
<li>pull changes from both the git and svn remotes</li>
</ul>

<p>So far I have done nothing but <code>git-svn clone</code> the SVN repository and created an empty remote repository in git. </p>

<p>What would be the additional setup steps and workflow I need here? 
What potential problems/silly mistakes should I be aware of?</p>
","0","2768350","",""
"49823207","3109189","2018-04-13 18:32:16","0","814","<git><git-push><git-remote><git-tag>","How can I delete any of those remote tags in one git command?","<h3>Context</h3>

<p>I have a continuous integration setup where we trigger a deploy by adding a tag <code>patch</code>, <code>minor</code>, or <code>major</code>.
In each case, my release script will trigger on these tags, generate an appropriate new version number and release the library.</p>

<h3>Problem</h3>

<p>Once the library is released, I want to make sure none of these tags remains on the remote.
I know I could do the following:</p>

<pre><code>git push origin :patch; git push origin :minor ; git push origin :major;
</code></pre>

<p>But this is inefficient as it takes three connections instead of one.</p>

<p>I tried to go with <code>git push origin --delete patch minor major</code>, but if the three tags are not found the command doesn't delete any:</p>

<pre><code>git push origin --delete minor major patch
error: unable to delete 'patch': remote ref does not exist
error: failed to push some refs to 'git@github.com:algolia/algoliasearch-client-android.git'
# You can see none was deleted, as if I try again on the existing ones:
[algoliasearch-client-android] git push origin --delete minor major      
To github.com:algolia/algoliasearch-client-android.git
 - [deleted]         minor
 - [deleted]         major
</code></pre>

<p>I think this is specific to git push/remote tags, as locally I can do:</p>

<pre><code>git tag --delete minor major patch
Deleted tag 'minor' (was db08908)
Deleted tag 'major' (was db08908)
error: tag 'patch' not found.
</code></pre>

<h2>Is there a way to delete any of several remote tags in one command?</h2>
","0","3109189","",""
"32006810","5122231","2015-08-14 09:31:32","1","111","<git-push><git-pull><git-clone><git-remote><git-add>","Connecting to web hosting site via git in such a way that I can push and pull directly via my local pc","<p>I initialized a bare repository on server</p>

<pre><code>git init --bare  
</code></pre>

<p>and then added a remote</p>

<pre><code>git remote add origin my.hosting.website.com:my-repository.git   
</code></pre>

<p>then I am trying to pull.I used     </p>

<pre><code>pull -all my repo on server
</code></pre>

<p>Problem is when I try to pull/push an item it gives error message</p>

<pre><code>fatal: /usr/libexec/git-core/git-pull cannot be used without a working tree
</code></pre>

<p>How to resolve this issue ?</p>

<p>Sorry I am just new to git.</p>
","5","5122231","",""
"14527817","","2013-01-25 18:09:40","1","51","<git><repository><git-remote>","Add a removed existing remote to a git repository","<p>I accidentally performed a <code>git remote rm &lt;remote_repo_name&gt;</code> :(
Will a <code>git remote add remote_repo_name &lt;remote_repo_path&gt;</code> add it back as a remote even though the remote already had previously pushed content ?</p>
","1","","",""
"67881574","5751393","2021-06-08 04:49:37","0","62","<git><git-push><git-pull><git-remote>","git origin vs. other remotes, why origin works so much better?","<p>When I execute the following commands, everything works fine:</p>
<pre><code>git clone x
git checkout master
git pull --rebase
git commit
git push
</code></pre>
<p>But this does not work and asks for a remote and a branch:</p>
<pre><code>git remote add y
git checkout y/master
git pull --rebase
</code></pre>
<p>I experience similar problems with <code>git push</code>.</p>
<p>Why is it not y/origin?<br />
Why does it work so nicely and friendly by default
with <code>origin</code> but not other remotes?</p>
","3","5751393","",""
"14567906","1113598","2013-01-28 17:41:23","2","360","<git><svn><git-svn><git-remote>","Create a remote Git branch as mirror for a specific git-svn branch of a SVN repository","<p>I cloned an existing svn repo off a remote server locally using git-svn's <code>git svn clone &lt;orig_svn_repo_path&gt;</code>. I now want to setup a remote repo for only a particular branch out of several branches of the locally cloned repo say <code>&lt;cloned_repo&gt;/branches/&lt;branch_to_clone&gt;</code>. Is this possible to do? The rest of the repo is pretty humongous in terms of size and as there is only that particular branch that I have to work on, I'd rather just setup a remote mirror for it. Also if that is possible, how would I then update the original svn repo with the branch being worked upon and also push my changes to the remote git branch (repo) to keep it in sync with the local branch (that is updated onto the svn repo) ?</p>
","0","1113598","0","0"
"14573794","656912","2013-01-29 00:38:08","5","1714","<git><git-merge><git-remote><git-reset>","How do I change a commit message after a 'git-pull' auto-merge?","<p>Occasionally, my collaborators will ""panic"" when there is an automatic merge generated as the result a <code>git-pull</code>, and just accept the default commit message. Before this commit gets pushed, I want to be sure the message gets fixed, but <code>--amend</code> seems not to work. What is the best way to fix the message that's generated in this scenario. The best instructions I can come up with for them are</p>

<pre><code>git reset --soft HEAD~
git merge -m &lt;message&gt; &lt;the tracked remote branch&gt;
</code></pre>

<p>but that seems a bit scary (<code>reset</code>) and error prone (the remote tracked branch has to be entered explicitly).</p>

<p>Is there a simple way to change the commit message that was just generated by merging with a remote tracking repo? Why doesn't <code>--amend</code> work?</p>
","2","656912","0","0"
"15107926","627408","2013-02-27 09:02:31","1","483","<git><playframework><git-remote>","git: exclude files from remote","<p>I have a Play Scala app which has two remotes, one for source, and another for deployment. Deployment needs the ./target directory but I want to keep the source remote clean of build files. Is it possible to have only the source remote ignore the target directory?</p>

<p>thanks!</p>
","5","627408","",""
"15127420","2065757","2013-02-28 04:17:30","0","87","<git><github><git-push><git-remote>","issues when trying to push a local repo to a github repo","<p>I'm brand new to git and I'm having major issue when trying to push a local repo to github. I set up a remote repo called origin with my github repo SSH address. Then when I try to push I keep getting the following issues:</p>

<pre><code>Macintosh:thinkful projects adityagorti6$ git remote -v
origin  git@github.com:speedrage56/Thinkful-Repo.git (fetch)
origin  git@github.com:speedrage56/Thinkful-Repo.git (push)
Macintosh:thinkful projects adityagorti6$ git push -u origin master
The authenticity of host 'github.com (207.97.227.239)' can't be established.
RSA key fingerprint is 16:27:ac:a5:76:28:2d:36:63:1b:56:4d:eb:df:a6:48.
Are you sure you want to continue connecting (yes/no)? yes
Warning: Permanently added 'github.com,207.97.227.239' (RSA) to the list of known hosts.
Permission denied (publickey).
fatal: The remote end hung up unexpectedly
</code></pre>

<p>Any help would be appreciated.</p>
","0","2065757","",""
"68630392","1719663","2021-08-03 04:31:00","0","412","<git><git-branch><git-remote>","How to clone a remote git repository such that all branches will be downloaded","<p>I am new to Git, and still learning it.<br />
I am trying to clone a Git remote repository called <code>hello-world</code> to my local machine.</p>
<p>On the remote (github in this case) the repository has two branches</p>
<ol>
<li><code>Main</code></li>
<li><code>Branch1</code></li>
</ol>
<p>But when I clone this repository and enter the command <code>git branch</code> it shows the <code>main</code> branch only.</p>
<p>I learned that with <code>--branch</code> for the <code>clone</code> command I can tell git to explicitly download another branch than the default. It works as expected, so when I <code>git clone https://github.com/ShivMahla/hello-world.git --branch branch1</code>, git downloads the repository with that <code>branch1</code>, however this time I found <code>main</code> is missing when I am using <code>git branch</code> command.</p>
<p>Please let me know what mistake I am doing.</p>
<p>I am expecting both branches should come to my local system and when I use <code>git branch</code> command it should show two entries to me</p>
<ol>
<li>main/master</li>
<li>branch1</li>
</ol>
<p>Do I need to make any setting in GitHub account for this?</p>
","1","1719663","0","0"
"15286307","273799","2013-03-08 03:40:47","19","5126","<git><github><git-clone><git-remote>","How to make git repo remember all remotes?","<p>I have a git repo that is a fork of another repo. As a rule I will normally add a remote called upstream, which is the original repo I forked from.</p>

<pre><code>$ git remote -v
origin git@github.com:skela/awesomeproject.git (fetch)
origin git@github.com:skela/awesomeproject.git (push)
upstream git://github.com/bob/awesomeproject.git (fetch)
upstream git://github.com/bob/awesomeproject.git (push)
</code></pre>

<p>Is there any way to have this additional remote persist across clones?
Say I delete my local repository and do a:</p>

<pre><code>git clone git@github.com:skela/awesomeproject.git
</code></pre>

<p>And now I recheck my remotes:</p>

<pre><code>$ git remote -v
origin git@github.com:skela/awesomeproject.git (fetch)
origin git@github.com:skela/awesomeproject.git (push)
</code></pre>

<p>My upstream remote has vanished!</p>

<p>How to I ensure that my git repo always keeps these 2 remote aliases?</p>

<p>Edit:
Just adding the main reason why I want to do this as to shape some of the answers down an acceptable path ;)</p>

<p>Goal is to have a branch in my repo that tracks the upstream's master.</p>

<pre><code>[remote ""upstream""]
    url = git://github.com/bob/awesomeproject.git
    fetch = +refs/heads/*:refs/remotes/upstream/*
[branch ""father""]
    remote = upstream
    merge = refs/heads/master
</code></pre>

<p>In other words, the branch ""father"" which is in my repo tracks the remote called upstream's master branch.</p>

<p>It all works great once I set it up, but as soon as I clone the repo again, the ""father"" branch points to origin instead of the upstream.</p>
","1","273799","0","0"
"15314222","3311276","2013-03-09 18:19:15","0","76","<git><github><git-remote>","What am I missing when adding a remote github branch?","<p>I am adding a remote repository like this </p>

<pre><code>git remote add pythonic https://github.com/sanfx/pythonic.git
</code></pre>

<p>but I get this error saying </p>

<blockquote>
  <p>fatal: <a href=""https://github.com/sanfx/pythonic.git/info/refs"" rel=""nofollow"">https://github.com/sanfx/pythonic.git/info/refs</a> not found: did you run git update-server-info on the server?</p>
</blockquote>

<p>Previously when I did <code>git push -f python3_ver2</code> added a remote branch even though I didn't have it on github.com.</p>

<p>What am I missing in adding a remote branch?</p>
","5","3311276","",""
"16914681","2451120","2013-06-04 09:48:59","1","1321","<git><git-branch><git-remote>","Fetching the changes from my colleague's git branch","<p>I want get the changes from my collegue's git branch. His changes are in his branch 'teamBranch'. I added his repo and fetched it with below commands.</p>
<blockquote>
<p>git remote add team 'his repo with URL'</p>
<p>git fetch team</p>
</blockquote>
<p>I am able to get his repo listing with</p>
<blockquote>
<p>git remote -v</p>
</blockquote>
<p>But my problem is, I am not able to see the branch 'teamBranch' with the command</p>
<blockquote>
<p>git branch -r</p>
</blockquote>
<p>I can only see his master branch not teamBranch. Can anyone please help me ?
Thank you all !</p>
","4","2451120","",""
"18031946","1514072","2013-08-03 10:38:50","538","582979","<git><push><git-push><git-remote><upstream-branch>","When doing a 'git push', what does '--set-upstream' do?","<p>What does git <code>--set-upstream</code> do? </p>

<p>I tried to understand it by reading the <a href=""http://git-scm.com/docs/git-push"" rel=""noreferrer"">git manual</a>, but I didn't quite get it. </p>
","1","1514072","0","0"
"34582407","478573","2016-01-03 22:32:15","2","973","<git><github><git-remote>","New git repository error on first push","<p>I did <code>git init</code>, then I realized I should include the link that I got when I made the repository in GitHub so I did this:</p>

<pre><code>git init https://github.com/genadinik/AndroidMakeMoneyFree.git
</code></pre>

<p>Then I did:</p>

<pre><code>git add -all
git commit -m ""Adding repository contents""
</code></pre>

<p>And that worked fine, but then I tried to push and got this error:</p>

<pre><code>git push origin master
fatal: 'origin' does not appear to be a git repository
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
</code></pre>
","0","478573","",""
"51680233","4612476","2018-08-03 21:23:45","0","145","<git><git-remote>","How to recursively remove a broken git remote from all repos in a directory?","<p>I have a folder full of old git repositories at arbitrary folder depths. Many of these repos were created when I was using an old git host that no longer exists. I need to find all of the local repos that reference that old remote and remove that remote from my local repositories.</p>
","0","4612476","",""
"53355089","10470919","2018-11-17 20:06:54","1","55","<git><git-bash><git-remote>","'git remote -v' delete unwanted repositories locally","<p>when I type <code>git remote -v</code> in git bash I get a list of all the repository urls, the problem is they are all outdated I want to delete all of them. How would I go about doing this?</p>
","0","10470919","",""
"70098293","8241887","2021-11-24 14:56:17","0","358","<git><git-remote><aws-codecommit>","git clone to AWS Codecommit repo returns 403","<p>I am trying to clone source code hosted in an AWS Codecommit Repo using HTTP-GRC method.</p>
<p>I have followed this setup guide: <a href=""https://docs.aws.amazon.com/codecommit/latest/userguide/temporary-access.html?icmpid=docs_acc_console_connect#tc-role"" rel=""nofollow noreferrer"">https://docs.aws.amazon.com/codecommit/latest/userguide/temporary-access.html?icmpid=docs_acc_console_connect#tc-role</a></p>
<pre><code>git clone codecommit::us-west-2://my-code-repo 
returns:
Cloning into 'common-ops-cdk'...
fatal: unable to access 'https://git-codecommit.us-west-2.amazonaws.com/v1/repos/my-code-repo/': The requested URL returned error: 403
</code></pre>
<p>Here's some info that might come handy understanding what's wrong:</p>
<pre><code>$ git config --list
diff.astextplain.textconv=astextplain
filter.lfs.clean=git-lfs clean -- %f
filter.lfs.smudge=git-lfs smudge -- %f
filter.lfs.process=git-lfs filter-process
filter.lfs.required=true
http.sslbackend=openssl
http.sslcainfo=C:/Users/myusername/AppData/Local/Programs/Git/mingw64/ssl/certs/ca-bundle.crt
core.autocrlf=true
core.fscache=true
core.symlinks=false
pull.rebase=false
credential.helper=manager-core
credential.https://dev.azure.com.usehttppath=true
init.defaultbranch=master
credential.helper=!aws codecommit credential-helper $@
credentials.helper=UseHttpPath=true
</code></pre>
<p>Any insights will be helpful. Thanks!</p>
","0","8241887","",""
"37379018","1307609","2016-05-22 19:57:07","1","115","<git><git-submodules><git-remote>","Maintain git remote to a subdirectory","<p>I have a Git repository with the following structure:</p>

<pre><code>src/
    .git/
    Api/
    Web/
</code></pre>

<p>I want to clone another repository to the Web directory and pulling new changes from a remote to Web later from time to time. But I also want to modify the files under <code>/Web</code> and push every change that I made to my main remote.
I don't want to push anything to the Web's remote, just to the main one.</p>

<p>If I pull the changes from the Web remote, I'd like to see the changes that I pulled in the main history.</p>

<p>Can I use git submodules in this scenario?</p>

<p>The <a href=""https://git-scm.com/docs/git-submodule"" rel=""nofollow"">docs</a> says that <code>""The other repository has its own history, which does not interfere with the history of the current repository.""</code> that's why I'm hesitating, probably this is cannot be done with submodules...?</p>
","0","1307609","0","0"
"71133197","713861","2022-02-15 20:47:30","1","88","<git><ssh><git-remote>","Why are git commands like push printing ""\S Kernel on an"" to the terminal each time i run them?","<p>When I run git, it is printing some odd text to the terminal that seems unrelated to the command. For example, with <code>git push</code>:</p>
<pre><code>$ git push
\S
Kernel  on an 
Everything up-to-date
</code></pre>
<p>I've noticed it <em>only happens when my commands involve the remote repo.</em></p>
<p>Is this a bug? Something I should worry about?</p>
<p>Here is some additional information about my environment:</p>
<pre><code>$ echo $0 $SHELL
-zsh /bin/bash
</code></pre>
<pre><code>$ git --version
git version 2.35.1
</code></pre>
<pre><code>$ git status
On branch master
Your branch is up to date with 'origin/master'.

nothing to commit, working tree clean
</code></pre>
<pre><code>$ git remote -vv
origin  &lt;redacted&gt;:&lt;redacted&gt;.git (fetch)
origin  &lt;redacted&gt;:&lt;redacted&gt;.git (push)
</code></pre>
<pre><code>$ git push --verbose
Pushing to &lt;redacted&gt;:&lt;redacted&gt;.git
\S
Kernel  on an 
To &lt;redacted&gt;:&lt;redacted&gt;.git
 = [up to date]      master -&gt; master
updating local tracking ref 'refs/remotes/origin/master'
Everything up-to-date
</code></pre>
<pre><code>$ ls -1 .git/hooks
applypatch-msg.sample
commit-msg.sample
fsmonitor-watchman.sample
post-update.sample
pre-applypatch.sample
pre-commit.sample
pre-merge-commit.sample
pre-push.sample
pre-rebase.sample
pre-receive.sample
prepare-commit-msg.sample
push-to-checkout.sample
update.sample
</code></pre>
<pre><code>$ cat .git/hooks/*push
zsh: no matches found: .git/hooks/*push
</code></pre>
<pre><code>$ which git
/usr/local/bin/git

$ file /usr/local/bin/git
/usr/local/bin/git: Mach-O 64-bit executable x86_64
</code></pre>
","14","713861","",""
"38473031","3147233","2016-07-20 05:35:01","0","103","<git><push><git-remote>","git push to branch by other name","<p>I base git remote myproject on remote upstream from github. Now I have branch master tracking myproject/master but want to have another branch tracking upstream/master, so I create branch upstream-master.</p>

<ul>
<li>Getting changes from upstream/master is easy, just do <em>git pull upstream</em> when on local/master</li>
<li>It is good to have a local branch upstream-master to prepare commits to upstream/master

<ul>
<li>To copy commits from master to upstream-master: <em>git merge master</em></li>
<li>To see pending commits on upstream-master: <em>git log @{upstream}..</em></li>
<li>To automatically squash merge commits and such: <em>git rebase -i @{upstream}</em></li>
</ul></li>
</ul>

<p>For some reason one cannot automatically push from local/upstream-master to upstream/master. This works:</p>

<pre><code>git co upstream-master
git push upstream HEAD:master
</code></pre>

<p>This is ineffective, upstream is not changed</p>

<pre><code>git co upstream-master
git push --set-upstream upstream HEAD:master
</code></pre>

<p>This affects local/master</p>

<pre><code>git co upstream-master
git push --set-upstream upstream master
</code></pre>

<p>Why is it not possible to configure so that <em>git push</em> wih no arguments pushes from local/upstream-master to upstream/master?</p>
","3","3147233","",""
"71219826","561309","2022-02-22 10:43:30","0","101","<git><branch><git-remote>","How to make git push to the current remote by default?","<p>I've got a repository where some branches are on a public remote, and others on a private remote:</p>
<pre><code>origin  git@github.com:name/project (fetch)
origin  git@github.com:name/project (push)
private git@github.com:name/project-private (fetch)
private git@github.com:name/project-private (push)
</code></pre>
<p>So for example a branch &quot;some-public-feature&quot;, will be on the &quot;origin&quot; remote, while &quot;some-private-feature&quot; will be on the &quot;private&quot; remote.</p>
<p>This works fine and things get pushed to the correct repositories. However when I try to push from the private branch, it always displays this message:</p>
<pre><code>fatal: The upstream branch of your current branch does not match
the name of your current branch.  To push to the upstream branch
on the remote, use

    git push private HEAD:some-private-feature

To push to the branch of the same name on the remote, use

    git push private HEAD
</code></pre>
<p>So really I need to type <code>git push private HEAD</code>, which works fine, but I'm wondering if there's any way to make git do this by default? In other words, &quot;git push&quot; should always push the current branch to the branch of the same name on the remote. Any idea if that can be done?</p>
<p>(Note that I don't have this problem for the public branches - in that case, a simple &quot;git push&quot; works as expected, so I'm not sure what's different)</p>
","2","561309","",""
"38524723","2252087","2016-07-22 10:56:52","2","304","<git><git-push><git-remote>","How to push to multiple git repositories with different setups?","<p>I have several remotes with different <code>push</code> configurations; e.g.</p>

<pre><code>[remote ""public""]
    url = ssh://external-server/repo
    push = refs/heads/master:refs/heads/master

[remote ""internal""]
    url = ssh://internal-server/repo
    push = refs/heads/*:refs/heads/*
</code></pre>

<p>Is it possible to push to both repositories with a single, simple command without inventing additional layers?</p>

<p>I tried <code>pushUrl</code> as suggested in related questions but this expects an url and does not allow a remote.  Then, I modified it to use <code>git-remote-ext</code> like in</p>

<pre><code>[remote ""all""]
    pushUrl = ""ext::git push public""
    pushUrl = ""ext::git push internal""
</code></pre>

<p>But this pushes to the first repository only and fails then with</p>

<pre><code>fatal: Could not read from remote repository.
</code></pre>

<p>Manual shell commands (<code>git push public &amp;&amp; git push internal</code>) are not a solution because in reality I have a lot of repositories which are having different sets of remotes (e.g. git servers hosted by customers, public repositories, internal/external mirrors, test systems, read-only sources).  Sometimes they are in submodules which I want to push in a way like</p>

<pre><code>git submodule foreach 'git push all'
</code></pre>

<p>Defining an alias might work but is too clumsy and breaks somehow the usual workflow (using <code>git push</code> to push things).</p>
","0","2252087","0","0"
"71248236","4252562","2022-02-24 07:02:29","0","38","<git><hook><git-remote>","Is it possible to share a value from remote git to local git?","<p>I need to perform some calculations on the server side of a git repository, but I also want to share the result with locals.</p>
<p>I created a server-side <code>post-receive</code> hook which performs some actions, then store the result in a file into the <code>info</code> directory. Such result can be sent easily to the client during the hook execution, client will receive it in the push result message, but I want a client to be capable to get it on request. Is it possible?</p>
","5","4252562","",""
"71275762","1086134","2022-02-26 10:11:52","0","610","<git><github><branch><tracking><git-remote>","How can I fix this git remote branch tracking inconsistency?","<p>I have a <code>git</code> repository that seems to be confused about its branch tracking configuration, and I need some help straightening it out. I'm running <code>git version 2.21.0.windows.1</code>.</p>
<p>The problem is that <code>git branch -a</code> still lists a remote I deleted, and it shows branch tracking that is inconsistent with <code>git remote -v</code> and <code>git remote show origin</code>. Below are commands showing the current state of the repo:</p>
<pre><code>C:\dev&gt; git branch -a
* dev-mdbootstrap
  master
  remotes/localrepo/HEAD -&gt; localrepo/master
  remotes/localrepo/dev-mdbootstrap
  remotes/localrepo/master
  remotes/origin/master


C:\dev&gt; git remote -v
origin  https://github.com/MyOrganization/MyProject.git (fetch)
origin  https://github.com/MyOrganization/MyProject.git (push)


C:\dev&gt; git remote show origin
* remote origin
  Fetch URL: https://github.com/MyOrganization/MyProject.git
  Push  URL: https://github.com/MyOrganization/MyProject.git
  HEAD branch: master
  Remote branches:
    dev-mdbootstrap tracked
    master          tracked
  Local branches configured for 'git pull':
    dev-mdbootstrap merges with remote dev-mdbootstrap
    master          merges with remote master
  Local refs configured for 'git push':
    dev-mdbootstrap pushes to dev-mdbootstrap (up to date)
    master          pushes to master          (up to date)


C:\dev&gt; git ls-remote origin
2ac96d0912e126f5ccaafef66133e3fbc3f23f1d        HEAD
bd3366870b7c6848c7d182e971307b9a74e0ae48        refs/heads/dev-mdbootstrap
2ac96d0912e126f5ccaafef66133e3fbc3f23f1d        refs/heads/master
</code></pre>
<p>I'm stumped as to why <code>git branch -a</code> still lists <code>localrepo</code> and does not show local branch <code>dev-mdbootstrap</code> tracking <code>remotes/origin/dev-mdbootstrap</code>.</p>
<p>An explanation of the history of this repository is needed.</p>
<p>I originally cloned a <em>local</em> git repository, created a new branch named <code>dev-mdbootstrap</code>, and began working. So at that point <code>origin</code> was the <em>local</em> repository.</p>
<p>Later, I wanted to configure an existing github.com repository as <code>origin</code>, so I did the following:</p>
<pre><code>C:\dev&gt; git remote rename origin localrepo

C:\dev&gt; git remote add -t master origin https://github.com/MyOrganization/MyProject.git
</code></pre>
<p>All of this seemed to work just fine. (The <a href=""https://github.com/MyOrganization/MyProject.git"" rel=""nofollow noreferrer"">https://github.com/MyOrganization/MyProject.git</a> remote previously contained only the <code>master</code> branch.)</p>
<p>I pushed the local <code>dev-mdbootstrap</code> branch to the newly configured GitHub <code>origin</code> repo:</p>
<pre><code>C:\dev&gt; git push -u origin dev-mdbootstrap:dev-mdbootstrap
Counting objects: 100% (59/59), done.
[...snipped...]
Branch 'dev-mdbootstrap' set up to track remote branch 'dev-mdbootstrap' from 'origin'.
</code></pre>
<p>Eventually, I decided to remove the <code>localrepo</code> repository:</p>
<pre><code>git remote rm localrepo
</code></pre>
<p>I'm very puzzled why <code>git branch -a</code> still shows <code>localrepo</code>. How can I straighten it out?</p>
<p>Thanks!</p>
","0","1086134","",""
"71280135","16145046","2022-02-26 20:41:02","0","120","<git><githooks><git-remote>","Efficiently replicate git working tree from remote repo","<p>I have a remote bare repo on my server. I want the server to always have the current working tree as a real directory in the system.</p>
<p>I am using the <code>post-receive</code> git-hook with a command to build the working tree and to override the old tree:</p>
<p><code>git archive master | tar -x -C /dir/to/my/project/</code></p>
<p>However, this approach has a problem: It does not delete files that were deleted/moved in the repo.</p>
<p>I could simply erase the whole project directory but I want to keep all files that are ignored in my .gitignore.</p>
<p>I tried to write a script to delete all files that are not ignored but it takes minutes to process.</p>
<p>Is there a way to replicate the working tree without erasing ignored files?</p>
","4","16145046","",""
"71533343","1782553","2022-03-18 21:26:34","0","169","<git><git-submodules><git-remote><git-subtree>","git push specific files to another remote","<p>I have a git repository containing several linked projects like</p>
<pre><code>|-- configs
|   |-- A.py
|   `-- B.py
|-- datasets
|   |-- a.py
|   |-- b.py
|   `-- c.py
|-- models
|   |-- x.py
|   `-- y.py
`-- projects
    |-- A.py
    |-- B.py
    `-- common.py
</code></pre>
<p>I would like to publish a subset of those files with a new remote. From reading the documentation, it's seems not possible. What alternative would you suggest?
I'm thinking of:</p>
<ul>
<li>copy-pasting to a new repository (but if code is updated on one side, I won't benefit from the changes on the other side</li>
<li>pushing the whole repository to the new remote (but I'm not sure I want to share everything)</li>
<li>Restructuring repo and use submodules or git subtree (but it gets complicated for the common files, that would mean creating 3 repositories (one for each project + one for common things, which is messy to maintain, especially for very few files)</li>
</ul>
<p>Any advice on how to address this problem?</p>
","1","1782553","",""
"53981135","7938658","2018-12-30 20:22:35","1","34","<git><github><version-control><git-remote>","Appropriate location of the .git file, directory arrangement and question about `REMOTE URL`","<p><a href=""https://i.stack.imgur.com/Y0S13.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Y0S13.png"" alt=""My folder arrangement""></a></p>

<p>I have a folder on my Desktop called GitHub. In this GitHub folder are all my repositories which I would like to host on my GitHub remote page (sorry if I get the terminology wrong, by remote page I mean, I want to see each of these folders as a repository on my <a href=""https://www.github.com/abhishekbabuji"" rel=""nofollow noreferrer"">https://www.github.com/abhishekbabuji</a> page. </p>

<p>Now everything was fine, I followed an online tutorial... But I think I really messed up somewhere. </p>

<p>My questions are the following:</p>

<ol>
<li><p>Should there be a <code>.git</code>. inside every single one of the folders/repository? or should there be JUST ONE <code>.git</code> file in this main folder of mine like in the picture and NO <code>.git</code> inside ANY of the folders? I'm given to understand that <code>.git</code> is used to TRACK the changes you make, and you need <strong>not</strong> have one inside every repo.</p></li>
<li><p>Before I push, it looks like I have to set up a remote url as <code>git remote add origin &lt;REMOTE URL&gt;</code> where the <code>&lt;REMOTE URL&gt;</code> is a PATH TO ONE REPO.</p></li>
</ol>

<p>But this is where I'm having the most trouble.. If the <code>&lt;REMOTE URL&gt;</code> is a PATH TO ONE SPECIFIC REPO, wouldn't that mean that every time I make changes, ALL the changes that I make inside these 6 folders you see in the image GO INSIDE THAT SINGLE REPO, instead of there being 6 separate REPOS?</p>

<p>How do I add a <code>&lt;REMOTE URL&gt;</code> ensuring that all the changes go into their 6 respective repos when I do <code>git add .</code>, <code>git commit</code> and <code>git push</code> from the current directory <code>GitHub</code>? I'm willing to make whatever changes I need to ensure I get this right, changes in directory arrangement, changes in <code>.git</code> location, anything. I just want to make sure that there are 6 separate repos on my GitHub page (It currently exists as of now, but I don't know what happened, when I tried doing <code>git push</code>, it started to say that the repo destination does not exist)</p>
","0","7938658","",""
"71810369","15209311","2022-04-09 17:28:45","1","4681","<git><github><version-control><git-remote>","How to check the upstream url in git?","<p>How can I determine the upstream url I configured for my branch in my new project?</p>
<p>I started the new project like this:</p>
<ol>
<li>I cloned a git repo which is a boilerplate.</li>
<li>I opened a new repo in github.</li>
<li>Made some changes in the local cloned repo.</li>
<li>Pushed the newly changes for the first time to the new github repo from the step above. I used the command <code>git remote add origin https://github.com/..../react-UI.git</code> then <code>git push --set-upstream origin main</code> or the short <code>git push -u origin main</code> to configure the upstream url.</li>
</ol>
<p>Now if I use the command <code>git remote show origin</code> it shows me the url of the repo I cloned from.</p>
<p>However, when I navigate in the project directory to <code>./git/</code> and use <code>cat ./config</code> It displays:</p>
<pre><code>[remote &quot;origin&quot;]
        url = https://github.com/....../react-boilerplate.git
        fetch = +refs/heads/main:refs/remotes/origin/main
[branch &quot;main&quot;]
        remote = https://github.com/...../react-UI.git
        merge = refs/heads/main
</code></pre>
<p>Is there a git command to find out the upstream url of the new branch in the new repo? (<code>https://github.com/...../react-UI.git</code>).</p>
<p>For future projects where I might use the boilerplate again from my github repo, should I follow the same instructions? (steps 1-4 above)</p>
<p>Please note that in both repos I use the &quot;<code>main</code>&quot; branch.</p>
","1","15209311","",""
"71881825","18452428","2022-04-15 08:37:25","1","240","<git><git-remote><git-log>","How do I get the last commit date of a remote repository without cloning using the basic git commands?","<p>I need to get the date of the last commit (in seconds) from the remote repository without cloning it, and I need to do this with the basic git commands.</p>
<p>I can get the date of the last commit of the local repository in seconds using <code>git log</code> command, but I did not find how to do the same with the remote repository without cloning it.</p>
<pre><code>git log -1 --format=%ct
</code></pre>
<p>I work in bash.</p>
<p>How can I do that?</p>
","7","18452428","",""
"54196800","5070050","2019-01-15 10:15:53","0","80","<git><authentication><git-remote><git-fetch>","fatal: Authentication failed for repo_b while doing a git fetch repo_b master (currently on repo_a 's master which is forked from repo_b)","<p>I'm currently on <code>repo_a</code> 's <code>master</code> , <code>repo_a</code> is forked from <code>repo_b</code>.</p>

<p>While trying to resolve conflicts, I am doing a <code>git fetch repo_b master</code> </p>

<p>I'm getting a following error:</p>

<pre><code>fatal: Authentication failed for 'repo_b's url'
</code></pre>

<p>I tried unsetting my <code>user.name</code> and <code>user.password</code> in <code>git config --global</code> , even after that I am getting the same error. </p>

<p>Could anyone please let me know where I am wrong ?</p>
","7","5070050","",""
"72231955","8686528","2022-05-13 15:23:04","1","72","<git><git-push><git-remote><git-revert>","How do i restore git push -f without git pull from remote repo?","<p>Local repository A(branch feature/2.0 on A) in my system, i did git remote add associated with a remote repository B  (branch main)<br />
<code>git add remote repository B</code><br />
and then nothing changed, direct git push -f push local repository A to the remote associated repository B, now the associated remote repository B is overwritten by the local repository A content<br />
<code>git push -f global main</code><br />
how to restore the content of the associated remote repository B,i have executed<br />
<code>git reflog --oneline</code><br />
<code>git reset --hard &lt;commit-hash&gt;</code><br />
<code>git push -f origin main</code><br />
and repository B content is still overwritten by repository A,i want to restore repository B</p>
","4","8686528","0","0"
"54247086","424957","2019-01-18 02:44:00","0","95","<git><git-remote><git-fetch>","How to update username and password on git remote?","<p>Though I can git fetch/pull/push on eclipse, but when I git fetch on GitBash, I got error as below, how can I set id/pw on remote?</p>

<pre><code>remote: Invalid username or password.
fatal: Authentication failed for 'https://abc.xyz.co.jp/projects/project.git/'
</code></pre>
","1","424957","",""
"54452559","301513","2019-01-31 02:40:12","2","185","<git><gitlab><git-remote>","git local repo got the latest commit from remote but failed to record it","<p>On one machine git log show it does not get the latest commits from remote repo (after run git pull)</p>

<pre><code>git log --oneline -n 3 origin/develop
5a8e6eb xxx
7547c8a xxx
53294b6 xxx
</code></pre>

<p>On another machine, the correct one, it gets the latest commit <strong>4b45d4b</strong></p>

<pre><code>git log --oneline -n 4 origin/develop
4b45d4b (origin/gq_dev, origin/develop) xxx
5a8e6eb (tag: dev_12) xxx
7547c8a xxx
53294b6 (origin/zsf) xxx
</code></pre>

<p>What strange on the problematic machine is that, my guy told my he actually used <code>git pull origin pull</code> to get the latest commit 4b45d4b from origin. So when run git status it then shew ""Your branch is ahead of 'origin/develop' by 1 commit.""</p>

<pre><code>git status
# On branch develop
# Your branch is ahead of 'origin/develop' by 1 commit.
...

git show
commit 4b45d4bfff7c54169fea7343c5b4f020be556d0a
</code></pre>

<p>So what did that happen and how do I fix it?</p>

<p>------- update -----------</p>

<p>I accidentally fixed it without knowing why, so I added write permission to anyone to .git/logs/refs/remotes/origin/develop file</p>

<p>Originally it was </p>

<pre><code>ls .git/logs/refs/remotes/origin/develop
-rw-rw-r-- 1 gongqiang     gongqiang      2103 Jan 30 19:07 develop
</code></pre>

<p>After adding write permission and run git pull again the problem fixed! But I still don't know why.</p>

<p>----- update 2 ------ </p>

<p>The answer I got from VonC cast some light on the issue but there are still questions left unanswered.</p>

<ol>
<li>ls .git/logs/refs/remotes/origin/develop shew only the guy gongqiang had write permission originally (b/c it was him who run git checkout the develop branch). It was also him that run git pull to get latest commit 4b45d4b.</li>
<li>After I run git status said ""Your branch is ahead of 'origin/develop' by 1 commit"" I checked this file. It did NOT record latest pull. But since it was this guy own the file and run that git pull. Why git failed to record it?</li>
<li>I change this file to write permission to anyone and run git pull again to fix it. But I really doubt this is the ""correct"" fix.</li>
</ol>

<p>Another question raised from here is since this is a branch that more one person will git pull (the integration branch to do test). Is it better to use <code>sudo git pull</code> or change the write permission let other run <code>git pull</code> without sudo</p>

<p>---- update 3 -----</p>

<p>I accepted VonC answer and the link he provided in commits <a href=""https://serverfault.com/questions/26954/how-do-i-share-a-git-repository-with-multiple-users-on-a-machine/27040#27040"">https://serverfault.com/questions/26954/how-do-i-share-a-git-repository-with-multiple-users-on-a-machine/27040#27040</a> is useful. </p>

<p>But I also needed to point out that it is probably impossible (or not worth the effort) to find out why the guy who owned <code>.git/logs/refs/remotes/origin/develop</code> failed to let git update it when he run git pull.</p>

<p>So a lesson I learned here is when finding <code>git status</code> said something strange, check with <code>.git/logs/refs/remotes/origin/develop/branch</code> to verify</p>
","2","301513","0","0"
"54490905","301513","2019-02-02 07:14:26","-1","2156","<git><case-sensitive><git-remote>","“Changes not staged for commit"" even after git commit -am b/c origin has a file with de-capitalize filename","<p>Problem: two files under two different name-cases in the same directory, which I didn't know at the first. So I was quite surprised to see this,</p>

<pre><code>git commit -am ""why""
On branch tmp
Changes not staged for commit:
    modified:   src/view/callCenter/seatReport/SeatSubstate.vue
</code></pre>

<p>Then I found origin has both <strong>SeatSubstate.vue</strong> &amp; <strong>seatSubstate.vue</strong> in the path <code>src/view/callCenter/seatReport</code></p>

<p>But on my mac</p>

<pre><code>ls src/view/callCenter/seatReport/
...     seatSubstate.vue /* did NOT show SeatSubstate.vue only seatSubstate.vue */
</code></pre>

<p>I know there is discussion about <a href=""https://stackoverflow.com/questions/17683458/how-do-i-commit-case-sensitive-only-filename-changes-in-git"">How do I commit case-sensitive only filename changes in Git?</a> </p>

<p>But I still don't understand why git can not commit this file.</p>

<p>Second, how do I fix this problem? For example in that SO discussion many answered mentioned <code>git mv</code> but I am not sure <code>git mv</code> can fix my problem or not.</p>

<p>----- update -----</p>

<p>I suddenly realized my mac (my HD to be exactly) was not case-sensitive (APFS), refer to <a href=""https://apple.stackexchange.com/questions/71357/how-to-check-if-my-hd-is-case-sensitive-or-not"">https://apple.stackexchange.com/questions/71357/how-to-check-if-my-hd-is-case-sensitive-or-not</a>. </p>

<p><a href=""https://i.stack.imgur.com/WxN2n.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/WxN2n.png"" alt=""enter image description here""></a></p>

<p>Normally it should mean SeatSubstate.vue &amp; seatSubstate.vue are the same file, but somehow git makes them 2 different files and cause the trouble. <code>git mv</code> seems to fix the problem but I am not 100% sure.</p>

<p>Refer to <a href=""https://stackoverflow.com/questions/10523849/changing-capitalization-of-filenames-in-git"">Changing capitalization of filenames in Git</a></p>
","10","301513","",""
"56571220","2154359","2019-06-12 22:39:24","2","4010","<git><branch><git-remote>","git remote -v explanation","<p>I'm using <code>git remote -v</code> to see my remote repository.</p>

<pre><code>myname@DESKTOP-0SD47KB MINGW64 ~/Desktop/maevenNetbeans/MyProject(master)
    $ git remote -v
    origin  https://github.com/Myname/MyProject.git (fetch)
    origin  https://github.com/Myname/MyProject.git (push)
    origin2 https://github.com/Myname/MyProject(fetch)
    origin2 https://github.com/Myname/MyProject(push)
</code></pre>

<p>When i created the repository, i linked only one remote repository.</p>

<p>My question is why i'm getting two linked remote repisotory?</p>

<p>What is the meaning of the fetch and push keywords in this context. I know that pushing is for sending and fetching is for retrieving.</p>

<p>is the origin2 a local repository? </p>
","1","2154359","0","0"
"56631973","8811391","2019-06-17 13:05:31","1","58","<git><git-push><git-clone><git-remote>","git-clone local from git-only user to normal user (debian) - git-push takes ages/doesnt finish","<p>Lately I started my own git server which basicaly works fine for now.</p>

<p>The situation: 
On my server there are users like <em>git</em> and <em>user1</em>. Former is supposed to manage/store my git projects and have them accessible locally and remote. The latter is just a plain user I use to run telegram bots or something else.
Usually I create a bare git repository for user <em>git</em> like <code>project1.git</code> and in user <em>user1</em>'s directory there already are subdirectories like <code>project1</code> which I turn into a git system via <code>git init</code>.</p>

<p>Following instructions like <a href=""https://git-scm.com/book/en/v2/Git-on-the-Server-Setting-Up-the-Server"" rel=""nofollow noreferrer"">ProGit</a> I link <code>project1</code> to <code>project1.git</code> as <em>user1</em> like this from <code>project1</code>'s directory:</p>

<pre><code>git remote add origin ssh://git@hostname:1234/pathToGituserDirectory/project1.git 
</code></pre>

<p>After this I can <code>git add</code>, <code>git commit</code>, <code>git push</code> like it is supposed to be.</p>

<p><strong>However</strong>, I would like to save the detour via <code>ssh</code> and clone the repo from user <em>git</em>'s <code>project1.git</code> locally. </p>

<p>As <em>user1</em> from <code>/pathToUser1Directory/</code>'s directory the following is working as well: </p>

<pre><code>user1@hostname:~git clone /pathToGituserDirectory/project1.git. /pathToUser1Directory/project1-clone
Cloning into './project1-clone'...
done.
</code></pre>

<p>Problematic is the use of <code>git push</code> from <em>user1</em>'s newly cloned <code>project1-clone</code>. </p>

<pre><code>user1@hostname:~/project1-clone$ git push origin master
Counting objects: 3, done.
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 255 bytes | 0 bytes/s, done.
Total 3 (delta 1), reused 0 (delta 0)
^C
user1@hostname:~/project1-clone$
</code></pre>

<p>As you can see, pushing added and committed files is not working quite well, since git is stuck  somewhere town the road and I have to intervene.
The added and committed files do not show up on other (remote) members accessing this repo. </p>

<p>Due to my (yet) limited understanding and short experience of git, my questions here are: </p>

<ol>
<li>What is the best way to clone locally from user <em>git</em> (guessing
via <code>ssh</code> is not necessary)</li>
<li>Where did I go wrong/how can I push
files from locally cloned directories.</li>
</ol>

<p>Hopefully someone can track my explanation and has some ideas. Thanks in advance.</p>

<p>PS: I could add user <em>user1</em> to the same group of user <em>git</em>, but there is no difference to what I described</p>

<p>PPS: user <em>git</em> is restricted to <code>git-shell</code>, but that's probably not the issue</p>
","0","8811391","",""
"56636460","1757964","2019-06-17 17:49:54","0","60","<git><git-remote>","Difference between git remote set-url and remote remove then add?","<p>Is there any difference between doing <code>git remote set-url foo bar</code> and:</p>

<pre><code>git remote remove foo
git remote add foo bar
</code></pre>

<p>Assume <code>foo</code> is a single-URL remote.</p>
","1","1757964","",""
"72578955","3696153","2022-06-10 19:20:52","1","1125","<git><git-push><git-clone><git-remote>","git push to another repo","<p>We have an internal GIT Server on an &quot;airgapped&quot; network with no out side connections.</p>
<p>I need to clone the Linux kernel onto the internal server in the closed area
Confused with the steps.</p>
<p>Step 1: Clone kernel, git clone https:/some/place/on/network</p>
<p>Step 2 - Sneaker net into closed (private network) room.</p>
<p>Step 3: Using web page - create the repo on the internal server</p>
<pre><code>(This server cannot clone directly - no connection)
Internal server = Similar to: Gitlab private, or BitBucket Private
</code></pre>
<p>Step 4: STUCK</p>
<ul>
<li>I have an initialized repo locally</li>
<li>I have an initialized repo on the local server (nothing there matters)</li>
<li>I just am required to &quot;create&quot; it using the web server interface</li>
<li>I do not want to push ONE branch, I want to push all branches</li>
<li>I do not want to push &quot;master&quot; - I need to push <em>all</em> branches, <em>all</em> tags</li>
<li>The 'target' (internal server) has nothing useful, I want to replace all of it.</li>
</ul>
<p>what is the git incarnation to push to the internal server? It escapes my google foo</p>
<p>When I try to search:</p>
<ul>
<li>I get pages that talk about using the web-import feature which will not work in my environment.</li>
<li>or creating a new repo .</li>
</ul>
","2","3696153","",""
"55592808","11334314","2019-04-09 12:24:11","1","573","<git><git-rebase><git-push><git-remote>","How to push git snapshots from a private git repository to public git repository?","<p>I have two git repos:</p>

<ol>
<li>A private one for the developers and their daily commits</li>
<li>And a public one for public releases.</li>
</ol>

<p>Whenever I want to release code I want to push a snapshot of the developer repo to the public repo. Since the developer repo might contain some commit messages which are not suitable for public, I want to push to the public repo with a new commit message.</p>

<p>My I idea was (assuming I'm in the master branch of the dev repo):</p>

<pre><code>// create remote 
git remote add p_repo git://some_repo
// create orphaned branch to get rid of commit history
git checkout --orphan pub_sync
// commit 
git commit -m ""release info""
// push local master to remote master
git push p_repo pub_sync:master
</code></pre>

<p>This works for the very first time when the public repo is empty. But for the second public push I get an fast-forward error.
There was no other commit to the public repo in the mean time!</p>

<p>I assume the problem is, that git doesn't know that the orphaned branch is related to the public master.</p>

<p>But how can I solve this?</p>
","0","11334314","0","0"
"55956943","3288380","2019-05-02 16:47:36","1","1460","<git><branch><git-remote>","git: checking out from remote branch changes local files?","<p>I just checked out to a remote branch to see the differences with the local one directly in the files. Didn't make any change at all, but when I try to come back (ck = checkout) to the master, I get the error: ""Your local changes to the following files would be overwritten by checkout:
<a href=""https://i.stack.imgur.com/SnIa6.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/SnIa6.png"" alt=""checkout from remote branch""></a></p>

<p>Edit: the error doesn't say anything about pending commits or anything <a href=""https://i.stack.imgur.com/nAWky.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/nAWky.png"" alt=""it just says abort""></a>  </p>

<p>I don't get why a checkout would make any change to files, but the fact that the checkout is from a remote branch and the error says ""local files"" befuddles me... The local files then have to refer to the local master branch I'm switching to, but I have just committed all changes in that master branch... (!?). 
<a href=""https://i.stack.imgur.com/M7vN8.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/M7vN8.png"" alt=""add .""></a>
<a href=""https://i.stack.imgur.com/Aj3KN.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/Aj3KN.png"" alt=""local master commit""></a></p>

<p>Edit: this is the status right after the commit: 
<a href=""https://i.stack.imgur.com/eUmoz.png"" rel=""nofollow noreferrer""><img src=""https://i.stack.imgur.com/eUmoz.png"" alt=""enter image description here""></a></p>

<p>What is that I (definitively) don't understand? </p>
","0","3288380","",""
"72831418","1168006","2022-07-01 15:21:02","0","340","<windows><visual-studio-code><ssh><git-remote><devcontainer>","Connecting to git remote from Laravel devcontainer on VSC on windows","<p>I'm using a devcontainer in Visaul Studio Code on Windows.
I built this devcontainer with the laravel sail helper. It runs on Docker desktop and WSL2.</p>
<p>This is the devcontainer json:</p>
<pre><code>// https://aka.ms/devcontainer.json
{
    &quot;name&quot;: &quot;Existing Docker Compose (Extend)&quot;,
    &quot;dockerComposeFile&quot;: [
        &quot;../docker-compose.yml&quot;
    ],
    &quot;service&quot;: &quot;laravel.test&quot;,
    &quot;workspaceFolder&quot;: &quot;/var/www/html&quot;,
    &quot;settings&quot;: {},
    &quot;extensions&quot;: [
        // &quot;mikestead.dotenv&quot;,
        // &quot;amiralizadeh9480.laravel-extra-intellisense&quot;,
        // &quot;ryannaddy.laravel-artisan&quot;,
        // &quot;onecentlin.laravel5-snippets&quot;,
        // &quot;onecentlin.laravel-blade&quot;
    ],
    &quot;remoteUser&quot;: &quot;sail&quot;,
    // &quot;forwardPorts&quot;: [],
    // &quot;runServices&quot;: [],
    // &quot;postCreateCommand&quot;: &quot;apt-get update &amp;&amp; apt-get install -y curl&quot;,
    // &quot;shutdownAction&quot;: &quot;none&quot;,
}
</code></pre>
<p>And this is the docker composer file:</p>
<pre><code># For more information: https://laravel.com/docs/sail
version: '3'
services:
    laravel.test:
        build:
            context: ./docker/8.1
            dockerfile: Dockerfile
            args:
                WWWGROUP: '${WWWGROUP}'
                XDEBUG: ${SAIL_DEBUG}
        image: sail-8.1/app
        extra_hosts:
            - 'host.docker.internal:host-gateway'
        ports:
            - '${APP_PORT:-80}:80'
        environment:
            WWWUSER: '${WWWUSER}'
            LARAVEL_SAIL: 1
            XDEBUG_MODE: '${SAIL_XDEBUG_MODE:-off}'
            XDEBUG_CONFIG: '${SAIL_XDEBUG_CONFIG:-client_host=host.docker.internal}'
        volumes:
            - '.:/var/www/html'
        networks:
            - sail
        depends_on:
            - mariadb
    mariadb:
        image: 'mariadb:10'
        ports:
            - '${FORWARD_DB_PORT:-3306}:3306'
        environment:
            MYSQL_ROOT_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ROOT_HOST: &quot;%&quot;
            MYSQL_DATABASE: '${DB_DATABASE}'
            MYSQL_USER: '${DB_USERNAME}'
            MYSQL_PASSWORD: '${DB_PASSWORD}'
            MYSQL_ALLOW_EMPTY_PASSWORD: 'no'
        volumes:
            - 'sail-mariadb:/var/lib/mysql'
            - './vendor/laravel/sail/database/mysql/create-testing-database.sh:/docker-entrypoint-initdb.d/10-create-testing-database.sh'
        networks:
            - sail
        healthcheck:
            test: [&quot;CMD&quot;, &quot;mysqladmin&quot;, &quot;ping&quot;, &quot;-p${DB_PASSWORD}&quot;]
            retries: 3
            timeout: 5s
networks:
    sail:
        driver: bridge
volumes:
    sail-mariadb:
        driver: local
</code></pre>
<p>It's been working really well for working locally and pushing to my github repo.</p>
<p>But now I need to make a push to the production site.</p>
<p>So I tried</p>
<pre><code>git remote add namecheap xx.xx.xx.xx:xxxx/home/user
git push namecheap dev


Unable to negotiate with xx.xx.xx.xx port xxxx: no matching host key type found. Their offer: ssh-rsa,ssh-dss
fatal: Could not read from remote repository.

Please make sure you have the correct access rights
and the repository exists.
</code></pre>
<p>So I tried a few things which didn't work. Could someone kindly explain HOW I could add a ssh key to this devcontainer or forward the agent?
Bear in mind that all the basic linux tools are missing. I don't even have vim or sudo inside this container. And have no idea how to add them. And do not know the SU password.</p>
","0","1168006","",""
"56068177","10173282","2019-05-09 22:02:53","3","1197","<git><github><git-remote>","Does 'git remote add' create just aliases for the same repository?","<p>When I create a new project in my gitlab, I get a default name <code>origin</code> for the repository in the server.
Then I may use <code>git remote add [name] [url]</code> to create several so-called remote repositories. If I type <code>git remote</code>, I just get something followed:</p>
<pre><code>$ git remote
 
name1 
name2
origin
</code></pre>
<p>Actually I can only see one repository namely the project in my gitlab, where are the others? So after I use <code>git push name1</code>, does it <code>push</code> to all of the remote repositories or just <code>push</code> to the <code>origin</code>? I don't see any difference compared to the way without adding names.</p>
","1","10173282","",""
"72916153","5685796","2022-07-08 19:27:18","1","86","<git><shell><github><version-control><git-remote>","How to determine git remote name by giving the repo URL?","<p>I'm trying to get the remote name of the giving URL:</p>
<pre><code>$ git ls-remote --get-url

git@github.com:foo/bar.git
</code></pre>
<pre><code>$ git remote -v

origin  git@github.com:my-username/bar.git (fetch)
origin  git@github.com:my-username/bar.git (push)
upstream    git@github.com:foo/bar.git (fetch)
upstream    git@github.com:foo/bar.git (push)
</code></pre>
<p>Is there any way to find the remote name by giving a URL <code>git@github.com:foo/bar.git</code> to determine which remote it belongs to?</p>
","1","5685796","",""
"73012036","18172687","2022-07-17 13:03:29","1","344","<git><github><git-branch><git-remote>","How to reset a remote git branch to its initial state","<p>I'm working on a git branch that I branched out from the main branch and I have made a number of commits to it but now I want to reset that branch to its earlier state when I first branched it from the main branch. what I  mean is that I want to remove all commits I have already committed and push in there so that it becomes exactly the same as the main.</p>
<p>when I did this :</p>
<pre><code>git reset --hard origin/the-branch-name
</code></pre>
<p>It give this:</p>
<pre><code>HEAD is now at 4176992 This is fifth commit to new branch
</code></pre>
<p>which is the last commit I made. But I want to remove all commits I have made.</p>
<p>Please, how can I achieve this?</p>
","1","18172687","",""
"56249622","970171","2019-05-22 05:05:32","0","92","<git><git-push><git-remote><git-reset>","How to permanently undo recent commits from git remote but keep it in my local?","<p>I made a git repo (only a master branch) with one remote and one local. There are no other users who have cloned it but the remote path can be cloned by a few users.</p>

<p>My local clone is at commit #17 and I have pushed up til commit #12 to the remote. I’ve come to realize that every commit after #6 should not be shared and the remote needs to (for now) remain at #6. </p>

<p>I don’t want to lose all the commits 1-17 and the history but in order to reset the remote my understanding is I have to first reset local to #6 and push -f that. Is it possible for me to reset the remote to #6 while locally remaining ahead at 17 so that if someone clones the remote they can’t see the vulnerable commits?</p>

<p>My idea is that I would need to clone my local to a different local first so that the second local keeps all 17 commits and history before executing the reset followed by the push -f. Is this how one would approach this situation? </p>
","0","970171","",""